; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_bOutlineBoxEnable@@3HA			; g_bOutlineBoxEnable
_BSS	SEGMENT
?g_bOutlineBoxEnable@@3HA DD 01H DUP (?)		; g_bOutlineBoxEnable
_BSS	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
PUBLIC	?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
PUBLIC	??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
PUBLIC	?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
PUBLIC	?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAXPAPAVCGraphicExpandedImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicExpandedImageInstance *> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAPAPAVCGraphicExpandedImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicExpandedImageInstance * *,std::allocator<CGraphicExpandedImageInstance *> >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
PUBLIC	?Type@CWindow@UI@@SAKXZ				; UI::CWindow::Type
PUBLIC	?IsType@CWindow@UI@@QAEHK@Z			; UI::CWindow::IsType
PUBLIC	??0CWindow@UI@@QAE@PAU_object@@@Z		; UI::CWindow::CWindow
PUBLIC	??1CWindow@UI@@UAE@XZ				; UI::CWindow::~CWindow
PUBLIC	?AddChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::AddChild
PUBLIC	?Clear@CWindow@UI@@QAEXXZ			; UI::CWindow::Clear
PUBLIC	?DestroyHandle@CWindow@UI@@QAEXXZ		; UI::CWindow::DestroyHandle
PUBLIC	?Update@CWindow@UI@@QAEXXZ			; UI::CWindow::Update
PUBLIC	?Render@CWindow@UI@@QAEXXZ			; UI::CWindow::Render
PUBLIC	?SetName@CWindow@UI@@QAEXPBD@Z			; UI::CWindow::SetName
PUBLIC	?SetSize@CWindow@UI@@QAEXJJ@Z			; UI::CWindow::SetSize
PUBLIC	?SetHorizontalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetVerticalAlign
PUBLIC	?SetPosition@CWindow@UI@@QAEXJJ@Z		; UI::CWindow::SetPosition
PUBLIC	?GetPosition@CWindow@UI@@QAEXPAJ0@Z		; UI::CWindow::GetPosition
PUBLIC	?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetLocalPosition
PUBLIC	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetMouseLocalPosition
PUBLIC	?UpdateRect@CWindow@UI@@QAEJXZ			; UI::CWindow::UpdateRect
PUBLIC	?Show@CWindow@UI@@QAEXXZ			; UI::CWindow::Show
PUBLIC	?Hide@CWindow@UI@@QAEXXZ			; UI::CWindow::Hide
PUBLIC	?IsRendering@CWindow@UI@@QAE_NXZ		; UI::CWindow::IsRendering
PUBLIC	?GetRoot@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetRoot
PUBLIC	?GetParent@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetParent
PUBLIC	?IsChild@CWindow@UI@@QAE_NPAV12@@Z		; UI::CWindow::IsChild
PUBLIC	?DeleteChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::DeleteChild
PUBLIC	?SetTop@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::SetTop
PUBLIC	?IsIn@CWindow@UI@@QAE_NJJ@Z			; UI::CWindow::IsIn
PUBLIC	?IsIn@CWindow@UI@@QAE_NXZ			; UI::CWindow::IsIn
PUBLIC	?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z		; UI::CWindow::PickWindow
PUBLIC	?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z	; UI::CWindow::PickTopWindow
PUBLIC	?__RemoveReserveChildren@CWindow@UI@@QAEXXZ	; UI::CWindow::__RemoveReserveChildren
PUBLIC	?OnRender@CWindow@UI@@UAEXXZ			; UI::CWindow::OnRender
PUBLIC	?OnUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnUpdate
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?OnSetFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnSetFocus
PUBLIC	?OnKillFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnKillFocus
PUBLIC	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMouseDrag
PUBLIC	?OnMouseOverIn@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CWindow@UI@@UAEXXZ			; UI::CWindow::OnMouseOver
PUBLIC	?OnDrop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnDrop
PUBLIC	?OnTop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnTop
PUBLIC	?OnIMEUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnIMEUpdate
PUBLIC	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMoveWindow
PUBLIC	?RunIMETabEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMETabEvent
PUBLIC	?RunIMEReturnEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMEReturnEvent
PUBLIC	?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunIMEKeyDownEvent
PUBLIC	?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z	; UI::CWindow::RunKeyDownEvent
PUBLIC	?RunKeyUpEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunKeyUpEvent
PUBLIC	?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressEscapeKeyEvent
PUBLIC	?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressExitKeyEvent
PUBLIC	?OnIMETabEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMETabEvent
PUBLIC	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEReturnEvent
PUBLIC	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z		; UI::CWindow::OnIMEKeyDownEvent
PUBLIC	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEChangeCodePage
PUBLIC	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenCandidateListEvent
PUBLIC	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ; UI::CWindow::OnIMECloseCandidateListEvent
PUBLIC	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenReadingWndEvent
PUBLIC	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMECloseReadingWndEvent
PUBLIC	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ		; UI::CWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonUp
PUBLIC	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseRightButtonDoubleClick
PUBLIC	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonDown
PUBLIC	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonUp
PUBLIC	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z		; UI::CWindow::OnMouseWheelScroll
PUBLIC	?SetScrollable@CWindow@UI@@UAEXXZ		; UI::CWindow::SetScrollable
PUBLIC	?OnKeyDown@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyDown
PUBLIC	?OnKeyUp@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyUp
PUBLIC	?OnPressEscapeKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressEscapeKey
PUBLIC	?OnPressExitKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressExitKey
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?OnIsType@CWindow@UI@@UAEHK@Z			; UI::CWindow::OnIsType
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	??_GCWindow@UI@@UAEPAXI@Z			; UI::CWindow::`scalar deleting destructor'
PUBLIC	??0CBox@UI@@QAE@PAU_object@@@Z			; UI::CBox::CBox
PUBLIC	??1CBox@UI@@UAE@XZ				; UI::CBox::~CBox
PUBLIC	?SetColor@CBox@UI@@UAEXK@Z			; UI::CBox::SetColor
PUBLIC	?OnRender@CBox@UI@@MAEXXZ			; UI::CBox::OnRender
PUBLIC	??_GCBox@UI@@UAEPAXI@Z				; UI::CBox::`scalar deleting destructor'
PUBLIC	??0CBar@UI@@QAE@PAU_object@@@Z			; UI::CBar::CBar
PUBLIC	??1CBar@UI@@UAE@XZ				; UI::CBar::~CBar
PUBLIC	?SetColor@CBar@UI@@UAEXK@Z			; UI::CBar::SetColor
PUBLIC	?OnRender@CBar@UI@@MAEXXZ			; UI::CBar::OnRender
PUBLIC	??_GCBar@UI@@UAEPAXI@Z				; UI::CBar::`scalar deleting destructor'
PUBLIC	??0CLine@UI@@QAE@PAU_object@@@Z			; UI::CLine::CLine
PUBLIC	??1CLine@UI@@UAE@XZ				; UI::CLine::~CLine
PUBLIC	?SetColor@CLine@UI@@UAEXK@Z			; UI::CLine::SetColor
PUBLIC	?OnRender@CLine@UI@@MAEXXZ			; UI::CLine::OnRender
PUBLIC	??_GCLine@UI@@UAEPAXI@Z				; UI::CLine::`scalar deleting destructor'
PUBLIC	?Type@CBar3D@UI@@SAKXZ				; UI::CBar3D::Type
PUBLIC	??0CBar3D@UI@@QAE@PAU_object@@@Z		; UI::CBar3D::CBar3D
PUBLIC	??1CBar3D@UI@@UAE@XZ				; UI::CBar3D::~CBar3D
PUBLIC	?SetColor@CBar3D@UI@@QAEXKKK@Z			; UI::CBar3D::SetColor
PUBLIC	?OnRender@CBar3D@UI@@MAEXXZ			; UI::CBar3D::OnRender
PUBLIC	??_GCBar3D@UI@@UAEPAXI@Z			; UI::CBar3D::`scalar deleting destructor'
PUBLIC	??0CTextLine@UI@@QAE@PAU_object@@@Z		; UI::CTextLine::CTextLine
PUBLIC	??1CTextLine@UI@@UAE@XZ				; UI::CTextLine::~CTextLine
PUBLIC	?SetMax@CTextLine@UI@@QAEXH@Z			; UI::CTextLine::SetMax
PUBLIC	?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z	; UI::CTextLine::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetVerticalAlign
PUBLIC	?SetSecret@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetSecret
PUBLIC	?SetOutline@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetOutline
PUBLIC	?SetFeather@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetFeather
PUBLIC	?SetMultiLine@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetMultiLine
PUBLIC	?SetFontName@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetFontName
PUBLIC	?SetFontColor@CTextLine@UI@@QAEXK@Z		; UI::CTextLine::SetFontColor
PUBLIC	?SetLimitWidth@CTextLine@UI@@QAEXM@Z		; UI::CTextLine::SetLimitWidth
PUBLIC	?ShowCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::ShowCursor
PUBLIC	?HideCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::HideCursor
PUBLIC	?GetCursorPosition@CTextLine@UI@@QAEHXZ		; UI::CTextLine::GetCursorPosition
PUBLIC	?SetText@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetText
PUBLIC	?GetText@CTextLine@UI@@QAEPBDXZ			; UI::CTextLine::GetText
PUBLIC	?GetTextSize@CTextLine@UI@@QAEXPAH0@Z		; UI::CTextLine::GetTextSize
PUBLIC	?OnUpdate@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnUpdate
PUBLIC	?OnRender@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnRender
PUBLIC	?OnChangePosition@CTextLine@UI@@MAEXXZ		; UI::CTextLine::OnChangePosition
PUBLIC	?OnSetText@CTextLine@UI@@MAEXPBD@Z		; UI::CTextLine::OnSetText
PUBLIC	??_GCTextLine@UI@@UAEPAXI@Z			; UI::CTextLine::`scalar deleting destructor'
PUBLIC	??0CNumberLine@UI@@QAE@PAU_object@@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??1CNumberLine@UI@@UAE@XZ			; UI::CNumberLine::~CNumberLine
PUBLIC	?SetPath@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetPath
PUBLIC	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z	; UI::CNumberLine::SetHorizontalAlign
PUBLIC	?SetNumber@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetNumber
PUBLIC	?ClearNumber@CNumberLine@UI@@IAEXXZ		; UI::CNumberLine::ClearNumber
PUBLIC	?OnRender@CNumberLine@UI@@MAEXXZ		; UI::CNumberLine::OnRender
PUBLIC	?OnChangePosition@CNumberLine@UI@@MAEXXZ	; UI::CNumberLine::OnChangePosition
PUBLIC	??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??_GCNumberLine@UI@@UAEPAXI@Z			; UI::CNumberLine::`scalar deleting destructor'
PUBLIC	??0CImageBox@UI@@QAE@PAU_object@@@Z		; UI::CImageBox::CImageBox
PUBLIC	??1CImageBox@UI@@UAE@XZ				; UI::CImageBox::~CImageBox
PUBLIC	?LoadImageA@CImageBox@UI@@QAEHPBD@Z		; UI::CImageBox::LoadImageA
PUBLIC	?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z	; UI::CImageBox::SetDiffuseColor
PUBLIC	?GetWidth@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetWidth
PUBLIC	?GetHeight@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetHeight
PUBLIC	?OnCreateInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnUpdate
PUBLIC	?OnRender@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnRender
PUBLIC	?OnChangePosition@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnChangePosition
PUBLIC	??_GCImageBox@UI@@UAEPAXI@Z			; UI::CImageBox::`scalar deleting destructor'
PUBLIC	??0CMarkBox@UI@@QAE@PAU_object@@@Z		; UI::CMarkBox::CMarkBox
PUBLIC	??1CMarkBox@UI@@UAE@XZ				; UI::CMarkBox::~CMarkBox
PUBLIC	?LoadImageA@CMarkBox@UI@@QAEXPBD@Z		; UI::CMarkBox::LoadImageA
PUBLIC	?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z	; UI::CMarkBox::SetDiffuseColor
PUBLIC	?SetIndex@CMarkBox@UI@@QAEXI@Z			; UI::CMarkBox::SetIndex
PUBLIC	?SetScale@CMarkBox@UI@@QAEXM@Z			; UI::CMarkBox::SetScale
PUBLIC	?OnCreateInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnDestroyInstance
PUBLIC	?OnUpdate@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnUpdate
PUBLIC	?OnRender@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnRender
PUBLIC	?OnChangePosition@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnChangePosition
PUBLIC	??_GCMarkBox@UI@@UAEPAXI@Z			; UI::CMarkBox::`scalar deleting destructor'
PUBLIC	?Type@CExpandedImageBox@UI@@SAKXZ		; UI::CExpandedImageBox::Type
PUBLIC	??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z	; UI::CExpandedImageBox::CExpandedImageBox
PUBLIC	??1CExpandedImageBox@UI@@UAE@XZ			; UI::CExpandedImageBox::~CExpandedImageBox
PUBLIC	?SetScale@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetScale
PUBLIC	?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetOrigin
PUBLIC	?SetRotation@CExpandedImageBox@UI@@QAEXM@Z	; UI::CExpandedImageBox::SetRotation
PUBLIC	?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ; UI::CExpandedImageBox::SetRenderingRect
PUBLIC	?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z	; UI::CExpandedImageBox::SetRenderingMode
PUBLIC	?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnUpdate
PUBLIC	?OnRender@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnRender
PUBLIC	?OnIsType@CExpandedImageBox@UI@@MAEHK@Z		; UI::CExpandedImageBox::OnIsType
PUBLIC	??_GCExpandedImageBox@UI@@UAEPAXI@Z		; UI::CExpandedImageBox::`scalar deleting destructor'
PUBLIC	?Type@CAniImageBox@UI@@SAKXZ			; UI::CAniImageBox::Type
PUBLIC	??0CAniImageBox@UI@@QAE@PAU_object@@@Z		; UI::CAniImageBox::CAniImageBox
PUBLIC	??1CAniImageBox@UI@@UAE@XZ			; UI::CAniImageBox::~CAniImageBox
PUBLIC	?SetDelay@CAniImageBox@UI@@QAEXH@Z		; UI::CAniImageBox::SetDelay
PUBLIC	?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z	; UI::CAniImageBox::AppendImage
PUBLIC	?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z	; UI::CAniImageBox::SetRenderingRect
PUBLIC	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z	; UI::CAniImageBox::SetRenderingMode
PUBLIC	?ResetFrame@CAniImageBox@UI@@QAEXXZ		; UI::CAniImageBox::ResetFrame
PUBLIC	?OnUpdate@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnUpdate
PUBLIC	?OnRender@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnRender
PUBLIC	?OnChangePosition@CAniImageBox@UI@@MAEXXZ	; UI::CAniImageBox::OnChangePosition
PUBLIC	?OnEndFrame@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnEndFrame
PUBLIC	?OnIsType@CAniImageBox@UI@@MAEHK@Z		; UI::CAniImageBox::OnIsType
PUBLIC	??_GCAniImageBox@UI@@UAEPAXI@Z			; UI::CAniImageBox::`scalar deleting destructor'
PUBLIC	??0CButton@UI@@QAE@PAU_object@@@Z		; UI::CButton::CButton
PUBLIC	??1CButton@UI@@UAE@XZ				; UI::CButton::~CButton
PUBLIC	?SetUpVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetUpVisual
PUBLIC	?SetOverVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetOverVisual
PUBLIC	?SetDownVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDownVisual
PUBLIC	?SetDisableVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDisableVisual
PUBLIC	?GetUpVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetUpVisualFileName
PUBLIC	?GetOverVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetOverVisualFileName
PUBLIC	?GetDownVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetDownVisualFileName
PUBLIC	?Flash@CButton@UI@@QAEXXZ			; UI::CButton::Flash
PUBLIC	?Enable@CButton@UI@@QAEXXZ			; UI::CButton::Enable
PUBLIC	?Disable@CButton@UI@@QAEXXZ			; UI::CButton::Disable
PUBLIC	?SetUp@CButton@UI@@QAEXXZ			; UI::CButton::SetUp
PUBLIC	?Up@CButton@UI@@QAEXXZ				; UI::CButton::Up
PUBLIC	?Over@CButton@UI@@QAEXXZ			; UI::CButton::Over
PUBLIC	?Down@CButton@UI@@QAEXXZ			; UI::CButton::Down
PUBLIC	?IsDisable@CButton@UI@@QAEHXZ			; UI::CButton::IsDisable
PUBLIC	?IsPressed@CButton@UI@@QAEHXZ			; UI::CButton::IsPressed
PUBLIC	?OnUpdate@CButton@UI@@MAEXXZ			; UI::CButton::OnUpdate
PUBLIC	?OnRender@CButton@UI@@MAEXXZ			; UI::CButton::OnRender
PUBLIC	?OnChangePosition@CButton@UI@@MAEXXZ		; UI::CButton::OnChangePosition
PUBLIC	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ	; UI::CButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ		; UI::CButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverOut
PUBLIC	?IsEnable@CButton@UI@@IAEHXZ			; UI::CButton::IsEnable
PUBLIC	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
PUBLIC	??_GCButton@UI@@UAEPAXI@Z			; UI::CButton::`scalar deleting destructor'
PUBLIC	??0CRadioButton@UI@@QAE@PAU_object@@@Z		; UI::CRadioButton::CRadioButton
PUBLIC	??1CRadioButton@UI@@UAE@XZ			; UI::CRadioButton::~CRadioButton
PUBLIC	?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverOut
PUBLIC	??_GCRadioButton@UI@@UAEPAXI@Z			; UI::CRadioButton::`scalar deleting destructor'
PUBLIC	??0CToggleButton@UI@@QAE@PAU_object@@@Z		; UI::CToggleButton::CToggleButton
PUBLIC	??1CToggleButton@UI@@UAE@XZ			; UI::CToggleButton::~CToggleButton
PUBLIC	?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CToggleButton@UI@@MAEXXZ		; UI::CToggleButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CToggleButton@UI@@MAEXXZ	; UI::CToggleButton::OnMouseOverOut
PUBLIC	??_GCToggleButton@UI@@UAEPAXI@Z			; UI::CToggleButton::`scalar deleting destructor'
PUBLIC	??0CDragButton@UI@@QAE@PAU_object@@@Z		; UI::CDragButton::CDragButton
PUBLIC	??1CDragButton@UI@@UAE@XZ			; UI::CDragButton::~CDragButton
PUBLIC	?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ; UI::CDragButton::SetRestrictMovementArea
PUBLIC	?OnChangePosition@CDragButton@UI@@MAEXXZ	; UI::CDragButton::OnChangePosition
PUBLIC	?OnMouseOverIn@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverOut
PUBLIC	??_GCDragButton@UI@@UAEPAXI@Z			; UI::CDragButton::`scalar deleting destructor'
PUBLIC	??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ; std::mem_fun<long,UI::CWindow>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<UI::CWindow *,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CWindow@UI@@6B@				; UI::CWindow::`vftable'
PUBLIC	??_7CBox@UI@@6B@				; UI::CBox::`vftable'
PUBLIC	??_7CBar@UI@@6B@				; UI::CBar::`vftable'
PUBLIC	??_7CLine@UI@@6B@				; UI::CLine::`vftable'
PUBLIC	??_7CBar3D@UI@@6B@				; UI::CBar3D::`vftable'
PUBLIC	??_7CTextLine@UI@@6B@				; UI::CTextLine::`vftable'
PUBLIC	??_7CNumberLine@UI@@6B@				; UI::CNumberLine::`vftable'
PUBLIC	??_7CImageBox@UI@@6B@				; UI::CImageBox::`vftable'
PUBLIC	??_7CMarkBox@UI@@6B@				; UI::CMarkBox::`vftable'
PUBLIC	??_7CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`vftable'
PUBLIC	??_7CAniImageBox@UI@@6B@			; UI::CAniImageBox::`vftable'
PUBLIC	??_7CButton@UI@@6B@				; UI::CButton::`vftable'
PUBLIC	??_7CRadioButton@UI@@6B@			; UI::CRadioButton::`vftable'
PUBLIC	??_7CToggleButton@UI@@6B@			; UI::CToggleButton::`vftable'
PUBLIC	??_7CDragButton@UI@@6B@				; UI::CDragButton::`vftable'
PUBLIC	??_C@_07EFPFKGGH@CWindow@			; `string'
PUBLIC	??_C@_08DCJEAFK@OnUpdate@			; `string'
PUBLIC	??_C@_08PAJMEILO@OnRender@			; `string'
PUBLIC	??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ ; `string'
PUBLIC	??_C@_04INACLLOK@?$CIii?$CJ@			; `string'
PUBLIC	??_C@_0M@ECAEGPAI@OnMouseDrag@			; `string'
PUBLIC	??_C@_0N@PFKNBOJP@OnMoveWindow@			; `string'
PUBLIC	??_C@_0L@GIMNGBCD@OnSetFocus@			; `string'
PUBLIC	??_C@_0M@CEGPCFGM@OnKillFocus@			; `string'
PUBLIC	??_C@_0O@JKDAFDCC@OnMouseOverIn@		; `string'
PUBLIC	??_C@_0P@KLLBNOAI@OnMouseOverOut@		; `string'
PUBLIC	??_C@_06OCNPCIEO@OnDrop@			; `string'
PUBLIC	??_C@_05LOOKECNH@OnTop@				; `string'
PUBLIC	??_C@_0M@DGOFHNMI@OnIMEUpdate@			; `string'
PUBLIC	??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@	; `string'
PUBLIC	??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@		; `string'
PUBLIC	??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@	; `string'
PUBLIC	??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@	; `string'
PUBLIC	??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@	; `string'
PUBLIC	??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@	; `string'
PUBLIC	??_C@_02NAHCJHOC@UP@				; `string'
PUBLIC	??_C@_04FANAOELO@DOWN@				; `string'
PUBLIC	??_C@_03KJMMOONA@?$CIs?$CJ@			; `string'
PUBLIC	??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@		; `string'
PUBLIC	??_C@_08HFELFLOI@OnIMETab@			; `string'
PUBLIC	??_C@_0M@PILLCCFN@OnIMEReturn@			; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0N@BMPDGPBH@OnIMEKeyDown@			; `string'
PUBLIC	??_C@_0BE@EHKLBB@OnIMEChangeCodePage@		; `string'
PUBLIC	??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@	; `string'
PUBLIC	??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@	; `string'
PUBLIC	??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@		; `string'
PUBLIC	??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@	; `string'
PUBLIC	??_C@_09CMHFBEC@OnKeyDown@			; `string'
PUBLIC	??_C@_07NGNLLPEG@OnKeyUp@			; `string'
PUBLIC	??_C@_0BB@HCFLIMGH@OnPressEscapeKey@		; `string'
PUBLIC	??_C@_0P@KEJGBDKK@OnPressExitKey@		; `string'
PUBLIC	??_C@_06ICLMADCA@CBar3D@			; `string'
PUBLIC	??_C@_04FAHLGLIA@?4fnt@				; `string'
PUBLIC	??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ ; `string'
PUBLIC	??_C@_09GPLBLMNE@colon?4sub@			; `string'
PUBLIC	??_C@_0BB@POBNNLPJ@questionmark?4sub@		; `string'
PUBLIC	??_C@_09JMLAABIP@slash?4sub@			; `string'
PUBLIC	??_C@_0M@MHAKIBOD@percent?4sub@			; `string'
PUBLIC	??_C@_08FPHNCABK@plus?4sub@			; `string'
PUBLIC	??_C@_05PINNHPFB@m?4sub@			; `string'
PUBLIC	??_C@_05FJEGFMDH@g?4sub@			; `string'
PUBLIC	??_C@_05EHJFGOBE@p?4sub@			; `string'
PUBLIC	??_C@_04DLFHDFGL@?4sub@				; `string'
PUBLIC	??_C@_0BC@DJHPPMGJ@CExpandedImageBox@		; `string'
PUBLIC	??_C@_0N@LBBHECOO@CAniImageBox@			; `string'
PUBLIC	??_C@_0L@LBHHAGOH@OnEndFrame@			; `string'
PUBLIC	??_C@_09MFFHPOPB@CallEvent@			; `string'
PUBLIC	??_C@_09FJAHACEO@DownEvent@			; `string'
PUBLIC	??_C@_0M@LEFCMAKP@ShowToolTip@			; `string'
PUBLIC	??_C@_0M@HCIAMHJN@HideToolTip@			; `string'
PUBLIC	??_C@_0L@HGABHAMN@OnToggleUp@			; `string'
PUBLIC	??_C@_0N@NBGLGPDJ@OnToggleDown@			; `string'
PUBLIC	??_C@_06GJPOLLJG@OnMove@			; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_R4CWindow@UI@@6B@				; UI::CWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBox@UI@@6B@				; UI::CBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBox@UI@@@8				; UI::CBox `RTTI Type Descriptor'
PUBLIC	??_R3CBox@UI@@8					; UI::CBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBox@UI@@8					; UI::CBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBox@UI@@8			; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar@UI@@6B@				; UI::CBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar@UI@@@8				; UI::CBar `RTTI Type Descriptor'
PUBLIC	??_R3CBar@UI@@8					; UI::CBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar@UI@@8					; UI::CBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar@UI@@8			; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CLine@UI@@6B@				; UI::CLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLine@UI@@@8				; UI::CLine `RTTI Type Descriptor'
PUBLIC	??_R3CLine@UI@@8				; UI::CLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLine@UI@@8				; UI::CLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLine@UI@@8			; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar3D@UI@@6B@				; UI::CBar3D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar3D@UI@@@8				; UI::CBar3D `RTTI Type Descriptor'
PUBLIC	??_R3CBar3D@UI@@8				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar3D@UI@@8				; UI::CBar3D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar3D@UI@@8			; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextLine@UI@@6B@				; UI::CTextLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextLine@UI@@@8			; UI::CTextLine `RTTI Type Descriptor'
PUBLIC	??_R3CTextLine@UI@@8				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextLine@UI@@8				; UI::CTextLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextLine@UI@@8			; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNumberLine@UI@@6B@			; UI::CNumberLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNumberLine@UI@@@8			; UI::CNumberLine `RTTI Type Descriptor'
PUBLIC	??_R3CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNumberLine@UI@@8			; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CImageBox@UI@@6B@				; UI::CImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageBox@UI@@@8			; UI::CImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CImageBox@UI@@8				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageBox@UI@@8				; UI::CImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageBox@UI@@8			; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMarkBox@UI@@6B@				; UI::CMarkBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMarkBox@UI@@@8				; UI::CMarkBox `RTTI Type Descriptor'
PUBLIC	??_R3CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMarkBox@UI@@8			; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExpandedImageBox@UI@@@8		; UI::CExpandedImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExpandedImageBox@UI@@8		; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAniImageBox@UI@@6B@			; UI::CAniImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CButton@UI@@6B@				; UI::CButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRadioButton@UI@@6B@			; UI::CRadioButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRadioButton@UI@@@8			; UI::CRadioButton `RTTI Type Descriptor'
PUBLIC	??_R3CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRadioButton@UI@@8		; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CToggleButton@UI@@6B@			; UI::CToggleButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCToggleButton@UI@@@8			; UI::CToggleButton `RTTI Type Descriptor'
PUBLIC	??_R3CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CToggleButton@UI@@8		; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDragButton@UI@@6B@			; UI::CDragButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDragButton@UI@@@8			; UI::CDragButton `RTTI Type Descriptor'
PUBLIC	??_R3CDragButton@UI@@8				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDragButton@UI@@8				; UI::CDragButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDragButton@UI@@8			; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_rand:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__PyString_InternFromString:PROC
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z:PROC ; PyCallClassMemberFunc_ByPyString
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?GetDefaultCodePage@@YAKXZ:PROC			; GetDefaultCodePage
EXTRN	?IsType@CResource@@QAE_NK@Z:PROC		; CResource::IsType
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z:PROC ; CResourceManager::GetTypeResourcePointer
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?Type@CGraphicImage@@SAKXZ:PROC			; CGraphicImage::Type
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?IsEmpty@CGraphicImageInstance@@QBE_NXZ:PROC	; CGraphicImageInstance::IsEmpty
EXTRN	?GetWidth@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetWidth
EXTRN	?GetHeight@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetHeight
EXTRN	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ:PROC ; CGraphicImageInstance::GetGraphicImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??0CGraphicTextInstance@@QAE@XZ:PROC		; CGraphicTextInstance::CGraphicTextInstance
EXTRN	??1CGraphicTextInstance@@UAE@XZ:PROC		; CGraphicTextInstance::~CGraphicTextInstance
EXTRN	?Destroy@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Destroy
EXTRN	?Update@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Update
EXTRN	?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z:PROC ; CGraphicTextInstance::Render
EXTRN	?ShowCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::ShowCursor
EXTRN	?HideCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::HideCursor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXK@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXMMMM@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetHorizonalAlign
EXTRN	?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetVerticalAlign
EXTRN	?SetMax@CGraphicTextInstance@@QAEXH@Z:PROC	; CGraphicTextInstance::SetMax
EXTRN	?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z:PROC ; CGraphicTextInstance::SetTextPointer
EXTRN	?SetValue@CGraphicTextInstance@@QAEXPBDI@Z:PROC	; CGraphicTextInstance::SetValue
EXTRN	?SetPosition@CGraphicTextInstance@@QAEXMMM@Z:PROC ; CGraphicTextInstance::SetPosition
EXTRN	?SetSecret@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetSecret
EXTRN	?SetOutline@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetOutline
EXTRN	?SetFeather@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetFeather
EXTRN	?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z:PROC ; CGraphicTextInstance::SetMultiLine
EXTRN	?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z:PROC ; CGraphicTextInstance::SetLimitWidth
EXTRN	?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z:PROC ; CGraphicTextInstance::GetTextSize
EXTRN	?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CGraphicTextInstance::GetValueStringReference
EXTRN	?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z:PROC ; CGraphicTextInstance::PixelPositionToCharacterPosition
EXTRN	?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z:PROC ; CGraphicMarkInstance::SetImageFileName
EXTRN	?Render@CGraphicMarkInstance@@QAEXXZ:PROC	; CGraphicMarkInstance::Render
EXTRN	?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z:PROC ; CGraphicMarkInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicMarkInstance@@QAEXMM@Z:PROC ; CGraphicMarkInstance::SetPosition
EXTRN	?SetIndex@CGraphicMarkInstance@@QAEXI@Z:PROC	; CGraphicMarkInstance::SetIndex
EXTRN	?SetScale@CGraphicMarkInstance@@QAEXM@Z:PROC	; CGraphicMarkInstance::SetScale
EXTRN	?Load@CGraphicMarkInstance@@QAEXXZ:PROC		; CGraphicMarkInstance::Load
EXTRN	?GetWidth@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetWidth
EXTRN	?GetHeight@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetHeight
EXTRN	?New@CGraphicMarkInstance@@SAPAV1@XZ:PROC	; CGraphicMarkInstance::New
EXTRN	?Delete@CGraphicMarkInstance@@SAXPAV1@@Z:PROC	; CGraphicMarkInstance::Delete
EXTRN	?Destroy@CGraphicExpandedImageInstance@@QAEXXZ:PROC ; CGraphicExpandedImageInstance::Destroy
EXTRN	?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetOrigin
EXTRN	?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z:PROC ; CGraphicExpandedImageInstance::SetRotation
EXTRN	?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetScale
EXTRN	?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingRect
EXTRN	?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingMode
EXTRN	?New@CGraphicExpandedImageInstance@@SAPAV1@XZ:PROC ; CGraphicExpandedImageInstance::New
EXTRN	?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z:PROC ; CGraphicExpandedImageInstance::Delete
EXTRN	?RenderLine2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderLine2d
EXTRN	?RenderBox2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBox2d
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXK@Z:PROC		; CScreen::SetDiffuseColor
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?BuildEmptyTuple@UI@@YAPAU_object@@XZ:PROC	; UI::BuildEmptyTuple
EXTRN	??_ECWindow@UI@@UAEPAXI@Z:PROC			; UI::CWindow::`vector deleting destructor'
EXTRN	??_ECBox@UI@@UAEPAXI@Z:PROC			; UI::CBox::`vector deleting destructor'
EXTRN	??_ECBar@UI@@UAEPAXI@Z:PROC			; UI::CBar::`vector deleting destructor'
EXTRN	??_ECLine@UI@@UAEPAXI@Z:PROC			; UI::CLine::`vector deleting destructor'
EXTRN	??_ECBar3D@UI@@UAEPAXI@Z:PROC			; UI::CBar3D::`vector deleting destructor'
EXTRN	??_ECTextLine@UI@@UAEPAXI@Z:PROC		; UI::CTextLine::`vector deleting destructor'
EXTRN	??_ECNumberLine@UI@@UAEPAXI@Z:PROC		; UI::CNumberLine::`vector deleting destructor'
EXTRN	??_ECImageBox@UI@@UAEPAXI@Z:PROC		; UI::CImageBox::`vector deleting destructor'
EXTRN	??_ECMarkBox@UI@@UAEPAXI@Z:PROC			; UI::CMarkBox::`vector deleting destructor'
EXTRN	??_ECExpandedImageBox@UI@@UAEPAXI@Z:PROC	; UI::CExpandedImageBox::`vector deleting destructor'
EXTRN	??_ECAniImageBox@UI@@UAEPAXI@Z:PROC		; UI::CAniImageBox::`vector deleting destructor'
EXTRN	??_ECButton@UI@@UAEPAXI@Z:PROC			; UI::CButton::`vector deleting destructor'
EXTRN	??_ECRadioButton@UI@@UAEPAXI@Z:PROC		; UI::CRadioButton::`vector deleting destructor'
EXTRN	??_ECToggleButton@UI@@UAEPAXI@Z:PROC		; UI::CToggleButton::`vector deleting destructor'
EXTRN	??_ECDragButton@UI@@UAEPAXI@Z:PROC		; UI::CDragButton::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A:BYTE ; CGraphicExpandedImageInstance::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
_BSS	SEGMENT
?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::poFuncName_OnUpdate
_BSS	ENDS
;	COMDAT ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CDragButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDragButton@UI@@8 DD FLAT:??_R0?AVCDragButton@UI@@@8 ; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CDragButton@UI@@8
rdata$r	SEGMENT
??_R2CDragButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CDragButton@UI@@8 ; UI::CDragButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CDragButton@UI@@8
rdata$r	SEGMENT
??_R3CDragButton@UI@@8 DD 00H				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDragButton@UI@@@8
data$r	SEGMENT
??_R0?AVCDragButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CDragButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDragButton@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDragButton@UI@@6B@
rdata$r	SEGMENT
??_R4CDragButton@UI@@6B@ DD 00H				; UI::CDragButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDragButton@UI@@@8
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CToggleButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CToggleButton@UI@@8 DD FLAT:??_R0?AVCToggleButton@UI@@@8 ; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CToggleButton@UI@@8
rdata$r	SEGMENT
??_R2CToggleButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CToggleButton@UI@@8 ; UI::CToggleButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CToggleButton@UI@@8
rdata$r	SEGMENT
??_R3CToggleButton@UI@@8 DD 00H				; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCToggleButton@UI@@@8
data$r	SEGMENT
??_R0?AVCToggleButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CToggleButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCToggleButton@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CToggleButton@UI@@6B@
rdata$r	SEGMENT
??_R4CToggleButton@UI@@6B@ DD 00H			; UI::CToggleButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCToggleButton@UI@@@8
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRadioButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRadioButton@UI@@8 DD FLAT:??_R0?AVCRadioButton@UI@@@8 ; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CRadioButton@UI@@8
rdata$r	SEGMENT
??_R2CRadioButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CRadioButton@UI@@8 ; UI::CRadioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CRadioButton@UI@@8
rdata$r	SEGMENT
??_R3CRadioButton@UI@@8 DD 00H				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRadioButton@UI@@@8
data$r	SEGMENT
??_R0?AVCRadioButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CRadioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRadioButton@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRadioButton@UI@@6B@
rdata$r	SEGMENT
??_R4CRadioButton@UI@@6B@ DD 00H			; UI::CRadioButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRadioButton@UI@@@8
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$r	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CButton@UI@@6B@
rdata$r	SEGMENT
??_R4CButton@UI@@6B@ DD 00H				; UI::CButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCButton@UI@@@8
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$r	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAniImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CAniImageBox@UI@@6B@ DD 00H			; UI::CAniImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAniImageBox@UI@@@8
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExpandedImageBox@UI@@8 DD FLAT:??_R0?AVCExpandedImageBox@UI@@@8 ; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R2CExpandedImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CExpandedImageBox@UI@@8 ; UI::CExpandedImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R3CExpandedImageBox@UI@@8 DD 00H			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExpandedImageBox@UI@@@8
data$r	SEGMENT
??_R0?AVCExpandedImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CExpandedImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExpandedImageBox@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CExpandedImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CExpandedImageBox@UI@@6B@ DD 00H			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExpandedImageBox@UI@@@8
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMarkBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMarkBox@UI@@8 DD FLAT:??_R0?AVCMarkBox@UI@@@8 ; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CMarkBox@UI@@8
rdata$r	SEGMENT
??_R2CMarkBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CMarkBox@UI@@8 ; UI::CMarkBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CMarkBox@UI@@8
rdata$r	SEGMENT
??_R3CMarkBox@UI@@8 DD 00H				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMarkBox@UI@@@8
data$r	SEGMENT
??_R0?AVCMarkBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CMarkBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMarkBox@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMarkBox@UI@@6B@
rdata$r	SEGMENT
??_R4CMarkBox@UI@@6B@ DD 00H				; UI::CMarkBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMarkBox@UI@@@8
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageBox@UI@@8 DD FLAT:??_R0?AVCImageBox@UI@@@8 ; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageBox@UI@@8
rdata$r	SEGMENT
??_R2CImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CImageBox@UI@@8 ; UI::CImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CImageBox@UI@@8
rdata$r	SEGMENT
??_R3CImageBox@UI@@8 DD 00H				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageBox@UI@@@8
data$r	SEGMENT
??_R0?AVCImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImageBox@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CImageBox@UI@@6B@ DD 00H				; UI::CImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImageBox@UI@@@8
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNumberLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNumberLine@UI@@8 DD FLAT:??_R0?AVCNumberLine@UI@@@8 ; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CNumberLine@UI@@8
rdata$r	SEGMENT
??_R2CNumberLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CNumberLine@UI@@8 ; UI::CNumberLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CNumberLine@UI@@8
rdata$r	SEGMENT
??_R3CNumberLine@UI@@8 DD 00H				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNumberLine@UI@@@8
data$r	SEGMENT
??_R0?AVCNumberLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CNumberLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNumberLine@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CNumberLine@UI@@6B@
rdata$r	SEGMENT
??_R4CNumberLine@UI@@6B@ DD 00H				; UI::CNumberLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNumberLine@UI@@@8
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextLine@UI@@8 DD FLAT:??_R0?AVCTextLine@UI@@@8 ; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextLine@UI@@8
rdata$r	SEGMENT
??_R2CTextLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CTextLine@UI@@8 ; UI::CTextLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextLine@UI@@8
rdata$r	SEGMENT
??_R3CTextLine@UI@@8 DD 00H				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextLine@UI@@@8
data$r	SEGMENT
??_R0?AVCTextLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CTextLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextLine@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CTextLine@UI@@6B@
rdata$r	SEGMENT
??_R4CTextLine@UI@@6B@ DD 00H				; UI::CTextLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextLine@UI@@@8
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar3D@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar3D@UI@@8 DD FLAT:??_R0?AVCBar3D@UI@@@8 ; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar3D@UI@@8
rdata$r	SEGMENT
??_R2CBar3D@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar3D@UI@@8	; UI::CBar3D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar3D@UI@@8
rdata$r	SEGMENT
??_R3CBar3D@UI@@8 DD 00H				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar3D@UI@@@8
data$r	SEGMENT
??_R0?AVCBar3D@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CBar3D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar3D@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBar3D@UI@@6B@
rdata$r	SEGMENT
??_R4CBar3D@UI@@6B@ DD 00H				; UI::CBar3D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar3D@UI@@@8
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLine@UI@@8 DD FLAT:??_R0?AVCLine@UI@@@8	; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CLine@UI@@8
rdata$r	SEGMENT
??_R2CLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CLine@UI@@8	; UI::CLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CLine@UI@@8
rdata$r	SEGMENT
??_R3CLine@UI@@8 DD 00H					; UI::CLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLine@UI@@@8
data$r	SEGMENT
??_R0?AVCLine@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLine@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CLine@UI@@6B@
rdata$r	SEGMENT
??_R4CLine@UI@@6B@ DD 00H				; UI::CLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLine@UI@@@8
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar@UI@@8 DD FLAT:??_R0?AVCBar@UI@@@8	; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar@UI@@8
rdata$r	SEGMENT
??_R2CBar@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar@UI@@8	; UI::CBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar@UI@@8
rdata$r	SEGMENT
??_R3CBar@UI@@8 DD 00H					; UI::CBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar@UI@@@8
data$r	SEGMENT
??_R0?AVCBar@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBar@UI@@6B@
rdata$r	SEGMENT
??_R4CBar@UI@@6B@ DD 00H				; UI::CBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar@UI@@@8
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBox@UI@@8 DD FLAT:??_R0?AVCBox@UI@@@8	; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBox@UI@@8
rdata$r	SEGMENT
??_R2CBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CBox@UI@@8	; UI::CBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBox@UI@@8
rdata$r	SEGMENT
??_R3CBox@UI@@8 DD 00H					; UI::CBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBox@UI@@@8
data$r	SEGMENT
??_R0?AVCBox@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBox@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBox@UI@@6B@
rdata$r	SEGMENT
??_R4CBox@UI@@6B@ DD 00H				; UI::CBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBox@UI@@@8
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CWindow@UI@@6B@ DD 00H				; UI::CWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWindow@UI@@@8
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GJPOLLJG@OnMove@
CONST	SEGMENT
??_C@_06GJPOLLJG@OnMove@ DB 'OnMove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBGLGPDJ@OnToggleDown@
CONST	SEGMENT
??_C@_0N@NBGLGPDJ@OnToggleDown@ DB 'OnToggleDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HGABHAMN@OnToggleUp@
CONST	SEGMENT
??_C@_0L@HGABHAMN@OnToggleUp@ DB 'OnToggleUp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCIAMHJN@HideToolTip@
CONST	SEGMENT
??_C@_0M@HCIAMHJN@HideToolTip@ DB 'HideToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LEFCMAKP@ShowToolTip@
CONST	SEGMENT
??_C@_0M@LEFCMAKP@ShowToolTip@ DB 'ShowToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FJAHACEO@DownEvent@
CONST	SEGMENT
??_C@_09FJAHACEO@DownEvent@ DB 'DownEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFFHPOPB@CallEvent@
CONST	SEGMENT
??_C@_09MFFHPOPB@CallEvent@ DB 'CallEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBHHAGOH@OnEndFrame@
CONST	SEGMENT
??_C@_0L@LBHHAGOH@OnEndFrame@ DB 'OnEndFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBBHECOO@CAniImageBox@
CONST	SEGMENT
??_C@_0N@LBBHECOO@CAniImageBox@ DB 'CAniImageBox', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
CONST	SEGMENT
??_C@_0BC@DJHPPMGJ@CExpandedImageBox@ DB 'CExpandedImageBox', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DLFHDFGL@?4sub@
CONST	SEGMENT
??_C@_04DLFHDFGL@?4sub@ DB '.sub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHJFGOBE@p?4sub@
CONST	SEGMENT
??_C@_05EHJFGOBE@p?4sub@ DB 'p.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJEGFMDH@g?4sub@
CONST	SEGMENT
??_C@_05FJEGFMDH@g?4sub@ DB 'g.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PINNHPFB@m?4sub@
CONST	SEGMENT
??_C@_05PINNHPFB@m?4sub@ DB 'm.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPHNCABK@plus?4sub@
CONST	SEGMENT
??_C@_08FPHNCABK@plus?4sub@ DB 'plus.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHAKIBOD@percent?4sub@
CONST	SEGMENT
??_C@_0M@MHAKIBOD@percent?4sub@ DB 'percent.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JMLAABIP@slash?4sub@
CONST	SEGMENT
??_C@_09JMLAABIP@slash?4sub@ DB 'slash.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POBNNLPJ@questionmark?4sub@
CONST	SEGMENT
??_C@_0BB@POBNNLPJ@questionmark?4sub@ DB 'questionmark.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPLBLMNE@colon?4sub@
CONST	SEGMENT
??_C@_09GPLBLMNE@colon?4sub@ DB 'colon.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
CONST	SEGMENT
??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ DB 'd:/ymir work'
	DB	'/ui/game/taskbar/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FAHLGLIA@?4fnt@
CONST	SEGMENT
??_C@_04FAHLGLIA@?4fnt@ DB '.fnt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICLMADCA@CBar3D@
CONST	SEGMENT
??_C@_06ICLMADCA@CBar3D@ DB 'CBar3D', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KEJGBDKK@OnPressExitKey@
CONST	SEGMENT
??_C@_0P@KEJGBDKK@OnPressExitKey@ DB 'OnPressExitKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
CONST	SEGMENT
??_C@_0BB@HCFLIMGH@OnPressEscapeKey@ DB 'OnPressEscapeKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGNLLPEG@OnKeyUp@
CONST	SEGMENT
??_C@_07NGNLLPEG@OnKeyUp@ DB 'OnKeyUp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMHFBEC@OnKeyDown@
CONST	SEGMENT
??_C@_09CMHFBEC@OnKeyDown@ DB 'OnKeyDown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
CONST	SEGMENT
??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@ DB 'OnIMECloseReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
CONST	SEGMENT
??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@ DB 'OnIMEOpenReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
CONST	SEGMENT
??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@ DB 'OnIMECloseCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
CONST	SEGMENT
??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@ DB 'OnIMEOpenCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
CONST	SEGMENT
??_C@_0BE@EHKLBB@OnIMEChangeCodePage@ DB 'OnIMEChangeCodePage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
CONST	SEGMENT
??_C@_0N@BMPDGPBH@OnIMEKeyDown@ DB 'OnIMEKeyDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PILLCCFN@OnIMEReturn@
CONST	SEGMENT
??_C@_0M@PILLCCFN@OnIMEReturn@ DB 'OnIMEReturn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFELFLOI@OnIMETab@
CONST	SEGMENT
??_C@_08HFELFLOI@OnIMETab@ DB 'OnIMETab', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@
CONST	SEGMENT
??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@ DB 'OnMouseWheelScroll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJMMOONA@?$CIs?$CJ@
CONST	SEGMENT
??_C@_03KJMMOONA@?$CIs?$CJ@ DB '(s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FANAOELO@DOWN@
CONST	SEGMENT
??_C@_04FANAOELO@DOWN@ DB 'DOWN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NAHCJHOC@UP@
CONST	SEGMENT
??_C@_02NAHCJHOC@UP@ DB 'UP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
CONST	SEGMENT
??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@ DB 'OnMouseMiddleButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
CONST	SEGMENT
??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@ DB 'OnMouseMiddleButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
CONST	SEGMENT
??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ DB 'OnMouseRightButtonD'
	DB	'oubleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
CONST	SEGMENT
??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@ DB 'OnMouseRightButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
CONST	SEGMENT
??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@ DB 'OnMouseRightButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
CONST	SEGMENT
??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ DB 'OnMouseLeftButtonDou'
	DB	'bleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
CONST	SEGMENT
??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@ DB 'OnMouseLeftButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
CONST	SEGMENT
??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@ DB 'OnMouseLeftButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGOFHNMI@OnIMEUpdate@
CONST	SEGMENT
??_C@_0M@DGOFHNMI@OnIMEUpdate@ DB 'OnIMEUpdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LOOKECNH@OnTop@
CONST	SEGMENT
??_C@_05LOOKECNH@OnTop@ DB 'OnTop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCNPCIEO@OnDrop@
CONST	SEGMENT
??_C@_06OCNPCIEO@OnDrop@ DB 'OnDrop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLLBNOAI@OnMouseOverOut@
CONST	SEGMENT
??_C@_0P@KLLBNOAI@OnMouseOverOut@ DB 'OnMouseOverOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JKDAFDCC@OnMouseOverIn@
CONST	SEGMENT
??_C@_0O@JKDAFDCC@OnMouseOverIn@ DB 'OnMouseOverIn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEGPCFGM@OnKillFocus@
CONST	SEGMENT
??_C@_0M@CEGPCFGM@OnKillFocus@ DB 'OnKillFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GIMNGBCD@OnSetFocus@
CONST	SEGMENT
??_C@_0L@GIMNGBCD@OnSetFocus@ DB 'OnSetFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFKNBOJP@OnMoveWindow@
CONST	SEGMENT
??_C@_0N@PFKNBOJP@OnMoveWindow@ DB 'OnMoveWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ECAEGPAI@OnMouseDrag@
CONST	SEGMENT
??_C@_0M@ECAEGPAI@OnMouseDrag@ DB 'OnMouseDrag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04INACLLOK@?$CIii?$CJ@
CONST	SEGMENT
??_C@_04INACLLOK@?$CIii?$CJ@ DB '(ii)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
CONST	SEGMENT
??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ DB ' CWindow::'
	DB	'SetTop - Failed to find child window', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PAJMEILO@OnRender@
CONST	SEGMENT
??_C@_08PAJMEILO@OnRender@ DB 'OnRender', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DCJEAFK@OnUpdate@
CONST	SEGMENT
??_C@_08DCJEAFK@OnUpdate@ DB 'OnUpdate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFPFKGGH@CWindow@
CONST	SEGMENT
??_C@_07EFPFKGGH@CWindow@ DB 'CWindow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CDragButton@UI@@6B@
CONST	SEGMENT
??_7CDragButton@UI@@6B@ DD FLAT:??_R4CDragButton@UI@@6B@ ; UI::CDragButton::`vftable'
	DD	FLAT:??_ECDragButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CToggleButton@UI@@6B@
CONST	SEGMENT
??_7CToggleButton@UI@@6B@ DD FLAT:??_R4CToggleButton@UI@@6B@ ; UI::CToggleButton::`vftable'
	DD	FLAT:??_ECToggleButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CRadioButton@UI@@6B@
CONST	SEGMENT
??_7CRadioButton@UI@@6B@ DD FLAT:??_R4CRadioButton@UI@@6B@ ; UI::CRadioButton::`vftable'
	DD	FLAT:??_ECRadioButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CButton@UI@@6B@
CONST	SEGMENT
??_7CButton@UI@@6B@ DD FLAT:??_R4CButton@UI@@6B@	; UI::CButton::`vftable'
	DD	FLAT:??_ECButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CAniImageBox@UI@@6B@
CONST	SEGMENT
??_7CAniImageBox@UI@@6B@ DD FLAT:??_R4CAniImageBox@UI@@6B@ ; UI::CAniImageBox::`vftable'
	DD	FLAT:??_ECAniImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnEndFrame@CAniImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CExpandedImageBox@UI@@6B@
CONST	SEGMENT
??_7CExpandedImageBox@UI@@6B@ DD FLAT:??_R4CExpandedImageBox@UI@@6B@ ; UI::CExpandedImageBox::`vftable'
	DD	FLAT:??_ECExpandedImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CMarkBox@UI@@6B@
CONST	SEGMENT
??_7CMarkBox@UI@@6B@ DD FLAT:??_R4CMarkBox@UI@@6B@	; UI::CMarkBox::`vftable'
	DD	FLAT:??_ECMarkBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CImageBox@UI@@6B@
CONST	SEGMENT
??_7CImageBox@UI@@6B@ DD FLAT:??_R4CImageBox@UI@@6B@	; UI::CImageBox::`vftable'
	DD	FLAT:??_ECImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CNumberLine@UI@@6B@
CONST	SEGMENT
??_7CNumberLine@UI@@6B@ DD FLAT:??_R4CNumberLine@UI@@6B@ ; UI::CNumberLine::`vftable'
	DD	FLAT:??_ECNumberLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CTextLine@UI@@6B@
CONST	SEGMENT
??_7CTextLine@UI@@6B@ DD FLAT:??_R4CTextLine@UI@@6B@	; UI::CTextLine::`vftable'
	DD	FLAT:??_ECTextLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetText@CTextLine@UI@@MAEXPBD@Z
CONST	ENDS
;	COMDAT ??_7CBar3D@UI@@6B@
CONST	SEGMENT
??_7CBar3D@UI@@6B@ DD FLAT:??_R4CBar3D@UI@@6B@		; UI::CBar3D::`vftable'
	DD	FLAT:??_ECBar3D@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBar3D@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CLine@UI@@6B@
CONST	SEGMENT
??_7CLine@UI@@6B@ DD FLAT:??_R4CLine@UI@@6B@		; UI::CLine::`vftable'
	DD	FLAT:??_ECLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CLine@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CBar@UI@@6B@
CONST	SEGMENT
??_7CBar@UI@@6B@ DD FLAT:??_R4CBar@UI@@6B@		; UI::CBar::`vftable'
	DD	FLAT:??_ECBar@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBar@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBar@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CBox@UI@@6B@
CONST	SEGMENT
??_7CBox@UI@@6B@ DD FLAT:??_R4CBox@UI@@6B@		; UI::CBox::`vftable'
	DD	FLAT:??_ECBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBox@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CWindow@UI@@6B@
CONST	SEGMENT
??_7CWindow@UI@@6B@ DD FLAT:??_R4CWindow@UI@@6B@	; UI::CWindow::`vftable'
	DD	FLAT:??_ECWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CAniImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CAniImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMarkBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CNumberLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CTextLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CBar3D@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0
__ehfuncinfo$?Type@CBar3D@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CBar3D@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<UI::CWindow *,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<UI::CWindow *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z
_TEXT	SEGMENT
__Left_size$1$ = -12					; size = 4
__Fancyptr$1 = -8					; size = 4
__New_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$1$ = 12						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4396 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 4397 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4398 :     const auto _Left_size  = _Left.size();

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Left$[ebp]
  0000a	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 4396 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  0000e	57		 push	 edi

; 4397 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4398 :     const auto _Left_size  = _Left.size();

  0000f	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00012	89 4d f4	 mov	 DWORD PTR __Left_size$1$[ebp], ecx

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00015	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
$LL34@operator:
  00018	8a 06		 mov	 al, BYTE PTR [esi]
  0001a	46		 inc	 esi
  0001b	84 c0		 test	 al, al
  0001d	75 f9		 jne	 SHORT $LL34@operator

; 4399 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4400 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0001f	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00024	2b f2		 sub	 esi, edx

; 4399 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4400 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00026	2b c1		 sub	 eax, ecx
  00028	3b c6		 cmp	 eax, esi
  0002a	0f 82 a1 00 00
	00		 jb	 $LN37@operator

; 2153 :         return _BUF_SIZE <= _Myres;

  00030	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00034	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00036	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@operator:

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2447 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003b	03 ce		 add	 ecx, esi

; 2448 :         size_type _New_capacity = _BUF_SIZE - 1;

  0003d	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00042	89 4d fc	 mov	 DWORD PTR __New_size$1$[ebp], ecx

; 2449 :         auto& _My_data          = _Mypair._Myval2;
; 2450 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00045	89 45 0c	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00048	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0004f	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2453 :         if (_New_capacity < _New_size) {

  00056	3b cf		 cmp	 ecx, edi
  00058	76 42		 jbe	 SHORT $LN16@operator

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0005a	8b f9		 mov	 edi, ecx
  0005c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0005f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00065	76 07		 jbe	 SHORT $LN23@operator

; 4203 :             return _Max;

  00067	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
  0006c	eb 0a		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0006e	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00073	3b f8		 cmp	 edi, eax
  00075	0f 42 f8	 cmovb	 edi, eax
$LN22@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2455 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00078	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2455 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00081	89 45 0c	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  00084	89 45 f8	 mov	 DWORD PTR __Fancyptr$1[ebp], eax

; 2456 :             _Ptr                    = _Unfancy(_Fancyptr);
; 2457 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  00087	8d 45 f8	 lea	 eax, DWORD PTR __Fancyptr$1[ebp]
  0008a	50		 push	 eax
  0008b	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0008e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00093	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00096	83 c4 0c	 add	 esp, 12			; 0000000cH
  00099	8b 4d fc	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
$LN16@operator:

; 2461 :         _My_data._Myres  = _New_capacity;

  0009c	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009f	8b 7d f4	 mov	 edi, DWORD PTR __Left_size$1$[ebp]
  000a2	57		 push	 edi
  000a3	53		 push	 ebx
  000a4	8b 5d 0c	 mov	 ebx, DWORD PTR __Ptr$1$[ebp]
  000a7	53		 push	 ebx

; 2460 :         _My_data._Mysize = _New_size;

  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000ab	e8 00 00 00 00	 call	 _memcpy
  000b0	56		 push	 esi
  000b1	ff 75 10	 push	 DWORD PTR __Right$[ebp]

; 2463 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000b4	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 _memcpy

; 2464 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000bd	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c0	83 c4 18	 add	 esp, 24			; 00000018H

; 4402 :     }
; 4403 : 
; 4404 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000c3	5f		 pop	 edi

; 2464 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000c4	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0

; 4402 :     }
; 4403 : 
; 4404 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000c8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx

; 4405 : }

  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN37@operator:

; 4401 :         _Xlen_string();

  000d1	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN35@operator:
  000d6	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\functional
;	COMDAT ??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Pm$ = 12						; size = 4
??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z PROC ; std::mem_fun<long,UI::CWindow>, COMDAT

; 540  : _NODISCARD mem_fun_t<_Result, _Ty> mem_fun(_Result (_Ty::*_Pm)()) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 485  :     explicit mem_fun_t(_Result (_Ty::*_Pm)()) : _Pmemfun(_Pm) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Pm$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :     return mem_fun_t<_Result, _Ty>(_Pm);
; 542  : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ENDP ; std::mem_fun<long,UI::CWindow>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDragButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDragButton@UI@@UAEPAXI@Z PROC			; UI::CDragButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDragButton@UI@@UAE@XZ ; UI::CDragButton::~CDragButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 1c 01 00 00	 push	 284			; 0000011cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDragButton@UI@@UAEPAXI@Z ENDP			; UI::CDragButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 2038 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2039 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 2040 : 			return;
; 2041 : 
; 2042 : 		CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 2043 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2044 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverOut@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 2028 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2029 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 2030 : 
; 2031 : 			return;
; 2032 : 
; 2033 : 		CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 2034 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2035 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverIn@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\functional
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$1$ = -8						; size = 4
tv902 = -4						; size = 4
?OnChangePosition@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnChangePosition, COMDAT
; _this$ = ecx

; 1999 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx

; 2000 : 		m_x = max(m_x, m_restrictArea.left);

  0000d	8b 83 0c 01 00
	00		 mov	 eax, DWORD PTR [ebx+268]
  00013	8b 53 24	 mov	 edx, DWORD PTR [ebx+36]
  00016	3b d0		 cmp	 edx, eax

; 2001 : 		m_y = max(m_y, m_restrictArea.top);

  00018	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]

; 2002 : 		m_x = min(m_x, max(0, m_restrictArea.right - m_lWidth));

  0001b	8b b3 14 01 00
	00		 mov	 esi, DWORD PTR [ebx+276]
  00021	0f 4e d0	 cmovle	 edx, eax
  00024	8b 83 10 01 00
	00		 mov	 eax, DWORD PTR [ebx+272]
  0002a	3b c8		 cmp	 ecx, eax
  0002c	0f 4e c8	 cmovle	 ecx, eax
  0002f	2b 73 2c	 sub	 esi, DWORD PTR [ebx+44]
  00032	b8 00 00 00 00	 mov	 eax, 0
  00037	0f 49 c6	 cmovns	 eax, esi
  0003a	3b d0		 cmp	 edx, eax
  0003c	7c 09		 jl	 SHORT $LN12@OnChangePo
  0003e	33 c0		 xor	 eax, eax
  00040	8b d6		 mov	 edx, esi
  00042	85 f6		 test	 esi, esi
  00044	0f 48 d0	 cmovs	 edx, eax
$LN12@OnChangePo:

; 2003 : 		m_y = min(m_y, max(0, m_restrictArea.bottom - m_lHeight));

  00047	8b b3 18 01 00
	00		 mov	 esi, DWORD PTR [ebx+280]
  0004d	b8 00 00 00 00	 mov	 eax, 0
  00052	57		 push	 edi
  00053	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
  00056	2b f7		 sub	 esi, edi
  00058	89 53 24	 mov	 DWORD PTR [ebx+36], edx
  0005b	0f 49 c6	 cmovns	 eax, esi
  0005e	3b c8		 cmp	 ecx, eax
  00060	7c 09		 jl	 SHORT $LN18@OnChangePo
  00062	33 c0		 xor	 eax, eax
  00064	8b ce		 mov	 ecx, esi
  00066	85 f6		 test	 esi, esi
  00068	0f 48 c8	 cmovs	 ecx, eax
$LN18@OnChangePo:

; 2004 : 
; 2005 : 		m_rect.left = m_x;
; 2006 : 		m_rect.top = m_y;
; 2007 : 
; 2008 : 		if (m_pParent)

  0006b	8b 73 60	 mov	 esi, DWORD PTR [ebx+96]
  0006e	89 4b 28	 mov	 DWORD PTR [ebx+40], ecx
  00071	89 53 34	 mov	 DWORD PTR [ebx+52], edx
  00074	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
  00077	85 f6		 test	 esi, esi
  00079	74 0c		 je	 SHORT $LN2@OnChangePo

; 2009 : 		{
; 2010 : 			const RECT & c_rRect = m_pParent->GetRect();
; 2011 : 			m_rect.left += c_rRect.left;

  0007b	03 56 34	 add	 edx, DWORD PTR [esi+52]
  0007e	89 53 34	 mov	 DWORD PTR [ebx+52], edx

; 2012 : 			m_rect.top += c_rRect.top;

  00081	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  00084	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
$LN2@OnChangePo:

; 2013 : 		}
; 2014 : 
; 2015 : 		m_rect.right = m_rect.left + m_lWidth;

  00087	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0008a	03 c2		 add	 eax, edx
  0008c	89 43 3c	 mov	 DWORD PTR [ebx+60], eax

; 2016 : 		m_rect.bottom = m_rect.top + m_lHeight;

  0008f	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
  00092	89 43 40	 mov	 DWORD PTR [ebx+64], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00095	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  00098	89 45 fc	 mov	 DWORD PTR tv902[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 2018 : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  0009b	68 00 00 00 00	 push	 OFFSET ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000a0	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 2018 : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  000a2	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ; std::mem_fun<long,UI::CWindow>
  000ab	83 c4 08	 add	 esp, 8
  000ae	8b 38		 mov	 edi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 74   :         return _Ptr == _Right._Ptr;

  000b0	3b 75 fc	 cmp	 esi, DWORD PTR tv902[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000b3	74 11		 je	 SHORT $LN40@OnChangePo
  000b5	8b 5d fc	 mov	 ebx, DWORD PTR tv902[ebp]
$LL41@OnChangePo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\functional

; 488  :         return (_Pleft->*_Pmemfun)();

  000b8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000bb	ff d7		 call	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  000bd	8b 36		 mov	 esi, DWORD PTR [esi]

; 74   :         return _Ptr == _Right._Ptr;

  000bf	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000c1	75 f5		 jne	 SHORT $LL41@OnChangePo
  000c3	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN40@OnChangePo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 2020 : 		if (m_pcurVisual)

  000c6	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  000cc	5f		 pop	 edi
  000cd	85 c9		 test	 ecx, ecx
  000cf	74 23		 je	 SHORT $LN3@OnChangePo

; 2021 : 			m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  000d1	66 0f 6e 43 38	 movd	 xmm0, DWORD PTR [ebx+56]
  000d6	83 ec 08	 sub	 esp, 8
  000d9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000dc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e2	66 0f 6e 43 34	 movd	 xmm0, DWORD PTR [ebx+52]
  000e7	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ef	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN3@OnChangePo:

; 2022 : 
; 2023 : 		if (IsPressed())

  000f4	8b cb		 mov	 ecx, ebx
  000f6	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  000fb	85 c0		 test	 eax, eax
  000fd	74 16		 je	 SHORT $LN4@OnChangePo

; 2024 : 			PyCallClassMemberFunc(m_poHandler, "OnMove", BuildEmptyTuple());

  000ff	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00104	50		 push	 eax
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_06GJPOLLJG@OnMove@
  0010a	ff 73 5c	 push	 DWORD PTR [ebx+92]
  0010d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@OnChangePo:

; 2025 : 	}

  00115	5e		 pop	 esi
  00116	5b		 pop	 ebx
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
?OnChangePosition@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z
_TEXT	SEGMENT
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
_iwidth$ = 16						; size = 4
_iheight$ = 20						; size = 4
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z PROC ; UI::CDragButton::SetRestrictMovementArea, COMDAT
; _this$ = ecx

; 1991 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1992 : 		m_restrictArea.left = ix;

  00003	8b 55 08	 mov	 edx, DWORD PTR _ix$[ebp]

; 1993 : 		m_restrictArea.top = iy;
; 1994 : 		m_restrictArea.right = ix + iwidth;

  00006	8b 45 10	 mov	 eax, DWORD PTR _iwidth$[ebp]
  00009	03 c2		 add	 eax, edx
  0000b	89 91 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], edx
  00011	89 81 14 01 00
	00		 mov	 DWORD PTR [ecx+276], eax

; 1995 : 		m_restrictArea.bottom = iy + iheight;

  00017	8b 45 14	 mov	 eax, DWORD PTR _iheight$[ebp]
  0001a	56		 push	 esi
  0001b	8b 75 0c	 mov	 esi, DWORD PTR _iy$[ebp]
  0001e	03 c6		 add	 eax, esi
  00020	89 b1 10 01 00
	00		 mov	 DWORD PTR [ecx+272], esi
  00026	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  0002c	5e		 pop	 esi

; 1996 : 	}

  0002d	5d		 pop	 ebp
  0002e	c2 10 00	 ret	 16			; 00000010H
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ENDP ; UI::CDragButton::SetRestrictMovementArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CDragButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CDragButton@UI@@UAE@XZ PROC				; UI::CDragButton::~CDragButton, COMDAT
; _this$ = ecx

; 1987 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDragButton@UI@@6B@

; 1988 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CDragButton@UI@@UAE@XZ ENDP				; UI::CDragButton::~CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CDragButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CDragButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CDragButton::CDragButton, COMDAT
; _this$ = ecx

; 1979 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 99   : 			void			RemoveFlag(DWORD flag)	{ REMOVE_BIT(m_dwFlag, flag);	}

  00012	81 66 58 7f ff
	ff ff		 and	 DWORD PTR [esi+88], -129 ; ffffff7fH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1979 : 	{

  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDragButton@UI@@6B@

; 1980 : 		CWindow::RemoveFlag(CWindow::FLAG_NOT_CAPTURE);
; 1981 : 		m_restrictArea.left = 0;

  0001f	c7 86 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+268], 0

; 1982 : 		m_restrictArea.top = 0;

  00029	c7 86 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+272], 0

; 1983 : 		m_restrictArea.right = CWindowManager::Instance().GetScreenWidth();

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00038	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003b	89 86 14 01 00
	00		 mov	 DWORD PTR [esi+276], eax

; 1984 : 		m_restrictArea.bottom = CWindowManager::Instance().GetScreenHeight();

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	89 86 18 01 00
	00		 mov	 DWORD PTR [esi+280], eax

; 1985 : 	}

  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0CDragButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CDragButton::CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCToggleButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCToggleButton@UI@@UAEPAXI@Z PROC			; UI::CToggleButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CToggleButton@UI@@UAE@XZ ; UI::CToggleButton::~CToggleButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCToggleButton@UI@@UAEPAXI@Z ENDP			; UI::CToggleButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1962 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1963 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1964 : 			return;
; 1965 : 
; 1966 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1967 : 		{
; 1968 : 			SetCurrentVisual(&m_upVisual);

  00015	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1969 : 		}
; 1970 : 
; 1971 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1972 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 1950 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1951 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1952 : 			return;
; 1953 : 
; 1954 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1955 : 		{
; 1956 : 			SetCurrentVisual(&m_overVisual);

  00015	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1957 : 		}
; 1958 : 
; 1959 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1960 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1946 : 		return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 1947 : 	}

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1923 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1924 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 57		 je	 SHORT $LN8@OnMouseLef

; 1925 : 			return TRUE;
; 1926 : 
; 1927 : 		if (m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	8b ce		 mov	 ecx, esi
  00015	57		 push	 edi
  00016	74 2d		 je	 SHORT $LN3@OnMouseLef

; 1928 : 		{
; 1929 : 			SetUp();

  00018	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1930 : 			if (IsIn())

  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00024	84 c0		 test	 al, al
  00026	ba ac 00 00 00	 mov	 edx, 172		; 000000acH
  0002b	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  00030	0f 45 ca	 cmovne	 ecx, edx

; 1931 : 				SetCurrentVisual(&m_overVisual);
; 1932 : 			else
; 1933 : 				SetCurrentVisual(&m_upVisual);
; 1934 : 			PyCallClassMemberFunc(m_poHandler, "OnToggleUp", BuildEmptyTuple());

  00033	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00036	8b ce		 mov	 ecx, esi
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  0003e	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0L@HGABHAMN@OnToggleUp@

; 1935 : 		}

  00043	eb 0a		 jmp	 SHORT $LN4@OnMouseLef
$LN3@OnMouseLef:

; 1936 : 		else
; 1937 : 		{
; 1938 : 			Down();

  00045	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 1939 : 			PyCallClassMemberFunc(m_poHandler, "OnToggleDown", BuildEmptyTuple());

  0004a	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0N@NBGLGPDJ@OnToggleDown@
$LN4@OnMouseLef:

; 1940 : 		}
; 1941 : 
; 1942 : 		return TRUE;

  0004f	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00054	50		 push	 eax
  00055	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00058	57		 push	 edi
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	5f		 pop	 edi
$LN8@OnMouseLef:

; 1943 : 	}

  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5e		 pop	 esi
  00069	c3		 ret	 0
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CToggleButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CToggleButton@UI@@UAE@XZ PROC			; UI::CToggleButton::~CToggleButton, COMDAT
; _this$ = ecx

; 1919 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CToggleButton@UI@@6B@

; 1920 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CToggleButton@UI@@UAE@XZ ENDP			; UI::CToggleButton::~CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CToggleButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CToggleButton::CToggleButton, COMDAT
; _this$ = ecx

; 1916 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CToggleButton@UI@@6B@

; 1917 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CToggleButton::CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRadioButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRadioButton@UI@@UAEPAXI@Z PROC			; UI::CRadioButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRadioButton@UI@@UAE@XZ ; UI::CRadioButton::~CRadioButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRadioButton@UI@@UAEPAXI@Z ENDP			; UI::CRadioButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1899 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1900 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1901 : 			return;
; 1902 : 
; 1903 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1904 : 		{
; 1905 : 			SetCurrentVisual(&m_upVisual);

  00015	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1906 : 		}
; 1907 : 
; 1908 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1909 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 1887 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1888 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1889 : 			return;
; 1890 : 
; 1891 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1892 : 		{
; 1893 : 			SetCurrentVisual(&m_overVisual);

  00015	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1894 : 		}
; 1895 : 
; 1896 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1897 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1884 : 		return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 1885 : 	}

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1870 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1871 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 26		 je	 SHORT $LN6@OnMouseLef

; 1872 : 			return TRUE;
; 1873 : 
; 1874 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 1d		 jne	 SHORT $LN6@OnMouseLef

; 1875 : 		{
; 1876 : 			Down();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 1877 : 			PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  0001c	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  00027	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@OnMouseLef:

; 1878 : 		}
; 1879 : 
; 1880 : 		return TRUE;
; 1881 : 	}

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	5e		 pop	 esi
  00038	c3		 ret	 0
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CRadioButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CRadioButton@UI@@UAE@XZ PROC				; UI::CRadioButton::~CRadioButton, COMDAT
; _this$ = ecx

; 1866 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRadioButton@UI@@6B@

; 1867 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CRadioButton@UI@@UAE@XZ ENDP				; UI::CRadioButton::~CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CRadioButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CRadioButton::CRadioButton, COMDAT
; _this$ = ecx

; 1863 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRadioButton@UI@@6B@

; 1864 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CRadioButton::CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCButton@UI@@UAEPAXI@Z PROC				; UI::CButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCButton@UI@@UAEPAXI@Z ENDP				; UI::CButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pVisual$ = 8						; size = 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z PROC ; UI::CButton::SetCurrentVisual, COMDAT
; _this$ = ecx

; 1843 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]

; 1844 : 		m_pcurVisual = pVisual;
; 1845 : 		m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  00008	83 ec 08	 sub	 esp, 8
  0000b	8b 45 08	 mov	 eax, DWORD PTR _pVisual$[ebp]
  0000e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00011	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax
  00017	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001d	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00022	8b c8		 mov	 ecx, eax
  00024	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1846 : 	}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ENDP ; UI::CButton::SetCurrentVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsEnable@CButton@UI@@IAEHXZ
_TEXT	SEGMENT
?IsEnable@CButton@UI@@IAEHXZ PROC			; UI::CButton::IsEnable, COMDAT
; _this$ = ecx

; 1850 : 		return m_bEnable;

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 1851 : 	}

  00003	c3		 ret	 0
?IsEnable@CButton@UI@@IAEHXZ ENDP			; UI::CButton::IsEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1834 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1835 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 1836 : 			return;
; 1837 : 
; 1838 : 		SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1839 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1840 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverOut@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 1826 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1827 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 1828 : 			return;
; 1829 : 
; 1830 : 		Over();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?Over@CButton@UI@@QAEXXZ ; UI::CButton::Over

; 1831 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1832 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverIn@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1814 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1815 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1c		 je	 SHORT $LN5@OnMouseLef

; 1816 : 			return TRUE;
; 1817 : 		if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 11		 je	 SHORT $LN5@OnMouseLef

; 1818 : 			return TRUE;
; 1819 : 
; 1820 : 		m_isPressed = FALSE;
; 1821 : 		Up();

  00017	8b ce		 mov	 ecx, esi
  00019	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00023	e8 00 00 00 00	 call	 ?Up@CButton@UI@@QAEXXZ	; UI::CButton::Up
$LN5@OnMouseLef:

; 1822 : 
; 1823 : 		return TRUE;
; 1824 : 	}

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ PROC	; UI::CButton::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 1805 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1806 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 07		 je	 SHORT $LN4@OnMouseLef

; 1807 : 			return TRUE;
; 1808 : 
; 1809 : 		OnMouseLeftButtonDown();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	ff 50 58	 call	 DWORD PTR [eax+88]
$LN4@OnMouseLef:

; 1810 : 
; 1811 : 		return TRUE;
; 1812 : 	}

  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ENDP	; UI::CButton::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1795 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1796 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 11		 je	 SHORT $LN4@OnMouseLef

; 1797 : 			return TRUE;
; 1798 : 
; 1799 : 		m_isPressed = TRUE;
; 1800 : 		Down();

  0000c	8b ce		 mov	 ecx, esi
  0000e	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00018	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN4@OnMouseLef:

; 1801 : 
; 1802 : 		return TRUE;
; 1803 : 	}

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	5e		 pop	 esi
  00023	c3		 ret	 0
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CButton@UI@@MAEXXZ PROC		; UI::CButton::OnChangePosition, COMDAT
; _this$ = ecx

; 1790 : 		if (m_pcurVisual)

  00000	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00006	85 c0		 test	 eax, eax
  00008	74 25		 je	 SHORT $LN2@OnChangePo

; 1791 : 			m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  0000a	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000f	83 ec 08	 sub	 esp, 8
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00020	8b c8		 mov	 ecx, eax
  00022	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN2@OnChangePo:

; 1792 : 	}

  0002f	c3		 ret	 0
?OnChangePosition@CButton@UI@@MAEXXZ ENDP		; UI::CButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnRender, COMDAT
; _this$ = ecx

; 1770 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1771 : 		if (!IsShow())

  00003	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  00007	74 53		 je	 SHORT $LN1@OnRender

; 1772 : 			return;
; 1773 : 
; 1774 : 		if (m_pcurVisual)

  00009	83 be 88 00 00
	00 00		 cmp	 DWORD PTR [esi+136], 0
  00010	74 34		 je	 SHORT $LN3@OnRender

; 1775 : 		{
; 1776 : 			if (m_isFlash)

  00012	83 be 84 00 00
	00 00		 cmp	 DWORD PTR [esi+132], 0
  00019	74 20		 je	 SHORT $LN6@OnRender

; 1777 : 			if (!IsIn())

  0001b	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00020	84 c0		 test	 al, al
  00022	75 17		 jne	 SHORT $LN6@OnRender

; 1778 : 			if (int(timeGetTime() / 500)%2)

  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  0002a	8b c8		 mov	 ecx, eax
  0002c	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00031	f7 e1		 mul	 ecx
  00033	c1 ea 05	 shr	 edx, 5
  00036	f6 c2 01	 test	 dl, 1
  00039	75 21		 jne	 SHORT $LN1@OnRender
$LN6@OnRender:

; 1779 : 			{
; 1780 : 				return;
; 1781 : 			}
; 1782 : 
; 1783 : 			m_pcurVisual->Render();

  0003b	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  00041	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1784 : 		}
; 1785 : 
; 1786 : 		PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  00046	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0004b	50		 push	 eax
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  00051	ff 76 5c	 push	 DWORD PTR [esi+92]
  00054	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 1787 : 	}

  0005c	5e		 pop	 esi
  0005d	c3		 ret	 0
?OnRender@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnUpdate, COMDAT
; _this$ = ecx

; 1768 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsPressed@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsPressed@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsPressed, COMDAT
; _this$ = ecx

; 1855 : 		return m_isPressed;

  00000	8b 81 80 00 00
	00		 mov	 eax, DWORD PTR [ecx+128]

; 1856 : 	}

  00006	c3		 ret	 0
?IsPressed@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsPressed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsDisable@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsDisable@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsDisable, COMDAT
; _this$ = ecx

; 1738 : 		return m_bEnable;

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 1739 : 	}

  00003	c3		 ret	 0
?IsDisable@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsDisable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Down@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Down@CButton@UI@@QAEXXZ PROC				; UI::CButton::Down, COMDAT
; _this$ = ecx

; 1760 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1761 : 		m_isPressed = TRUE;
; 1762 : 		SetCurrentVisual(&m_downVisual);

  00003	8d 86 cc 00 00
	00		 lea	 eax, DWORD PTR [esi+204]
  00009	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1763 : 		PyCallClassMemberFunc(m_poHandler, "DownEvent", BuildEmptyTuple());

  00019	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0001e	50		 push	 eax
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_09FJAHACEO@DownEvent@
  00024	ff 76 5c	 push	 DWORD PTR [esi+92]
  00027	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5e		 pop	 esi

; 1764 : 	}

  00030	c3		 ret	 0
?Down@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Down
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Over@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Over@CButton@UI@@QAEXXZ PROC				; UI::CButton::Over, COMDAT
; _this$ = ecx

; 1757 : 		SetCurrentVisual(&m_overVisual);

  00000	8d 81 ac 00 00
	00		 lea	 eax, DWORD PTR [ecx+172]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1758 : 	}

  0000c	c3		 ret	 0
?Over@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Over
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Up@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Up@CButton@UI@@QAEXXZ PROC				; UI::CButton::Up, COMDAT
; _this$ = ecx

; 1747 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1748 : 		if (IsIn())

  00003	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00008	84 c0		 test	 al, al
  0000a	b9 ac 00 00 00	 mov	 ecx, 172		; 000000acH
  0000f	ba 8c 00 00 00	 mov	 edx, 140		; 0000008cH
  00014	0f 45 d1	 cmovne	 edx, ecx

; 1749 : 			SetCurrentVisual(&m_overVisual);
; 1750 : 		else
; 1751 : 			SetCurrentVisual(&m_upVisual);
; 1752 : 
; 1753 : 		PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  00017	8b ce		 mov	 ecx, esi
  00019	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00022	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  0002d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00030	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	5e		 pop	 esi

; 1754 : 	}

  00039	c3		 ret	 0
?Up@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Up
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUp@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?SetUp@CButton@UI@@QAEXXZ PROC				; UI::CButton::SetUp, COMDAT
; _this$ = ecx

; 1742 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1743 : 		SetCurrentVisual(&m_upVisual);

  00003	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1744 : 		m_isPressed = FALSE;

  0000f	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00019	5e		 pop	 esi

; 1745 : 	}

  0001a	c3		 ret	 0
?SetUp@CButton@UI@@QAEXXZ ENDP				; UI::CButton::SetUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Disable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Disable@CButton@UI@@QAEXXZ PROC			; UI::CButton::Disable, COMDAT
; _this$ = ecx

; 1730 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 1731 : 		m_bEnable = FALSE;
; 1732 : 		if (!m_disableVisual.IsEmpty())

  00004	8d be ec 00 00
	00		 lea	 edi, DWORD PTR [esi+236]
  0000a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00011	8b cf		 mov	 ecx, edi
  00013	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00018	84 c0		 test	 al, al
  0001a	75 08		 jne	 SHORT $LN2@Disable

; 1733 : 			SetCurrentVisual(&m_disableVisual);

  0001c	57		 push	 edi
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@Disable:

; 1734 : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?Disable@CButton@UI@@QAEXXZ ENDP			; UI::CButton::Disable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Enable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Enable@CButton@UI@@QAEXXZ PROC				; UI::CButton::Enable, COMDAT
; _this$ = ecx

; 1724 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1725 : 		SetUp();

  00003	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1726 : 		m_bEnable = TRUE;

  00008	c7 46 7c 01 00
	00 00		 mov	 DWORD PTR [esi+124], 1
  0000f	5e		 pop	 esi

; 1727 : 	}

  00010	c3		 ret	 0
?Enable@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Flash@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Flash@CButton@UI@@QAEXXZ PROC				; UI::CButton::Flash, COMDAT
; _this$ = ecx

; 1720 : 		m_isFlash = TRUE;

  00000	c7 81 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+132], 1

; 1721 : 	}

  0000a	c3		 ret	 0
?Flash@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Flash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetDownVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetDownVisualFileName, COMDAT
; _this$ = ecx

; 1715 : 		return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2153 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetDownVis
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1715 : 		return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetDownVis:

; 1716 : 	}

  00016	c3		 ret	 0
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetDownVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetOverVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetOverVisualFileName, COMDAT
; _this$ = ecx

; 1711 : 		return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2153 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetOverVis
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1711 : 		return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetOverVis:

; 1712 : 	}

  00016	c3		 ret	 0
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetOverVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetUpVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ PROC		; UI::CButton::GetUpVisualFileName, COMDAT
; _this$ = ecx

; 1707 : 		return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2153 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetUpVisua
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1707 : 		return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetUpVisua:

; 1708 : 	}

  00016	c3		 ret	 0
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ ENDP		; UI::CButton::GetUpVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDisableVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDisableVisual, COMDAT
; _this$ = ecx

; 1691 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1692 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1693 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetDisable

; 1694 : 			return FALSE;
; 1695 : 
; 1696 : 		m_disableVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1697 : 		if (m_downVisual.IsEmpty())

  00035	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetDisable

; 1698 : 			return FALSE;
; 1699 : 
; 1700 : 		SetSize(m_disableVisual.GetWidth(), m_disableVisual.GetHeight());

  00044	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1701 : 
; 1702 : 		return TRUE;
; 1703 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetDisable:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDisableVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDownVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDownVisual, COMDAT
; _this$ = ecx

; 1677 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1678 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1679 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetDownVis

; 1680 : 			return FALSE;
; 1681 : 
; 1682 : 		m_downVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1683 : 		if (m_downVisual.IsEmpty())

  00035	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetDownVis

; 1684 : 			return FALSE;
; 1685 : 
; 1686 : 		SetSize(m_downVisual.GetWidth(), m_downVisual.GetHeight());

  00044	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1687 : 
; 1688 : 		return TRUE;
; 1689 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetDownVis:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDownVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOverVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetOverVisual, COMDAT
; _this$ = ecx

; 1663 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1664 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1665 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetOverVis

; 1666 : 			return FALSE;
; 1667 : 
; 1668 : 		m_overVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1669 : 		if (m_overVisual.IsEmpty())

  00035	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetOverVis

; 1670 : 			return FALSE;
; 1671 : 
; 1672 : 		SetSize(m_overVisual.GetWidth(), m_overVisual.GetHeight());

  00044	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1673 : 
; 1674 : 		return TRUE;
; 1675 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetOverVis:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetOverVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUpVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z PROC			; UI::CButton::SetUpVisual, COMDAT
; _this$ = ecx

; 1646 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1647 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1648 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 44		 je	 SHORT $LN5@SetUpVisua

; 1649 : 			return FALSE;
; 1650 : 
; 1651 : 		m_upVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	8d b7 8c 00 00
	00		 lea	 esi, DWORD PTR [edi+140]
  0002f	53		 push	 ebx
  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1652 : 		if (m_upVisual.IsEmpty())

  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0003e	84 c0		 test	 al, al
  00040	75 2b		 jne	 SHORT $LN5@SetUpVisua

; 1653 : 			return FALSE;
; 1654 : 
; 1655 : 		SetSize(m_upVisual.GetWidth(), m_upVisual.GetHeight());

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00049	50		 push	 eax
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00051	50		 push	 eax
  00052	8b cf		 mov	 ecx, edi
  00054	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1656 : 		//
; 1657 : 		SetCurrentVisual(&m_upVisual);

  00059	56		 push	 esi
  0005a	8b cf		 mov	 ecx, edi
  0005c	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00061	5f		 pop	 edi

; 1658 : 		//
; 1659 : 
; 1660 : 		return TRUE;
; 1661 : 	}

  00062	5e		 pop	 esi
  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5b		 pop	 ebx
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
$LN5@SetUpVisua:
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	33 c0		 xor	 eax, eax
  00071	5b		 pop	 ebx
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z ENDP			; UI::CButton::SetUpVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CButton@UI@@UAE@XZ PROC				; UI::CButton::~CButton, COMDAT
; _this$ = ecx

; 1642 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1643 : 	}

  00003	8d 8e ec 00 00
	00		 lea	 ecx, DWORD PTR [esi+236]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00014	8d 8e cc 00 00
	00		 lea	 ecx, DWORD PTR [esi+204]
  0001a	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0001f	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00025	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0002a	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00030	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00035	8b ce		 mov	 ecx, esi
  00037	5e		 pop	 esi
  00038	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CButton@UI@@UAE@XZ ENDP				; UI::CButton::~CButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CButton@UI@@QAE@PAU_object@@@Z PROC			; UI::CButton::CButton, COMDAT
; _this$ = ecx

; 1638 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1633 : 		:	CWindow(ppyObject),

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1638 : 	{

  00031	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  00044	c7 46 7c 01 00
	00 00		 mov	 DWORD PTR [esi+124], 1
  0004b	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00055	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  0005f	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
  00069	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0006e	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0007d	8d 8e cc 00 00
	00		 lea	 ecx, DWORD PTR [esi+204]
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00087	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0008c	8d 8e ec 00 00
	00		 lea	 ecx, DWORD PTR [esi+236]
  00092	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00096	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 98   : 			void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  0009b	81 4e 58 80 00
	00 00		 or	 DWORD PTR [esi+88], 128	; 00000080H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1640 : 	}

  000a2	8b c6		 mov	 eax, esi
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	5e		 pop	 esi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00011	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0001f	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  0002d	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CButton@UI@@QAE@PAU_object@@@Z ENDP			; UI::CButton::CButton
; Function compile flags: /Ogtp
;	COMDAT ??_GCAniImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAniImageBox@UI@@UAEPAXI@Z PROC			; UI::CAniImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 8c 00 00 00	 push	 140			; 0000008cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCAniImageBox@UI@@UAEPAXI@Z ENDP			; UI::CAniImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CAniImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z PROC			; UI::CAniImageBox::OnIsType, COMDAT
; _this$ = ecx

; 1492 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1493 : 		if (CAniImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CAniImageBox@UI@@SAKXZ ; UI::CAniImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1494 : 			return TRUE;
; 1495 : 
; 1496 : 		return FALSE;
; 1497 : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z ENDP			; UI::CAniImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnEndFrame@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnEndFrame, COMDAT
; _this$ = ecx

; 1624 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1625 : 		PyCallClassMemberFunc(m_poHandler, "OnEndFrame", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LBHHAGOH@OnEndFrame@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 1626 : 	}

  0001a	c3		 ret	 0
?OnEndFrame@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
_changePosition$$sroa$149$1$ = -8			; size = 4
_changePosition$$sroa$150$1$ = -4			; size = 4
?OnChangePosition@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1616 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0000b	66 0f 6e 49 38	 movd	 xmm1, DWORD PTR [ecx+56]

; 1617 : 		FChangePosition changePosition;
; 1618 : 		changePosition.fx = m_rect.left;

  00010	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00013	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00014	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1616 : 	{

  0001a	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001b	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1619 : 		changePosition.fy = m_rect.top;

  00021	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _changePosition$$sroa$150$1$[ebp], xmm0
  00029	f3 0f 11 4d f8	 movss	 DWORD PTR _changePosition$$sroa$149$1$[ebp], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002e	3b f7		 cmp	 esi, edi
  00030	74 26		 je	 SHORT $LN17@OnChangePo
$LL18@OnChangePo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1611 : 			pInstance->SetPosition(fx, fy);

  00032	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00034	83 ec 08	 sub	 esp, 8
  00037	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _changePosition$$sroa$150$1$[ebp]
  0004c	83 c6 04	 add	 esi, 4
  0004f	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _changePosition$$sroa$149$1$[ebp]
  00054	3b f7		 cmp	 esi, edi
  00056	75 da		 jne	 SHORT $LL18@OnChangePo
$LN17@OnChangePo:
  00058	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1621 : 	}

  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?OnChangePosition@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnRender, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  00006	8b 91 80 00 00
	00		 mov	 edx, DWORD PTR [ecx+128]
  0000c	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1598 : 	{

  0000e	56		 push	 esi

; 1599 : 		if (m_bycurIndex < m_ImageVector.size())

  0000f	0f b6 71 7e	 movzx	 esi, BYTE PTR [ecx+126]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00013	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1599 : 		if (m_bycurIndex < m_ImageVector.size())

  00016	3b f0		 cmp	 esi, eax
  00018	73 09		 jae	 SHORT $LN2@OnRender

; 1600 : 		{
; 1601 : 			CGraphicExpandedImageInstance * pImage = m_ImageVector[m_bycurIndex];
; 1602 : 			pImage->Render();

  0001a	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@OnRender:
  00023	5e		 pop	 esi

; 1603 : 		}
; 1604 : 	}

  00024	c3		 ret	 0
?OnRender@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1582 : 	{

  00000	8b d1		 mov	 edx, ecx

; 1583 : 		++m_bycurDelay;

  00002	fe 42 7c	 inc	 BYTE PTR [edx+124]
  00005	8a 42 7c	 mov	 al, BYTE PTR [edx+124]

; 1584 : 		if (m_bycurDelay < m_byDelay)

  00008	3a 42 7d	 cmp	 al, BYTE PTR [edx+125]
  0000b	72 2c		 jb	 SHORT $LN3@OnUpdate

; 1585 : 			return;
; 1586 : 
; 1587 : 		m_bycurDelay = 0;
; 1588 : 
; 1589 : 		++m_bycurIndex;

  0000d	fe 42 7e	 inc	 BYTE PTR [edx+126]

; 1590 : 		if (m_bycurIndex >= m_ImageVector.size())

  00010	0f b6 42 7e	 movzx	 eax, BYTE PTR [edx+126]
  00014	c6 42 7c 00	 mov	 BYTE PTR [edx+124], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	8b 8a 84 00 00
	00		 mov	 ecx, DWORD PTR [edx+132]
  0001e	2b 8a 80 00 00
	00		 sub	 ecx, DWORD PTR [edx+128]
  00024	c1 f9 02	 sar	 ecx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1590 : 		if (m_bycurIndex >= m_ImageVector.size())

  00027	3b c1		 cmp	 eax, ecx
  00029	72 0e		 jb	 SHORT $LN3@OnUpdate

; 1591 : 		{
; 1592 : 			m_bycurIndex = 0;
; 1593 : 
; 1594 : 			OnEndFrame();

  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b ca		 mov	 ecx, edx
  0002f	c6 42 7e 00	 mov	 BYTE PTR [edx+126], 0
  00033	ff a0 9c 00 00
	00		 jmp	 DWORD PTR [eax+156]
$LN3@OnUpdate:

; 1595 : 		}
; 1596 : 	}

  00039	c3		 ret	 0
?OnUpdate@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ResetFrame@CAniImageBox@UI@@QAEXXZ
_TEXT	SEGMENT
?ResetFrame@CAniImageBox@UI@@QAEXXZ PROC		; UI::CAniImageBox::ResetFrame, COMDAT
; _this$ = ecx

; 1578 : 		m_bycurIndex = 0;

  00000	c6 41 7e 00	 mov	 BYTE PTR [ecx+126], 0

; 1579 : 	}

  00004	c3		 ret	 0
?ResetFrame@CAniImageBox@UI@@QAEXXZ ENDP		; UI::CAniImageBox::ResetFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z PROC		; UI::CAniImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 1570 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00004	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1570 : 	{

  0000a	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f7		 cmp	 esi, edi
  00013	74 1b		 je	 SHORT $LN17@SetRenderi
  00015	53		 push	 ebx
  00016	8b 5d 08	 mov	 ebx, DWORD PTR _iMode$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@SetRenderi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1566 : 			pInstance->SetRenderingMode(iMode);

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	53		 push	 ebx
  00023	e8 00 00 00 00	 call	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00028	83 c6 04	 add	 esi, 4
  0002b	3b f7		 cmp	 esi, edi
  0002d	75 f1		 jne	 SHORT $LL18@SetRenderi
  0002f	5b		 pop	 ebx
$LN17@SetRenderi:
  00030	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1574 : 	}

  00031	5e		 pop	 esi
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ENDP		; UI::CAniImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z PROC	; UI::CAniImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 1552 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00009	33 c5		 xor	 eax, ebp
  0000b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0000e	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1552 : 	{

  00015	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	3b f7		 cmp	 esi, edi
  0001e	74 3c		 je	 SHORT $LN17@SetRenderi
$LL18@SetRenderi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1548 : 			pInstance->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  00020	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00025	83 ec 10	 sub	 esp, 16			; 00000010H
  00028	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00035	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00055	83 c6 04	 add	 esi, 4
  00058	3b f7		 cmp	 esi, edi
  0005a	75 c4		 jne	 SHORT $LL18@SetRenderi
$LN17@SetRenderi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1559 : 	}

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005f	5f		 pop	 edi
  00060	33 cd		 xor	 ecx, ebp
  00062	5e		 pop	 esi
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z ENDP	; UI::CAniImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z
_TEXT	SEGMENT
_pImageInstance$ = 8					; size = 4
_c_szFileName$ = 8					; size = 4
_r$ = 12						; size = 4
_g$ = 16						; size = 4
_b$ = 20						; size = 4
_a$ = 24						; size = 4
?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z PROC	; UI::CAniImageBox::AppendImage, COMDAT
; _this$ = ecx

; 1522 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 1523 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00010	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00015	8b f0		 mov	 esi, eax

; 1524 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00017	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001c	50		 push	 eax
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00024	84 c0		 test	 al, al
  00026	0f 84 9d 00 00
	00		 je	 $LN1@AppendImag

; 1525 : 			return;
; 1526 : 
; 1527 : 		CGraphicExpandedImageInstance * pImageInstance = CGraphicExpandedImageInstance::New();

  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00032	8b f8		 mov	 edi, eax

; 1528 : 		pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00034	56		 push	 esi
  00035	8b cf		 mov	 ecx, edi
  00037	89 7d 08	 mov	 DWORD PTR _pImageInstance$[ebp], edi
  0003a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1529 : #ifdef ENABLE_ACCE_SYSTEM
; 1530 : 		pImageInstance->SetDiffuseColor(r, g, b, a);

  0003f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _a$[ebp]
  00044	83 ec 10	 sub	 esp, 16			; 00000010H
  00047	8b cf		 mov	 ecx, edi
  00049	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0004f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _b$[ebp]
  00054	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0005a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _g$[ebp]
  0005f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00065	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _r$[ebp]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 1531 : #endif
; 1532 : 
; 1533 : 		if (pImageInstance->IsEmpty())

  00074	8b cf		 mov	 ecx, edi
  00076	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0007b	84 c0		 test	 al, al
  0007d	74 10		 je	 SHORT $LN3@AppendImag

; 1534 : 		{
; 1535 : 			CGraphicExpandedImageInstance::Delete(pImageInstance);

  0007f	57		 push	 edi
  00080	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  00085	83 c4 04	 add	 esp, 4
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi

; 1541 : 	}

  0008a	5b		 pop	 ebx
  0008b	5d		 pop	 ebp
  0008c	c2 14 00	 ret	 20			; 00000014H
$LN3@AppendImag:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0008f	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1539 : 		m_ImageVector.push_back(pImageInstance);

  00095	8d b3 80 00 00
	00		 lea	 esi, DWORD PTR [ebx+128]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0009b	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0009e	74 08		 je	 SHORT $LN8@AppendImag

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000a0	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000a2	83 46 04 04	 add	 DWORD PTR [esi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000a6	eb 0c		 jmp	 SHORT $LN15@AppendImag
$LN8@AppendImag:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000a8	8d 4d 08	 lea	 ecx, DWORD PTR _pImageInstance$[ebp]
  000ab	51		 push	 ecx
  000ac	50		 push	 eax
  000ad	8b ce		 mov	 ecx, esi
  000af	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN15@AppendImag:

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000b4	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  000b7	2b 3e		 sub	 edi, DWORD PTR [esi]
  000b9	c1 ff 02	 sar	 edi, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1540 : 		m_bycurIndex = rand() % m_ImageVector.size();

  000bc	e8 00 00 00 00	 call	 _rand
  000c1	33 d2		 xor	 edx, edx
  000c3	f7 f7		 div	 edi
  000c5	5f		 pop	 edi
  000c6	88 53 7e	 mov	 BYTE PTR [ebx+126], dl
$LN1@AppendImag:

; 1541 : 	}

  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	5d		 pop	 ebp
  000cc	c2 14 00	 ret	 20			; 00000014H
?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ENDP	; UI::CAniImageBox::AppendImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDelay@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iDelay$ = 8						; size = 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z PROC			; UI::CAniImageBox::SetDelay, COMDAT
; _this$ = ecx

; 1513 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1514 : 		m_byDelay = iDelay;

  00003	8a 45 08	 mov	 al, BYTE PTR _iDelay$[ebp]
  00006	88 41 7d	 mov	 BYTE PTR [ecx+125], al

; 1515 : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z ENDP			; UI::CAniImageBox::SetDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CAniImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
tv296 = -16						; size = 4
_pkData$2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAniImageBox@UI@@UAE@XZ PROC				; UI::CAniImageBox::~CAniImageBox, COMDAT
; _this$ = ecx

; 1508 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAniImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$1$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CAniImageBox@UI@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00033	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00039	8b b3 80 00 00
	00		 mov	 esi, DWORD PTR [ebx+128]
  0003f	3b f0		 cmp	 esi, eax
  00041	74 3f		 je	 SHORT $LN17@CAniImageB
  00043	8b d8		 mov	 ebx, eax
$LL18@CAniImageB:

; 236  :         _Func(*_UFirst);

  00045	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h

; 11   : 			pkInstance->Destroy();

  00047	8b cf		 mov	 ecx, edi
  00049	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0004e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h

; 12   : 			ms_kPool.Free(pkInstance);

  00053	89 7d f0	 mov	 DWORD PTR _pkData$2[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00056	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0005c	74 0b		 je	 SHORT $LN27@CAniImageB

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0005e	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00060	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00067	eb 0f		 jmp	 SHORT $LN16@CAniImageB
$LN27@CAniImageB:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00069	8d 4d f0	 lea	 ecx, DWORD PTR _pkData$2[ebp]
  0006c	51		 push	 ecx
  0006d	50		 push	 eax
  0006e	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00073	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN16@CAniImageB:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00078	83 c6 04	 add	 esi, 4
  0007b	3b f3		 cmp	 esi, ebx
  0007d	75 c6		 jne	 SHORT $LL18@CAniImageB
  0007f	8b 5d ec	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN17@CAniImageB:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00082	8b 8b 80 00 00
	00		 mov	 ecx, DWORD PTR [ebx+128]
  00088	85 c9		 test	 ecx, ecx
  0008a	74 33		 je	 SHORT $LN34@CAniImageB

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0008c	8b 83 88 00 00
	00		 mov	 eax, DWORD PTR [ebx+136]
  00092	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00094	83 e0 fc	 and	 eax, -4			; fffffffcH
  00097	50		 push	 eax
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0009e	c7 83 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+128], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  000ab	c7 83 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+132], 0

; 1699 :             _Myend   = pointer();

  000b5	c7 83 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+136], 0
$LN34@CAniImageB:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1510 : 	}

  000bf	8b cb		 mov	 ecx, ebx
  000c1	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5f		 pop	 edi
  000d2	5e		 pop	 esi
  000d3	5b		 pop	 ebx
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
  000d8	cc		 int	 3
  000d9	cc		 int	 3
  000da	cc		 int	 3
  000db	cc		 int	 3
  000dc	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAniImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAniImageBox@UI@@UAE@XZ ENDP				; UI::CAniImageBox::~CAniImageBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CAniImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CAniImageBox::CAniImageBox, COMDAT
; _this$ = ecx

; 1504 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAniImageBox@UI@@6B@

; 1506 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	66 c7 46 7c 00
	04		 mov	 WORD PTR [esi+124], 1024 ; 00000400H
  00020	c6 46 7e 00	 mov	 BYTE PTR [esi+126], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00024	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  0002e	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1505 : 		m_ImageVector.clear();

  00038	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0

; 1506 : 	}

  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CAniImageBox::CAniImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CAniImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CAniImageBox@UI@@SAKXZ PROC			; UI::CAniImageBox::Type, COMDAT

; 1486 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CAniImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1487 : 		static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1488 : 		return (s_dwType);
; 1489 : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1487 : 		static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0c		 push	 12			; 0000000cH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBBHECOO@CAniImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CAniImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CAniImageBox@UI@@SAKXZ ENDP			; UI::CAniImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCExpandedImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z PROC		; UI::CExpandedImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CExpandedImageBox@UI@@UAE@XZ ; UI::CExpandedImageBox::~CExpandedImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z ENDP		; UI::CExpandedImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z PROC		; UI::CExpandedImageBox::OnIsType, COMDAT
; _this$ = ecx

; 1404 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1405 : 		if (CExpandedImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CExpandedImageBox@UI@@SAKXZ ; UI::CExpandedImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1406 : 			return TRUE;
; 1407 : 
; 1408 : 		return FALSE;
; 1409 : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z ENDP		; UI::CExpandedImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnRender, COMDAT
; _this$ = ecx

; 1474 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1475 : 			return;
; 1476 : 
; 1477 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1478 : 			m_pImageInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1479 : 	}

  00014	c3		 ret	 0
?OnRender@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1471 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1426 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1427 : 		if (m_pImageInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1428 : 		{
; 1429 : 			CGraphicExpandedImageInstance::Delete((CGraphicExpandedImageInstance*)m_pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1430 : 			m_pImageInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1431 : 		}
; 1432 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1420 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1421 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1422 : 
; 1423 : 		m_pImageInstance = CGraphicExpandedImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1424 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z PROC	; UI::CExpandedImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 1465 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1466 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]

; 1467 : 	}

  00006	5d		 pop	 ebp

; 1466 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00007	e9 00 00 00 00	 jmp	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z ENDP	; UI::CExpandedImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z PROC	; UI::CExpandedImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 1457 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1458 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetRenderi

; 1459 : 			return;
; 1460 : 
; 1461 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
$LN1@SetRenderi:

; 1462 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ENDP	; UI::CExpandedImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotation@CExpandedImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z PROC		; UI::CExpandedImageBox::SetRotation, COMDAT
; _this$ = ecx

; 1450 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1451 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN1@SetRotatio

; 1452 : 			return;
; 1453 : 
; 1454 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRotation(fRotation);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetRotation
$LN1@SetRotatio:

; 1455 : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z ENDP		; UI::CExpandedImageBox::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetOrigin, COMDAT
; _this$ = ecx

; 1443 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1444 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 1d		 je	 SHORT $LN1@SetOrigin

; 1445 : 			return;
; 1446 : 
; 1447 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetOrigin(fx, fy);

  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  0000f	83 ec 08	 sub	 esp, 8
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  0001d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00022	e8 00 00 00 00	 call	 ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
$LN1@SetOrigin:

; 1448 : 	}

  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetScale, COMDAT
; _this$ = ecx

; 1435 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1436 : 		if (!m_pImageInstance)

  00006	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 54		 je	 SHORT $LN1@SetScale

; 1437 : 			return;
; 1438 : 
; 1439 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetScale(fx, fy);

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	83 ec 08	 sub	 esp, 8
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	e8 00 00 00 00	 call	 ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale

; 1440 : 		CWindow::SetSize(long(float(GetWidth())*fx), long(float(GetHeight())*fy));

  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?GetHeight@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetHeight
  00031	8b ce		 mov	 ecx, esi
  00033	66 0f 6e c0	 movd	 xmm0, eax
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fy$[ebp]
  0003f	f3 0f 2c c0	 cvttss2si eax, xmm0
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?GetWidth@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetWidth
  00049	8b ce		 mov	 ecx, esi
  0004b	66 0f 6e c0	 movd	 xmm0, eax
  0004f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00052	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fx$[ebp]
  00057	f3 0f 2c c0	 cvttss2si eax, xmm0
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
$LN1@SetScale:
  00061	5e		 pop	 esi

; 1441 : 	}

  00062	5d		 pop	 ebp
  00063	c2 08 00	 ret	 8
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CExpandedImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CExpandedImageBox@UI@@UAE@XZ PROC			; UI::CExpandedImageBox::~CExpandedImageBox, COMDAT
; _this$ = ecx

; 1415 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CExpandedImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 1416 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ; UI::CExpandedImageBox::OnDestroyInstance

; 1417 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CExpandedImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CExpandedImageBox@UI@@UAE@XZ ENDP			; UI::CExpandedImageBox::~CExpandedImageBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z PROC	; UI::CExpandedImageBox::CExpandedImageBox, COMDAT
; _this$ = ecx

; 1412 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 1413 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z ENDP	; UI::CExpandedImageBox::CExpandedImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CExpandedImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CExpandedImageBox@UI@@SAKXZ PROC			; UI::CExpandedImageBox::Type, COMDAT

; 1398 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1399 : 		static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1400 : 		return (s_dwType);
; 1401 : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1399 : 		static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 11		 push	 17			; 00000011H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CExpandedImageBox@UI@@SAKXZ ENDP			; UI::CExpandedImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCMarkBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMarkBox@UI@@UAEPAXI@Z PROC				; UI::CMarkBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMarkBox@UI@@UAE@XZ	; UI::CMarkBox::~CMarkBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCMarkBox@UI@@UAEPAXI@Z ENDP				; UI::CMarkBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1387 : 		if (!m_pMarkInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 25		 je	 SHORT $LN1@OnChangePo

; 1388 : 			return;
; 1389 : 
; 1390 : 		m_pMarkInstance->SetPosition(m_rect.left, m_rect.top);

  00007	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001d	8b c8		 mov	 ecx, eax
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?SetPosition@CGraphicMarkInstance@@QAEXMM@Z ; CGraphicMarkInstance::SetPosition
$LN1@OnChangePo:

; 1391 : 	}

  0002c	c3		 ret	 0
?OnChangePosition@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnRender, COMDAT
; _this$ = ecx

; 1378 : 		if (!m_pMarkInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1379 : 			return;
; 1380 : 
; 1381 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1382 : 			m_pMarkInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Render
$LN3@OnRender:

; 1383 : 	}

  00014	c3		 ret	 0
?OnRender@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnUpdate, COMDAT
; _this$ = ecx

; 1374 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1329 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1330 : 		if (m_pMarkInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1331 : 		{
; 1332 : 			CGraphicMarkInstance::Delete(m_pMarkInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicMarkInstance@@SAXPAV1@@Z ; CGraphicMarkInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1333 : 			m_pMarkInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1334 : 		}
; 1335 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1323 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1324 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1325 : 		m_pMarkInstance = CGraphicMarkInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicMarkInstance@@SAPAV1@XZ ; CGraphicMarkInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1326 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CMarkBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fScale$ = 8						; size = 4
?SetScale@CMarkBox@UI@@QAEXM@Z PROC			; UI::CMarkBox::SetScale, COMDAT
; _this$ = ecx

; 1349 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1350 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN1@SetScale

; 1351 : 			return;
; 1352 : 
; 1353 : 		m_pMarkInstance->SetScale(fScale);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetScale@CGraphicMarkInstance@@QAEXM@Z ; CGraphicMarkInstance::SetScale
$LN1@SetScale:

; 1354 : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetScale@CMarkBox@UI@@QAEXM@Z ENDP			; UI::CMarkBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetIndex@CMarkBox@UI@@QAEXI@Z
_TEXT	SEGMENT
_uIndex$ = 8						; size = 4
?SetIndex@CMarkBox@UI@@QAEXI@Z PROC			; UI::CMarkBox::SetIndex, COMDAT
; _this$ = ecx

; 1357 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1358 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN1@SetIndex

; 1362 : 	}

  0000a	5d		 pop	 ebp

; 1359 : 			return;
; 1360 : 
; 1361 : 		m_pMarkInstance->SetIndex(uIndex);

  0000b	e9 00 00 00 00	 jmp	 ?SetIndex@CGraphicMarkInstance@@QAEXI@Z ; CGraphicMarkInstance::SetIndex
$LN1@SetIndex:

; 1362 : 	}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetIndex@CMarkBox@UI@@QAEXI@Z ENDP			; UI::CMarkBox::SetIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z PROC		; UI::CMarkBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1365 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1366 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetDiffuse

; 1367 : 			return;
; 1368 : 
; 1369 : 		m_pMarkInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z ; CGraphicMarkInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 1370 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z ENDP		; UI::CMarkBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CMarkBox@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFilename$ = 8					; size = 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z PROC			; UI::CMarkBox::LoadImageA, COMDAT
; _this$ = ecx

; 1338 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1339 : 		OnCreateInstance();

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 1340 : 
; 1341 : 		m_pMarkInstance->SetImageFileName(c_szFilename);

  0000e	ff 75 08	 push	 DWORD PTR _c_szFilename$[ebp]
  00011	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00014	e8 00 00 00 00	 call	 ?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z ; CGraphicMarkInstance::SetImageFileName

; 1342 : 		m_pMarkInstance->Load();

  00019	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0001c	e8 00 00 00 00	 call	 ?Load@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Load

; 1343 : 		SetSize(m_pMarkInstance->GetWidth(), m_pMarkInstance->GetHeight());

  00021	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00024	e8 00 00 00 00	 call	 ?GetHeight@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetHeight
  00029	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetWidth
  00032	50		 push	 eax
  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1344 : 
; 1345 : 		UpdateRect();

  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  00041	5e		 pop	 esi

; 1346 : 	}

  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z ENDP			; UI::CMarkBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CMarkBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMarkBox@UI@@UAE@XZ PROC				; UI::CMarkBox::~CMarkBox, COMDAT
; _this$ = ecx

; 1318 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMarkBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 1319 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ; UI::CMarkBox::OnDestroyInstance

; 1320 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMarkBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMarkBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMarkBox@UI@@UAE@XZ ENDP				; UI::CMarkBox::~CMarkBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CMarkBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CMarkBox::CMarkBox, COMDAT
; _this$ = ecx

; 1313 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 1314 : 		m_pMarkInstance = NULL;
; 1315 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CMarkBox::CMarkBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImageBox@UI@@UAEPAXI@Z PROC			; UI::CImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCImageBox@UI@@UAEPAXI@Z ENDP			; UI::CImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1304 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 25		 je	 SHORT $LN1@OnChangePo

; 1305 : 			return;
; 1306 : 
; 1307 : 		m_pImageInstance->SetPosition(m_rect.left, m_rect.top);

  00007	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001d	8b c8		 mov	 ecx, eax
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN1@OnChangePo:

; 1308 : 	}

  0002c	c3		 ret	 0
?OnChangePosition@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnRender, COMDAT
; _this$ = ecx

; 1296 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1297 : 			return;
; 1298 : 
; 1299 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1300 : 			m_pImageInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1301 : 	}

  00014	c3		 ret	 0
?OnRender@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1293 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1236 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1237 : 		if (m_pImageInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1238 : 		{
; 1239 : 			CGraphicImageInstance::Delete(m_pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1240 : 			m_pImageInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1241 : 		}
; 1242 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1230 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1231 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1232 : 
; 1233 : 		m_pImageInstance = CGraphicImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1234 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetHeight@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetHeight@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetHeight, COMDAT
; _this$ = ecx

; 1285 : 		if (!m_pImageInstance)

  00000	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetHeight

; 1286 : 			return 0;

  00007	33 c0		 xor	 eax, eax

; 1289 : 	}

  00009	c3		 ret	 0
$LN2@GetHeight:

; 1287 : 
; 1288 : 		return m_pImageInstance->GetHeight();

  0000a	e9 00 00 00 00	 jmp	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
?GetHeight@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetWidth@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetWidth@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetWidth, COMDAT
; _this$ = ecx

; 1277 : 		if (!m_pImageInstance)

  00000	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetWidth

; 1278 : 			return 0;

  00007	33 c0		 xor	 eax, eax

; 1281 : 	}

  00009	c3		 ret	 0
$LN2@GetWidth:

; 1279 : 
; 1280 : 		return m_pImageInstance->GetWidth();

  0000a	e9 00 00 00 00	 jmp	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
?GetWidth@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z PROC		; UI::CImageBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1268 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1269 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetDiffuse

; 1270 : 			return;
; 1271 : 
; 1272 : 		m_pImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 1273 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z ENDP		; UI::CImageBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CImageBox@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z PROC		; UI::CImageBox::LoadImageA, COMDAT
; _this$ = ecx

; 1245 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1246 : 		if (!c_szFileName[0])

  00005	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	80 3f 00	 cmp	 BYTE PTR [edi], 0
  0000d	74 6b		 je	 SHORT $LN7@LoadImageA

; 1247 : 			return FALSE;
; 1248 : 
; 1249 : 		OnCreateInstance();

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 1250 : 
; 1251 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00023	8b f8		 mov	 edi, eax

; 1252 : 		if (!pResource)

  00025	85 ff		 test	 edi, edi
  00027	74 51		 je	 SHORT $LN7@LoadImageA

; 1253 : 			return FALSE;
; 1254 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00029	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0002e	50		 push	 eax
  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00036	84 c0		 test	 al, al
  00038	74 40		 je	 SHORT $LN7@LoadImageA

; 1255 : 			return FALSE;
; 1256 : 
; 1257 : 		m_pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  0003a	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1258 : 		if (m_pImageInstance->IsEmpty())

  00043	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00046	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0004b	84 c0		 test	 al, al
  0004d	75 2b		 jne	 SHORT $LN7@LoadImageA

; 1260 : 
; 1261 : 		SetSize(m_pImageInstance->GetWidth(), m_pImageInstance->GetHeight());

  0004f	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00052	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00057	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00060	50		 push	 eax
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1262 : 		UpdateRect();

  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  0006f	5f		 pop	 edi

; 1263 : 
; 1264 : 		return TRUE;

  00070	b8 01 00 00 00	 mov	 eax, 1

; 1265 : 	}

  00075	5e		 pop	 esi
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN7@LoadImageA:
  0007a	5f		 pop	 edi

; 1259 : 			return FALSE;

  0007b	33 c0		 xor	 eax, eax

; 1265 : 	}

  0007d	5e		 pop	 esi
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z ENDP		; UI::CImageBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CImageBox@UI@@UAE@XZ PROC				; UI::CImageBox::~CImageBox, COMDAT
; _this$ = ecx

; 1225 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 1226 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CImageBox@UI@@MAEXXZ ; UI::CImageBox::OnDestroyInstance

; 1227 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CImageBox@UI@@UAE@XZ ENDP				; UI::CImageBox::~CImageBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CImageBox::CImageBox, COMDAT
; _this$ = ecx

; 1221 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 1222 : 		m_pImageInstance = NULL;
; 1223 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CImageBox::CImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCNumberLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNumberLine@UI@@UAEPAXI@Z PROC			; UI::CNumberLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNumberLine@UI@@UAE@XZ ; UI::CNumberLine::~CNumberLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c0 00 00 00	 push	 192			; 000000c0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCNumberLine@UI@@UAEPAXI@Z ENDP			; UI::CNumberLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
tv264 = -8						; size = 4
_i$1$ = -4						; size = 4
?OnChangePosition@CNumberLine@UI@@MAEXXZ PROC		; UI::CNumberLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1187 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1188 : 		int ix = m_x;
; 1189 : 		int iy = m_y;
; 1190 : 
; 1191 : 		if (m_pParent)

  0000b	83 7f 60 00	 cmp	 DWORD PTR [edi+96], 0
  0000f	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  00012	8b 77 28	 mov	 esi, DWORD PTR [edi+40]
  00015	74 06		 je	 SHORT $LN7@OnChangePo

; 1192 : 		{
; 1193 : 			ix = m_rect.left;

  00017	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]

; 1194 : 			iy = m_rect.top;

  0001a	8b 77 38	 mov	 esi, DWORD PTR [edi+56]
$LN7@OnChangePo:

; 1195 : 		}
; 1196 : 
; 1197 : 		switch (m_iHorizontalAlign)

  0001d	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  00023	83 e8 01	 sub	 eax, 1
  00026	74 0d		 je	 SHORT $LN9@OnChangePo
  00028	83 e8 01	 sub	 eax, 1
  0002b	75 17		 jne	 SHORT $LN2@OnChangePo

; 1203 : 				break;
; 1204 : 			case HORIZONTAL_ALIGN_RIGHT:
; 1205 : 				ix -= int(m_dwWidthSummary);

  0002d	2b 9f bc 00 00
	00		 sub	 ebx, DWORD PTR [edi+188]
  00033	eb 0f		 jmp	 SHORT $LN2@OnChangePo
$LN9@OnChangePo:

; 1198 : 		{
; 1199 : 			case HORIZONTAL_ALIGN_LEFT:
; 1200 : 				break;
; 1201 : 			case HORIZONTAL_ALIGN_CENTER:
; 1202 : 				ix -= int(m_dwWidthSummary) / 2;

  00035	8b 87 bc 00 00
	00		 mov	 eax, DWORD PTR [edi+188]
  0003b	99		 cdq
  0003c	2b c2		 sub	 eax, edx
  0003e	d1 f8		 sar	 eax, 1
  00040	f7 d8		 neg	 eax
  00042	03 d8		 add	 ebx, eax
$LN2@OnChangePo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00044	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1209 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0004a	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004c	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
  00052	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1209 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00055	89 4d fc	 mov	 DWORD PTR _i$1$[ebp], ecx
  00058	85 c0		 test	 eax, eax
  0005a	74 6d		 je	 SHORT $LN5@OnChangePo
  0005c	66 0f 6e c6	 movd	 xmm0, esi
  00060	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00063	f3 0f 11 45 f8	 movss	 DWORD PTR tv264[ebp], xmm0
  00068	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL6@OnChangePo:

; 1211 : 			m_ImageInstanceVector[i]->SetPosition(ix, iy);

  00070	83 ec 08	 sub	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00073	8d 34 8d 00 00
	00 00		 lea	 esi, DWORD PTR [ecx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1211 : 			m_ImageInstanceVector[i]->SetPosition(ix, iy);

  0007a	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00080	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00086	8b 0c 0e	 mov	 ecx, DWORD PTR [esi+ecx]
  00089	66 0f 6e c3	 movd	 xmm0, ebx
  0008d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00090	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00095	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0009a	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1212 : 			ix += m_ImageInstanceVector[i]->GetWidth();

  000a0	8b 0c 31	 mov	 ecx, DWORD PTR [ecx+esi]
  000a3	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _i$1$[ebp]
  000ab	03 d8		 add	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000ad	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1209 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000b3	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000b4	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1209 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000ba	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv264[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000bf	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1209 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000c2	89 4d fc	 mov	 DWORD PTR _i$1$[ebp], ecx
  000c5	3b c8		 cmp	 ecx, eax
  000c7	72 a7		 jb	 SHORT $LL6@OnChangePo
$LN5@OnChangePo:
  000c9	5f		 pop	 edi

; 1213 : 		}
; 1214 : 	}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c3		 ret	 0
?OnChangePosition@CNumberLine@UI@@MAEXXZ ENDP		; UI::CNumberLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CNumberLine@UI@@MAEXXZ PROC			; UI::CNumberLine::OnRender, COMDAT
; _this$ = ecx

; 1179 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1180 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00004	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
  0000c	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
  00012	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1180 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00015	85 c0		 test	 eax, eax
  00017	74 29		 je	 SHORT $LN3@OnRender
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@OnRender:

; 1181 : 		{
; 1182 : 			m_ImageInstanceVector[i]->Render();

  00020	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00026	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00029	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002e	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1180 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00034	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00035	2b 87 ac 00 00
	00		 sub	 eax, DWORD PTR [edi+172]
  0003b	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1180 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0003e	3b f0		 cmp	 esi, eax
  00040	72 de		 jb	 SHORT $LL4@OnRender
$LN3@OnRender:
  00042	5f		 pop	 edi

; 1183 : 		}
; 1184 : 	}

  00043	5e		 pop	 esi
  00044	c3		 ret	 0
?OnRender@CNumberLine@UI@@MAEXXZ ENDP			; UI::CNumberLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ClearNumber@CNumberLine@UI@@IAEXXZ
_TEXT	SEGMENT
?ClearNumber@CNumberLine@UI@@IAEXXZ PROC		; UI::CNumberLine::ClearNumber, COMDAT
; _this$ = ecx

; 1173 : 		m_ImageInstanceVector.clear();

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00006	6a 00		 push	 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1173 : 		m_ImageInstanceVector.clear();

  00008	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 1174 : 		m_dwWidthSummary = 0;

  0000e	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0

; 1175 : 		m_strNumber = "";

  00018	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00023	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1176 : 	}

  00028	c3		 ret	 0
?ClearNumber@CNumberLine@UI@@IAEXXZ ENDP		; UI::CNumberLine::ClearNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetNumber@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_i$1$ = -92						; size = 4
__New_ptr$2 = -88					; size = 4
tv2504 = -84						; size = 4
_pInstance$3 = -84					; size = 4
_c_szNumber$GSCopy$1$ = -80				; size = 4
tv2503 = -80						; size = 4
_this$GSCopy$1$ = -76					; size = 4
__Old_capacity$1$ = -72					; size = 4
tv2385 = -72						; size = 4
_cChar$1$ = -65						; size = 1
$T4 = -64						; size = 24
$T5 = -64						; size = 24
$T6 = -64						; size = 24
$T7 = -64						; size = 24
$T8 = -64						; size = 24
$T9 = -64						; size = 24
$T10 = -64						; size = 24
$T11 = -64						; size = 24
_strImageFileName$12 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szNumber$ = 8					; size = 4
?SetNumber@CNumberLine@UI@@QAEXPBD@Z PROC		; UI::CNumberLine::SetNumber, COMDAT
; _this$ = ecx

; 1104 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	89 75 b4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  0002f	8b 45 08	 mov	 eax, DWORD PTR _c_szNumber$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00032	8b c8		 mov	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1104 : 	{

  00034	89 45 b0	 mov	 DWORD PTR _c_szNumber$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00037	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0003a	66 0f 1f 44 00
	00		 npad	 6
$LL407@SetNumber:
  00040	8a 01		 mov	 al, BYTE PTR [ecx]
  00042	41		 inc	 ecx
  00043	84 c0		 test	 al, al
  00045	75 f9		 jne	 SHORT $LL407@SetNumber
  00047	2b ca		 sub	 ecx, edx

; 2145 :         if (_Large_string_engaged()) {

  00049	83 be a8 00 00
	00 10		 cmp	 DWORD PTR [esi+168], 16	; 00000010H
  00050	8d 96 94 00 00
	00		 lea	 edx, DWORD PTR [esi+148]
  00056	72 06		 jb	 SHORT $LN405@SetNumber

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00058	8b 96 94 00 00
	00		 mov	 edx, DWORD PTR [esi+148]
$LN405@SetNumber:

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  0005e	8b 86 a4 00 00
	00		 mov	 eax, DWORD PTR [esi+164]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00064	3b c8		 cmp	 ecx, eax
  00066	8b f8		 mov	 edi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00068	8b 45 b0	 mov	 eax, DWORD PTR _c_szNumber$GSCopy$1$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0006b	0f 42 f9	 cmovb	 edi, ecx

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0006e	89 45 b8	 mov	 DWORD PTR tv2385[ebp], eax
  00071	83 ef 04	 sub	 edi, 4
  00074	72 18		 jb	 SHORT $LN410@SetNumber
$LL411@SetNumber:
  00076	8b 75 b8	 mov	 esi, DWORD PTR tv2385[ebp]
  00079	8b 02		 mov	 eax, DWORD PTR [edx]
  0007b	3b 06		 cmp	 eax, DWORD PTR [esi]
  0007d	8b 75 b4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00080	75 11		 jne	 SHORT $LN409@SetNumber
  00082	83 45 b8 04	 add	 DWORD PTR tv2385[ebp], 4
  00086	83 c2 04	 add	 edx, 4
  00089	83 ef 04	 sub	 edi, 4
  0008c	73 e8		 jae	 SHORT $LL411@SetNumber
$LN410@SetNumber:
  0008e	83 ff fc	 cmp	 edi, -4			; fffffffcH
  00091	74 49		 je	 SHORT $LN408@SetNumber
$LN409@SetNumber:
  00093	8b 75 b8	 mov	 esi, DWORD PTR tv2385[ebp]
  00096	8a 02		 mov	 al, BYTE PTR [edx]
  00098	3a 06		 cmp	 al, BYTE PTR [esi]
  0009a	8b 75 b4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  0009d	75 36		 jne	 SHORT $LN412@SetNumber
  0009f	83 ff fd	 cmp	 edi, -3			; fffffffdH
  000a2	74 38		 je	 SHORT $LN408@SetNumber
  000a4	8b 75 b8	 mov	 esi, DWORD PTR tv2385[ebp]
  000a7	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  000aa	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  000ad	8b 75 b4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  000b0	75 23		 jne	 SHORT $LN412@SetNumber
  000b2	83 ff fe	 cmp	 edi, -2			; fffffffeH
  000b5	74 25		 je	 SHORT $LN408@SetNumber
  000b7	8b 75 b8	 mov	 esi, DWORD PTR tv2385[ebp]
  000ba	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  000bd	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  000c0	8b 75 b4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  000c3	75 10		 jne	 SHORT $LN412@SetNumber
  000c5	83 ff ff	 cmp	 edi, -1
  000c8	74 12		 je	 SHORT $LN408@SetNumber
  000ca	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  000cd	8b 55 b8	 mov	 edx, DWORD PTR tv2385[ebp]
  000d0	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  000d3	74 07		 je	 SHORT $LN408@SetNumber
$LN412@SetNumber:
  000d5	1b c0		 sbb	 eax, eax
  000d7	83 c8 01	 or	 eax, 1
  000da	eb 02		 jmp	 SHORT $LN413@SetNumber
$LN408@SetNumber:
  000dc	33 c0		 xor	 eax, eax
$LN413@SetNumber:

; 513  :     if (_Ans != 0) {

  000de	85 c0		 test	 eax, eax
  000e0	75 0e		 jne	 SHORT $LN44@SetNumber

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  000e2	39 8e a4 00 00
	00		 cmp	 DWORD PTR [esi+164], ecx
  000e8	72 06		 jb	 SHORT $LN44@SetNumber

; 518  :         return -1;
; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  000ea	0f 86 e4 06 00
	00		 jbe	 $LN406@SetNumber
$LN44@SetNumber:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1108 : 		ClearNumber();

  000f0	8b ce		 mov	 ecx, esi
  000f2	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000f7	8b 55 b0	 mov	 edx, DWORD PTR _c_szNumber$GSCopy$1$[ebp]
  000fa	8b ca		 mov	 ecx, edx
  000fc	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
  000ff	90		 npad	 1
$LL414@SetNumber:
  00100	8a 01		 mov	 al, BYTE PTR [ecx]
  00102	41		 inc	 ecx
  00103	84 c0		 test	 al, al
  00105	75 f9		 jne	 SHORT $LL414@SetNumber
  00107	2b cf		 sub	 ecx, edi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00109	8d be 94 00 00
	00		 lea	 edi, DWORD PTR [esi+148]
  0010f	51		 push	 ecx
  00110	52		 push	 edx
  00111	8b cf		 mov	 ecx, edi
  00113	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1112 : 		for (DWORD i = 0; i < m_strNumber.size(); ++i)

  00118	33 c9		 xor	 ecx, ecx
  0011a	89 4d a4	 mov	 DWORD PTR _i$1$[ebp], ecx
  0011d	39 8e a4 00 00
	00		 cmp	 DWORD PTR [esi+164], ecx
  00123	0f 86 ab 06 00
	00		 jbe	 $LN406@SetNumber
  00129	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2136 :         if (_Large_string_engaged()) {

  00130	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  00134	8b c7		 mov	 eax, edi
  00136	72 02		 jb	 SHORT $LN62@SetNumber

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  00138	8b 07		 mov	 eax, DWORD PTR [edi]
$LN62@SetNumber:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1114 : 			char cChar = m_strNumber[i];

  0013a	8a 0c 08	 mov	 cl, BYTE PTR [eax+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0013d	ba 0f 00 00 00	 mov	 edx, 15			; 0000000fH
  00142	33 ff		 xor	 edi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1114 : 			char cChar = m_strNumber[i];

  00144	88 4d bf	 mov	 BYTE PTR _cChar$1$[ebp], cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00147	89 7d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], edi

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0014a	89 55 b8	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx
  0014d	89 55 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], edx

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00150	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1115 : 			std::string strImageFileName;

  00154	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 1116 : 
; 1117 : 			if (':' == cChar)

  00157	80 f9 3a	 cmp	 cl, 58			; 0000003aH
  0015a	0f 85 85 00 00
	00		 jne	 $LN6@SetNumber

; 1118 : 			{
; 1119 : 				strImageFileName = m_strPath + "colon.sub";

  00160	68 00 00 00 00	 push	 OFFSET ??_C@_09GPLBLMNE@colon?4sub@
  00165	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  00168	50		 push	 eax
  00169	8d 45 c0	 lea	 eax, DWORD PTR $T11[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00172	8b f0		 mov	 esi, eax
  00174	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00177	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0017a	3b c6		 cmp	 eax, esi
  0017c	74 49		 je	 SHORT $LN92@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0017e	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00181	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00184	72 0d		 jb	 SHORT $LN81@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00186	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00187	51		 push	 ecx
  00188	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  0018b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00190	83 c4 08	 add	 esp, 8
$LN81@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00193	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0019a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001a1	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  001a5	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  001a8	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  001ac	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  001b1	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001b6	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001bd	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001c4	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN92@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c7	8b 45 d4	 mov	 eax, DWORD PTR $T11[ebp+20]
  001ca	83 f8 10	 cmp	 eax, 16			; 00000010H
  001cd	0f 82 1a 05 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001d3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d4	50		 push	 eax
  001d5	ff 75 c0	 push	 DWORD PTR $T11[ebp]
  001d8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001dd	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1120 : 			}

  001e0	e9 08 05 00 00	 jmp	 $LN23@SetNumber
$LN6@SetNumber:

; 1121 : 			else if ('?' == cChar)

  001e5	80 f9 3f	 cmp	 cl, 63			; 0000003fH
  001e8	0f 85 85 00 00
	00		 jne	 $LN8@SetNumber

; 1122 : 			{
; 1123 : 				strImageFileName = m_strPath + "questionmark.sub";

  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POBNNLPJ@questionmark?4sub@
  001f3	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  001f6	50		 push	 eax
  001f7	8d 45 c0	 lea	 eax, DWORD PTR $T10[ebp]
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00200	8b f0		 mov	 esi, eax
  00202	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00205	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00208	3b c6		 cmp	 eax, esi
  0020a	74 49		 je	 SHORT $LN120@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0020c	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  0020f	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00212	72 0d		 jb	 SHORT $LN109@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00214	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00215	51		 push	 ecx
  00216	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  00219	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0021e	83 c4 08	 add	 esp, 8
$LN109@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00221	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00228	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0022f	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00233	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00236	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0023a	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  0023f	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00244	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0024b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00252	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN120@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00255	8b 45 d4	 mov	 eax, DWORD PTR $T10[ebp+20]
  00258	83 f8 10	 cmp	 eax, 16			; 00000010H
  0025b	0f 82 8c 04 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00261	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00262	50		 push	 eax
  00263	ff 75 c0	 push	 DWORD PTR $T10[ebp]
  00266	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0026b	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1124 : 			}

  0026e	e9 7a 04 00 00	 jmp	 $LN23@SetNumber
$LN8@SetNumber:

; 1125 : 			else if ('/' == cChar)

  00273	80 f9 2f	 cmp	 cl, 47			; 0000002fH
  00276	0f 85 85 00 00
	00		 jne	 $LN10@SetNumber

; 1126 : 			{
; 1127 : 				strImageFileName = m_strPath + "slash.sub";

  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_09JMLAABIP@slash?4sub@
  00281	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  00284	50		 push	 eax
  00285	8d 45 c0	 lea	 eax, DWORD PTR $T9[ebp]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0028e	8b f0		 mov	 esi, eax
  00290	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00293	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00296	3b c6		 cmp	 eax, esi
  00298	74 49		 je	 SHORT $LN148@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0029a	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  0029d	83 f9 10	 cmp	 ecx, 16			; 00000010H
  002a0	72 0d		 jb	 SHORT $LN137@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002a2	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002a3	51		 push	 ecx
  002a4	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002ac	83 c4 08	 add	 esp, 8
$LN137@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  002af	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002b6	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002bd	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  002c1	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  002c4	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  002c8	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  002cd	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  002d2	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002d9	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002e0	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN148@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002e3	8b 45 d4	 mov	 eax, DWORD PTR $T9[ebp+20]
  002e6	83 f8 10	 cmp	 eax, 16			; 00000010H
  002e9	0f 82 fe 03 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002ef	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002f0	50		 push	 eax
  002f1	ff 75 c0	 push	 DWORD PTR $T9[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002f9	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1128 : 			}

  002fc	e9 ec 03 00 00	 jmp	 $LN23@SetNumber
$LN10@SetNumber:

; 1129 : 			else if ('%' == cChar)

  00301	80 f9 25	 cmp	 cl, 37			; 00000025H
  00304	0f 85 85 00 00
	00		 jne	 $LN12@SetNumber

; 1130 : 			{
; 1131 : 				strImageFileName = m_strPath + "percent.sub";

  0030a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MHAKIBOD@percent?4sub@
  0030f	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  00312	50		 push	 eax
  00313	8d 45 c0	 lea	 eax, DWORD PTR $T8[ebp]
  00316	50		 push	 eax
  00317	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0031c	8b f0		 mov	 esi, eax
  0031e	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00321	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00324	3b c6		 cmp	 eax, esi
  00326	74 49		 je	 SHORT $LN176@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00328	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  0032b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0032e	72 0d		 jb	 SHORT $LN165@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00330	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00331	51		 push	 ecx
  00332	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  00335	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0033a	83 c4 08	 add	 esp, 8
$LN165@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0033d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00344	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0034b	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0034f	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00352	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00356	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  0035b	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00360	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00367	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0036e	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN176@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00371	8b 45 d4	 mov	 eax, DWORD PTR $T8[ebp+20]
  00374	83 f8 10	 cmp	 eax, 16			; 00000010H
  00377	0f 82 70 03 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0037d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0037e	50		 push	 eax
  0037f	ff 75 c0	 push	 DWORD PTR $T8[ebp]
  00382	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00387	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1132 : 			}

  0038a	e9 5e 03 00 00	 jmp	 $LN23@SetNumber
$LN12@SetNumber:

; 1133 : 			else if ('+' == cChar)

  0038f	80 f9 2b	 cmp	 cl, 43			; 0000002bH
  00392	0f 85 85 00 00
	00		 jne	 $LN14@SetNumber

; 1134 : 			{
; 1135 : 				strImageFileName = m_strPath + "plus.sub";

  00398	68 00 00 00 00	 push	 OFFSET ??_C@_08FPHNCABK@plus?4sub@
  0039d	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  003a0	50		 push	 eax
  003a1	8d 45 c0	 lea	 eax, DWORD PTR $T7[ebp]
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  003aa	8b f0		 mov	 esi, eax
  003ac	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  003af	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  003b2	3b c6		 cmp	 eax, esi
  003b4	74 49		 je	 SHORT $LN204@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003b6	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  003b9	83 f9 10	 cmp	 ecx, 16			; 00000010H
  003bc	72 0d		 jb	 SHORT $LN193@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003be	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003bf	51		 push	 ecx
  003c0	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  003c3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003c8	83 c4 08	 add	 esp, 8
$LN193@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  003cb	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003d2	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003d9	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  003dd	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  003e0	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  003e4	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  003e9	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  003ee	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003f5	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003fc	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN204@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003ff	8b 45 d4	 mov	 eax, DWORD PTR $T7[ebp+20]
  00402	83 f8 10	 cmp	 eax, 16			; 00000010H
  00405	0f 82 e2 02 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0040b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0040c	50		 push	 eax
  0040d	ff 75 c0	 push	 DWORD PTR $T7[ebp]
  00410	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00415	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1136 : 			}

  00418	e9 d0 02 00 00	 jmp	 $LN23@SetNumber
$LN14@SetNumber:

; 1137 : 			else if ('m' == cChar)

  0041d	80 f9 6d	 cmp	 cl, 109			; 0000006dH
  00420	0f 85 85 00 00
	00		 jne	 $LN16@SetNumber

; 1138 : 			{
; 1139 : 				strImageFileName = m_strPath + "m.sub";

  00426	68 00 00 00 00	 push	 OFFSET ??_C@_05PINNHPFB@m?4sub@
  0042b	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  0042e	50		 push	 eax
  0042f	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  00432	50		 push	 eax
  00433	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00438	8b f0		 mov	 esi, eax
  0043a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  0043d	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00440	3b c6		 cmp	 eax, esi
  00442	74 49		 je	 SHORT $LN232@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00444	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00447	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0044a	72 0d		 jb	 SHORT $LN221@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0044c	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0044d	51		 push	 ecx
  0044e	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  00451	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00456	83 c4 08	 add	 esp, 8
$LN221@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00459	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00460	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00467	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0046b	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  0046e	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00472	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00477	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0047c	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00483	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0048a	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN232@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0048d	8b 45 d4	 mov	 eax, DWORD PTR $T6[ebp+20]
  00490	83 f8 10	 cmp	 eax, 16			; 00000010H
  00493	0f 82 54 02 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00499	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0049a	50		 push	 eax
  0049b	ff 75 c0	 push	 DWORD PTR $T6[ebp]
  0049e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004a3	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1140 : 			}

  004a6	e9 42 02 00 00	 jmp	 $LN23@SetNumber
$LN16@SetNumber:

; 1141 : 			else if ('g' == cChar)

  004ab	80 f9 67	 cmp	 cl, 103			; 00000067H
  004ae	0f 85 85 00 00
	00		 jne	 $LN18@SetNumber

; 1142 : 			{
; 1143 : 				strImageFileName = m_strPath + "g.sub";

  004b4	68 00 00 00 00	 push	 OFFSET ??_C@_05FJEGFMDH@g?4sub@
  004b9	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  004bc	50		 push	 eax
  004bd	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  004c0	50		 push	 eax
  004c1	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  004c6	8b f0		 mov	 esi, eax
  004c8	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  004cb	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  004ce	3b c6		 cmp	 eax, esi
  004d0	74 49		 je	 SHORT $LN260@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004d2	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  004d5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  004d8	72 0d		 jb	 SHORT $LN249@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004da	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004db	51		 push	 ecx
  004dc	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  004df	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004e4	83 c4 08	 add	 esp, 8
$LN249@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  004e7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  004ee	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  004f5	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  004f9	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  004fc	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00500	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00505	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0050a	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00511	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00518	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN260@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0051b	8b 45 d4	 mov	 eax, DWORD PTR $T5[ebp+20]
  0051e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00521	0f 82 c6 01 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00527	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00528	50		 push	 eax
  00529	ff 75 c0	 push	 DWORD PTR $T5[ebp]
  0052c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00531	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1144 : 			}

  00534	e9 b4 01 00 00	 jmp	 $LN23@SetNumber
$LN18@SetNumber:

; 1145 : 			else if ('p' == cChar)

  00539	80 f9 70	 cmp	 cl, 112			; 00000070H
  0053c	0f 85 85 00 00
	00		 jne	 $LN20@SetNumber

; 1146 : 			{
; 1147 : 				strImageFileName = m_strPath + "p.sub";

  00542	68 00 00 00 00	 push	 OFFSET ??_C@_05EHJFGOBE@p?4sub@
  00547	8d 46 7c	 lea	 eax, DWORD PTR [esi+124]
  0054a	50		 push	 eax
  0054b	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  0054e	50		 push	 eax
  0054f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00554	8b f0		 mov	 esi, eax
  00556	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00559	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0055c	3b c6		 cmp	 eax, esi
  0055e	74 49		 je	 SHORT $LN288@SetNumber

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00560	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00563	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00566	72 0d		 jb	 SHORT $LN277@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00568	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00569	51		 push	 ecx
  0056a	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  0056d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00572	83 c4 08	 add	 esp, 8
$LN277@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00575	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0057c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00583	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00587	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  0058a	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0058e	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00593	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00598	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0059f	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005a6	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN288@SetNumber:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005a9	8b 45 d4	 mov	 eax, DWORD PTR $T4[ebp+20]
  005ac	83 f8 10	 cmp	 eax, 16			; 00000010H
  005af	0f 82 38 01 00
	00		 jb	 $LN23@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  005b5	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005b6	50		 push	 eax
  005b7	ff 75 c0	 push	 DWORD PTR $T4[ebp]
  005ba	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  005bf	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1148 : 			}

  005c2	e9 26 01 00 00	 jmp	 $LN23@SetNumber
$LN20@SetNumber:

; 1149 : 			else if (cChar >= '0' && cChar <= '9')

  005c7	8a c1		 mov	 al, cl
  005c9	2c 30		 sub	 al, 48			; 00000030H
  005cb	3c 09		 cmp	 al, 9
  005cd	0f 87 f5 01 00
	00		 ja	 $LN22@SetNumber

; 1150 : 			{
; 1151 : 				strImageFileName = m_strPath;

  005d3	83 c6 7c	 add	 esi, 124		; 0000007cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  005d6	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  005d9	3b c6		 cmp	 eax, esi
  005db	74 22		 je	 SHORT $LN300@SetNumber

; 2145 :         if (_Large_string_engaged()) {

  005dd	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  005e1	8b c6		 mov	 eax, esi
  005e3	72 02		 jb	 SHORT $LN305@SetNumber

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  005e5	8b 06		 mov	 eax, DWORD PTR [esi]
$LN305@SetNumber:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  005e7	ff 76 10	 push	 DWORD PTR [esi+16]
  005ea	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  005ed	50		 push	 eax
  005ee	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  005f3	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  005f6	8b 7d e8	 mov	 edi, DWORD PTR _strImageFileName$12[ebp+16]
  005f9	8a 4d bf	 mov	 cl, BYTE PTR _cChar$1$[ebp]
  005fc	89 55 b8	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx
$LN300@SetNumber:

; 3608 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  005ff	3b fa		 cmp	 edi, edx

; 3609 :         if (_Old_size < _Mypair._Myval2._Myres) {

  00601	73 1d		 jae	 SHORT $LN312@SetNumber

; 3610 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00603	8d 47 01	 lea	 eax, DWORD PTR [edi+1]

; 2136 :         if (_Large_string_engaged()) {

  00606	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3610 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00609	89 45 e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  0060c	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]

; 2136 :         if (_Large_string_engaged()) {

  0060f	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]

; 3612 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  00613	88 0c 38	 mov	 BYTE PTR [eax+edi], cl

; 3613 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  00616	c6 44 38 01 00	 mov	 BYTE PTR [eax+edi+1], 0

; 3614 :             return;

  0061b	e9 c0 00 00 00	 jmp	 $LN322@SetNumber
$LN312@SetNumber:

; 4248 :         const size_type _Old_size = _My_data._Mysize;

  00620	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00625	2b c7		 sub	 eax, edi

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  00627	83 f8 01	 cmp	 eax, 1
  0062a	0f 82 c1 01 00
	00		 jb	 $LN399@SetNumber

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  00630	8d 77 01	 lea	 esi, DWORD PTR [edi+1]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00633	83 ce 0f	 or	 esi, 15			; 0000000fH
  00636	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0063c	76 07		 jbe	 SHORT $LN327@SetNumber

; 4203 :             return _Max;

  0063e	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00643	eb 1e		 jmp	 SHORT $LN326@SetNumber
$LN327@SetNumber:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00645	8b ca		 mov	 ecx, edx
  00647	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0064c	d1 e9		 shr	 ecx, 1
  0064e	2b c1		 sub	 eax, ecx
  00650	3b d0		 cmp	 edx, eax
  00652	76 07		 jbe	 SHORT $LN328@SetNumber

; 4207 :             return _Max;

  00654	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00659	eb 08		 jmp	 SHORT $LN326@SetNumber
$LN328@SetNumber:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0065b	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  0065e	3b f0		 cmp	 esi, eax
  00660	0f 42 f0	 cmovb	 esi, eax
$LN326@SetNumber:

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00663	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00666	50		 push	 eax
  00667	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4259 :         _My_data._Mysize      = _New_size;

  0066c	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]

; 4260 :         _My_data._Myres       = _New_capacity;

  0066f	89 75 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00672	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4259 :         _My_data._Mysize      = _New_size;

  00675	89 4d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], ecx

; 4261 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  00678	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  0067b	89 45 a8	 mov	 DWORD PTR __New_ptr$2[ebp], eax
  0067e	03 c8		 add	 ecx, eax
  00680	8d 34 38	 lea	 esi, DWORD PTR [eax+edi]

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  00683	83 7d b8 10	 cmp	 DWORD PTR __Old_capacity$1$[ebp], 16 ; 00000010H
  00687	89 75 ac	 mov	 DWORD PTR tv2504[ebp], esi
  0068a	89 4d b0	 mov	 DWORD PTR tv2503[ebp], ecx
  0068d	57		 push	 edi
  0068e	72 2b		 jb	 SHORT $LN321@SetNumber

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00690	8b 75 d8	 mov	 esi, DWORD PTR _strImageFileName$12[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00693	56		 push	 esi
  00694	50		 push	 eax
  00695	e8 00 00 00 00	 call	 _memcpy

; 3621 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  0069a	8b 4d ac	 mov	 ecx, DWORD PTR tv2504[ebp]
  0069d	8a 45 bf	 mov	 al, BYTE PTR _cChar$1$[ebp]
  006a0	88 01		 mov	 BYTE PTR [ecx], al

; 3622 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  006a2	8b 45 b0	 mov	 eax, DWORD PTR tv2503[ebp]
  006a5	c6 00 00	 mov	 BYTE PTR [eax], 0

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  006a8	8b 45 b8	 mov	 eax, DWORD PTR __Old_capacity$1$[ebp]
  006ab	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006ac	50		 push	 eax
  006ad	56		 push	 esi
  006ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  006b3	8b 45 a8	 mov	 eax, DWORD PTR __New_ptr$2[ebp]
  006b6	89 45 d8	 mov	 DWORD PTR _strImageFileName$12[ebp], eax

; 4267 :         } else {

  006b9	eb 22		 jmp	 SHORT $LN418@SetNumber
$LN321@SetNumber:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  006bb	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  006be	51		 push	 ecx
  006bf	50		 push	 eax
  006c0	e8 00 00 00 00	 call	 _memcpy

; 3621 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  006c5	8a 45 bf	 mov	 al, BYTE PTR _cChar$1$[ebp]
  006c8	88 06		 mov	 BYTE PTR [esi], al

; 3622 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  006ca	8b 45 b0	 mov	 eax, DWORD PTR tv2503[ebp]
  006cd	c6 00 00	 mov	 BYTE PTR [eax], 0

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  006d0	8d 45 a8	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  006d3	50		 push	 eax
  006d4	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  006d7	50		 push	 eax
  006d8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN418@SetNumber:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1153 : 				strImageFileName += ".sub";

  006dd	83 c4 14	 add	 esp, 20			; 00000014H
$LN322@SetNumber:
  006e0	68 00 00 00 00	 push	 OFFSET ??_C@_04DLFHDFGL@?4sub@
  006e5	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  006e8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN23@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006ed	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  006f1	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1158 : 			if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  006f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006fa	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1158 : 			if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  006fe	50		 push	 eax
  006ff	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  00704	84 c0		 test	 al, al
  00706	75 3d		 jne	 SHORT $LN24@SetNumber
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00708	8b 45 ec	 mov	 eax, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1159 : 				continue;

  0070b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00712	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00715	72 0d		 jb	 SHORT $LN415@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00717	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00718	50		 push	 eax
  00719	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  0071c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00721	83 c4 08	 add	 esp, 8
$LN415@SetNumber:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1112 : 		for (DWORD i = 0; i < m_strNumber.size(); ++i)

  00724	8b 75 b4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@SetNumber:
  00727	8b 4d a4	 mov	 ecx, DWORD PTR _i$1$[ebp]
  0072a	41		 inc	 ecx
  0072b	89 4d a4	 mov	 DWORD PTR _i$1$[ebp], ecx
  0072e	3b 8e a4 00 00
	00		 cmp	 ecx, DWORD PTR [esi+164]
  00734	0f 83 9a 00 00
	00		 jae	 $LN406@SetNumber
  0073a	8d be 94 00 00
	00		 lea	 edi, DWORD PTR [esi+148]
  00740	e9 eb f9 ff ff	 jmp	 $LL4@SetNumber
$LN24@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00745	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  00749	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1161 : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  0074c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00752	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1161 : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  00756	50		 push	 eax
  00757	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0075c	8b f0		 mov	 esi, eax

; 1162 : 
; 1163 : 			CGraphicImageInstance * pInstance = CGraphicImageInstance::New();

  0075e	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  00763	8b f8		 mov	 edi, eax

; 1164 : 			pInstance->SetImagePointer(pImage);

  00765	56		 push	 esi
  00766	8b cf		 mov	 ecx, edi
  00768	89 7d ac	 mov	 DWORD PTR _pInstance$3[ebp], edi
  0076b	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1165 : 			m_ImageInstanceVector.push_back(pInstance);

  00770	8b 75 b4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00773	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR [esi+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1165 : 			m_ImageInstanceVector.push_back(pInstance);

  00779	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0077f	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00782	74 08		 je	 SHORT $LN384@SetNumber

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00784	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00786	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0078a	eb 0a		 jmp	 SHORT $LN383@SetNumber
$LN384@SetNumber:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0078c	8d 55 ac	 lea	 edx, DWORD PTR _pInstance$3[ebp]
  0078f	52		 push	 edx
  00790	50		 push	 eax
  00791	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
$LN383@SetNumber:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1167 : 			m_dwWidthSummary += pInstance->GetWidth();

  00796	8b cf		 mov	 ecx, edi
  00798	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0079d	01 86 bc 00 00
	00		 add	 DWORD PTR [esi+188], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  007a3	8b 45 ec	 mov	 eax, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1168 : 		}

  007a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  007ad	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007b0	0f 82 71 ff ff
	ff		 jb	 $LN2@SetNumber

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  007b6	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007b7	50		 push	 eax
  007b8	ff 75 d8	 push	 DWORD PTR _strImageFileName$12[ebp]
  007bb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  007c0	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1168 : 		}

  007c3	e9 5f ff ff ff	 jmp	 $LN2@SetNumber
$LN22@SetNumber:

; 1154 : 			}
; 1155 : 			else
; 1156 : 				continue;

  007c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007cf	e9 53 ff ff ff	 jmp	 $LN2@SetNumber
$LN406@SetNumber:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1169 : 	}

  007d4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  007d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  007de	59		 pop	 ecx
  007df	5f		 pop	 edi
  007e0	5e		 pop	 esi
  007e1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007e4	33 cd		 xor	 ecx, ebp
  007e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007eb	8b e5		 mov	 esp, ebp
  007ed	5d		 pop	 ebp
  007ee	c2 04 00	 ret	 4
$LN399@SetNumber:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4250 :             _Xlen_string(); // result too long

  007f1	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN417@SetNumber:
  007f6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetNumber@CNumberLine@UI@@QAEXPBD@Z ENDP		; UI::CNumberLine::SetNumber
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z PROC	; UI::CNumberLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 1100 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1101 : 		m_iHorizontalAlign = iType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]
  00006	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1102 : 	}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ENDP	; UI::CNumberLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPath@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szPath$ = 8						; size = 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z PROC			; UI::CNumberLine::SetPath, COMDAT
; _this$ = ecx

; 1096 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szPath$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1096 : 	{

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetPath:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetPath
  00017	2b c7		 sub	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1097 : 		m_strPath = c_szPath;

  00019	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1098 : 	}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z ENDP			; UI::CNumberLine::SetPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CNumberLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CNumberLine@UI@@UAE@XZ PROC				; UI::CNumberLine::~CNumberLine, COMDAT
; _this$ = ecx

; 1091 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNumberLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@

; 1092 : 		ClearNumber();

  0002b	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00036	85 c9		 test	 ecx, ecx
  00038	74 33		 je	 SHORT $LN6@CNumberLin

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003a	8b 86 b4 00 00
	00		 mov	 eax, DWORD PTR [esi+180]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004c	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00056	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00059	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 1699 :             _Myend   = pointer();

  00063	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
$LN6@CNumberLin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006d	8b 86 a8 00 00
	00		 mov	 eax, DWORD PTR [esi+168]
  00073	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00076	72 10		 jb	 SHORT $LN14@CNumberLin

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00078	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00079	50		 push	 eax
  0007a	ff b6 94 00 00
	00		 push	 DWORD PTR [esi+148]
  00080	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00085	83 c4 08	 add	 esp, 8
$LN14@CNumberLin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00088	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00092	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009c	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  000a3	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  000a9	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ac	72 0d		 jb	 SHORT $LN24@CNumberLin

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ae	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	50		 push	 eax
  000b0	ff 76 7c	 push	 DWORD PTR [esi+124]
  000b3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b8	83 c4 08	 add	 esp, 8
$LN24@CNumberLin:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1093 : 	}

  000bb	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000bd	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000c7	c7 86 90 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+144], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000d1	c6 46 7c 00	 mov	 BYTE PTR [esi+124], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1093 : 	}

  000d5	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000da	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000dd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e4	59		 pop	 ecx
  000e5	5e		 pop	 esi
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
  000ea	cc		 int	 3
  000eb	cc		 int	 3
  000ec	cc		 int	 3
  000ed	cc		 int	 3
  000ee	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CNumberLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNumberLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNumberLine@UI@@UAE@XZ ENDP				; UI::CNumberLine::~CNumberLine
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
_TEXT	SEGMENT
__Old$1$ = -24						; size = 4
__New_ptr$2 = -20					; size = 4
_this$ = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pParent$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1083 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi

; 1082 : 	CNumberLine::CNumberLine(CWindow * pParent) : CWindow(NULL)

  0002c	6a 00		 push	 0
  0002e	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1083 : 	{

  00033	8d 77 7c	 lea	 esi, DWORD PTR [edi+124]
  00036	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CNumberLine@UI@@6B@
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00043	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004a	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00051	c6 06 00	 mov	 BYTE PTR [esi], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00054	c7 87 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+164], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0005e	c7 87 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [edi+168], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00068	c6 87 94 00 00
	00 00		 mov	 BYTE PTR [edi+148], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0006f	c7 87 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+172], 0
  00079	c7 87 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+176], 0
  00083	c7 87 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+180], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  0008d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1083 : 	{

  00090	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00094	89 4d e8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00097	83 f9 1d	 cmp	 ecx, 29			; 0000001dH
  0009a	72 25		 jb	 SHORT $LN48@CNumberLin

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0009c	8b 36		 mov	 esi, DWORD PTR [esi]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0009e	6a 1d		 push	 29			; 0000001dH
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
  000a5	56		 push	 esi

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000a6	c7 87 8c 00 00
	00 1d 00 00 00	 mov	 DWORD PTR [edi+140], 29	; 0000001dH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000b0	e8 00 00 00 00	 call	 _memmove
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000b8	c6 46 1d 00	 mov	 BYTE PTR [esi+29], 0

; 2971 :             return *this;

  000bc	e9 95 00 00 00	 jmp	 $LN50@CNumberLin
$LN48@CNumberLin:

; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  000c1	8b d1		 mov	 edx, ecx
  000c3	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  000c8	d1 ea		 shr	 edx, 1
  000ca	2b c2		 sub	 eax, edx
  000cc	3b c8		 cmp	 ecx, eax
  000ce	76 07		 jbe	 SHORT $LN56@CNumberLin

; 4207 :             return _Max;

  000d0	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000d5	eb 0d		 jmp	 SHORT $LN73@CNumberLin
$LN56@CNumberLin:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000d7	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000da	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  000df	3b c1		 cmp	 eax, ecx
  000e1	0f 47 c8	 cmova	 ecx, eax
$LN73@CNumberLin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000e4	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000e7	89 4d f0	 mov	 DWORD PTR $T3[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  000f0	8b 4d f0	 mov	 ecx, DWORD PTR $T3[ebp]
  000f3	8b d0		 mov	 edx, eax
  000f5	c7 46 10 1d 00
	00 00		 mov	 DWORD PTR [esi+16], 29	; 0000001dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000fc	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  000ff	89 4e 14	 mov	 DWORD PTR [esi+20], ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00102	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00109	89 55 ec	 mov	 DWORD PTR __New_ptr$2[ebp], edx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0010c	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  0010f	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@+16
  00117	66 0f d6 42 10	 movq	 QWORD PTR [edx+16], xmm0
  0011c	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@+24
  00122	89 4a 18	 mov	 DWORD PTR [edx+24], ecx
  00125	a0 1c 00 00 00	 mov	 al, BYTE PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@+28
  0012a	88 42 1c	 mov	 BYTE PTR [edx+28], al

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0012d	8b 45 e8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00130	c6 42 1d 00	 mov	 BYTE PTR [edx+29], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  00134	83 f8 10	 cmp	 eax, 16			; 00000010H
  00137	72 10		 jb	 SHORT $LN49@CNumberLin

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  00139	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013a	50		 push	 eax
  0013b	ff 36		 push	 DWORD PTR [esi]
  0013d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00142	8b 45 ec	 mov	 eax, DWORD PTR __New_ptr$2[ebp]
  00145	89 06		 mov	 DWORD PTR [esi], eax

; 4236 :         } else {

  00147	eb 0a		 jmp	 SHORT $LN74@CNumberLin
$LN49@CNumberLin:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00149	8d 45 ec	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  0014c	50		 push	 eax
  0014d	56		 push	 esi
  0014e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN74@CNumberLin:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1085 : 		m_iHorizontalAlign = HORIZONTAL_ALIGN_LEFT;

  00153	83 c4 08	 add	 esp, 8
$LN50@CNumberLin:

; 1086 : 		m_dwWidthSummary = 0;
; 1087 : 
; 1088 : 		m_pParent = pParent;

  00156	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  00159	89 47 60	 mov	 DWORD PTR [edi+96], eax

; 1089 : 	}

  0015c	8b c7		 mov	 eax, edi
  0015e	c7 87 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+184], 0
  00168	c7 87 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+188], 0
  00172	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00175	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017c	59		 pop	 ecx
  0017d	5f		 pop	 edi
  0017e	5e		 pop	 esi
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002a	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:
  00034	90		 npad	 1
  00035	90		 npad	 1
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
__Old$1$ = -20						; size = 4
__New_ptr$2 = -16					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_ppyObject$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1077 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
  00029	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1076 : 	CNumberLine::CNumberLine(PyObject * ppyObject) : CWindow(ppyObject)

  0002c	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002f	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1077 : 	{

  00034	8d 7e 7c	 lea	 edi, DWORD PTR [esi+124]
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00044	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004b	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00052	c6 07 00	 mov	 BYTE PTR [edi], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00055	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0005f	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00069	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00070	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  0007a	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  00084	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  0008e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1077 : 	{

  00091	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00095	89 4d ec	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00098	83 f9 1d	 cmp	 ecx, 29			; 0000001dH
  0009b	72 25		 jb	 SHORT $LN48@CNumberLin

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0009d	8b 37		 mov	 esi, DWORD PTR [edi]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0009f	6a 1d		 push	 29			; 0000001dH
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
  000a6	56		 push	 esi

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000a7	c7 47 10 1d 00
	00 00		 mov	 DWORD PTR [edi+16], 29	; 0000001dH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000ae	e8 00 00 00 00	 call	 _memmove

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000b3	c6 46 1d 00	 mov	 BYTE PTR [esi+29], 0

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2971 :             return *this;

  000ba	8b 75 f0	 mov	 esi, DWORD PTR _this$[ebp]
  000bd	e9 95 00 00 00	 jmp	 $LN50@CNumberLin
$LN48@CNumberLin:

; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  000c2	8b d1		 mov	 edx, ecx
  000c4	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  000c9	d1 ea		 shr	 edx, 1
  000cb	2b c2		 sub	 eax, edx
  000cd	3b c8		 cmp	 ecx, eax
  000cf	76 07		 jbe	 SHORT $LN56@CNumberLin

; 4207 :             return _Max;

  000d1	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000d6	eb 0d		 jmp	 SHORT $LN73@CNumberLin
$LN56@CNumberLin:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000d8	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000db	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  000e0	3b c1		 cmp	 eax, ecx
  000e2	0f 47 c8	 cmova	 ecx, eax
$LN73@CNumberLin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000e5	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000e8	89 4d 08	 mov	 DWORD PTR $T3[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  000f1	8b 4d 08	 mov	 ecx, DWORD PTR $T3[ebp]
  000f4	8b d0		 mov	 edx, eax
  000f6	c7 47 10 1d 00
	00 00		 mov	 DWORD PTR [edi+16], 29	; 0000001dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000fd	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00100	89 4f 14	 mov	 DWORD PTR [edi+20], ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00103	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0010a	89 55 f0	 mov	 DWORD PTR __New_ptr$2[ebp], edx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0010d	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00110	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@+16
  00118	66 0f d6 42 10	 movq	 QWORD PTR [edx+16], xmm0
  0011d	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@+24
  00123	89 4a 18	 mov	 DWORD PTR [edx+24], ecx
  00126	a0 1c 00 00 00	 mov	 al, BYTE PTR ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@+28
  0012b	88 42 1c	 mov	 BYTE PTR [edx+28], al

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0012e	8b 45 ec	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00131	c6 42 1d 00	 mov	 BYTE PTR [edx+29], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  00135	83 f8 10	 cmp	 eax, 16			; 00000010H
  00138	72 10		 jb	 SHORT $LN49@CNumberLin

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  0013a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013b	50		 push	 eax
  0013c	ff 37		 push	 DWORD PTR [edi]
  0013e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00143	8b 45 f0	 mov	 eax, DWORD PTR __New_ptr$2[ebp]
  00146	89 07		 mov	 DWORD PTR [edi], eax

; 4236 :         } else {

  00148	eb 0a		 jmp	 SHORT $LN74@CNumberLin
$LN49@CNumberLin:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0014a	8d 45 f0	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  0014d	50		 push	 eax
  0014e	57		 push	 edi
  0014f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN74@CNumberLin:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1079 : 		m_iHorizontalAlign = HORIZONTAL_ALIGN_LEFT;

  00154	83 c4 08	 add	 esp, 8
$LN50@CNumberLin:
  00157	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0

; 1080 : 		m_dwWidthSummary = 0;
; 1081 : 	}

  00161	8b c6		 mov	 eax, esi
  00163	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  0016d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00170	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00177	59		 pop	 ecx
  00178	5f		 pop	 edi
  00179	5e		 pop	 esi
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002a	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z:
  00034	90		 npad	 1
  00035	90		 npad	 1
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
;	COMDAT ??_GCTextLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextLine@UI@@UAEPAXI@Z PROC			; UI::CTextLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTextLine@UI@@UAE@XZ	; UI::CTextLine::~CTextLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 f8 00 00 00	 push	 248			; 000000f8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCTextLine@UI@@UAEPAXI@Z ENDP			; UI::CTextLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetText@CTextLine@UI@@MAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z PROC			; UI::CTextLine::OnSetText, COMDAT
; _this$ = ecx

; 1042 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1043 : 		m_TextInstance.SetValue(c_szText);

  00004	6a ff		 push	 -1
  00006	ff 75 08	 push	 DWORD PTR _c_szText$[ebp]
  00009	8d 71 7c	 lea	 esi, DWORD PTR [ecx+124]
  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetValue@CGraphicTextInstance@@QAEXPBDI@Z ; CGraphicTextInstance::SetValue

; 1044 : 		m_TextInstance.Update();

  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
  0001a	5e		 pop	 esi

; 1045 : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z ENDP			; UI::CTextLine::OnSetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CTextLine@UI@@MAEXXZ PROC		; UI::CTextLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1059 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1060 : 		// FOR_ARABIC_ALIGN
; 1061 : 		//if (m_TextInstance.GetHorizontalAlign() == CGraphicTextInstance::HORIZONTAL_ALIGN_ARABIC)
; 1062 : 		if( GetDefaultCodePage() == CP_ARABIC )

  00003	e8 00 00 00 00	 call	 ?GetDefaultCodePage@@YAKXZ ; GetDefaultCodePage
  00008	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  0000b	3d e8 04 00 00	 cmp	 eax, 1256		; 000004e8H
  00010	75 05		 jne	 SHORT $LN2@OnChangePo

; 1063 : 		{
; 1064 : 			m_TextInstance.SetPosition(m_rect.right, m_rect.top);

  00012	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]

; 1065 : 		}

  00015	eb 03		 jmp	 SHORT $LN3@OnChangePo
$LN2@OnChangePo:

; 1066 : 		else
; 1067 : 		{
; 1068 : 			m_TextInstance.SetPosition(m_rect.left, m_rect.top);

  00017	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
$LN3@OnChangePo:
  0001a	66 0f 6e c1	 movd	 xmm0, ecx

; 1069 : 		}
; 1070 : 	}

  0001e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00021	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00024	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00027	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  0002f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00035	66 0f 6e c0	 movd	 xmm0, eax
  00039	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00041	e8 00 00 00 00	 call	 ?SetPosition@CGraphicTextInstance@@QAEXMMM@Z ; CGraphicTextInstance::SetPosition
  00046	5e		 pop	 esi
  00047	c3		 ret	 0
?OnChangePosition@CTextLine@UI@@MAEXXZ ENDP		; UI::CTextLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnRender, COMDAT
; _this$ = ecx

; 1054 : 		if (IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 0a		 je	 SHORT $LN2@OnRender

; 1055 : 			m_TextInstance.Render();

  00006	6a 00		 push	 0
  00008	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000b	e8 00 00 00 00	 call	 ?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z ; CGraphicTextInstance::Render
$LN2@OnRender:

; 1056 : 	}

  00010	c3		 ret	 0
?OnRender@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnUpdate, COMDAT
; _this$ = ecx

; 1049 : 		if (IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 08		 je	 SHORT $LN2@OnUpdate

; 1050 : 			m_TextInstance.Update();

  00006	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00009	e9 00 00 00 00	 jmp	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
$LN2@OnUpdate:

; 1051 : 	}

  0000e	c3		 ret	 0
?OnUpdate@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z
_TEXT	SEGMENT
_pnWidth$ = 8						; size = 4
_pnHeight$ = 12						; size = 4
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z PROC		; UI::CTextLine::GetTextSize, COMDAT
; _this$ = ecx

; 1019 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1020 : 		m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1021 : 	}

  00006	5d		 pop	 ebp

; 1020 : 		m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00007	e9 00 00 00 00	 jmp	 ?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z ; CGraphicTextInstance::GetTextSize
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ENDP		; UI::CTextLine::GetTextSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetText@CTextLine@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetText@CTextLine@UI@@QAEPBDXZ PROC			; UI::CTextLine::GetText, COMDAT
; _this$ = ecx

; 1024 : 		return m_TextInstance.GetValueStringReference().c_str();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e8 00 00 00 00	 call	 ?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CGraphicTextInstance::GetValueStringReference
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@GetText
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1024 : 		return m_TextInstance.GetValueStringReference().c_str();

  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetText:

; 1025 : 	}

  00010	c3		 ret	 0
?GetText@CTextLine@UI@@QAEPBDXZ ENDP			; UI::CTextLine::GetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetText@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?SetText@CTextLine@UI@@QAEXPBD@Z PROC			; UI::CTextLine::SetText, COMDAT
; _this$ = ecx

; 1015 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1016 : 		OnSetText(c_szText);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1017 : 	}

  00005	5d		 pop	 ebp

; 1016 : 		OnSetText(c_szText);

  00006	ff a0 9c 00 00
	00		 jmp	 DWORD PTR [eax+156]
?SetText@CTextLine@UI@@QAEXPBD@Z ENDP			; UI::CTextLine::SetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetCursorPosition@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
?GetCursorPosition@CTextLine@UI@@QAEHXZ PROC		; UI::CTextLine::GetCursorPosition, COMDAT
; _this$ = ecx

; 1035 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1036 : 		long lx, ly;
; 1037 : 		CWindow::GetMouseLocalPosition(lx, ly);

  00007	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition

; 1038 : 		return m_TextInstance.PixelPositionToCharacterPosition(lx);

  00016	ff 75 fc	 push	 DWORD PTR _lx$[ebp]
  00019	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  0001c	e8 00 00 00 00	 call	 ?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z ; CGraphicTextInstance::PixelPositionToCharacterPosition
  00021	5e		 pop	 esi

; 1039 : 	}

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?GetCursorPosition@CTextLine@UI@@QAEHXZ ENDP		; UI::CTextLine::GetCursorPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?HideCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?HideCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::HideCursor, COMDAT
; _this$ = ecx

; 1032 : 		m_TextInstance.HideCursor();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?HideCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::HideCursor
?HideCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::HideCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ShowCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?ShowCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::ShowCursor, COMDAT
; _this$ = ecx

; 1028 : 		m_TextInstance.ShowCursor();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?ShowCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::ShowCursor
?ShowCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::ShowCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetLimitWidth@CTextLine@UI@@QAEXM@Z
_TEXT	SEGMENT
_fWidth$ = 8						; size = 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z PROC		; UI::CTextLine::SetLimitWidth, COMDAT
; _this$ = ecx

; 1011 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1012 : 		m_TextInstance.SetLimitWidth(fWidth);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fWidth$[ebp]
  00008	51		 push	 ecx
  00009	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	e8 00 00 00 00	 call	 ?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z ; CGraphicTextInstance::SetLimitWidth

; 1013 : 	}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z ENDP		; UI::CTextLine::SetLimitWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontColor@CTextLine@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetFontColor@CTextLine@UI@@QAEXK@Z PROC		; UI::CTextLine::SetFontColor, COMDAT
; _this$ = ecx

; 1007 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1008 : 		m_TextInstance.SetColor(dwColor);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1009 : 	}

  00006	5d		 pop	 ebp

; 1008 : 		m_TextInstance.SetColor(dwColor);

  00007	e9 00 00 00 00	 jmp	 ?SetColor@CGraphicTextInstance@@QAEXK@Z ; CGraphicTextInstance::SetColor
?SetFontColor@CTextLine@UI@@QAEXK@Z ENDP		; UI::CTextLine::SetFontColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontName@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_stFontName$ = -40					; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFontName$ = 8					; size = 4
?SetFontName@CTextLine@UI@@QAEXPBD@Z PROC		; UI::CTextLine::SetFontName, COMDAT
; _this$ = ecx

; 997  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	8b 55 08	 mov	 edx, DWORD PTR _c_szFontName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0002f	8b c2		 mov	 eax, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00031	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00038	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003f	c6 45 d8 00	 mov	 BYTE PTR _stFontName$[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00043	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
$LL33@SetFontNam:
  00046	8a 08		 mov	 cl, BYTE PTR [eax]
  00048	40		 inc	 eax
  00049	84 c9		 test	 cl, cl
  0004b	75 f9		 jne	 SHORT $LL33@SetFontNam
  0004d	2b c7		 sub	 eax, edi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0004f	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00052	50		 push	 eax
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 999  : 		stFontName += ".fnt";

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_04FAHLGLIA@?4fnt@
  0005e	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00068	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006d	83 7d ec 10	 cmp	 DWORD PTR _stFontName$[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00071	8d 45 d8	 lea	 eax, DWORD PTR _stFontName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1002 : 		CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0007a	0f 43 45 d8	 cmovae	 eax, DWORD PTR _stFontName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1002 : 		CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  0007e	6a ff		 push	 -1
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z ; CResourceManager::GetTypeResourcePointer

; 1003 : 		CGraphicText* pkResFont=static_cast<CGraphicText*>(pkRes);
; 1004 : 		m_TextInstance.SetTextPointer(pkResFont);

  00086	50		 push	 eax
  00087	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  0008a	e8 00 00 00 00	 call	 ?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z ; CGraphicTextInstance::SetTextPointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0008f	8b 45 ec	 mov	 eax, DWORD PTR _stFontName$[ebp+20]
  00092	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00095	72 0d		 jb	 SHORT $LN27@SetFontNam

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00097	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00098	50		 push	 eax
  00099	ff 75 d8	 push	 DWORD PTR _stFontName$[ebp]
  0009c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a1	83 c4 08	 add	 esp, 8
$LN27@SetFontNam:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 1005 : 	}

  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b4	33 cd		 xor	 ecx, ebp
  000b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetFontName@CTextLine@UI@@QAEXPBD@Z ENDP		; UI::CTextLine::SetFontName
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMultiLine@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetMultiLine@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetMultiLine, COMDAT
; _this$ = ecx

; 993  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 994  : 		m_TextInstance.SetMultiLine(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 995  : 	}

  00013	5d		 pop	 ebp

; 994  : 		m_TextInstance.SetMultiLine(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetMultiLine
?SetMultiLine@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetMultiLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFeather@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetFeather@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetFeather, COMDAT
; _this$ = ecx

; 989  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 990  : 		m_TextInstance.SetFeather(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 991  : 	}

  00013	5d		 pop	 ebp

; 990  : 		m_TextInstance.SetFeather(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetFeather@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetFeather
?SetFeather@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetFeather
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOutline@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetOutline@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetOutline, COMDAT
; _this$ = ecx

; 985  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 986  : 		m_TextInstance.SetOutline(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 987  : 	}

  00013	5d		 pop	 ebp

; 986  : 		m_TextInstance.SetOutline(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetOutline@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetOutline
?SetOutline@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetOutline
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSecret@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetSecret@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetSecret, COMDAT
; _this$ = ecx

; 981  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 982  : 		m_TextInstance.SetSecret(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 983  : 	}

  00013	5d		 pop	 ebp

; 982  : 		m_TextInstance.SetSecret(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetSecret@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetSecret
?SetSecret@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetSecret
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetVerticalAlign, COMDAT
; _this$ = ecx

; 977  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 978  : 		m_TextInstance.SetVerticalAlign(iType);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 979  : 	}

  00006	5d		 pop	 ebp

; 978  : 		m_TextInstance.SetVerticalAlign(iType);

  00007	e9 00 00 00 00	 jmp	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 973  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 974  : 		m_TextInstance.SetHorizonalAlign(iType);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 975  : 	}

  00006	5d		 pop	 ebp

; 974  : 		m_TextInstance.SetHorizonalAlign(iType);

  00007	e9 00 00 00 00	 jmp	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMax@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMax$ = 8						; size = 4
?SetMax@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetMax, COMDAT
; _this$ = ecx

; 969  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 970  : 		m_TextInstance.SetMax(iMax);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 971  : 	}

  00006	5d		 pop	 ebp

; 970  : 		m_TextInstance.SetMax(iMax);

  00007	e9 00 00 00 00	 jmp	 ?SetMax@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetMax
?SetMax@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetMax
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CTextLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTextLine@UI@@UAE@XZ PROC				; UI::CTextLine::~CTextLine, COMDAT
; _this$ = ecx

; 964  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTextLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 965  : 		m_TextInstance.Destroy();

  00026	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00029	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  0002f	e8 00 00 00 00	 call	 ?Destroy@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Destroy

; 966  : 	}

  00034	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00037	e8 00 00 00 00	 call	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  0003c	8b cf		 mov	 ecx, edi
  0003e	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTextLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTextLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTextLine@UI@@UAE@XZ ENDP				; UI::CTextLine::~CTextLine
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CTextLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CTextLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CTextLine::CTextLine, COMDAT
; _this$ = ecx

; 958  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 957  : 	CTextLine::CTextLine(PyObject * ppyObject) : CWindow(ppyObject)

  0002a	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 958  : 	{

  00032	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  00042	e8 00 00 00 00	 call	 ??0CGraphicTextInstance@@QAE@XZ ; CGraphicTextInstance::CGraphicTextInstance

; 959  : 		m_TextInstance.SetColor(0.78f, 0.78f, 0.78f);

  00047	83 ec 10	 sub	 esp, 16			; 00000010H
  0004a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004e	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00051	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00059	c7 44 24 08 14
	ae 47 3f	 mov	 DWORD PTR [esp+8], 1061662228 ; 3f47ae14H
  00061	c7 44 24 04 14
	ae 47 3f	 mov	 DWORD PTR [esp+4], 1061662228 ; 3f47ae14H
  00069	c7 04 24 14 ae
	47 3f		 mov	 DWORD PTR [esp], 1061662228 ; 3f47ae14H
  00070	e8 00 00 00 00	 call	 ?SetColor@CGraphicTextInstance@@QAEXMMMM@Z ; CGraphicTextInstance::SetColor

; 960  : 		m_TextInstance.SetHorizonalAlign(CGraphicTextInstance::HORIZONTAL_ALIGN_LEFT);

  00075	6a 01		 push	 1
  00077	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  0007a	e8 00 00 00 00	 call	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign

; 961  : 		m_TextInstance.SetVerticalAlign(CGraphicTextInstance::VERTICAL_ALIGN_TOP);

  0007f	6a 10		 push	 16			; 00000010H
  00081	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00084	e8 00 00 00 00	 call	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign

; 962  : 	}

  00089	8b c7		 mov	 eax, edi
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTextLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CTextLine::CTextLine
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar3D@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar3D@UI@@UAEPAXI@Z PROC				; UI::CBar3D::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar3D@UI@@UAE@XZ	; UI::CBar3D::~CBar3D
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 88 00 00 00	 push	 136			; 00000088H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar3D@UI@@UAEPAXI@Z ENDP				; UI::CBar3D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar3D@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar3D@UI@@MAEXXZ PROC			; UI::CBar3D::OnRender, COMDAT
; _this$ = ecx

; 938  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 939  : 		CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 940  : 
; 941  : 		rkpyGraphic.SetDiffuseColor(m_dwCenterColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff b6 84 00 00
	00		 push	 DWORD PTR [esi+132]
  00012	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00017	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 942  : 		rkpyGraphic.RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0001c	83 ec 14	 sub	 esp, 20			; 00000014H
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	8b cf		 mov	 ecx, edi
  00024	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002c	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00032	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00040	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00045	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00053	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d

; 943  : 
; 944  : 		rkpyGraphic.SetDiffuseColor(m_dwLeftColor);

  00060	ff 76 7c	 push	 DWORD PTR [esi+124]
  00063	8b cf		 mov	 ecx, edi
  00065	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  0006a	66 0f 6e 4e 38	 movd	 xmm1, DWORD PTR [esi+56]

; 945  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.top);

  0006f	83 ec 14	 sub	 esp, 20			; 00000014H
  00072	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00077	8b cf		 mov	 ecx, edi
  00079	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0007c	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00084	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00087	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0008d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00093	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00098	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009b	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  000ab	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 946  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.left, m_rect.bottom);

  000b0	83 ec 14	 sub	 esp, 20			; 00000014H
  000b3	66 0f 6e 4e 34	 movd	 xmm1, DWORD PTR [esi+52]
  000b8	8b cf		 mov	 ecx, edi
  000ba	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bd	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  000c5	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000c8	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000ce	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  000d3	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d6	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  000dc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e2	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e7	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d

; 947  : 
; 948  : 		rkpyGraphic.SetDiffuseColor(m_dwRightColor);

  000ec	ff b6 80 00 00
	00		 push	 DWORD PTR [esi+128]
  000f2	8b cf		 mov	 ecx, edi
  000f4	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  000f9	66 0f 6e 4e 40	 movd	 xmm1, DWORD PTR [esi+64]

; 949  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.bottom, m_rect.right, m_rect.bottom);

  000fe	83 ec 14	 sub	 esp, 20			; 00000014H
  00101	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00106	8b cf		 mov	 ecx, edi
  00108	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0010b	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00113	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00116	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0011c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00122	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00127	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0012a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00130	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00135	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0013a	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 950  : 		rkpyGraphic.RenderLine2d(m_rect.right, m_rect.top, m_rect.right, m_rect.bottom);

  0013f	83 ec 14	 sub	 esp, 20			; 00000014H
  00142	66 0f 6e 4e 3c	 movd	 xmm1, DWORD PTR [esi+60]
  00147	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0014a	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00152	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00155	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0015b	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00160	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  00166	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00169	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0016f	8b cf		 mov	 ecx, edi
  00171	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00176	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi

; 951  : 	}

  0017d	c3		 ret	 0
?OnRender@CBar3D@UI@@MAEXXZ ENDP			; UI::CBar3D::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar3D@UI@@QAEXKKK@Z
_TEXT	SEGMENT
_dwLeft$ = 8						; size = 4
_dwRight$ = 12						; size = 4
_dwCenter$ = 16						; size = 4
?SetColor@CBar3D@UI@@QAEXKKK@Z PROC			; UI::CBar3D::SetColor, COMDAT
; _this$ = ecx

; 931  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 932  : 		m_dwLeftColor = dwLeft;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwLeft$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 933  : 		m_dwRightColor = dwRight;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwRight$[ebp]
  0000c	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 934  : 		m_dwCenterColor = dwCenter;

  00012	8b 45 10	 mov	 eax, DWORD PTR _dwCenter$[ebp]
  00015	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 935  : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?SetColor@CBar3D@UI@@QAEXKKK@Z ENDP			; UI::CBar3D::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar3D@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar3D@UI@@UAE@XZ PROC				; UI::CBar3D::~CBar3D, COMDAT
; _this$ = ecx

; 927  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar3D@UI@@6B@

; 928  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar3D@UI@@UAE@XZ ENDP				; UI::CBar3D::~CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar3D@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar3D@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar3D::CBar3D, COMDAT
; _this$ = ecx

; 921  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar3D@UI@@6B@

; 922  : 		m_dwLeftColor = D3DXCOLOR(0.2f, 0.2f, 0.2f, 1.0f);
; 923  : 		m_dwRightColor = D3DXCOLOR(0.7f, 0.7f, 0.7f, 1.0f);
; 924  : 		m_dwCenterColor = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
; 925  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 33 33
	33 ff		 mov	 DWORD PTR [esi+124], -13421773 ; ff333333H
  00021	c7 86 80 00 00
	00 b3 b3 b3 ff	 mov	 DWORD PTR [esi+128], -5000269 ; ffb3b3b3H
  0002b	c7 86 84 00 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+132], -16777216 ; ff000000H
  00035	5e		 pop	 esi
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??0CBar3D@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar3D::CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CBar3D@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CBar3D@UI@@SAKXZ PROC				; UI::CBar3D::Type, COMDAT

; 915  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CBar3D@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 916  : 		static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 917  : 		return (s_dwType);
; 918  : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 916  : 		static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 06		 push	 6
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_06ICLMADCA@CBar3D@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CBar3D@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CBar3D@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CBar3D@UI@@SAKXZ ENDP				; UI::CBar3D::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCLine@UI@@UAEPAXI@Z PROC				; UI::CLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CLine@UI@@UAE@XZ	; UI::CLine::~CLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCLine@UI@@UAEPAXI@Z ENDP				; UI::CLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CLine@UI@@MAEXXZ PROC				; UI::CLine::OnRender, COMDAT
; _this$ = ecx

; 904  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 905  : 		CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 906  : 		rkpyGraphic.SetDiffuseColor(m_dwColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00014	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 907  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00019	83 ec 14	 sub	 esp, 20			; 00000014H
  0001c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001f	8b cf		 mov	 ecx, edi
  00021	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00029	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0002f	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00034	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00037	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003d	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00042	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00045	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004b	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00050	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00053	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00058	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi

; 908  : 	}

  0005f	c3		 ret	 0
?OnRender@CLine@UI@@MAEXXZ ENDP				; UI::CLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CLine@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CLine@UI@@UAEXK@Z PROC			; UI::CLine::SetColor, COMDAT
; _this$ = ecx

; 899  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 900  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 901  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CLine@UI@@UAEXK@Z ENDP			; UI::CLine::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CLine@UI@@UAE@XZ
_TEXT	SEGMENT
??1CLine@UI@@UAE@XZ PROC				; UI::CLine::~CLine, COMDAT
; _this$ = ecx

; 895  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CLine@UI@@6B@

; 896  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CLine@UI@@UAE@XZ ENDP				; UI::CLine::~CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CLine@UI@@QAE@PAU_object@@@Z PROC			; UI::CLine::CLine, COMDAT
; _this$ = ecx

; 892  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLine@UI@@6B@

; 893  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CLine@UI@@QAE@PAU_object@@@Z ENDP			; UI::CLine::CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar@UI@@UAEPAXI@Z PROC				; UI::CBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar@UI@@UAE@XZ	; UI::CBar::~CBar
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar@UI@@UAEPAXI@Z ENDP				; UI::CBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar@UI@@MAEXXZ PROC				; UI::CBar::OnRender, COMDAT
; _this$ = ecx

; 882  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 883  : 		CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00011	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 884  : 		CPythonGraphic::Instance().RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00016	83 ec 14	 sub	 esp, 20			; 00000014H
  00019	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00022	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00043	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  0005e	5e		 pop	 esi

; 885  : 	}

  0005f	c3		 ret	 0
?OnRender@CBar@UI@@MAEXXZ ENDP				; UI::CBar::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBar@UI@@UAEXK@Z PROC				; UI::CBar::SetColor, COMDAT
; _this$ = ecx

; 877  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 878  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 879  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CBar@UI@@UAEXK@Z ENDP				; UI::CBar::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar@UI@@UAE@XZ PROC					; UI::CBar::~CBar, COMDAT
; _this$ = ecx

; 873  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar@UI@@6B@

; 874  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar@UI@@UAE@XZ ENDP					; UI::CBar::~CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar::CBar, COMDAT
; _this$ = ecx

; 870  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar@UI@@6B@

; 871  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CBar@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar::CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBox@UI@@UAEPAXI@Z PROC				; UI::CBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBox@UI@@UAE@XZ	; UI::CBox::~CBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBox@UI@@UAEPAXI@Z ENDP				; UI::CBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBox@UI@@MAEXXZ PROC				; UI::CBox::OnRender, COMDAT
; _this$ = ecx

; 860  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 861  : 		CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00011	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 862  : 		CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00016	83 ec 14	 sub	 esp, 20			; 00000014H
  00019	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00022	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00043	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
  0005e	5e		 pop	 esi

; 863  : 	}

  0005f	c3		 ret	 0
?OnRender@CBox@UI@@MAEXXZ ENDP				; UI::CBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBox@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBox@UI@@UAEXK@Z PROC				; UI::CBox::SetColor, COMDAT
; _this$ = ecx

; 855  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 856  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 857  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CBox@UI@@UAEXK@Z ENDP				; UI::CBox::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBox@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBox@UI@@UAE@XZ PROC					; UI::CBox::~CBox, COMDAT
; _this$ = ecx

; 851  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBox@UI@@6B@

; 852  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBox@UI@@UAE@XZ ENDP					; UI::CBox::~CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CBox::CBox, COMDAT
; _this$ = ecx

; 848  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBox@UI@@6B@

; 849  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBox::CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWindow@UI@@UAEPAXI@Z PROC				; UI::CWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 7c		 push	 124			; 0000007cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCWindow@UI@@UAEPAXI@Z ENDP				; UI::CWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 163  : 			virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CWindow@UI@@UAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CWindow@UI@@UAEHK@Z PROC			; UI::CWindow::OnIsType, COMDAT
; _this$ = ecx

; 55   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   : 		if (CWindow::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CWindow@UI@@SAKXZ	; UI::CWindow::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 57   : 			return TRUE;
; 58   : 
; 59   : 		return FALSE;
; 60   : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CWindow@UI@@UAEHK@Z ENDP			; UI::CWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 159  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressExitKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressExitKey@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnPressExitKey, COMDAT
; _this$ = ecx

; 771  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 772  : 		long lValue;
; 773  : 		if (PyCallClassMemberFunc(m_poHandler, "OnPressExitKey", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KEJGBDKK@OnPressExitKey@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnPressExi

; 774  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnPressExi

; 775  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 778  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnPressExi:

; 776  : 
; 777  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 778  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnPressExitKey@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnPressExitKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressEscapeKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressEscapeKey@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnPressEscapeKey, COMDAT
; _this$ = ecx

; 761  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 762  : 		long lValue;
; 763  : 		if (PyCallClassMemberFunc(m_poHandler, "OnPressEscapeKey", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnPressEsc

; 764  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnPressEsc

; 765  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 768  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnPressEsc:

; 766  : 
; 767  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 768  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnPressEscapeKey@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnPressEscapeKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyUp@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnKeyUp@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyUp, COMDAT
; _this$ = ecx

; 751  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 752  : 		long lValue;
; 753  : 		if (PyCallClassMemberFunc(m_poHandler, "OnKeyUp", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_07NGNLLPEG@OnKeyUp@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 11		 je	 SHORT $LN3@OnKeyUp

; 754  : 		if (0 != lValue)

  00032	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  00036	74 0b		 je	 SHORT $LN3@OnKeyUp

; 755  : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1

; 758  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN3@OnKeyUp:

; 756  : 
; 757  : 		return FALSE;

  00043	33 c0		 xor	 eax, eax

; 758  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?OnKeyUp@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyDown@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnKeyDown@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyDown, COMDAT
; _this$ = ecx

; 741  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 742  : 		long lValue;
; 743  : 		if (PyCallClassMemberFunc(m_poHandler, "OnKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09CMHFBEC@OnKeyDown@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 11		 je	 SHORT $LN3@OnKeyDown

; 744  : 		if (0 != lValue)

  00032	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  00036	74 0b		 je	 SHORT $LN3@OnKeyDown

; 745  : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1

; 748  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN3@OnKeyDown:

; 746  : 
; 747  : 		return FALSE;

  00043	33 c0		 xor	 eax, eax

; 748  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?OnKeyDown@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScrollable@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?SetScrollable@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::SetScrollable, COMDAT
; _this$ = ecx

; 655  : 		m_bIsScrollable = true;

  00000	c6 41 78 01	 mov	 BYTE PTR [ecx+120], 1

; 656  : 	}

  00004	c3		 ret	 0
?SetScrollable@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::SetScrollable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
_TEXT	SEGMENT
_wDelta$ = 8						; size = 2
?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z PROC		; UI::CWindow::OnMouseWheelScroll, COMDAT
; _this$ = ecx

; 643  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 644  : #ifdef _DEBUG
; 645  : 		Tracenf("Mouse Wheel Scroll : wDelta %d ",wDelta);
; 646  : #endif
; 647  : 
; 648  : 		PyCallClassMemberFunc(m_poHandler , "OnMouseWheelScroll" , Py_BuildValue("(s)" , wDelta > 0? "UP":"DOWN") );

  00003	66 83 7d 08 00	 cmp	 WORD PTR _wDelta$[ebp], 0
  00008	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02NAHCJHOC@UP@
  0000d	56		 push	 esi
  0000e	8b f1		 mov	 esi, ecx
  00010	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04FANAOELO@DOWN@
  00015	0f 4e c1	 cmovle	 eax, ecx
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_03KJMMOONA@?$CIs?$CJ@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@
  0002a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 649  : 		return m_bIsScrollable;

  00032	0f b6 46 78	 movzx	 eax, BYTE PTR [esi+120]
  00036	83 c4 14	 add	 esp, 20			; 00000014H
  00039	5e		 pop	 esi

; 650  : 	}

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z ENDP		; UI::CWindow::OnMouseWheelScroll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseMiddleButtonUp, COMDAT
; _this$ = ecx

; 631  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 632  : 		long lValue;
; 633  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonUp", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseMid

; 634  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseMid

; 635  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 638  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseMid:

; 636  : 
; 637  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 638  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseMiddleButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseMiddleButtonDown, COMDAT
; _this$ = ecx

; 621  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 622  : 		long lValue;
; 623  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseMid

; 624  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseMid

; 625  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 628  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseMid:

; 626  : 
; 627  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 628  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseMiddleButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseRightButtonDoubleClick, COMDAT
; _this$ = ecx

; 611  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 612  : 		long lValue;
; 613  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseRig

; 614  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseRig

; 615  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 618  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseRig:

; 616  : 
; 617  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 618  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseRightButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 601  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 602  : 		long lValue;
; 603  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonUp", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseRig

; 604  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseRig

; 605  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 608  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseRig:

; 606  : 
; 607  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 608  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 591  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 592  : 		long lValue;
; 593  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseRig

; 594  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseRig

; 595  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 598  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseRig:

; 596  : 
; 597  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 598  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 581  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 582  : 		long lValue;
; 583  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseLef

; 584  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseLef

; 585  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 588  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseLef:

; 586  : 
; 587  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 588  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 575  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 576  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonUp", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 577  : 		return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	5e		 pop	 esi

; 578  : 	}

  0001f	c3		 ret	 0
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 565  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 566  : 		long lValue;
; 567  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnMouseLef

; 568  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnMouseLef

; 569  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 572  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnMouseLef:

; 570  : 
; 571  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 572  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseReadingWndEvent, COMDAT
; _this$ = ecx

; 731  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 732  : 		long lValue;
; 733  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseReadingWnd", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEClose

; 734  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEClose

; 735  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 738  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEClose:

; 736  : 
; 737  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 738  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenReadingWndEvent, COMDAT
; _this$ = ecx

; 721  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 722  : 		long lValue;
; 723  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenReadingWnd", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEOpenR

; 724  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEOpenR

; 725  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 728  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEOpenR:

; 726  : 
; 727  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 728  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseCandidateListEvent, COMDAT
; _this$ = ecx

; 711  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 712  : 		long lValue;
; 713  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseCandidateList", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEClose

; 714  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEClose

; 715  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 718  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEClose:

; 716  : 
; 717  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 718  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenCandidateListEvent, COMDAT
; _this$ = ecx

; 701  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 702  : 		long lValue;
; 703  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenCandidateList", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEOpenC

; 704  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEOpenC

; 705  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 708  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEOpenC:

; 706  : 
; 707  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 708  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEChangeCodePage, COMDAT
; _this$ = ecx

; 691  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 692  : 		long lValue;
; 693  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEChangeCodePage", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMEChang

; 694  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMEChang

; 695  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 698  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMEChang:

; 696  : 
; 697  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 698  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEChangeCodePage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z PROC		; UI::CWindow::OnIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 681  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 682  : 		long lValue;
; 683  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 11		 je	 SHORT $LN3@OnIMEKeyDo

; 684  : 		if (0 != lValue)

  00032	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  00036	74 0b		 je	 SHORT $LN3@OnIMEKeyDo

; 685  : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1

; 688  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN3@OnIMEKeyDo:

; 686  : 
; 687  : 		return FALSE;

  00043	33 c0		 xor	 eax, eax

; 688  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z ENDP		; UI::CWindow::OnIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEReturnEvent, COMDAT
; _this$ = ecx

; 671  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 672  : 		long lValue;
; 673  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEReturn", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PILLCCFN@OnIMEReturn@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMERetur

; 674  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMERetur

; 675  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 678  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMERetur:

; 676  : 
; 677  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 678  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMETabEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMETabEvent@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnIMETabEvent, COMDAT
; _this$ = ecx

; 661  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 662  : 		long lValue;
; 663  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMETab", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_08HFELFLOI@OnIMETab@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0f		 je	 SHORT $LN3@OnIMETabEv

; 664  : 		if (0 != lValue)

  00026	83 7d fc 00	 cmp	 DWORD PTR _lValue$[ebp], 0
  0002a	74 09		 je	 SHORT $LN3@OnIMETabEv

; 665  : 			return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 668  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@OnIMETabEv:

; 666  : 
; 667  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax

; 668  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?OnIMETabEvent@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressExitKeyEvent, COMDAT
; _this$ = ecx

; 547  : 	{

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  00008	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 549  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0000a	74 33		 je	 SHORT $LN3@RunPressEx
  0000c	0f 1f 40 00	 npad	 4
$LL4@RunPressEx:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 551  : 			CWindow * pWindow = *itor;

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
  00015	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 552  : 
; 553  : 			if (pWindow->RunPressExitKeyEvent())

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressExitKeyEvent
  0001f	85 c0		 test	 eax, eax
  00021	75 22		 jne	 SHORT $LN65@RunPressEx

; 554  : 				return TRUE;
; 555  : 
; 556  : 			if (pWindow->IsShow())

  00023	38 46 55	 cmp	 BYTE PTR [esi+85], al
  00026	74 0e		 je	 SHORT $LN2@RunPressEx

; 557  : 			if (pWindow->OnPressExitKey())

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]
  00032	85 c0		 test	 eax, eax
  00034	75 0f		 jne	 SHORT $LN65@RunPressEx
$LN2@RunPressEx:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00036	8b 4b 64	 mov	 ecx, DWORD PTR [ebx+100]

; 184  :         this->_Ptr = _New_ptr;

  00039	8b 07		 mov	 eax, DWORD PTR [edi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0003b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 549  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003d	75 d1		 jne	 SHORT $LL4@RunPressEx
$LN3@RunPressEx:
  0003f	5f		 pop	 edi

; 558  : 				return TRUE;
; 559  : 		}
; 560  : 
; 561  : 		return FALSE;
; 562  : 	}

  00040	5e		 pop	 esi
  00041	33 c0		 xor	 eax, eax
  00043	5b		 pop	 ebx
  00044	c3		 ret	 0
$LN65@RunPressEx:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	5b		 pop	 ebx
  0004d	c3		 ret	 0
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressExitKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressEscapeKeyEvent, COMDAT
; _this$ = ecx

; 529  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00004	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  00007	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 531  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00009	74 25		 je	 SHORT $LN3@RunPressEs
  0000b	0f 1f 44 00 00	 npad	 5
$LL4@RunPressEs:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 533  : 			CWindow * pWindow = *itor;

  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 534  : 
; 535  : 			if (pWindow->IsShow())

  00018	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0001c	74 09		 je	 SHORT $LN2@RunPressEs

; 536  : 			if (pWindow->RunPressEscapeKeyEvent())

  0001e	e8 00 00 00 00	 call	 ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressEscapeKeyEvent
  00023	85 c0		 test	 eax, eax
  00025	75 17		 jne	 SHORT $LN68@RunPressEs
$LN2@RunPressEs:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00027	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0002c	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 531  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0002e	75 e0		 jne	 SHORT $LL4@RunPressEs
$LN3@RunPressEs:

; 537  : 				return TRUE;
; 538  : 		}
; 539  : 
; 540  : 		if (OnPressEscapeKey())

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
  00032	8b cf		 mov	 ecx, edi
  00034	ff 90 88 00 00
	00		 call	 DWORD PTR [eax+136]
  0003a	85 c0		 test	 eax, eax
  0003c	74 08		 je	 SHORT $LN7@RunPressEs
$LN68@RunPressEs:
  0003e	5f		 pop	 edi

; 541  : 			return TRUE;

  0003f	b8 01 00 00 00	 mov	 eax, 1

; 544  : 	}

  00044	5e		 pop	 esi
  00045	c3		 ret	 0
$LN7@RunPressEs:
  00046	5f		 pop	 edi

; 542  : 
; 543  : 		return FALSE;

  00047	33 c0		 xor	 eax, eax

; 544  : 	}

  00049	5e		 pop	 esi
  0004a	c3		 ret	 0
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressEscapeKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z PROC			; UI::CWindow::RunKeyUpEvent, COMDAT
; _this$ = ecx

; 511  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 512  : 		if (OnKeyUp(ikey))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	53		 push	 ebx
  0000c	8b 07		 mov	 eax, DWORD PTR [edi]
  0000e	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]
  00014	85 c0		 test	 eax, eax
  00016	75 32		 jne	 SHORT $LN64@RunKeyUpEv
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 516  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 22		 je	 SHORT $LN68@RunKeyUpEv
  0001f	90		 npad	 1
$LL4@RunKeyUpEv:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 518  : 			CWindow * pWindow = *itor;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 519  : 
; 520  : 			if (pWindow->IsShow())

  00028	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0002c	74 0a		 je	 SHORT $LN2@RunKeyUpEv

; 521  : 			if (pWindow->RunKeyUpEvent(ikey))

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunKeyUpEvent
  00034	85 c0		 test	 eax, eax
  00036	75 12		 jne	 SHORT $LN64@RunKeyUpEv
$LN2@RunKeyUpEv:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00038	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  0003b	8b 06		 mov	 eax, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0003d	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 516  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003f	75 df		 jne	 SHORT $LL4@RunKeyUpEv
$LN68@RunKeyUpEv:
  00041	5f		 pop	 edi

; 522  : 				return TRUE;
; 523  : 		}
; 524  : 
; 525  : 		return FALSE;
; 526  : 	}

  00042	5e		 pop	 esi
  00043	33 c0		 xor	 eax, eax
  00045	5b		 pop	 ebx
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
$LN64@RunKeyUpEv:
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5b		 pop	 ebx
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ENDP			; UI::CWindow::RunKeyUpEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z PROC		; UI::CWindow::RunKeyDownEvent, COMDAT
; _this$ = ecx

; 488  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 489  : 		if (OnKeyDown(ikey))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	53		 push	 ebx
  0000b	8b 07		 mov	 eax, DWORD PTR [edi]
  0000d	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]
  00013	85 c0		 test	 eax, eax
  00015	74 08		 je	 SHORT $LN5@RunKeyDown

; 490  : 			return this;

  00017	8b c7		 mov	 eax, edi
  00019	5f		 pop	 edi

; 508  : 	}

  0001a	5b		 pop	 ebx
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN5@RunKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  00022	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  00023	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 493  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00025	74 21		 je	 SHORT $LN68@RunKeyDown
$LL4@RunKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00027	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 495  : 			CWindow * pWindow = *itor;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 496  : 
; 497  : 			if (pWindow->IsShow())

  0002f	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00033	74 0a		 je	 SHORT $LN2@RunKeyDown

; 498  : 			{
; 499  : 				CWindow * pProcessedWindow = pWindow->RunKeyDownEvent(ikey);

  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ; UI::CWindow::RunKeyDownEvent

; 500  : 				if (NULL != pProcessedWindow)

  0003b	85 c0		 test	 eax, eax
  0003d	75 0b		 jne	 SHORT $LN69@RunKeyDown
$LN2@RunKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0003f	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00044	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 493  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00046	75 df		 jne	 SHORT $LL4@RunKeyDown
$LN68@RunKeyDown:

; 501  : 				{
; 502  : 					return pProcessedWindow;
; 503  : 				}
; 504  : 			}
; 505  : 		}
; 506  : 
; 507  : 		return NULL;

  00048	33 c0		 xor	 eax, eax
$LN69@RunKeyDown:
  0004a	5e		 pop	 esi
  0004b	5f		 pop	 edi

; 508  : 	}

  0004c	5b		 pop	 ebx
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ENDP		; UI::CWindow::RunKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z PROC		; UI::CWindow::RunIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 468  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 469  : 		if (!IsRendering())

  00008	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0000d	84 c0		 test	 al, al
  0000f	74 31		 je	 SHORT $LN3@RunIMEKeyD

; 470  : 			return FALSE;
; 471  : 
; 472  : 		if (OnIMEKeyDownEvent(ikey))

  00011	8b 07		 mov	 eax, DWORD PTR [edi]
  00013	8b cf		 mov	 ecx, edi
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00018	53		 push	 ebx
  00019	ff 50 40	 call	 DWORD PTR [eax+64]
  0001c	85 c0		 test	 eax, eax
  0001e	75 2b		 jne	 SHORT $LN64@RunIMEKeyD
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00020	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  00023	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 476  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00025	74 1b		 je	 SHORT $LN3@RunIMEKeyD
$LL4@RunIMEKeyD:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00027	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 478  : 			CWindow * pWindow = *itor;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]

; 479  : 
; 480  : 			if (pWindow->RunIMEKeyDownEvent(ikey))

  0002c	53		 push	 ebx
  0002d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00030	e8 00 00 00 00	 call	 ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunIMEKeyDownEvent
  00035	85 c0		 test	 eax, eax
  00037	75 12		 jne	 SHORT $LN64@RunIMEKeyD
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00039	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0003e	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 476  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00040	75 e5		 jne	 SHORT $LL4@RunIMEKeyD
$LN3@RunIMEKeyD:
  00042	5f		 pop	 edi

; 481  : 				return TRUE;
; 482  : 		}
; 483  : 
; 484  : 		return FALSE;
; 485  : 	}

  00043	5e		 pop	 esi
  00044	33 c0		 xor	 eax, eax
  00046	5b		 pop	 ebx
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN64@RunIMEKeyD:
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	5b		 pop	 ebx
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ENDP		; UI::CWindow::RunIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunIMEReturnEvent, COMDAT
; _this$ = ecx

; 448  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 449  : 		if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 2d		 je	 SHORT $LN3@RunIMERetu

; 450  : 			return FALSE;
; 451  : 
; 452  : 		if (OnIMEReturnEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 3c	 call	 DWORD PTR [eax+60]
  00014	85 c0		 test	 eax, eax
  00016	75 27		 jne	 SHORT $LN64@RunIMERetu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 456  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 1b		 je	 SHORT $LN3@RunIMERetu
  0001f	90		 npad	 1
$LL4@RunIMERetu:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 458  : 			CWindow * pWindow = *itor;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]

; 459  : 
; 460  : 			if (pWindow->RunIMEReturnEvent())

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	e8 00 00 00 00	 call	 ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMEReturnEvent
  0002d	85 c0		 test	 eax, eax
  0002f	75 0e		 jne	 SHORT $LN64@RunIMERetu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00031	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  00034	8b 06		 mov	 eax, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00036	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 456  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00038	75 e6		 jne	 SHORT $LL4@RunIMERetu
$LN3@RunIMERetu:
  0003a	5f		 pop	 edi

; 462  : 		}
; 463  : 
; 464  : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax

; 465  : 	}

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
$LN64@RunIMERetu:
  0003f	5f		 pop	 edi

; 461  : 				return TRUE;

  00040	b8 01 00 00 00	 mov	 eax, 1

; 465  : 	}

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMETabEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMETabEvent@CWindow@UI@@QAEHXZ PROC			; UI::CWindow::RunIMETabEvent, COMDAT
; _this$ = ecx

; 428  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 429  : 		if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 2d		 je	 SHORT $LN3@RunIMETabE

; 430  : 			return FALSE;
; 431  : 
; 432  : 		if (OnIMETabEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 38	 call	 DWORD PTR [eax+56]
  00014	85 c0		 test	 eax, eax
  00016	75 27		 jne	 SHORT $LN64@RunIMETabE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 436  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 1b		 je	 SHORT $LN3@RunIMETabE
  0001f	90		 npad	 1
$LL4@RunIMETabE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 438  : 			CWindow * pWindow = *itor;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]

; 439  : 
; 440  : 			if (pWindow->RunIMETabEvent())

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	e8 00 00 00 00	 call	 ?RunIMETabEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMETabEvent
  0002d	85 c0		 test	 eax, eax
  0002f	75 0e		 jne	 SHORT $LN64@RunIMETabE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00031	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  00034	8b 06		 mov	 eax, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00036	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 436  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00038	75 e6		 jne	 SHORT $LL4@RunIMETabE
$LN3@RunIMETabE:
  0003a	5f		 pop	 edi

; 442  : 		}
; 443  : 
; 444  : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax

; 445  : 	}

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
$LN64@RunIMETabE:
  0003f	5f		 pop	 edi

; 441  : 				return TRUE;

  00040	b8 01 00 00 00	 mov	 eax, 1

; 445  : 	}

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?RunIMETabEvent@CWindow@UI@@QAEHXZ ENDP			; UI::CWindow::RunIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMoveWindow, COMDAT
; _this$ = ecx

; 383  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 384  : 		PyCallClassMemberFunc(m_poHandler, "OnMoveWindow", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PFKNBOJP@OnMoveWindow@
  0001d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 385  : 	}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMoveWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnIMEUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnIMEUpdate, COMDAT
; _this$ = ecx

; 423  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 424  : 		PyCallClassMemberFunc(m_poHandler, "OnIMEUpdate", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DGOFHNMI@OnIMEUpdate@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 425  : 	}

  0001a	c3		 ret	 0
?OnIMEUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnIMEUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnTop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnTop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnTop, COMDAT
; _this$ = ecx

; 418  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		PyCallClassMemberFunc(m_poHandler, "OnTop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_05LOOKECNH@OnTop@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 420  : 	}

  0001a	c3		 ret	 0
?OnTop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDrop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnDrop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnDrop, COMDAT
; _this$ = ecx

; 413  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 414  : 		PyCallClassMemberFunc(m_poHandler, "OnDrop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_06OCNPCIEO@OnDrop@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 415  : 	}

  0001a	c3		 ret	 0
?OnDrop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnDrop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOver@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOver@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 410  : 	}

  00000	c2 00 00	 ret	 0
?OnMouseOver@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 404  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 405  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 406  : 	}

  0001a	c3		 ret	 0
?OnMouseOverOut@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverIn, COMDAT
; _this$ = ecx

; 399  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 400  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 401  : 	}

  0001a	c3		 ret	 0
?OnMouseOverIn@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMouseDrag, COMDAT
; _this$ = ecx

; 378  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 379  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseDrag", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ECAEGPAI@OnMouseDrag@
  0001d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 380  : 	}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMouseDrag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKillFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnKillFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnKillFocus, COMDAT
; _this$ = ecx

; 394  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 395  : 		PyCallClassMemberFunc(m_poHandler, "OnKillFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CEGPCFGM@OnKillFocus@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 396  : 	}

  0001a	c3		 ret	 0
?OnKillFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnKillFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnSetFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnSetFocus, COMDAT
; _this$ = ecx

; 388  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 389  : 		//PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());
; 390  : 		PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GIMNGBCD@OnSetFocus@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 391  : 	}

  0001a	c3		 ret	 0
?OnSetFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 105  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnUpdate, COMDAT
; _this$ = ecx

; 157  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 158  : 		if (!m_poHandler)

  00003	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00007	74 39		 je	 SHORT $LN1@OnUpdate

; 159  : 			return;
; 160  : 
; 161  : 		if (!IsShow())

  00009	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  0000d	74 33		 je	 SHORT $LN1@OnUpdate

; 162  : 			return;
; 163  : 
; 164  : 		static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00015	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  0001b	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00023	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00029	7f 19		 jg	 SHORT $LN7@OnUpdate
$LN2@OnUpdate:

; 165  : 
; 166  : 		//PyCallClassMemberFunc(m_poHandler, "OnUpdate", BuildEmptyTuple());
; 167  : 		PyCallClassMemberFunc_ByPyString(m_poHandler, poFuncName_OnUpdate, BuildEmptyTuple());

  0002b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00030	50		 push	 eax
  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
  00037	ff 76 5c	 push	 DWORD PTR [esi+92]
  0003a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z ; PyCallClassMemberFunc_ByPyString
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnUpdate:

; 168  : 
; 169  : 	}

  00042	5e		 pop	 esi
  00043	c3		 ret	 0
$LN7@OnUpdate:

; 162  : 			return;
; 163  : 
; 164  : 		static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  00044	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00049	e8 00 00 00 00	 call	 __Init_thread_header
  0004e	83 c4 04	 add	 esp, 4
  00051	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA, -1
  00058	75 d1		 jne	 SHORT $LN2@OnUpdate
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_08DCJEAFK@OnUpdate@
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyString_InternFromString
  00065	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  0006a	a3 00 00 00 00	 mov	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A, eax
  0006f	e8 00 00 00 00	 call	 __Init_thread_footer
  00074	83 c4 08	 add	 esp, 8
  00077	eb b2		 jmp	 SHORT $LN2@OnUpdate
?OnUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnRender, COMDAT
; _this$ = ecx

; 172  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 173  : 		if (!m_poHandler)

  00003	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00007	74 1c		 je	 SHORT $LN1@OnRender

; 174  : 			return;
; 175  : 
; 176  : 		if (!IsShow())

  00009	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  0000d	74 16		 je	 SHORT $LN1@OnRender

; 177  : 			return;
; 178  : 
; 179  : 		//PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());
; 180  : 		PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  0000f	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 181  : 	}

  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?OnRender@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
__Op$1 = -16						; size = 12
_this$1$ = -4						; size = 4
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ PROC	; UI::CWindow::__RemoveReserveChildren, COMDAT
; _this$ = ecx

; 107  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1200 :         return _Mypair._Myval2._Mysize == 0;

  0000c	83 7b 74 00	 cmp	 DWORD PTR [ebx+116], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 108  : 		if (m_pReserveChildList.empty())

  00010	0f 84 b7 00 00
	00		 je	 $LN68@RemoveRese
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00016	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
  00019	56		 push	 esi

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001a	8b 30		 mov	 esi, DWORD PTR [eax]
  0001c	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 112  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  0001e	74 78		 je	 SHORT $LN3@RemoveRese
  00020	57		 push	 edi
  00021	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
$LL4@RemoveRese:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1610 :         const auto _Last         = _My_data._Myhead;

  00024	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1536 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  00026	8d 45 f4	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  00029	33 c9		 xor	 ecx, ecx
  0002b	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
  0002e	8b d7		 mov	 edx, edi
  00030	89 4d f4	 mov	 DWORD PTR __Op$1[ebp+4], ecx
  00033	89 55 f0	 mov	 DWORD PTR __Op$1[ebp], edx

; 1612 :         for (auto _First = _Last->_Next; _First != _Last;) {

  00036	8b 03		 mov	 eax, DWORD PTR [ebx]
  00038	3b c3		 cmp	 eax, ebx
  0003a	74 35		 je	 SHORT $LN49@RemoveRese
  0003c	0f 1f 40 00	 npad	 4
$LL48@RemoveRese:

; 1603 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00040	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1613 :             auto _Next = _First->_Next;

  00043	8b 38		 mov	 edi, DWORD PTR [eax]

; 1603 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]

; 1614 :             if (_Pred(_First->_Myval)) {

  00048	75 1e		 jne	 SHORT $LN58@RemoveRese

; 1547 :             --_List._Mypair._Myval2._Mysize;

  0004a	ff 4a 04	 dec	 DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0004d	8b 10		 mov	 edx, DWORD PTR [eax]

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1549 :             const auto _Prev = _Removed->_Prev;

  00055	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1550 :             _Prev->_Next     = _Next;

  00058	89 11		 mov	 DWORD PTR [ecx], edx

; 1551 :             _Next->_Prev     = _Prev;

  0005a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1552 : 
; 1553 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1554 :             // mark removed node for IDL to snip out later
; 1555 :             _Removed->_Prev = _Nodeptr();
; 1556 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1557 : 
; 1558 :             *_Tail = _Removed;

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00060	89 01		 mov	 DWORD PTR [ecx], eax

; 1559 :             _Tail  = _STD addressof(_Removed->_Next);

  00062	8b 55 f0	 mov	 edx, DWORD PTR __Op$1[ebp]
  00065	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN58@RemoveRese:

; 1618 :             _First = _Next;

  00068	8b c7		 mov	 eax, edi
  0006a	3b fb		 cmp	 edi, ebx
  0006c	75 d2		 jne	 SHORT $LL48@RemoveRese
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __Op$1[ebp+4]
$LN49@RemoveRese:

; 1585 :             auto _Target = _Head;

  00071	85 c9		 test	 ecx, ecx

; 1586 :             while (_Target) {

  00073	74 13		 je	 SHORT $LN2@RemoveRese
$LL62@RemoveRese:

; 1587 :                 auto _Next = _Target->_Next;

  00075	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00077	6a 0c		 push	 12			; 0000000cH
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0007f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1593 :                 _Target = _Next;

  00082	8b cf		 mov	 ecx, edi
  00084	85 ff		 test	 edi, edi
  00086	75 ed		 jne	 SHORT $LL62@RemoveRese
$LN2@RemoveRese:

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00088	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0008b	8b 36		 mov	 esi, DWORD PTR [esi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0008d	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 112  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00090	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 199  :         return this->_Ptr == _Right._Ptr;

  00093	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 112  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00095	75 8d		 jne	 SHORT $LL4@RemoveRese
  00097	5f		 pop	 edi
$LN3@RemoveRese:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00098	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  000a1	8b 00		 mov	 eax, DWORD PTR [eax]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a3	85 c0		 test	 eax, eax
  000a5	74 13		 je	 SHORT $LN71@RemoveRese
$LL72@RemoveRese:

; 328  :             _Pnext = _Pnode->_Next;

  000a7	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000a9	6a 0c		 push	 12			; 0000000cH
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b1	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000b4	8b c6		 mov	 eax, esi
  000b6	85 f6		 test	 esi, esi
  000b8	75 ed		 jne	 SHORT $LL72@RemoveRese
$LN71@RemoveRese:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000ba	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;
; 1432 :         _My_data._Mysize        = 0;

  000bd	5e		 pop	 esi
  000be	89 00		 mov	 DWORD PTR [eax], eax
  000c0	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
  000c3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c6	c7 43 74 00 00
	00 00		 mov	 DWORD PTR [ebx+116], 0
$LN68@RemoveRese:
  000cd	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 117  : 	}

  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ENDP	; UI::CWindow::__RemoveReserveChildren
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickTopWindow, COMDAT
; _this$ = ecx

; 829  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 71 64	 mov	 esi, DWORD PTR [ecx+100]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 829  : 	{

  00008	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  0000b	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 831  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0000d	74 2c		 je	 SHORT $LN62@PickTopWin
  0000f	90		 npad	 1
$LL4@PickTopWin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00010	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 833  : 			CWindow * pWin = *ritor;

  00013	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]

; 834  : 			if (pWin->IsShow())

  00016	80 7b 55 00	 cmp	 BYTE PTR [ebx+85], 0
  0001a	74 1b		 je	 SHORT $LN2@PickTopWin

; 835  : 				if (pWin->IsIn(x, y))

  0001c	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  0001f	8b cb		 mov	 ecx, ebx
  00021	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00029	84 c0		 test	 al, al
  0002b	74 0a		 je	 SHORT $LN2@PickTopWin
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0002d	8b 43 58	 mov	 eax, DWORD PTR [ebx+88]
  00030	c1 e8 09	 shr	 eax, 9
  00033	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 836  : 					if (!pWin->IsFlag(CWindow::FLAG_NOT_PICK))

  00035	74 0d		 je	 SHORT $LN58@PickTopWin
$LN2@PickTopWin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 199  :         return this->_Ptr == _Right._Ptr;

  00037	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 831  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  00039	75 d5		 jne	 SHORT $LL4@PickTopWin
$LN62@PickTopWin:
  0003b	5f		 pop	 edi

; 837  : 						return pWin;
; 838  : 		}
; 839  : 
; 840  : 		return NULL;
; 841  : 	}

  0003c	5e		 pop	 esi
  0003d	33 c0		 xor	 eax, eax
  0003f	5b		 pop	 ebx
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
$LN58@PickTopWin:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	8b c3		 mov	 eax, ebx
  00048	5b		 pop	 ebx
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickTopWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickWindow, COMDAT
; _this$ = ecx

; 800  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  0000b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 802  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0000d	74 50		 je	 SHORT $LN67@PickWindow
  0000f	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
$LN72@PickWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00012	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00015	8d 58 04	 lea	 ebx, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 804  : 			CWindow * pWin = *ritor;

  00018	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001a	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 805  : 			if (pWin->IsShow())

  0001d	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  00021	74 33		 je	 SHORT $LN2@PickWindow
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00023	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00026	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00029	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 807  : 				if (!pWin->IsFlag(CWindow::FLAG_IGNORE_SIZE))

  0002b	75 19		 jne	 SHORT $LN8@PickWindow

; 808  : 				{
; 809  : 					if (!pWin->IsIn(x, y)) {

  0002d	51		 push	 ecx
  0002e	52		 push	 edx
  0002f	8b ce		 mov	 ecx, esi
  00031	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00036	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00039	84 c0		 test	 al, al
  0003b	75 06		 jne	 SHORT $LN71@PickWindow

; 810  : 						if (0L <= pWin->GetWidth()) {

  0003d	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  00041	7d 13		 jge	 SHORT $LN2@PickWindow
$LN71@PickWindow:

; 811  : 							continue;
; 812  : 						}
; 813  : 					}
; 814  : 				}
; 815  : 
; 816  : 				CWindow * pResult = pWin->PickWindow(x, y);

  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
$LN8@PickWindow:
  00046	51		 push	 ecx
  00047	52		 push	 edx
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickWindow

; 817  : 				if (pResult)

  0004f	85 c0		 test	 eax, eax
  00051	75 1e		 jne	 SHORT $LN10@PickWindow

; 810  : 						if (0L <= pWin->GetWidth()) {

  00053	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
$LN2@PickWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00056	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 184  :         this->_Ptr = _New_ptr;

  00059	8b 03		 mov	 eax, DWORD PTR [ebx]

; 199  :         return this->_Ptr == _Right._Ptr;

  0005b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 802  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0005d	75 b3		 jne	 SHORT $LN72@PickWindow
$LN67@PickWindow:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0005f	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  00062	c1 e8 09	 shr	 eax, 9
  00065	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 822  : 		if (IsFlag(CWindow::FLAG_NOT_PICK))

  00067	b8 00 00 00 00	 mov	 eax, 0
  0006c	0f 45 f8	 cmovne	 edi, eax
  0006f	8b c7		 mov	 eax, edi
$LN10@PickWindow:

; 823  : 			return NULL;
; 824  : 
; 825  : 		return (this);
; 826  : 	}

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
_lx$ = -8						; size = 4
_ly$ = -4						; size = 4
?IsIn@CWindow@UI@@QAE_NXZ PROC				; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 792  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 793  : 		long lx, ly;
; 794  : 		UI::CWindowManager::Instance().GetMousePosition(lx, ly);

  00007	8d 45 fc	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	50		 push	 eax
  00013	8d 45 f8	 lea	 eax, DWORD PTR _lx$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 795  : 
; 796  : 		return IsIn(lx, ly);

  0001c	ff 75 fc	 push	 DWORD PTR _ly$[ebp]
  0001f	8b ce		 mov	 ecx, esi
  00021	ff 75 f8	 push	 DWORD PTR _lx$[ebp]
  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00029	5e		 pop	 esi

; 797  : 	}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?IsIn@CWindow@UI@@QAE_NXZ ENDP				; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?IsIn@CWindow@UI@@QAE_NJJ@Z PROC			; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 783  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 784  : 		if (x >= m_rect.left && x <= m_rect.right)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00009	7c 18		 jl	 SHORT $LN3@IsIn
  0000b	3b 41 3c	 cmp	 eax, DWORD PTR [ecx+60]
  0000e	7f 13		 jg	 SHORT $LN3@IsIn

; 785  : 			if (y >= m_rect.top && y <= m_rect.bottom)

  00010	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00013	3b 41 38	 cmp	 eax, DWORD PTR [ecx+56]
  00016	7c 0b		 jl	 SHORT $LN3@IsIn
  00018	3b 41 40	 cmp	 eax, DWORD PTR [ecx+64]
  0001b	7f 06		 jg	 SHORT $LN3@IsIn

; 786  : 				return true;

  0001d	b0 01		 mov	 al, 1

; 789  : 	}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
$LN3@IsIn:

; 787  : 
; 788  : 		return false;

  00023	32 c0		 xor	 al, al

; 789  : 	}

  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?IsIn@CWindow@UI@@QAE_NJJ@Z ENDP			; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetTop@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::SetTop, COMDAT
; _this$ = ecx

; 359  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00005	8b 7d 08	 mov	 edi, DWORD PTR _pWin$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 359  : 	{

  00008	8b d9		 mov	 ebx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0000a	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  0000d	c1 e8 08	 shr	 eax, 8
  00010	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 360  : 		if (!pWin->IsFlag(CWindow::FLAG_FLOAT))

  00012	74 5e		 je	 SHORT $LN4@SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00014	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 1100 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

  00017	8d 4b 64	 lea	 ecx, DWORD PTR [ebx+100]
  0001a	56		 push	 esi

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001b	8b 30		 mov	 esi, DWORD PTR [eax]

; 74   :         return _Ptr == _Right._Ptr;

  0001d	3b c6		 cmp	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  0001f	74 43		 je	 SHORT $LN3@SetTop
$LL47@SetTop:

; 5133 :         if (*_First == _Val) {

  00021	39 7e 08	 cmp	 DWORD PTR [esi+8], edi
  00024	74 06		 je	 SHORT $LN101@SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  00026	8b 36		 mov	 esi, DWORD PTR [esi]

; 74   :         return _Ptr == _Right._Ptr;

  00028	3b f0		 cmp	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  0002a	75 f5		 jne	 SHORT $LL47@SetTop
$LN101@SetTop:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0002c	3b c6		 cmp	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 364  : 		if (m_pChildList.end() != itor)

  0002e	74 34		 je	 SHORT $LN3@SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00030	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 366  : 			m_pChildList.push_back(*itor);

  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00039	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003e	6a 0c		 push	 12			; 0000000cH
  00040	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00041	89 01		 mov	 DWORD PTR [ecx], eax

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00043	8b 16		 mov	 edx, DWORD PTR [esi]
  00045	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00048	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 398  :         --_Mysize;

  0004b	ff 4b 68	 dec	 DWORD PTR [ebx+104]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0004e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 369  : 			pWin->OnTop();

  00053	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00055	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 369  : 			pWin->OnTop();

  00058	8b cf		 mov	 ecx, edi
  0005a	ff 50 2c	 call	 DWORD PTR [eax+44]
  0005d	5e		 pop	 esi
  0005e	5f		 pop	 edi

; 374  : 		}
; 375  : 	}

  0005f	5b		 pop	 ebx
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$LN3@SetTop:

; 370  : 		}
; 371  : 		else
; 372  : 		{
; 373  : 			TraceError(" CWindow::SetTop - Failed to find child window\n");

  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
  00069	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0006e	83 c4 04	 add	 esp, 4
  00071	5e		 pop	 esi
$LN4@SetTop:

; 374  : 		}
; 375  : 	}

  00072	5f		 pop	 edi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DeleteChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z PROC		; UI::CWindow::DeleteChild, COMDAT
; _this$ = ecx

; 347  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 348  : 		if (m_isUpdatingChildren)

  00003	83 79 6c 00	 cmp	 DWORD PTR [ecx+108], 0
  00007	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  0000a	50		 push	 eax
  0000b	74 0c		 je	 SHORT $LN2@DeleteChil

; 349  : 		{
; 350  : 			m_pReserveChildList.push_back(pWin);

  0000d	83 c1 70	 add	 ecx, 112		; 00000070H
  00010	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 355  : 		}
; 356  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@DeleteChil:

; 351  : 		}
; 352  : 		else
; 353  : 		{
; 354  : 			m_pChildList.remove(pWin);

  00019	83 c1 64	 add	 ecx, 100		; 00000064H
  0001c	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 355  : 		}
; 356  : 	}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z ENDP		; UI::CWindow::DeleteChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsChild@CWindow@UI@@QAE_NPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?IsChild@CWindow@UI@@QAE_NPAV12@@Z PROC			; UI::CWindow::IsChild, COMDAT
; _this$ = ecx

; 332  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 49 64	 mov	 ecx, DWORD PTR [ecx+100]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 335  : 		while (itor != m_pChildList.end())

  0000a	74 0f		 je	 SHORT $LN3@IsChild
  0000c	8b 55 08	 mov	 edx, DWORD PTR _pWin$[ebp]
  0000f	90		 npad	 1
$LL2@IsChild:

; 336  : 		{
; 337  : 			if (*itor == pWin)

  00010	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00013	74 0c		 je	 SHORT $LN35@IsChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00015	8b 00		 mov	 eax, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  00017	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 335  : 		while (itor != m_pChildList.end())

  00019	75 f5		 jne	 SHORT $LL2@IsChild
$LN3@IsChild:

; 339  : 
; 340  : 			++itor;
; 341  : 		}
; 342  : 
; 343  : 		return false;

  0001b	32 c0		 xor	 al, al

; 344  : 	}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN35@IsChild:

; 338  : 				return true;

  00021	b0 01		 mov	 al, 1

; 344  : 	}

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?IsChild@CWindow@UI@@QAE_NPAV12@@Z ENDP			; UI::CWindow::IsChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetParent@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetParent@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetParent, COMDAT
; _this$ = ecx

; 328  : 		return m_pParent;

  00000	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]

; 329  : 	}

  00003	c3		 ret	 0
?GetParent@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRoot@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetRoot@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetRoot, COMDAT
; _this$ = ecx

; 318  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 319  : 		if (m_pParent)

  00003	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00006	57		 push	 edi
  00007	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  0000a	85 c0		 test	 eax, eax
  0000c	74 1c		 je	 SHORT $LN11@GetRoot
  0000e	66 90		 npad	 2
$LL5@GetRoot:

; 320  : 			if (m_pParent->IsWindow())

  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	8b c8		 mov	 ecx, eax
  00014	ff 92 98 00 00
	00		 call	 DWORD PTR [edx+152]
  0001a	85 c0		 test	 eax, eax
  0001c	74 0c		 je	 SHORT $LN11@GetRoot

; 321  : 				return m_pParent->GetRoot();

  0001e	8b 37		 mov	 esi, DWORD PTR [edi]
  00020	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00023	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  00026	85 c0		 test	 eax, eax
  00028	75 e6		 jne	 SHORT $LL5@GetRoot
$LN11@GetRoot:
  0002a	5f		 pop	 edi

; 322  : 
; 323  : 		return this;
; 324  : 	}

  0002b	8b c6		 mov	 eax, esi
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?GetRoot@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetRoot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsRendering@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
?IsRendering@CWindow@UI@@QAE_NXZ PROC			; UI::CWindow::IsRendering, COMDAT
; _this$ = ecx

; 97   : 		if (!IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 0d		 je	 SHORT $LN8@IsRenderin
$LL5@IsRenderin:

; 99   : 
; 100  : 		if (!m_pParent)

  00006	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 09		 je	 SHORT $LN9@IsRenderin

; 97   : 		if (!IsShow())

  0000d	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00011	75 f3		 jne	 SHORT $LL5@IsRenderin
$LN8@IsRenderin:

; 98   : 			return false;

  00013	32 c0		 xor	 al, al

; 102  : 
; 103  : 		return m_pParent->IsRendering();
; 104  : 	}

  00015	c3		 ret	 0
$LN9@IsRenderin:

; 101  : 			return true;

  00016	b0 01		 mov	 al, 1

; 102  : 
; 103  : 		return m_pParent->IsRendering();
; 104  : 	}

  00018	c3		 ret	 0
?IsRendering@CWindow@UI@@QAE_NXZ ENDP			; UI::CWindow::IsRendering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Hide@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Hide@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Hide, COMDAT
; _this$ = ecx

; 92   : 		m_bShow = false;

  00000	c6 41 55 00	 mov	 BYTE PTR [ecx+85], 0

; 93   : 	}

  00004	c3		 ret	 0
?Hide@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Hide
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Show@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Show@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Show, COMDAT
; _this$ = ecx

; 87   : 		m_bShow = true;

  00000	c6 41 55 01	 mov	 BYTE PTR [ecx+85], 1

; 88   : 	}

  00004	c3		 ret	 0
?Show@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Show
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\functional
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateRect@CWindow@UI@@QAEJXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$1$ = -8						; size = 4
tv680 = -4						; size = 4
?UpdateRect@CWindow@UI@@QAEJXZ PROC			; UI::CWindow::UpdateRect, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx

; 225  : 		m_rect.top		= m_y;
; 226  : 		if (m_pParent)

  0000e	8b 73 60	 mov	 esi, DWORD PTR [ebx+96]
  00011	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  00014	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
  00017	85 f6		 test	 esi, esi
  00019	74 2f		 je	 SHORT $LN6@UpdateRect

; 227  : 		{
; 228  : 			switch (m_VerticalAlign)

  0001b	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  0001e	83 e8 01	 sub	 eax, 1
  00021	74 11		 je	 SHORT $LN8@UpdateRect
  00023	83 e8 01	 sub	 eax, 1
  00026	75 1c		 jne	 SHORT $LN2@UpdateRect

; 229  : 			{
; 230  : 				case VERTICAL_ALIGN_BOTTOM:
; 231  : 					m_rect.top = m_pParent->GetHeight() - m_rect.top;

  00028	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  0002b	2b c1		 sub	 eax, ecx
  0002d	89 43 38	 mov	 DWORD PTR [ebx+56], eax
  00030	8b c8		 mov	 ecx, eax

; 232  : 					break;

  00032	eb 10		 jmp	 SHORT $LN2@UpdateRect
$LN8@UpdateRect:

; 233  : 				case VERTICAL_ALIGN_CENTER:
; 234  : 					m_rect.top = (m_pParent->GetHeight() - GetHeight()) / 2 + m_rect.top;

  00034	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00037	2b 43 30	 sub	 eax, DWORD PTR [ebx+48]
  0003a	99		 cdq
  0003b	2b c2		 sub	 eax, edx
  0003d	d1 f8		 sar	 eax, 1
  0003f	03 c8		 add	 ecx, eax
  00041	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
$LN2@UpdateRect:

; 235  : 					break;
; 236  : 			}
; 237  : 			m_rect.top += m_pParent->m_rect.top;

  00044	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  00047	89 4b 38	 mov	 DWORD PTR [ebx+56], ecx
$LN6@UpdateRect:

; 238  : 		}
; 239  : 		m_rect.bottom	= m_rect.top + m_lHeight;

  0004a	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 240  : 
; 241  : #if defined( _USE_CPP_RTL_FLIP )
; 242  : 		if( m_pParent == NULL ) {
; 243  : 			m_rect.left		= m_x;
; 244  : 			m_rect.right	= m_rect.left + m_lWidth;
; 245  : 		} else {
; 246  : 			if( m_pParent->IsFlag(UI::CWindow::FLAG_RTL) == true ) {
; 247  : 				m_rect.left = m_pParent->GetWidth() - m_lWidth - m_x;
; 248  : 				switch (m_HorizontalAlign)
; 249  : 				{
; 250  : 					case HORIZONTAL_ALIGN_RIGHT:
; 251  : 						m_rect.left = - m_x;
; 252  : 						break;
; 253  : 					case HORIZONTAL_ALIGN_CENTER:
; 254  : 						m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() - m_x;
; 255  : 						break;
; 256  : 				}
; 257  : 				m_rect.left += m_pParent->m_rect.left;
; 258  : 				m_rect.right = m_rect.left + m_lWidth;
; 259  : 			} else {
; 260  : 				m_rect.left		= m_x;
; 261  : 				switch (m_HorizontalAlign)
; 262  : 				{
; 263  : 					case HORIZONTAL_ALIGN_RIGHT:
; 264  : 						m_rect.left = m_pParent->GetWidth() - m_rect.left;
; 265  : 						break;
; 266  : 					case HORIZONTAL_ALIGN_CENTER:
; 267  : 						m_rect.left = (m_pParent->GetWidth() - GetWidth()) / 2 + m_rect.left;
; 268  : 						break;
; 269  : 				}
; 270  : 				m_rect.left += m_pParent->m_rect.left;
; 271  : 				m_rect.right = m_rect.left + m_lWidth;
; 272  : 			}
; 273  : 		}
; 274  : #else
; 275  : 		m_rect.left		= m_x;

  0004d	8b 7b 24	 mov	 edi, DWORD PTR [ebx+36]
  00050	03 c1		 add	 eax, ecx
  00052	89 43 40	 mov	 DWORD PTR [ebx+64], eax
  00055	89 7b 34	 mov	 DWORD PTR [ebx+52], edi

; 276  : 		if (m_pParent)

  00058	85 f6		 test	 esi, esi
  0005a	74 50		 je	 SHORT $LN9@UpdateRect

; 277  : 		{
; 278  : 			switch (m_HorizontalAlign)

  0005c	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  0005f	83 e8 01	 sub	 eax, 1
  00062	74 16		 je	 SHORT $LN11@UpdateRect
  00064	83 e8 01	 sub	 eax, 1
  00067	75 2a		 jne	 SHORT $LN4@UpdateRect
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h

; 361  :         return labs(_X);

  00069	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0006c	99		 cdq
  0006d	33 c2		 xor	 eax, edx
  0006f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 281  : 					m_rect.left = ::abs(m_pParent->GetWidth()) - m_rect.left;

  00071	2b c7		 sub	 eax, edi
  00073	89 43 34	 mov	 DWORD PTR [ebx+52], eax
  00076	8b f8		 mov	 edi, eax

; 282  : 					break;

  00078	eb 19		 jmp	 SHORT $LN4@UpdateRect
$LN11@UpdateRect:

; 283  : 				case HORIZONTAL_ALIGN_CENTER:
; 284  : 					m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() / 2 + m_rect.left;

  0007a	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0007d	99		 cdq
  0007e	2b c2		 sub	 eax, edx
  00080	8b c8		 mov	 ecx, eax
  00082	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00085	99		 cdq
  00086	2b c2		 sub	 eax, edx
  00088	d1 f9		 sar	 ecx, 1
  0008a	d1 f8		 sar	 eax, 1
  0008c	2b c8		 sub	 ecx, eax
  0008e	03 f9		 add	 edi, ecx
  00090	89 7b 34	 mov	 DWORD PTR [ebx+52], edi
$LN4@UpdateRect:

; 287  : 			m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  00093	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00096	85 c0		 test	 eax, eax
  00098	7e 05		 jle	 SHORT $LN13@UpdateRect
  0009a	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  0009d	eb 08		 jmp	 SHORT $LN14@UpdateRect
$LN13@UpdateRect:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h

; 361  :         return labs(_X);

  0009f	99		 cdq
  000a0	33 c2		 xor	 eax, edx
  000a2	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 287  : 			m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  000a4	03 46 3c	 add	 eax, DWORD PTR [esi+60]
$LN14@UpdateRect:
  000a7	03 f8		 add	 edi, eax
  000a9	89 7b 34	 mov	 DWORD PTR [ebx+52], edi
$LN9@UpdateRect:

; 288  : 		}
; 289  : 		m_rect.right = m_rect.left + m_lWidth;

  000ac	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  000af	03 c7		 add	 eax, edi
  000b1	89 43 3c	 mov	 DWORD PTR [ebx+60], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000b4	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  000b7	89 45 fc	 mov	 DWORD PTR tv680[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 291  : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  000ba	68 00 00 00 00	 push	 OFFSET ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000bf	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 291  : 		std::for_each(m_pChildList.begin(), m_pChildList.end(), std::mem_fun(&CWindow::UpdateRect));

  000c1	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$mem_fun@JVCWindow@UI@@@std@@YA?AV?$mem_fun_t@JVCWindow@UI@@@0@P8CWindow@UI@@AEJXZ@Z ; std::mem_fun<long,UI::CWindow>
  000ca	83 c4 08	 add	 esp, 8
  000cd	8b 38		 mov	 edi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 74   :         return _Ptr == _Right._Ptr;

  000cf	3b 75 fc	 cmp	 esi, DWORD PTR tv680[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000d2	74 11		 je	 SHORT $LN37@UpdateRect
  000d4	8b 5d fc	 mov	 ebx, DWORD PTR tv680[ebp]
$LL38@UpdateRect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\functional

; 488  :         return (_Pleft->*_Pmemfun)();

  000d7	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000da	ff d7		 call	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  000dc	8b 36		 mov	 esi, DWORD PTR [esi]

; 74   :         return _Ptr == _Right._Ptr;

  000de	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000e0	75 f5		 jne	 SHORT $LL38@UpdateRect
  000e2	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN37@UpdateRect:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 293  : 		OnChangePosition();

  000e5	8b 03		 mov	 eax, DWORD PTR [ebx]
  000e7	8b cb		 mov	 ecx, ebx
  000e9	ff 50 0c	 call	 DWORD PTR [eax+12]

; 294  : 
; 295  : 		return 1;

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	b8 01 00 00 00	 mov	 eax, 1
  000f3	5b		 pop	 ebx

; 296  : 	}

  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
?UpdateRect@CWindow@UI@@QAEJXZ ENDP			; UI::CWindow::UpdateRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC	; UI::CWindow::GetMouseLocalPosition, COMDAT
; _this$ = ecx

; 305  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 306  : 		CWindowManager::Instance().GetMousePosition(rlx, rly);

  00005	8b 75 08	 mov	 esi, DWORD PTR _rlx$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR _rly$[ebp]
  00014	57		 push	 edi
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 307  : 		rlx = rlx - m_rect.left;

  0001b	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  0001e	29 06		 sub	 DWORD PTR [esi], eax

; 308  : 		rly = rly - m_rect.top;

  00020	8b 43 38	 mov	 eax, DWORD PTR [ebx+56]
  00023	29 07		 sub	 DWORD PTR [edi], eax
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx

; 309  : 	}

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP	; UI::CWindow::GetMouseLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC		; UI::CWindow::GetLocalPosition, COMDAT
; _this$ = ecx

; 299  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 300  : 		rlx = rlx - m_rect.left;

  00003	8b 45 08	 mov	 eax, DWORD PTR _rlx$[ebp]
  00006	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00009	29 10		 sub	 DWORD PTR [eax], edx

; 301  : 		rly = rly - m_rect.top;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rly$[ebp]
  0000e	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  00011	29 08		 sub	 DWORD PTR [eax], ecx

; 302  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP		; UI::CWindow::GetLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetPosition@CWindow@UI@@QAEXPAJ0@Z
_TEXT	SEGMENT
_plx$ = 8						; size = 4
_ply$ = 12						; size = 4
?GetPosition@CWindow@UI@@QAEXPAJ0@Z PROC		; UI::CWindow::GetPosition, COMDAT
; _this$ = ecx

; 218  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 219  : 		*plx = m_x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _plx$[ebp]
  00006	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00009	89 10		 mov	 DWORD PTR [eax], edx

; 220  : 		*ply = m_y;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _ply$[ebp]
  0000e	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00011	89 08		 mov	 DWORD PTR [eax], ecx

; 221  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetPosition@CWindow@UI@@QAEXPAJ0@Z ENDP		; UI::CWindow::GetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPosition@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetPosition@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetPosition, COMDAT
; _this$ = ecx

; 210  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 211  : 		m_x = x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 212  : 		m_y = y;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000c	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 213  : 
; 214  : 		UpdateRect();

  0000f	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 215  : 	}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?SetPosition@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetVerticalAlign, COMDAT
; _this$ = ecx

; 204  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 205  : 		m_VerticalAlign = (EVerticalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 206  : 		UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 207  : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 198  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 199  : 		m_HorizontalAlign = (EHorizontalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 200  : 		UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 201  : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSize@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetSize, COMDAT
; _this$ = ecx

; 189  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 190  : 		m_lWidth = width;

  00003	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]

; 191  : 		m_lHeight = height;
; 192  : 
; 193  : 		m_rect.right = m_rect.left + m_lWidth;

  00006	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00009	03 c2		 add	 eax, edx
  0000b	89 51 2c	 mov	 DWORD PTR [ecx+44], edx
  0000e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 194  : 		m_rect.bottom = m_rect.top + m_lHeight;

  00011	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _height$[ebp]
  00018	03 c6		 add	 eax, esi
  0001a	89 71 30	 mov	 DWORD PTR [ecx+48], esi
  0001d	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  00020	5e		 pop	 esi

; 195  : 	}

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?SetSize@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetName@CWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szName$ = 8						; size = 4
?SetName@CWindow@UI@@QAEXPBD@Z PROC			; UI::CWindow::SetName, COMDAT
; _this$ = ecx

; 184  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szName$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 184  : 	{

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetName:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetName
  00017	2b c7		 sub	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 185  : 		m_strName = c_szName;

  00019	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 186  : 	}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetName@CWindow@UI@@QAEXPBD@Z ENDP			; UI::CWindow::SetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Render@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Render@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Render, COMDAT
; _this$ = ecx

; 141  : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 142  : 		if (!IsShow())

  00003	80 7f 55 00	 cmp	 BYTE PTR [edi+85], 0
  00007	0f 84 a2 00 00
	00		 je	 $LN27@Render

; 143  : 			return;
; 144  : 
; 145  : 		OnRender();

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	ff 50 04	 call	 DWORD PTR [eax+4]

; 146  : 
; 147  : 		if (g_bOutlineBoxEnable)

  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bOutlineBoxEnable@@3HA, 0 ; g_bOutlineBoxEnable
  00019	74 7a		 je	 SHORT $LN3@Render

; 148  : 		{
; 149  : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f);

  0001b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00021	83 ec 10	 sub	 esp, 16			; 00000010H
  00024	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0002c	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00034	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0003c	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00043	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
  00048	66 0f 6e 47 40	 movd	 xmm0, DWORD PTR [edi+64]

; 150  : 			CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0004d	83 ec 14	 sub	 esp, 20			; 00000014H
  00050	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00059	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00061	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00067	66 0f 6e 47 3c	 movd	 xmm0, DWORD PTR [edi+60]
  0006c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00075	66 0f 6e 47 38	 movd	 xmm0, DWORD PTR [edi+56]
  0007a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0007d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00083	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  00088	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0008b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00090	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
$LN3@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00095	8b 7f 64	 mov	 edi, DWORD PTR [edi+100]
  00098	56		 push	 esi
  00099	8b 37		 mov	 esi, DWORD PTR [edi]

; 74   :         return _Ptr == _Right._Ptr;

  0009b	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009d	74 0f		 je	 SHORT $LN64@Render
  0009f	90		 npad	 1
$LL28@Render:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  000a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000a3	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  000a8	8b 36		 mov	 esi, DWORD PTR [esi]

; 74   :         return _Ptr == _Right._Ptr;

  000aa	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	75 f2		 jne	 SHORT $LL28@Render
$LN64@Render:
  000ae	5e		 pop	 esi
$LN27@Render:
  000af	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 154  : 	}

  000b0	c3		 ret	 0
?Render@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Update@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Update@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Update, COMDAT
; _this$ = ecx

; 120  : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 121  : 		if (!IsShow())

  00003	80 7f 55 00	 cmp	 BYTE PTR [edi+85], 0
  00007	74 36		 je	 SHORT $LN1@Update

; 122  : 			return;
; 123  : 
; 124  : 		__RemoveReserveChildren();

  00009	e8 00 00 00 00	 call	 ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ; UI::CWindow::__RemoveReserveChildren

; 125  : 
; 126  : 		OnUpdate();

  0000e	8b 07		 mov	 eax, DWORD PTR [edi]
  00010	8b cf		 mov	 ecx, edi
  00012	ff 50 08	 call	 DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00015	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 128  : 		m_isUpdatingChildren = TRUE;

  00018	c7 47 6c 01 00
	00 00		 mov	 DWORD PTR [edi+108], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	3b c8		 cmp	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 130  : 		for(it = m_pChildList.begin(); it != m_pChildList.end();)

  00023	74 13		 je	 SHORT $LN3@Update
  00025	56		 push	 esi
$LL2@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00026	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 134  : 			(*it)->Update();

  00028	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0002b	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 135  : 			it = it_next;

  00030	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 199  :         return this->_Ptr == _Right._Ptr;

  00032	3b 77 64	 cmp	 esi, DWORD PTR [edi+100]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 130  : 		for(it = m_pChildList.begin(); it != m_pChildList.end();)

  00035	75 ef		 jne	 SHORT $LL2@Update
  00037	5e		 pop	 esi
$LN3@Update:

; 136  : 		}
; 137  : 		m_isUpdatingChildren = FALSE;

  00038	c7 47 6c 00 00
	00 00		 mov	 DWORD PTR [edi+108], 0
$LN1@Update:
  0003f	5f		 pop	 edi

; 138  : 	}

  00040	c3		 ret	 0
?Update@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DestroyHandle@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?DestroyHandle@CWindow@UI@@QAEXXZ PROC			; UI::CWindow::DestroyHandle, COMDAT
; _this$ = ecx

; 82   : 		m_poHandler = NULL;

  00000	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], 0

; 83   : 	}

  00007	c3		 ret	 0
?DestroyHandle@CWindow@UI@@QAEXXZ ENDP			; UI::CWindow::DestroyHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Clear@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Clear@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Clear, COMDAT
; _this$ = ecx

; 71   : 	{

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 7b 64	 mov	 edi, DWORD PTR [ebx+100]
  00008	8b 37		 mov	 esi, DWORD PTR [edi]

; 74   :         return _Ptr == _Right._Ptr;

  0000a	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000c	74 10		 je	 SHORT $LN21@Clear
  0000e	66 90		 npad	 2
$LL22@Clear:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 66   : 			pWin->Clear();

  00010	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00013	e8 00 00 00 00	 call	 ?Clear@CWindow@UI@@QAEXXZ ; UI::CWindow::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  00018	8b 36		 mov	 esi, DWORD PTR [esi]

; 74   :         return _Ptr == _Right._Ptr;

  0001a	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	75 f2		 jne	 SHORT $LL22@Clear
$LN21@Clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0001e	8b 4b 64	 mov	 ecx, DWORD PTR [ebx+100]

; 324  :         _Head->_Prev->_Next = nullptr;

  00021	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00024	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002c	85 c0		 test	 eax, eax
  0002e	74 13		 je	 SHORT $LN58@Clear
$LL59@Clear:

; 328  :             _Pnext = _Pnode->_Next;

  00030	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 0c		 push	 12			; 0000000cH
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0003d	8b c6		 mov	 eax, esi
  0003f	85 f6		 test	 esi, esi
  00041	75 ed		 jne	 SHORT $LL59@Clear
$LN58@Clear:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00043	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 76   : 		DestroyHandle();

  00046	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00048	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0004a	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  0004d	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00050	c7 43 68 00 00
	00 00		 mov	 DWORD PTR [ebx+104], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 75   : 		m_pParent = NULL;

  00057	c7 43 60 00 00
	00 00		 mov	 DWORD PTR [ebx+96], 0

; 76   : 		DestroyHandle();

  0005e	e8 00 00 00 00	 call	 ?DestroyHandle@CWindow@UI@@QAEXXZ ; UI::CWindow::DestroyHandle

; 77   : 		Hide();

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	8b cb		 mov	 ecx, ebx
  00067	5b		 pop	 ebx
  00068	e9 00 00 00 00	 jmp	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
?Clear@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AddChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::AddChild, COMDAT
; _this$ = ecx

; 312  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 313  : 		m_pChildList.push_back(pWin);

  00006	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  00009	50		 push	 eax
  0000a	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  0000d	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 314  : 		pWin->m_pParent = this;

  00012	8b 45 08	 mov	 eax, DWORD PTR _pWin$[ebp]
  00015	89 70 60	 mov	 DWORD PTR [eax+96], esi
  00018	5e		 pop	 esi

; 315  : 	}

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::AddChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CWindow@UI@@UAE@XZ PROC				; UI::CWindow::~CWindow, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWindow@UI@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0000a	8b 57 70	 mov	 edx, DWORD PTR [edi+112]

; 324  :         _Head->_Prev->_Next = nullptr;

  0000d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00010	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00016	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00018	85 c0		 test	 eax, eax
  0001a	74 17		 je	 SHORT $LN9@CWindow
  0001c	0f 1f 40 00	 npad	 4
$LL10@CWindow:

; 328  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00022	6a 0c		 push	 12			; 0000000cH
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL10@CWindow
$LN9@CWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00033	6a 0c		 push	 12			; 0000000cH
  00035	ff 77 70	 push	 DWORD PTR [edi+112]
  00038	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0003d	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00043	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0004e	85 c0		 test	 eax, eax
  00050	74 13		 je	 SHORT $LN28@CWindow
$LL29@CWindow:

; 328  :             _Pnext = _Pnode->_Next;

  00052	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00054	6a 0c		 push	 12			; 0000000cH
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0005c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005f	8b c6		 mov	 eax, esi
  00061	85 f6		 test	 esi, esi
  00063	75 ed		 jne	 SHORT $LL29@CWindow
$LN28@CWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00065	6a 0c		 push	 12			; 0000000cH
  00067	ff 77 64	 push	 DWORD PTR [edi+100]
  0006a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006f	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00072	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00075	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00078	72 0d		 jb	 SHORT $LN45@CWindow

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007b	50		 push	 eax
  0007c	ff 77 04	 push	 DWORD PTR [edi+4]
  0007f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00084	83 c4 08	 add	 esp, 8
$LN45@CWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00087	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0008e	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00095	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 41   : 	}

  0009b	c3		 ret	 0
??1CWindow@UI@@UAE@XZ ENDP				; UI::CWindow::~CWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Newhead$2 = 8						; size = 4
__Newhead$3 = 8						; size = 4
_ppyObject$ = 8						; size = 4
??0CWindow@UI@@QAE@PAU_object@@@Z PROC			; UI::CWindow::CWindow, COMDAT
; _this$ = ecx

; 25   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWindow@UI@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00030	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00037	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003e	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 17   : 		m_poHandler(ppyObject),

  00042	8b 45 08	 mov	 eax, DWORD PTR _ppyObject$[ebp]
  00045	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
  0004c	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
  00053	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0
  0005a	c7 47 30 00 00
	00 00		 mov	 DWORD PTR [edi+48], 0
  00061	c6 47 55 00	 mov	 BYTE PTR [edi+85], 0
  00065	c7 47 58 00 00
	00 00		 mov	 DWORD PTR [edi+88], 0
  0006c	89 47 5c	 mov	 DWORD PTR [edi+92], eax

; 18   : 		m_bShow(false),
; 19   : 		m_pParent(NULL),

  0006f	c7 47 60 00 00
	00 00		 mov	 DWORD PTR [edi+96], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00076	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 25   : 	{

  00078	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  0007f	c7 47 64 00 00
	00 00		 mov	 DWORD PTR [edi+100], 0
  00086	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  00092	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00094	8d 45 08	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  00097	50		 push	 eax
  00098	56		 push	 esi
  00099	89 75 08	 mov	 DWORD PTR __Newhead$3[ebp], esi
  0009c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000a1	8d 45 08	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  000a4	50		 push	 eax
  000a5	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000a8	51		 push	 ecx
  000a9	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  000ae	89 77 64	 mov	 DWORD PTR [edi+100], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 21   : 		m_isUpdatingChildren(FALSE)

  000b1	c7 47 6c 00 00
	00 00		 mov	 DWORD PTR [edi+108], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b8	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 25   : 	{

  000ba	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  000be	c7 47 70 00 00
	00 00		 mov	 DWORD PTR [edi+112], 0
  000c5	c7 47 74 00 00
	00 00		 mov	 DWORD PTR [edi+116], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000cc	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  000d1	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000d3	8d 45 08	 lea	 eax, DWORD PTR __Newhead$2[ebp]
  000d6	50		 push	 eax
  000d7	56		 push	 esi
  000d8	89 75 08	 mov	 DWORD PTR __Newhead$2[ebp], esi
  000db	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000e0	8d 45 08	 lea	 eax, DWORD PTR __Newhead$2[ebp]
  000e3	50		 push	 eax
  000e4	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  000ed	89 77 70	 mov	 DWORD PTR [edi+112], esi
  000f0	83 c4 28	 add	 esp, 40			; 00000028H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp

; 23   : 		,m_bIsScrollable(false)

  000f3	c6 47 78 00	 mov	 BYTE PTR [edi+120], 0

; 26   : #ifdef _DEBUG
; 27   : 		static DWORD DEBUG_dwGlobalCounter=0;
; 28   : 		DEBUG_dwCounter=DEBUG_dwGlobalCounter++;
; 29   : 
; 30   : 		m_strName = "!!debug";
; 31   : #endif
; 32   : 		//assert(m_poHandler != NULL);
; 33   : 		m_HorizontalAlign = HORIZONTAL_ALIGN_LEFT;
; 34   : 		m_VerticalAlign = VERTICAL_ALIGN_TOP;
; 35   : 		m_rect.bottom = m_rect.left = m_rect.right = m_rect.top = 0;
; 36   : 		m_limitBiasRect.bottom = m_limitBiasRect.left = m_limitBiasRect.right = m_limitBiasRect.top = 0;
; 37   : 	}

  000f7	8b c7		 mov	 eax, edi
  000f9	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
  00100	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
  00107	c7 47 38 00 00
	00 00		 mov	 DWORD PTR [edi+56], 0
  0010e	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0
  00115	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0
  0011c	c7 47 40 00 00
	00 00		 mov	 DWORD PTR [edi+64], 0
  00123	c7 47 48 00 00
	00 00		 mov	 DWORD PTR [edi+72], 0
  0012a	c7 47 4c 00 00
	00 00		 mov	 DWORD PTR [edi+76], 0
  00131	c7 47 44 00 00
	00 00		 mov	 DWORD PTR [edi+68], 0
  00138	c7 47 50 00 00
	00 00		 mov	 DWORD PTR [edi+80], 0
  0013f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00142	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00149	59		 pop	 ecx
  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 64	 add	 ecx, 100		; 00000064H
  00011	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CWindow@UI@@QAE@PAU_object@@@Z ENDP			; UI::CWindow::CWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsType@CWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?IsType@CWindow@UI@@QAEHK@Z PROC			; UI::CWindow::IsType, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 		return OnIsType(dwType);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 52   : 	}

  00005	5d		 pop	 ebp

; 51   : 		return OnIsType(dwType);

  00006	ff a0 94 00 00
	00		 jmp	 DWORD PTR [eax+148]
?IsType@CWindow@UI@@QAEHK@Z ENDP			; UI::CWindow::IsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CWindow@UI@@SAKXZ PROC				; UI::CWindow::Type, COMDAT

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 45   : 		static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 46   : 		return (s_dwType);
; 47   : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 45   : 		static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 07		 push	 7
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_07EFPFKGGH@CWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CWindow@UI@@SAKXZ ENDP				; UI::CWindow::Type
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAPAPAVCGraphicExpandedImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAPAPAVCGraphicExpandedImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicExpandedImageInstance * *,std::allocator<CGraphicExpandedImageInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAPAPAVCGraphicExpandedImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicExpandedImageInstance * *,std::allocator<CGraphicExpandedImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAXPAPAVCGraphicExpandedImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAXPAPAVCGraphicExpandedImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicExpandedImageInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAXPAPAVCGraphicExpandedImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicExpandedImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAPAPAVCGraphicExpandedImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicExpandedImageInstance * *,std::allocator<CGraphicExpandedImageInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@YAPAPAVCGraphicExpandedImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicExpandedImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicExpandedImageInstance * *,std::allocator<CGraphicExpandedImageInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$1 = -12						; size = 12
__Val$ = 8						; size = 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove, COMDAT
; _this$ = ecx

; 1602 :     auto remove(const _Ty& _Val) { // erase each element matching _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1536 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  0000b	8d 45 f8	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  0000e	33 d2		 xor	 edx, edx
  00010	89 7d f4	 mov	 DWORD PTR __Op$1[ebp], edi
  00013	89 55 f8	 mov	 DWORD PTR __Op$1[ebp+4], edx
  00016	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax

; 1610 :         const auto _Last         = _My_data._Myhead;

  00019	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1611 :         const size_type _Oldsize = _My_data._Mysize;
; 1612 :         for (auto _First = _Last->_Next; _First != _Last;) {

  0001b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001d	3b c3		 cmp	 eax, ebx
  0001f	74 36		 je	 SHORT $LN7@remove
  00021	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
$LL6@remove:

; 1603 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1613 :             auto _Next = _First->_Next;

  00027	8b 30		 mov	 esi, DWORD PTR [eax]

; 1603 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00029	3b 0a		 cmp	 ecx, DWORD PTR [edx]

; 1614 :             if (_Pred(_First->_Myval)) {

  0002b	75 21		 jne	 SHORT $LN16@remove

; 1547 :             --_List._Mypair._Myval2._Mysize;

  0002d	ff 4f 04	 dec	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00030	8b 10		 mov	 edx, DWORD PTR [eax]

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1549 :             const auto _Prev = _Removed->_Prev;

  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1550 :             _Prev->_Next     = _Next;

  0003b	89 11		 mov	 DWORD PTR [ecx], edx

; 1551 :             _Next->_Prev     = _Prev;

  0003d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1552 : 
; 1553 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1554 :             // mark removed node for IDL to snip out later
; 1555 :             _Removed->_Prev = _Nodeptr();
; 1556 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1557 : 
; 1558 :             *_Tail = _Removed;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00043	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 1559 :             _Tail  = _STD addressof(_Removed->_Next);

  00048	8b 7d f4	 mov	 edi, DWORD PTR __Op$1[ebp]
  0004b	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN16@remove:

; 1618 :             _First = _Next;

  0004e	8b c6		 mov	 eax, esi
  00050	3b f3		 cmp	 esi, ebx
  00052	75 d0		 jne	 SHORT $LL6@remove
  00054	8b 55 f8	 mov	 edx, DWORD PTR __Op$1[ebp+4]
$LN7@remove:

; 1585 :             auto _Target = _Head;

  00057	85 d2		 test	 edx, edx

; 1586 :             while (_Target) {

  00059	74 18		 je	 SHORT $LN21@remove
  0005b	0f 1f 44 00 00	 npad	 5
$LL20@remove:

; 1587 :                 auto _Next = _Target->_Next;

  00060	8b 32		 mov	 esi, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00062	6a 0c		 push	 12			; 0000000cH
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1593 :                 _Target = _Next;

  0006d	8b d6		 mov	 edx, esi
  0006f	85 f6		 test	 esi, esi
  00071	75 ed		 jne	 SHORT $LL20@remove
$LN21@remove:
  00073	5f		 pop	 edi

; 1604 :     }

  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
__Insert_after$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Insert_before$ = 8					; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back, COMDAT
; _this$ = ecx

; 1251 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 1014 :         if (_Mysize == max_size()) {

  0002a	81 7e 04 55 55
	55 15		 cmp	 DWORD PTR [esi+4], 357913941 ; 15555555H

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00031	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1014 :         if (_Mysize == max_size()) {

  00033	74 61		 je	 SHORT $LN38@push_back
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00035	89 75 ec	 mov	 DWORD PTR __Op$2[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00038	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00041	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00048	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  00050	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00052	8d 45 08	 lea	 eax, DWORD PTR __Insert_before$[ebp]

; 1020 :         return _Op._Transfer_before(_Where);

  00055	89 5d 08	 mov	 DWORD PTR __Insert_before$[ebp], ebx

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00058	50		 push	 eax
  00059	57		 push	 edi

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0005a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 1019 :         ++_Mysize;

  0005f	ff 46 04	 inc	 DWORD PTR [esi+4]

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  00062	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00065	89 75 f0	 mov	 DWORD PTR __Insert_after$3[ebp], esi

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00068	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0006d	8d 45 f0	 lea	 eax, DWORD PTR __Insert_after$3[ebp]
  00070	50		 push	 eax
  00071	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  0007a	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  0007d	83 c4 14	 add	 esp, 20			; 00000014H

; 606  :         _Insert_after->_Next  = _Result;

  00080	89 3e		 mov	 DWORD PTR [esi], edi

; 1253 :     }

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
$LN38@push_back:

; 1015 :             _Xlength_error("list too long");

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  0009b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN36@push_back:
  000a0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 328  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h
;	COMDAT ?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInstance$ = 8					; size = 4
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z PROC ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance, COMDAT

; 10   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 11   : 			pkInstance->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkInstance$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h

; 12   : 			ms_kPool.Free(pkInstance);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@DeleteExpa

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h

; 13   : 		}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@DeleteExpa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@QAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpExpandedImageInstance.h

; 13   : 		}

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ENDP ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z
_TEXT	SEGMENT
__Old_size$1$ = -16					; size = 4
__New_ptr$1 = -12					; size = 4
__Old$1$ = -8						; size = 4
tv441 = -4						; size = 4
tv438 = -4						; size = 4
$T2 = -4						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 2822 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b d9		 mov	 ebx, ecx

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 2822 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

  0000d	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000e	8b f9		 mov	 edi, ecx
  00010	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
$LL49@operator:
  00013	8a 07		 mov	 al, BYTE PTR [edi]
  00015	47		 inc	 edi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL49@operator

; 2859 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0001a	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001d	2b fa		 sub	 edi, edx

; 2860 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  0001f	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00022	8b c2		 mov	 eax, edx
  00024	2b c6		 sub	 eax, esi
  00026	89 75 f0	 mov	 DWORD PTR __Old_size$1$[ebp], esi
  00029	89 55 f8	 mov	 DWORD PTR __Old$1$[ebp], edx
  0002c	3b f8		 cmp	 edi, eax
  0002e	77 2b		 ja	 SHORT $LN8@operator

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00030	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00033	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  00036	8b c3		 mov	 eax, ebx

; 2153 :         return _BUF_SIZE <= _Myres;

  00038	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0003b	72 02		 jb	 SHORT $LN11@operator

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN11@operator:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0003f	57		 push	 edi

; 2863 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00040	03 f0		 add	 esi, eax

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00042	51		 push	 ecx
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _memmove
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2864 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0004c	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 2823 :         return append(_Ptr);

  00050	8b c3		 mov	 eax, ebx
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx

; 2824 :     }

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
$LN8@operator:

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  0005b	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00060	2b c6		 sub	 eax, esi
  00062	3b c7		 cmp	 eax, edi
  00064	0f 82 d5 00 00
	00		 jb	 $LN54@operator

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006a	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0006d	83 c9 0f	 or	 ecx, 15			; 0000000fH
  00070	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00076	76 07		 jbe	 SHORT $LN25@operator

; 4203 :             return _Max;

  00078	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0007d	eb 24		 jmp	 SHORT $LN51@operator
$LN25@operator:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0007f	8b c2		 mov	 eax, edx
  00081	d1 e8		 shr	 eax, 1
  00083	89 45 fc	 mov	 DWORD PTR tv441[ebp], eax
  00086	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0008b	2b 45 fc	 sub	 eax, DWORD PTR tv441[ebp]
  0008e	3b d0		 cmp	 edx, eax
  00090	76 07		 jbe	 SHORT $LN26@operator

; 4207 :             return _Max;

  00092	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00097	eb 0a		 jmp	 SHORT $LN51@operator
$LN26@operator:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv441[ebp]
  0009c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0009e	3b c8		 cmp	 ecx, eax
  000a0	0f 42 c8	 cmovb	 ecx, eax
$LN51@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000a3	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000a6	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4260 :         _My_data._Myres       = _New_capacity;

  000af	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  000b2	8b d0		 mov	 edx, eax
  000b4	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  000b7	89 55 f4	 mov	 DWORD PTR __New_ptr$1[ebp], edx
  000ba	89 43 10	 mov	 DWORD PTR [ebx+16], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bd	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  000c0	83 7d f8 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000c4	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  000c7	89 4b 14	 mov	 DWORD PTR [ebx+20], ecx
  000ca	89 45 fc	 mov	 DWORD PTR tv438[ebp], eax
  000cd	72 3e		 jb	 SHORT $LN19@operator

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000cf	ff 75 f0	 push	 DWORD PTR __Old_size$1$[ebp]

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  000d2	8b 33		 mov	 esi, DWORD PTR [ebx]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000d4	56		 push	 esi
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 _memcpy
  000db	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000de	57		 push	 edi
  000df	50		 push	 eax
  000e0	ff 75 fc	 push	 DWORD PTR tv438[ebp]
  000e3	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  000e8	8b 45 fc	 mov	 eax, DWORD PTR tv438[ebp]
  000eb	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  000ef	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]
  000f2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f3	50		 push	 eax
  000f4	56		 push	 esi
  000f5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  000fa	8b 45 f4	 mov	 eax, DWORD PTR __New_ptr$1[ebp]

; 2823 :         return append(_Ptr);

  000fd	83 c4 20	 add	 esp, 32			; 00000020H

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  00100	89 03		 mov	 DWORD PTR [ebx], eax

; 2823 :         return append(_Ptr);

  00102	8b c3		 mov	 eax, ebx
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx

; 2824 :     }

  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c2 04 00	 ret	 4
$LN19@operator:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0010d	56		 push	 esi
  0010e	53		 push	 ebx
  0010f	52		 push	 edx
  00110	e8 00 00 00 00	 call	 _memcpy
  00115	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00118	8b 75 fc	 mov	 esi, DWORD PTR tv438[ebp]
  0011b	57		 push	 edi
  0011c	50		 push	 eax
  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 _memcpy

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00123	8d 45 f4	 lea	 eax, DWORD PTR __New_ptr$1[ebp]

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00126	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0012a	50		 push	 eax
  0012b	53		 push	 ebx
  0012c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2823 :         return append(_Ptr);

  00131	83 c4 20	 add	 esp, 32			; 00000020H
  00134	8b c3		 mov	 eax, ebx
  00136	5f		 pop	 edi
  00137	5e		 pop	 esi
  00138	5b		 pop	 ebx

; 2824 :     }

  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 04 00	 ret	 4
$LN54@operator:

; 4250 :             _Xlen_string(); // result too long

  0013f	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN50@operator:
  00144	cc		 int	 3
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
