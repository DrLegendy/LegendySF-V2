; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	?Type@CSlotWindow@UI@@SAKXZ			; UI::CSlotWindow::Type
PUBLIC	??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
PUBLIC	??0CSlotWindow@UI@@QAE@PAU_object@@@Z		; UI::CSlotWindow::CSlotWindow
PUBLIC	??1CSlotWindow@UI@@UAE@XZ			; UI::CSlotWindow::~CSlotWindow
PUBLIC	?Destroy@CSlotWindow@UI@@QAEXXZ			; UI::CSlotWindow::Destroy
PUBLIC	?SetSlotType@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetSlotType
PUBLIC	?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetSlotStyle
PUBLIC	?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z		; UI::CSlotWindow::AppendSlot
PUBLIC	?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z	; UI::CSlotWindow::SetCoverButton
PUBLIC	?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z	; UI::CSlotWindow::SetSlotBaseImage
PUBLIC	?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z	; UI::CSlotWindow::AppendSlotButton
PUBLIC	?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z ; UI::CSlotWindow::AppendRequirementSignImage
PUBLIC	?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::EnableCoverButton
PUBLIC	?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::DisableCoverButton
PUBLIC	?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z ; UI::CSlotWindow::SetAlwaysRenderCoverButton
PUBLIC	?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::ShowSlotBaseImage
PUBLIC	?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::HideSlotBaseImage
PUBLIC	?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z	; UI::CSlotWindow::IsDisableCoverButton
PUBLIC	?HasSlot@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::HasSlot
PUBLIC	?ClearAllSlot@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::ClearAllSlot
PUBLIC	?ClearSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ClearSlot
PUBLIC	?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z ; UI::CSlotWindow::SetSlot
PUBLIC	?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z		; UI::CSlotWindow::SetSlotCount
PUBLIC	?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z	; UI::CSlotWindow::SetSlotCountNew
PUBLIC	?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z	; UI::CSlotWindow::SetSlotCoolTime
PUBLIC	?ActivateSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ActivateSlot
PUBLIC	?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::DeactivateSlot
PUBLIC	?RefreshSlot@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::RefreshSlot
PUBLIC	?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z	; UI::CSlotWindow::GetSlotCoolTime
PUBLIC	?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z	; UI::CSlotWindow::IsActivatedSlot
PUBLIC	?GetSlotCount@CSlotWindow@UI@@QAEKXZ		; UI::CSlotWindow::GetSlotCount
PUBLIC	?LockSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::LockSlot
PUBLIC	?UnlockSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::UnlockSlot
PUBLIC	?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetCantUseSlot
PUBLIC	?SetUseSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetUseSlot
PUBLIC	?EnableSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::EnableSlot
PUBLIC	?DisableSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::DisableSlot
PUBLIC	?ClearSelected@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::ClearSelected
PUBLIC	?SelectSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SelectSlot
PUBLIC	?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::isSelectedSlot
PUBLIC	?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ	; UI::CSlotWindow::GetSelectedSlotCount
PUBLIC	?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z	; UI::CSlotWindow::GetSelectedSlotNumber
PUBLIC	?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ShowSlotButton
PUBLIC	?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ	; UI::CSlotWindow::HideAllSlotButton
PUBLIC	?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z	; UI::CSlotWindow::OnPressedSlotButton
PUBLIC	?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::ShowRequirementSign
PUBLIC	?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::HideRequirementSign
PUBLIC	?OnOverInItem@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::OnOverInItem
PUBLIC	?OnOverOutItem@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::OnOverOutItem
PUBLIC	?SetUseMode@CSlotWindow@UI@@QAEXH@Z		; UI::CSlotWindow::SetUseMode
PUBLIC	?SetUsableItem@CSlotWindow@UI@@QAEXH@Z		; UI::CSlotWindow::SetUsableItem
PUBLIC	?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect
PUBLIC	?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z	; UI::CSlotWindow::ActivateEffect
PUBLIC	?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::DeactivateEffect
PUBLIC	?__Initialize@CSlotWindow@UI@@IAEXXZ		; UI::CSlotWindow::__Initialize
PUBLIC	?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::__CreateToggleSlotImage
PUBLIC	?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__CreateSlotEnableEffect
PUBLIC	?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
PUBLIC	?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ; UI::CSlotWindow::__CreateBaseImage
PUBLIC	?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage
PUBLIC	?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroySlotEnableEffect
PUBLIC	?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
PUBLIC	?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::__DestroyBaseImage
PUBLIC	?OnUpdate@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnUpdate
PUBLIC	?OnRender@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnRender
PUBLIC	?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnMouseOver
PUBLIC	?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::RenderSlotBaseImage
PUBLIC	?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::RenderLockedSlot
PUBLIC	?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ	; UI::CSlotWindow::OnRenderPickingSlot
PUBLIC	?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ	; UI::CSlotWindow::OnRenderSelectedSlot
PUBLIC	?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnSelectEmptySlot
PUBLIC	?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnSelectItemSlot
PUBLIC	?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnUnselectEmptySlot
PUBLIC	?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnUnselectItemSlot
PUBLIC	?OnUseSlot@CSlotWindow@UI@@IAEXXZ		; UI::CSlotWindow::OnUseSlot
PUBLIC	?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
PUBLIC	?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSelectedSlotPointer
PUBLIC	?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetPickedSlotPointer
PUBLIC	?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z	; UI::CSlotWindow::ClearSlot
PUBLIC	?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnRefreshSlot
PUBLIC	?OnIsType@CSlotWindow@UI@@MAEHK@Z		; UI::CSlotWindow::OnIsType
PUBLIC	??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
PUBLIC	?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
PUBLIC	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	??_GCSlotWindow@UI@@UAEPAXI@Z			; UI::CSlotWindow::`scalar deleting destructor'
PUBLIC	??1CSlotButton@CSlotWindow@UI@@UAE@XZ		; UI::CSlotWindow::CSlotButton::~CSlotButton
PUBLIC	?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CSlotButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CSlotButton::OnMouseOverOut
PUBLIC	??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z	; UI::CSlotWindow::CSlotButton::`scalar deleting destructor'
PUBLIC	??1CCoverButton@CSlotWindow@UI@@UAE@XZ		; UI::CSlotWindow::CCoverButton::~CCoverButton
PUBLIC	?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ	; UI::CSlotWindow::CCoverButton::OnRender
PUBLIC	?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp
PUBLIC	??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z	; UI::CSlotWindow::CCoverButton::`scalar deleting destructor'
PUBLIC	??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect
PUBLIC	?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame
PUBLIC	??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor'
PUBLIC	??_9CWindow@UI@@$B3AE				; UI::CWindow::`vcall'{4}'
PUBLIC	??$_Emplace_back_internal@ABK@?$deque@KV?$allocator@K@std@@@std@@AAEXABK@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Emplace_back_internal<unsigned long const &>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Destroy_in_place@PAK@std@@YAXAAPAK@Z	; std::_Destroy_in_place<unsigned long *>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@KPAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@0@Z ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * &>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@KPAX@std@@@std@@YAXAAPAU?$_List_node@KPAX@0@@Z ; std::_Destroy_in_place<std::_List_node<unsigned long,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@KPAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * const &>
PUBLIC	??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
PUBLIC	??$_Destroy_range@PAPAK@std@@YAXPAPAKQAPAK@Z	; std::_Destroy_range<unsigned long * *>
PUBLIC	??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
PUBLIC	??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z	; std::_Zero_range<unsigned long * *>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CSlotWindow@UI@@6B@				; UI::CSlotWindow::`vftable'
PUBLIC	??_7CSlotButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CSlotButton::`vftable'
PUBLIC	??_7CCoverButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CCoverButton::`vftable'
PUBLIC	??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@	; UI::CSlotWindow::CCoolTimeFinishEffect::`vftable'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_03CIOACFJF@m?$CFd@			; `string'
PUBLIC	??_C@_03EHFNMFPB@g?$CFd@			; `string'
PUBLIC	??_C@_01JBBJJEPG@p@				; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0BC@JJECHKOF@OnSelectEmptySlot@		; `string'
PUBLIC	??_C@_0BB@PFHJJJ@OnSelectItemSlot@		; `string'
PUBLIC	??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@		; `string'
PUBLIC	??_C@_0BD@EONLJJMO@OnUnselectItemSlot@		; `string'
PUBLIC	??_C@_09HJIBPFCA@OnUseSlot@			; `string'
PUBLIC	??_C@_0N@CBOPEHFH@OnOverInItem@			; `string'
PUBLIC	??_C@_02HCKGKOFO@?$CI?$CJ@			; `string'
PUBLIC	??_C@_0O@IBCIPGEP@OnOverOutItem@		; `string'
PUBLIC	??_C@_0BE@MBGDMPNF@OnPressedSlotButton@		; `string'
PUBLIC	??_C@_0M@DKKKJBKL@CSlotWindow@			; `string'
PUBLIC	??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@ ; `string'
PUBLIC	??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R4CSlotWindow@UI@@6B@			; UI::CSlotWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSlotWindow@UI@@@8			; UI::CSlotWindow `RTTI Type Descriptor'
PUBLIC	??_R3CSlotWindow@UI@@8				; UI::CSlotWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSlotWindow@UI@@8				; UI::CSlotWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSlotWindow@UI@@8			; UI::CSlotWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSlotButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CSlotButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSlotButton@CSlotWindow@UI@@@8		; UI::CSlotWindow::CSlotButton `RTTI Type Descriptor'
PUBLIC	??_R3CSlotButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CSlotButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSlotButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CSlotButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8	; UI::CSlotWindow::CSlotButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R4CCoverButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CCoverButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoverButton@CSlotWindow@UI@@@8		; UI::CSlotWindow::CCoverButton `RTTI Type Descriptor'
PUBLIC	??_R3CCoverButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CCoverButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoverButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CCoverButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoverButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect `RTTI Type Descriptor'
PUBLIC	??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@41800000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMM@Z:PROC ; CPythonGraphic::RenderCoolTimeBox
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?IsDragging@CWindowManager@UI@@QAEHXZ:PROC	; UI::CWindowManager::IsDragging
EXTRN	?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z:PROC ; UI::CWindowManager::SetParent
EXTRN	?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z:PROC ; UI::CWindowManager::DestroyWindow
EXTRN	?IsAttaching@CWindowManager@UI@@QAEHXZ:PROC	; UI::CWindowManager::IsAttaching
EXTRN	?DeattachIcon@CWindowManager@UI@@QAEXXZ:PROC	; UI::CWindowManager::DeattachIcon
EXTRN	?IsType@CWindow@UI@@QAEHK@Z:PROC		; UI::CWindow::IsType
EXTRN	??0CWindow@UI@@QAE@PAU_object@@@Z:PROC		; UI::CWindow::CWindow
EXTRN	??1CWindow@UI@@UAE@XZ:PROC			; UI::CWindow::~CWindow
EXTRN	?Update@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Update
EXTRN	?Render@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Render
EXTRN	?SetPosition@CWindow@UI@@QAEXJJ@Z:PROC		; UI::CWindow::SetPosition
EXTRN	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z:PROC ; UI::CWindow::GetMouseLocalPosition
EXTRN	?Show@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Show
EXTRN	?Hide@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Hide
EXTRN	?IsRendering@CWindow@UI@@QAE_NXZ:PROC		; UI::CWindow::IsRendering
EXTRN	?SetTop@CWindow@UI@@QAEXPAV12@@Z:PROC		; UI::CWindow::SetTop
EXTRN	?IsIn@CWindow@UI@@QAE_NXZ:PROC			; UI::CWindow::IsIn
EXTRN	?OnSetFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnSetFocus
EXTRN	?OnKillFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnKillFocus
EXTRN	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMouseDrag
EXTRN	?OnMouseOverIn@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverIn
EXTRN	?OnMouseOverOut@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverOut
EXTRN	?OnMouseOver@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOver
EXTRN	?OnDrop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnDrop
EXTRN	?OnTop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnTop
EXTRN	?OnIMEUpdate@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnIMEUpdate
EXTRN	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMoveWindow
EXTRN	?OnIMETabEvent@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnIMETabEvent
EXTRN	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEReturnEvent
EXTRN	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z:PROC	; UI::CWindow::OnIMEKeyDownEvent
EXTRN	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEChangeCodePage
EXTRN	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenCandidateListEvent
EXTRN	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseCandidateListEvent
EXTRN	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenReadingWndEvent
EXTRN	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseReadingWndEvent
EXTRN	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonUp
EXTRN	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonDown
EXTRN	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonUp
EXTRN	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseRightButtonDoubleClick
EXTRN	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseMiddleButtonDown
EXTRN	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseMiddleButtonUp
EXTRN	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z:PROC	; UI::CWindow::OnMouseWheelScroll
EXTRN	?SetScrollable@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::SetScrollable
EXTRN	?OnKeyDown@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyDown
EXTRN	?OnKeyUp@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyUp
EXTRN	?OnPressEscapeKey@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnPressEscapeKey
EXTRN	?OnPressExitKey@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnPressExitKey
EXTRN	?OnIsType@CWindow@UI@@UAEHK@Z:PROC		; UI::CWindow::OnIsType
EXTRN	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:PROC	; UI::CNumberLine::CNumberLine
EXTRN	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z:PROC ; UI::CNumberLine::SetHorizontalAlign
EXTRN	?SetNumber@CNumberLine@UI@@QAEXPBD@Z:PROC	; UI::CNumberLine::SetNumber
EXTRN	??0CImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CImageBox::CImageBox
EXTRN	?LoadImageA@CImageBox@UI@@QAEHPBD@Z:PROC	; UI::CImageBox::LoadImageA
EXTRN	??0CAniImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CAniImageBox::CAniImageBox
EXTRN	??1CAniImageBox@UI@@UAE@XZ:PROC			; UI::CAniImageBox::~CAniImageBox
EXTRN	?SetDelay@CAniImageBox@UI@@QAEXH@Z:PROC		; UI::CAniImageBox::SetDelay
EXTRN	?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z:PROC ; UI::CAniImageBox::AppendImage
EXTRN	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z:PROC	; UI::CAniImageBox::SetRenderingMode
EXTRN	?ResetFrame@CAniImageBox@UI@@QAEXXZ:PROC	; UI::CAniImageBox::ResetFrame
EXTRN	?OnUpdate@CAniImageBox@UI@@MAEXXZ:PROC		; UI::CAniImageBox::OnUpdate
EXTRN	?OnRender@CAniImageBox@UI@@MAEXXZ:PROC		; UI::CAniImageBox::OnRender
EXTRN	?OnChangePosition@CAniImageBox@UI@@MAEXXZ:PROC	; UI::CAniImageBox::OnChangePosition
EXTRN	?OnIsType@CAniImageBox@UI@@MAEHK@Z:PROC		; UI::CAniImageBox::OnIsType
EXTRN	??0CButton@UI@@QAE@PAU_object@@@Z:PROC		; UI::CButton::CButton
EXTRN	??1CButton@UI@@UAE@XZ:PROC			; UI::CButton::~CButton
EXTRN	?SetUpVisual@CButton@UI@@QAEHPBD@Z:PROC		; UI::CButton::SetUpVisual
EXTRN	?SetOverVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetOverVisual
EXTRN	?SetDownVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetDownVisual
EXTRN	?SetDisableVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetDisableVisual
EXTRN	?Enable@CButton@UI@@QAEXXZ:PROC			; UI::CButton::Enable
EXTRN	?Disable@CButton@UI@@QAEXXZ:PROC		; UI::CButton::Disable
EXTRN	?SetUp@CButton@UI@@QAEXXZ:PROC			; UI::CButton::SetUp
EXTRN	?Down@CButton@UI@@QAEXXZ:PROC			; UI::CButton::Down
EXTRN	?IsDisable@CButton@UI@@QAEHXZ:PROC		; UI::CButton::IsDisable
EXTRN	?IsPressed@CButton@UI@@QAEHXZ:PROC		; UI::CButton::IsPressed
EXTRN	?OnUpdate@CButton@UI@@MAEXXZ:PROC		; UI::CButton::OnUpdate
EXTRN	?OnRender@CButton@UI@@MAEXXZ:PROC		; UI::CButton::OnRender
EXTRN	?OnChangePosition@CButton@UI@@MAEXXZ:PROC	; UI::CButton::OnChangePosition
EXTRN	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ:PROC	; UI::CButton::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ:PROC ; UI::CButton::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ:PROC	; UI::CButton::OnMouseLeftButtonUp
EXTRN	?IsEnable@CButton@UI@@IAEHXZ:PROC		; UI::CButton::IsEnable
EXTRN	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z:PROC ; UI::CButton::SetCurrentVisual
EXTRN	??_ECSlotWindow@UI@@UAEPAXI@Z:PROC		; UI::CSlotWindow::`vector deleting destructor'
EXTRN	??_ECSlotButton@CSlotWindow@UI@@UAEPAXI@Z:PROC	; UI::CSlotWindow::CSlotButton::`vector deleting destructor'
EXTRN	??_ECCoverButton@CSlotWindow@UI@@UAEPAXI@Z:PROC	; UI::CSlotWindow::CCoverButton::`vector deleting destructor'
EXTRN	??_ECCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z:PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CSlotWindow::Type'::`2'::s_Type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CSlotWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$r	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD 00H	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CCoolTimeFinishEffect `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoolTimeFinishEffect@CSlotWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ DD 00H	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCCoverButton@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoverButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CCoverButton@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoverButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CCoverButton@CSlotWindow@UI@@8 DD 00H		; UI::CSlotWindow::CCoverButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoverButton@CSlotWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCCoverButton@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CCoverButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoverButton@CSlotWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CCoverButton@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CCoverButton@CSlotWindow@UI@@6B@ DD 00H		; UI::CSlotWindow::CCoverButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoverButton@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$r	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCSlotButton@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CSlotButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CSlotButton@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8 ; UI::CSlotWindow::CSlotButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CSlotButton@CSlotWindow@UI@@8 DD 00H		; UI::CSlotWindow::CSlotButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSlotButton@CSlotWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCSlotButton@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CSlotButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSlotButton@CSlotWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSlotButton@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CSlotButton@CSlotWindow@UI@@6B@ DD 00H		; UI::CSlotWindow::CSlotButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSlotButton@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCSlotWindow@UI@@@8 ; UI::CSlotWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CSlotWindow@UI@@8 ; UI::CSlotWindow::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CSlotWindow@UI@@8 DD 00H				; UI::CSlotWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSlotWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CSlotWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSlotWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CSlotWindow@UI@@6B@ DD 00H				; UI::CSlotWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSlotWindow@UI@@@8
	DD	FLAT:??_R3CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir work'
	DB	'/ui/public/slotfinishcooltimeeffect/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/12.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/11.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir work'
	DB	'/ui/public/slotactiveeffect/slot3/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/12.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/11.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir work'
	DB	'/ui/public/slotactiveeffect/slot2/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/12.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/11.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/10.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/09.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/08.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/07.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/06.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/05.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/04.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/03.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/02.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/01.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/00.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@
CONST	SEGMENT
??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@ DB 'd:/ymir wor'
	DB	'k/ui/public/slot_toggle.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot%d/%02d.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKKKJBKL@CSlotWindow@
CONST	SEGMENT
??_C@_0M@DKKKJBKL@CSlotWindow@ DB 'CSlotWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBGDMPNF@OnPressedSlotButton@
CONST	SEGMENT
??_C@_0BE@MBGDMPNF@OnPressedSlotButton@ DB 'OnPressedSlotButton', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IBCIPGEP@OnOverOutItem@
CONST	SEGMENT
??_C@_0O@IBCIPGEP@OnOverOutItem@ DB 'OnOverOutItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCKGKOFO@?$CI?$CJ@
CONST	SEGMENT
??_C@_02HCKGKOFO@?$CI?$CJ@ DB '()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBOPEHFH@OnOverInItem@
CONST	SEGMENT
??_C@_0N@CBOPEHFH@OnOverInItem@ DB 'OnOverInItem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJIBPFCA@OnUseSlot@
CONST	SEGMENT
??_C@_09HJIBPFCA@OnUseSlot@ DB 'OnUseSlot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EONLJJMO@OnUnselectItemSlot@
CONST	SEGMENT
??_C@_0BD@EONLJJMO@OnUnselectItemSlot@ DB 'OnUnselectItemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@
CONST	SEGMENT
??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@ DB 'OnUnselectEmptySlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFHJJJ@OnSelectItemSlot@
CONST	SEGMENT
??_C@_0BB@PFHJJJ@OnSelectItemSlot@ DB 'OnSelectItemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JJECHKOF@OnSelectEmptySlot@
CONST	SEGMENT
??_C@_0BC@JJECHKOF@OnSelectEmptySlot@ DB 'OnSelectEmptySlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JBBJJEPG@p@
CONST	SEGMENT
??_C@_01JBBJJEPG@p@ DB 'p', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03EHFNMFPB@g?$CFd@
CONST	SEGMENT
??_C@_03EHFNMFPB@g?$CFd@ DB 'g%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CIOACFJF@m?$CFd@
CONST	SEGMENT
??_C@_03CIOACFJF@m?$CFd@ DB 'm%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ DD FLAT:??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CCoolTimeFinishEffect::`vftable'
	DD	FLAT:??_ECCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CCoverButton@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CCoverButton@CSlotWindow@UI@@6B@ DD FLAT:??_R4CCoverButton@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CCoverButton::`vftable'
	DD	FLAT:??_ECCoverButton@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CSlotButton@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CSlotButton@CSlotWindow@UI@@6B@ DD FLAT:??_R4CSlotButton@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CSlotButton::`vftable'
	DD	FLAT:??_ECSlotButton@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CSlotWindow@UI@@6B@ DD FLAT:??_R4CSlotWindow@UI@@6B@ ; UI::CSlotWindow::`vftable'
	DD	FLAT:??_ECSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CSlotWindow@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z
	DD	FLAT:?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z$0
__ehfuncinfo$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z$1
__ehfuncinfo$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z$1
__ehfuncinfo$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z$0
__ehfuncinfo$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$2
__ehfuncinfo$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ$0
__ehfuncinfo$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z$0
__ehfuncinfo$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SelectSlot@CSlotWindow@UI@@QAEXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SelectSlot@CSlotWindow@UI@@QAEXK@Z$1
__ehfuncinfo$?SelectSlot@CSlotWindow@UI@@QAEXK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z$0
__ehfuncinfo$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z$0
__ehfuncinfo$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z$0
__ehfuncinfo$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z$0
__ehfuncinfo$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z$0
__ehfuncinfo$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z$1
__ehfuncinfo$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSlotWindow@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSlotWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$2
__ehfuncinfo$??0CSlotWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CSlotWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CSlotWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CSlotWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CSlotWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z PROC		; std::_Zero_range<unsigned long * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z ENDP		; std::_Zero_range<unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z PROC	; std::_Copy_memmove<unsigned long * *,unsigned long * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ENDP	; std::_Copy_memmove<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAK@std@@YAXPAPAKQAPAK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAK@std@@YAXPAPAKQAPAK@Z PROC	; std::_Destroy_range<unsigned long * *>, COMDAT

; 969  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 970  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 971  :         for (; _First != _Last; ++_First) {
; 972  :             _Destroy_in_place(*_First);
; 973  :         }
; 974  :     }
; 975  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@PAPAK@std@@YAXPAPAKQAPAK@Z ENDP	; std::_Destroy_range<unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>, COMDAT

; 1874 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 1879 :     } else {
; 1880 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1881 :         for (; 0 < _Count; --_Count) {
; 1882 :             _Backout._Emplace_back();
; 1883 :         }
; 1884 : 
; 1885 :         return _Backout._Release();
; 1886 :     }
; 1887 : }

  00012	5d		 pop	 ebp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z ; std::_Zero_range<unsigned long * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z PROC ; std::uninitialized_copy<unsigned long * *,unsigned long * *>, COMDAT

; 1591 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1599 :     } else {
; 1600 :         _Uninitialized_backout<decltype(_UDest)> _Backout{_UDest};
; 1601 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1602 :             _Backout._Emplace_back(*_UFirst);
; 1603 :         }
; 1604 : 
; 1605 :         _UDest = _Backout._Release();
; 1606 :     }
; 1607 : 
; 1608 :     _Seek_wrapped(_Dest, _UDest);
; 1609 :     return _Dest;
; 1610 : }

  00003	5d		 pop	 ebp

; 1592 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1593 :     _Adl_verify_range(_First, _Last);
; 1594 :     auto _UFirst      = _Get_unwrapped(_First);
; 1595 :     const auto _ULast = _Get_unwrapped(_Last);
; 1596 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1597 :     if constexpr (_Ptr_copy_cat<decltype(_UFirst), decltype(_UDest)>::_Really_trivial) {
; 1598 :         _UDest = _Copy_memmove(_UFirst, _ULast, _UDest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ENDP ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@KPAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@KPAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@KPAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@KPAX@std@@@std@@YAXAAPAU?$_List_node@KPAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@KPAX@std@@@std@@YAXAAPAU?$_List_node@KPAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<unsigned long,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@KPAX@std@@@std@@YAXAAPAU?$_List_node@KPAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<unsigned long,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 64		 push	 100			; 00000064H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1084 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Obj$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	89 01		 mov	 DWORD PTR [ecx], eax
  0000d	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00003	6a 08		 push	 8
  00005	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000d	83 c4 08	 add	 esp, 8

; 999  :     // deallocate a plain pointer using an allocator
; 1000 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1001 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1002 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);
; 1003 :     } else {
; 1004 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1005 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1006 :     }
; 1007 : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@KPAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@KPAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@KPAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAK@std@@YAXAAPAK@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAK@std@@YAXAAPAK@Z PROC		; std::_Destroy_in_place<unsigned long *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAK@std@@YAXAAPAK@Z ENDP		; std::_Destroy_in_place<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1027 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1028 :     using _Ty = typename _Alloc::value_type;
; 1029 :     _Ptr->~_Ty();
; 1030 :     _Deallocate_plain(_Al, _Ptr);

  00000	e9 00 00 00 00	 jmp	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ??$_Emplace_back_internal@ABK@?$deque@KV?$allocator@K@std@@@std@@AAEXABK@Z
_TEXT	SEGMENT
tv641 = -8						; size = 4
__Newmap$1$ = -4					; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back_internal@ABK@?$deque@KV?$allocator@K@std@@@std@@AAEXABK@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::_Emplace_back_internal<unsigned long const &>, COMDAT
; _this$ = ecx

; 1113 :     void _Emplace_back_internal(_Tys&&... _Vals) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1114 :         _PUSH_BACK_BEGIN;

  0000b	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0000e	8b f1		 mov	 esi, ecx
  00010	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  00013	8b d3		 mov	 edx, ebx
  00015	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  00018	a8 03		 test	 al, 3
  0001a	0f 85 fb 00 00
	00		 jne	 $LN13@Emplace_ba
  00020	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00023	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00026	c1 e8 02	 shr	 eax, 2
  00029	3b d0		 cmp	 edx, eax
  0002b	0f 87 e8 00 00
	00		 ja	 $LN42@Emplace_ba

; 1429 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  00031	85 d2		 test	 edx, edx
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	0f 45 c2	 cmovne	 eax, edx
  0003b	0f 1f 44 00 00	 npad	 5
$LL6@Emplace_ba:

; 1430 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _DEQUEMAPSIZ) {

  00040	8b f0		 mov	 esi, eax
  00042	2b f2		 sub	 esi, edx
  00044	83 fe 01	 cmp	 esi, 1
  00047	72 05		 jb	 SHORT $LN8@Emplace_ba
  00049	83 f8 08	 cmp	 eax, 8
  0004c	73 13		 jae	 SHORT $LN7@Emplace_ba
$LN8@Emplace_ba:

; 1431 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1432 :             if (max_size() / _DEQUESIZ - _Newsize < _Newsize) {

  0004e	b9 ff ff ff 0f	 mov	 ecx, 268435455		; 0fffffffH
  00053	2b c8		 sub	 ecx, eax
  00055	3b c8		 cmp	 ecx, eax
  00057	0f 82 19 01 00
	00		 jb	 $LN37@Emplace_ba

; 1434 :             }
; 1435 : 
; 1436 :             _Newsize *= 2;

  0005d	03 c0		 add	 eax, eax

; 1437 :         }

  0005f	eb df		 jmp	 SHORT $LL6@Emplace_ba
$LN7@Emplace_ba:

; 1438 :         _Count = _Newsize - _Mapsize();
; 1439 : 
; 1440 :         size_type _Myboff = _Myoff() / _DEQUESIZ;

  00061	c1 eb 02	 shr	 ebx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00064	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00069	0f 87 02 01 00
	00		 ja	 $LN45@Emplace_ba

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0006f	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00078	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007b	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  00082	89 4d f8	 mov	 DWORD PTR tv641[ebp], ecx
  00085	03 c8		 add	 ecx, eax
  00087	51		 push	 ecx
  00088	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008b	89 45 fc	 mov	 DWORD PTR __Newmap$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  0008e	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]
  00091	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]
  00094	51		 push	 ecx
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
  0009b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 1445 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  000a1	50		 push	 eax
  000a2	3b de		 cmp	 ebx, esi
  000a4	77 1d		 ja	 SHORT $LN10@Emplace_ba

; 1446 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  000a6	8d 04 99	 lea	 eax, DWORD PTR [ecx+ebx*4]
  000a9	50		 push	 eax
  000aa	51		 push	 ecx
  000ab	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1447 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  000b0	8b ce		 mov	 ecx, esi
  000b2	2b cb		 sub	 ecx, ebx
  000b4	51		 push	 ecx
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>

; 1448 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

  000bb	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000be	83 c4 14	 add	 esp, 20			; 00000014H

; 1449 :         } else { // increment not greater than offset of initial block

  000c1	eb 24		 jmp	 SHORT $LN11@Emplace_ba
$LN10@Emplace_ba:

; 1450 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000c3	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000c6	50		 push	 eax
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1451 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000cd	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000d0	ff 75 fc	 push	 DWORD PTR __Newmap$1$[ebp]
  000d3	8b 45 f8	 mov	 eax, DWORD PTR tv641[ebp]
  000d6	03 c1		 add	 eax, ecx
  000d8	50		 push	 eax
  000d9	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
  000e2	83 c4 18	 add	 esp, 24			; 00000018H

; 1452 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000e5	8b de		 mov	 ebx, esi
$LN11@Emplace_ba:

; 1453 :         }
; 1454 : 
; 1455 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());
; 1456 :         if (_Map() != _Mapptr()) {

  000e7	53		 push	 ebx
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
  000ee	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000f1	83 c4 08	 add	 esp, 8
  000f4	85 c9		 test	 ecx, ecx
  000f6	74 10		 je	 SHORT $LN12@Emplace_ba
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f8	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000fb	c1 e0 02	 shl	 eax, 2
  000fe	50		 push	 eax
  000ff	51		 push	 ecx
  00100	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00105	83 c4 08	 add	 esp, 8
$LN12@Emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1460 :         _Map() = _Newmap; // point at new

  00108	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  0010b	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1461 :         _Mapsize() += _Count;

  0010e	01 77 08	 add	 DWORD PTR [edi+8], esi
  00111	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  00114	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  00117	eb 02		 jmp	 SHORT $LN13@Emplace_ba
$LN42@Emplace_ba:

; 1114 :         _PUSH_BACK_BEGIN;

  00119	8b d3		 mov	 edx, ebx
$LN13@Emplace_ba:
  0011b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0011e	8d 04 8d ff ff
	ff ff		 lea	 eax, DWORD PTR [ecx*4-1]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00125	49		 dec	 ecx

; 1114 :         _PUSH_BACK_BEGIN;

  00126	23 c2		 and	 eax, edx
  00128	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  0012b	03 f0		 add	 esi, eax

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0012d	8b c6		 mov	 eax, esi
  0012f	c1 e8 02	 shr	 eax, 2
  00132	23 c8		 and	 ecx, eax

; 1114 :         _PUSH_BACK_BEGIN;

  00134	8d 1c 8d 00 00
	00 00		 lea	 ebx, DWORD PTR [ecx*4]
  0013b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0013e	83 3c 0b 00	 cmp	 DWORD PTR [ebx+ecx], 0
  00142	75 13		 jne	 SHORT $LN3@Emplace_ba
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00144	6a 10		 push	 16			; 00000010H
  00146	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1114 :         _PUSH_BACK_BEGIN;

  0014b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0014e	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1114 :         _PUSH_BACK_BEGIN;

  00151	89 04 0b	 mov	 DWORD PTR [ebx+ecx], eax
  00154	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN3@Emplace_ba:

; 1115 :         _Alty_traits::construct(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _DEQUESIZ), _STD forward<_Tys>(_Vals)...);

  00157	8b 0c 0b	 mov	 ecx, DWORD PTR [ebx+ecx]
  0015a	83 e6 03	 and	 esi, 3
  0015d	8b 45 08	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax

; 1116 :         _PUSH_BACK_END;

  00165	ff 47 10	 inc	 DWORD PTR [edi+16]
  00168	5f		 pop	 edi
  00169	5e		 pop	 esi
  0016a	5b		 pop	 ebx

; 1117 :     }

  0016b	8b e5		 mov	 esp, ebp
  0016d	5d		 pop	 ebp
  0016e	c2 04 00	 ret	 4
$LN45@Emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00171	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1433 :                 _Xlen(); // result too long

  00176	8b cf		 mov	 ecx, edi
  00178	e8 00 00 00 00	 call	 ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
$LN43@Emplace_ba:
  0017d	cc		 int	 3
??$_Emplace_back_internal@ABK@?$deque@KV?$allocator@K@std@@@std@@AAEXABK@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::_Emplace_back_internal<unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_9CWindow@UI@@$B3AE
_TEXT	SEGMENT
??_9CWindow@UI@@$B3AE PROC				; UI::CWindow::`vcall'{4}', COMDAT
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 04	 jmp	 DWORD PTR [eax+4]
??_9CWindow@UI@@$B3AE ENDP				; UI::CWindow::`vcall'{4}'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 184  : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@

; 185  : 		}

  0000c	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN7@scalar
  00017	68 90 00 00 00	 push	 144			; 00000090H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z ENDP ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame, COMDAT
; _this$ = ecx

; 189  : 			((CSlotWindow *)m_pParent)->ReserveDestroyCoolTimeFinishEffect(m_dwSlotIndex);

  00000	ff b1 8c 00 00
	00		 push	 DWORD PTR [ecx+140]
  00006	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  00009	e8 00 00 00 00	 call	 ?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect

; 190  : 		}

  0000e	c3		 ret	 0
?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ ENDP ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ PROC	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect, COMDAT
; _this$ = ecx

; 184  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@

; 185  : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ ENDP	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z PROC		; UI::CSlotWindow::CCoverButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  0000c	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN10@scalar
  00017	68 20 01 00 00	 push	 288			; 00000120H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z ENDP		; UI::CSlotWindow::CCoverButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 157  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 158  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1b		 je	 SHORT $LN6@OnMouseRig

; 159  : 				return TRUE;
; 160  : 			m_pParent->OnMouseRightButtonDown();

  0000c	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00012	8b 01		 mov	 eax, DWORD PTR [ecx]
  00014	ff 50 64	 call	 DWORD PTR [eax+100]

; 161  : 			if (m_bRightButtonEnable)

  00017	83 be 1c 01 00
	00 00		 cmp	 DWORD PTR [esi+284], 0
  0001e	74 07		 je	 SHORT $LN6@OnMouseRig

; 162  : 				CButton::OnMouseLeftButtonUp();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonUp
$LN6@OnMouseRig:

; 163  : 			return TRUE;
; 164  : 		}

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 149  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 150  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 10		 je	 SHORT $LN6@OnMouseRig

; 151  : 				return TRUE;
; 152  : 			if (m_bRightButtonEnable)

  0000c	83 be 1c 01 00
	00 00		 cmp	 DWORD PTR [esi+284], 0
  00013	74 07		 je	 SHORT $LN6@OnMouseRig

; 153  : 				CButton::OnMouseLeftButtonDown();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDown
$LN6@OnMouseRig:

; 154  : 			return TRUE;
; 155  : 		}

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi
  00022	c3		 ret	 0
?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 133  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 134  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN6@OnMouseLef

; 135  : 				return TRUE;
; 136  : 			if (m_bLeftButtonEnable)

  0000c	83 be 18 01 00
	00 00		 cmp	 DWORD PTR [esi+280], 0
  00013	74 19		 je	 SHORT $LN3@OnMouseLef

; 137  : 			{
; 138  : 				CButton::OnMouseLeftButtonUp();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonUp

; 139  : 				m_pParent->OnMouseLeftButtonDown();

  0001c	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	ff 50 58	 call	 DWORD PTR [eax+88]

; 144  : 			}
; 145  : 			return TRUE;
; 146  : 		}

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
$LN3@OnMouseLef:

; 140  : 			}
; 141  : 			else
; 142  : 			{
; 143  : 				m_pParent->OnMouseLeftButtonUp();

  0002e	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	ff 50 5c	 call	 DWORD PTR [eax+92]
$LN6@OnMouseLef:

; 144  : 			}
; 145  : 			return TRUE;
; 146  : 		}

  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	5e		 pop	 esi
  0003f	c3		 ret	 0
?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 119  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 120  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 22		 je	 SHORT $LN6@OnMouseLef

; 121  : 				return TRUE;
; 122  : 			if (m_bLeftButtonEnable)

  0000c	83 be 18 01 00
	00 00		 cmp	 DWORD PTR [esi+280], 0
  00013	74 0e		 je	 SHORT $LN3@OnMouseLef

; 123  : 			{
; 124  : 				CButton::OnMouseLeftButtonDown();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDown

; 129  : 			}
; 130  : 			return TRUE;
; 131  : 		}

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi
  00022	c3		 ret	 0
$LN3@OnMouseLef:

; 125  : 			}
; 126  : 			else
; 127  : 			{
; 128  : 				m_pParent->OnMouseLeftButtonDown();

  00023	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	ff 50 58	 call	 DWORD PTR [eax+88]
$LN6@OnMouseLef:

; 129  : 			}
; 130  : 			return TRUE;
; 131  : 		}

  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	5e		 pop	 esi
  00034	c3		 ret	 0
?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CCoverButton::OnRender, COMDAT
; _this$ = ecx

; 111  : 		}

  00000	c2 00 00	 ret	 0
?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CCoverButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CCoverButton@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CCoverButton@CSlotWindow@UI@@UAE@XZ PROC		; UI::CSlotWindow::CCoverButton::~CCoverButton, COMDAT
; _this$ = ecx

; 28   : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CCoverButton@CSlotWindow@UI@@UAE@XZ ENDP		; UI::CSlotWindow::CCoverButton::~CCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z PROC		; UI::CSlotWindow::CSlotButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  0000c	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN7@scalar
  00017	68 18 01 00 00	 push	 280			; 00000118H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z ENDP		; UI::CSlotWindow::CSlotButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CSlotButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 69   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 70   : 			if (IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 15		 je	 SHORT $LN2@OnMouseOve

; 71   : 			{
; 72   : 				SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 73   : 				SetCurrentVisual(&m_upVisual);

  00013	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00019	8b ce		 mov	 ecx, esi
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@OnMouseOve:

; 74   : 			}
; 75   : 			m_pParent->OnOverOutItem();

  00021	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00027	5e		 pop	 esi
  00028	e9 00 00 00 00	 jmp	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CSlotButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CSlotButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 61   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 62   : 			if (IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 0e		 je	 SHORT $LN2@OnMouseOve

; 63   : 			{
; 64   : 				SetCurrentVisual(&m_overVisual);

  0000c	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  00012	8b ce		 mov	 ecx, esi
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@OnMouseOve:

; 65   : 			}
; 66   : 			m_pParent->OnOverInItem(m_dwSlotNumber);

  0001a	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  00020	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00026	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
  0002b	5e		 pop	 esi

; 67   : 		}

  0002c	c3		 ret	 0
?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CSlotButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 44   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 45   : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 45		 je	 SHORT $LN7@OnMouseLef

; 46   : 				return TRUE;
; 47   : 			if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 3a		 je	 SHORT $LN7@OnMouseLef

; 48   : 				return TRUE;
; 49   : 
; 50   : 			if (IsIn())

  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  0001e	84 c0		 test	 al, al
  00020	ba ac 00 00 00	 mov	 edx, 172		; 000000acH
  00025	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  0002a	0f 45 ca	 cmovne	 ecx, edx

; 51   : 				SetCurrentVisual(&m_overVisual);
; 52   : 			else
; 53   : 				SetCurrentVisual(&m_upVisual);
; 54   : 
; 55   : 			m_pParent->OnPressedSlotButton(m_dwSlotButtonType, m_dwSlotNumber);

  0002d	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00030	8b ce		 mov	 ecx, esi
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00038	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  0003e	6a 01		 push	 1
  00040	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  00046	ff b6 0c 01 00
	00		 push	 DWORD PTR [esi+268]
  0004c	e8 00 00 00 00	 call	 ?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z ; UI::CSlotWindow::OnPressedSlotButton
$LN7@OnMouseLef:

; 56   : 
; 57   : 			return TRUE;
; 58   : 		}

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5e		 pop	 esi
  00057	c3		 ret	 0
?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 32   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 33   : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 20		 je	 SHORT $LN5@OnMouseLef

; 34   : 				return TRUE;
; 35   : 			if (UI::CWindowManager::Instance().IsAttaching())

  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00017	85 c0		 test	 eax, eax
  00019	75 11		 jne	 SHORT $LN5@OnMouseLef

; 36   : 				return TRUE;
; 37   : 
; 38   : 			m_isPressed = TRUE;
; 39   : 			Down();

  0001b	8b ce		 mov	 ecx, esi
  0001d	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00027	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN5@OnMouseLef:

; 40   : 
; 41   : 			return TRUE;
; 42   : 		}

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
  00032	c3		 ret	 0
?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CSlotButton@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CSlotButton@CSlotWindow@UI@@UAE@XZ PROC		; UI::CSlotWindow::CSlotButton::~CSlotButton, COMDAT
; _this$ = ecx

; 28   : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CSlotButton@CSlotWindow@UI@@UAE@XZ ENDP		; UI::CSlotWindow::CSlotButton::~CSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSlotWindow@UI@@UAEPAXI@Z PROC			; UI::CSlotWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSlotWindow@UI@@UAE@XZ ; UI::CSlotWindow::~CSlotWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c8 00 00 00	 push	 200			; 000000c8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCSlotWindow@UI@@UAEPAXI@Z ENDP			; UI::CSlotWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1464 :     void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1009 :         return _Mysize() == 0;

  00003	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00006	85 c9		 test	 ecx, ecx

; 1465 :         _Orphan_all();
; 1466 : 
; 1467 :         _Alpty _Almap(_Getal());
; 1468 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN30@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1143 :         if (--_Mysize() == 0) {

  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00016	8b c8		 mov	 ecx, eax
  00018	85 c0		 test	 eax, eax
  0001a	75 f4		 jne	 SHORT $LL2@Tidy

; 1144 :             _Myoff() = 0;

  0001c	89 46 0c	 mov	 DWORD PTR [esi+12], eax
$LN30@Tidy:
  0001f	57		 push	 edi

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00020	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00023	85 ff		 test	 edi, edi
  00025	74 1a		 je	 SHORT $LN5@Tidy
$LL25@Tidy:

; 1473 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	4f		 dec	 edi
  0002b	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN7@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	6a 10		 push	 16			; 00000010H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
$LN7@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0003d	85 ff		 test	 edi, edi
  0003f	75 e6		 jne	 SHORT $LL25@Tidy
$LN5@Tidy:

; 1474 :                 _Getal().deallocate(_Map()[_Block], _DEQUESIZ);
; 1475 :                 _Destroy_in_place(_Map()[_Block]);
; 1476 :             }
; 1477 :         }
; 1478 : 
; 1479 :         if (_Map() != _Mapptr()) {

  00041	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00044	5f		 pop	 edi
  00045	85 c9		 test	 ecx, ecx
  00047	74 10		 je	 SHORT $LN32@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00049	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004c	c1 e0 02	 shl	 eax, 2
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00056	83 c4 08	 add	 esp, 8
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1485 :     }

  00059	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00060	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00067	5e		 pop	 esi
  00068	c3		 ret	 0
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1418 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 328  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnIsType@CSlotWindow@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CSlotWindow@UI@@MAEHK@Z PROC			; UI::CSlotWindow::OnIsType, COMDAT
; _this$ = ecx

; 1394 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1395 : 	if (CSlotWindow::Type() == dwType)

  00006	e8 00 00 00 00	 call	 ?Type@CSlotWindow@UI@@SAKXZ ; UI::CSlotWindow::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwType$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 0a		 jne	 SHORT $LN2@OnIsType

; 1396 : 		return TRUE;

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	5e		 pop	 esi

; 1399 : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@OnIsType:

; 1397 : 
; 1398 : 	return CWindow::OnIsType(dwType);

  0001c	52		 push	 edx
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?OnIsType@CWindow@UI@@UAEHK@Z ; UI::CWindow::OnIsType
  00024	5e		 pop	 esi

; 1399 : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?OnIsType@CSlotWindow@UI@@MAEHK@Z ENDP			; UI::CSlotWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnRefreshSlot, COMDAT
; _this$ = ecx

; 630  : }

  00000	c2 00 00	 ret	 0
?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnRefreshSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_pSlot$ = 8						; size = 4
?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC	; UI::CSlotWindow::ClearSlot, COMDAT
; _this$ = ecx

; 565  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR _pSlot$[ebp]

; 566  : 	pSlot->bActive = FALSE;
; 567  : 	pSlot->byxPlacedItemSize = 1;
; 568  : 	pSlot->byyPlacedItemSize = 1;
; 569  : 
; 570  : 	pSlot->isItem = FALSE;
; 571  : 	pSlot->dwState = 0;
; 572  : 	pSlot->fCoolTime = 0.0f;
; 573  : 	pSlot->fStartCoolTime = 0.0f;
; 574  : 	pSlot->dwCenterSlotNumber = 0xffffffff;
; 575  : 
; 576  : 	pSlot->dwItemIndex = 0;
; 577  : 	pSlot->bRenderBaseSlotImage = true;
; 578  : 
; 579  : 	if (pSlot->pInstance)

  00008	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  0000b	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
  00012	66 c7 47 30 01
	01		 mov	 WORD PTR [edi+48], 257	; 00000101H
  00018	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  0001f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00025	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
  0002c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
  00033	c7 47 08 ff ff
	ff ff		 mov	 DWORD PTR [edi+8], -1
  0003a	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00041	c6 47 3c 01	 mov	 BYTE PTR [edi+60], 1
  00045	85 c0		 test	 eax, eax
  00047	74 10		 je	 SHORT $LN5@ClearSlot

; 580  : 	{
; 581  : 		CGraphicImageInstance::Delete(pSlot->pInstance);

  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  0004f	83 c4 04	 add	 esp, 4

; 582  : 		pSlot->pInstance = NULL;

  00052	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0
$LN5@ClearSlot:

; 583  : 	}
; 584  : 	if (pSlot->pCoverButton)

  00059	8b 4f 40	 mov	 ecx, DWORD PTR [edi+64]
  0005c	85 c9		 test	 ecx, ecx
  0005e	74 05		 je	 SHORT $LN6@ClearSlot

; 585  : 	{
; 586  : 		pSlot->pCoverButton->Hide();

  00060	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN6@ClearSlot:

; 587  : 	}
; 588  : 	if (pSlot->pSlotButton)

  00065	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  00068	85 c9		 test	 ecx, ecx
  0006a	74 05		 je	 SHORT $LN7@ClearSlot

; 589  : 	{
; 590  : 		pSlot->pSlotButton->Hide();

  0006c	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN7@ClearSlot:

; 591  : 	}
; 592  : 	if (pSlot->pSignImage)

  00071	8b 4f 48	 mov	 ecx, DWORD PTR [edi+72]
  00074	85 c9		 test	 ecx, ecx
  00076	74 05		 je	 SHORT $LN8@ClearSlot

; 593  : 	{
; 594  :  		pSlot->pSignImage->Hide();

  00078	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN8@ClearSlot:

; 595  : 	}
; 596  : 	if (pSlot->pFinishCoolTimeEffect)

  0007d	8b 4f 4c	 mov	 ecx, DWORD PTR [edi+76]
  00080	85 c9		 test	 ecx, ecx
  00082	74 05		 je	 SHORT $LN9@ClearSlot

; 597  : 	{
; 598  : 		pSlot->pFinishCoolTimeEffect->Hide();

  00084	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN9@ClearSlot:

; 599  : 	}
; 600  : 
; 601  : #ifdef ENABLE_ACCE_SYSTEM
; 602  : 	for (auto& pEff : pSlot->pActiveSlotEffect)

  00089	8d 77 50	 lea	 esi, DWORD PTR [edi+80]
  0008c	83 c7 5c	 add	 edi, 92			; 0000005cH
  0008f	3b f7		 cmp	 esi, edi
  00091	74 12		 je	 SHORT $LN3@ClearSlot
$LL4@ClearSlot:

; 603  : 		if(pEff)

  00093	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00095	85 c9		 test	 ecx, ecx
  00097	74 05		 je	 SHORT $LN2@ClearSlot

; 604  : 			pEff->Hide();

  00099	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN2@ClearSlot:

; 599  : 	}
; 600  : 
; 601  : #ifdef ENABLE_ACCE_SYSTEM
; 602  : 	for (auto& pEff : pSlot->pActiveSlotEffect)

  0009e	83 c6 04	 add	 esi, 4
  000a1	3b f7		 cmp	 esi, edi
  000a3	75 ee		 jne	 SHORT $LL4@ClearSlot
$LN3@ClearSlot:
  000a5	5f		 pop	 edi

; 605  : #endif
; 606  : }

  000a6	5e		 pop	 esi
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP	; UI::CSlotWindow::ClearSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_ly$ = -16						; size = 4
_lx$ = -12						; size = 4
_iyLocal$1$ = -8					; size = 4
_ixLocal$1$ = -4					; size = 4
_ppSlot$ = 8						; size = 4
?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetPickedSlotPointer, COMDAT
; _this$ = ecx

; 1290 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1291 : 	long lx, ly;
; 1292 : 	CWindowManager::Instance().GetMousePosition(lx, ly);

  00009	8d 45 f0	 lea	 eax, DWORD PTR _ly$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00014	50		 push	 eax
  00015	8d 45 f4	 lea	 eax, DWORD PTR _lx$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 1294 : 	int ixLocal = lx - m_rect.left;

  0001e	8b 45 f4	 mov	 eax, DWORD PTR _lx$[ebp]
  00021	2b 46 34	 sub	 eax, DWORD PTR [esi+52]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00024	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1294 : 	int ixLocal = lx - m_rect.left;

  0002a	89 45 fc	 mov	 DWORD PTR _ixLocal$1$[ebp], eax

; 1295 : 	int iyLocal = ly - m_rect.top;

  0002d	8b 45 f0	 mov	 eax, DWORD PTR _ly$[ebp]
  00030	2b 46 38	 sub	 eax, DWORD PTR [esi+56]
  00033	89 45 f8	 mov	 DWORD PTR _iyLocal$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1297 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0003a	74 56		 je	 SHORT $LN48@GetPickedS
  0003c	0f 1f 40 00	 npad	 4
$LL4@GetPickedS:

; 1303 : 
; 1304 : 		if (rSlot.isItem)

  00040	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00044	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1301 : 		int ixCellSize = rSlot.ixCellSize;

  00047	8b 7a 28	 mov	 edi, DWORD PTR [edx+40]

; 1302 : 		int iyCellSize = rSlot.iyCellSize;

  0004a	8b 5a 2c	 mov	 ebx, DWORD PTR [edx+44]

; 1303 : 
; 1304 : 		if (rSlot.isItem)

  0004d	74 19		 je	 SHORT $LN14@GetPickedS

; 1305 : 		{
; 1306 : 			ixCellSize = max(rSlot.ixCellSize, int(rSlot.byxPlacedItemSize * ITEM_WIDTH));

  0004f	0f b6 72 30	 movzx	 esi, BYTE PTR [edx+48]
  00053	c1 e6 05	 shl	 esi, 5

; 1307 : 			iyCellSize = max(rSlot.iyCellSize, int(rSlot.byyPlacedItemSize * ITEM_HEIGHT));

  00056	3b fe		 cmp	 edi, esi
  00058	0f 4e fe	 cmovle	 edi, esi
  0005b	0f b6 72 31	 movzx	 esi, BYTE PTR [edx+49]
  0005f	c1 e6 05	 shl	 esi, 5
  00062	3b de		 cmp	 ebx, esi
  00064	7f 02		 jg	 SHORT $LN14@GetPickedS
  00066	8b de		 mov	 ebx, esi
$LN14@GetPickedS:

; 1308 : 		}
; 1309 : 
; 1310 : 		if (ixLocal >= rSlot.ixPosition)

  00068	8b 72 20	 mov	 esi, DWORD PTR [edx+32]
  0006b	39 75 fc	 cmp	 DWORD PTR _ixLocal$1$[ebp], esi
  0006e	7c 1c		 jl	 SHORT $LN2@GetPickedS

; 1311 : 		if (iyLocal >= rSlot.iyPosition)

  00070	8b 75 f8	 mov	 esi, DWORD PTR _iyLocal$1$[ebp]
  00073	3b 72 24	 cmp	 esi, DWORD PTR [edx+36]
  00076	8b 72 20	 mov	 esi, DWORD PTR [edx+32]
  00079	7c 11		 jl	 SHORT $LN2@GetPickedS

; 1312 : 		if (ixLocal <= rSlot.ixPosition + ixCellSize)

  0007b	03 f7		 add	 esi, edi
  0007d	39 75 fc	 cmp	 DWORD PTR _ixLocal$1$[ebp], esi
  00080	7f 0a		 jg	 SHORT $LN2@GetPickedS

; 1313 : 		if (iyLocal <= rSlot.iyPosition + iyCellSize)

  00082	8b 72 24	 mov	 esi, DWORD PTR [edx+36]
  00085	03 f3		 add	 esi, ebx
  00087	39 75 f8	 cmp	 DWORD PTR _iyLocal$1$[ebp], esi
  0008a	7e 11		 jle	 SHORT $LN44@GetPickedS
$LN2@GetPickedS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0008c	8b 00		 mov	 eax, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  0008e	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1297 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00090	75 ae		 jne	 SHORT $LL4@GetPickedS
$LN48@GetPickedS:
  00092	5f		 pop	 edi

; 1316 : 			return TRUE;
; 1317 : 		}
; 1318 : 	}
; 1319 : 
; 1320 : 	return FALSE;
; 1321 : }

  00093	5e		 pop	 esi
  00094	33 c0		 xor	 eax, eax
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
$LN44@GetPickedS:

; 1314 : 		{
; 1315 : 			*ppSlot = &rSlot;

  0009d	8b 45 08	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  000a0	5f		 pop	 edi

; 1316 : 			return TRUE;
; 1317 : 		}
; 1318 : 	}
; 1319 : 
; 1320 : 	return FALSE;
; 1321 : }

  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	89 10		 mov	 DWORD PTR [eax], edx
  000a5	b8 01 00 00 00	 mov	 eax, 1
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 04 00	 ret	 4
?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetPickedSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
_ppSlot$ = 8						; size = 4
?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetSelectedSlotPointer, COMDAT
; _this$ = ecx

; 1268 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1269 : 	long lx, ly;
; 1270 : 	GetMouseLocalPosition(lx, ly);

  00006	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	8b f1		 mov	 esi, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00018	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1272 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00022	74 2d		 je	 SHORT $LN43@GetSelecte
$LL4@GetSelecte:

; 1276 : 		if (lx >= rSlot.ixPosition)

  00024	8b 58 28	 mov	 ebx, DWORD PTR [eax+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00027	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1276 : 		if (lx >= rSlot.ixPosition)

  0002a	39 5d fc	 cmp	 DWORD PTR _lx$[ebp], ebx
  0002d	7c 1c		 jl	 SHORT $LN2@GetSelecte

; 1277 : 		if (ly >= rSlot.iyPosition)

  0002f	8b 7e 24	 mov	 edi, DWORD PTR [esi+36]
  00032	39 7d f8	 cmp	 DWORD PTR _ly$[ebp], edi
  00035	7c 14		 jl	 SHORT $LN2@GetSelecte

; 1278 : 		if (lx <= rSlot.ixPosition + rSlot.ixCellSize)

  00037	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  0003a	03 d3		 add	 edx, ebx
  0003c	39 55 fc	 cmp	 DWORD PTR _lx$[ebp], edx
  0003f	7f 0a		 jg	 SHORT $LN2@GetSelecte

; 1279 : 		if (ly <= rSlot.iyPosition + rSlot.iyCellSize)

  00041	8b 56 2c	 mov	 edx, DWORD PTR [esi+44]
  00044	03 d7		 add	 edx, edi
  00046	39 55 f8	 cmp	 DWORD PTR _ly$[ebp], edx
  00049	7e 11		 jle	 SHORT $LN39@GetSelecte
$LN2@GetSelecte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0004b	8b 00		 mov	 eax, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  0004d	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1272 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0004f	75 d3		 jne	 SHORT $LL4@GetSelecte
$LN43@GetSelecte:
  00051	5f		 pop	 edi

; 1283 : 		}
; 1284 : 	}
; 1285 : 
; 1286 : 	return FALSE;
; 1287 : }

  00052	5e		 pop	 esi
  00053	33 c0		 xor	 eax, eax
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN39@GetSelecte:

; 1280 : 		{
; 1281 : 			*ppSlot = &rSlot;

  0005c	8b 45 08	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  0005f	5f		 pop	 edi
  00060	89 30		 mov	 DWORD PTR [eax], esi

; 1282 : 			return TRUE;

  00062	b8 01 00 00 00	 mov	 eax, 1

; 1283 : 		}
; 1284 : 	}
; 1285 : 
; 1286 : 	return FALSE;
; 1287 : }

  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetSelectedSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_ppSlot$ = 12						; size = 4
?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetSlotPointer, COMDAT
; _this$ = ecx

; 1252 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 89 8c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1252 : {

  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1253 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 11		 je	 SHORT $LN3@GetSlotPoi
  00010	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
$LL4@GetSlotPoi:

; 1257 : 		if (dwIndex == rSlot.dwSlotNumber)

  00013	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00016	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1257 : 		if (dwIndex == rSlot.dwSlotNumber)

  00019	74 0d		 je	 SHORT $LN36@GetSlotPoi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0001b	8b 00		 mov	 eax, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  0001d	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1253 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0001f	75 f2		 jne	 SHORT $LL4@GetSlotPoi
$LN3@GetSlotPoi:

; 1261 : 		}
; 1262 : 	}
; 1263 : 
; 1264 : 	return FALSE;

  00021	33 c0		 xor	 eax, eax
  00023	5e		 pop	 esi

; 1265 : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
$LN36@GetSlotPoi:

; 1258 : 		{
; 1259 : 			*ppSlot = &rSlot;

  00028	8b 45 0c	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  0002b	5e		 pop	 esi
  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1260 : 			return TRUE;

  0002e	b8 01 00 00 00	 mov	 eax, 1

; 1265 : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUseSlot@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnUseSlot@CSlotWindow@UI@@IAEXXZ PROC			; UI::CSlotWindow::OnUseSlot, COMDAT
; _this$ = ecx

; 932  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 933  : 	TSlot * pSlot;
; 934  : 	if (GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00015	85 c0		 test	 eax, eax
  00017	74 28		 je	 SHORT $LN3@OnUseSlot

; 935  : 	if (pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00020	74 1f		 je	 SHORT $LN3@OnUseSlot

; 936  : 	{
; 937  : 		PyCallClassMemberFunc(m_poHandler, "OnUseSlot", Py_BuildValue("(i)", pSlot->dwSlotNumber));

  00022	ff 70 04	 push	 DWORD PTR [eax+4]
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00030	50		 push	 eax
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_09HJIBPFCA@OnUseSlot@
  00036	ff 76 5c	 push	 DWORD PTR [esi+92]
  00039	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@OnUseSlot:
  00041	5e		 pop	 esi

; 938  : 	}
; 939  : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?OnUseSlot@CSlotWindow@UI@@IAEXXZ ENDP			; UI::CSlotWindow::OnUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::OnUnselectItemSlot, COMDAT
; _this$ = ecx

; 928  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 929  : 	PyCallClassMemberFunc(m_poHandler, "OnUnselectItemSlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EONLJJMO@OnUnselectItemSlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 930  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::OnUnselectItemSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::OnUnselectEmptySlot, COMDAT
; _this$ = ecx

; 924  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 925  : 	PyCallClassMemberFunc(m_poHandler, "OnUnselectEmptySlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 926  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::OnUnselectEmptySlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z PROC		; UI::CSlotWindow::OnSelectItemSlot, COMDAT
; _this$ = ecx

; 916  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 917  : //	OnOverOutItem();
; 918  : 	PyCallClassMemberFunc(m_poHandler, "OnSelectItemSlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PFHJJJ@OnSelectItemSlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 919  : 
; 920  : 	if (UI::CWindowManager::Instance().IsAttaching())

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00028	83 c4 14	 add	 esp, 20			; 00000014H
  0002b	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00030	85 c0		 test	 eax, eax
  00032	74 07		 je	 SHORT $LN2@OnSelectIt

; 921  : 		OnOverOutItem();

  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
$LN2@OnSelectIt:
  0003b	5e		 pop	 esi

; 922  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ENDP		; UI::CSlotWindow::OnSelectItemSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z PROC		; UI::CSlotWindow::OnSelectEmptySlot, COMDAT
; _this$ = ecx

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 913  : 	PyCallClassMemberFunc(m_poHandler, "OnSelectEmptySlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JJECHKOF@OnSelectEmptySlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 914  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ENDP		; UI::CSlotWindow::OnSelectEmptySlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
tv371 = -8						; size = 4
_pSlot$1 = -4						; size = 4
?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ PROC	; UI::CSlotWindow::OnRenderSelectedSlot, COMDAT
; _this$ = ecx

; 1213 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	89 5d f4	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000d	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00013	8b 30		 mov	 esi, DWORD PTR [eax]
  00015	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1215 : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  00017	0f 84 c4 00 00
	00		 je	 $LN3@OnRenderSe
  0001d	57		 push	 edi
  0001e	66 90		 npad	 2
$LL4@OnRenderSe:

; 1216 : 	{
; 1217 : 		TSlot * pSlot;
; 1218 : 		if (!GetSlotPointer(*itor, &pSlot))

  00020	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$1[ebp]
  00023	8b cb		 mov	 ecx, ebx
  00025	50		 push	 eax
  00026	ff 76 08	 push	 DWORD PTR [esi+8]
  00029	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 9c 00 00
	00		 je	 $LN2@OnRenderSe

; 1219 : 			continue;
; 1220 : 
; 1221 : 		CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.5f);

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0003c	83 ec 10	 sub	 esp, 16			; 00000010H
  0003f	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00047	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0004f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00057	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0005e	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1222 : 		CPythonGraphic::Instance().RenderBar2d(m_rect.left + pSlot->ixPosition,

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$1[ebp]
  00066	83 ec 14	 sub	 esp, 20			; 00000014H
  00069	8b 53 38	 mov	 edx, DWORD PTR [ebx+56]
  0006c	8b 5b 34	 mov	 ebx, DWORD PTR [ebx+52]
  0006f	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00072	8b 79 24	 mov	 edi, DWORD PTR [ecx+36]
  00075	03 c2		 add	 eax, edx
  00077	03 c7		 add	 eax, edi
  00079	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00081	66 0f 6e c0	 movd	 xmm0, eax
  00085	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00088	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0008b	03 c3		 add	 eax, ebx
  0008d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00090	03 c1		 add	 eax, ecx
  00092	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00098	66 0f 6e c0	 movd	 xmm0, eax
  0009c	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  0009f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a2	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a8	66 0f 6e c0	 movd	 xmm0, eax
  000ac	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  000b5	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000be	66 0f 6e c0	 movd	 xmm0, eax
  000c2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000cf	8b 5d f4	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN2@OnRenderSe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  000d2	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  000d4	3b b3 84 00 00
	00		 cmp	 esi, DWORD PTR [ebx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1215 : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  000da	0f 85 40 ff ff
	ff		 jne	 $LL4@OnRenderSe
  000e0	5f		 pop	 edi
$LN3@OnRenderSe:
  000e1	5e		 pop	 esi

; 1223 : 												m_rect.top + pSlot->iyPosition,
; 1224 : 												m_rect.left + pSlot->ixPosition + pSlot->ixCellSize,
; 1225 : 												m_rect.top + pSlot->iyPosition + pSlot->iyCellSize);
; 1226 : 	}
; 1227 : }

  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ ENDP	; UI::CSlotWindow::OnRenderSelectedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ PROC	; UI::CSlotWindow::OnRenderPickingSlot, COMDAT
; _this$ = ecx

; 1197 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx

; 1198 : 	if (!UI::CWindowManager::Instance().IsAttaching())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00012	85 c0		 test	 eax, eax
  00014	0f 84 b0 00 00
	00		 je	 $LN1@OnRenderPi

; 1199 : 		return;
; 1200 : 
; 1201 : 	TSlot * pSlot;
; 1202 : 	if (!GetSelectedSlotPointer(&pSlot))

  0001a	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0001d	8b cb		 mov	 ecx, ebx
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSelectedSlotPointer
  00025	85 c0		 test	 eax, eax
  00027	0f 84 9d 00 00
	00		 je	 $LN1@OnRenderPi

; 1203 : 		return;
; 1204 : 
; 1205 : 	CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.5f);

  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00033	56		 push	 esi
  00034	57		 push	 edi
  00035	83 ec 10	 sub	 esp, 16			; 00000010H
  00038	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00040	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00048	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00050	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00057	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1206 : 	CPythonGraphic::Instance().RenderBar2d(m_rect.left + pSlot->ixPosition,

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0005f	83 ec 14	 sub	 esp, 20			; 00000014H
  00062	8b 73 38	 mov	 esi, DWORD PTR [ebx+56]
  00065	8b 5b 34	 mov	 ebx, DWORD PTR [ebx+52]
  00068	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0006b	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  0006e	8b 79 20	 mov	 edi, DWORD PTR [ecx+32]
  00071	03 c2		 add	 eax, edx
  00073	03 c6		 add	 eax, esi
  00075	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0007d	66 0f 6e c0	 movd	 xmm0, eax
  00081	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00084	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00087	03 c7		 add	 eax, edi
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0008f	03 c3		 add	 eax, ebx
  00091	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00097	66 0f 6e c0	 movd	 xmm0, eax
  0009b	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0009e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a1	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a7	66 0f 6e c0	 movd	 xmm0, eax
  000ab	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  000ae	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b7	66 0f 6e c0	 movd	 xmm0, eax
  000bb	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c3	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
$LN1@OnRenderPi:
  000ca	5b		 pop	 ebx

; 1207 : 											m_rect.top + pSlot->iyPosition,
; 1208 : 											m_rect.left + pSlot->ixPosition + pSlot->ixCellSize,
; 1209 : 											m_rect.top + pSlot->iyPosition + pSlot->iyCellSize);
; 1210 : }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ ENDP	; UI::CSlotWindow::OnRenderPickingSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::RenderLockedSlot, COMDAT
; _this$ = ecx

; 1230 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1231 : 	CPythonGraphic::Instance().SetDiffuseColor(0.0f, 0.0f, 0.0f, 0.5f);

  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00011	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  00014	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  0001c	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00024	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  0002c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00033	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00038	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003e	8b 30		 mov	 esi, DWORD PTR [eax]
  00040	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1232 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00042	0f 84 8f 00 00
	00		 je	 $LN3@RenderLock
  00048	53		 push	 ebx
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@RenderLock:

; 1233 : 	{
; 1234 : 		TSlot & rSlot = *itor;
; 1235 : 
; 1236 : 		if (!rSlot.isItem)

  00050	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  00054	74 72		 je	 SHORT $LN2@RenderLock

; 1237 : 			continue;
; 1238 : 
; 1239 : 		if (rSlot.dwState & SLOT_STATE_LOCK)

  00056	f6 46 08 01	 test	 BYTE PTR [esi+8], 1
  0005a	74 6c		 je	 SHORT $LN2@RenderLock

; 1240 : 		{
; 1241 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  0005c	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  0005f	83 ec 14	 sub	 esp, 20			; 00000014H
  00062	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00065	8b 56 2c	 mov	 edx, DWORD PTR [esi+44]
  00068	03 c1		 add	 eax, ecx
  0006a	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  0006d	03 c2		 add	 eax, edx
  0006f	8b 5e 28	 mov	 ebx, DWORD PTR [esi+40]
  00072	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0007a	66 0f 6e c0	 movd	 xmm0, eax
  0007e	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00081	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00084	03 c7		 add	 eax, edi
  00086	03 c3		 add	 eax, ebx
  00088	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0008e	66 0f 6e c0	 movd	 xmm0, eax
  00092	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0009b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009e	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a4	66 0f 6e c0	 movd	 xmm0, eax
  000a8	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  000ab	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ae	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b4	66 0f 6e c0	 movd	 xmm0, eax
  000b8	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c0	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000c5	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN2@RenderLock:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  000c8	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  000ca	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1232 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000d0	0f 85 7a ff ff
	ff		 jne	 $LL4@RenderLock
  000d6	5b		 pop	 ebx
$LN3@RenderLock:
  000d7	5f		 pop	 edi

; 1242 : 												   m_rect.top  + rSlot.iyPosition,
; 1243 : 												   m_rect.left + rSlot.ixPosition + rSlot.ixCellSize,
; 1244 : 												   m_rect.top  + rSlot.iyPosition + rSlot.iyCellSize);
; 1245 : 		}
; 1246 : 	}
; 1247 : }

  000d8	5e		 pop	 esi
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::RenderLockedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::RenderSlotBaseImage, COMDAT
; _this$ = ecx

; 1180 : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1181 : 	if (!m_pBaseImageInstance)

  00003	83 bf a0 00 00
	00 00		 cmp	 DWORD PTR [edi+160], 0
  0000a	74 63		 je	 SHORT $LN3@RenderSlot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000c	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  00012	56		 push	 esi

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00013	8b 30		 mov	 esi, DWORD PTR [eax]
  00015	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1184 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00017	74 55		 je	 SHORT $LN40@RenderSlot
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@RenderSlot:

; 1185 : 	{
; 1186 : 		TSlot & rSlot = *itor;
; 1187 : 
; 1188 : 		if (!rSlot.bRenderBaseSlotImage)

  00020	80 7e 44 00	 cmp	 BYTE PTR [esi+68], 0
  00024	74 3e		 je	 SHORT $LN2@RenderSlot

; 1189 : 			continue;
; 1190 : 
; 1191 : 		m_pBaseImageInstance->SetPosition(m_rect.left + rSlot.ixPosition, m_rect.top + rSlot.iyPosition);

  00026	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00029	83 ec 08	 sub	 esp, 8
  0002c	03 47 38	 add	 eax, DWORD PTR [edi+56]
  0002f	8b 8f a0 00 00
	00		 mov	 ecx, DWORD PTR [edi+160]
  00035	66 0f 6e c0	 movd	 xmm0, eax
  00039	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0003c	03 47 34	 add	 eax, DWORD PTR [edi+52]
  0003f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00042	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00048	66 0f 6e c0	 movd	 xmm0, eax
  0004c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1192 : 		m_pBaseImageInstance->Render();

  00059	8b 8f a0 00 00
	00		 mov	 ecx, DWORD PTR [edi+160]
  0005f	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@RenderSlot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00064	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00066	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1184 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0006c	75 b2		 jne	 SHORT $LL4@RenderSlot
$LN40@RenderSlot:
  0006e	5e		 pop	 esi
$LN3@RenderSlot:
  0006f	5f		 pop	 edi

; 1193 : 	}
; 1194 : }

  00070	c3		 ret	 0
?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::RenderSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOver@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?OnMouseOver@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 892  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 893  : //	if (UI::CWindowManager::Instance().IsCapture())
; 894  : //	if (!UI::CWindowManager::Instance().IsAttaching())
; 895  : //		return;
; 896  : 
; 897  : 	CWindow * pPointWindow = UI::CWindowManager::Instance().GetPointWindow();
; 898  : 	if (this == pPointWindow)

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	3b 70 64	 cmp	 esi, DWORD PTR [eax+100]
  0000f	75 23		 jne	 SHORT $LN4@OnMouseOve

; 899  : 	{
; 900  : 		TSlot * pSlot;
; 901  : 		if (GetPickedSlotPointer(&pSlot))

  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  00016	51		 push	 ecx
  00017	8b ce		 mov	 ecx, esi
  00019	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0001f	85 c0		 test	 eax, eax
  00021	74 11		 je	 SHORT $LN4@OnMouseOve

; 902  : 		{
; 903  : 			if (OnOverInItem(pSlot->dwSlotNumber))

  00023	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  00026	8b ce		 mov	 ecx, esi
  00028	ff 70 04	 push	 DWORD PTR [eax+4]
  0002b	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
  00030	85 c0		 test	 eax, eax
  00032	75 07		 jne	 SHORT $LN1@OnMouseOve
$LN4@OnMouseOve:

; 904  : 				return;
; 905  : 		}
; 906  : 	}
; 907  : 
; 908  : 	OnOverOutItem();

  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
$LN1@OnMouseOve:
  0003b	5e		 pop	 esi

; 909  : }

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?OnMouseOver@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 888  : 	OnOverOutItem();

  00000	e9 00 00 00 00	 jmp	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ PROC ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 881  : 	OnUseSlot();

  00000	e8 00 00 00 00	 call	 ?OnUseSlot@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::OnUseSlot

; 882  : 
; 883  : 	return TRUE;

  00005	b8 01 00 00 00	 mov	 eax, 1

; 884  : }

  0000a	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ ENDP ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 862  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 863  : 	TSlot * pSlot;
; 864  : 	if (!GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00015	85 c0		 test	 eax, eax
  00017	74 22		 je	 SHORT $LN6@OnMouseRig

; 865  : 		return TRUE;
; 866  : 
; 867  : 	if (pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	8b ce		 mov	 ecx, esi
  0001e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00022	ff 70 04	 push	 DWORD PTR [eax+4]
  00025	74 0f		 je	 SHORT $LN3@OnMouseRig

; 868  : 	{
; 869  : 		OnUnselectItemSlot(pSlot->dwSlotNumber);

  00027	e8 00 00 00 00	 call	 ?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnUnselectItemSlot

; 874  : 	}
; 875  : 
; 876  : 	return TRUE;
; 877  : }

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN3@OnMouseRig:

; 870  : 	}
; 871  : 	else
; 872  : 	{
; 873  : 		OnUnselectEmptySlot(pSlot->dwSlotNumber);

  00036	e8 00 00 00 00	 call	 ?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnUnselectEmptySlot
$LN6@OnMouseRig:

; 874  : 	}
; 875  : 
; 876  : 	return TRUE;
; 877  : }

  0003b	b8 01 00 00 00	 mov	 eax, 1
  00040	5e		 pop	 esi
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 828  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 829  : 	if (UI::CWindowManager::Instance().IsAttaching())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00012	85 c0		 test	 eax, eax
  00014	0f 84 8a 00 00
	00		 je	 $LN4@OnMouseLef

; 830  : 	if (UI::CWindowManager::Instance().IsDragging())

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00020	e8 00 00 00 00	 call	 ?IsDragging@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsDragging
  00025	85 c0		 test	 eax, eax
  00027	74 7b		 je	 SHORT $LN4@OnMouseLef

; 831  : 	if (IsIn())

  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00030	84 c0		 test	 al, al
  00032	74 70		 je	 SHORT $LN4@OnMouseLef

; 832  : 	{
; 833  : 		UI::CWindow * pWin = UI::CWindowManager::Instance().GetPointWindow();

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00039	8b 70 64	 mov	 esi, DWORD PTR [eax+100]

; 834  : 
; 835  : 		if (pWin)

  0003c	85 f6		 test	 esi, esi
  0003e	74 64		 je	 SHORT $LN4@OnMouseLef

; 836  : 		if (pWin->IsType(UI::CSlotWindow::Type()))

  00040	e8 00 00 00 00	 call	 ?Type@CSlotWindow@UI@@SAKXZ ; UI::CSlotWindow::Type
  00045	50		 push	 eax
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?IsType@CWindow@UI@@QAEHK@Z ; UI::CWindow::IsType
  0004d	85 c0		 test	 eax, eax
  0004f	74 53		 je	 SHORT $LN4@OnMouseLef

; 837  : 		{
; 838  : 			UI::CSlotWindow * pSlotWin = (UI::CSlotWindow *)pWin;
; 839  : 
; 840  : 			TSlot * pSlot;
; 841  : 			if (!pSlotWin->GetPickedSlotPointer(&pSlot))

  00051	8b 06		 mov	 eax, DWORD PTR [esi]
  00053	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  00056	51		 push	 ecx
  00057	8b ce		 mov	 ecx, esi
  00059	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0005f	85 c0		 test	 eax, eax
  00061	75 15		 jne	 SHORT $LN7@OnMouseLef

; 842  : 			{
; 843  : 				UI::CWindowManager::Instance().DeattachIcon();

  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00069	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon

; 844  : 				return TRUE;

  0006e	b8 01 00 00 00	 mov	 eax, 1
  00073	5e		 pop	 esi

; 859  : }

  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
$LN7@OnMouseLef:

; 845  : 			}
; 846  : 
; 847  : 			if (pSlot->isItem)

  00078	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  0007b	8b ce		 mov	 ecx, esi
  0007d	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00081	ff 70 04	 push	 DWORD PTR [eax+4]
  00084	74 0f		 je	 SHORT $LN8@OnMouseLef

; 848  : 				pSlotWin->OnSelectItemSlot(pSlot->dwSlotNumber);

  00086	e8 00 00 00 00	 call	 ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectItemSlot

; 851  : 
; 852  : 			return TRUE;

  0008b	b8 01 00 00 00	 mov	 eax, 1
  00090	5e		 pop	 esi

; 859  : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
$LN8@OnMouseLef:

; 849  : 			else
; 850  : 				pSlotWin->OnSelectEmptySlot(pSlot->dwSlotNumber);

  00095	e8 00 00 00 00	 call	 ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectEmptySlot

; 851  : 
; 852  : 			return TRUE;

  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	5e		 pop	 esi

; 859  : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
$LN4@OnMouseLef:

; 853  : 		}
; 854  : 
; 855  : 		return FALSE;
; 856  : 	}
; 857  : 
; 858  : 	return FALSE;

  000a4	33 c0		 xor	 eax, eax
  000a6	5e		 pop	 esi

; 859  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 807  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 808  : 	TSlot * pSlot;
; 809  : 	if (!GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00015	85 c0		 test	 eax, eax
  00017	75 15		 jne	 SHORT $LN2@OnMouseLef

; 810  : 	{
; 811  : 		UI::CWindowManager::Instance().DeattachIcon();

  00019	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0001f	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon

; 822  : 	}
; 823  : 
; 824  : 	return TRUE;
; 825  : }

  00024	b8 01 00 00 00	 mov	 eax, 1
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@OnMouseLef:

; 812  : 		return TRUE;
; 813  : 	}
; 814  : 
; 815  : 	if (pSlot->isItem && !(pSlot->dwState & SLOT_STATE_LOCK))

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00031	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00035	74 19		 je	 SHORT $LN3@OnMouseLef
  00037	f6 00 01	 test	 BYTE PTR [eax], 1
  0003a	75 14		 jne	 SHORT $LN3@OnMouseLef

; 816  : 	{
; 817  : 		OnSelectItemSlot(pSlot->dwSlotNumber);

  0003c	ff 70 04	 push	 DWORD PTR [eax+4]
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectItemSlot

; 822  : 	}
; 823  : 
; 824  : 	return TRUE;
; 825  : }

  00046	b8 01 00 00 00	 mov	 eax, 1
  0004b	5e		 pop	 esi
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN3@OnMouseLef:

; 818  : 	}
; 819  : 	else
; 820  : 	{
; 821  : 		OnSelectEmptySlot(pSlot->dwSlotNumber);

  00050	ff 70 04	 push	 DWORD PTR [eax+4]
  00053	8b ce		 mov	 ecx, esi
  00055	e8 00 00 00 00	 call	 ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectEmptySlot

; 822  : 	}
; 823  : 
; 824  : 	return TRUE;
; 825  : }

  0005a	b8 01 00 00 00	 mov	 eax, 1
  0005f	5e		 pop	 esi
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRender@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_iItemYSize$1$ = -28					; size = 4
tv1187 = -24						; size = 4
_iY$1$ = -24						; size = 4
_iX$1$ = -20						; size = 4
_itor$1$ = -16						; size = 4
_this$1$ = -12						; size = 4
_i$1$ = -8						; size = 4
tv1188 = -4						; size = 4
_fcurTime$1 = -4					; size = 4
?OnRender@CSlotWindow@UI@@MAEXXZ PROC			; UI::CSlotWindow::OnRender, COMDAT
; _this$ = ecx

; 1019 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d f4	 mov	 DWORD PTR _this$1$[ebp], edi

; 1020 : 	RenderSlotBaseImage();

  0000e	e8 00 00 00 00	 call	 ?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::RenderSlotBaseImage

; 1021 : 
; 1022 : 	switch (m_dwSlotStyle)

  00013	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  00019	83 e8 01	 sub	 eax, 1
  0001c	74 11		 je	 SHORT $LN10@OnRender
  0001e	83 e8 01	 sub	 eax, 1
  00021	75 16		 jne	 SHORT $LN2@OnRender

; 1026 : 			break;
; 1027 : 		case SLOT_STYLE_SELECT:
; 1028 : 			OnRenderSelectedSlot();

  00023	8b 07		 mov	 eax, DWORD PTR [edi]
  00025	8b cf		 mov	 ecx, edi
  00027	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  0002d	eb 0a		 jmp	 SHORT $LN2@OnRender
$LN10@OnRender:

; 1023 : 	{
; 1024 : 		case SLOT_STYLE_PICK_UP:
; 1025 : 			OnRenderPickingSlot();

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]
$LN2@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00039	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
  0003c	8b 33		 mov	 esi, DWORD PTR [ebx]

; 74   :         return _Ptr == _Right._Ptr;

  0003e	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00040	74 0e		 je	 SHORT $LN54@OnRender
$LL55@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  00042	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00045	e8 00 00 00 00	 call	 ??_9CWindow@UI@@$B3AE	; UI::CWindow::`vcall'{4}'
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  0004a	8b 36		 mov	 esi, DWORD PTR [esi]

; 74   :         return _Ptr == _Right._Ptr;

  0004c	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0004e	75 f2		 jne	 SHORT $LL55@OnRender
$LN54@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00050	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00056	8b 30		 mov	 esi, DWORD PTR [eax]
  00058	89 75 f0	 mov	 DWORD PTR _itor$1$[ebp], esi
  0005b	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1053 : 	for (itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0005d	0f 84 a0 03 00
	00		 je	 $LN5@OnRender
$LL6@OnRender:

; 1057 : 		if (rSlot.pSlotButton)

  00063	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00066	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1057 : 		if (rSlot.pSlotButton)

  00069	85 c9		 test	 ecx, ecx
  0006b	74 11		 je	 SHORT $LN12@OnRender

; 1058 : 		{
; 1059 : 			rSlot.pSlotButton->SetPosition(rSlot.ixPosition + 1, rSlot.iyPosition + 19);

  0006d	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00070	83 c0 13	 add	 eax, 19			; 00000013H
  00073	50		 push	 eax
  00074	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  00077	40		 inc	 eax
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition
$LN12@OnRender:

; 1060 : 		}
; 1061 : 		if (rSlot.pSignImage)

  0007e	8b 4b 48	 mov	 ecx, DWORD PTR [ebx+72]
  00081	85 c9		 test	 ecx, ecx
  00083	74 13		 je	 SHORT $LN13@OnRender

; 1062 : 		{
; 1063 : 			rSlot.pSignImage->SetPosition(rSlot.ixPosition - 7, rSlot.iyPosition + 10);

  00085	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00088	83 c0 0a	 add	 eax, 10			; 0000000aH
  0008b	50		 push	 eax
  0008c	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  0008f	83 e8 07	 sub	 eax, 7
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition
$LN13@OnRender:

; 1064 : 		}
; 1065 : 
; 1066 : 		if (rSlot.pInstance)

  00098	8b 4b 34	 mov	 ecx, DWORD PTR [ebx+52]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 35		 je	 SHORT $LN14@OnRender

; 1067 : 		{
; 1068 : 			rSlot.pInstance->SetPosition(m_rect.left + rSlot.ixPosition, m_rect.top + rSlot.iyPosition);

  0009f	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  000a2	83 ec 08	 sub	 esp, 8
  000a5	03 47 38	 add	 eax, DWORD PTR [edi+56]
  000a8	66 0f 6e c0	 movd	 xmm0, eax
  000ac	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  000af	03 47 34	 add	 eax, DWORD PTR [edi+52]
  000b2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b5	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000bb	66 0f 6e c0	 movd	 xmm0, eax
  000bf	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c7	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1069 : 			rSlot.pInstance->Render();

  000cc	8b 4b 34	 mov	 ecx, DWORD PTR [ebx+52]
  000cf	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN14@OnRender:

; 1070 : 		}
; 1071 : 
; 1072 : 		if (!rSlot.isItem)

  000d4	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0
  000d8	8b 03		 mov	 eax, DWORD PTR [ebx]
  000da	75 2b		 jne	 SHORT $LN15@OnRender

; 1073 : 		{
; 1074 : 			if (IS_SET(rSlot.dwState, SLOT_STATE_ALWAYS_RENDER_COVER))

  000dc	a8 08		 test	 al, 8
  000de	0f 84 0e 03 00
	00		 je	 $LN4@OnRender

; 1075 : 			{
; 1076 : 				rSlot.pCoverButton->Show();

  000e4	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000e7	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1077 : 				rSlot.pCoverButton->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  000ec	ff 73 24	 push	 DWORD PTR [ebx+36]
  000ef	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000f2	ff 73 20	 push	 DWORD PTR [ebx+32]
  000f5	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 115  : 			CButton::OnRender();

  000fa	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000fd	e8 00 00 00 00	 call	 ?OnRender@CButton@UI@@MAEXXZ ; UI::CButton::OnRender

; 1078 : 				rSlot.pCoverButton->RenderButton();
; 1079 : 			}
; 1080 : 
; 1081 : 			continue;

  00102	e9 eb 02 00 00	 jmp	 $LN4@OnRender
$LN15@OnRender:

; 1082 : 		}
; 1083 : 
; 1084 : 		if (IS_SET(rSlot.dwState, SLOT_STATE_DISABLE))

  00107	a8 04		 test	 al, 4
  00109	0f 84 9c 00 00
	00		 je	 $LN17@OnRender

; 1085 : 		{
; 1086 : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 0.0f, 0.0f, 0.3f);

  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00115	83 ec 10	 sub	 esp, 16			; 00000010H
  00118	c7 44 24 0c 9a
	99 99 3e	 mov	 DWORD PTR [esp+12], 1050253722 ; 3e99999aH
  00120	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00128	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  00130	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00137	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1087 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  0013c	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  0013f	83 ec 14	 sub	 esp, 20			; 00000014H
  00142	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00145	8b 53 24	 mov	 edx, DWORD PTR [ebx+36]
  00148	03 c1		 add	 eax, ecx
  0014a	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  0014d	03 c2		 add	 eax, edx
  0014f	8b 5b 20	 mov	 ebx, DWORD PTR [ebx+32]
  00152	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0015a	66 0f 6e c0	 movd	 xmm0, eax
  0015e	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00161	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00164	03 c7		 add	 eax, edi
  00166	03 c3		 add	 eax, ebx
  00168	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0016e	66 0f 6e c0	 movd	 xmm0, eax
  00172	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00175	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0017b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0017e	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00184	66 0f 6e c0	 movd	 xmm0, eax
  00188	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  0018b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0018e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00194	66 0f 6e c0	 movd	 xmm0, eax
  00198	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  001a5	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
  001a8	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
$LN17@OnRender:

; 1088 : 				m_rect.top + rSlot.iyPosition,
; 1089 : 				m_rect.left + rSlot.ixPosition + rSlot.ixCellSize,
; 1090 : 				m_rect.top + rSlot.iyPosition + rSlot.iyCellSize);
; 1091 : 		}
; 1092 : 
; 1093 : 		if (rSlot.fCoolTime != 0.0f)

  001ab	f3 0f 10 43 14	 movss	 xmm0, DWORD PTR [ebx+20]
  001b0	0f 57 c9	 xorps	 xmm1, xmm1
  001b3	0f 2e c1	 ucomiss xmm0, xmm1
  001b6	9f		 lahf
  001b7	f6 c4 44	 test	 ah, 68			; 00000044H
  001ba	0f 8b a9 00 00
	00		 jnp	 $LN19@OnRender

; 1094 : 		{
; 1095 : 			float fcurTime = CTimer::Instance().GetCurrentSecond();

  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  001c6	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  001cb	d9 5d fc	 fstp	 DWORD PTR _fcurTime$1[ebp]

; 1096 : 			float fPercentage = (fcurTime - rSlot.fStartCoolTime) / rSlot.fCoolTime;

  001ce	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]

; 1097 : 			CPythonGraphic::Instance().RenderCoolTimeBox(m_rect.left + rSlot.ixPosition + 16.0f, m_rect.top + rSlot.iyPosition + 16.0f, 16.0f, fPercentage);

  001d3	83 ec 10	 sub	 esp, 16			; 00000010H
  001d6	f3 0f 5c 43 18	 subss	 xmm0, DWORD PTR [ebx+24]
  001db	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  001de	03 47 38	 add	 eax, DWORD PTR [edi+56]
  001e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  001e7	f3 0f 5e 43 14	 divss	 xmm0, DWORD PTR [ebx+20]
  001ec	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  001f2	66 0f 6e c0	 movd	 xmm0, eax
  001f6	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  001f9	03 47 34	 add	 eax, DWORD PTR [edi+52]
  001fc	0f 5b c0	 cvtdq2ps xmm0, xmm0
  001ff	c7 44 24 08 00
	00 80 41	 mov	 DWORD PTR [esp+8], 1098907648 ; 41800000H
  00207	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  0020f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00215	66 0f 6e c0	 movd	 xmm0, eax
  00219	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0021c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  00224	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00229	e8 00 00 00 00	 call	 ?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMM@Z ; CPythonGraphic::RenderCoolTimeBox

; 1098 : 
; 1099 : 			if (fcurTime - rSlot.fStartCoolTime >= rSlot.fCoolTime)

  0022e	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]
  00233	f3 0f 5c 43 18	 subss	 xmm0, DWORD PTR [ebx+24]
  00238	f3 0f 10 4b 14	 movss	 xmm1, DWORD PTR [ebx+20]
  0023d	0f 2f c1	 comiss	 xmm0, xmm1
  00240	72 27		 jb	 SHORT $LN19@OnRender

; 1100 : 			{
; 1101 : 				if ((fcurTime - rSlot.fStartCoolTime) - rSlot.fCoolTime < 1.0f)

  00242	f3 0f 5c c1	 subss	 xmm0, xmm1
  00246	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0024e	0f 2f c8	 comiss	 xmm1, xmm0
  00251	76 08		 jbe	 SHORT $LN20@OnRender

; 1102 : 					__CreateFinishCoolTimeEffect(&rSlot);

  00253	53		 push	 ebx
  00254	8b cf		 mov	 ecx, edi
  00256	e8 00 00 00 00	 call	 ?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
$LN20@OnRender:

; 1103 : 
; 1104 : 				rSlot.fCoolTime = 0.0f;

  0025b	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 1105 : 				rSlot.fStartCoolTime = 0.0f;

  00262	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0
$LN19@OnRender:

; 1106 : 			}
; 1107 : 		}
; 1108 : 
; 1109 : 		if (rSlot.pCoverButton)

  00269	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  0026c	85 c9		 test	 ecx, ecx
  0026e	74 13		 je	 SHORT $LN21@OnRender

; 1110 : 		{
; 1111 : 			rSlot.pCoverButton->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  00270	ff 73 24	 push	 DWORD PTR [ebx+36]
  00273	ff 73 20	 push	 DWORD PTR [ebx+32]
  00276	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 115  : 			CButton::OnRender();

  0027b	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  0027e	e8 00 00 00 00	 call	 ?OnRender@CButton@UI@@MAEXXZ ; UI::CButton::OnRender
$LN21@OnRender:

; 1112 : 			rSlot.pCoverButton->RenderButton();
; 1113 : 		}
; 1114 : 
; 1115 : 		if (rSlot.pNumberLine)

  00283	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  00286	85 c9		 test	 ecx, ecx
  00288	74 35		 je	 SHORT $LN22@OnRender

; 1116 : 		{
; 1117 : 			int ix = rSlot.byxPlacedItemSize*ITEM_WIDTH + rSlot.ixPosition - 4;
; 1118 : 			int iy = rSlot.iyPosition + rSlot.byyPlacedItemSize*ITEM_HEIGHT - 12 + 2;

  0028a	0f b6 53 31	 movzx	 edx, BYTE PTR [ebx+49]
  0028e	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00291	c1 e2 05	 shl	 edx, 5
  00294	83 c2 f6	 add	 edx, -10		; fffffff6H
  00297	03 c2		 add	 eax, edx
  00299	0f b6 53 30	 movzx	 edx, BYTE PTR [ebx+48]

; 1119 : 			rSlot.pNumberLine->SetPosition(ix, iy);

  0029d	50		 push	 eax
  0029e	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  002a1	c1 e2 05	 shl	 edx, 5
  002a4	83 c2 fc	 add	 edx, -4			; fffffffcH
  002a7	03 c2		 add	 eax, edx
  002a9	50		 push	 eax
  002aa	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1120 : 			rSlot.pNumberLine->Update();

  002af	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  002b2	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1121 : 			rSlot.pNumberLine->Render();

  002b7	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  002ba	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN22@OnRender:

; 1122 : 		}
; 1123 : 
; 1124 : 		if (rSlot.pFinishCoolTimeEffect)

  002bf	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
  002c2	85 c9		 test	 ecx, ecx
  002c4	74 1b		 je	 SHORT $LN23@OnRender

; 1125 : 		{
; 1126 : 			rSlot.pFinishCoolTimeEffect->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  002c6	ff 73 24	 push	 DWORD PTR [ebx+36]
  002c9	ff 73 20	 push	 DWORD PTR [ebx+32]
  002cc	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1127 : 			rSlot.pFinishCoolTimeEffect->Update();

  002d1	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
  002d4	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1128 : 			rSlot.pFinishCoolTimeEffect->Render();

  002d9	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
  002dc	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN23@OnRender:

; 1129 : 		}
; 1130 : 
; 1131 : #ifdef ENABLE_ACCE_SYSTEM
; 1132 : 		{
; 1133 : 			int iX = m_rect.left + rSlot.ixPosition, iY = m_rect.top + rSlot.iyPosition, iItemYSize = rSlot.byyPlacedItemSize;

  002e1	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  002e4	8d 4b 50	 lea	 ecx, DWORD PTR [ebx+80]
  002e7	03 43 20	 add	 eax, DWORD PTR [ebx+32]
  002ea	89 45 ec	 mov	 DWORD PTR _iX$1$[ebp], eax
  002ed	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  002f0	03 43 24	 add	 eax, DWORD PTR [ebx+36]
  002f3	33 d2		 xor	 edx, edx
  002f5	8b 7d ec	 mov	 edi, DWORD PTR _iX$1$[ebp]
  002f8	89 45 e8	 mov	 DWORD PTR _iY$1$[ebp], eax
  002fb	0f b6 43 31	 movzx	 eax, BYTE PTR [ebx+49]
  002ff	8b 75 e8	 mov	 esi, DWORD PTR _iY$1$[ebp]
  00302	89 45 e4	 mov	 DWORD PTR _iItemYSize$1$[ebp], eax
  00305	89 55 f8	 mov	 DWORD PTR _i$1$[ebp], edx
  00308	89 4d fc	 mov	 DWORD PTR tv1188[ebp], ecx
  0030b	0f 1f 44 00 00	 npad	 5
$LL9@OnRender:

; 1135 : 			{
; 1136 : 				auto& pEff = rSlot.pActiveSlotEffect[i];
; 1137 : 				if ((pEff) && (iItemYSize == i + 1))

  00310	8b 01		 mov	 eax, DWORD PTR [ecx]
  00312	89 45 e8	 mov	 DWORD PTR tv1187[ebp], eax
  00315	85 c0		 test	 eax, eax
  00317	74 36		 je	 SHORT $LN7@OnRender
  00319	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0031c	39 45 e4	 cmp	 DWORD PTR _iItemYSize$1$[ebp], eax
  0031f	75 2e		 jne	 SHORT $LN7@OnRender

; 1138 : 				{
; 1139 : 					pEff->Show();

  00321	8b 4d e8	 mov	 ecx, DWORD PTR tv1187[ebp]
  00324	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1140 : 					pEff->SetPosition(iX, iY);

  00329	8b 4d fc	 mov	 ecx, DWORD PTR tv1188[ebp]
  0032c	56		 push	 esi
  0032d	57		 push	 edi
  0032e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00330	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1141 : 					pEff->Update();

  00335	8b 45 fc	 mov	 eax, DWORD PTR tv1188[ebp]
  00338	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033a	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1142 : 					pEff->Render();

  0033f	8b 45 fc	 mov	 eax, DWORD PTR tv1188[ebp]
  00342	8b 08		 mov	 ecx, DWORD PTR [eax]
  00344	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
  00349	8b 4d fc	 mov	 ecx, DWORD PTR tv1188[ebp]
  0034c	8b 55 f8	 mov	 edx, DWORD PTR _i$1$[ebp]
$LN7@OnRender:

; 1134 : 			for (int i = 0; i < 3; ++i)

  0034f	42		 inc	 edx
  00350	83 c1 04	 add	 ecx, 4
  00353	89 55 f8	 mov	 DWORD PTR _i$1$[ebp], edx
  00356	89 4d fc	 mov	 DWORD PTR tv1188[ebp], ecx
  00359	83 fa 03	 cmp	 edx, 3
  0035c	7c b2		 jl	 SHORT $LL9@OnRender

; 1143 : 				}
; 1144 : 			}
; 1145 : 		}
; 1146 : #endif
; 1147 : 
; 1148 : 		if (rSlot.bActive)

  0035e	83 7b 1c 00	 cmp	 DWORD PTR [ebx+28], 0
  00362	8b 75 f0	 mov	 esi, DWORD PTR _itor$1$[ebp]
  00365	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
  00368	0f 84 84 00 00
	00		 je	 $LN4@OnRender

; 1149 : 		{
; 1150 : 			if (m_pSlotActiveEffect && rSlot.byyPlacedItemSize==1)

  0036e	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  00374	85 c9		 test	 ecx, ecx
  00376	74 21		 je	 SHORT $LN139@OnRender
  00378	80 7b 31 01	 cmp	 BYTE PTR [ebx+49], 1
  0037c	75 1b		 jne	 SHORT $LN139@OnRender

; 1151 : 			{
; 1152 : 				int ix = m_rect.left + rSlot.ixPosition;
; 1153 : 				int iy = m_rect.top + rSlot.iyPosition;

  0037e	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00381	03 43 24	 add	 eax, DWORD PTR [ebx+36]

; 1154 : 				m_pSlotActiveEffect->SetPosition(ix, iy);

  00384	50		 push	 eax
  00385	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  00388	03 43 20	 add	 eax, DWORD PTR [ebx+32]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1155 : 				m_pSlotActiveEffect->Render();

  00391	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]

; 1156 : 			}

  00397	eb 54		 jmp	 SHORT $LN141@OnRender
$LN139@OnRender:

; 1157 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1158 : 			else if (m_pSlotActiveEffectSlot2 && rSlot.byyPlacedItemSize==2)

  00399	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  0039f	85 c9		 test	 ecx, ecx
  003a1	74 21		 je	 SHORT $LN140@OnRender
  003a3	80 7b 31 02	 cmp	 BYTE PTR [ebx+49], 2
  003a7	75 1b		 jne	 SHORT $LN140@OnRender

; 1159 : 			{
; 1160 : 				int ix = m_rect.left + rSlot.ixPosition;
; 1161 : 				int iy = m_rect.top + rSlot.iyPosition;

  003a9	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  003ac	03 43 24	 add	 eax, DWORD PTR [ebx+36]

; 1162 : 				m_pSlotActiveEffectSlot2->SetPosition(ix, iy);

  003af	50		 push	 eax
  003b0	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  003b3	03 43 20	 add	 eax, DWORD PTR [ebx+32]
  003b6	50		 push	 eax
  003b7	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1163 : 				m_pSlotActiveEffectSlot2->Render();

  003bc	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]

; 1164 : 			}

  003c2	eb 29		 jmp	 SHORT $LN141@OnRender
$LN140@OnRender:

; 1165 : 			else if (m_pSlotActiveEffectSlot3 && rSlot.byyPlacedItemSize==3)

  003c4	8b 8f b0 00 00
	00		 mov	 ecx, DWORD PTR [edi+176]
  003ca	85 c9		 test	 ecx, ecx
  003cc	74 24		 je	 SHORT $LN4@OnRender
  003ce	80 7b 31 03	 cmp	 BYTE PTR [ebx+49], 3
  003d2	75 1e		 jne	 SHORT $LN4@OnRender

; 1166 : 			{
; 1167 : 				int ix = m_rect.left + rSlot.ixPosition;
; 1168 : 				int iy = m_rect.top + rSlot.iyPosition;

  003d4	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  003d7	03 43 24	 add	 eax, DWORD PTR [ebx+36]

; 1169 : 				m_pSlotActiveEffectSlot3->SetPosition(ix, iy);

  003da	50		 push	 eax
  003db	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  003de	03 43 20	 add	 eax, DWORD PTR [ebx+32]
  003e1	50		 push	 eax
  003e2	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1170 : 				m_pSlotActiveEffectSlot3->Render();

  003e7	8b 8f b0 00 00
	00		 mov	 ecx, DWORD PTR [edi+176]
$LN141@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  003ed	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN4@OnRender:
  003f2	8b 36		 mov	 esi, DWORD PTR [esi]
  003f4	89 75 f0	 mov	 DWORD PTR _itor$1$[ebp], esi

; 199  :         return this->_Ptr == _Right._Ptr;

  003f7	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1053 : 	for (itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  003fd	0f 85 60 fc ff
	ff		 jne	 $LL6@OnRender
$LN5@OnRender:

; 1171 : 			}
; 1172 : #endif
; 1173 : 		}
; 1174 : 	}
; 1175 : 
; 1176 : 	RenderLockedSlot();

  00403	8b cf		 mov	 ecx, edi
  00405	e8 00 00 00 00	 call	 ?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::RenderLockedSlot
  0040a	5f		 pop	 edi
  0040b	5e		 pop	 esi
  0040c	5b		 pop	 ebx

; 1177 : }

  0040d	8b e5		 mov	 esp, ebp
  0040f	5d		 pop	 ebp
  00410	c3		 ret	 0
?OnRender@CSlotWindow@UI@@MAEXXZ ENDP			; UI::CSlotWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUpdate@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_itor$1$sroa$251$1$ = -12				; size = 4
_pSlot$2 = -8						; size = 4
_itor$1$sroa$252$1$ = -4				; size = 4
?OnUpdate@CSlotWindow@UI@@MAEXXZ PROC			; UI::CSlotWindow::OnUpdate, COMDAT
; _this$ = ecx

; 984  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  0000a	57		 push	 edi
  0000b	8b 8b b4 00 00
	00		 mov	 ecx, DWORD PTR [ebx+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00011	8b 93 c0 00 00
	00		 mov	 edx, DWORD PTR [ebx+192]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  00017	89 4d f4	 mov	 DWORD PTR _itor$1$sroa$251$1$[ebp], ecx
$LN89@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  0001a	8b 83 c4 00 00
	00		 mov	 eax, DWORD PTR [ebx+196]
  00020	03 83 c0 00 00
	00		 add	 eax, DWORD PTR [ebx+192]
  00026	89 55 fc	 mov	 DWORD PTR _itor$1$sroa$252$1$[ebp], edx

; 350  :         return this->_Myoff == _Right._Myoff;

  00029	3b d0		 cmp	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 985  : 	for (std::deque<DWORD>::iterator itor = m_ReserveDestroyEffectDeque.begin(); itor != m_ReserveDestroyEffectDeque.end(); ++itor)

  0002b	74 68		 je	 SHORT $LN3@OnUpdate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0002d	85 c9		 test	 ecx, ecx
  0002f	74 04		 je	 SHORT $LN64@OnUpdate
  00031	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00033	eb 02		 jmp	 SHORT $LN65@OnUpdate
$LN64@OnUpdate:
  00035	33 c9		 xor	 ecx, ecx
$LN65@OnUpdate:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 990  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00037	8d 45 f8	 lea	 eax, DWORD PTR _pSlot$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003a	c1 ea 02	 shr	 edx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 990  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0003d	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00041	48		 dec	 eax
  00042	23 d0		 and	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 990  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00044	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 268  :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00047	8b 4d fc	 mov	 ecx, DWORD PTR _itor$1$sroa$252$1$[ebp]
  0004a	83 e1 03	 and	 ecx, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 990  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0004d	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00050	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  00053	8b cb		 mov	 ecx, ebx
  00055	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0005a	85 c0		 test	 eax, eax
  0005c	74 2e		 je	 SHORT $LN2@OnUpdate

; 991  : 			continue;
; 992  : 
; 993  : 		__DestroyFinishCoolTimeEffect(pSlot);

  0005e	8b 75 f8	 mov	 esi, DWORD PTR _pSlot$2[ebp]
  00061	8b cb		 mov	 ecx, ebx
  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect

; 994  : 
; 995  : #ifdef ENABLE_ACCE_SYSTEM
; 996  : 		for (auto& pEff : pSlot->pActiveSlotEffect)

  00069	83 c6 50	 add	 esi, 80			; 00000050H
  0006c	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  0006f	3b f7		 cmp	 esi, edi
  00071	74 19		 je	 SHORT $LN2@OnUpdate
$LL7@OnUpdate:

; 997  : 		{
; 998  : 			if (pEff)

  00073	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00075	85 c9		 test	 ecx, ecx
  00077	74 0c		 je	 SHORT $LN5@OnUpdate

; 999  : 			{
; 1000 : 				delete pEff;

  00079	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007b	6a 01		 push	 1
  0007d	ff 10		 call	 DWORD PTR [eax]

; 1001 : 				pEff = NULL;

  0007f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN5@OnUpdate:

; 994  : 
; 995  : #ifdef ENABLE_ACCE_SYSTEM
; 996  : 		for (auto& pEff : pSlot->pActiveSlotEffect)

  00085	83 c6 04	 add	 esi, 4
  00088	3b f7		 cmp	 esi, edi
  0008a	75 e7		 jne	 SHORT $LL7@OnUpdate
$LN2@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  0008c	8b 55 fc	 mov	 edx, DWORD PTR _itor$1$sroa$252$1$[ebp]
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _itor$1$sroa$251$1$[ebp]
  00092	42		 inc	 edx
  00093	eb 85		 jmp	 SHORT $LN89@OnUpdate
$LN3@OnUpdate:

; 1325 :         _Tidy();

  00095	8d 8b b4 00 00
	00		 lea	 ecx, DWORD PTR [ebx+180]
  0009b	e8 00 00 00 00	 call	 ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1008 : 	if (m_pSlotActiveEffect)

  000a0	8b 8b a8 00 00
	00		 mov	 ecx, DWORD PTR [ebx+168]
  000a6	5f		 pop	 edi
  000a7	85 c9		 test	 ecx, ecx
  000a9	74 05		 je	 SHORT $LN10@OnUpdate

; 1009 : 		m_pSlotActiveEffect->Update();

  000ab	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN10@OnUpdate:

; 1010 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1011 : 	if (m_pSlotActiveEffectSlot2)

  000b0	8b 8b ac 00 00
	00		 mov	 ecx, DWORD PTR [ebx+172]
  000b6	85 c9		 test	 ecx, ecx
  000b8	74 05		 je	 SHORT $LN11@OnUpdate

; 1012 : 		m_pSlotActiveEffectSlot2->Update();

  000ba	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN11@OnUpdate:

; 1013 : 	if (m_pSlotActiveEffectSlot3)

  000bf	8b 8b b0 00 00
	00		 mov	 ecx, DWORD PTR [ebx+176]
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	85 c9		 test	 ecx, ecx
  000c9	74 05		 je	 SHORT $LN12@OnUpdate

; 1014 : 		m_pSlotActiveEffectSlot3->Update();

  000cb	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN12@OnUpdate:

; 1015 : #endif
; 1016 : }

  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
?OnUpdate@CSlotWindow@UI@@MAEXXZ ENDP			; UI::CSlotWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::__DestroyBaseImage, COMDAT
; _this$ = ecx

; 1542 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1543 : 	if (m_pBaseImageInstance)

  00003	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN2@DestroyBas

; 1544 : 	{
; 1545 : 		CGraphicImageInstance::Delete(m_pBaseImageInstance);

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00013	83 c4 04	 add	 esp, 4

; 1546 : 		m_pBaseImageInstance = NULL;

  00016	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
$LN2@DestroyBas:

; 1547 : 	}
; 1548 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::__DestroyBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_pSlot$ = 8						; size = 4
?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect, COMDAT
; _this$ = ecx

; 1533 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1534 : 	if (pSlot->pFinishCoolTimeEffect)

  00004	8b 75 08	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00007	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  0000a	85 c9		 test	 ecx, ecx
  0000c	74 0d		 je	 SHORT $LN2@DestroyFin

; 1535 : 	{
; 1536 : 		delete pSlot->pFinishCoolTimeEffect;

  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00010	6a 01		 push	 1
  00012	ff 10		 call	 DWORD PTR [eax]

; 1537 : 		pSlot->pFinishCoolTimeEffect = NULL;

  00014	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
$LN2@DestroyFin:
  0001b	5e		 pop	 esi

; 1538 : 	}
; 1539 : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__DestroySlotEnableEffect, COMDAT
; _this$ = ecx

; 1512 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1513 : 	if (m_pSlotActiveEffect)

  00003	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroySlo

; 1514 : 	{
; 1515 : 		delete m_pSlotActiveEffect;

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	6a 01		 push	 1
  00011	ff 10		 call	 DWORD PTR [eax]

; 1516 : 		m_pSlotActiveEffect = NULL;

  00013	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
$LN2@DestroySlo:

; 1517 : 	}
; 1518 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1519 : 	if (m_pSlotActiveEffectSlot2)

  0001d	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00023	85 c9		 test	 ecx, ecx
  00025	74 10		 je	 SHORT $LN3@DestroySlo

; 1520 : 	{
; 1521 : 		delete m_pSlotActiveEffectSlot2;

  00027	8b 01		 mov	 eax, DWORD PTR [ecx]
  00029	6a 01		 push	 1
  0002b	ff 10		 call	 DWORD PTR [eax]

; 1522 : 		m_pSlotActiveEffectSlot2 = NULL;

  0002d	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
$LN3@DestroySlo:

; 1523 : 	}
; 1524 : 	if (m_pSlotActiveEffectSlot3)

  00037	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 10		 je	 SHORT $LN4@DestroySlo

; 1525 : 	{
; 1526 : 		delete m_pSlotActiveEffectSlot3;

  00041	8b 01		 mov	 eax, DWORD PTR [ecx]
  00043	6a 01		 push	 1
  00045	ff 10		 call	 DWORD PTR [eax]

; 1527 : 		m_pSlotActiveEffectSlot3 = NULL;

  00047	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
$LN4@DestroySlo:

; 1528 : 	}
; 1529 : #endif
; 1530 : }

  00051	5e		 pop	 esi
  00052	c3		 ret	 0
?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__DestroySlotEnableEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__DestroyToggleSlotImage, COMDAT
; _this$ = ecx

; 1503 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1504 : 	if (m_pToggleSlotImage)

  00003	8b 8e a4 00 00
	00		 mov	 ecx, DWORD PTR [esi+164]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroyTog

; 1505 : 	{
; 1506 : 		delete m_pToggleSlotImage;

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	6a 01		 push	 1
  00011	ff 10		 call	 DWORD PTR [eax]

; 1507 : 		m_pToggleSlotImage = NULL;

  00013	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
$LN2@DestroyTog:

; 1508 : 	}
; 1509 : }

  0001d	5e		 pop	 esi
  0001e	c3		 ret	 0
?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__DestroyToggleSlotImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z PROC	; UI::CSlotWindow::__CreateBaseImage, COMDAT
; _this$ = ecx

; 1493 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 1494 : 	__DestroyBaseImage();

  00007	e8 00 00 00 00	 call	 ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyBaseImage

; 1495 : 
; 1496 : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  0000c	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00015	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0001a	8b f0		 mov	 esi, eax

; 1497 : 	m_pBaseImageInstance = CGraphicImageInstance::New();

  0001c	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 1498 : 	m_pBaseImageInstance->SetImagePointer(pImage);

  00021	56		 push	 esi
  00022	8b c8		 mov	 ecx, eax
  00024	89 87 a0 00 00
	00		 mov	 DWORD PTR [edi+160], eax
  0002a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1499 : 	m_pBaseImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0002f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00034	83 ec 10	 sub	 esp, 16			; 00000010H
  00037	8b 8f a0 00 00
	00		 mov	 ecx, DWORD PTR [edi+160]
  0003d	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00043	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00048	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0004e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00053	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00059	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi

; 1500 : }

  0006a	5d		 pop	 ebp
  0006b	c2 14 00	 ret	 20			; 00000014H
?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ENDP	; UI::CSlotWindow::__CreateBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_pSlot$ = 8						; size = 4
?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC ; UI::CSlotWindow::__CreateFinishCoolTimeEffect, COMDAT
; _this$ = ecx

; 1469 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b c1		 mov	 eax, ecx
  00028	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax

; 1470 : 	__DestroyFinishCoolTimeEffect(pSlot);

  0002b	8b 5d 08	 mov	 ebx, DWORD PTR _pSlot$[ebp]
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect

; 1471 : 
; 1472 : 	CAniImageBox * pFinishCoolTimeEffect = new CCoolTimeFinishEffect(this, pSlot->dwSlotNumber);

  00034	68 90 00 00 00	 push	 144			; 00000090H
  00039	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003e	8b f8		 mov	 edi, eax
  00040	83 c4 04	 add	 esp, 4
  00043	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 ff		 test	 edi, edi
  0004f	74 20		 je	 SHORT $LN3@CreateFini
  00051	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 178  : 		CCoolTimeFinishEffect(CSlotWindow * pParent, DWORD dwSlotIndex) : CAniImageBox(NULL)

  00054	8b cf		 mov	 ecx, edi
  00056	6a 00		 push	 0
  00058	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox

; 179  : 		{
; 180  : 			m_pParent = pParent;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00060	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
  00066	89 47 60	 mov	 DWORD PTR [edi+96], eax

; 181  : 			m_dwSlotIndex = dwSlotIndex;

  00069	89 b7 8c 00 00
	00		 mov	 DWORD PTR [edi+140], esi

; 1471 : 
; 1472 : 	CAniImageBox * pFinishCoolTimeEffect = new CCoolTimeFinishEffect(this, pSlot->dwSlotNumber);

  0006f	eb 02		 jmp	 SHORT $LN4@CreateFini
$LN3@CreateFini:
  00071	33 ff		 xor	 edi, edi
$LN4@CreateFini:

; 1473 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/00.sub");

  00073	83 ec 10	 sub	 esp, 16			; 00000010H
  00076	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007d	8b cf		 mov	 ecx, edi
  0007f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00087	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0008f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00097	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@
  000a3	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1474 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/01.sub");

  000a8	83 ec 10	 sub	 esp, 16			; 00000010H
  000ab	8b cf		 mov	 ecx, edi
  000ad	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000b5	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000bd	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000c5	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@
  000d1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1475 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/02.sub");

  000d6	83 ec 10	 sub	 esp, 16			; 00000010H
  000d9	8b cf		 mov	 ecx, edi
  000db	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000e3	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000eb	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000f3	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@
  000ff	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1476 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/03.sub");

  00104	83 ec 10	 sub	 esp, 16			; 00000010H
  00107	8b cf		 mov	 ecx, edi
  00109	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00111	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00119	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00121	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@
  0012d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1477 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/04.sub");

  00132	83 ec 10	 sub	 esp, 16			; 00000010H
  00135	8b cf		 mov	 ecx, edi
  00137	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0013f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00147	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0014f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@
  0015b	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1478 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/05.sub");

  00160	83 ec 10	 sub	 esp, 16			; 00000010H
  00163	8b cf		 mov	 ecx, edi
  00165	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0016d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00175	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0017d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@
  00189	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1479 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/06.sub");

  0018e	83 ec 10	 sub	 esp, 16			; 00000010H
  00191	8b cf		 mov	 ecx, edi
  00193	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0019b	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001a3	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001ab	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@
  001b7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1480 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/07.sub");

  001bc	83 ec 10	 sub	 esp, 16			; 00000010H
  001bf	8b cf		 mov	 ecx, edi
  001c1	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001c9	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001d1	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001d9	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@
  001e5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1481 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/08.sub");

  001ea	83 ec 10	 sub	 esp, 16			; 00000010H
  001ed	8b cf		 mov	 ecx, edi
  001ef	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001f7	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001ff	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00207	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@
  00213	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1482 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/09.sub");

  00218	83 ec 10	 sub	 esp, 16			; 00000010H
  0021b	8b cf		 mov	 ecx, edi
  0021d	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00225	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0022d	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00235	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@
  00241	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1483 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/10.sub");

  00246	83 ec 10	 sub	 esp, 16			; 00000010H
  00249	8b cf		 mov	 ecx, edi
  0024b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00253	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0025b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00263	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@
  0026f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1484 : 	pFinishCoolTimeEffect->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  00274	6a 01		 push	 1
  00276	8b cf		 mov	 ecx, edi
  00278	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1485 : 	pFinishCoolTimeEffect->ResetFrame();

  0027d	8b cf		 mov	 ecx, edi
  0027f	e8 00 00 00 00	 call	 ?ResetFrame@CAniImageBox@UI@@QAEXXZ ; UI::CAniImageBox::ResetFrame

; 1486 : 	pFinishCoolTimeEffect->SetDelay(2);

  00284	6a 02		 push	 2
  00286	8b cf		 mov	 ecx, edi
  00288	e8 00 00 00 00	 call	 ?SetDelay@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetDelay

; 1487 : 	pFinishCoolTimeEffect->Show();

  0028d	8b cf		 mov	 ecx, edi
  0028f	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1488 : 
; 1489 : 	pSlot->pFinishCoolTimeEffect = pFinishCoolTimeEffect;

  00294	89 7b 4c	 mov	 DWORD PTR [ebx+76], edi

; 1490 : }

  00297	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0029a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002a1	59		 pop	 ecx
  002a2	5f		 pop	 edi
  002a3	5e		 pop	 esi
  002a4	5b		 pop	 ebx
  002a5	8b e5		 mov	 esp, ebp
  002a7	5d		 pop	 ebp
  002a8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z$0:
  00000	68 90 00 00 00	 push	 144			; 00000090H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__CreateSlotEnableEffect, COMDAT
; _this$ = ecx

; 1411 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 1412 : 	__DestroySlotEnableEffect();

  00026	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1413 : 
; 1414 : 	m_pSlotActiveEffect = new CAniImageBox(NULL);

  0002b	68 8c 00 00 00	 push	 140			; 0000008cH
  00030	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	85 c0		 test	 eax, eax
  00044	74 0b		 je	 SHORT $LN3@CreateSlot
  00046	6a 00		 push	 0
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  0004f	eb 02		 jmp	 SHORT $LN4@CreateSlot
$LN3@CreateSlot:
  00051	33 c0		 xor	 eax, eax
$LN4@CreateSlot:

; 1415 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/00.sub");

  00053	83 ec 10	 sub	 esp, 16			; 00000010H
  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8b c8		 mov	 ecx, eax
  0005f	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  00065	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0006d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00075	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0007d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  00089	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1416 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/01.sub");

  0008e	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00094	83 ec 10	 sub	 esp, 16			; 00000010H
  00097	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0009f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000a7	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000af	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@
  000bb	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1417 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/02.sub");

  000c0	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000c6	83 ec 10	 sub	 esp, 16			; 00000010H
  000c9	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000d1	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000d9	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  000e1	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@
  000ed	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1418 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/03.sub");

  000f2	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000f8	83 ec 10	 sub	 esp, 16			; 00000010H
  000fb	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00103	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0010b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00113	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@
  0011f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1419 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/04.sub");

  00124	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  0012a	83 ec 10	 sub	 esp, 16			; 00000010H
  0012d	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00135	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0013d	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00145	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@
  00151	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1420 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/05.sub");

  00156	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  0015c	83 ec 10	 sub	 esp, 16			; 00000010H
  0015f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00167	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0016f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00177	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@
  00183	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1421 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/06.sub");

  00188	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  0018e	83 ec 10	 sub	 esp, 16			; 00000010H
  00191	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00199	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001a1	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001a9	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001b0	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@
  001b5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1422 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/07.sub");

  001ba	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  001c0	83 ec 10	 sub	 esp, 16			; 00000010H
  001c3	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001cb	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  001d3	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  001db	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@
  001e7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1423 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/08.sub");

  001ec	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  001f2	83 ec 10	 sub	 esp, 16			; 00000010H
  001f5	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001fd	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00205	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0020d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00214	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@
  00219	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1424 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/09.sub");

  0021e	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00224	83 ec 10	 sub	 esp, 16			; 00000010H
  00227	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0022f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00237	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0023f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@
  0024b	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1425 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/10.sub");

  00250	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00256	83 ec 10	 sub	 esp, 16			; 00000010H
  00259	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00261	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00269	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00271	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00278	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@
  0027d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1426 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/11.sub");

  00282	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00288	83 ec 10	 sub	 esp, 16			; 00000010H
  0028b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00293	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0029b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  002a3	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  002aa	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@
  002af	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1427 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/12.sub");

  002b4	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  002ba	83 ec 10	 sub	 esp, 16			; 00000010H
  002bd	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  002c5	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  002cd	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  002d5	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  002dc	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@
  002e1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1428 : 	m_pSlotActiveEffect->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  002e6	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  002ec	6a 01		 push	 1
  002ee	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1429 : 	m_pSlotActiveEffect->Show();

  002f3	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  002f9	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1430 : 
; 1431 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1432 : 	m_pSlotActiveEffectSlot2 = new CAniImageBox(NULL);

  002fe	68 8c 00 00 00	 push	 140			; 0000008cH
  00303	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00308	83 c4 04	 add	 esp, 4
  0030b	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  0030e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00315	85 c0		 test	 eax, eax
  00317	74 0b		 je	 SHORT $LN5@CreateSlot
  00319	6a 00		 push	 0
  0031b	8b c8		 mov	 ecx, eax
  0031d	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  00322	eb 02		 jmp	 SHORT $LN6@CreateSlot
$LN5@CreateSlot:
  00324	33 c0		 xor	 eax, eax
$LN6@CreateSlot:

; 1433 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/00.sub");

  00326	83 ec 10	 sub	 esp, 16			; 00000010H
  00329	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00330	8b c8		 mov	 ecx, eax
  00332	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  00338	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00340	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00348	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00350	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00357	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@
  0035c	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1434 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/01.sub");

  00361	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00367	83 ec 10	 sub	 esp, 16			; 00000010H
  0036a	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00372	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0037a	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00382	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00389	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  0038e	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1435 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/02.sub");

  00393	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00399	83 ec 10	 sub	 esp, 16			; 00000010H
  0039c	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  003a4	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  003ac	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  003b4	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  003bb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@
  003c0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1436 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/03.sub");

  003c5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  003cb	83 ec 10	 sub	 esp, 16			; 00000010H
  003ce	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  003d6	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  003de	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  003e6	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@
  003f2	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1437 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/04.sub");

  003f7	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  003fd	83 ec 10	 sub	 esp, 16			; 00000010H
  00400	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00408	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00410	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00418	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@
  00424	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1438 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/05.sub");

  00429	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0042f	83 ec 10	 sub	 esp, 16			; 00000010H
  00432	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0043a	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00442	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0044a	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@
  00456	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1439 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/06.sub");

  0045b	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00461	83 ec 10	 sub	 esp, 16			; 00000010H
  00464	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0046c	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00474	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0047c	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00483	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@
  00488	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1440 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/07.sub");

  0048d	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00493	83 ec 10	 sub	 esp, 16			; 00000010H
  00496	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0049e	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  004a6	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  004ae	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  004b5	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@
  004ba	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1441 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/08.sub");

  004bf	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  004c5	83 ec 10	 sub	 esp, 16			; 00000010H
  004c8	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  004d0	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  004d8	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  004e0	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  004e7	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@
  004ec	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1442 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/09.sub");

  004f1	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  004f7	83 ec 10	 sub	 esp, 16			; 00000010H
  004fa	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00502	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0050a	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00512	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00519	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@
  0051e	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1443 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/10.sub");

  00523	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00529	83 ec 10	 sub	 esp, 16			; 00000010H
  0052c	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00534	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0053c	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00544	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0054b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@
  00550	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1444 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/11.sub");

  00555	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0055b	83 ec 10	 sub	 esp, 16			; 00000010H
  0055e	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00566	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0056e	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00576	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0057d	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@
  00582	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1445 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/12.sub");

  00587	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0058d	83 ec 10	 sub	 esp, 16			; 00000010H
  00590	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00598	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  005a0	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  005a8	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  005af	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@
  005b4	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1446 : 	m_pSlotActiveEffectSlot2->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  005b9	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  005bf	6a 01		 push	 1
  005c1	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1447 : 	m_pSlotActiveEffectSlot2->Show();

  005c6	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  005cc	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1448 : 
; 1449 : 	m_pSlotActiveEffectSlot3 = new CAniImageBox(NULL);

  005d1	68 8c 00 00 00	 push	 140			; 0000008cH
  005d6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  005db	83 c4 04	 add	 esp, 4
  005de	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  005e1	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  005e8	85 c0		 test	 eax, eax
  005ea	74 0b		 je	 SHORT $LN7@CreateSlot
  005ec	6a 00		 push	 0
  005ee	8b c8		 mov	 ecx, eax
  005f0	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  005f5	eb 02		 jmp	 SHORT $LN8@CreateSlot
$LN7@CreateSlot:
  005f7	33 c0		 xor	 eax, eax
$LN8@CreateSlot:

; 1450 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/00.sub");

  005f9	83 ec 10	 sub	 esp, 16			; 00000010H
  005fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00603	8b c8		 mov	 ecx, eax
  00605	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  0060b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00613	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0061b	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00623	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0062a	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@
  0062f	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1451 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/01.sub");

  00634	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0063a	83 ec 10	 sub	 esp, 16			; 00000010H
  0063d	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00645	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0064d	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00655	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0065c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@
  00661	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1452 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/02.sub");

  00666	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0066c	83 ec 10	 sub	 esp, 16			; 00000010H
  0066f	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00677	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0067f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00687	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0068e	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@
  00693	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1453 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/03.sub");

  00698	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0069e	83 ec 10	 sub	 esp, 16			; 00000010H
  006a1	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  006a9	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  006b1	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  006b9	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  006c0	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@
  006c5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1454 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/04.sub");

  006ca	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  006d0	83 ec 10	 sub	 esp, 16			; 00000010H
  006d3	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  006db	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  006e3	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  006eb	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  006f2	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  006f7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1455 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/05.sub");

  006fc	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00702	83 ec 10	 sub	 esp, 16			; 00000010H
  00705	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0070d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00715	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0071d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00724	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@
  00729	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1456 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/06.sub");

  0072e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00734	83 ec 10	 sub	 esp, 16			; 00000010H
  00737	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0073f	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00747	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0074f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00756	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@
  0075b	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1457 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/07.sub");

  00760	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00766	83 ec 10	 sub	 esp, 16			; 00000010H
  00769	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00771	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00779	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00781	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00788	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@
  0078d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1458 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/08.sub");

  00792	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00798	83 ec 10	 sub	 esp, 16			; 00000010H
  0079b	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  007a3	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  007ab	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  007b3	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  007ba	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@
  007bf	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1459 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/09.sub");

  007c4	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  007ca	83 ec 10	 sub	 esp, 16			; 00000010H
  007cd	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  007d5	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  007dd	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  007e5	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  007ec	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@
  007f1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1460 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/10.sub");

  007f6	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  007fc	83 ec 10	 sub	 esp, 16			; 00000010H
  007ff	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00807	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0080f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00817	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0081e	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@
  00823	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1461 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/11.sub");

  00828	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0082e	83 ec 10	 sub	 esp, 16			; 00000010H
  00831	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00839	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00841	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00849	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00850	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@
  00855	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1462 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/12.sub");

  0085a	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00860	83 ec 10	 sub	 esp, 16			; 00000010H
  00863	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0086b	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00873	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0087b	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00882	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@
  00887	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage

; 1463 : 	m_pSlotActiveEffectSlot3->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  0088c	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00892	6a 01		 push	 1
  00894	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1464 : 	m_pSlotActiveEffectSlot3->Show();

  00899	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0089f	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1465 : #endif
; 1466 : }

  008a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  008ae	59		 pop	 ecx
  008af	5e		 pop	 esi
  008b0	8b e5		 mov	 esp, ebp
  008b2	5d		 pop	 ebp
  008b3	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$0:
  00000	68 8c 00 00 00	 push	 140			; 0000008cH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$1:
  00012	68 8c 00 00 00	 push	 140			; 0000008cH
  00017	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00020	83 c4 08	 add	 esp, 8
  00023	c3		 ret	 0
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$2:
  00024	68 8c 00 00 00	 push	 140			; 0000008cH
  00029	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	c3		 ret	 0
  00036	cc		 int	 3
  00037	cc		 int	 3
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
__ehhandler$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ:
  0003b	90		 npad	 1
  0003c	90		 npad	 1
  0003d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00041	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00044	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
  00053	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__CreateSlotEnableEffect
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__CreateToggleSlotImage, COMDAT
; _this$ = ecx

; 1402 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 1403 : 	__DestroyToggleSlotImage();

  00026	e8 00 00 00 00	 call	 ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage

; 1404 : 
; 1405 : 	m_pToggleSlotImage = new CImageBox(NULL);

  0002b	68 80 00 00 00	 push	 128			; 00000080H
  00030	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	85 c0		 test	 eax, eax
  00044	74 0b		 je	 SHORT $LN3@CreateTogg
  00046	6a 00		 push	 0
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  0004f	eb 02		 jmp	 SHORT $LN4@CreateTogg
$LN3@CreateTogg:
  00051	33 c0		 xor	 eax, eax
$LN4@CreateTogg:

; 1406 : 	m_pToggleSlotImage->LoadImage("d:/ymir work/ui/public/slot_toggle.sub");

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@
  00058	8b c8		 mov	 ecx, eax
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
  00067	e8 00 00 00 00	 call	 ?LoadImageA@CImageBox@UI@@QAEHPBD@Z ; UI::CImageBox::LoadImageA

; 1407 : 	m_pToggleSlotImage->Show();

  0006c	8b 8e a4 00 00
	00		 mov	 ecx, DWORD PTR [esi+164]
  00072	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1408 : }

  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5e		 pop	 esi
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__CreateToggleSlotImage
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__Initialize@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__Initialize@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::__Initialize, COMDAT
; _this$ = ecx

; 1552 : 	m_dwSlotType = 0;

  00000	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0

; 1553 : 	m_dwSlotStyle = SLOT_STYLE_PICK_UP;

  00007	c7 81 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+128], 1

; 1554 : 	m_dwToolTipSlotNumber = SLOT_NUMBER_NONE;

  00011	c7 81 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+148], -1

; 1555 : 
; 1556 : 	m_isUseMode = FALSE;

  0001b	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 1557 : 	m_isUsableItem = FALSE;

  00025	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0

; 1558 : 
; 1559 : 	m_pToggleSlotImage = NULL;

  0002f	c7 81 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+164], 0

; 1560 : 	m_pSlotActiveEffect = NULL;

  00039	c7 81 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+168], 0

; 1561 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1562 : 	m_pSlotActiveEffectSlot2 = NULL;

  00043	c7 81 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+172], 0

; 1563 : 	m_pSlotActiveEffectSlot3 = NULL;

  0004d	c7 81 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+176], 0

; 1564 : #endif
; 1565 : 	m_pBaseImageInstance = NULL;

  00057	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 1566 : }

  00061	c3		 ret	 0
?__Initialize@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotIndex$ = 8					; size = 4
?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DeactivateEffect, COMDAT
; _this$ = ecx

; 1376 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1377 : 	TSlot * pSlot;
; 1378 : 	if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 2a		 je	 SHORT $LN3@Deactivate

; 1379 : 		return;
; 1380 : 
; 1381 : 	for (auto& pActiveEff : pSlot->pActiveSlotEffect)

  00014	56		 push	 esi
  00015	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00018	83 c6 50	 add	 esi, 80			; 00000050H
  0001b	57		 push	 edi
  0001c	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  0001f	3b f7		 cmp	 esi, edi
  00021	74 19		 je	 SHORT $LN16@Deactivate
$LL4@Deactivate:

; 1382 : 	{
; 1383 : 		if (pActiveEff)

  00023	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00025	85 c9		 test	 ecx, ecx
  00027	74 0c		 je	 SHORT $LN2@Deactivate

; 1384 : 		{
; 1385 : 			delete pActiveEff;

  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	6a 01		 push	 1
  0002d	ff 10		 call	 DWORD PTR [eax]

; 1386 : 			pActiveEff = NULL;

  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@Deactivate:

; 1379 : 		return;
; 1380 : 
; 1381 : 	for (auto& pActiveEff : pSlot->pActiveSlotEffect)

  00035	83 c6 04	 add	 esi, 4
  00038	3b f7		 cmp	 esi, edi
  0003a	75 e7		 jne	 SHORT $LL4@Deactivate
$LN16@Deactivate:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
$LN3@Deactivate:

; 1387 : 		}
; 1388 : 	}
; 1389 : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?DeactivateEffect@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DeactivateEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
_TEXT	SEGMENT
$T2 = -92						; size = 4
_pSlot$ = -92						; size = 4
_cBuf$3 = -88						; size = 72
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwSlotIndex$ = 8					; size = 4
_r$ = 12						; size = 4
_g$ = 16						; size = 4
_b$ = 20						; size = 4
_a$ = 24						; size = 4
?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z PROC	; UI::CSlotWindow::ActivateEffect, COMDAT
; _this$ = ecx

; 1346 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1347 : 	TSlot * pSlot;
; 1348 : 	if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0002b	8d 45 a4	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0002e	50		 push	 eax
  0002f	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00032	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00037	85 c0		 test	 eax, eax
  00039	0f 84 bb 00 00
	00		 je	 $LN3@ActivateEf

; 1349 : 		return;
; 1350 : 
; 1351 : 	for (int i = 0; i < 3; ++i)

  0003f	8b 75 a4	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00042	33 db		 xor	 ebx, ebx
  00044	83 c6 50	 add	 esi, 80			; 00000050H
$LL4@ActivateEf:

; 1352 : 	{
; 1353 : 		auto& pActiveEff = pSlot->pActiveSlotEffect[i];
; 1354 : 
; 1355 : 		if (pActiveEff)

  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00049	85 c9		 test	 ecx, ecx
  0004b	74 0c		 je	 SHORT $LN9@ActivateEf

; 1356 : 		{
; 1357 : 			delete pActiveEff;

  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	6a 01		 push	 1
  00051	ff 10		 call	 DWORD PTR [eax]

; 1358 : 			pActiveEff = NULL;

  00053	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN9@ActivateEf:

; 1359 : 		}
; 1360 : 
; 1361 : 		const int ciImageCount = 12;
; 1362 : 
; 1363 : 		pActiveEff = new CAniImageBox(NULL);

  00059	68 8c 00 00 00	 push	 140			; 0000008cH
  0005e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00063	83 c4 04	 add	 esp, 4
  00066	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	85 c0		 test	 eax, eax
  00072	74 0b		 je	 SHORT $LN13@ActivateEf
  00074	6a 00		 push	 0
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  0007d	eb 02		 jmp	 SHORT $LN14@ActivateEf
$LN13@ActivateEf:
  0007f	33 c0		 xor	 eax, eax
$LN14@ActivateEf:
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00088	33 ff		 xor	 edi, edi
  0008a	89 06		 mov	 DWORD PTR [esi], eax
  0008c	0f 1f 40 00	 npad	 4
$LL7@ActivateEf:

; 1364 : 		for (int j = 0; j <= ciImageCount ; ++j)
; 1365 : 		{
; 1366 : 			char cBuf[72];
; 1367 : 			snprintf(cBuf, sizeof(cBuf), "d:/ymir work/ui/public/slotactiveeffect/slot%d/%02d.sub", (i + 1), j);

  00090	57		 push	 edi
  00091	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00094	50		 push	 eax
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@PPHKLJOI@d?3?1ymir?5work?1ui?1public?1slotacti@
  0009a	8d 45 a8	 lea	 eax, DWORD PTR _cBuf$3[ebp]
  0009d	6a 48		 push	 72			; 00000048H
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 __snprintf

; 1368 : 			pActiveEff->AppendImage(cBuf, r, g, b, a);

  000a5	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _a$[ebp]
  000aa	8d 45 a8	 lea	 eax, DWORD PTR _cBuf$3[ebp]
  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000af	83 c4 04	 add	 esp, 4
  000b2	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000b8	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _b$[ebp]
  000bd	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000c3	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _g$[ebp]
  000c8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000ce	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _r$[ebp]
  000d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBDMMMM@Z ; UI::CAniImageBox::AppendImage
  000de	47		 inc	 edi
  000df	83 ff 0c	 cmp	 edi, 12			; 0000000cH
  000e2	7e ac		 jle	 SHORT $LL7@ActivateEf

; 1369 : 		}
; 1370 : 
; 1371 : 		pActiveEff->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  000e4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000e6	6a 01		 push	 1
  000e8	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode
  000ed	43		 inc	 ebx
  000ee	83 c6 04	 add	 esi, 4
  000f1	83 fb 03	 cmp	 ebx, 3
  000f4	0f 8c 4d ff ff
	ff		 jl	 $LL4@ActivateEf
$LN3@ActivateEf:

; 1372 : 	}
; 1373 : }

  000fa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00104	59		 pop	 ecx
  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010b	33 cd		 xor	 ecx, ebp
  0010d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z$0:
  00000	68 8c 00 00 00	 push	 140			; 0000008cH
  00005	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ActivateEffect@CSlotWindow@UI@@QAEXKMMMM@Z ENDP	; UI::CSlotWindow::ActivateEffect
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z PROC ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect, COMDAT
; _this$ = ecx

; 1334 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1122 :         _Emplace_back_internal(_Val);

  00003	8d 45 08	 lea	 eax, DWORD PTR _dwSlotIndex$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1335 : 	m_ReserveDestroyEffectDeque.push_back(dwSlotIndex);

  00006	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1122 :         _Emplace_back_internal(_Val);

  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Emplace_back_internal@ABK@?$deque@KV?$allocator@K@std@@@std@@AAEXABK@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Emplace_back_internal<unsigned long const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1336 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ENDP ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUsableItem@CSlotWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetUsableItem@CSlotWindow@UI@@QAEXH@Z PROC		; UI::CSlotWindow::SetUsableItem, COMDAT
; _this$ = ecx

; 1329 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1330 : 	m_isUsableItem = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 81 9c 00 00
	00		 mov	 DWORD PTR [ecx+156], eax

; 1331 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetUsableItem@CSlotWindow@UI@@QAEXH@Z ENDP		; UI::CSlotWindow::SetUsableItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUseMode@CSlotWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetUseMode@CSlotWindow@UI@@QAEXH@Z PROC		; UI::CSlotWindow::SetUseMode, COMDAT
; _this$ = ecx

; 1324 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1325 : 	m_isUseMode = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax

; 1326 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetUseMode@CSlotWindow@UI@@QAEXH@Z ENDP		; UI::CSlotWindow::SetUseMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?OnOverOutItem@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::OnOverOutItem, COMDAT
; _this$ = ecx

; 960  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 961  : 	if (SLOT_NUMBER_NONE == m_dwToolTipSlotNumber)

  00003	83 be 94 00 00
	00 ff		 cmp	 DWORD PTR [esi+148], -1
  0000a	74 26		 je	 SHORT $LN1@OnOverOutI

; 962  : 		return;
; 963  : 
; 964  : 	m_dwToolTipSlotNumber = SLOT_NUMBER_NONE;
; 965  : 	PyCallClassMemberFunc(m_poHandler, "OnOverOutItem", Py_BuildValue("()"));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
  00011	c7 86 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+148], -1
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IBCIPGEP@OnOverOutItem@
  00027	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@OnOverOutI:

; 966  : }

  00032	5e		 pop	 esi
  00033	c3		 ret	 0
?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::OnOverOutItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?OnOverInItem@CSlotWindow@UI@@QAEHK@Z PROC		; UI::CSlotWindow::OnOverInItem, COMDAT
; _this$ = ecx

; 942  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 943  : 	TSlot * pSlot;
; 944  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00006	8b 7d 08	 mov	 edi, DWORD PTR _dwSlotNumber$[ebp]
  00009	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0000c	50		 push	 eax
  0000d	57		 push	 edi
  0000e	8b f1		 mov	 esi, ecx
  00010	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00015	85 c0		 test	 eax, eax
  00017	74 44		 je	 SHORT $LN6@OnOverInIt

; 945  : 		return FALSE;
; 946  : 
; 947  : 	if (!pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00020	74 3b		 je	 SHORT $LN6@OnOverInIt

; 949  : 
; 950  : 	if (pSlot->dwSlotNumber == m_dwToolTipSlotNumber)

  00022	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00025	3b 86 94 00 00
	00		 cmp	 eax, DWORD PTR [esi+148]
  0002b	74 23		 je	 SHORT $LN7@OnOverInIt

; 951  : 		return TRUE;
; 952  : 
; 953  : 	m_dwToolTipSlotNumber = dwSlotNumber;
; 954  : 	PyCallClassMemberFunc(m_poHandler, "OnOverInItem", Py_BuildValue("(i)", dwSlotNumber));

  0002d	57		 push	 edi
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00033	89 be 94 00 00
	00		 mov	 DWORD PTR [esi+148], edi
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CBOPEHFH@OnOverInItem@
  00045	ff 76 5c	 push	 DWORD PTR [esi+92]
  00048	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
$LN7@OnOverInIt:

; 955  : 
; 956  : 	return TRUE;
; 957  : }

  00050	5f		 pop	 edi
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5e		 pop	 esi
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
$LN6@OnOverInIt:
  0005d	5f		 pop	 edi

; 948  : 		return FALSE;

  0005e	33 c0		 xor	 eax, eax

; 955  : 
; 956  : 	return TRUE;
; 957  : }

  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ENDP		; UI::CSlotWindow::OnOverInItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::HideRequirementSign, COMDAT
; _this$ = ecx

; 793  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 794  : 	TSlot * pSlot;
; 795  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@HideRequir

; 796  : 		return;
; 797  : 
; 798  : 	if (!pSlot->pSignImage)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@HideRequir

; 799  : 		return;
; 800  : 
; 801  : 	pSlot->pSignImage->Hide();

  0001e	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN1@HideRequir:

; 802  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::HideRequirementSign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::ShowRequirementSign, COMDAT
; _this$ = ecx

; 781  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 782  : 	TSlot * pSlot;
; 783  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@ShowRequir

; 784  : 		return;
; 785  : 
; 786  : 	if (!pSlot->pSignImage)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@ShowRequir

; 787  : 		return;
; 788  : 
; 789  : 	pSlot->pSignImage->Show();

  0001e	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN1@ShowRequir:

; 790  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::ShowRequirementSign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
_dwSlotNumber$ = 12					; size = 4
_isLeft$ = 16						; size = 4
?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z PROC	; UI::CSlotWindow::OnPressedSlotButton, COMDAT
; _this$ = ecx

; 969  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 970  : 	if (CSlotButton::SLOT_BUTTON_TYPE_PLUS == dwType)

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	85 c0		 test	 eax, eax
  0000b	75 24		 jne	 SHORT $LN2@OnPressedS

; 971  : 	{
; 972  : 		PyCallClassMemberFunc(m_poHandler, "OnPressedSlotButton", Py_BuildValue("(i)", dwSlotNumber));

  0000d	ff 75 0c	 push	 DWORD PTR _dwSlotNumber$[ebp]
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0001b	50		 push	 eax
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MBGDMPNF@OnPressedSlotButton@
  00021	ff 76 5c	 push	 DWORD PTR [esi+92]
  00024	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5e		 pop	 esi

; 979  : 		}
; 980  : 	}
; 981  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
$LN2@OnPressedS:

; 973  : 	}
; 974  : 	else if (CSlotButton::SLOT_BUTTON_TYPE_COVER == dwType)

  00031	83 f8 01	 cmp	 eax, 1
  00034	75 0b		 jne	 SHORT $LN5@OnPressedS

; 975  : 	{
; 976  : 		if (isLeft)

  00036	83 7d 10 00	 cmp	 DWORD PTR _isLeft$[ebp], 0
  0003a	74 05		 je	 SHORT $LN5@OnPressedS

; 977  : 		{
; 978  : 			OnMouseLeftButtonDown();

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	ff 50 58	 call	 DWORD PTR [eax+88]
$LN5@OnPressedS:
  00041	5e		 pop	 esi

; 979  : 		}
; 980  : 	}
; 981  : }

  00042	5d		 pop	 ebp
  00043	c2 0c 00	 ret	 12			; 0000000cH
?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z ENDP	; UI::CSlotWindow::OnPressedSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::HideAllSlotButton, COMDAT
; _this$ = ecx

; 768  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 769  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 16		 je	 SHORT $LN3@HideAllSlo
$LL4@HideAllSlo:

; 770  : 	{
; 771  : 		TSlot & rSlot = *itor;
; 772  : 
; 773  : 		if (rSlot.pSlotButton)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 05		 je	 SHORT $LN2@HideAllSlo

; 774  : 		{
; 775  : 			rSlot.pSlotButton->Hide();

  00017	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN2@HideAllSlo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0001c	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0001e	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 769  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00024	75 ea		 jne	 SHORT $LL4@HideAllSlo
$LN3@HideAllSlo:
  00026	5f		 pop	 edi

; 776  : 		}
; 777  : 	}
; 778  : }

  00027	5e		 pop	 esi
  00028	c3		 ret	 0
?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::HideAllSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ShowSlotButton, COMDAT
; _this$ = ecx

; 756  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 757  : 	TSlot * pSlot;
; 758  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN3@ShowSlotBu

; 759  : 		return;
; 760  : 
; 761  : 	if (pSlot->pSlotButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN3@ShowSlotBu

; 762  : 	{
; 763  : 		pSlot->pSlotButton->Show();

  0001e	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN3@ShowSlotBu:

; 764  : 	}
; 765  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ShowSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z PROC	; UI::CSlotWindow::GetSelectedSlotNumber, COMDAT
; _this$ = ecx

; 738  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 739  : 	if (dwIndex >= m_dwSelectedSlotIndexList.size())

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
  00007	3b b1 88 00 00
	00		 cmp	 esi, DWORD PTR [ecx+136]
  0000d	72 08		 jb	 SHORT $LN5@GetSelecte

; 740  : 		return DWORD(-1);

  0000f	83 c8 ff	 or	 eax, -1
  00012	5e		 pop	 esi

; 753  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
$LN5@GetSelecte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00017	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 742  : 	DWORD dwCount = 0;

  0001d	33 d2		 xor	 edx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00021	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 744  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  00023	74 0b		 je	 SHORT $LN41@GetSelecte
$LL4@GetSelecte:

; 745  : 	{
; 746  : 		if (dwIndex == dwCount)

  00025	3b f2		 cmp	 esi, edx
  00027	74 07		 je	 SHORT $LN41@GetSelecte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00029	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 749  : 		++dwCount;

  0002b	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 199  :         return this->_Ptr == _Right._Ptr;

  0002c	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 744  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0002e	75 f5		 jne	 SHORT $LL4@GetSelecte
$LN41@GetSelecte:

; 750  : 	}
; 751  : 
; 752  : 	return *itor;

  00030	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00033	5e		 pop	 esi

; 753  : }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z ENDP	; UI::CSlotWindow::GetSelectedSlotNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ
_TEXT	SEGMENT
?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ PROC	; UI::CSlotWindow::GetSelectedSlotCount, COMDAT
; _this$ = ecx

; 734  : 	return m_dwSelectedSlotIndexList.size();

  00000	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]

; 735  : }

  00006	c3		 ret	 0
?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ ENDP	; UI::CSlotWindow::GetSelectedSlotCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z PROC		; UI::CSlotWindow::isSelectedSlot, COMDAT
; _this$ = ecx

; 716  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 718  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0000d	74 0e		 je	 SHORT $LN3@isSelected
  0000f	8b 55 08	 mov	 edx, DWORD PTR _dwIndex$[ebp]
$LL4@isSelected:

; 719  : 	{
; 720  : 		if (dwIndex == *itor)

  00012	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00015	74 0c		 je	 SHORT $LN36@isSelected
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00017	8b 00		 mov	 eax, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  00019	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 718  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0001b	75 f5		 jne	 SHORT $LL4@isSelected
$LN3@isSelected:

; 722  : 	}
; 723  : 
; 724  : 	return FALSE;

  0001d	33 c0		 xor	 eax, eax

; 725  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN36@isSelected:

; 721  : 			return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1

; 725  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z ENDP		; UI::CSlotWindow::isSelectedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SelectSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
__Op$2 = -24						; size = 8
_this$1$ = -16						; size = 4
__Insert_after$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Insert_before$4 = 8					; size = 4
_pSlot$ = 8						; size = 4
_dwSelectingIndex$ = 8					; size = 4
?SelectSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SelectSlot, COMDAT
; _this$ = ecx

; 690  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002a	8b b3 84 00 00
	00		 mov	 esi, DWORD PTR [ebx+132]
  00030	8d 83 84 00 00
	00		 lea	 eax, DWORD PTR [ebx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 692  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  00036	8b 7d 08	 mov	 edi, DWORD PTR _dwSelectingIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00039	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	3b c6		 cmp	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 692  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  00040	74 0b		 je	 SHORT $LN3@SelectSlot
$LL2@SelectSlot:

; 693  : 	{
; 694  : 		if (dwSelectingIndex == *itor)

  00042	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00045	74 3d		 je	 SHORT $LN92@SelectSlot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00047	8b 00		 mov	 eax, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  00049	3b c6		 cmp	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 692  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  0004b	75 f5		 jne	 SHORT $LL2@SelectSlot
$LN3@SelectSlot:

; 695  : 		{
; 696  : 			itor = m_dwSelectedSlotIndexList.erase(itor);
; 697  : 			return;
; 698  : 		}
; 699  : 		else
; 700  : 		{
; 701  : 			++itor;
; 702  : 		}
; 703  : 	}
; 704  : 
; 705  : 	TSlot * pSlot;
; 706  : 	if (GetSlotPointer(dwSelectingIndex, &pSlot))

  0004d	8d 45 08	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00050	50		 push	 eax
  00051	57		 push	 edi
  00052	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00057	85 c0		 test	 eax, eax
  00059	0f 84 a4 00 00
	00		 je	 $LN85@SelectSlot

; 707  : 	{
; 708  : 		if (!pSlot->isItem)

  0005f	8b 45 08	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00062	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00066	0f 84 97 00 00
	00		 je	 $LN85@SelectSlot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1014 :         if (_Mysize == max_size()) {

  0006c	81 bb 88 00 00
	00 55 55 55 15	 cmp	 DWORD PTR [ebx+136], 357913941 ; 15555555H
  00076	8d 83 84 00 00
	00		 lea	 eax, DWORD PTR [ebx+132]
  0007c	0f 84 95 00 00
	00		 je	 $LN98@SelectSlot
  00082	eb 34		 jmp	 SHORT $LN59@SelectSlot
$LN92@SelectSlot:

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00084	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00087	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00089	6a 0c		 push	 12			; 0000000cH
  0008b	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  0008c	89 0a		 mov	 DWORD PTR [edx], ecx

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  0008e	8b 10		 mov	 edx, DWORD PTR [eax]
  00090	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00093	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 398  :         --_Mysize;

  00096	ff 8b 88 00 00
	00		 dec	 DWORD PTR [ebx+136]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0009c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a1	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 713  : }

  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 04 00	 ret	 4
$LN59@SelectSlot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000b8	89 45 e8	 mov	 DWORD PTR __Op$2[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bb	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000bd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000c4	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000cb	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  000d0	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1020 :         return _Op._Transfer_before(_Where);

  000d2	89 75 08	 mov	 DWORD PTR __Insert_before$4[ebp], esi
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000d8	89 7b 08	 mov	 DWORD PTR [ebx+8], edi

; 1019 :         ++_Mysize;

  000db	ff 40 04	 inc	 DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000de	8d 45 08	 lea	 eax, DWORD PTR __Insert_before$4[ebp]
  000e1	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  000e4	50		 push	 eax
  000e5	53		 push	 ebx
  000e6	89 7d f0	 mov	 DWORD PTR __Insert_after$3[ebp], edi
  000e9	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@KPAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000ee	8d 45 f0	 lea	 eax, DWORD PTR __Insert_after$3[ebp]
  000f1	50		 push	 eax
  000f2	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@KPAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  000fb	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  000fe	83 c4 14	 add	 esp, 20			; 00000014H

; 606  :         _Insert_after->_Next  = _Result;

  00101	89 1f		 mov	 DWORD PTR [edi], ebx
$LN85@SelectSlot:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 713  : }

  00103	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00106	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010d	59		 pop	 ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 04 00	 ret	 4
$LN98@SelectSlot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1015 :             _Xlength_error("list too long");

  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  0011c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN96@SelectSlot:
  00121	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SelectSlot@CSlotWindow@UI@@QAEXK@Z$1:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SelectSlot@CSlotWindow@UI@@QAEXK@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SelectSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SelectSlot
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSelected@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?ClearSelected@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::ClearSelected, COMDAT
; _this$ = ecx

; 728  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  00003	8b 97 84 00 00
	00		 mov	 edx, DWORD PTR [edi+132]

; 324  :         _Head->_Prev->_Next = nullptr;

  00009	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00012	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00014	85 c0		 test	 eax, eax
  00016	74 1c		 je	 SHORT $LN7@ClearSelec
  00018	56		 push	 esi
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@ClearSelec:

; 328  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00022	6a 0c		 push	 12			; 0000000cH
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL8@ClearSelec
  00033	5e		 pop	 esi
$LN7@ClearSelec:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00034	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  0003a	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0003c	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00042	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00045	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
  0004f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 730  : }

  00050	c3		 ret	 0
?ClearSelected@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::ClearSelected
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DisableSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DisableSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DisableSlot, COMDAT
; _this$ = ecx

; 679  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 680  : 	TSlot * pSlot;
; 681  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@DisableSlo

; 682  : 		return;
; 683  : 	SET_BIT(pSlot->dwState, SLOT_STATE_DISABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 04	 or	 DWORD PTR [eax], 4
$LN1@DisableSlo:

; 684  : 	//pSlot->dwState ^= SLOT_STATE_DISABLE;
; 685  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?DisableSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DisableSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?EnableSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?EnableSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::EnableSlot, COMDAT
; _this$ = ecx

; 670  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 671  : 	TSlot * pSlot;
; 672  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@EnableSlot

; 673  : 		return;
; 674  : 
; 675  : 	REMOVE_BIT(pSlot->dwState, SLOT_STATE_DISABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 20 fb	 and	 DWORD PTR [eax], -5	; fffffffbH
$LN1@EnableSlot:

; 676  : 	//pSlot->dwState |= SLOT_STATE_DISABLE;
; 677  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?EnableSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::EnableSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUseSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetUseSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetUseSlot, COMDAT
; _this$ = ecx

; 662  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 663  : 	TSlot * pSlot;
; 664  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetUseSlot

; 665  : 		return;
; 666  : 
; 667  : 	pSlot->dwState ^= SLOT_STATE_CANT_USE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 30 02	 xor	 DWORD PTR [eax], 2
$LN1@SetUseSlot:

; 668  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetUseSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetCantUseSlot, COMDAT
; _this$ = ecx

; 654  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 655  : 	TSlot * pSlot;
; 656  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetCantUse

; 657  : 		return;
; 658  : 
; 659  : 	pSlot->dwState |= SLOT_STATE_CANT_USE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 02	 or	 DWORD PTR [eax], 2
$LN1@SetCantUse:

; 660  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetCantUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?UnlockSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?UnlockSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::UnlockSlot, COMDAT
; _this$ = ecx

; 646  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 647  : 	TSlot * pSlot;
; 648  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@UnlockSlot

; 649  : 		return;
; 650  : 
; 651  : 	pSlot->dwState ^= SLOT_STATE_LOCK;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 30 01	 xor	 DWORD PTR [eax], 1
$LN1@UnlockSlot:

; 652  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?UnlockSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::UnlockSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?LockSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?LockSlot@CSlotWindow@UI@@QAEXK@Z PROC			; UI::CSlotWindow::LockSlot, COMDAT
; _this$ = ecx

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 639  : 	TSlot * pSlot;
; 640  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@LockSlot

; 641  : 		return;
; 642  : 
; 643  : 	pSlot->dwState |= SLOT_STATE_LOCK;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 01	 or	 DWORD PTR [eax], 1
$LN1@LockSlot:

; 644  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?LockSlot@CSlotWindow@UI@@QAEXK@Z ENDP			; UI::CSlotWindow::LockSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotCount@CSlotWindow@UI@@QAEKXZ
_TEXT	SEGMENT
?GetSlotCount@CSlotWindow@UI@@QAEKXZ PROC		; UI::CSlotWindow::GetSlotCount, COMDAT
; _this$ = ecx

; 634  : 	return m_SlotList.size();

  00000	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]

; 635  : }

  00006	c3		 ret	 0
?GetSlotCount@CSlotWindow@UI@@QAEKXZ ENDP		; UI::CSlotWindow::GetSlotCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z PROC		; UI::CSlotWindow::IsActivatedSlot, COMDAT
; _this$ = ecx

; 547  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 548  : 	TSlot * pSlot;
; 549  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	75 08		 jne	 SHORT $LN2@IsActivate

; 550  : 		return false;

  00014	32 c0		 xor	 al, al

; 552  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@IsActivate:

; 551  : 	return pSlot->bActive;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00023	0f 95 c0	 setne	 al

; 552  : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z ENDP		; UI::CSlotWindow::IsActivatedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fElapsedTime$ = 12					; size = 4
?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z PROC	; UI::CSlotWindow::GetSlotCoolTime, COMDAT
; _this$ = ecx

; 537  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 538  : 	TSlot * pSlot;
; 539  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	75 08		 jne	 SHORT $LN2@GetSlotCoo

; 540  : 		return 0.0;

  00014	d9 ee		 fldz

; 544  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN2@GetSlotCoo:

; 541  : 
; 542  : 	*fElapsedTime = CTimer::Instance().GetCurrentSecond() - pSlot->fStartCoolTime;

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00022	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _fElapsedTime$[ebp]
  0002d	d8 61 18	 fsub	 DWORD PTR [ecx+24]
  00030	d9 18		 fstp	 DWORD PTR [eax]

; 543  : 	return pSlot->fCoolTime;

  00032	d9 41 14	 fld	 DWORD PTR [ecx+20]

; 544  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z ENDP	; UI::CSlotWindow::GetSlotCoolTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RefreshSlot@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?RefreshSlot@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::RefreshSlot, COMDAT
; _this$ = ecx

; 614  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 615  : 	OnRefreshSlot();

  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]

; 616  : 
; 617  : 	if (IsRendering())

  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00016	84 c0		 test	 al, al
  00018	74 26		 je	 SHORT $LN3@RefreshSlo

; 618  : 	{
; 619  : 		TSlot * pSlot;
; 620  : 		if (GetPickedSlotPointer(&pSlot))

  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  0001f	51		 push	 ecx
  00020	8b ce		 mov	 ecx, esi
  00022	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00028	85 c0		 test	 eax, eax
  0002a	74 14		 je	 SHORT $LN3@RefreshSlo

; 621  : 		{
; 622  : 			OnOverOutItem();

  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem

; 623  : 			OnOverInItem(pSlot->dwSlotNumber);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  00036	8b ce		 mov	 ecx, esi
  00038	ff 70 04	 push	 DWORD PTR [eax+4]
  0003b	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
$LN3@RefreshSlo:
  00040	5e		 pop	 esi

; 624  : 		}
; 625  : 	}
; 626  : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?RefreshSlot@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::RefreshSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DeactivateSlot, COMDAT
; _this$ = ecx

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 528  : 	TSlot * pSlot;
; 529  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0a		 je	 SHORT $LN1@Deactivate

; 530  : 		return;
; 531  : 
; 532  : 	pSlot->bActive = FALSE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN1@Deactivate:

; 533  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DeactivateSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ActivateSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ActivateSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ActivateSlot, COMDAT
; _this$ = ecx

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 512  : 	TSlot * pSlot;
; 513  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	74 2c		 je	 SHORT $LN3@ActivateSl

; 514  : 		return;
; 515  : 
; 516  : 	pSlot->bActive = TRUE;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001a	c7 40 1c 01 00
	00 00		 mov	 DWORD PTR [eax+28], 1

; 517  : 
; 518  : 	if (!m_pSlotActiveEffect
; 519  : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 520  : 		|| !m_pSlotActiveEffectSlot2 || !m_pSlotActiveEffectSlot3

  00021	83 be a8 00 00
	00 00		 cmp	 DWORD PTR [esi+168], 0
  00028	74 12		 je	 SHORT $LN4@ActivateSl
  0002a	83 be ac 00 00
	00 00		 cmp	 DWORD PTR [esi+172], 0
  00031	74 09		 je	 SHORT $LN4@ActivateSl
  00033	83 be b0 00 00
	00 00		 cmp	 DWORD PTR [esi+176], 0
  0003a	75 07		 jne	 SHORT $LN3@ActivateSl
$LN4@ActivateSl:

; 521  : #endif
; 522  : 	)
; 523  : 		__CreateSlotEnableEffect();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__CreateSlotEnableEffect
$LN3@ActivateSl:
  00043	5e		 pop	 esi

; 524  : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?ActivateSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ActivateSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fCoolTime$ = 12					; size = 4
_fElapsedTime$ = 16					; size = 4
?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z PROC		; UI::CSlotWindow::SetSlotCoolTime, COMDAT
; _this$ = ecx

; 501  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 502  : 	TSlot * pSlot;
; 503  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 20		 je	 SHORT $LN1@SetSlotCoo

; 504  : 		return;
; 505  : 
; 506  : 	pSlot->fCoolTime = fCoolTime;

  00014	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fCoolTime$[ebp]
  00019	56		 push	 esi
  0001a	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0001d	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0

; 507  : 	pSlot->fStartCoolTime = CTimer::Instance().GetCurrentSecond() - fElapsedTime;

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00028	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  0002d	d8 65 10	 fsub	 DWORD PTR _fElapsedTime$[ebp]
  00030	d9 5e 18	 fstp	 DWORD PTR [esi+24]
  00033	5e		 pop	 esi
$LN1@SetSlotCoo:

; 508  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 0c 00	 ret	 12			; 0000000cH
?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z ENDP		; UI::CSlotWindow::SetSlotCoolTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pSlot$ = -40						; size = 4
_szCount$3 = -36					; size = 17
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_dwGrade$ = 12						; size = 4
_dwCount$ = 16						; size = 4
?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z PROC		; UI::CSlotWindow::SetSlotCountNew, COMDAT
; _this$ = ecx

; 455  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 456  : 	TSlot * pSlot;
; 457  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 d8	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 df 00 00
	00		 je	 $LN6@SetSlotCou

; 458  : 		return;
; 459  : 
; 460  : 	if (dwCount <= 0)

  00041	8b 45 10	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	75 20		 jne	 SHORT $LN5@SetSlotCou

; 461  : 	{
; 462  : 		if (pSlot->pNumberLine)

  00048	8b 75 d8	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0004b	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  0004e	85 c9		 test	 ecx, ecx
  00050	0f 84 ca 00 00
	00		 je	 $LN6@SetSlotCou

; 463  : 		{
; 464  : 			delete pSlot->pNumberLine;

  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 10		 call	 DWORD PTR [eax]

; 465  : 			pSlot->pNumberLine = NULL;

  0005c	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 466  : 		}
; 467  : 	}

  00063	e9 b8 00 00 00	 jmp	 $LN6@SetSlotCou
$LN5@SetSlotCou:

; 468  : 	else
; 469  : 	{
; 470  : 		char szCount[16+1];
; 471  : 
; 472  : 		switch (dwGrade)

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _dwGrade$[ebp]
  0006b	83 f9 03	 cmp	 ecx, 3
  0006e	77 5c		 ja	 SHORT $LN2@SetSlotCou
  00070	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN19@SetSlotCou[ecx*4]
$LN8@SetSlotCou:

; 473  : 		{
; 474  : 			case 0:
; 475  : 				_snprintf(szCount, sizeof(szCount), "%d", dwCount);

  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0007d	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00080	6a 11		 push	 17			; 00000011H
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 __snprintf
  00088	83 c4 10	 add	 esp, 16			; 00000010H

; 476  : 				break;

  0008b	eb 3f		 jmp	 SHORT $LN2@SetSlotCou
$LN9@SetSlotCou:

; 477  : 			case 1:
; 478  : 				_snprintf(szCount, sizeof(szCount), "m%d", dwCount);

  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_03CIOACFJF@m?$CFd@
  00093	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00096	6a 11		 push	 17			; 00000011H
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 __snprintf
  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 479  : 				break;

  000a1	eb 29		 jmp	 SHORT $LN2@SetSlotCou
$LN10@SetSlotCou:

; 480  : 			case 2:
; 481  : 				_snprintf(szCount, sizeof(szCount), "g%d", dwCount);

  000a3	50		 push	 eax
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_03EHFNMFPB@g?$CFd@
  000a9	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000ac	6a 11		 push	 17			; 00000011H
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 __snprintf
  000b4	83 c4 10	 add	 esp, 16			; 00000010H

; 482  : 				break;

  000b7	eb 13		 jmp	 SHORT $LN2@SetSlotCou
$LN11@SetSlotCou:

; 483  : 			case 3:
; 484  : 				_snprintf(szCount, sizeof(szCount), "p");

  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_01JBBJJEPG@p@
  000be	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000c1	6a 11		 push	 17			; 00000011H
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 __snprintf
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SetSlotCou:

; 485  : 				break;
; 486  : 		}
; 487  : 
; 488  : 		if (!pSlot->pNumberLine)

  000cc	8b 7d d8	 mov	 edi, DWORD PTR _pSlot$[ebp]
  000cf	8b 77 38	 mov	 esi, DWORD PTR [edi+56]
  000d2	85 f6		 test	 esi, esi
  000d4	75 3f		 jne	 SHORT $LN12@SetSlotCou

; 489  : 		{
; 490  : 			CNumberLine * pNumberLine = new UI::CNumberLine(this);

  000d6	68 c0 00 00 00	 push	 192			; 000000c0H
  000db	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e0	83 c4 04	 add	 esp, 4
  000e3	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  000e6	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  000e9	85 c0		 test	 eax, eax
  000eb	74 0c		 je	 SHORT $LN16@SetSlotCou
  000ed	53		 push	 ebx
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ; UI::CNumberLine::CNumberLine
  000f5	8b f0		 mov	 esi, eax
  000f7	eb 02		 jmp	 SHORT $LN17@SetSlotCou
$LN16@SetSlotCou:
  000f9	33 f6		 xor	 esi, esi
$LN17@SetSlotCou:

; 491  : 			pNumberLine->SetHorizontalAlign(CNumberLine::HORIZONTAL_ALIGN_RIGHT);

  000fb	6a 02		 push	 2
  000fd	8b ce		 mov	 ecx, esi
  000ff	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00106	e8 00 00 00 00	 call	 ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ; UI::CNumberLine::SetHorizontalAlign

; 492  : 			pNumberLine->Show();

  0010b	8b ce		 mov	 ecx, esi
  0010d	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 493  : 			pSlot->pNumberLine = pNumberLine;

  00112	89 77 38	 mov	 DWORD PTR [edi+56], esi
$LN12@SetSlotCou:

; 494  : 		}
; 495  : 
; 496  : 		pSlot->pNumberLine->SetNumber(szCount);

  00115	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00118	8b ce		 mov	 ecx, esi
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?SetNumber@CNumberLine@UI@@QAEXPBD@Z ; UI::CNumberLine::SetNumber
$LN6@SetSlotCou:

; 497  : 	}
; 498  : }

  00120	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00123	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012a	59		 pop	 ecx
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00131	33 cd		 xor	 ecx, ebp
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 0c 00	 ret	 12			; 0000000cH
  0013e	66 90		 npad	 2
$LN19@SetSlotCou:
  00140	00 00 00 00	 DD	 $LN8@SetSlotCou
  00144	00 00 00 00	 DD	 $LN9@SetSlotCou
  00148	00 00 00 00	 DD	 $LN10@SetSlotCou
  0014c	00 00 00 00	 DD	 $LN11@SetSlotCou
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z ENDP		; UI::CSlotWindow::SetSlotCountNew
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pSlot$ = -40						; size = 4
_szCount$3 = -36					; size = 17
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_dwCount$ = 12						; size = 4
?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z PROC		; UI::CSlotWindow::SetSlotCount, COMDAT
; _this$ = ecx

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 425  : 	TSlot * pSlot;
; 426  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 d8	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 88 00 00
	00		 je	 $LN4@SetSlotCou

; 427  : 		return;
; 428  : 
; 429  : 	if (dwCount <= 0)

  00041	8b 45 0c	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	75 19		 jne	 SHORT $LN3@SetSlotCou

; 430  : 	{
; 431  : 		if (pSlot->pNumberLine)

  00048	8b 75 d8	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0004b	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  0004e	85 c9		 test	 ecx, ecx
  00050	74 77		 je	 SHORT $LN4@SetSlotCou

; 432  : 		{
; 433  : 			delete pSlot->pNumberLine;

  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	6a 01		 push	 1
  00056	ff 10		 call	 DWORD PTR [eax]

; 434  : 			pSlot->pNumberLine = NULL;

  00058	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 435  : 		}
; 436  : 	}

  0005f	eb 68		 jmp	 SHORT $LN4@SetSlotCou
$LN3@SetSlotCou:

; 437  : 	else
; 438  : 	{
; 439  : 		char szCount[16+1];
; 440  : 		_snprintf(szCount, sizeof(szCount), "%d", dwCount);

  00061	50		 push	 eax
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00067	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  0006a	6a 11		 push	 17			; 00000011H
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 __snprintf

; 441  : 
; 442  : 		if (!pSlot->pNumberLine)

  00072	8b 7d d8	 mov	 edi, DWORD PTR _pSlot$[ebp]
  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	8b 77 38	 mov	 esi, DWORD PTR [edi+56]
  0007b	85 f6		 test	 esi, esi
  0007d	75 3f		 jne	 SHORT $LN6@SetSlotCou

; 443  : 		{
; 444  : 			CNumberLine * pNumberLine = new UI::CNumberLine(this);

  0007f	68 c0 00 00 00	 push	 192			; 000000c0H
  00084	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00089	83 c4 04	 add	 esp, 4
  0008c	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  0008f	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  00092	85 c0		 test	 eax, eax
  00094	74 0c		 je	 SHORT $LN10@SetSlotCou
  00096	53		 push	 ebx
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ; UI::CNumberLine::CNumberLine
  0009e	8b f0		 mov	 esi, eax
  000a0	eb 02		 jmp	 SHORT $LN11@SetSlotCou
$LN10@SetSlotCou:
  000a2	33 f6		 xor	 esi, esi
$LN11@SetSlotCou:

; 445  : 			pNumberLine->SetHorizontalAlign(CNumberLine::HORIZONTAL_ALIGN_RIGHT);

  000a4	6a 02		 push	 2
  000a6	8b ce		 mov	 ecx, esi
  000a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000af	e8 00 00 00 00	 call	 ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ; UI::CNumberLine::SetHorizontalAlign

; 446  : 			pNumberLine->Show();

  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 447  : 			pSlot->pNumberLine = pNumberLine;

  000bb	89 77 38	 mov	 DWORD PTR [edi+56], esi
$LN6@SetSlotCou:

; 448  : 		}
; 449  : 
; 450  : 		pSlot->pNumberLine->SetNumber(szCount);

  000be	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000c1	8b ce		 mov	 ecx, esi
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?SetNumber@CNumberLine@UI@@QAEXPBD@Z ; UI::CNumberLine::SetNumber
$LN4@SetSlotCou:

; 451  : 	}
; 452  : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000da	33 cd		 xor	 ecx, ebp
  000dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z ENDP		; UI::CSlotWindow::SetSlotCount
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_dwVirtualNumber$ = 12					; size = 4
_byWidth$ = 16						; size = 1
_byHeight$ = 20						; size = 1
_pImage$ = 24						; size = 4
_diffuseColor$ = 28					; size = 4
?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z PROC ; UI::CSlotWindow::SetSlot, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 385  : 	TSlot * pSlot;
; 386  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	0f 84 9b 00 00
	00		 je	 $LN7@SetSlot

; 387  : 		return;
; 388  : 
; 389  : 	if (pSlot->isItem)

  0001b	56		 push	 esi
  0001c	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0001f	57		 push	 edi
  00020	8b 7d 0c	 mov	 edi, DWORD PTR _dwVirtualNumber$[ebp]
  00023	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00027	74 2f		 je	 SHORT $LN4@SetSlot

; 390  : 	if (pSlot->dwItemIndex == dwVirtualNumber)

  00029	39 7e 0c	 cmp	 DWORD PTR [esi+12], edi
  0002c	75 2a		 jne	 SHORT $LN4@SetSlot

; 391  : 	{
; 392  : 		pSlot->dwState = 0;
; 393  : 		pSlot->isItem = TRUE;
; 394  : 		if (pImage && pSlot->pInstance)

  0002e	8b 45 18	 mov	 eax, DWORD PTR _pImage$[ebp]
  00031	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00037	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1
  0003e	85 c0		 test	 eax, eax
  00040	74 72		 je	 SHORT $LN9@SetSlot
  00042	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00045	85 c9		 test	 ecx, ecx
  00047	74 6b		 je	 SHORT $LN9@SetSlot

; 395  : 		{
; 396  : 			pSlot->pInstance->SetImagePointer(pImage);

  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx

; 420  : 	}
; 421  : }

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 18 00	 ret	 24			; 00000018H
$LN4@SetSlot:

; 397  : 		}
; 398  : 		return;
; 399  : 	}
; 400  : 
; 401  : 	ClearSlot(pSlot);

  00058	56		 push	 esi
  00059	8b cb		 mov	 ecx, ebx
  0005b	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 402  : 	pSlot->dwState = 0;

  00060	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 403  : 	pSlot->isItem = TRUE;

  00066	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1

; 404  : 	pSlot->dwItemIndex = dwVirtualNumber;

  0006d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi

; 405  : 
; 406  : 	if (pImage)

  00070	8b 7d 18	 mov	 edi, DWORD PTR _pImage$[ebp]
  00073	85 ff		 test	 edi, edi
  00075	74 25		 je	 SHORT $LN6@SetSlot

; 407  : 	{
; 408  : 		assert(NULL == pSlot->pInstance);
; 409  : 		pSlot->pInstance = CGraphicImageInstance::New();

  00077	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 410  : 		pSlot->pInstance->SetDiffuseColor(diffuseColor.r, diffuseColor.g, diffuseColor.b, diffuseColor.a);

  0007c	8b 4d 1c	 mov	 ecx, DWORD PTR _diffuseColor$[ebp]
  0007f	83 ec 10	 sub	 esp, 16			; 00000010H
  00082	89 46 34	 mov	 DWORD PTR [esi+52], eax
  00085	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00088	8b c8		 mov	 ecx, eax
  0008a	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  0008e	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 411  : 		pSlot->pInstance->SetImagePointer(pImage);

  00093	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00096	57		 push	 edi
  00097	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
$LN6@SetSlot:

; 412  : 	}
; 413  : 
; 414  : 	pSlot->byxPlacedItemSize = byWidth;

  0009c	8a 45 10	 mov	 al, BYTE PTR _byWidth$[ebp]
  0009f	88 46 30	 mov	 BYTE PTR [esi+48], al

; 415  : 	pSlot->byyPlacedItemSize = byHeight;

  000a2	8a 45 14	 mov	 al, BYTE PTR _byHeight$[ebp]
  000a5	88 46 31	 mov	 BYTE PTR [esi+49], al

; 416  : 
; 417  : 	if (pSlot->pCoverButton)

  000a8	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  000ab	85 c9		 test	 ecx, ecx
  000ad	74 05		 je	 SHORT $LN9@SetSlot

; 418  : 	{
; 419  : 		pSlot->pCoverButton->Show();

  000af	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN9@SetSlot:
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
$LN7@SetSlot:
  000b6	5b		 pop	 ebx

; 420  : 	}
; 421  : }

  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 18 00	 ret	 24			; 00000018H
?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z ENDP ; UI::CSlotWindow::SetSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ClearSlot@CSlotWindow@UI@@QAEXK@Z PROC			; UI::CSlotWindow::ClearSlot, COMDAT
; _this$ = ecx

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 557  : 	TSlot * pSlot;
; 558  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	74 0a		 je	 SHORT $LN1@ClearSlot

; 559  : 		return;
; 560  : 
; 561  : 	ClearSlot(pSlot);

  00017	ff 75 fc	 push	 DWORD PTR _pSlot$[ebp]
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot
$LN1@ClearSlot:
  00021	5e		 pop	 esi

; 562  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?ClearSlot@CSlotWindow@UI@@QAEXK@Z ENDP			; UI::CSlotWindow::ClearSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearAllSlot@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?ClearAllSlot@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::ClearAllSlot, COMDAT
; _this$ = ecx

; 610  : 	Destroy();

  00000	e9 00 00 00 00	 jmp	 ?Destroy@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::Destroy
?ClearAllSlot@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::ClearAllSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HasSlot@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?HasSlot@CSlotWindow@UI@@QAEHK@Z PROC			; UI::CSlotWindow::HasSlot, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 376  : 	TSlot * pSlot;
; 377  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	f7 d8		 neg	 eax

; 378  : 		return FALSE;
; 379  : 
; 380  : 	return TRUE;
; 381  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?HasSlot@CSlotWindow@UI@@QAEHK@Z ENDP			; UI::CSlotWindow::HasSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z PROC	; UI::CSlotWindow::IsDisableCoverButton, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 319  : 	TSlot * pSlot;
; 320  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN5@IsDisableC

; 321  : 		return FALSE;
; 322  : 
; 323  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 0b		 je	 SHORT $LN5@IsDisableC

; 325  : 
; 326  : 	return pSlot->pCoverButton->IsDisable();

  0001e	e8 00 00 00 00	 call	 ?IsDisable@CButton@UI@@QAEHXZ ; UI::CButton::IsDisable

; 327  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
$LN5@IsDisableC:

; 324  : 		return FALSE;

  00029	33 c0		 xor	 eax, eax

; 327  : }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z ENDP	; UI::CSlotWindow::IsDisableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::HideSlotBaseImage, COMDAT
; _this$ = ecx

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 310  : 	TSlot * pSlot;
; 311  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN1@HideSlotBa

; 312  : 		return;
; 313  : 
; 314  : 	pSlot->bRenderBaseSlotImage = false;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c6 40 3c 00	 mov	 BYTE PTR [eax+60], 0
$LN1@HideSlotBa:

; 315  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::HideSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ShowSlotBaseImage, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 301  : 	TSlot * pSlot;
; 302  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN1@ShowSlotBa

; 303  : 		return;
; 304  : 
; 305  : 	pSlot->bRenderBaseSlotImage = true;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c6 40 3c 01	 mov	 BYTE PTR [eax+60], 1
$LN1@ShowSlotBa:

; 306  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ShowSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_bAlwaysRender$ = 12					; size = 1
?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z PROC ; UI::CSlotWindow::SetAlwaysRenderCoverButton, COMDAT
; _this$ = ecx

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 289  : 	TSlot * pSlot;
; 290  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN4@SetAlwaysR

; 291  : 		return;
; 292  : 
; 293  : 	if (bAlwaysRender)

  00014	80 7d 0c 00	 cmp	 BYTE PTR _bAlwaysRender$[ebp], 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001b	74 09		 je	 SHORT $LN3@SetAlwaysR

; 294  : 		SET_BIT(pSlot->dwState, SLOT_STATE_ALWAYS_RENDER_COVER);

  0001d	83 08 08	 or	 DWORD PTR [eax], 8

; 297  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN3@SetAlwaysR:

; 295  : 	else
; 296  : 		REMOVE_BIT(pSlot->dwState, SLOT_STATE_ALWAYS_RENDER_COVER);

  00026	83 20 f7	 and	 DWORD PTR [eax], -9	; fffffff7H
$LN4@SetAlwaysR:

; 297  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z ENDP ; UI::CSlotWindow::SetAlwaysRenderCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::DisableCoverButton, COMDAT
; _this$ = ecx

; 276  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 277  : 	TSlot * pSlot;
; 278  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@DisableCov

; 279  : 		return;
; 280  : 
; 281  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@DisableCov

; 282  : 		return;
; 283  : 
; 284  : 	pSlot->pCoverButton->Disable();

  0001e	e8 00 00 00 00	 call	 ?Disable@CButton@UI@@QAEXXZ ; UI::CButton::Disable
$LN1@DisableCov:

; 285  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::DisableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::EnableCoverButton, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 265  : 	TSlot * pSlot;
; 266  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@EnableCove

; 267  : 		return;
; 268  : 
; 269  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@EnableCove

; 270  : 		return;
; 271  : 
; 272  : 	pSlot->pCoverButton->Enable();

  0001e	e8 00 00 00 00	 call	 ?Enable@CButton@UI@@QAEXXZ ; UI::CButton::Enable
$LN1@EnableCove:

; 273  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::EnableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_c_szImageName$ = 8					; size = 4
?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z PROC ; UI::CSlotWindow::AppendRequirementSignImage, COMDAT
; _this$ = ecx

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00027	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0002d	8b 30		 mov	 esi, DWORD PTR [eax]
  0002f	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 358  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00031	74 64		 je	 SHORT $LN3@AppendRequ
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _c_szImageName$[ebp]
$LL4@AppendRequ:

; 359  : 	{
; 360  : 		TSlot & rSlot = *itor;
; 361  : 		CImageBox *& rpSignImage = rSlot.pSignImage;
; 362  : 
; 363  : 		if (!rpSignImage)

  00036	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00039	85 c9		 test	 ecx, ecx
  0003b	75 42		 jne	 SHORT $LN42@AppendRequ

; 364  : 		{
; 365  : 			rpSignImage = new CImageBox(NULL);

  0003d	68 80 00 00 00	 push	 128			; 00000080H
  00042	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00047	83 c4 04	 add	 esp, 4
  0004a	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	85 c0		 test	 eax, eax
  00056	74 0b		 je	 SHORT $LN7@AppendRequ
  00058	6a 00		 push	 0
  0005a	8b c8		 mov	 ecx, eax
  0005c	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00061	eb 02		 jmp	 SHORT $LN8@AppendRequ
$LN7@AppendRequ:
  00063	33 c0		 xor	 eax, eax
$LN8@AppendRequ:

; 366  : 			CWindowManager::Instance().SetParent(rpSignImage, this);

  00065	57		 push	 edi
  00066	89 46 50	 mov	 DWORD PTR [esi+80], eax
  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0006f	50		 push	 eax
  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00077	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
  0007c	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
$LN42@AppendRequ:

; 367  : 		}
; 368  : 
; 369  : 		rpSignImage->LoadImage(c_szImageName);

  0007f	53		 push	 ebx
  00080	e8 00 00 00 00	 call	 ?LoadImageA@CImageBox@UI@@QAEHPBD@Z ; UI::CImageBox::LoadImageA

; 370  : 		rpSignImage->Hide();

  00085	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00088	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0008d	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0008f	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 358  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00095	75 9f		 jne	 SHORT $LL4@AppendRequ
$LN3@AppendRequ:

; 371  : 	}
; 372  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z ENDP ; UI::CSlotWindow::AppendRequirementSignImage
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szUpImageName$ = 8					; size = 4
_c_szOverImageName$ = 12				; size = 4
_c_szDownImageName$ = 16				; size = 4
?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z PROC	; UI::CSlotWindow::AppendSlotButton, COMDAT
; _this$ = ecx

; 335  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002d	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00033	8b 30		 mov	 esi, DWORD PTR [eax]
  00035	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 336  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00037	0f 84 c1 00 00
	00		 je	 $LN3@AppendSlot
  0003d	0f 1f 00	 npad	 3
$LL4@AppendSlot:

; 337  : 	{
; 338  : 		TSlot & rSlot = *itor;
; 339  : 		CSlotButton *& rpSlotButton = rSlot.pSlotButton;
; 340  : 
; 341  : 		if (!rpSlotButton)

  00040	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00043	85 c9		 test	 ecx, ecx
  00045	75 6f		 jne	 SHORT $LN47@AppendSlot

; 342  : 		{
; 343  : 			rpSlotButton = new CSlotButton(CSlotButton::SLOT_BUTTON_TYPE_PLUS, rSlot.dwSlotNumber, this);

  00047	68 18 01 00 00	 push	 280			; 00000118H
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	8b f8		 mov	 edi, eax
  00053	83 c4 04	 add	 esp, 4
  00056	89 7d ec	 mov	 DWORD PTR $T2[ebp], edi
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00060	85 ff		 test	 edi, edi
  00062	74 2d		 je	 SHORT $LN7@AppendSlot
  00064	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]

; 21   : 		CSlotButton(ESlotButtonType dwType, DWORD dwSlotNumber, CSlotWindow * pParent) : CButton(NULL)

  00067	8b cf		 mov	 ecx, edi
  00069	6a 00		 push	 0
  0006b	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 22   : 		{
; 23   : 			m_dwSlotButtonType = dwType;
; 24   : 			m_dwSlotNumber = dwSlotNumber;

  00070	89 9f 10 01 00
	00		 mov	 DWORD PTR [edi+272], ebx

; 25   : 			m_pParent = pParent;

  00076	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]
  00079	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@
  0007f	c7 87 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+268], 0
  00089	89 9f 14 01 00
	00		 mov	 DWORD PTR [edi+276], ebx

; 342  : 		{
; 343  : 			rpSlotButton = new CSlotButton(CSlotButton::SLOT_BUTTON_TYPE_PLUS, rSlot.dwSlotNumber, this);

  0008f	eb 02		 jmp	 SHORT $LN8@AppendSlot
$LN7@AppendSlot:
  00091	33 ff		 xor	 edi, edi
$LN8@AppendSlot:
  00093	89 7e 4c	 mov	 DWORD PTR [esi+76], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 98   : 			void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  00096	81 4f 58 00 01
	00 00		 or	 DWORD PTR [edi+88], 256	; 00000100H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 345  : 			CWindowManager::Instance().SetParent(rpSlotButton, this);

  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000a3	53		 push	 ebx
  000a4	ff 76 4c	 push	 DWORD PTR [esi+76]
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ae	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
  000b3	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
$LN47@AppendSlot:

; 346  : 		}
; 347  : 
; 348  : 		rpSlotButton->SetUpVisual(c_szUpImageName);

  000b6	ff 75 08	 push	 DWORD PTR _c_szUpImageName$[ebp]
  000b9	e8 00 00 00 00	 call	 ?SetUpVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetUpVisual

; 349  : 		rpSlotButton->SetOverVisual(c_szOverImageName);

  000be	ff 75 0c	 push	 DWORD PTR _c_szOverImageName$[ebp]
  000c1	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  000c4	e8 00 00 00 00	 call	 ?SetOverVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetOverVisual

; 350  : 		rpSlotButton->SetDownVisual(c_szDownImageName);

  000c9	ff 75 10	 push	 DWORD PTR _c_szDownImageName$[ebp]
  000cc	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  000cf	e8 00 00 00 00	 call	 ?SetDownVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDownVisual

; 351  : 		rpSlotButton->SetPosition(rSlot.ixPosition + 1, rSlot.iyPosition + 19);

  000d4	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  000d7	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  000da	83 c0 13	 add	 eax, 19			; 00000013H
  000dd	50		 push	 eax
  000de	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  000e1	40		 inc	 eax
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 352  : 		rpSlotButton->Hide();

  000e8	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  000eb	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  000f0	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  000f2	3b b3 8c 00 00
	00		 cmp	 esi, DWORD PTR [ebx+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 336  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000f8	0f 85 42 ff ff
	ff		 jne	 $LL4@AppendSlot
$LN3@AppendSlot:

; 353  : 	}
; 354  : }

  000fe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00101	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00108	59		 pop	 ecx
  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z$0:
  00000	68 18 01 00 00	 push	 280			; 00000118H
  00005	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z ENDP	; UI::CSlotWindow::AppendSlotButton
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z PROC	; UI::CSlotWindow::SetSlotBaseImage, COMDAT
; _this$ = ecx

; 330  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 331  : 	__CreateBaseImage(c_szFileName, fr, fg, fb, fa);

  00003	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00008	83 ec 10	 sub	 esp, 16			; 00000010H
  0000b	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00011	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00016	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0001c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00021	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00027	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00034	e8 00 00 00 00	 call	 ?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ; UI::CSlotWindow::__CreateBaseImage

; 332  : }

  00039	5d		 pop	 ebp
  0003a	c2 14 00	 ret	 20			; 00000014H
?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z ENDP	; UI::CSlotWindow::SetSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
_pSlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_dwIndex$ = 8						; size = 4
_c_szUpImageName$ = 12					; size = 4
_c_szOverImageName$ = 16				; size = 4
_c_szDownImageName$ = 20				; size = 4
_c_szDisableImageName$ = 24				; size = 4
_bLeftButtonEnable$ = 28				; size = 4
_bRightButtonEnable$ = 32				; size = 4
?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z PROC	; UI::CSlotWindow::SetCoverButton, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi

; 236  : 	TSlot * pSlot;
; 237  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 f0	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 e4 00 00
	00		 je	 $LN4@SetCoverBu

; 238  : 		return;
; 239  : 
; 240  : 	CCoverButton *& rpCoverButton = pSlot->pCoverButton;

  00041	8b 5d f0	 mov	 ebx, DWORD PTR _pSlot$[ebp]

; 241  : 
; 242  : 	if (!rpCoverButton)

  00044	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  00047	85 c9		 test	 ecx, ecx
  00049	75 7a		 jne	 SHORT $LN3@SetCoverBu

; 243  : 	{
; 244  : 		rpCoverButton = new CCoverButton(CSlotButton::SLOT_BUTTON_TYPE_COVER, pSlot->dwSlotNumber, this);

  0004b	68 20 01 00 00	 push	 288			; 00000120H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00055	8b f8		 mov	 edi, eax
  00057	83 c4 04	 add	 esp, 4
  0005a	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	85 ff		 test	 edi, edi
  00066	74 41		 je	 SHORT $LN6@SetCoverBu
  00068	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 21   : 		CSlotButton(ESlotButtonType dwType, DWORD dwSlotNumber, CSlotWindow * pParent) : CButton(NULL)

  0006b	8b cf		 mov	 ecx, edi
  0006d	6a 00		 push	 0
  0006f	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 22   : 		{
; 23   : 			m_dwSlotButtonType = dwType;
; 24   : 			m_dwSlotNumber = dwSlotNumber;

  00074	89 b7 10 01 00
	00		 mov	 DWORD PTR [edi+272], esi

; 25   : 			m_pParent = pParent;

  0007a	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  0007d	c7 87 0c 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+268], 1
  00087	89 b7 14 01 00
	00		 mov	 DWORD PTR [edi+276], esi

; 92   : 		{

  0008d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CCoverButton@CSlotWindow@UI@@6B@

; 93   : 			m_bLeftButtonEnable = TRUE;

  00093	c7 87 18 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+280], 1

; 94   : 			m_bRightButtonEnable = TRUE;

  0009d	c7 87 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+284], 1

; 243  : 	{
; 244  : 		rpCoverButton = new CCoverButton(CSlotButton::SLOT_BUTTON_TYPE_COVER, pSlot->dwSlotNumber, this);

  000a7	eb 02		 jmp	 SHORT $LN7@SetCoverBu
$LN6@SetCoverBu:
  000a9	33 ff		 xor	 edi, edi
$LN7@SetCoverBu:

; 245  : 		CWindowManager::Instance().SetParent(rpCoverButton, this);

  000ab	56		 push	 esi
  000ac	89 7b 40	 mov	 DWORD PTR [ebx+64], edi
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000b5	57		 push	 edi
  000b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bd	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
  000c2	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
$LN3@SetCoverBu:

; 246  : 	}
; 247  : 
; 248  : 	rpCoverButton->SetLeftButtonEnable(bLeftButtonEnable);

  000c5	8b 45 1c	 mov	 eax, DWORD PTR _bLeftButtonEnable$[ebp]

; 249  : 	rpCoverButton->SetRightButtonEnable(bRightButtonEnable);
; 250  : 	rpCoverButton->SetUpVisual(c_szUpImageName);

  000c8	ff 75 0c	 push	 DWORD PTR _c_szUpImageName$[ebp]
  000cb	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  000d1	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000d4	8b 45 20	 mov	 eax, DWORD PTR _bRightButtonEnable$[ebp]
  000d7	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  000dd	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000e0	e8 00 00 00 00	 call	 ?SetUpVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetUpVisual

; 251  : 	rpCoverButton->SetOverVisual(c_szOverImageName);

  000e5	ff 75 10	 push	 DWORD PTR _c_szOverImageName$[ebp]
  000e8	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000eb	e8 00 00 00 00	 call	 ?SetOverVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetOverVisual

; 252  : 	rpCoverButton->SetDownVisual(c_szDownImageName);

  000f0	ff 75 14	 push	 DWORD PTR _c_szDownImageName$[ebp]
  000f3	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  000f6	e8 00 00 00 00	 call	 ?SetDownVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDownVisual

; 253  : 	rpCoverButton->SetDisableVisual(c_szDisableImageName);

  000fb	ff 75 18	 push	 DWORD PTR _c_szDisableImageName$[ebp]
  000fe	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  00101	e8 00 00 00 00	 call	 ?SetDisableVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDisableVisual

; 254  : 	rpCoverButton->Enable();

  00106	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  00109	e8 00 00 00 00	 call	 ?Enable@CButton@UI@@QAEXXZ ; UI::CButton::Enable

; 255  : 	rpCoverButton->Show();

  0010e	8b 4b 40	 mov	 ecx, DWORD PTR [ebx+64]
  00111	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 256  : 
; 257  : 	if (pSlot->pSlotButton)

  00116	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00119	85 c0		 test	 eax, eax
  0011b	74 08		 je	 SHORT $LN4@SetCoverBu

; 258  : 	{
; 259  : 		SetTop(pSlot->pSlotButton);

  0011d	50		 push	 eax
  0011e	8b ce		 mov	 ecx, esi
  00120	e8 00 00 00 00	 call	 ?SetTop@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::SetTop
$LN4@SetCoverBu:

; 260  : 	}
; 261  : }

  00125	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00128	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012f	59		 pop	 ecx
  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
  00132	5b		 pop	 ebx
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z$0:
  00000	68 20 01 00 00	 push	 288			; 00000120H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z ENDP	; UI::CSlotWindow::SetCoverButton
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
_TEXT	SEGMENT
_Slot$ = -112						; size = 92
__Op$2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_this$1$ = 8						; size = 4
__Insert_before$3 = 8					; size = 4
_dwIndex$ = 8						; size = 4
__Where$1$ = 12						; size = 4
__Insert_after$4 = 12					; size = 4
_ixPosition$ = 12					; size = 4
_iyPosition$ = 16					; size = 4
_ixCellSize$ = 20					; size = 4
_iyCellSize$ = 24					; size = 4
?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z PROC		; UI::CSlotWindow::AppendSlot, COMDAT
; _this$ = ecx

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 64	 sub	 esp, 100		; 00000064H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	0f 57 c0	 xorps	 xmm0, xmm0

; 214  : 	TSlot Slot;
; 215  : 	Slot.pInstance = NULL;

  0002d	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+52], 0

; 216  : 	Slot.pNumberLine = NULL;
; 217  : 	Slot.pCoverButton = NULL;
; 218  : 	Slot.pSlotButton = NULL;
; 219  : 	Slot.pSignImage = NULL;
; 220  : 	Slot.pFinishCoolTimeEffect = NULL;
; 221  : #ifdef ENABLE_ACCE_SYSTEM
; 222  : 	memset(Slot.pActiveSlotEffect, 0, sizeof(Slot.pActiveSlotEffect));
; 223  : #endif
; 224  : 	ClearSlot(&Slot);

  00034	8d 45 90	 lea	 eax, DWORD PTR _Slot$[ebp]
  00037	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+56], 0
  0003e	50		 push	 eax
  0003f	0f 11 45 d0	 movups	 XMMWORD PTR _Slot$[ebp+64], xmm0
  00043	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+88], 0
  0004a	66 0f d6 45 e0	 movq	 QWORD PTR _Slot$[ebp+80], xmm0
  0004f	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1014 :         if (_Mysize == max_size()) {

  00054	81 be 90 00 00
	00 28 5c 8f 02	 cmp	 DWORD PTR [esi+144], 42949672 ; 028f5c28H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 225  : 	Slot.dwSlotNumber = dwIndex;

  0005e	8b 45 08	 mov	 eax, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00061	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 225  : 	Slot.dwSlotNumber = dwIndex;

  00067	89 45 94	 mov	 DWORD PTR _Slot$[ebp+4], eax

; 226  : 	Slot.dwCenterSlotNumber = dwIndex;

  0006a	89 45 98	 mov	 DWORD PTR _Slot$[ebp+8], eax

; 227  : 	Slot.ixPosition = ixPosition;

  0006d	8b 45 0c	 mov	 eax, DWORD PTR _ixPosition$[ebp]
  00070	89 45 b0	 mov	 DWORD PTR _Slot$[ebp+32], eax

; 228  : 	Slot.iyPosition = iyPosition;

  00073	8b 45 10	 mov	 eax, DWORD PTR _iyPosition$[ebp]
  00076	89 45 b4	 mov	 DWORD PTR _Slot$[ebp+36], eax

; 229  : 	Slot.ixCellSize = ixCellSize;

  00079	8b 45 14	 mov	 eax, DWORD PTR _ixCellSize$[ebp]
  0007c	89 45 b8	 mov	 DWORD PTR _Slot$[ebp+40], eax

; 230  : 	Slot.iyCellSize = iyCellSize;

  0007f	8b 45 18	 mov	 eax, DWORD PTR _iyCellSize$[ebp]
  00082	89 45 bc	 mov	 DWORD PTR _Slot$[ebp+44], eax

; 231  : 	m_SlotList.push_back(Slot);

  00085	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0008b	89 45 08	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  0008e	89 4d 0c	 mov	 DWORD PTR __Where$1$[ebp], ecx

; 1014 :         if (_Mysize == max_size()) {

  00091	74 6c		 je	 SHORT $LN54@AppendSlot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00093	89 45 ec	 mov	 DWORD PTR __Op$2[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00096	6a 64		 push	 100			; 00000064H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0009f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a6	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  000ab	8b d8		 mov	 ebx, eax

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000ad	8d 75 90	 lea	 esi, DWORD PTR _Slot$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1019 :         ++_Mysize;

  000b0	8b 45 08	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000b3	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000b8	8d 7b 08	 lea	 edi, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000bb	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1019 :         ++_Mysize;

  000bd	ff 40 04	 inc	 DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000c0	8d 45 08	 lea	 eax, DWORD PTR __Insert_before$3[ebp]

; 1020 :         return _Op._Transfer_before(_Where);

  000c3	8b 7d 0c	 mov	 edi, DWORD PTR __Where$1$[ebp]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000c6	50		 push	 eax
  000c7	53		 push	 ebx

; 1020 :         return _Op._Transfer_before(_Where);

  000c8	89 7d 08	 mov	 DWORD PTR __Insert_before$3[ebp], edi

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  000cb	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  000ce	89 75 0c	 mov	 DWORD PTR __Insert_after$4[ebp], esi

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000d1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000d6	8d 45 0c	 lea	 eax, DWORD PTR __Insert_after$4[ebp]
  000d9	50		 push	 eax
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  000e3	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  000e6	83 c4 14	 add	 esp, 20			; 00000014H

; 606  :         _Insert_after->_Next  = _Result;

  000e9	89 1e		 mov	 DWORD PTR [esi], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 232  : }

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c2 14 00	 ret	 20			; 00000014H
$LN54@AppendSlot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1015 :             _Xlength_error("list too long");

  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  00104	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN52@AppendSlot:
  00109	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z ENDP		; UI::CSlotWindow::AppendSlot
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwStyle$ = 8						; size = 4
?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetSlotStyle, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 209  : 	m_dwSlotStyle = dwStyle;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  00006	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 210  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetSlotStyle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotType@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?SetSlotType@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetSlotType, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 204  : 	m_dwSlotType = dwType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 205  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSlotType@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetSlotType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?Destroy@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?Destroy@CSlotWindow@UI@@QAEXXZ PROC			; UI::CSlotWindow::Destroy, COMDAT
; _this$ = ecx

; 1569 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000b	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00011	8b 30		 mov	 esi, DWORD PTR [eax]
  00013	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1570 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00015	0f 84 a7 00 00
	00		 je	 $LN3@Destroy
  0001b	53		 push	 ebx
  0001c	0f 1f 40 00	 npad	 4
$LL4@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 152  :         return this->_Ptr->_Myval;

  00020	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1574 : 		ClearSlot(&rSlot);

  00023	8b cf		 mov	 ecx, edi
  00025	53		 push	 ebx
  00026	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 1575 : 
; 1576 : 		if (rSlot.pNumberLine)

  0002b	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 0d		 je	 SHORT $LN71@Destroy

; 1577 : 		{
; 1578 : 			delete rSlot.pNumberLine;

  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	6a 01		 push	 1
  00036	ff 10		 call	 DWORD PTR [eax]

; 1579 : 			rSlot.pNumberLine = NULL;

  00038	c7 43 38 00 00
	00 00		 mov	 DWORD PTR [ebx+56], 0
$LN71@Destroy:

; 1580 : 		}
; 1581 : 		if (rSlot.pCoverButton)

  0003f	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00042	85 c0		 test	 eax, eax
  00044	74 0c		 je	 SHORT $LN9@Destroy

; 1582 : 		{
; 1583 : 			CWindowManager::Instance().DestroyWindow(rSlot.pCoverButton);

  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN9@Destroy:

; 1584 : 		}
; 1585 : 		if (rSlot.pSlotButton)

  00052	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00055	85 c0		 test	 eax, eax
  00057	74 0c		 je	 SHORT $LN10@Destroy

; 1586 : 		{
; 1587 : 			CWindowManager::Instance().DestroyWindow(rSlot.pSlotButton);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN10@Destroy:

; 1588 : 		}
; 1589 : 		if (rSlot.pSignImage)

  00065	8b 43 48	 mov	 eax, DWORD PTR [ebx+72]
  00068	85 c0		 test	 eax, eax
  0006a	74 0c		 je	 SHORT $LN11@Destroy

; 1590 : 		{
; 1591 : 			CWindowManager::Instance().DestroyWindow(rSlot.pSignImage);

  0006c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN11@Destroy:

; 1592 : 		}
; 1593 : 		if (rSlot.pFinishCoolTimeEffect)

  00078	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0007b	85 c0		 test	 eax, eax
  0007d	74 0c		 je	 SHORT $LN12@Destroy

; 1594 : 		{
; 1595 : 			CWindowManager::Instance().DestroyWindow(rSlot.pFinishCoolTimeEffect);

  0007f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN12@Destroy:

; 1596 : 		}
; 1597 : 
; 1598 : #ifdef ENABLE_ACCE_SYSTEM
; 1599 : 		for (auto& pEff: rSlot.pActiveSlotEffect )

  0008b	8d 7b 50	 lea	 edi, DWORD PTR [ebx+80]
  0008e	83 c3 5c	 add	 ebx, 92			; 0000005cH
  00091	3b fb		 cmp	 edi, ebx
  00093	74 19		 je	 SHORT $LN2@Destroy
$LL7@Destroy:

; 1600 : 			if (pEff)

  00095	8b 07		 mov	 eax, DWORD PTR [edi]
  00097	85 c0		 test	 eax, eax
  00099	74 0c		 je	 SHORT $LN5@Destroy

; 1601 : 				CWindowManager::Instance().DestroyWindow(pEff);

  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN5@Destroy:

; 1596 : 		}
; 1597 : 
; 1598 : #ifdef ENABLE_ACCE_SYSTEM
; 1599 : 		for (auto& pEff: rSlot.pActiveSlotEffect )

  000a7	83 c7 04	 add	 edi, 4
  000aa	3b fb		 cmp	 edi, ebx
  000ac	75 e7		 jne	 SHORT $LL7@Destroy
$LN2@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000ae	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]

; 166  :         this->_Ptr = this->_Ptr->_Next;

  000b1	8b 36		 mov	 esi, DWORD PTR [esi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000b3	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 199  :         return this->_Ptr == _Right._Ptr;

  000b9	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1570 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000bb	0f 85 5f ff ff
	ff		 jne	 $LL4@Destroy
  000c1	5b		 pop	 ebx
$LN3@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  000c2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c5	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  000cb	8b 00		 mov	 eax, DWORD PTR [eax]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000cd	85 c0		 test	 eax, eax
  000cf	74 13		 je	 SHORT $LN49@Destroy
$LL50@Destroy:

; 328  :             _Pnext = _Pnode->_Next;

  000d1	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000d3	6a 64		 push	 100			; 00000064H
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000db	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000de	8b c6		 mov	 eax, esi
  000e0	85 f6		 test	 esi, esi
  000e2	75 ed		 jne	 SHORT $LL50@Destroy
$LN49@Destroy:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000e4	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1607 : 	__DestroyToggleSlotImage();

  000ea	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000ec	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  000ee	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  000f4	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  000f7	c7 87 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+144], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1607 : 	__DestroyToggleSlotImage();

  00101	e8 00 00 00 00	 call	 ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage

; 1608 : 	__DestroySlotEnableEffect();

  00106	8b cf		 mov	 ecx, edi
  00108	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1609 : 	__DestroyBaseImage();

  0010d	8b cf		 mov	 ecx, edi
  0010f	e8 00 00 00 00	 call	 ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyBaseImage

; 1610 : 
; 1611 : 	__Initialize();

  00114	8b cf		 mov	 ecx, edi
  00116	e8 00 00 00 00	 call	 ?__Initialize@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__Initialize
  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi

; 1612 : }

  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
?Destroy@CSlotWindow@UI@@QAEXXZ ENDP			; UI::CSlotWindow::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
__Proxy_allocator$2 = -13				; size = 1
__$EHRec$ = -12						; size = 12
??1CSlotWindow@UI@@UAE@XZ PROC				; UI::CSlotWindow::~CSlotWindow, COMDAT
; _this$ = ecx

; 1620 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSlotWindow@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotWindow@UI@@6B@

; 1621 : 	Destroy();

  0002d	e8 00 00 00 00	 call	 ?Destroy@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 869  :         _Tidy();

  00032	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  00038	e8 00 00 00 00	 call	 ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0003d	8b 87 b4 00 00
	00		 mov	 eax, DWORD PTR [edi+180]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00043	50		 push	 eax
  00044	8d 45 f3	 lea	 eax, DWORD PTR __Proxy_allocator$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00047	c7 87 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+180], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00057	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  0005d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00060	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00063	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00069	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0006b	85 c0		 test	 eax, eax
  0006d	74 14		 je	 SHORT $LN13@CSlotWindo
  0006f	90		 npad	 1
$LL14@CSlotWindo:

; 328  :             _Pnext = _Pnode->_Next;

  00070	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00072	6a 64		 push	 100			; 00000064H
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0007d	8b c6		 mov	 eax, esi
  0007f	85 f6		 test	 esi, esi
  00081	75 ed		 jne	 SHORT $LL14@CSlotWindo
$LN13@CSlotWindo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00083	6a 64		 push	 100			; 00000064H
  00085	ff b7 8c 00 00
	00		 push	 DWORD PTR [edi+140]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00090	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00096	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00099	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0009c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  000a2	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 13		 je	 SHORT $LN32@CSlotWindo
$LL33@CSlotWindo:

; 328  :             _Pnext = _Pnode->_Next;

  000a8	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000aa	6a 0c		 push	 12			; 0000000cH
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b2	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000b5	8b c6		 mov	 eax, esi
  000b7	85 f6		 test	 esi, esi
  000b9	75 ed		 jne	 SHORT $LL33@CSlotWindo
$LN32@CSlotWindo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000bb	6a 0c		 push	 12			; 0000000cH
  000bd	ff b7 84 00 00
	00		 push	 DWORD PTR [edi+132]
  000c3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c8	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1622 : }

  000cb	8b cf		 mov	 ecx, edi
  000cd	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
  000e3	cc		 int	 3
  000e4	cc		 int	 3
  000e5	cc		 int	 3
  000e6	cc		 int	 3
  000e7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSlotWindow@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSlotWindow@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSlotWindow@UI@@UAE@XZ ENDP				; UI::CSlotWindow::~CSlotWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??0CSlotWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
__Newhead$3 = 8						; size = 4
__Newhead$4 = 8						; size = 4
_ppyObject$ = 8						; size = 4
??0CSlotWindow@UI@@QAE@PAU_object@@@Z PROC		; UI::CSlotWindow::CSlotWindow, COMDAT
; _this$ = ecx

; 1615 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx
  00028	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 1614 : CSlotWindow::CSlotWindow(PyObject * ppyObject) : CWindow(ppyObject)

  0002b	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1615 : {

  00033	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CSlotWindow@UI@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00039	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1614 : CSlotWindow::CSlotWindow(PyObject * ppyObject) : CWindow(ppyObject)

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00042	c7 83 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+132], 0
  0004c	c7 83 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+136], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00056	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  0005b	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  0005d	8d 45 08	 lea	 eax, DWORD PTR __Newhead$4[ebp]
  00060	50		 push	 eax
  00061	56		 push	 esi
  00062	89 75 08	 mov	 DWORD PTR __Newhead$4[ebp], esi
  00065	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@KPAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@0@Z ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  0006a	8d 45 08	 lea	 eax, DWORD PTR __Newhead$4[ebp]
  0006d	50		 push	 eax
  0006e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@KPAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@KPAX@0@0@Z ; std::_Construct_in_place<std::_List_node<unsigned long,void *> *,std::_List_node<unsigned long,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  00077	89 b3 84 00 00
	00		 mov	 DWORD PTR [ebx+132], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007d	6a 64		 push	 100			; 00000064H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1615 : {

  0007f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00083	c7 83 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+140], 0
  0008d	c7 83 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+144], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00097	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  0009c	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  0009e	8d 45 08	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  000a1	50		 push	 eax
  000a2	56		 push	 esi
  000a3	89 75 08	 mov	 DWORD PTR __Newhead$3[ebp], esi
  000a6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000ab	8d 45 08	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  000ae	50		 push	 eax
  000af	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000b2	51		 push	 ecx
  000b3	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CSlotWindow::SSlot,void *> *,std::_List_node<UI::CSlotWindow::SSlot,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  000b8	89 b3 8c 00 00
	00		 mov	 DWORD PTR [ebx+140], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1615 : {

  000be	8d bb b4 00 00
	00		 lea	 edi, DWORD PTR [ebx+180]
  000c4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c8	6a 08		 push	 8

; 1092 :     _Container_base12() noexcept : _Myproxy(nullptr) {}

  000ca	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 543  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  000d0	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  000d7	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  000de	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  000e5	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ec	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1102 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  000f1	8b f0		 mov	 esi, eax

; 1103 :         _Construct_in_place(*_New_proxy, this);

  000f3	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  000f6	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]
  000f9	50		 push	 eax
  000fa	56		 push	 esi
  000fb	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
  00100	83 c4 34	 add	 esp, 52			; 00000034H

; 1104 :         _Myproxy            = _New_proxy;

  00103	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1616 : 	__Initialize();

  00105	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1105 :         _New_proxy->_Mycont = this;

  00107	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp

; 1616 : 	__Initialize();

  00109	e8 00 00 00 00	 call	 ?__Initialize@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__Initialize

; 1617 : }

  0010e	8b c3		 mov	 eax, ebx
  00110	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00113	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011a	59		 pop	 ecx
  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5b		 pop	 ebx
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00011	e9 00 00 00 00	 jmp	 ??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ ; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0001f	e9 00 00 00 00	 jmp	 ??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
__ehhandler$??0CSlotWindow@UI@@QAE@PAU_object@@@Z:
  00029	90		 npad	 1
  0002a	90		 npad	 1
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSlotWindow@UI@@QAE@PAU_object@@@Z ENDP		; UI::CSlotWindow::CSlotWindow
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 328  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00017	6a 64		 push	 100			; 00000064H
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00029	6a 64		 push	 100			; 00000064H
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?Type@CSlotWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CSlotWindow@UI@@SAKXZ PROC			; UI::CSlotWindow::Type, COMDAT

; 1339 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CSlotWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1340 : 	static int s_Type = GetCRC32("CSlotWindow", strlen("CSlotWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1341 : 	return s_Type;
; 1342 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1340 : 	static int s_Type = GetCRC32("CSlotWindow", strlen("CSlotWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0b		 push	 11			; 0000000bH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DKKKJBKL@CSlotWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CSlotWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CSlotWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CSlotWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CSlotWindow@UI@@SAKXZ ENDP			; UI::CSlotWindow::Type
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 163  : 			virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 159  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 105  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
