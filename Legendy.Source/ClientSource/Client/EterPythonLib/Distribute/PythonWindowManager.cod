; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_bShowOverInWindowName@@3HA			; g_bShowOverInWindowName
_BSS	SEGMENT
?g_bShowOverInWindowName@@3HA DD 01H DUP (?)		; g_bShowOverInWindowName
_BSS	ENDS
CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??1?$CSingleton@VCWindowManager@UI@@@@UAE@XZ	; CSingleton<UI::CWindowManager>::~CSingleton<UI::CWindowManager>
PUBLIC	??_G?$CSingleton@VCWindowManager@UI@@@@UAEPAXI@Z ; CSingleton<UI::CWindowManager>::`scalar deleting destructor'
PUBLIC	??0CWindowManager@UI@@QAE@XZ			; UI::CWindowManager::CWindowManager
PUBLIC	??1CWindowManager@UI@@UAE@XZ			; UI::CWindowManager::~CWindowManager
PUBLIC	?Destroy@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::Destroy
PUBLIC	?GetAspect@CWindowManager@UI@@QAEMXZ		; UI::CWindowManager::GetAspect
PUBLIC	?SetScreenSize@CWindowManager@UI@@QAEXJJ@Z	; UI::CWindowManager::SetScreenSize
PUBLIC	?SetResolution@CWindowManager@UI@@QAEXHH@Z	; UI::CWindowManager::SetResolution
PUBLIC	?SetMouseHandler@CWindowManager@UI@@QAEXPAU_object@@@Z ; UI::CWindowManager::SetMouseHandler
PUBLIC	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z	; UI::CWindowManager::GetMousePosition
PUBLIC	?IsDragging@CWindowManager@UI@@QAEHXZ		; UI::CWindowManager::IsDragging
PUBLIC	?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
PUBLIC	?SetPickAlways@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::SetPickAlways
PUBLIC	?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterWindow
PUBLIC	?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z ; UI::CWindowManager::RegisterTypeWindow
PUBLIC	?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterSlotWindow
PUBLIC	?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterGridSlotWindow
PUBLIC	?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterTextLine
PUBLIC	?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterMarkBox
PUBLIC	?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterImageBox
PUBLIC	?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterExpandedImageBox
PUBLIC	?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterAniImageBox
PUBLIC	?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterButton
PUBLIC	?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterRadioButton
PUBLIC	?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterToggleButton
PUBLIC	?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterDragButton
PUBLIC	?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterBox
PUBLIC	?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterBar
PUBLIC	?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterLine
PUBLIC	?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterBar3D
PUBLIC	?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ; UI::CWindowManager::RegisterNumberLine
PUBLIC	?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
PUBLIC	?NotifyDestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::NotifyDestroyWindow
PUBLIC	?IsAttaching@CWindowManager@UI@@QAEHXZ		; UI::CWindowManager::IsAttaching
PUBLIC	?GetAttachingType@CWindowManager@UI@@QAEKXZ	; UI::CWindowManager::GetAttachingType
PUBLIC	?GetAttachingIndex@CWindowManager@UI@@QAEKXZ	; UI::CWindowManager::GetAttachingIndex
PUBLIC	?GetAttachingSlotNumber@CWindowManager@UI@@QAEKXZ ; UI::CWindowManager::GetAttachingSlotNumber
PUBLIC	?GetAttachingIconSize@CWindowManager@UI@@QAEXPAE0@Z ; UI::CWindowManager::GetAttachingIconSize
PUBLIC	?AttachIcon@CWindowManager@UI@@QAEXKKKEE@Z	; UI::CWindowManager::AttachIcon
PUBLIC	?DeattachIcon@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::DeattachIcon
PUBLIC	?SetAttachingFlag@CWindowManager@UI@@QAEXH@Z	; UI::CWindowManager::SetAttachingFlag
PUBLIC	?OnceIgnoreMouseLeftButtonUpEvent@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::OnceIgnoreMouseLeftButtonUpEvent
PUBLIC	?LockWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::LockWindow
PUBLIC	?UnlockWindow@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::UnlockWindow
PUBLIC	?ActivateWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::ActivateWindow
PUBLIC	?DeactivateWindow@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::DeactivateWindow
PUBLIC	?GetActivateWindow@CWindowManager@UI@@QAEPAVCWindow@2@XZ ; UI::CWindowManager::GetActivateWindow
PUBLIC	?SetTop@CWindowManager@UI@@QAEXPAVCWindow@2@@Z	; UI::CWindowManager::SetTop
PUBLIC	?SetTopUIWindow@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::SetTopUIWindow
PUBLIC	?ResetCapture@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::ResetCapture
PUBLIC	?Update@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::Update
PUBLIC	?Render@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::Render
PUBLIC	?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z	; UI::CWindowManager::RunMouseMove
PUBLIC	?RunMouseLeftButtonDown@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseLeftButtonDown
PUBLIC	?RunMouseLeftButtonUp@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseLeftButtonUp
PUBLIC	?RunMouseLeftButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseLeftButtonDoubleClick
PUBLIC	?RunMouseRightButtonDown@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseRightButtonDown
PUBLIC	?RunMouseRightButtonUp@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseRightButtonUp
PUBLIC	?RunMouseRightButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseRightButtonDoubleClick
PUBLIC	?RunMouseMiddleButtonDown@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseMiddleButtonDown
PUBLIC	?RunMouseMiddleButtonUp@CWindowManager@UI@@QAEXJJ@Z ; UI::CWindowManager::RunMouseMiddleButtonUp
PUBLIC	?RunMouseWheelScroll@CWindowManager@UI@@QAE_NJJF@Z ; UI::CWindowManager::RunMouseWheelScroll
PUBLIC	?RunIMEUpdate@CWindowManager@UI@@QAEXXZ		; UI::CWindowManager::RunIMEUpdate
PUBLIC	?RunIMETabEvent@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunIMETabEvent
PUBLIC	?RunIMEReturnEvent@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunIMEReturnEvent
PUBLIC	?RunIMEKeyDown@CWindowManager@UI@@QAEXH@Z	; UI::CWindowManager::RunIMEKeyDown
PUBLIC	?RunChangeCodePage@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunChangeCodePage
PUBLIC	?RunOpenCandidate@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunOpenCandidate
PUBLIC	?RunCloseCandidate@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunCloseCandidate
PUBLIC	?RunOpenReading@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunOpenReading
PUBLIC	?RunCloseReading@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunCloseReading
PUBLIC	?RunKeyDown@CWindowManager@UI@@QAEXH@Z		; UI::CWindowManager::RunKeyDown
PUBLIC	?RunKeyUp@CWindowManager@UI@@QAEXH@Z		; UI::CWindowManager::RunKeyUp
PUBLIC	?RunPressEscapeKey@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunPressEscapeKey
PUBLIC	?RunPressExitKey@CWindowManager@UI@@QAEXXZ	; UI::CWindowManager::RunPressExitKey
PUBLIC	?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z	; UI::CWindowManager::SetMousePosition
PUBLIC	?__PickWindow@CWindowManager@UI@@AAEPAVCWindow@2@JJ@Z ; UI::CWindowManager::__PickWindow
PUBLIC	?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z ; UI::CWindowManager::__NewWindow
PUBLIC	?__ClearReserveDeleteWindowList@CWindowManager@UI@@AAEXXZ ; UI::CWindowManager::__ClearReserveDeleteWindowList
PUBLIC	??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
PUBLIC	?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
PUBLIC	?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::~_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Rrotate
PUBLIC	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Extract
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Insert_node
PUBLIC	??1?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE@XZ ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::~map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Insert_node
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >
PUBLIC	??_GCWindowManager@UI@@UAEPAXI@Z		; UI::CWindowManager::`scalar deleting destructor'
PUBLIC	?BuildEmptyTuple@UI@@YAPAU_object@@XZ		; UI::BuildEmptyTuple
PUBLIC	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	??1CLayer@UI@@UAE@XZ				; UI::CLayer::~CLayer
PUBLIC	?IsWindow@CLayer@UI@@UAEHXZ			; UI::CLayer::IsWindow
PUBLIC	??_GCLayer@UI@@UAEPAXI@Z			; UI::CLayer::`scalar deleting destructor'
PUBLIC	??1?$_Tree@V?$_Tset_traits@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >::~_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >,std::_Iterator_base0>::operator++
PUBLIC	??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::insert<std::pair<int,UI::CWindow *>,0>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAVCWindow@UI@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@1@PAU?$_Tree_node@PAVCWindow@UI@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<UI::CWindow *> >::_Erase_tree<std::allocator<std::_Tree_node<UI::CWindow *,void *> > >
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
PUBLIC	??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::_Find_lower_bound<int>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<UI::CWindow *,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<UI::CWindow *,void *> *,std::_Tree_node<UI::CWindow *,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<UI::CWindow *,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *>
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>
PUBLIC	??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
PUBLIC	??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_7?$CSingleton@VCWindowManager@UI@@@@6B@	; CSingleton<UI::CWindowManager>::`vftable'
PUBLIC	??_7CWindowManager@UI@@6B@			; UI::CWindowManager::`vftable'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CSingleton@VCWindowManager@UI@@@@6B@	; CSingleton<UI::CWindowManager>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CSingleton@VCWindowManager@UI@@@@@8	; CSingleton<UI::CWindowManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCWindowManager@UI@@@@8	; CSingleton<UI::CWindowManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCWindowManager@UI@@@@8	; CSingleton<UI::CWindowManager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCWindowManager@UI@@@@8 ; CSingleton<UI::CWindowManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CLayer@UI@@6B@				; UI::CLayer::`vftable'
PUBLIC	?gs_kSet_pkWnd@UI@@3V?$set@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@@std@@A ; UI::gs_kSet_pkWnd
PUBLIC	??_C@_04NBFCGMPH@root@				; `string'
PUBLIC	??_C@_04FOKBGDA@GAME@				; `string'
PUBLIC	??_C@_09CHAIFIBB@UI_BOTTOM@			; `string'
PUBLIC	??_C@_02ELHCDOPK@UI@				; `string'
PUBLIC	??_C@_08MLMBKENF@TOP_MOST@			; `string'
PUBLIC	??_C@_07PCOOAIOD@CURTAIN@			; `string'
PUBLIC	??_C@_02HCKGKOFO@?$CI?$CJ@			; `string'
PUBLIC	??_C@_0P@KLAFPINF@DeattachObject@		; `string'
PUBLIC	??_C@_0BI@MLGEFGCP@?5OverInWindowName?5?$FL?$CFs?$FN?6@ ; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_R4CWindowManager@UI@@6B@			; UI::CWindowManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWindowManager@UI@@@8			; UI::CWindowManager `RTTI Type Descriptor'
PUBLIC	??_R3CWindowManager@UI@@8			; UI::CWindowManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindowManager@UI@@8			; UI::CWindowManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWindowManager@UI@@8		; UI::CWindowManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CLayer@UI@@6B@				; UI::CLayer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLayer@UI@@@8				; UI::CLayer `RTTI Type Descriptor'
PUBLIC	??_R3CLayer@UI@@8				; UI::CLayer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLayer@UI@@8				; UI::CLayer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLayer@UI@@8			; UI::CLayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	??_E?$CSingleton@VCWindowManager@UI@@@@UAEPAXI@Z:PROC ; CSingleton<UI::CWindowManager>::`vector deleting destructor'
EXTRN	??_ECWindowManager@UI@@UAEPAXI@Z:PROC		; UI::CWindowManager::`vector deleting destructor'
EXTRN	??0CWindow@UI@@QAE@PAU_object@@@Z:PROC		; UI::CWindow::CWindow
EXTRN	??1CWindow@UI@@UAE@XZ:PROC			; UI::CWindow::~CWindow
EXTRN	?AddChild@CWindow@UI@@QAEXPAV12@@Z:PROC		; UI::CWindow::AddChild
EXTRN	?Clear@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Clear
EXTRN	?Update@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Update
EXTRN	?Render@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Render
EXTRN	?SetName@CWindow@UI@@QAEXPBD@Z:PROC		; UI::CWindow::SetName
EXTRN	?SetSize@CWindow@UI@@QAEXJJ@Z:PROC		; UI::CWindow::SetSize
EXTRN	?SetPosition@CWindow@UI@@QAEXJJ@Z:PROC		; UI::CWindow::SetPosition
EXTRN	?GetPosition@CWindow@UI@@QAEXPAJ0@Z:PROC	; UI::CWindow::GetPosition
EXTRN	?Show@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Show
EXTRN	?IsRendering@CWindow@UI@@QAE_NXZ:PROC		; UI::CWindow::IsRendering
EXTRN	?GetRoot@CWindow@UI@@QAEPAV12@XZ:PROC		; UI::CWindow::GetRoot
EXTRN	?GetParent@CWindow@UI@@QAEPAV12@XZ:PROC		; UI::CWindow::GetParent
EXTRN	?DeleteChild@CWindow@UI@@QAEXPAV12@@Z:PROC	; UI::CWindow::DeleteChild
EXTRN	?SetTop@CWindow@UI@@QAEXPAV12@@Z:PROC		; UI::CWindow::SetTop
EXTRN	?IsIn@CWindow@UI@@QAE_NJJ@Z:PROC		; UI::CWindow::IsIn
EXTRN	?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z:PROC	; UI::CWindow::PickWindow
EXTRN	?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z:PROC	; UI::CWindow::PickTopWindow
EXTRN	?OnRender@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnRender
EXTRN	?OnUpdate@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnUpdate
EXTRN	?OnSetFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnSetFocus
EXTRN	?OnKillFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnKillFocus
EXTRN	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMouseDrag
EXTRN	?OnMouseOverIn@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverIn
EXTRN	?OnMouseOverOut@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverOut
EXTRN	?OnMouseOver@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOver
EXTRN	?OnDrop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnDrop
EXTRN	?OnTop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnTop
EXTRN	?OnIMEUpdate@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnIMEUpdate
EXTRN	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMoveWindow
EXTRN	?RunIMETabEvent@CWindow@UI@@QAEHXZ:PROC		; UI::CWindow::RunIMETabEvent
EXTRN	?RunIMEReturnEvent@CWindow@UI@@QAEHXZ:PROC	; UI::CWindow::RunIMEReturnEvent
EXTRN	?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z:PROC	; UI::CWindow::RunKeyDownEvent
EXTRN	?RunKeyUpEvent@CWindow@UI@@QAEHH@Z:PROC		; UI::CWindow::RunKeyUpEvent
EXTRN	?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ:PROC	; UI::CWindow::RunPressEscapeKeyEvent
EXTRN	?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ:PROC	; UI::CWindow::RunPressExitKeyEvent
EXTRN	?OnIMETabEvent@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnIMETabEvent
EXTRN	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEReturnEvent
EXTRN	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z:PROC	; UI::CWindow::OnIMEKeyDownEvent
EXTRN	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEChangeCodePage
EXTRN	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenCandidateListEvent
EXTRN	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseCandidateListEvent
EXTRN	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenReadingWndEvent
EXTRN	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseReadingWndEvent
EXTRN	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonUp
EXTRN	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonDown
EXTRN	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonUp
EXTRN	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseRightButtonDoubleClick
EXTRN	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseMiddleButtonDown
EXTRN	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseMiddleButtonUp
EXTRN	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z:PROC	; UI::CWindow::OnMouseWheelScroll
EXTRN	?SetScrollable@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::SetScrollable
EXTRN	?OnKeyDown@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyDown
EXTRN	?OnKeyUp@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyUp
EXTRN	?OnPressEscapeKey@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnPressEscapeKey
EXTRN	?OnPressExitKey@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnPressExitKey
EXTRN	?OnIsType@CWindow@UI@@UAEHK@Z:PROC		; UI::CWindow::OnIsType
EXTRN	??_ECLayer@UI@@UAEPAXI@Z:PROC			; UI::CLayer::`vector deleting destructor'
EXTRN	??0CBox@UI@@QAE@PAU_object@@@Z:PROC		; UI::CBox::CBox
EXTRN	??0CBar@UI@@QAE@PAU_object@@@Z:PROC		; UI::CBar::CBar
EXTRN	??0CLine@UI@@QAE@PAU_object@@@Z:PROC		; UI::CLine::CLine
EXTRN	??0CBar3D@UI@@QAE@PAU_object@@@Z:PROC		; UI::CBar3D::CBar3D
EXTRN	??0CTextLine@UI@@QAE@PAU_object@@@Z:PROC	; UI::CTextLine::CTextLine
EXTRN	??0CNumberLine@UI@@QAE@PAU_object@@@Z:PROC	; UI::CNumberLine::CNumberLine
EXTRN	??0CImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CImageBox::CImageBox
EXTRN	??0CMarkBox@UI@@QAE@PAU_object@@@Z:PROC		; UI::CMarkBox::CMarkBox
EXTRN	??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z:PROC ; UI::CExpandedImageBox::CExpandedImageBox
EXTRN	??0CAniImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CAniImageBox::CAniImageBox
EXTRN	??0CButton@UI@@QAE@PAU_object@@@Z:PROC		; UI::CButton::CButton
EXTRN	??0CRadioButton@UI@@QAE@PAU_object@@@Z:PROC	; UI::CRadioButton::CRadioButton
EXTRN	??0CToggleButton@UI@@QAE@PAU_object@@@Z:PROC	; UI::CToggleButton::CToggleButton
EXTRN	??0CDragButton@UI@@QAE@PAU_object@@@Z:PROC	; UI::CDragButton::CDragButton
EXTRN	??0CSlotWindow@UI@@QAE@PAU_object@@@Z:PROC	; UI::CSlotWindow::CSlotWindow
EXTRN	??0CGridSlotWindow@UI@@QAE@PAU_object@@@Z:PROC	; UI::CGridSlotWindow::CGridSlotWindow
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?gs_poEmptyTuple@UI@@3PAU_object@@A DD 01H DUP (?)	; UI::gs_poEmptyTuple
?gs_kSet_pkWnd@UI@@3V?$set@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@@std@@A DQ 01H DUP (?) ; UI::gs_kSet_pkWnd
_BSS	ENDS
;	COMDAT ?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA
_BSS	SEGMENT
?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA DD 01H DUP (?) ; `UI::CWindowManager::RunMouseMove'::`15'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
?gs_kSet_pkWnd$initializer$@UI@@3P6AXXZA DD FLAT:??__Egs_kSet_pkWnd@UI@@YAXXZ ; UI::gs_kSet_pkWnd$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$r	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLayer@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLayer@UI@@8 DD FLAT:??_R0?AVCLayer@UI@@@8 ; UI::CLayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLayer@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CLayer@UI@@8
rdata$r	SEGMENT
??_R2CLayer@UI@@8 DD FLAT:??_R1A@?0A@EA@CLayer@UI@@8	; UI::CLayer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CLayer@UI@@8
rdata$r	SEGMENT
??_R3CLayer@UI@@8 DD 00H				; UI::CLayer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLayer@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLayer@UI@@@8
data$r	SEGMENT
??_R0?AVCLayer@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CLayer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLayer@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CLayer@UI@@6B@
rdata$r	SEGMENT
??_R4CLayer@UI@@6B@ DD 00H				; UI::CLayer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLayer@UI@@@8
	DD	FLAT:??_R3CLayer@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindowManager@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindowManager@UI@@8 DD FLAT:??_R0?AVCWindowManager@UI@@@8 ; UI::CWindowManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindowManager@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindowManager@UI@@8
rdata$r	SEGMENT
??_R2CWindowManager@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindowManager@UI@@8 ; UI::CWindowManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CWindowManager@UI@@8
rdata$r	SEGMENT
??_R3CWindowManager@UI@@8 DD 00H			; UI::CWindowManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CWindowManager@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindowManager@UI@@@8
data$r	SEGMENT
??_R0?AVCWindowManager@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CWindowManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindowManager@UI@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWindowManager@UI@@6B@
rdata$r	SEGMENT
??_R4CWindowManager@UI@@6B@ DD 00H			; UI::CWindowManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWindowManager@UI@@@8
	DD	FLAT:??_R3CWindowManager@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MLGEFGCP@?5OverInWindowName?5?$FL?$CFs?$FN?6@
CONST	SEGMENT
??_C@_0BI@MLGEFGCP@?5OverInWindowName?5?$FL?$CFs?$FN?6@ DB ' OverInWindow'
	DB	'Name [%s]', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
_DATA	SEGMENT
?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; `UI::CWindowManager::RunMouseMove'::`15'::strPickWindowName
	DB	19 DUP(00H)
	DD	0fH
_DATA	ENDS
;	COMDAT ??_C@_0P@KLAFPINF@DeattachObject@
CONST	SEGMENT
??_C@_0P@KLAFPINF@DeattachObject@ DB 'DeattachObject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCKGKOFO@?$CI?$CJ@
CONST	SEGMENT
??_C@_02HCKGKOFO@?$CI?$CJ@ DB '()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PCOOAIOD@CURTAIN@
CONST	SEGMENT
??_C@_07PCOOAIOD@CURTAIN@ DB 'CURTAIN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLMBKENF@TOP_MOST@
CONST	SEGMENT
??_C@_08MLMBKENF@TOP_MOST@ DB 'TOP_MOST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02ELHCDOPK@UI@
CONST	SEGMENT
??_C@_02ELHCDOPK@UI@ DB 'UI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09CHAIFIBB@UI_BOTTOM@
CONST	SEGMENT
??_C@_09CHAIFIBB@UI_BOTTOM@ DB 'UI_BOTTOM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FOKBGDA@GAME@
CONST	SEGMENT
??_C@_04FOKBGDA@GAME@ DB 'GAME', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBFCGMPH@root@
CONST	SEGMENT
??_C@_04NBFCGMPH@root@ DB 'root', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CLayer@UI@@6B@
CONST	SEGMENT
??_7CLayer@UI@@6B@ DD FLAT:??_R4CLayer@UI@@6B@		; UI::CLayer::`vftable'
	DD	FLAT:??_ECLayer@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CLayer@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCWindowManager@UI@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCWindowManager@UI@@@@@8 ; CSingleton<UI::CWindowManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCWindowManager@UI@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCWindowManager@UI@@@@8 ; CSingleton<UI::CWindowManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCWindowManager@UI@@@@8 DD 00H	; CSingleton<UI::CWindowManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCWindowManager@UI@@@@@8
data$r	SEGMENT
??_R0?AV?$CSingleton@VCWindowManager@UI@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<UI::CWindowManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCWindowManager@UI@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CSingleton@VCWindowManager@UI@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCWindowManager@UI@@@@6B@ DD 00H	; CSingleton<UI::CWindowManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCWindowManager@UI@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCWindowManager@UI@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_7CWindowManager@UI@@6B@
CONST	SEGMENT
??_7CWindowManager@UI@@6B@ DD FLAT:??_R4CWindowManager@UI@@6B@ ; UI::CWindowManager::`vftable'
	DD	FLAT:??_ECWindowManager@UI@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCWindowManager@UI@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCWindowManager@UI@@@@6B@ DD FLAT:??_R4?$CSingleton@VCWindowManager@UI@@@@6B@ ; CSingleton<UI::CWindowManager>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCWindowManager@UI@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z$0
__ehfuncinfo$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBHPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z$2
__ehfuncinfo$??$emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace@U?$pair@HPAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z$1
__ehfuncinfo$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
__ehfuncinfo$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z$2
__ehfuncinfo$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z$1
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
__ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z DD 019930522H
	DD	011H
	DD	FLAT:__unwindtable$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$16
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RunKeyDown@CWindowManager@UI@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RunKeyDown@CWindowManager@UI@@QAEXH@Z$2
__ehfuncinfo$?RunKeyDown@CWindowManager@UI@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RunKeyDown@CWindowManager@UI@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ$0
__ehfuncinfo$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z$0
__ehfuncinfo$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z$0
__ehfuncinfo$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1
__ehfuncinfo$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CWindowManager@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CWindowManager@UI@@QAE@XZ DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$??0CWindowManager@UI@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CWindowManager@UI@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$8
	DD	07H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$9
	DD	07H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$17
	DD	0aH
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$16
	DD	07H
	DD	FLAT:__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$26
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000c	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00013	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0001a	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0001d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00020	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00025	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002a	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00031	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  0003b	8b c1		 mov	 eax, ecx
  0003d	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
_this$ = -8						; size = 4
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000c	89 75 f8	 mov	 DWORD PTR _this$[ebp], esi
  0000f	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  00013	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00016	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  0001a	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4502 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b d0		 mov	 edx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0000e	8b 10		 mov	 edx, DWORD PTR [eax]
$LN6@operator:

; 2144 :         const value_type* _Result = _Bx._Buf;

  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00016	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0001a	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001c	8b 31		 mov	 esi, DWORD PTR [ecx]
$LN11@operator:

; 4129 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  0001e	ff 70 10	 push	 DWORD PTR [eax+16]
  00021	52		 push	 edx
  00022	ff 71 10	 push	 DWORD PTR [ecx+16]
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  0002b	83 c4 10	 add	 esp, 16			; 00000010H

; 4503 :     return _Left.compare(_Right) < 0;

  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	5e		 pop	 esi

; 4504 : }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<UI::CWindow *,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<UI::CWindow *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<UI::CWindow *,void *> *,std::_Tree_node<UI::CWindow *,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<UI::CWindow *,void *> *,std::_Tree_node<UI::CWindow *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<UI::CWindow *,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<UI::CWindow *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::_Find_lower_bound<int>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	7d 07		 jge	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::_Find_lower_bound<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN4@Tree_temp_

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 2c		 push	 44			; 0000002cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN4@Tree_temp_:
  00012	c3		 ret	 0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 2c		 push	 44			; 0000002cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	89 37		 mov	 DWORD PTR [edi], esi

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0000f	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00013	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0001a	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0001d	75 32		 jne	 SHORT $LN12@Find_lower
  0001f	53		 push	 ebx
  00020	8b 5d 0c	 mov	 ebx, DWORD PTR __Keyval$[ebp]
$LL2@Find_lower:

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00023	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00026	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00028	53		 push	 ebx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0002f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00032	84 c0		 test	 al, al
  00034	74 07		 je	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  00036	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00039	33 c0		 xor	 eax, eax

; 1708 :             } else {

  0003b	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  0003d	89 77 08	 mov	 DWORD PTR [edi+8], esi

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	8b 36		 mov	 esi, DWORD PTR [esi]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00047	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0004a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0004e	74 d3		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00050	5b		 pop	 ebx
$LN12@Find_lower:

; 1716 :     }

  00051	8b c7		 mov	 eax, edi
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAVCWindow@UI@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@1@PAU?$_Tree_node@PAVCWindow@UI@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAVCWindow@UI@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@1@PAU?$_Tree_node@PAVCWindow@UI@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<UI::CWindow *> >::_Erase_tree<std::allocator<std::_Tree_node<UI::CWindow *,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAVCWindow@UI@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@1@PAU?$_Tree_node@PAVCWindow@UI@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<UI::CWindow *> >::_Erase_tree<std::allocator<std::_Tree_node<UI::CWindow *,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAVCWindow@UI@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@1@PAU?$_Tree_node@PAVCWindow@UI@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<UI::CWindow *> >::_Erase_tree<std::allocator<std::_Tree_node<UI::CWindow *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 7d 0c	 mov	 edi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00011	75 51		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	56		 push	 esi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 77 08	 push	 DWORD PTR [edi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b f7		 mov	 esi, edi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00027	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0002a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002d	72 0d		 jb	 SHORT $LN21@Erase_tree

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0002f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00030	50		 push	 eax
  00031	ff 76 10	 push	 DWORD PTR [esi+16]
  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00039	83 c4 08	 add	 esp, 8
$LN21@Erase_tree:

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003c	6a 2c		 push	 44			; 0000002cH
  0003e	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00059	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0005c	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00060	74 b6		 je	 SHORT $LL2@Erase_tree
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
$LN3@Erase_tree:
  00064	5f		 pop	 edi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
;	COMDAT ??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
_TEXT	SEGMENT
__Loc$3 = -36						; size = 12
$T4 = -24						; size = 12
$T5 = -20						; size = 8
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Myhead$6 = 12						; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z PROC ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::insert<std::pair<int,UI::CWindow *>,0>, COMDAT
; _this$ = ecx

; 164  :     pair<iterator, bool> insert(_Valty&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 5d 0c	 mov	 ebx, DWORD PTR __Val$[ebp]
  0002d	8d 45 e8	 lea	 eax, DWORD PTR $T4[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::_Find_lower_bound<int>
  00037	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00047	75 0b		 jne	 SHORT $LN6@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00049	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004e	7c 04		 jl	 SHORT $LN6@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00050	32 d2		 xor	 dl, dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1011 :                 return {_Loc._Bound, false};

  00052	eb 76		 jmp	 SHORT $LN61@insert
$LN6@insert:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00054	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  0005b	0f 84 85 00 00
	00		 je	 $LN78@insert

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00061	8b 07		 mov	 eax, DWORD PTR [edi]
  00063	89 45 0c	 mov	 DWORD PTR __Myhead$6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00066	89 7d ec	 mov	 DWORD PTR $T5[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00069	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00072	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00079	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  0007e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  00080	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00082	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  00085	50		 push	 eax
  00086	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00087	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0008a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0008d	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00090	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00095	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  00098	50		 push	 eax
  00099	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000a2	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  000a5	50		 push	 eax
  000a6	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>
  000af	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  000b2	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b8	8b cf		 mov	 ecx, edi
  000ba	56		 push	 esi
  000bb	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp+4]
  000be	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Insert_node
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c6	8b c8		 mov	 ecx, eax
  000c8	b2 01		 mov	 dl, 1
$LN61@insert:
  000ca	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000cd	89 08		 mov	 DWORD PTR [eax], ecx
  000cf	88 50 04	 mov	 BYTE PTR [eax+4], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 166  :     }

  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN78@insert:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  000e6	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN76@insert:
  000eb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z ENDP ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::insert<std::pair<int,UI::CWindow *>,0>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??__FstrPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@YAXXZ
text$yd	SEGMENT
??__FstrPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@YAXXZ PROC ; `UI::CWindowManager::RunMouseMove'::`15'::`dynamic atexit destructor for 'strPickWindowName'', COMDAT

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 3d 14 00 00
	00 10		 cmp	 DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+20, 16 ; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00007	72 22		 jb	 SHORT $LN7@dynamic

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00009	56		 push	 esi
  0000a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A

; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  00010	68 00 00 00 00	 push	 OFFSET ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  00015	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>

; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0001a	a1 14 00 00 00	 mov	 eax, DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+20
  0001f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	50		 push	 eax
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002a	5e		 pop	 esi
$LN7@dynamic:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0002b	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00035	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+20, 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003f	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
  00046	c3		 ret	 0
??__FstrPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@YAXXZ ENDP ; `UI::CWindowManager::RunMouseMove'::`15'::`dynamic atexit destructor for 'strPickWindowName''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 51   :     _Tree_unchecked_const_iterator& operator++() {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00004	8b 16		 mov	 edx, DWORD PTR [esi]
  00006	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00009	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0000d	74 22		 je	 SHORT $LN4@operator

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  0000f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00012	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00016	75 12		 jne	 SHORT $LN19@operator
$LL2@operator:
  00018	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0001b	75 0d		 jne	 SHORT $LN19@operator

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  0001d	89 06		 mov	 DWORD PTR [esi], eax
  0001f	8b d0		 mov	 edx, eax
  00021	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00024	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00028	74 ee		 je	 SHORT $LL2@operator
$LN19@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0002a	89 06		 mov	 DWORD PTR [esi], eax

; 64   :     }

  0002c	8b c6		 mov	 eax, esi
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	c3		 ret	 0
$LN4@operator:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00031	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00033	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00037	75 13		 jne	 SHORT $LN9@operator
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@operator:
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00042	8b f9		 mov	 edi, ecx
  00044	8b c8		 mov	 ecx, eax
  00046	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004a	74 f4		 je	 SHORT $LL8@operator
$LN9@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0004c	89 3e		 mov	 DWORD PTR [esi], edi

; 64   :     }

  0004e	8b c6		 mov	 eax, esi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN7@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN7@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fgs_kSet_pkWnd@UI@@YAXXZ
text$yd	SEGMENT
??__Fgs_kSet_pkWnd@UI@@YAXXZ PROC			; UI::`dynamic atexit destructor for 'gs_kSet_pkWnd'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gs_kSet_pkWnd@UI@@3V?$set@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@@std@@A ; UI::gs_kSet_pkWnd
  00005	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tset_traits@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >::~_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >
??__Fgs_kSet_pkWnd@UI@@YAXXZ ENDP			; UI::`dynamic atexit destructor for 'gs_kSet_pkWnd''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ??__Egs_kSet_pkWnd@UI@@YAXXZ
text$di	SEGMENT
__Pnode$1 = -4						; size = 4
??__Egs_kSet_pkWnd@UI@@YAXXZ PROC			; UI::`dynamic initializer for 'gs_kSet_pkWnd'', COMDAT

; 21   : 	std::set<CWindow*> gs_kSet_pkWnd;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00004	6a 14		 push	 20			; 00000014H
  00006	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0000b	8d 4d fc	 lea	 ecx, DWORD PTR __Pnode$1[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR __Pnode$1[ebp], eax
  00011	51		 push	 ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<UI::CWindow *,void *> *,std::_Tree_node<UI::CWindow *,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00018	8d 45 fc	 lea	 eax, DWORD PTR __Pnode$1[ebp]
  0001b	50		 push	 eax
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  0001f	83 c0 04	 add	 eax, 4
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<UI::CWindow *,void *> *,std::_Tree_node<UI::CWindow *,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00028	8d 45 fc	 lea	 eax, DWORD PTR __Pnode$1[ebp]
  0002b	50		 push	 eax
  0002c	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  0002f	83 c0 08	 add	 eax, 8
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<UI::CWindow *,void *> *,std::_Tree_node<UI::CWindow *,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 21   : 	std::set<CWindow*> gs_kSet_pkWnd;

  0003b	68 00 00 00 00	 push	 OFFSET ??__Fgs_kSet_pkWnd@UI@@YAXXZ ; UI::`dynamic atexit destructor for 'gs_kSet_pkWnd''
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 347  :         _Pnode->_Color = _Black;

  00040	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 348  :         _Pnode->_Isnil = true;

  00044	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  00047	c6 40 0d 01	 mov	 BYTE PTR [eax+13], 1

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  0004e	a3 00 00 00 00	 mov	 DWORD PTR ?gs_kSet_pkWnd@UI@@3V?$set@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@@std@@A, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 21   : 	std::set<CWindow*> gs_kSet_pkWnd;

  00053	e8 00 00 00 00	 call	 _atexit
  00058	83 c4 20	 add	 esp, 32			; 00000020H
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??__Egs_kSet_pkWnd@UI@@YAXXZ ENDP			; UI::`dynamic initializer for 'gs_kSet_pkWnd''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tset_traits@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >::~_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAVCWindow@UI@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAVCWindow@UI@@PAX@std@@@1@PAU?$_Tree_node@PAVCWindow@UI@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<UI::CWindow *> >::_Erase_tree<std::allocator<std::_Tree_node<UI::CWindow *,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 14		 push	 20			; 00000014H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 14		 push	 20			; 00000014H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@PAVCWindow@UI@@U?$less@PAVCWindow@UI@@@std@@V?$allocator@PAVCWindow@UI@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >::~_Tree<std::_Tset_traits<UI::CWindow *,std::less<UI::CWindow *>,std::allocator<UI::CWindow *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ??_GCLayer@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCLayer@UI@@UAEPAXI@Z PROC				; UI::CLayer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 203  : 			virtual ~CLayer() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLayer@UI@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0b		 je	 SHORT $LN7@scalar
  00017	6a 7c		 push	 124			; 0000007cH
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCLayer@UI@@UAEPAXI@Z ENDP				; UI::CLayer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CLayer@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CLayer@UI@@UAEHXZ PROC			; UI::CLayer::IsWindow, COMDAT
; _this$ = ecx

; 205  : 			BOOL IsWindow() { return FALSE; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IsWindow@CLayer@UI@@UAEHXZ ENDP			; UI::CLayer::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ??1CLayer@UI@@UAE@XZ
_TEXT	SEGMENT
??1CLayer@UI@@UAE@XZ PROC				; UI::CLayer::~CLayer, COMDAT
; _this$ = ecx

; 203  : 			virtual ~CLayer() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CLayer@UI@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CLayer@UI@@UAE@XZ ENDP				; UI::CLayer::~CLayer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 159  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 105  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z PROC ; std::_Traits_compare<std::char_traits<char> >, COMDAT

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00006	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00007	8b 5d 14	 mov	 ebx, DWORD PTR __Right_size$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  0000a	56		 push	 esi

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  0000e	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Left_size$[ebp]
  00012	3b df		 cmp	 ebx, edi
  00014	8b cf		 mov	 ecx, edi
  00016	0f 42 cb	 cmovb	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00019	83 e9 04	 sub	 ecx, 4
  0001c	72 13		 jb	 SHORT $LN12@Traits_com
  0001e	66 90		 npad	 2
$LL13@Traits_com:
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	3b 06		 cmp	 eax, DWORD PTR [esi]
  00024	75 10		 jne	 SHORT $LN11@Traits_com
  00026	83 c2 04	 add	 edx, 4
  00029	83 c6 04	 add	 esi, 4
  0002c	83 e9 04	 sub	 ecx, 4
  0002f	73 ef		 jae	 SHORT $LL13@Traits_com
$LN12@Traits_com:
  00031	83 f9 fc	 cmp	 ecx, -4			; fffffffcH
  00034	74 34		 je	 SHORT $LN10@Traits_com
$LN11@Traits_com:
  00036	8a 02		 mov	 al, BYTE PTR [edx]
  00038	3a 06		 cmp	 al, BYTE PTR [esi]
  0003a	75 27		 jne	 SHORT $LN14@Traits_com
  0003c	83 f9 fd	 cmp	 ecx, -3			; fffffffdH
  0003f	74 29		 je	 SHORT $LN10@Traits_com
  00041	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00044	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00047	75 1a		 jne	 SHORT $LN14@Traits_com
  00049	83 f9 fe	 cmp	 ecx, -2			; fffffffeH
  0004c	74 1c		 je	 SHORT $LN10@Traits_com
  0004e	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00051	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00054	75 0d		 jne	 SHORT $LN14@Traits_com
  00056	83 f9 ff	 cmp	 ecx, -1
  00059	74 0f		 je	 SHORT $LN10@Traits_com
  0005b	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  0005e	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00061	74 07		 je	 SHORT $LN10@Traits_com
$LN14@Traits_com:
  00063	1b c0		 sbb	 eax, eax
  00065	83 c8 01	 or	 eax, 1
  00068	eb 02		 jmp	 SHORT $LN15@Traits_com
$LN10@Traits_com:
  0006a	33 c0		 xor	 eax, eax
$LN15@Traits_com:

; 510  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));
; 512  : 
; 513  :     if (_Ans != 0) {

  0006c	85 c0		 test	 eax, eax
  0006e	75 10		 jne	 SHORT $LN4@Traits_com

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00070	3b df		 cmp	 ebx, edi
  00072	76 08		 jbe	 SHORT $LN16@Traits_com

; 522  :         return 1;
; 523  :     }
; 524  : 
; 525  :     return 0;
; 526  : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	83 c8 ff	 or	 eax, -1
  00079	5b		 pop	 ebx
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN16@Traits_com:

; 518  :         return -1;
; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  0007c	1b c0		 sbb	 eax, eax
  0007e	f7 d8		 neg	 eax
$LN4@Traits_com:

; 522  :         return 1;
; 523  :     }
; 524  : 
; 525  :     return 0;
; 526  : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ENDP ; std::_Traits_compare<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?BuildEmptyTuple@UI@@YAPAU_object@@XZ
_TEXT	SEGMENT
?BuildEmptyTuple@UI@@YAPAU_object@@XZ PROC		; UI::BuildEmptyTuple, COMDAT

; 17   : 		Py_INCREF(gs_poEmptyTuple);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gs_poEmptyTuple@UI@@3PAU_object@@A
  00005	ff 00		 inc	 DWORD PTR [eax]

; 18   : 		return gs_poEmptyTuple;
; 19   : 	}

  00007	c3		 ret	 0
?BuildEmptyTuple@UI@@YAPAU_object@@XZ ENDP		; UI::BuildEmptyTuple
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCWindowManager@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWindowManager@UI@@UAEPAXI@Z PROC			; UI::CWindowManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWindowManager@UI@@UAE@XZ ; UI::CWindowManager::~CWindowManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 a0 00 00 00	 push	 160			; 000000a0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCWindowManager@UI@@UAEPAXI@Z ENDP			; UI::CWindowManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 70 04	 push	 DWORD PTR [eax+4]
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0000e	6a 2c		 push	 44			; 0000002cH
  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00017	83 c4 08	 add	 esp, 8
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Loc$3 = -32						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Myhead$ = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[], COMDAT
; _this$ = ecx

; 153  :     mapped_type& operator[](key_type&& _Keyval) { // find element matching _Keyval or insert value-initialized value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0002a	8b 5d 08	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  0002d	8d 45 e0	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00037	8b 75 e8	 mov	 esi, DWORD PTR __Loc$3[ebp+8]
  0003a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0003e	75 11		 jne	 SHORT $LN4@operator
  00040	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00043	50		 push	 eax
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0004a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004d	84 c0		 test	 al, al
  0004f	74 7e		 je	 SHORT $LN3@operator
$LN4@operator:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00051	81 7f 04 5d 74
	d1 05		 cmp	 DWORD PTR [edi+4], 97612893 ; 05d1745dH
  00058	0f 84 88 00 00
	00		 je	 $LN91@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  0005e	8b 07		 mov	 eax, DWORD PTR [edi]
  00060	89 45 08	 mov	 DWORD PTR __Myhead$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00063	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00066	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00068	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0006f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00076	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  0007b	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0007d	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00080	51		 push	 ecx
  00081	8b c4		 mov	 eax, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

  00083	89 18		 mov	 DWORD PTR [eax], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00085	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00092	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00095	50		 push	 eax
  00096	56		 push	 esi
  00097	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0009c	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  0009f	50		 push	 eax
  000a0	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000a9	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000ac	50		 push	 eax
  000ad	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>
  000b6	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  000b9	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000bf	8b cf		 mov	 ecx, edi
  000c1	56		 push	 esi
  000c2	ff 75 e4	 push	 DWORD PTR __Loc$3[ebp+4]
  000c5	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Insert_node
  000cd	8b f0		 mov	 esi, eax
$LN3@operator:

; 154  :         return _Try_emplace(_STD move(_Keyval)).first->_Myval.second;

  000cf	8d 46 28	 lea	 eax, DWORD PTR [esi+40]

; 155  :     }

  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 04 00	 ret	 4
$LN91@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  000e6	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN89@operator:
  000eb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE@XZ PROC ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::~map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::~_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >
??1?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::~map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv1186 = -8						; size = 4
tv1182 = -8						; size = 4
tv1149 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
__Where$ = 8						; size = 4
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Extract, COMDAT
; _this$ = ecx

; 502  :     _Nodeptr _Extract(_Unchecked_const_iterator _Where) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 503  :         _Nodeptr _Erasednode = _Where._Ptr; // node to erase

  00006	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b d9		 mov	 ebx, ecx
  0000d	89 45 fc	 mov	 DWORD PTR __Erasednode$1$[ebp], eax
  00010	57		 push	 edi

; 504  :         ++_Where; // save successor iterator for return

  00011	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  00014	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >,std::_Iterator_base0>::operator++

; 505  : 
; 506  :         _Nodeptr _Fixnode; // the node to recolor as needed
; 507  :         _Nodeptr _Fixnodeparent; // parent of _Fixnode (which may be nil)
; 508  :         _Nodeptr _Pnode = _Erasednode;
; 509  : 
; 510  :         if (_Pnode->_Left->_Isnil) {

  00019	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
  0001c	8b 02		 mov	 eax, DWORD PTR [edx]
  0001e	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00021	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00025	75 18		 jne	 SHORT $LN86@Extract

; 511  :             _Fixnode = _Pnode->_Right; // stitch up right subtree
; 512  :         } else if (_Pnode->_Right->_Isnil) {

  00027	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0002b	74 04		 je	 SHORT $LN7@Extract

; 513  :             _Fixnode = _Pnode->_Left; // stitch up left subtree

  0002d	8b f8		 mov	 edi, eax

; 514  :         } else { // two subtrees, must lift successor node to replace erased

  0002f	eb 0e		 jmp	 SHORT $LN86@Extract
$LN7@Extract:

; 515  :             _Pnode   = _Where._Ptr; // _Pnode is successor node

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]

; 516  :             _Fixnode = _Pnode->_Right; // _Fixnode is only subtree

  00034	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  00037	3b ca		 cmp	 ecx, edx

; 517  :         }
; 518  : 
; 519  :         if (_Pnode == _Erasednode) { // at most one subtree, relink it

  00039	0f 85 8b 00 00
	00		 jne	 $LN9@Extract
$LN86@Extract:

; 520  :             _Fixnodeparent = _Erasednode->_Parent;
; 521  :             if (!_Fixnode->_Isnil) {

  0003f	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00043	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00046	75 03		 jne	 SHORT $LN11@Extract

; 522  :                 _Fixnode->_Parent = _Fixnodeparent; // link up

  00048	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN11@Extract:

; 523  :             }
; 524  : 
; 525  :             if (_Myhead->_Parent == _Erasednode) {

  0004b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004d	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  00050	75 05		 jne	 SHORT $LN12@Extract

; 526  :                 _Myhead->_Parent = _Fixnode; // link down from root

  00052	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00055	eb 0b		 jmp	 SHORT $LN15@Extract
$LN12@Extract:

; 527  :             } else if (_Fixnodeparent->_Left == _Erasednode) {

  00057	39 16		 cmp	 DWORD PTR [esi], edx
  00059	75 04		 jne	 SHORT $LN14@Extract

; 528  :                 _Fixnodeparent->_Left = _Fixnode; // link down to left

  0005b	89 3e		 mov	 DWORD PTR [esi], edi

; 529  :             } else {

  0005d	eb 03		 jmp	 SHORT $LN15@Extract
$LN14@Extract:

; 530  :                 _Fixnodeparent->_Right = _Fixnode; // link down to right

  0005f	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN15@Extract:

; 531  :             }
; 532  : 
; 533  :             if (_Myhead->_Left == _Erasednode) {

  00062	8b 03		 mov	 eax, DWORD PTR [ebx]
  00064	39 10		 cmp	 DWORD PTR [eax], edx
  00066	75 2b		 jne	 SHORT $LN16@Extract

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00068	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0006c	74 04		 je	 SHORT $LN42@Extract
  0006e	8b d6		 mov	 edx, esi
  00070	eb 1c		 jmp	 SHORT $LN48@Extract
$LN42@Extract:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00072	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00074	8b d7		 mov	 edx, edi

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00076	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0007a	75 12		 jne	 SHORT $LN48@Extract
  0007c	0f 1f 40 00	 npad	 4
$LL47@Extract:
  00080	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00082	8b d1		 mov	 edx, ecx
  00084	8b c8		 mov	 ecx, eax
  00086	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0008a	74 f4		 je	 SHORT $LL47@Extract
  0008c	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN48@Extract:

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  0008e	89 10		 mov	 DWORD PTR [eax], edx
  00090	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
$LN16@Extract:

; 535  :                                                   : _Min(_Fixnode); // smallest in relinked subtree
; 536  :             }
; 537  : 
; 538  :             if (_Myhead->_Right == _Erasednode) {

  00093	8b 03		 mov	 eax, DWORD PTR [ebx]
  00095	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00098	75 2b		 jne	 SHORT $LN17@Extract

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  0009a	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0009e	74 0a		 je	 SHORT $LN44@Extract
  000a0	8b ce		 mov	 ecx, esi
  000a2	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000a5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000a8	eb 7c		 jmp	 SHORT $LN55@Extract
$LN44@Extract:

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000aa	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000ad	8b cf		 mov	 ecx, edi

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000af	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000b3	75 0b		 jne	 SHORT $LN52@Extract
$LL51@Extract:

; 444  :             _Pnode = _Pnode->_Right;

  000b5	8b c8		 mov	 ecx, eax
  000b7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ba	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000be	74 f5		 je	 SHORT $LL51@Extract
$LN52@Extract:
  000c0	8b 03		 mov	 eax, DWORD PTR [ebx]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000c2	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN17@Extract:

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000c5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000c8	eb 5c		 jmp	 SHORT $LN55@Extract
$LN9@Extract:

; 543  :             _Erasednode->_Left->_Parent = _Pnode; // link left up

  000ca	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 544  :             _Pnode->_Left               = _Erasednode->_Left; // link successor down

  000cd	8b 02		 mov	 eax, DWORD PTR [edx]
  000cf	89 01		 mov	 DWORD PTR [ecx], eax

; 545  : 
; 546  :             if (_Pnode == _Erasednode->_Right) {

  000d1	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  000d4	75 04		 jne	 SHORT $LN18@Extract

; 547  :                 _Fixnodeparent = _Pnode; // successor is next to erased

  000d6	8b f1		 mov	 esi, ecx

; 548  :             } else { // successor further down, link in place of erased

  000d8	eb 1a		 jmp	 SHORT $LN19@Extract
$LN18@Extract:

; 549  :                 _Fixnodeparent = _Pnode->_Parent; // parent is successor's
; 550  :                 if (!_Fixnode->_Isnil) {

  000da	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  000de	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000e1	75 03		 jne	 SHORT $LN20@Extract

; 551  :                     _Fixnode->_Parent = _Fixnodeparent; // link fix up

  000e3	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN20@Extract:

; 552  :                 }
; 553  : 
; 554  :                 _Fixnodeparent->_Left        = _Fixnode; // link fix down

  000e6	89 3e		 mov	 DWORD PTR [esi], edi

; 555  :                 _Pnode->_Right               = _Erasednode->_Right; // link next down

  000e8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000eb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 556  :                 _Erasednode->_Right->_Parent = _Pnode; // right up

  000ee	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f1	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN19@Extract:

; 557  :             }
; 558  : 
; 559  :             if (_Myhead->_Parent == _Erasednode) {

  000f4	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f6	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  000f9	75 05		 jne	 SHORT $LN21@Extract

; 560  :                 _Myhead->_Parent = _Pnode; // link down from root

  000fb	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000fe	eb 0e		 jmp	 SHORT $LN24@Extract
$LN21@Extract:

; 561  :             } else if (_Erasednode->_Parent->_Left == _Erasednode) {

  00100	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00103	39 10		 cmp	 DWORD PTR [eax], edx
  00105	75 04		 jne	 SHORT $LN23@Extract

; 562  :                 _Erasednode->_Parent->_Left = _Pnode; // link down to left

  00107	89 08		 mov	 DWORD PTR [eax], ecx

; 563  :             } else {

  00109	eb 03		 jmp	 SHORT $LN24@Extract
$LN23@Extract:

; 564  :                 _Erasednode->_Parent->_Right = _Pnode; // link down to right

  0010b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN24@Extract:

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  0010e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00111	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  00114	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00117	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0011a	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  0011d	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 108  :     _Right   = _STD move(_Tmp);

  00120	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  00123	88 50 0c	 mov	 BYTE PTR [eax+12], dl
$LN55@Extract:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 571  :         if (_Erasednode->_Color == _Black) { // erasing black link, must recolor/rebalance tree

  00126	80 fa 01	 cmp	 dl, 1
  00129	0f 85 46 01 00
	00		 jne	 $LN25@Extract

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0012f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00131	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  00134	0f 84 37 01 00
	00		 je	 $LN3@Extract
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Extract:
  00140	80 7f 0c 01	 cmp	 BYTE PTR [edi+12], 1
  00144	89 75 f8	 mov	 DWORD PTR tv1186[ebp], esi
  00147	0f 85 24 01 00
	00		 jne	 $LN3@Extract

; 573  :                 if (_Fixnode == _Fixnodeparent->_Left) { // fixup left subtree

  0014d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014f	3b f9		 cmp	 edi, ecx
  00151	0f 85 a2 00 00
	00		 jne	 $LN26@Extract

; 574  :                     _Pnode = _Fixnodeparent->_Right;

  00157	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 575  :                     if (_Pnode->_Color == _Red) { // rotate red up from right subtree

  0015a	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  0015e	75 43		 jne	 SHORT $LN87@Extract

; 576  :                         _Pnode->_Color         = _Black;

  00160	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00164	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 577  :                         _Fixnodeparent->_Color = _Red;

  00167	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0016b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016d	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00170	8b 01		 mov	 eax, DWORD PTR [ecx]
  00172	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00176	75 03		 jne	 SHORT $LN57@Extract

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00178	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN57@Extract:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0017b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0017e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00181	8b 03		 mov	 eax, DWORD PTR [ebx]
  00183	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00186	75 05		 jne	 SHORT $LN58@Extract

; 469  :             _Myhead->_Parent = _Pnode;

  00188	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0018b	eb 0e		 jmp	 SHORT $LN61@Extract
$LN58@Extract:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  0018d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00190	3b 30		 cmp	 esi, DWORD PTR [eax]
  00192	75 04		 jne	 SHORT $LN60@Extract

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  00194	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :         } else {

  00196	eb 03		 jmp	 SHORT $LN61@Extract
$LN60@Extract:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00198	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN61@Extract:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  0019b	89 31		 mov	 DWORD PTR [ecx], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  0019d	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 578  :                         _Lrotate(_Fixnodeparent);
; 579  :                         _Pnode = _Fixnodeparent->_Right;

  001a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN87@Extract:

; 580  :                     }
; 581  : 
; 582  :                     if (_Pnode->_Isnil) {

  001a3	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001a7	0f 85 b1 00 00
	00		 jne	 $LN2@Extract

; 583  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 584  :                     } else if (_Pnode->_Left->_Color == _Black
; 585  :                                && _Pnode->_Right->_Color == _Black) { // redden right subtree with black children

  001ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  001af	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  001b3	75 0d		 jne	 SHORT $LN89@Extract
  001b5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001b8	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001bc	0f 84 98 00 00
	00		 je	 $LN93@Extract
$LN89@Extract:

; 586  :                         _Pnode->_Color = _Red;
; 587  :                         _Fixnode       = _Fixnodeparent;
; 588  :                     } else { // must rearrange right subtree
; 589  :                         if (_Pnode->_Right->_Color == _Black) { // rotate red up from left sub-subtree

  001c2	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001c5	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001c9	75 13		 jne	 SHORT $LN33@Extract

; 590  :                             _Pnode->_Left->_Color = _Black;

  001cb	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 591  :                             _Pnode->_Color        = _Red;

  001cf	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 592  :                             _Rrotate(_Pnode);

  001d3	51		 push	 ecx
  001d4	8b cb		 mov	 ecx, ebx
  001d6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Rrotate

; 593  :                             _Pnode = _Fixnodeparent->_Right;

  001db	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN33@Extract:

; 594  :                         }
; 595  : 
; 596  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  001de	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  001e1	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 597  :                         _Fixnodeparent->_Color = _Black;

  001e4	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 598  :                         _Pnode->_Right->_Color = _Black;

  001e8	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 599  :                         _Lrotate(_Fixnodeparent);

  001eb	8b cb		 mov	 ecx, ebx
  001ed	56		 push	 esi
  001ee	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  001f2	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Lrotate

; 600  :                         break; // tree now recolored/rebalanced

  001f7	eb 78		 jmp	 SHORT $LN3@Extract
$LN26@Extract:

; 601  :                     }
; 602  :                 } else { // fixup right subtree
; 603  :                     _Pnode = _Fixnodeparent->_Left;
; 604  :                     if (_Pnode->_Color == _Red) { // rotate red up from left subtree

  001f9	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  001fd	75 44		 jne	 SHORT $LN88@Extract

; 605  :                         _Pnode->_Color         = _Black;

  001ff	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00203	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 606  :                         _Fixnodeparent->_Color = _Red;

  00205	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00209	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0020c	89 06		 mov	 DWORD PTR [esi], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0020e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00211	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00215	75 03		 jne	 SHORT $LN64@Extract

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00217	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN64@Extract:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0021a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0021d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00220	8b 03		 mov	 eax, DWORD PTR [ebx]
  00222	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00225	75 05		 jne	 SHORT $LN65@Extract

; 491  :             _Myhead->_Parent = _Pnode;

  00227	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0022a	eb 0f		 jmp	 SHORT $LN68@Extract
$LN65@Extract:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  0022c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0022f	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00232	75 05		 jne	 SHORT $LN67@Extract

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00234	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  00237	eb 02		 jmp	 SHORT $LN68@Extract
$LN67@Extract:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00239	89 08		 mov	 DWORD PTR [eax], ecx
$LN68@Extract:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0023b	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 499  :         _Wherenode->_Parent = _Pnode;

  0023e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 607  :                         _Rrotate(_Fixnodeparent);
; 608  :                         _Pnode = _Fixnodeparent->_Left;

  00241	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN88@Extract:

; 609  :                     }
; 610  : 
; 611  :                     if (_Pnode->_Isnil) {

  00243	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00247	75 15		 jne	 SHORT $LN2@Extract

; 612  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 613  :                     } else if (_Pnode->_Right->_Color == _Black
; 614  :                                && _Pnode->_Left->_Color == _Black) { // redden left subtree with black children

  00249	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0024c	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  00250	75 3a		 jne	 SHORT $LN90@Extract
  00252	8b 01		 mov	 eax, DWORD PTR [ecx]
  00254	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00258	75 32		 jne	 SHORT $LN90@Extract
$LN93@Extract:

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0025a	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0
$LN2@Extract:
  0025e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00260	8b 4d f8	 mov	 ecx, DWORD PTR tv1186[ebp]
  00263	8b f9		 mov	 edi, ecx
  00265	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00268	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0026b	0f 85 cf fe ff
	ff		 jne	 $LL4@Extract
$LN3@Extract:

; 629  :                         break; // tree now recolored/rebalanced
; 630  :                     }
; 631  :                 }
; 632  :             }
; 633  : 
; 634  :             _Fixnode->_Color = _Black; // stopping node is black

  00271	c6 47 0c 01	 mov	 BYTE PTR [edi+12], 1
$LN25@Extract:

; 635  :         }
; 636  : 
; 637  :         if (0 < _Mysize) {

  00275	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00278	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0027b	85 c9		 test	 ecx, ecx
  0027d	74 04		 je	 SHORT $LN40@Extract

; 638  :             --_Mysize;

  0027f	49		 dec	 ecx
  00280	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN40@Extract:

; 639  :         }
; 640  : 
; 641  :         return _Erasednode;
; 642  :     }

  00283	5f		 pop	 edi
  00284	5e		 pop	 esi
  00285	5b		 pop	 ebx
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 04 00	 ret	 4
$LN90@Extract:

; 615  :                         _Pnode->_Color = _Red;
; 616  :                         _Fixnode       = _Fixnodeparent;
; 617  :                     } else { // must rearrange left subtree
; 618  :                         if (_Pnode->_Left->_Color == _Black) { // rotate red up from right sub-subtree

  0028c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0028e	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00292	75 12		 jne	 SHORT $LN39@Extract

; 619  :                             _Pnode->_Right->_Color = _Black;

  00294	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 620  :                             _Pnode->_Color         = _Red;

  00298	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 621  :                             _Lrotate(_Pnode);

  0029c	51		 push	 ecx
  0029d	8b cb		 mov	 ecx, ebx
  0029f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Lrotate

; 622  :                             _Pnode = _Fixnodeparent->_Left;

  002a4	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN39@Extract:

; 623  :                         }
; 624  : 
; 625  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  002a6	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  002a9	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 626  :                         _Fixnodeparent->_Color = _Black;

  002ac	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 627  :                         _Pnode->_Left->_Color  = _Black;

  002b0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 628  :                         _Rrotate(_Fixnodeparent);

  002b2	8b cb		 mov	 ecx, ebx
  002b4	56		 push	 esi
  002b5	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  002b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Rrotate
  002be	eb b1		 jmp	 SHORT $LN3@Extract
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Rrotate, COMDAT
; _this$ = ecx

; 480  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0000e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Rrotate

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0e		 jne	 SHORT $LN3@Rrotate

; 491  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0002a	89 56 08	 mov	 DWORD PTR [esi+8], edx
  0002d	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN3@Rrotate:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00035	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00038	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003b	75 0e		 jne	 SHORT $LN5@Rrotate

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0003d	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  00040	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00043	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN5@Rrotate:

; 494  :         } else {
; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0004b	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0004d	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00050	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Lrotate, COMDAT
; _this$ = ecx

; 458  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 72 08	 mov	 esi, DWORD PTR [edx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0000a	8b 06		 mov	 eax, DWORD PTR [esi]
  0000c	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Lrotate

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0d		 jne	 SHORT $LN3@Lrotate

; 469  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0002a	89 16		 mov	 DWORD PTR [esi], edx
  0002c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0002f	5e		 pop	 esi
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
$LN3@Lrotate:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	3b 10		 cmp	 edx, DWORD PTR [eax]
  00039	75 0c		 jne	 SHORT $LN5@Lrotate

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  0003b	89 30		 mov	 DWORD PTR [eax], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0003d	89 16		 mov	 DWORD PTR [esi], edx
  0003f	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN5@Lrotate:

; 472  :         } else {
; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00047	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0004a	89 16		 mov	 DWORD PTR [esi], edx
  0004c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0004f	5e		 pop	 esi
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::~_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::~_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$1 = -12						; size = 12
__Val$ = 8						; size = 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove, COMDAT
; _this$ = ecx

; 1602 :     auto remove(const _Ty& _Val) { // erase each element matching _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1536 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  0000b	8d 45 f8	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  0000e	33 d2		 xor	 edx, edx
  00010	89 7d f4	 mov	 DWORD PTR __Op$1[ebp], edi
  00013	89 55 f8	 mov	 DWORD PTR __Op$1[ebp+4], edx
  00016	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax

; 1610 :         const auto _Last         = _My_data._Myhead;

  00019	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1611 :         const size_type _Oldsize = _My_data._Mysize;
; 1612 :         for (auto _First = _Last->_Next; _First != _Last;) {

  0001b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001d	3b c3		 cmp	 eax, ebx
  0001f	74 36		 je	 SHORT $LN7@remove
  00021	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
$LL6@remove:

; 1603 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1613 :             auto _Next = _First->_Next;

  00027	8b 30		 mov	 esi, DWORD PTR [eax]

; 1603 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00029	3b 0a		 cmp	 ecx, DWORD PTR [edx]

; 1614 :             if (_Pred(_First->_Myval)) {

  0002b	75 21		 jne	 SHORT $LN16@remove

; 1547 :             --_List._Mypair._Myval2._Mysize;

  0002d	ff 4f 04	 dec	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00030	8b 10		 mov	 edx, DWORD PTR [eax]

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1549 :             const auto _Prev = _Removed->_Prev;

  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1550 :             _Prev->_Next     = _Next;

  0003b	89 11		 mov	 DWORD PTR [ecx], edx

; 1551 :             _Next->_Prev     = _Prev;

  0003d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1552 : 
; 1553 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1554 :             // mark removed node for IDL to snip out later
; 1555 :             _Removed->_Prev = _Nodeptr();
; 1556 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1557 : 
; 1558 :             *_Tail = _Removed;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00043	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 1559 :             _Tail  = _STD addressof(_Removed->_Next);

  00048	8b 7d f4	 mov	 edi, DWORD PTR __Op$1[ebp]
  0004b	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN16@remove:

; 1618 :             _First = _Next;

  0004e	8b c6		 mov	 eax, esi
  00050	3b f3		 cmp	 esi, ebx
  00052	75 d0		 jne	 SHORT $LL6@remove
  00054	8b 55 f8	 mov	 edx, DWORD PTR __Op$1[ebp+4]
$LN7@remove:

; 1585 :             auto _Target = _Head;

  00057	85 d2		 test	 edx, edx

; 1586 :             while (_Target) {

  00059	74 18		 je	 SHORT $LN21@remove
  0005b	0f 1f 44 00 00	 npad	 5
$LL20@remove:

; 1587 :                 auto _Next = _Target->_Next;

  00060	8b 32		 mov	 esi, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00062	6a 0c		 push	 12			; 0000000cH
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1593 :                 _Target = _Next;

  0006d	8b d6		 mov	 edx, esi
  0006f	85 f6		 test	 esi, esi
  00071	75 ed		 jne	 SHORT $LL20@remove
$LN21@remove:
  00073	5f		 pop	 edi

; 1604 :     }

  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
__Insert_after$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Insert_before$ = 8					; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back, COMDAT
; _this$ = ecx

; 1251 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 1014 :         if (_Mysize == max_size()) {

  0002a	81 7e 04 55 55
	55 15		 cmp	 DWORD PTR [esi+4], 357913941 ; 15555555H

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00031	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1014 :         if (_Mysize == max_size()) {

  00033	74 61		 je	 SHORT $LN38@push_back
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00035	89 75 ec	 mov	 DWORD PTR __Op$2[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00038	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00041	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00048	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  00050	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00052	8d 45 08	 lea	 eax, DWORD PTR __Insert_before$[ebp]

; 1020 :         return _Op._Transfer_before(_Where);

  00055	89 5d 08	 mov	 DWORD PTR __Insert_before$[ebp], ebx

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00058	50		 push	 eax
  00059	57		 push	 edi

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0005a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 1019 :         ++_Mysize;

  0005f	ff 46 04	 inc	 DWORD PTR [esi+4]

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  00062	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00065	89 75 f0	 mov	 DWORD PTR __Insert_after$3[ebp], esi

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00068	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0006d	8d 45 f0	 lea	 eax, DWORD PTR __Insert_after$3[ebp]
  00070	50		 push	 eax
  00071	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  0007a	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  0007d	83 c4 14	 add	 esp, 20			; 00000014H

; 606  :         _Insert_after->_Next  = _Result;

  00080	89 3e		 mov	 DWORD PTR [esi], edi

; 1253 :     }

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
$LN38@push_back:

; 1015 :             _Xlength_error("list too long");

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  0009b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN36@push_back:
  000a0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 328  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?__ClearReserveDeleteWindowList@CWindowManager@UI@@AAEXXZ
_TEXT	SEGMENT
?__ClearReserveDeleteWindowList@CWindowManager@UI@@AAEXXZ PROC ; UI::CWindowManager::__ClearReserveDeleteWindowList, COMDAT
; _this$ = ecx

; 675  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 47 7c	 mov	 eax, DWORD PTR [edi+124]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00007	8b 30		 mov	 esi, DWORD PTR [eax]
  00009	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 676  : 		for (TWindowContainer::iterator itor = m_ReserveDeleteWindowList.begin(); itor != m_ReserveDeleteWindowList.end(); ++itor)

  0000b	74 19		 je	 SHORT $LN3@ClearReser
  0000d	0f 1f 00	 npad	 3
$LL4@ClearReser:

; 677  : 		{
; 678  : 			CWindow * pWin = *itor;
; 679  : #ifdef __WINDOW_LEAK_CHECK__
; 680  : 			gs_kSet_pkWnd.erase(pWin);
; 681  : #endif
; 682  : 			delete pWin;

  00010	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00013	85 c9		 test	 ecx, ecx
  00015	74 06		 je	 SHORT $LN2@ClearReser
  00017	8b 01		 mov	 eax, DWORD PTR [ecx]
  00019	6a 01		 push	 1
  0001b	ff 10		 call	 DWORD PTR [eax]
$LN2@ClearReser:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 47 7c	 mov	 eax, DWORD PTR [edi+124]

; 199  :         return this->_Ptr == _Right._Ptr;

  00022	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 676  : 		for (TWindowContainer::iterator itor = m_ReserveDeleteWindowList.begin(); itor != m_ReserveDeleteWindowList.end(); ++itor)

  00024	75 ea		 jne	 SHORT $LL4@ClearReser
$LN3@ClearReser:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0002f	8b 00		 mov	 eax, DWORD PTR [eax]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00031	85 c0		 test	 eax, eax
  00033	74 13		 je	 SHORT $LN40@ClearReser
$LL41@ClearReser:

; 328  :             _Pnext = _Pnode->_Next;

  00035	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00037	6a 0c		 push	 12			; 0000000cH
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00042	8b c6		 mov	 eax, esi
  00044	85 f6		 test	 esi, esi
  00046	75 ed		 jne	 SHORT $LL41@ClearReser
$LN40@ClearReser:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00048	8b 47 7c	 mov	 eax, DWORD PTR [edi+124]
  0004b	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0004d	8b 47 7c	 mov	 eax, DWORD PTR [edi+124]
  00050	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00053	c7 87 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+128], 0
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 686  : 	}

  0005f	c3		 ret	 0
?__ClearReserveDeleteWindowList@CWindowManager@UI@@AAEXXZ ENDP ; UI::CWindowManager::__ClearReserveDeleteWindowList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
$T2 = 12						; size = 4
$T3 = 12						; size = 4
$T4 = 12						; size = 4
$T5 = 12						; size = 4
$T6 = 12						; size = 4
$T7 = 12						; size = 4
$T8 = 12						; size = 4
$T9 = 12						; size = 4
$T10 = 12						; size = 4
$T11 = 12						; size = 4
$T12 = 12						; size = 4
$T13 = 12						; size = 4
$T14 = 12						; size = 4
$T15 = 12						; size = 4
$T16 = 12						; size = 4
$T17 = 12						; size = 4
$T18 = 12						; size = 4
_dwWndType$ = 12					; size = 4
?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z PROC ; UI::CWindowManager::__NewWindow, COMDAT
; _this$ = ecx

; 107  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 108  : 		switch(dwWndType)

  00022	8b 45 0c	 mov	 eax, DWORD PTR _dwWndType$[ebp]
  00025	48		 dec	 eax
  00026	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00029	0f 87 a3 03 00
	00		 ja	 $LN20@NewWindow
  0002f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN73@NewWindow[eax*4]
$LN4@NewWindow:

; 109  : 		{
; 110  : 			case WT_SLOT:
; 111  : 				return new CSlotWindow(po);

  00036	68 c8 00 00 00	 push	 200			; 000000c8H
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 0c	 mov	 DWORD PTR $T18[ebp], eax
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 c0		 test	 eax, eax
  0004f	0f 84 b0 03 00
	00		 je	 $LN54@NewWindow
  00055	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00058	8b c8		 mov	 ecx, eax
  0005a	e8 00 00 00 00	 call	 ??0CSlotWindow@UI@@QAE@PAU_object@@@Z ; UI::CSlotWindow::CSlotWindow

; 163  : 	}

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
$LN5@NewWindow:

; 112  : 				break;
; 113  : 			case WT_GRIDSLOT:
; 114  : 				return new CGridSlotWindow(po);

  00070	68 dc 00 00 00	 push	 220			; 000000dcH
  00075	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007a	83 c4 04	 add	 esp, 4
  0007d	89 45 0c	 mov	 DWORD PTR $T17[ebp], eax
  00080	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00087	85 c0		 test	 eax, eax
  00089	0f 84 76 03 00
	00		 je	 $LN54@NewWindow
  0008f	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??0CGridSlotWindow@UI@@QAE@PAU_object@@@Z ; UI::CGridSlotWindow::CGridSlotWindow

; 163  : 	}

  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN6@NewWindow:

; 115  : 				break;
; 116  : 			case WT_TEXTLINE:
; 117  : 				return new CTextLine(po);

  000aa	68 f8 00 00 00	 push	 248			; 000000f8H
  000af	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b4	83 c4 04	 add	 esp, 4
  000b7	89 45 0c	 mov	 DWORD PTR $T16[ebp], eax
  000ba	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000c1	85 c0		 test	 eax, eax
  000c3	0f 84 3c 03 00
	00		 je	 $LN54@NewWindow
  000c9	ff 75 08	 push	 DWORD PTR _po$[ebp]
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??0CTextLine@UI@@QAE@PAU_object@@@Z ; UI::CTextLine::CTextLine

; 163  : 	}

  000d3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dd	59		 pop	 ecx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 08 00	 ret	 8
$LN7@NewWindow:

; 118  : 				break;
; 119  : 			case WT_MARKBOX:
; 120  : 				return new CMarkBox(po);

  000e4	68 80 00 00 00	 push	 128			; 00000080H
  000e9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ee	83 c4 04	 add	 esp, 4
  000f1	89 45 0c	 mov	 DWORD PTR $T15[ebp], eax
  000f4	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  000fb	85 c0		 test	 eax, eax
  000fd	0f 84 02 03 00
	00		 je	 $LN54@NewWindow
  00103	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00106	8b c8		 mov	 ecx, eax
  00108	e8 00 00 00 00	 call	 ??0CMarkBox@UI@@QAE@PAU_object@@@Z ; UI::CMarkBox::CMarkBox

; 163  : 	}

  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00117	59		 pop	 ecx
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
$LN8@NewWindow:

; 121  : 				break;
; 122  : 			case WT_IMAGEBOX:
; 123  : 				return new CImageBox(po);

  0011e	68 80 00 00 00	 push	 128			; 00000080H
  00123	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00128	83 c4 04	 add	 esp, 4
  0012b	89 45 0c	 mov	 DWORD PTR $T14[ebp], eax
  0012e	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00135	85 c0		 test	 eax, eax
  00137	0f 84 c8 02 00
	00		 je	 $LN54@NewWindow
  0013d	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00140	8b c8		 mov	 ecx, eax
  00142	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox

; 163  : 	}

  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 08 00	 ret	 8
$LN9@NewWindow:

; 124  : 				break;
; 125  : 			case WT_EXP_IMAGEBOX:
; 126  : 				return new CExpandedImageBox(po);

  00158	68 80 00 00 00	 push	 128			; 00000080H
  0015d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00162	83 c4 04	 add	 esp, 4
  00165	89 45 0c	 mov	 DWORD PTR $T13[ebp], eax
  00168	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  0016f	85 c0		 test	 eax, eax
  00171	0f 84 8e 02 00
	00		 je	 $LN54@NewWindow
  00177	ff 75 08	 push	 DWORD PTR _po$[ebp]
  0017a	8b c8		 mov	 ecx, eax
  0017c	e8 00 00 00 00	 call	 ??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z ; UI::CExpandedImageBox::CExpandedImageBox

; 163  : 	}

  00181	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00184	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0018b	59		 pop	 ecx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c2 08 00	 ret	 8
$LN10@NewWindow:

; 127  : 				break;
; 128  : 			case WT_ANI_IMAGEBOX:
; 129  : 				return new CAniImageBox(po);

  00192	68 8c 00 00 00	 push	 140			; 0000008cH
  00197	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0019c	83 c4 04	 add	 esp, 4
  0019f	89 45 0c	 mov	 DWORD PTR $T12[ebp], eax
  001a2	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  001a9	85 c0		 test	 eax, eax
  001ab	0f 84 54 02 00
	00		 je	 $LN54@NewWindow
  001b1	ff 75 08	 push	 DWORD PTR _po$[ebp]
  001b4	8b c8		 mov	 ecx, eax
  001b6	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox

; 163  : 	}

  001bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c5	59		 pop	 ecx
  001c6	8b e5		 mov	 esp, ebp
  001c8	5d		 pop	 ebp
  001c9	c2 08 00	 ret	 8
$LN11@NewWindow:

; 130  : 				break;
; 131  : 			case WT_BUTTON:
; 132  : 				return new CButton(po);

  001cc	68 0c 01 00 00	 push	 268			; 0000010cH
  001d1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001d6	83 c4 04	 add	 esp, 4
  001d9	89 45 0c	 mov	 DWORD PTR $T11[ebp], eax
  001dc	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  001e3	85 c0		 test	 eax, eax
  001e5	0f 84 1a 02 00
	00		 je	 $LN54@NewWindow
  001eb	ff 75 08	 push	 DWORD PTR _po$[ebp]
  001ee	8b c8		 mov	 ecx, eax
  001f0	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 163  : 	}

  001f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ff	59		 pop	 ecx
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c2 08 00	 ret	 8
$LN12@NewWindow:

; 133  : 				break;
; 134  : 			case WT_RATIOBUTTON:
; 135  : 				return new CRadioButton(po);

  00206	68 0c 01 00 00	 push	 268			; 0000010cH
  0020b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00210	83 c4 04	 add	 esp, 4
  00213	89 45 0c	 mov	 DWORD PTR $T10[ebp], eax
  00216	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  0021d	85 c0		 test	 eax, eax
  0021f	0f 84 e0 01 00
	00		 je	 $LN54@NewWindow
  00225	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00228	8b c8		 mov	 ecx, eax
  0022a	e8 00 00 00 00	 call	 ??0CRadioButton@UI@@QAE@PAU_object@@@Z ; UI::CRadioButton::CRadioButton

; 163  : 	}

  0022f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00232	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00239	59		 pop	 ecx
  0023a	8b e5		 mov	 esp, ebp
  0023c	5d		 pop	 ebp
  0023d	c2 08 00	 ret	 8
$LN13@NewWindow:

; 136  : 				break;
; 137  : 			case WT_TOGGLEBUTTON:
; 138  : 				return new CToggleButton(po);

  00240	68 0c 01 00 00	 push	 268			; 0000010cH
  00245	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0024a	83 c4 04	 add	 esp, 4
  0024d	89 45 0c	 mov	 DWORD PTR $T9[ebp], eax
  00250	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  00257	85 c0		 test	 eax, eax
  00259	0f 84 a6 01 00
	00		 je	 $LN54@NewWindow
  0025f	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00262	8b c8		 mov	 ecx, eax
  00264	e8 00 00 00 00	 call	 ??0CToggleButton@UI@@QAE@PAU_object@@@Z ; UI::CToggleButton::CToggleButton

; 163  : 	}

  00269	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0026c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00273	59		 pop	 ecx
  00274	8b e5		 mov	 esp, ebp
  00276	5d		 pop	 ebp
  00277	c2 08 00	 ret	 8
$LN14@NewWindow:

; 139  : 				break;
; 140  : 			case WT_DRAGBUTTON:
; 141  : 				return new CDragButton(po);

  0027a	68 1c 01 00 00	 push	 284			; 0000011cH
  0027f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00284	83 c4 04	 add	 esp, 4
  00287	89 45 0c	 mov	 DWORD PTR $T8[ebp], eax
  0028a	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00291	85 c0		 test	 eax, eax
  00293	0f 84 6c 01 00
	00		 je	 $LN54@NewWindow
  00299	ff 75 08	 push	 DWORD PTR _po$[ebp]
  0029c	8b c8		 mov	 ecx, eax
  0029e	e8 00 00 00 00	 call	 ??0CDragButton@UI@@QAE@PAU_object@@@Z ; UI::CDragButton::CDragButton

; 163  : 	}

  002a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002ad	59		 pop	 ecx
  002ae	8b e5		 mov	 esp, ebp
  002b0	5d		 pop	 ebp
  002b1	c2 08 00	 ret	 8
$LN15@NewWindow:

; 142  : 				break;
; 143  : 			case WT_BOX:
; 144  : 				return new CBox(po);

  002b4	68 80 00 00 00	 push	 128			; 00000080H
  002b9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002be	83 c4 04	 add	 esp, 4
  002c1	89 45 0c	 mov	 DWORD PTR $T7[ebp], eax
  002c4	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  002cb	85 c0		 test	 eax, eax
  002cd	0f 84 32 01 00
	00		 je	 $LN54@NewWindow
  002d3	ff 75 08	 push	 DWORD PTR _po$[ebp]
  002d6	8b c8		 mov	 ecx, eax
  002d8	e8 00 00 00 00	 call	 ??0CBox@UI@@QAE@PAU_object@@@Z ; UI::CBox::CBox

; 163  : 	}

  002dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002e7	59		 pop	 ecx
  002e8	8b e5		 mov	 esp, ebp
  002ea	5d		 pop	 ebp
  002eb	c2 08 00	 ret	 8
$LN16@NewWindow:

; 145  : 				break;
; 146  : 			case WT_BAR:
; 147  : 				return new CBar(po);

  002ee	68 80 00 00 00	 push	 128			; 00000080H
  002f3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002f8	83 c4 04	 add	 esp, 4
  002fb	89 45 0c	 mov	 DWORD PTR $T6[ebp], eax
  002fe	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00305	85 c0		 test	 eax, eax
  00307	0f 84 f8 00 00
	00		 je	 $LN54@NewWindow
  0030d	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00310	8b c8		 mov	 ecx, eax
  00312	e8 00 00 00 00	 call	 ??0CBar@UI@@QAE@PAU_object@@@Z ; UI::CBar::CBar

; 163  : 	}

  00317	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0031a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00321	59		 pop	 ecx
  00322	8b e5		 mov	 esp, ebp
  00324	5d		 pop	 ebp
  00325	c2 08 00	 ret	 8
$LN17@NewWindow:

; 148  : 				break;
; 149  : 			case WT_LINE:
; 150  : 				return new CLine(po);

  00328	68 80 00 00 00	 push	 128			; 00000080H
  0032d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00332	83 c4 04	 add	 esp, 4
  00335	89 45 0c	 mov	 DWORD PTR $T5[ebp], eax
  00338	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  0033f	85 c0		 test	 eax, eax
  00341	0f 84 be 00 00
	00		 je	 $LN54@NewWindow
  00347	ff 75 08	 push	 DWORD PTR _po$[ebp]
  0034a	8b c8		 mov	 ecx, eax
  0034c	e8 00 00 00 00	 call	 ??0CLine@UI@@QAE@PAU_object@@@Z ; UI::CLine::CLine

; 163  : 	}

  00351	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00354	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0035b	59		 pop	 ecx
  0035c	8b e5		 mov	 esp, ebp
  0035e	5d		 pop	 ebp
  0035f	c2 08 00	 ret	 8
$LN18@NewWindow:

; 151  : 				break;
; 152  : 			case WT_BAR3D:
; 153  : 				return new CBar3D(po);

  00362	68 88 00 00 00	 push	 136			; 00000088H
  00367	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0036c	83 c4 04	 add	 esp, 4
  0036f	89 45 0c	 mov	 DWORD PTR $T4[ebp], eax
  00372	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00379	85 c0		 test	 eax, eax
  0037b	0f 84 84 00 00
	00		 je	 $LN54@NewWindow
  00381	ff 75 08	 push	 DWORD PTR _po$[ebp]
  00384	8b c8		 mov	 ecx, eax
  00386	e8 00 00 00 00	 call	 ??0CBar3D@UI@@QAE@PAU_object@@@Z ; UI::CBar3D::CBar3D

; 163  : 	}

  0038b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0038e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00395	59		 pop	 ecx
  00396	8b e5		 mov	 esp, ebp
  00398	5d		 pop	 ebp
  00399	c2 08 00	 ret	 8
$LN19@NewWindow:

; 154  : 				break;
; 155  : 			case WT_NUMLINE:
; 156  : 				return new CNumberLine(po);

  0039c	68 c0 00 00 00	 push	 192			; 000000c0H
  003a1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003a6	83 c4 04	 add	 esp, 4
  003a9	89 45 0c	 mov	 DWORD PTR $T3[ebp], eax
  003ac	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  003b3	85 c0		 test	 eax, eax
  003b5	74 4e		 je	 SHORT $LN54@NewWindow
  003b7	ff 75 08	 push	 DWORD PTR _po$[ebp]
  003ba	8b c8		 mov	 ecx, eax
  003bc	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAU_object@@@Z ; UI::CNumberLine::CNumberLine

; 163  : 	}

  003c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003cb	59		 pop	 ecx
  003cc	8b e5		 mov	 esp, ebp
  003ce	5d		 pop	 ebp
  003cf	c2 08 00	 ret	 8
$LN20@NewWindow:

; 157  : 				break;
; 158  : 			default:
; 159  : 				assert(!"CWindowManager::__NewWindow");
; 160  : 				break;
; 161  : 		}
; 162  : 		return new CWindow(po);

  003d2	6a 7c		 push	 124			; 0000007cH
  003d4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003d9	83 c4 04	 add	 esp, 4
  003dc	89 45 0c	 mov	 DWORD PTR $T2[ebp], eax
  003df	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
  003e6	85 c0		 test	 eax, eax
  003e8	74 1b		 je	 SHORT $LN54@NewWindow
  003ea	ff 75 08	 push	 DWORD PTR _po$[ebp]
  003ed	8b c8		 mov	 ecx, eax
  003ef	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 163  : 	}

  003f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003fe	59		 pop	 ecx
  003ff	8b e5		 mov	 esp, ebp
  00401	5d		 pop	 ebp
  00402	c2 08 00	 ret	 8
$LN54@NewWindow:
  00405	33 c0		 xor	 eax, eax
  00407	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0040a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00411	59		 pop	 ecx
  00412	8b e5		 mov	 esp, ebp
  00414	5d		 pop	 ebp
  00415	c2 08 00	 ret	 8
$LN73@NewWindow:
  00418	00 00 00 00	 DD	 $LN4@NewWindow
  0041c	00 00 00 00	 DD	 $LN5@NewWindow
  00420	00 00 00 00	 DD	 $LN6@NewWindow
  00424	00 00 00 00	 DD	 $LN7@NewWindow
  00428	00 00 00 00	 DD	 $LN8@NewWindow
  0042c	00 00 00 00	 DD	 $LN9@NewWindow
  00430	00 00 00 00	 DD	 $LN10@NewWindow
  00434	00 00 00 00	 DD	 $LN11@NewWindow
  00438	00 00 00 00	 DD	 $LN12@NewWindow
  0043c	00 00 00 00	 DD	 $LN13@NewWindow
  00440	00 00 00 00	 DD	 $LN14@NewWindow
  00444	00 00 00 00	 DD	 $LN15@NewWindow
  00448	00 00 00 00	 DD	 $LN16@NewWindow
  0044c	00 00 00 00	 DD	 $LN17@NewWindow
  00450	00 00 00 00	 DD	 $LN18@NewWindow
  00454	00 00 00 00	 DD	 $LN19@NewWindow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$0:
  00000	68 c8 00 00 00	 push	 200			; 000000c8H
  00005	8b 45 0c	 mov	 eax, DWORD PTR $T18[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$1:
  00012	68 dc 00 00 00	 push	 220			; 000000dcH
  00017	8b 45 0c	 mov	 eax, DWORD PTR $T17[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00020	83 c4 08	 add	 esp, 8
  00023	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$2:
  00024	68 f8 00 00 00	 push	 248			; 000000f8H
  00029	8b 45 0c	 mov	 eax, DWORD PTR $T16[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$3:
  00036	68 80 00 00 00	 push	 128			; 00000080H
  0003b	8b 45 0c	 mov	 eax, DWORD PTR $T15[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00044	83 c4 08	 add	 esp, 8
  00047	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$4:
  00048	68 80 00 00 00	 push	 128			; 00000080H
  0004d	8b 45 0c	 mov	 eax, DWORD PTR $T14[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
  00059	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$5:
  0005a	68 80 00 00 00	 push	 128			; 00000080H
  0005f	8b 45 0c	 mov	 eax, DWORD PTR $T13[ebp]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00068	83 c4 08	 add	 esp, 8
  0006b	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$6:
  0006c	68 8c 00 00 00	 push	 140			; 0000008cH
  00071	8b 45 0c	 mov	 eax, DWORD PTR $T12[ebp]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007a	83 c4 08	 add	 esp, 8
  0007d	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$7:
  0007e	68 0c 01 00 00	 push	 268			; 0000010cH
  00083	8b 45 0c	 mov	 eax, DWORD PTR $T11[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008c	83 c4 08	 add	 esp, 8
  0008f	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$8:
  00090	68 0c 01 00 00	 push	 268			; 0000010cH
  00095	8b 45 0c	 mov	 eax, DWORD PTR $T10[ebp]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009e	83 c4 08	 add	 esp, 8
  000a1	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$9:
  000a2	68 0c 01 00 00	 push	 268			; 0000010cH
  000a7	8b 45 0c	 mov	 eax, DWORD PTR $T9[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b0	83 c4 08	 add	 esp, 8
  000b3	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$10:
  000b4	68 1c 01 00 00	 push	 284			; 0000011cH
  000b9	8b 45 0c	 mov	 eax, DWORD PTR $T8[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c2	83 c4 08	 add	 esp, 8
  000c5	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$11:
  000c6	68 80 00 00 00	 push	 128			; 00000080H
  000cb	8b 45 0c	 mov	 eax, DWORD PTR $T7[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000d4	83 c4 08	 add	 esp, 8
  000d7	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$12:
  000d8	68 80 00 00 00	 push	 128			; 00000080H
  000dd	8b 45 0c	 mov	 eax, DWORD PTR $T6[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000e6	83 c4 08	 add	 esp, 8
  000e9	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$13:
  000ea	68 80 00 00 00	 push	 128			; 00000080H
  000ef	8b 45 0c	 mov	 eax, DWORD PTR $T5[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000f8	83 c4 08	 add	 esp, 8
  000fb	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$14:
  000fc	68 88 00 00 00	 push	 136			; 00000088H
  00101	8b 45 0c	 mov	 eax, DWORD PTR $T4[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010a	83 c4 08	 add	 esp, 8
  0010d	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$15:
  0010e	68 c0 00 00 00	 push	 192			; 000000c0H
  00113	8b 45 0c	 mov	 eax, DWORD PTR $T3[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0011c	83 c4 08	 add	 esp, 8
  0011f	c3		 ret	 0
__unwindfunclet$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z$16:
  00120	6a 7c		 push	 124			; 0000007cH
  00122	8b 45 0c	 mov	 eax, DWORD PTR $T2[ebp]
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0012b	83 c4 08	 add	 esp, 8
  0012e	c3		 ret	 0
  0012f	cc		 int	 3
  00130	cc		 int	 3
  00131	cc		 int	 3
  00132	cc		 int	 3
  00133	cc		 int	 3
__ehhandler$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z:
  00134	90		 npad	 1
  00135	90		 npad	 1
  00136	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0013a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0013d	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00140	33 c8		 xor	 ecx, eax
  00142	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00147	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z
  0014c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z ENDP ; UI::CWindowManager::__NewWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?__PickWindow@CWindowManager@UI@@AAEPAVCWindow@2@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?__PickWindow@CWindowManager@UI@@AAEPAVCWindow@2@JJ@Z PROC ; UI::CWindowManager::__PickWindow, COMDAT
; _this$ = ecx

; 701  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx

; 702  : 		if (m_pLockWindow)

  00006	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 07		 je	 SHORT $LN8@PickWindow
  0000d	5b		 pop	 ebx

; 725  : 	}

  0000e	5d		 pop	 ebp

; 703  : 		{
; 704  : 			return m_pLockWindow->PickWindow(x, y);

  0000f	e9 00 00 00 00	 jmp	 ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickWindow
$LN8@PickWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00014	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001c	8b 30		 mov	 esi, DWORD PTR [eax]
  0001e	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 707  : 		for (TWindowContainer::iterator itor = m_PickAlwaysWindowList.begin(); itor != m_PickAlwaysWindowList.end(); ++itor)

  00020	74 29		 je	 SHORT $LN97@PickWindow
$LL4@PickWindow:

; 708  : 		{
; 709  : 			CWindow * pWindow = *itor;

  00022	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 710  : 			if (pWindow->IsRendering())

  00025	8b cf		 mov	 ecx, edi
  00027	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0002c	84 c0		 test	 al, al
  0002e	74 11		 je	 SHORT $LN2@PickWindow

; 711  : 			if (pWindow->IsIn(x, y))

  00030	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00033	8b cf		 mov	 ecx, edi
  00035	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00038	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  0003d	84 c0		 test	 al, al
  0003f	75 42		 jne	 SHORT $LN89@PickWindow
$LN2@PickWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00041	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00043	3b b3 84 00 00
	00		 cmp	 esi, DWORD PTR [ebx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 707  : 		for (TWindowContainer::iterator itor = m_PickAlwaysWindowList.begin(); itor != m_PickAlwaysWindowList.end(); ++itor)

  00049	75 d7		 jne	 SHORT $LL4@PickWindow
$LN97@PickWindow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0004b	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1832 :         : current(_STD move(_Right)) {}

  00051	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 715  : 		for (TWindowContainer::reverse_iterator ritor = m_LayerWindowList.rbegin(); ritor != m_LayerWindowList.rend(); ++ritor)

  00053	74 25		 je	 SHORT $LN6@PickWindow
$LL7@PickWindow:

; 718  : 			CWindow * pPickedWindow = pLayer->PickWindow(x, y);

  00055	ff 75 0c	 push	 DWORD PTR _y$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 177  :         const auto _New_ptr = this->_Ptr->_Prev;

  00058	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 717  : 			CWindow * pLayer = *ritor;

  0005b	8b 07		 mov	 eax, DWORD PTR [edi]

; 718  : 			CWindow * pPickedWindow = pLayer->PickWindow(x, y);

  0005d	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00060	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickWindow

; 719  : 
; 720  : 			if (pPickedWindow != pLayer)

  0006a	3b c6		 cmp	 eax, esi
  0006c	75 0e		 jne	 SHORT $LN98@PickWindow
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0006e	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]

; 184  :         this->_Ptr = _New_ptr;

  00074	8b 07		 mov	 eax, DWORD PTR [edi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00076	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 715  : 		for (TWindowContainer::reverse_iterator ritor = m_LayerWindowList.rbegin(); ritor != m_LayerWindowList.rend(); ++ritor)

  00078	75 db		 jne	 SHORT $LL7@PickWindow
$LN6@PickWindow:

; 721  : 				return pPickedWindow;
; 722  : 		}
; 723  : 
; 724  : 		return NULL;

  0007a	33 c0		 xor	 eax, eax
$LN98@PickWindow:
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx

; 725  : 	}

  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
$LN89@PickWindow:

; 712  : 				return pWindow;

  00083	8b c7		 mov	 eax, edi
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx

; 725  : 	}

  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
?__PickWindow@CWindowManager@UI@@AAEPAVCWindow@2@JJ@Z ENDP ; UI::CWindowManager::__PickWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z PROC	; UI::CWindowManager::SetMousePosition, COMDAT
; _this$ = ecx

; 728  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 729  : 		if (m_iHres==0)

  00003	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  00007	74 22		 je	 SHORT $LN1@SetMousePo

; 730  : 			return;
; 731  : 
; 732  : 		if (m_iVres==0)

  00009	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0000d	74 1c		 je	 SHORT $LN1@SetMousePo

; 733  : 			return;
; 734  : 
; 735  : 		m_lMouseX = m_lWidth * x / m_iHres;

  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00012	0f af 45 08	 imul	 eax, DWORD PTR _x$[ebp]
  00016	99		 cdq
  00017	f7 79 10	 idiv	 DWORD PTR [ecx+16]
  0001a	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 736  : 		m_lMouseY = m_lHeight * y / m_iVres;

  0001d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00020	0f af 45 0c	 imul	 eax, DWORD PTR _y$[ebp]
  00024	99		 cdq
  00025	f7 79 0c	 idiv	 DWORD PTR [ecx+12]
  00028	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$LN1@SetMousePo:

; 737  : 	}

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ENDP	; UI::CWindowManager::SetMousePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunPressExitKey@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunPressExitKey@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::RunPressExitKey, COMDAT
; _this$ = ecx

; 1247 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1248 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 09		 je	 SHORT $LN2@RunPressEx

; 1249 : 		{
; 1250 : 			m_pLockWindow->OnPressExitKey();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff a0 8c 00 00
	00		 jmp	 DWORD PTR [eax+140]
$LN2@RunPressEx:

; 1251 : 			return;
; 1252 : 		}
; 1253 : 		if (m_pActiveWindow)

  00013	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00016	85 c9		 test	 ecx, ecx
  00018	74 0c		 je	 SHORT $LN4@RunPressEx

; 1254 : 		{
; 1255 : 			if (m_pActiveWindow->OnPressExitKey())

  0001a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001c	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]
  00022	85 c0		 test	 eax, eax
  00024	75 0c		 jne	 SHORT $LN1@RunPressEx
$LN4@RunPressEx:

; 1256 : 				return;
; 1257 : 		}
; 1258 : 
; 1259 : 		m_pRootWindow->RunPressExitKeyEvent();

  00026	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressExitKeyEvent
$LN1@RunPressEx:
  00032	5e		 pop	 esi

; 1260 : 	}

  00033	c3		 ret	 0
?RunPressExitKey@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::RunPressExitKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunPressEscapeKey@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunPressEscapeKey@CWindowManager@UI@@QAEXXZ PROC	; UI::CWindowManager::RunPressEscapeKey, COMDAT
; _this$ = ecx

; 1236 : 	{

  00000	8b c1		 mov	 eax, ecx

; 1237 : 		if (m_pLockWindow)

  00002	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00005	85 c9		 test	 ecx, ecx
  00007	74 08		 je	 SHORT $LN2@RunPressEs

; 1238 : 		{
; 1239 : 			m_pLockWindow->OnPressEscapeKey();

  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	ff a0 88 00 00
	00		 jmp	 DWORD PTR [eax+136]
$LN2@RunPressEs:

; 1240 : 			return;
; 1241 : 		}
; 1242 : 
; 1243 : 		m_pRootWindow->RunPressEscapeKeyEvent();

  00011	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00017	e9 00 00 00 00	 jmp	 ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressEscapeKeyEvent
?RunPressEscapeKey@CWindowManager@UI@@QAEXXZ ENDP	; UI::CWindowManager::RunPressEscapeKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunKeyUp@CWindowManager@UI@@QAEXH@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
_vkey$ = 8						; size = 4
?RunKeyUp@CWindowManager@UI@@QAEXH@Z PROC		; UI::CWindowManager::RunKeyUp, COMDAT
; _this$ = ecx

; 1208 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000a	8d 4d 08	 lea	 ecx, DWORD PTR _vkey$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1208 : 	{

  0000d	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000e	51		 push	 ecx
  0000f	8d 4d f0	 lea	 ecx, DWORD PTR __Loc$1[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1209 : 		TKeyCaptureWindowMap::iterator itor = m_KeyCaptureWindowMap.find(vkey);

  00012	8d 43 74	 lea	 eax, DWORD PTR [ebx+116]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00015	51		 push	 ecx
  00016	8b c8		 mov	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1209 : 		TKeyCaptureWindowMap::iterator itor = m_KeyCaptureWindowMap.find(vkey);

  00018	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0001b	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::_Find_lower_bound<int>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00020	8b 75 f8	 mov	 esi, DWORD PTR __Loc$1[ebp+8]
  00023	8b 7d 08	 mov	 edi, DWORD PTR _vkey$[ebp]
  00026	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002a	75 3c		 jne	 SHORT $LN2@RunKeyUp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0002c	3b 7e 10	 cmp	 edi, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002f	7c 37		 jl	 SHORT $LN2@RunKeyUp

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00031	39 73 74	 cmp	 DWORD PTR [ebx+116], esi
  00034	8d 43 74	 lea	 eax, DWORD PTR [ebx+116]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1210 : 		if (m_KeyCaptureWindowMap.end() != itor)

  00037	74 2f		 je	 SHORT $LN2@RunKeyUp

; 1211 : 		{
; 1212 : 			CWindow * pKeyCaptureWindow = itor->second;

  00039	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 1213 : 			if (pKeyCaptureWindow)

  0003c	85 c9		 test	 ecx, ecx
  0003e	74 0c		 je	 SHORT $LN3@RunKeyUp

; 1214 : 				pKeyCaptureWindow->OnKeyUp(vkey);

  00040	8b 01		 mov	 eax, DWORD PTR [ecx]
  00042	57		 push	 edi
  00043	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
$LN3@RunKeyUp:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1389 :         _Nodeptr _Erasednode = _Scary->_Extract(_Where); // node to erase

  0004c	56		 push	 esi
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Extract
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00054	6a 18		 push	 24			; 00000018H
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0005c	83 c4 08	 add	 esp, 8
  0005f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1233 : 	}

  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
$LN2@RunKeyUp:

; 1215 : 
; 1216 : 			m_KeyCaptureWindowMap.erase(itor);
; 1217 : 			return;
; 1218 : 		}
; 1219 : 
; 1220 : 		if (m_pLockWindow)

  00068	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 12		 je	 SHORT $LN4@RunKeyUp

; 1221 : 		{
; 1222 : 			m_pLockWindow->OnKeyUp(vkey);

  0006f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00071	57		 push	 edi
  00072	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]
  00078	5f		 pop	 edi

; 1233 : 	}

  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 04 00	 ret	 4
$LN4@RunKeyUp:

; 1223 : 			return;
; 1224 : 		}
; 1225 : 
; 1226 : 		if (m_pActiveWindow)

  00081	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
  00084	85 c9		 test	 ecx, ecx
  00086	74 0d		 je	 SHORT $LN6@RunKeyUp

; 1227 : 		{
; 1228 : 			if (m_pActiveWindow->OnKeyUp(vkey))

  00088	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008a	57		 push	 edi
  0008b	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]
  00091	85 c0		 test	 eax, eax
  00093	75 0c		 jne	 SHORT $LN1@RunKeyUp
$LN6@RunKeyUp:

; 1229 : 				return;
; 1230 : 		}
; 1231 : 
; 1232 : 		m_pRootWindow->RunKeyUpEvent(vkey);

  00095	8b 8b 8c 00 00
	00		 mov	 ecx, DWORD PTR [ebx+140]
  0009b	57		 push	 edi
  0009c	e8 00 00 00 00	 call	 ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunKeyUpEvent
$LN1@RunKeyUp:

; 1233 : 	}

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?RunKeyUp@CWindowManager@UI@@QAEXH@Z ENDP		; UI::CWindowManager::RunKeyUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunKeyDown@CWindowManager@UI@@QAEXH@Z
_TEXT	SEGMENT
__Loc$2 = -44						; size = 12
$T3 = -32						; size = 12
$T4 = -28						; size = 8
$T5 = -28						; size = 8
$T6 = -20						; size = 8
$T7 = -20						; size = 8
__Myhead$8 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_vkey$ = 8						; size = 4
?RunKeyDown@CWindowManager@UI@@QAEXH@Z PROC		; UI::CWindowManager::RunKeyDown, COMDAT
; _this$ = ecx

; 1182 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RunKeyDown@CWindowManager@UI@@QAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 1183 : 		if (m_pLockWindow)

  0002a	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  0002d	8b 75 08	 mov	 esi, DWORD PTR _vkey$[ebp]
  00030	85 c9		 test	 ecx, ecx
  00032	74 36		 je	 SHORT $LN2@RunKeyDown

; 1184 : 		{
; 1185 : 			m_pLockWindow->OnKeyDown(vkey);

  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	56		 push	 esi
  00037	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0003d	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
$LN162@RunKeyDown:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1205 : 	}

  00040	89 45 f0	 mov	 DWORD PTR $T7[ebp+4], eax
  00043	8d 4f 74	 lea	 ecx, DWORD PTR [edi+116]
  00046	8d 45 ec	 lea	 eax, DWORD PTR $T7[ebp]
  00049	89 75 ec	 mov	 DWORD PTR $T7[ebp], esi
  0004c	50		 push	 eax
  0004d	8d 45 e4	 lea	 eax, DWORD PTR $T5[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??$insert@U?$pair@HPAVCWindow@UI@@@std@@$0A@@?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAVCWindow@UI@@@1@@Z ; std::map<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> > >::insert<std::pair<int,UI::CWindow *>,0>
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
$LN2@RunKeyDown:

; 1186 : 			m_KeyCaptureWindowMap.insert(make_pair(vkey, m_pLockWindow));
; 1187 : 			return;
; 1188 : 		}
; 1189 : 		if (m_pActiveWindow)

  0006a	8b 4f 4c	 mov	 ecx, DWORD PTR [edi+76]
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 18		 je	 SHORT $LN5@RunKeyDown

; 1190 : 		if (m_pActiveWindow->IsShow())

  00071	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00075	74 12		 je	 SHORT $LN5@RunKeyDown

; 1191 : 		{
; 1192 : 			if (m_pActiveWindow->OnKeyDown(vkey))

  00077	8b 01		 mov	 eax, DWORD PTR [ecx]
  00079	56		 push	 esi
  0007a	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]
  00080	85 c0		 test	 eax, eax
  00082	74 05		 je	 SHORT $LN5@RunKeyDown
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00084	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1195 : 				return;

  00087	eb b7		 jmp	 SHORT $LN162@RunKeyDown
$LN5@RunKeyDown:

; 1196 : 			}
; 1197 : 		}
; 1198 : 
; 1199 : 		CWindow * pKeyCaptureWindow = m_pRootWindow->RunKeyDownEvent(vkey);

  00089	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]
  0008f	56		 push	 esi
  00090	e8 00 00 00 00	 call	 ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ; UI::CWindow::RunKeyDownEvent
  00095	8b d8		 mov	 ebx, eax

; 1200 : 		if (pKeyCaptureWindow)

  00097	85 db		 test	 ebx, ebx
  00099	0f 84 b7 00 00
	00		 je	 $LN137@RunKeyDown
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0009f	8b 57 7c	 mov	 edx, DWORD PTR [edi+124]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5167 :     return _Find_unchecked1(_First, _Last, _Val, _Memchr_opt{});

  000a2	8b 0a		 mov	 ecx, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 74   :         return _Ptr == _Right._Ptr;

  000a4	3b d1		 cmp	 edx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  000a6	74 13		 je	 SHORT $LN160@RunKeyDown
$LL56@RunKeyDown:

; 5133 :         if (*_First == _Val) {

  000a8	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  000ab	74 06		 je	 SHORT $LN149@RunKeyDown
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 52   :         _Ptr = _Ptr->_Next;

  000ad	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 74   :         return _Ptr == _Right._Ptr;

  000af	3b ca		 cmp	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  000b1	75 f5		 jne	 SHORT $LL56@RunKeyDown
$LN149@RunKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000b3	3b d1		 cmp	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1201 : 		if (m_ReserveDeleteWindowList.end() == std::find(m_ReserveDeleteWindowList.begin(), m_ReserveDeleteWindowList.end(), pKeyCaptureWindow))

  000b5	0f 85 9b 00 00
	00		 jne	 $LN137@RunKeyDown
$LN160@RunKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  000bb	8d 45 ec	 lea	 eax, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000be	89 75 ec	 mov	 DWORD PTR $T6[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  000c1	50		 push	 eax
  000c2	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c5	89 5d f0	 mov	 DWORD PTR $T6[ebp+4], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1203 : 			m_KeyCaptureWindowMap.insert(TKeyCaptureWindowMap::value_type(vkey, pKeyCaptureWindow));

  000c8	83 c7 74	 add	 edi, 116		; 00000074H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  000cb	50		 push	 eax
  000cc	8b cf		 mov	 ecx, edi
  000ce	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::_Find_lower_bound<int>
  000d3	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  000d7	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000da	66 0f d6 45 d4	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000df	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000e3	75 05		 jne	 SHORT $LN91@RunKeyDown
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  000e5	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000e8	7d 6c		 jge	 SHORT $LN137@RunKeyDown
$LN91@RunKeyDown:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  000ea	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  000f1	74 77		 je	 SHORT $LN164@RunKeyDown

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  000f3	8b 07		 mov	 eax, DWORD PTR [edi]
  000f5	89 45 f0	 mov	 DWORD PTR __Myhead$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000f8	89 7d e4	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000fb	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000fd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00104	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0010b	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00110	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00112	8b 45 08	 mov	 eax, DWORD PTR _vkey$[ebp]
  00115	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00118	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$8[ebp]
  0011b	50		 push	 eax
  0011c	56		 push	 esi
  0011d	89 5e 14	 mov	 DWORD PTR [esi+20], ebx
  00120	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00125	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$8[ebp]
  00128	50		 push	 eax
  00129	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00132	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$8[ebp]
  00135	50		 push	 eax
  00136	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * &>
  0013f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  00142	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00148	8b cf		 mov	 ecx, edi
  0014a	56		 push	 esi
  0014b	ff 75 d8	 push	 DWORD PTR __Loc$2[ebp+4]
  0014e	ff 75 d4	 push	 DWORD PTR __Loc$2[ebp]
  00151	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Insert_node
$LN137@RunKeyDown:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1205 : 	}

  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00160	59		 pop	 ecx
  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	5b		 pop	 ebx
  00164	8b e5		 mov	 esp, ebp
  00166	5d		 pop	 ebp
  00167	c2 04 00	 ret	 4
$LN164@RunKeyDown:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  0016a	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN158@RunKeyDown:
  0016f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RunKeyDown@CWindowManager@UI@@QAEXH@Z$2:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?RunKeyDown@CWindowManager@UI@@QAEXH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RunKeyDown@CWindowManager@UI@@QAEXH@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RunKeyDown@CWindowManager@UI@@QAEXH@Z ENDP		; UI::CWindowManager::RunKeyDown
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunCloseReading@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunCloseReading@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::RunCloseReading, COMDAT
; _this$ = ecx

; 1166 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1167 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@RunCloseRe

; 1168 : 		{
; 1169 : 			m_pLockWindow->OnIMECloseReadingWndEvent();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff 60 54	 jmp	 DWORD PTR [eax+84]
$LN2@RunCloseRe:

; 1170 : 			return;
; 1171 : 		}
; 1172 : 		if (m_pActiveWindow)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 12		 je	 SHORT $LN5@RunCloseRe

; 1173 : 		if (m_pActiveWindow->IsRendering())

  00017	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0001c	84 c0		 test	 al, al
  0001e	74 09		 je	 SHORT $LN5@RunCloseRe

; 1174 : 		{
; 1175 : 			if (m_pActiveWindow->OnIMECloseReadingWndEvent())

  00020	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00023	5e		 pop	 esi
  00024	8b 01		 mov	 eax, DWORD PTR [ecx]
  00026	ff 60 54	 jmp	 DWORD PTR [eax+84]
$LN5@RunCloseRe:
  00029	5e		 pop	 esi

; 1176 : 				return;
; 1177 : 		}
; 1178 : 	}

  0002a	c3		 ret	 0
?RunCloseReading@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::RunCloseReading
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunOpenReading@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunOpenReading@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::RunOpenReading, COMDAT
; _this$ = ecx

; 1151 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1152 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@RunOpenRea

; 1153 : 		{
; 1154 : 			m_pLockWindow->OnIMEOpenReadingWndEvent();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff 60 50	 jmp	 DWORD PTR [eax+80]
$LN2@RunOpenRea:

; 1155 : 			return;
; 1156 : 		}
; 1157 : 		if (m_pActiveWindow)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 12		 je	 SHORT $LN5@RunOpenRea

; 1158 : 		if (m_pActiveWindow->IsRendering())

  00017	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0001c	84 c0		 test	 al, al
  0001e	74 09		 je	 SHORT $LN5@RunOpenRea

; 1159 : 		{
; 1160 : 			if (m_pActiveWindow->OnIMEOpenReadingWndEvent())

  00020	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00023	5e		 pop	 esi
  00024	8b 01		 mov	 eax, DWORD PTR [ecx]
  00026	ff 60 50	 jmp	 DWORD PTR [eax+80]
$LN5@RunOpenRea:
  00029	5e		 pop	 esi

; 1161 : 				return;
; 1162 : 		}
; 1163 : 	}

  0002a	c3		 ret	 0
?RunOpenReading@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::RunOpenReading
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunCloseCandidate@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunCloseCandidate@CWindowManager@UI@@QAEXXZ PROC	; UI::CWindowManager::RunCloseCandidate, COMDAT
; _this$ = ecx

; 1136 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1137 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@RunCloseCa

; 1138 : 		{
; 1139 : 			m_pLockWindow->OnIMECloseCandidateListEvent();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff 60 4c	 jmp	 DWORD PTR [eax+76]
$LN2@RunCloseCa:

; 1140 : 			return;
; 1141 : 		}
; 1142 : 		if (m_pActiveWindow)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 12		 je	 SHORT $LN5@RunCloseCa

; 1143 : 		if (m_pActiveWindow->IsRendering())

  00017	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0001c	84 c0		 test	 al, al
  0001e	74 09		 je	 SHORT $LN5@RunCloseCa

; 1144 : 		{
; 1145 : 			if (m_pActiveWindow->OnIMECloseCandidateListEvent())

  00020	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00023	5e		 pop	 esi
  00024	8b 01		 mov	 eax, DWORD PTR [ecx]
  00026	ff 60 4c	 jmp	 DWORD PTR [eax+76]
$LN5@RunCloseCa:
  00029	5e		 pop	 esi

; 1146 : 				return;
; 1147 : 		}
; 1148 : 	}

  0002a	c3		 ret	 0
?RunCloseCandidate@CWindowManager@UI@@QAEXXZ ENDP	; UI::CWindowManager::RunCloseCandidate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunOpenCandidate@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunOpenCandidate@CWindowManager@UI@@QAEXXZ PROC	; UI::CWindowManager::RunOpenCandidate, COMDAT
; _this$ = ecx

; 1121 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1122 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@RunOpenCan

; 1123 : 		{
; 1124 : 			m_pLockWindow->OnIMEOpenCandidateListEvent();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff 60 48	 jmp	 DWORD PTR [eax+72]
$LN2@RunOpenCan:

; 1125 : 			return;
; 1126 : 		}
; 1127 : 		if (m_pActiveWindow)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 12		 je	 SHORT $LN5@RunOpenCan

; 1128 : 		if (m_pActiveWindow->IsRendering())

  00017	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0001c	84 c0		 test	 al, al
  0001e	74 09		 je	 SHORT $LN5@RunOpenCan

; 1129 : 		{
; 1130 : 			if (m_pActiveWindow->OnIMEOpenCandidateListEvent())

  00020	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00023	5e		 pop	 esi
  00024	8b 01		 mov	 eax, DWORD PTR [ecx]
  00026	ff 60 48	 jmp	 DWORD PTR [eax+72]
$LN5@RunOpenCan:
  00029	5e		 pop	 esi

; 1131 : 				return;
; 1132 : 		}
; 1133 : 	}

  0002a	c3		 ret	 0
?RunOpenCandidate@CWindowManager@UI@@QAEXXZ ENDP	; UI::CWindowManager::RunOpenCandidate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunChangeCodePage@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunChangeCodePage@CWindowManager@UI@@QAEXXZ PROC	; UI::CWindowManager::RunChangeCodePage, COMDAT
; _this$ = ecx

; 1112 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1113 : 		if (m_pActiveWindow)

  00003	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00006	85 c9		 test	 ecx, ecx
  00008	74 12		 je	 SHORT $LN4@RunChangeC

; 1114 : 		if (m_pActiveWindow->IsRendering())

  0000a	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0000f	84 c0		 test	 al, al
  00011	74 09		 je	 SHORT $LN4@RunChangeC

; 1115 : 		{
; 1116 : 			if (m_pActiveWindow->OnIMEChangeCodePage())

  00013	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00016	5e		 pop	 esi
  00017	8b 01		 mov	 eax, DWORD PTR [ecx]
  00019	ff 60 44	 jmp	 DWORD PTR [eax+68]
$LN4@RunChangeC:
  0001c	5e		 pop	 esi

; 1117 : 				return;
; 1118 : 		}
; 1119 : 	}

  0001d	c3		 ret	 0
?RunChangeCodePage@CWindowManager@UI@@QAEXXZ ENDP	; UI::CWindowManager::RunChangeCodePage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunIMEKeyDown@CWindowManager@UI@@QAEXH@Z
_TEXT	SEGMENT
_vkey$ = 8						; size = 4
?RunIMEKeyDown@CWindowManager@UI@@QAEXH@Z PROC		; UI::CWindowManager::RunIMEKeyDown, COMDAT
; _this$ = ecx

; 1096 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1097 : 		if (m_pLockWindow)

  00006	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 0a		 je	 SHORT $LN2@RunIMEKeyD

; 1098 : 		{
; 1099 : 			m_pLockWindow->OnKeyDown(vkey);

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	5e		 pop	 esi

; 1106 : 				return;
; 1107 : 		}
; 1108 : 
; 1109 : 	}

  00010	5d		 pop	 ebp

; 1098 : 		{
; 1099 : 			m_pLockWindow->OnKeyDown(vkey);

  00011	ff a0 80 00 00
	00		 jmp	 DWORD PTR [eax+128]
$LN2@RunIMEKeyD:

; 1100 : 			return;
; 1101 : 		}
; 1102 : 		if (m_pActiveWindow)

  00017	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 13		 je	 SHORT $LN5@RunIMEKeyD

; 1103 : 		if (m_pActiveWindow->IsRendering())

  0001e	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00023	84 c0		 test	 al, al
  00025	74 0a		 je	 SHORT $LN5@RunIMEKeyD

; 1104 : 		{
; 1105 : 			if (m_pActiveWindow->OnIMEKeyDownEvent(vkey))

  00027	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  0002a	5e		 pop	 esi
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1106 : 				return;
; 1107 : 		}
; 1108 : 
; 1109 : 	}

  0002d	5d		 pop	 ebp

; 1104 : 		{
; 1105 : 			if (m_pActiveWindow->OnIMEKeyDownEvent(vkey))

  0002e	ff 60 40	 jmp	 DWORD PTR [eax+64]
$LN5@RunIMEKeyD:
  00031	5e		 pop	 esi

; 1106 : 				return;
; 1107 : 		}
; 1108 : 
; 1109 : 	}

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?RunIMEKeyDown@CWindowManager@UI@@QAEXH@Z ENDP		; UI::CWindowManager::RunIMEKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunIMEReturnEvent@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunIMEReturnEvent@CWindowManager@UI@@QAEXXZ PROC	; UI::CWindowManager::RunIMEReturnEvent, COMDAT
; _this$ = ecx

; 1079 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1080 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@RunIMERetu

; 1081 : 		{
; 1082 : 			m_pLockWindow->OnIMEReturnEvent();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff 60 3c	 jmp	 DWORD PTR [eax+60]
$LN2@RunIMERetu:

; 1083 : 			return;
; 1084 : 		}
; 1085 : 		if (m_pActiveWindow)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 15		 je	 SHORT $LN5@RunIMERetu

; 1086 : 		if (m_pActiveWindow->IsRendering())

  00017	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0001c	84 c0		 test	 al, al
  0001e	74 0c		 je	 SHORT $LN5@RunIMERetu

; 1087 : 		{
; 1088 : 			if (m_pActiveWindow->OnIMEReturnEvent())

  00020	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00023	8b 01		 mov	 eax, DWORD PTR [ecx]
  00025	ff 50 3c	 call	 DWORD PTR [eax+60]
  00028	85 c0		 test	 eax, eax
  0002a	75 0c		 jne	 SHORT $LN1@RunIMERetu
$LN5@RunIMERetu:

; 1089 : 				return;
; 1090 : 		}
; 1091 : 
; 1092 : 		m_pRootWindow->RunIMEReturnEvent();

  0002c	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  00032	5e		 pop	 esi
  00033	e9 00 00 00 00	 jmp	 ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMEReturnEvent
$LN1@RunIMERetu:
  00038	5e		 pop	 esi

; 1093 : 	}

  00039	c3		 ret	 0
?RunIMEReturnEvent@CWindowManager@UI@@QAEXXZ ENDP	; UI::CWindowManager::RunIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunIMETabEvent@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
tv453 = -48						; size = 4
_pCurrentWindow$1$ = -44				; size = 4
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?RunIMETabEvent@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::RunIMETabEvent, COMDAT
; _this$ = ecx

; 1034 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx

; 1035 : 		if (m_pLockWindow)

  0002d	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  00030	85 c9		 test	 ecx, ecx
  00032	74 0a		 je	 SHORT $LN5@RunIMETabE

; 1036 : 		{
; 1037 : 			m_pLockWindow->OnIMETabEvent();

  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	ff 50 38	 call	 DWORD PTR [eax+56]

; 1038 : 			return;

  00039	e9 f0 00 00 00	 jmp	 $LN3@RunIMETabE
$LN5@RunIMETabE:

; 1039 : 		}
; 1040 : 		if (m_pActiveWindow)

  0003e	8b 4f 4c	 mov	 ecx, DWORD PTR [edi+76]
  00041	85 c9		 test	 ecx, ecx
  00043	74 19		 je	 SHORT $LN8@RunIMETabE

; 1041 : 		if (m_pActiveWindow->IsRendering())

  00045	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0004a	84 c0		 test	 al, al
  0004c	74 10		 je	 SHORT $LN8@RunIMETabE

; 1042 : 		{
; 1043 : 			if (m_pActiveWindow->OnIMETabEvent())

  0004e	8b 4f 4c	 mov	 ecx, DWORD PTR [edi+76]
  00051	8b 01		 mov	 eax, DWORD PTR [ecx]
  00053	ff 50 38	 call	 DWORD PTR [eax+56]
  00056	85 c0		 test	 eax, eax
  00058	0f 85 d0 00 00
	00		 jne	 $LN3@RunIMETabE
$LN8@RunIMETabE:

; 1044 : 				return;
; 1045 : 		}
; 1046 : 
; 1047 : 		if (!m_pRootWindow->RunIMETabEvent())

  0005e	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]
  00064	e8 00 00 00 00	 call	 ?RunIMETabEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMETabEvent
  00069	85 c0		 test	 eax, eax
  0006b	0f 85 bd 00 00
	00		 jne	 $LN3@RunIMETabE

; 1048 : 		{
; 1049 : 			if (!m_ActiveWindowList.empty())

  00071	39 47 54	 cmp	 DWORD PTR [edi+84], eax
  00074	0f 84 b4 00 00
	00		 je	 $LN3@RunIMETabE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0007a	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1052 : 				ActivateWindow(pWindow);

  0007d	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0007f	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1051 : 				CWindow * pWindow = *(m_ActiveWindowList.begin());

  00081	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 1052 : 				ActivateWindow(pWindow);

  00084	56		 push	 esi
  00085	e8 00 00 00 00	 call	 ?ActivateWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::ActivateWindow

; 1053 : 
; 1054 : 				/////////////////////////////////////////////
; 1055 : 
; 1056 : 				CWindow * pParentWindow = pWindow;
; 1057 : 				CWindow * pCurrentWindow = pWindow->GetParent();

  0008a	8b ce		 mov	 ecx, esi
  0008c	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent
  00091	89 45 d4	 mov	 DWORD PTR _pCurrentWindow$1$[ebp], eax

; 1058 : 
; 1059 : 				DWORD dwMaxLoopCount = 20;
; 1060 : 				for (DWORD i = 0; i < dwMaxLoopCount; ++i)

  00094	33 db		 xor	 ebx, ebx
$LL4@RunIMETabE:

; 1061 : 				{
; 1062 : 					if (!pParentWindow)

  00096	85 f6		 test	 esi, esi
  00098	0f 84 90 00 00
	00		 je	 $LN3@RunIMETabE
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04FOKBGDA@GAME@
  000a3	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000a6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000ad	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000b4	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0

; 2339 :         assign(_Ptr);

  000b8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1065 : 					if (pParentWindow == m_LayerWindowMap["GAME"])

  000bd	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000c0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000c7	50		 push	 eax
  000c8	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  000ce	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  000d3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000da	8b 00		 mov	 eax, DWORD PTR [eax]
  000dc	89 45 d0	 mov	 DWORD PTR tv453[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000df	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp+20]
  000e2	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000e5	72 0d		 jb	 SHORT $LN41@RunIMETabE

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000e7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	50		 push	 eax
  000e9	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  000ec	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000f1	83 c4 08	 add	 esp, 8
$LN41@RunIMETabE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000f4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000fb	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00102	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 1065 : 					if (pParentWindow == m_LayerWindowMap["GAME"])

  00106	3b 75 d0	 cmp	 esi, DWORD PTR tv453[ebp]
  00109	74 18		 je	 SHORT $LN49@RunIMETabE

; 1068 : 						break;
; 1069 : 					}
; 1070 : 
; 1071 : 					pCurrentWindow = pParentWindow;
; 1072 : 					pParentWindow = pCurrentWindow->GetParent();

  0010b	8b ce		 mov	 ecx, esi
  0010d	89 75 d4	 mov	 DWORD PTR _pCurrentWindow$1$[ebp], esi
  00110	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent
  00115	43		 inc	 ebx
  00116	8b f0		 mov	 esi, eax
  00118	83 fb 14	 cmp	 ebx, 20			; 00000014H
  0011b	0f 82 75 ff ff
	ff		 jb	 $LL4@RunIMETabE

; 1065 : 					if (pParentWindow == m_LayerWindowMap["GAME"])

  00121	eb 0b		 jmp	 SHORT $LN3@RunIMETabE
$LN49@RunIMETabE:

; 1066 : 					{
; 1067 : 						SetTop(pCurrentWindow);

  00123	8b 45 d4	 mov	 eax, DWORD PTR _pCurrentWindow$1$[ebp]
  00126	8b cf		 mov	 ecx, edi
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?SetTop@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::SetTop
$LN3@RunIMETabE:

; 1073 : 				}
; 1074 : 			}
; 1075 : 		}
; 1076 : 	}

  0012e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00131	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00138	59		 pop	 ecx
  00139	5f		 pop	 edi
  0013a	5e		 pop	 esi
  0013b	5b		 pop	 ebx
  0013c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013f	33 cd		 xor	 ecx, ebp
  00141	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RunIMETabEvent@CWindowManager@UI@@QAEXXZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RunIMETabEvent@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::RunIMETabEvent
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunIMEUpdate@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?RunIMEUpdate@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::RunIMEUpdate, COMDAT
; _this$ = ecx

; 1018 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1019 : 		if (m_pLockWindow)

  00003	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@RunIMEUpda

; 1020 : 		{
; 1021 : 			m_pLockWindow->OnIMEUpdate();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	5e		 pop	 esi
  0000d	ff 60 30	 jmp	 DWORD PTR [eax+48]
$LN2@RunIMEUpda:

; 1022 : 			return;
; 1023 : 		}
; 1024 : 
; 1025 : 		if (!m_pActiveWindow)

  00010	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00013	85 c9		 test	 ecx, ecx
  00015	74 12		 je	 SHORT $LN1@RunIMEUpda

; 1026 : 			return;
; 1027 : 		if (!m_pActiveWindow->IsRendering())

  00017	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0001c	84 c0		 test	 al, al
  0001e	74 09		 je	 SHORT $LN1@RunIMEUpda

; 1028 : 			return;
; 1029 : 
; 1030 : 		m_pActiveWindow->OnIMEUpdate();

  00020	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00023	5e		 pop	 esi
  00024	8b 01		 mov	 eax, DWORD PTR [ecx]
  00026	ff 60 30	 jmp	 DWORD PTR [eax+48]
$LN1@RunIMEUpda:
  00029	5e		 pop	 esi

; 1031 : 	}

  0002a	c3		 ret	 0
?RunIMEUpdate@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::RunIMEUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseWheelScroll@CWindowManager@UI@@QAE_NJJF@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_wDelta$ = 16						; size = 2
?RunMouseWheelScroll@CWindowManager@UI@@QAE_NJJF@Z PROC	; UI::CWindowManager::RunMouseWheelScroll, COMDAT
; _this$ = ecx

; 1005 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1006 : 		SetMousePosition(x, y);

  00004	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 1007 : 		CWindow * pWin = GetPointWindow();

  00011	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  00014	5e		 pop	 esi

; 1008 : 		if (!pWin)

  00015	85 c9		 test	 ecx, ecx
  00017	75 06		 jne	 SHORT $LN2@RunMouseWh

; 1009 : 			return false;

  00019	32 c0		 xor	 al, al

; 1012 : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
$LN2@RunMouseWh:

; 1010 : 
; 1011 : 		return pWin->OnMouseWheelScroll(wDelta) == TRUE;

  0001f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00021	ff 75 10	 push	 DWORD PTR _wDelta$[ebp]
  00024	ff 50 78	 call	 DWORD PTR [eax+120]
  00027	83 f8 01	 cmp	 eax, 1
  0002a	0f 94 c0	 sete	 al

; 1012 : 	}

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?RunMouseWheelScroll@CWindowManager@UI@@QAE_NJJF@Z ENDP	; UI::CWindowManager::RunMouseWheelScroll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseMiddleButtonUp@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseMiddleButtonUp@CWindowManager@UI@@QAEXJJ@Z PROC ; UI::CWindowManager::RunMouseMiddleButtonUp, COMDAT
; _this$ = ecx

; 982  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 983  : 		SetMousePosition(x, y);

  00004	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 984  : 
; 985  : 		if (m_pMiddleCaptureWindow)

  00011	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00014	85 c9		 test	 ecx, ecx
  00016	74 09		 je	 SHORT $LN3@RunMouseMi

; 986  : 		{
; 987  : 			if (m_pMiddleCaptureWindow->OnMouseMiddleButtonUp())

  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	ff 50 74	 call	 DWORD PTR [eax+116]
  0001d	85 c0		 test	 eax, eax
  0001f	75 0c		 jne	 SHORT $LN6@RunMouseMi
$LN3@RunMouseMi:

; 988  : 			{
; 989  : 				m_pMiddleCaptureWindow = NULL;
; 990  : 				return;
; 991  : 			}
; 992  : 		}
; 993  : 
; 994  : 		CWindow * pWin = GetPointWindow();

  00021	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]

; 995  : 		if (!pWin)

  00024	85 c9		 test	 ecx, ecx
  00026	74 0c		 je	 SHORT $LN1@RunMouseMi

; 996  : 			return;
; 997  : 
; 998  : 		pWin->OnMouseMiddleButtonUp();

  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 50 74	 call	 DWORD PTR [eax+116]
$LN6@RunMouseMi:

; 999  : 		m_pMiddleCaptureWindow = NULL;
; 1000 : 	}

  0002d	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0
$LN1@RunMouseMi:
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?RunMouseMiddleButtonUp@CWindowManager@UI@@QAEXJJ@Z ENDP ; UI::CWindowManager::RunMouseMiddleButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseMiddleButtonDown@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseMiddleButtonDown@CWindowManager@UI@@QAEXJJ@Z PROC ; UI::CWindowManager::RunMouseMiddleButtonDown, COMDAT
; _this$ = ecx

; 969  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 970  : 		SetMousePosition(x, y);

  00004	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 971  : 
; 972  : 		CWindow * pWin = GetPointWindow();

  00011	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]

; 973  : 		if (!pWin)

  00014	85 c9		 test	 ecx, ecx
  00016	74 08		 je	 SHORT $LN1@RunMouseMi

; 974  : 			return;
; 975  : 
; 976  : 		m_pMiddleCaptureWindow = pWin;

  00018	89 4e 70	 mov	 DWORD PTR [esi+112], ecx

; 977  : 
; 978  : 		pWin->OnMouseMiddleButtonDown();

  0001b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001d	ff 50 70	 call	 DWORD PTR [eax+112]
$LN1@RunMouseMi:
  00020	5e		 pop	 esi

; 979  : 	}

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?RunMouseMiddleButtonDown@CWindowManager@UI@@QAEXJJ@Z ENDP ; UI::CWindowManager::RunMouseMiddleButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseRightButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseRightButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z PROC ; UI::CWindowManager::RunMouseRightButtonDoubleClick, COMDAT
; _this$ = ecx

; 958  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  : 		SetMousePosition(x, y);

  00004	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 960  : 
; 961  : 		CWindow * pWin = GetPointWindow();

  00011	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  00014	5e		 pop	 esi

; 962  : 		if (pWin)

  00015	85 c9		 test	 ecx, ecx
  00017	74 05		 je	 SHORT $LN2@RunMouseRi

; 963  : 		{
; 964  : 			pWin->OnMouseRightButtonDoubleClick();

  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	ff 50 6c	 call	 DWORD PTR [eax+108]
$LN2@RunMouseRi:

; 965  : 		}
; 966  : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?RunMouseRightButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z ENDP ; UI::CWindowManager::RunMouseRightButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseRightButtonUp@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseRightButtonUp@CWindowManager@UI@@QAEXJJ@Z PROC	; UI::CWindowManager::RunMouseRightButtonUp, COMDAT
; _this$ = ecx

; 939  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 940  : 		if (m_pRightCaptureWindow)

  00003	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  00006	85 c9		 test	 ecx, ecx
  00008	74 14		 je	 SHORT $LN3@RunMouseRi

; 941  : 		{
; 942  : 			if (m_pRightCaptureWindow->OnMouseRightButtonUp())

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	ff 50 68	 call	 DWORD PTR [eax+104]
  0000f	85 c0		 test	 eax, eax
  00011	74 0b		 je	 SHORT $LN3@RunMouseRi

; 943  : 			{
; 944  : 				m_pRightCaptureWindow = NULL;

  00013	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
  0001a	5e		 pop	 esi

; 955  : 	}

  0001b	c2 08 00	 ret	 8
$LN3@RunMouseRi:

; 945  : 				return;
; 946  : 			}
; 947  : 		}
; 948  : 
; 949  : 		CWindow * pWin = GetPointWindow();

  0001e	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]

; 950  : 		if (pWin)

  00021	85 c9		 test	 ecx, ecx
  00023	74 05		 je	 SHORT $LN4@RunMouseRi

; 951  : 			pWin->OnMouseRightButtonUp();

  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	ff 50 68	 call	 DWORD PTR [eax+104]
$LN4@RunMouseRi:

; 952  : 
; 953  : 		m_pRightCaptureWindow = NULL;
; 954  : 		DeattachIcon();

  0002a	8b ce		 mov	 ecx, esi
  0002c	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
  00033	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon
  00038	5e		 pop	 esi

; 955  : 	}

  00039	c2 08 00	 ret	 8
?RunMouseRightButtonUp@CWindowManager@UI@@QAEXJJ@Z ENDP	; UI::CWindowManager::RunMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseRightButtonDown@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseRightButtonDown@CWindowManager@UI@@QAEXJJ@Z PROC ; UI::CWindowManager::RunMouseRightButtonDown, COMDAT
; _this$ = ecx

; 917  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 918  : 		SetTopUIWindow();

  00006	e8 00 00 00 00	 call	 ?SetTopUIWindow@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::SetTopUIWindow

; 919  : 
; 920  : 		///////////////////////////////////////////////////////////////////////////////////////////
; 921  : 
; 922  : 		SetMousePosition(x, y);

  0000b	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  0000e	8b ce		 mov	 ecx, esi
  00010	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00013	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 923  : 		CWindow * pWin = GetPointWindow();

  00018	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]

; 924  : 		if (!pWin)

  0001b	85 c9		 test	 ecx, ecx
  0001d	74 23		 je	 SHORT $LN1@RunMouseRi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0001f	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  00022	c1 e8 04	 shr	 eax, 4
  00025	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 928  : 		if (pWin->IsFlag(CWindow::FLAG_ATTACH))

  00027	74 07		 je	 SHORT $LN3@RunMouseRi

; 929  : 			pWin = pWin->GetRoot();

  00029	e8 00 00 00 00	 call	 ?GetRoot@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetRoot
  0002e	8b c8		 mov	 ecx, eax
$LN3@RunMouseRi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00030	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  00033	c1 e8 07	 shr	 eax, 7
  00036	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 932  : 		if (!pWin->IsFlag(CWindow::FLAG_NOT_CAPTURE))

  00038	75 03		 jne	 SHORT $LN4@RunMouseRi

; 933  : 			m_pRightCaptureWindow = pWin;

  0003a	89 4e 6c	 mov	 DWORD PTR [esi+108], ecx
$LN4@RunMouseRi:

; 934  : 
; 935  : 		pWin->OnMouseRightButtonDown();

  0003d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003f	ff 50 64	 call	 DWORD PTR [eax+100]
$LN1@RunMouseRi:
  00042	5e		 pop	 esi

; 936  : 	}

  00043	5d		 pop	 ebp
  00044	c2 08 00	 ret	 8
?RunMouseRightButtonDown@CWindowManager@UI@@QAEXJJ@Z ENDP ; UI::CWindowManager::RunMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseLeftButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseLeftButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z PROC ; UI::CWindowManager::RunMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 906  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 907  : 		SetMousePosition(x, y);

  00004	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 908  : 
; 909  : 		CWindow * pWin = GetPointWindow();

  00011	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  00014	5e		 pop	 esi

; 910  : 		if (!pWin)

  00015	85 c9		 test	 ecx, ecx
  00017	74 05		 je	 SHORT $LN1@RunMouseLe

; 911  : 			return;
; 912  : 
; 913  : 		pWin->OnMouseLeftButtonDoubleClick();

  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	ff 50 60	 call	 DWORD PTR [eax+96]
$LN1@RunMouseLe:

; 914  : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?RunMouseLeftButtonDoubleClick@CWindowManager@UI@@QAEXJJ@Z ENDP ; UI::CWindowManager::RunMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseLeftButtonUp@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseLeftButtonUp@CWindowManager@UI@@QAEXJJ@Z PROC	; UI::CWindowManager::RunMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 876  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 877  : 		if (m_bOnceIgnoreMouseLeftButtonUpEventFlag)

  00006	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  0000a	74 12		 je	 SHORT $LN3@RunMouseLe

; 878  : 		{
; 879  : 			m_bOnceIgnoreMouseLeftButtonUpEventFlag = FALSE;

  0000c	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 880  : 
; 881  : 			if (timeGetTime() < m_iIgnoreEndTime)

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00019	3b 46 30	 cmp	 eax, DWORD PTR [esi+48]
  0001c	72 30		 jb	 SHORT $LN1@RunMouseLe
$LN3@RunMouseLe:

; 882  : 			{
; 883  : 				return;
; 884  : 			}
; 885  : 		}
; 886  : 
; 887  : 		SetMousePosition(x, y);

  0001e	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00021	8b ce		 mov	 ecx, esi
  00023	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00026	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 888  : 
; 889  : 		if (m_pLeftCaptureWindow)

  0002b	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 09		 je	 SHORT $LN5@RunMouseLe

; 890  : 		{
; 891  : 			if (m_pLeftCaptureWindow->OnMouseLeftButtonUp())

  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	ff 50 5c	 call	 DWORD PTR [eax+92]
  00037	85 c0		 test	 eax, eax
  00039	75 0c		 jne	 SHORT $LN6@RunMouseLe
$LN5@RunMouseLe:

; 892  : 			{
; 893  : 				m_pLeftCaptureWindow = NULL;
; 894  : 				return;
; 895  : 			}
; 896  : 		}
; 897  : 
; 898  : 		CWindow * pWin = GetPointWindow();

  0003b	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]

; 899  : 		if (pWin)

  0003e	85 c9		 test	 ecx, ecx
  00040	74 05		 je	 SHORT $LN6@RunMouseLe

; 900  : 			pWin->OnMouseLeftButtonUp();

  00042	8b 01		 mov	 eax, DWORD PTR [ecx]
  00044	ff 50 5c	 call	 DWORD PTR [eax+92]
$LN6@RunMouseLe:

; 901  : 
; 902  : 		m_pLeftCaptureWindow = NULL;

  00047	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
$LN1@RunMouseLe:
  0004e	5e		 pop	 esi

; 903  : 	}

  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?RunMouseLeftButtonUp@CWindowManager@UI@@QAEXJJ@Z ENDP	; UI::CWindowManager::RunMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseLeftButtonDown@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RunMouseLeftButtonDown@CWindowManager@UI@@QAEXJJ@Z PROC ; UI::CWindowManager::RunMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 847  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 848  : 		SetTopUIWindow();

  00007	e8 00 00 00 00	 call	 ?SetTopUIWindow@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::SetTopUIWindow

; 849  : 
; 850  : 		/////
; 851  : 
; 852  : 		SetMousePosition(x, y);

  0000c	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 853  : 		CWindow * pWin = GetPointWindow();

  00019	8b 77 64	 mov	 esi, DWORD PTR [edi+100]

; 854  : 
; 855  : 		if (!pWin)

  0001c	85 f6		 test	 esi, esi
  0001e	74 43		 je	 SHORT $LN1@RunMouseLe
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00020	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00023	c1 e8 04	 shr	 eax, 4
  00026	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 859  : 		if (pWin->IsFlag(CWindow::FLAG_ATTACH))

  00028	74 09		 je	 SHORT $LN3@RunMouseLe

; 860  : 			pWin = pWin->GetRoot();

  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?GetRoot@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetRoot
  00031	8b f0		 mov	 esi, eax
$LN3@RunMouseLe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00033	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00036	c1 e8 07	 shr	 eax, 7
  00039	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 863  : 		if (!pWin->IsFlag(CWindow::FLAG_NOT_CAPTURE))

  0003b	75 03		 jne	 SHORT $LN4@RunMouseLe

; 864  : 			m_pLeftCaptureWindow = pWin;

  0003d	89 77 68	 mov	 DWORD PTR [edi+104], esi
$LN4@RunMouseLe:

; 865  : 
; 866  : 		m_lDragX = m_lMouseX - pWin->GetRect().left;

  00040	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00043	8b c2		 mov	 eax, edx
  00045	2b 46 34	 sub	 eax, DWORD PTR [esi+52]

; 867  : 		m_lDragY = m_lMouseY - pWin->GetRect().top;

  00048	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  0004b	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  0004e	8b c1		 mov	 eax, ecx
  00050	2b 46 38	 sub	 eax, DWORD PTR [esi+56]

; 868  : 		m_lPickedX = m_lMouseX;
; 869  : 		m_lPickedY = m_lMouseY;

  00053	89 4f 28	 mov	 DWORD PTR [edi+40], ecx

; 870  : 
; 871  : 		// Event
; 872  : 		pWin->OnMouseLeftButtonDown();

  00056	8b ce		 mov	 ecx, esi
  00058	89 47 20	 mov	 DWORD PTR [edi+32], eax
  0005b	89 57 24	 mov	 DWORD PTR [edi+36], edx
  0005e	8b 06		 mov	 eax, DWORD PTR [esi]
  00060	ff 50 58	 call	 DWORD PTR [eax+88]
$LN1@RunMouseLe:

; 873  : 	}

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?RunMouseLeftButtonDown@CWindowManager@UI@@QAEXJJ@Z ENDP ; UI::CWindowManager::RunMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_limitRect$2 = -48					; size = 16
_pPointWindow$1$ = -32					; size = 4
tv781 = -28						; size = 4
_ly$3 = -24						; size = 4
_lx$4 = -20						; size = 4
tv780 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_y$2$ = 8						; size = 4
_x$ = 8							; size = 4
tv773 = 12						; size = 4
_x$2$ = 12						; size = 4
_y$ = 12						; size = 4
?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z PROC		; UI::CWindowManager::RunMouseMove, COMDAT
; _this$ = ecx

; 746  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 747  : 		if (IsAttaching())

  00029	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00031	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00034	85 c0		 test	 eax, eax
  00036	74 0e		 je	 SHORT $LN5@RunMouseMo

; 748  : 		{
; 749  : 			if (x > m_lWidth)

  00038	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  0003b	0f 4f 4e 04	 cmovg	 ecx, DWORD PTR [esi+4]

; 750  : 				x = m_lWidth;
; 751  : 			if (y > m_lHeight)

  0003f	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  00042	0f 4f 56 08	 cmovg	 edx, DWORD PTR [esi+8]
$LN5@RunMouseMo:

; 752  : 				y = m_lHeight;
; 753  : 		}
; 754  : 
; 755  : 		SetMousePosition(x, y);

  00046	52		 push	 edx
  00047	51		 push	 ecx
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?SetMousePosition@CWindowManager@UI@@AAEXJJ@Z ; UI::CWindowManager::SetMousePosition

; 756  : 		CWindow * pPointWindow = __PickWindow(m_lMouseX, m_lMouseY);

  0004f	ff 76 18	 push	 DWORD PTR [esi+24]
  00052	8b ce		 mov	 ecx, esi
  00054	ff 76 14	 push	 DWORD PTR [esi+20]
  00057	e8 00 00 00 00	 call	 ?__PickWindow@CWindowManager@UI@@AAEPAVCWindow@2@JJ@Z ; UI::CWindowManager::__PickWindow

; 757  : 
; 758  : 		if (g_bShowOverInWindowName)

  0005c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bShowOverInWindowName@@3HA, 0 ; g_bShowOverInWindowName
  00063	8b f8		 mov	 edi, eax
  00065	89 7d e0	 mov	 DWORD PTR _pPointWindow$1$[ebp], edi
  00068	0f 84 9f 00 00
	00		 je	 $LN8@RunMouseMo

; 759  : 		{
; 760  : 			if (pPointWindow)

  0006e	85 ff		 test	 edi, edi
  00070	0f 84 97 00 00
	00		 je	 $LN8@RunMouseMo

; 762  : 				static std::string strPickWindowName = "";

  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  0007c	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA
  00088	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  0008b	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00091	0f 8f e8 01 00
	00		 jg	 $LN96@RunMouseMo
$LN2@RunMouseMo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00097	83 c7 04	 add	 edi, 4

; 2144 :         const value_type* _Result = _Bx._Buf;

  0009a	8b d7		 mov	 edx, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000a0	72 02		 jb	 SHORT $LN89@RunMouseMo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000a2	8b 17		 mov	 edx, DWORD PTR [edi]
$LN89@RunMouseMo:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000a4	8b ca		 mov	 ecx, edx
  000a6	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000a9	89 45 0c	 mov	 DWORD PTR tv773[ebp], eax
  000ac	0f 1f 40 00	 npad	 4
$LL91@RunMouseMo:
  000b0	8a 01		 mov	 al, BYTE PTR [ecx]
  000b2	41		 inc	 ecx
  000b3	84 c0		 test	 al, al
  000b5	75 f9		 jne	 SHORT $LL91@RunMouseMo
  000b7	2b 4d 0c	 sub	 ecx, DWORD PTR tv773[ebp]

; 2144 :         const value_type* _Result = _Bx._Buf;

  000ba	b8 00 00 00 00	 mov	 eax, OFFSET ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A

; 2153 :         return _BUF_SIZE <= _Myres;

  000bf	83 3d 14 00 00
	00 10		 cmp	 DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+20, 16 ; 00000010H

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  000c6	51		 push	 ecx

; 2145 :         if (_Large_string_engaged()) {

  000c7	0f 43 05 00 00
	00 00		 cmovae	 eax, DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  000ce	52		 push	 edx
  000cf	ff 35 10 00 00
	00		 push	 DWORD PTR ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  000db	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 763  : 				if (0 != strPickWindowName.compare(pPointWindow->GetName()))

  000de	85 c0		 test	 eax, eax
  000e0	74 2b		 je	 SHORT $LN8@RunMouseMo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000e2	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  000e6	8b c7		 mov	 eax, edi

; 2145 :         if (_Large_string_engaged()) {

  000e8	72 02		 jb	 SHORT $LN90@RunMouseMo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000ea	8b 07		 mov	 eax, DWORD PTR [edi]
$LN90@RunMouseMo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 765  : 					Tracef(" OverInWindowName [%s]\n", pPointWindow->GetName());

  000ec	50		 push	 eax
  000ed	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MLGEFGCP@?5OverInWindowName?5?$FL?$CFs?$FN?6@
  000f2	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  000f7	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000fa	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000fe	72 02		 jb	 SHORT $LN69@RunMouseMo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00100	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN69@RunMouseMo:

; 2800 :         return assign(_Ptr);

  00102	57		 push	 edi
  00103	b9 00 00 00 00	 mov	 ecx, OFFSET ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  00108	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN8@RunMouseMo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 771  : 		if (m_pLeftCaptureWindow)

  0010d	8b 7e 68	 mov	 edi, DWORD PTR [esi+104]
  00110	85 ff		 test	 edi, edi
  00112	0f 84 27 01 00
	00		 je	 $LN22@RunMouseMo
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00118	f6 47 58 01	 test	 BYTE PTR [edi+88], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 775  : 			if (pWin->IsFlag(CWindow::FLAG_MOVABLE))

  0011c	0f 84 fe 00 00
	00		 je	 $LN10@RunMouseMo

; 776  : 			{
; 777  : 				long x = m_lMouseX - m_lDragX;

  00122	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00125	2b 46 1c	 sub	 eax, DWORD PTR [esi+28]
  00128	89 45 0c	 mov	 DWORD PTR _x$2$[ebp], eax

; 778  : 				long y = m_lMouseY - m_lDragY;

  0012b	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0012e	2b 46 20	 sub	 eax, DWORD PTR [esi+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 81   : 			bool			HasParent()		{ return m_pParent ? true : false; }

  00131	83 7f 60 00	 cmp	 DWORD PTR [edi+96], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 778  : 				long y = m_lMouseY - m_lDragY;

  00135	89 45 08	 mov	 DWORD PTR _y$2$[ebp], eax

; 779  : 				if (pWin->HasParent())

  00138	74 20		 je	 SHORT $LN12@RunMouseMo

; 780  : 				{
; 781  : 					x -= pWin->GetParent()->GetRect().left;

  0013a	8b cf		 mov	 ecx, edi
  0013c	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent
  00141	8b 4d 0c	 mov	 ecx, DWORD PTR _x$2$[ebp]
  00144	2b 48 34	 sub	 ecx, DWORD PTR [eax+52]
  00147	89 4d 0c	 mov	 DWORD PTR _x$2$[ebp], ecx

; 782  : 					y -= pWin->GetParent()->GetRect().top;

  0014a	8b cf		 mov	 ecx, edi
  0014c	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent
  00151	8b 4d 08	 mov	 ecx, DWORD PTR _y$2$[ebp]
  00154	2b 48 38	 sub	 ecx, DWORD PTR [eax+56]
  00157	89 4d 08	 mov	 DWORD PTR _y$2$[ebp], ecx
$LN12@RunMouseMo:

; 783  : 				}
; 784  : 
; 785  : 				long lx, ly;
; 786  : 				pWin->GetPosition(&lx, &ly);

  0015a	8d 45 e8	 lea	 eax, DWORD PTR _ly$3[ebp]
  0015d	8b cf		 mov	 ecx, edi
  0015f	50		 push	 eax
  00160	8d 45 ec	 lea	 eax, DWORD PTR _lx$4[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?GetPosition@CWindow@UI@@QAEXPAJ0@Z ; UI::CWindow::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00169	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  0016c	8b c1		 mov	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 791  : 				if (pWin->IsFlag(CWindow::FLAG_RESTRICT_Y))

  0016e	8b 55 08	 mov	 edx, DWORD PTR _y$2$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00171	c1 e8 05	 shr	 eax, 5
  00174	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 787  : 				if (pWin->IsFlag(CWindow::FLAG_RESTRICT_X))

  00176	8b 45 0c	 mov	 eax, DWORD PTR _x$2$[ebp]
  00179	0f 45 45 ec	 cmovne	 eax, DWORD PTR _lx$4[ebp]
  0017d	89 45 0c	 mov	 DWORD PTR _x$2$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00180	8b c1		 mov	 eax, ecx
  00182	c1 e8 06	 shr	 eax, 6
  00185	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 791  : 				if (pWin->IsFlag(CWindow::FLAG_RESTRICT_Y))

  00187	0f 45 55 e8	 cmovne	 edx, DWORD PTR _ly$3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0018b	d1 e9		 shr	 ecx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 791  : 				if (pWin->IsFlag(CWindow::FLAG_RESTRICT_Y))

  0018d	89 55 08	 mov	 DWORD PTR _y$2$[ebp], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00190	f6 c1 01	 test	 cl, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 796  : 				if (pWin->IsFlag(CWindow::FLAG_LIMIT))

  00193	74 70		 je	 SHORT $LN21@RunMouseMo

; 797  : 				{
; 798  : 					RECT limitRect = pWin->GetLimitBias();

  00195	0f 10 4f 44	 movups	 xmm1, XMMWORD PTR [edi+68]

; 799  : 
; 800  : 					limitRect.right = m_lWidth - limitRect.right;

  00199	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0019c	0f 28 c1	 movaps	 xmm0, xmm1
  0019f	66 0f 73 d8 08	 psrldq	 xmm0, 8
  001a4	66 0f 7e c0	 movd	 eax, xmm0

; 801  : 					limitRect.bottom = m_lHeight - limitRect.bottom;

  001a8	0f 28 c1	 movaps	 xmm0, xmm1
  001ab	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  001b0	0f 11 4d d0	 movups	 XMMWORD PTR _limitRect$2[ebp], xmm1
  001b4	2b c8		 sub	 ecx, eax
  001b6	89 4d e4	 mov	 DWORD PTR tv781[ebp], ecx
  001b9	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  001bc	66 0f 7e c0	 movd	 eax, xmm0
  001c0	2b c8		 sub	 ecx, eax

; 802  : 
; 803  : 					if (x < limitRect.left)

  001c2	66 0f 7e c8	 movd	 eax, xmm1
  001c6	89 4d f0	 mov	 DWORD PTR tv780[ebp], ecx
  001c9	8b 4d 0c	 mov	 ecx, DWORD PTR _x$2$[ebp]
  001cc	3b c8		 cmp	 ecx, eax
  001ce	7d 05		 jge	 SHORT $LN16@RunMouseMo

; 804  : 						x = limitRect.left;

  001d0	89 45 0c	 mov	 DWORD PTR _x$2$[ebp], eax
  001d3	eb 12		 jmp	 SHORT $LN18@RunMouseMo
$LN16@RunMouseMo:

; 805  : 					else if (x + pWin->GetWidth() >= limitRect.right)

  001d5	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  001d8	03 c1		 add	 eax, ecx
  001da	8b 4d e4	 mov	 ecx, DWORD PTR tv781[ebp]
  001dd	3b c1		 cmp	 eax, ecx
  001df	7c 06		 jl	 SHORT $LN18@RunMouseMo

; 806  : 						x = limitRect.right - pWin->GetWidth();

  001e1	2b 4f 2c	 sub	 ecx, DWORD PTR [edi+44]
  001e4	89 4d 0c	 mov	 DWORD PTR _x$2$[ebp], ecx
$LN18@RunMouseMo:

; 807  : 
; 808  : 					if (y < limitRect.top)

  001e7	8b 45 d4	 mov	 eax, DWORD PTR _limitRect$2[ebp+4]
  001ea	3b d0		 cmp	 edx, eax
  001ec	7d 04		 jge	 SHORT $LN19@RunMouseMo

; 809  : 						y = limitRect.top;

  001ee	8b d0		 mov	 edx, eax
  001f0	eb 10		 jmp	 SHORT $LN94@RunMouseMo
$LN19@RunMouseMo:

; 810  : 					else if (y + pWin->GetHeight() >= limitRect.bottom)

  001f2	8b 4f 30	 mov	 ecx, DWORD PTR [edi+48]
  001f5	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  001f8	3b 45 f0	 cmp	 eax, DWORD PTR tv780[ebp]
  001fb	7c 08		 jl	 SHORT $LN21@RunMouseMo

; 811  : 						y = limitRect.bottom - pWin->GetHeight();

  001fd	8b 55 f0	 mov	 edx, DWORD PTR tv780[ebp]
  00200	2b d1		 sub	 edx, ecx
$LN94@RunMouseMo:

; 812  : 				}
; 813  : 
; 814  : 				pWin->SetPosition(x, y);

  00202	89 55 08	 mov	 DWORD PTR _y$2$[ebp], edx
$LN21@RunMouseMo:
  00205	52		 push	 edx
  00206	ff 75 0c	 push	 DWORD PTR _x$2$[ebp]
  00209	8b cf		 mov	 ecx, edi
  0020b	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 815  : 				pWin->OnMoveWindow(x, y);

  00210	8b 4d 08	 mov	 ecx, DWORD PTR _y$2$[ebp]
  00213	8b 07		 mov	 eax, DWORD PTR [edi]
  00215	51		 push	 ecx
  00216	ff 75 0c	 push	 DWORD PTR _x$2$[ebp]
  00219	8b cf		 mov	 ecx, edi
  0021b	ff 50 34	 call	 DWORD PTR [eax+52]

; 816  : 			}

  0021e	eb 1f		 jmp	 SHORT $LN22@RunMouseMo
$LN10@RunMouseMo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00220	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  00223	c1 e8 03	 shr	 eax, 3
  00226	a8 01		 test	 al, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 817  : 			else if (m_pLeftCaptureWindow->IsFlag(CWindow::FLAG_DRAGABLE))

  00228	74 15		 je	 SHORT $LN22@RunMouseMo

; 818  : 			{
; 819  : 				long x = m_lMouseX - m_lDragX;
; 820  : 				long y = m_lMouseY - m_lDragY;

  0022a	8b 46 18	 mov	 eax, DWORD PTR [esi+24]

; 821  : 				m_pLeftCaptureWindow->OnMouseDrag(x, y);

  0022d	8b cf		 mov	 ecx, edi
  0022f	2b 46 20	 sub	 eax, DWORD PTR [esi+32]
  00232	8b 17		 mov	 edx, DWORD PTR [edi]
  00234	50		 push	 eax
  00235	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00238	2b 46 1c	 sub	 eax, DWORD PTR [esi+28]
  0023b	50		 push	 eax
  0023c	ff 52 18	 call	 DWORD PTR [edx+24]
$LN22@RunMouseMo:

; 822  : 			}
; 823  : 		}
; 824  : 
; 825  : 		if (m_pPointWindow != pPointWindow)

  0023f	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  00242	8b 7d e0	 mov	 edi, DWORD PTR _pPointWindow$1$[ebp]
  00245	3b cf		 cmp	 ecx, edi
  00247	74 1a		 je	 SHORT $LN25@RunMouseMo

; 826  : 		{
; 827  : #ifdef _DEBUG
; 828  : 			if (pPointWindow && pPointWindow->GetName())
; 829  : 				Tracenf("PointWindow: %s", pPointWindow->GetName());
; 830  : #endif
; 831  : 			if (m_pPointWindow)

  00249	85 c9		 test	 ecx, ecx
  0024b	74 05		 je	 SHORT $LN24@RunMouseMo

; 832  : 				m_pPointWindow->OnMouseOverOut();

  0024d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0024f	ff 50 20	 call	 DWORD PTR [eax+32]
$LN24@RunMouseMo:

; 833  : 
; 834  : 			m_pPointWindow = pPointWindow;

  00252	89 7e 64	 mov	 DWORD PTR [esi+100], edi

; 835  : 
; 836  : 			if (m_pPointWindow)

  00255	85 ff		 test	 edi, edi
  00257	74 13		 je	 SHORT $LN26@RunMouseMo

; 837  : 				m_pPointWindow->OnMouseOverIn();

  00259	8b 07		 mov	 eax, DWORD PTR [edi]
  0025b	8b cf		 mov	 ecx, edi
  0025d	ff 50 1c	 call	 DWORD PTR [eax+28]
  00260	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
$LN25@RunMouseMo:

; 838  : 		}
; 839  : 
; 840  : 		if (m_pPointWindow)

  00263	85 c9		 test	 ecx, ecx
  00265	74 05		 je	 SHORT $LN26@RunMouseMo

; 841  : 		{
; 842  : 			m_pPointWindow->OnMouseOver();

  00267	8b 01		 mov	 eax, DWORD PTR [ecx]
  00269	ff 50 24	 call	 DWORD PTR [eax+36]
$LN26@RunMouseMo:

; 843  : 		}
; 844  : 	}

  0026c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0026f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00276	59		 pop	 ecx
  00277	5f		 pop	 edi
  00278	5e		 pop	 esi
  00279	8b e5		 mov	 esp, ebp
  0027b	5d		 pop	 ebp
  0027c	c2 08 00	 ret	 8
$LN96@RunMouseMo:

; 762  : 				static std::string strPickWindowName = "";

  0027f	68 00 00 00 00	 push	 OFFSET ?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA
  00284	e8 00 00 00 00	 call	 __Init_thread_header
  00289	83 c4 04	 add	 esp, 4
  0028c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA, -1
  00293	0f 85 fe fd ff
	ff		 jne	 $LN2@RunMouseMo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00299	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0029e	b9 00 00 00 00	 mov	 ecx, OFFSET ?strPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 762  : 				static std::string strPickWindowName = "";

  002a3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  002aa	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 762  : 				static std::string strPickWindowName = "";

  002af	68 00 00 00 00	 push	 OFFSET ??__FstrPickWindowName@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@YAXXZ ; `UI::CWindowManager::RunMouseMove'::`15'::`dynamic atexit destructor for 'strPickWindowName''
  002b4	e8 00 00 00 00	 call	 _atexit
  002b9	68 00 00 00 00	 push	 OFFSET ?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA
  002be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002c5	e8 00 00 00 00	 call	 __Init_thread_footer
  002ca	83 c4 08	 add	 esp, 8
  002cd	e9 c5 fd ff ff	 jmp	 $LN2@RunMouseMo
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?P@??RunMouseMove@CWindowManager@UI@@QAEXJJ@Z@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RunMouseMove@CWindowManager@UI@@QAEXJJ@Z ENDP		; UI::CWindowManager::RunMouseMove
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?Render@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?Render@CWindowManager@UI@@QAEXXZ PROC			; UI::CWindowManager::Render, COMDAT
; _this$ = ecx

; 697  : 		m_pRootWindow->Render();

  00000	8b 89 8c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+140]
  00006	e9 00 00 00 00	 jmp	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
?Render@CWindowManager@UI@@QAEXXZ ENDP			; UI::CWindowManager::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?Update@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?Update@CWindowManager@UI@@QAEXXZ PROC			; UI::CWindowManager::Update, COMDAT
; _this$ = ecx

; 689  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 690  : 		__ClearReserveDeleteWindowList();

  00003	e8 00 00 00 00	 call	 ?__ClearReserveDeleteWindowList@CWindowManager@UI@@AAEXXZ ; UI::CWindowManager::__ClearReserveDeleteWindowList

; 691  : 
; 692  : 		m_pRootWindow->Update();

  00008	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  0000e	5e		 pop	 esi
  0000f	e9 00 00 00 00	 jmp	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
?Update@CWindowManager@UI@@QAEXXZ ENDP			; UI::CWindowManager::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?ResetCapture@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?ResetCapture@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::ResetCapture, COMDAT
; _this$ = ecx

; 644  : 		m_pLeftCaptureWindow = NULL;

  00000	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0

; 645  : 		m_pMiddleCaptureWindow = NULL;

  00007	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0

; 646  : 		m_pRightCaptureWindow = NULL;

  0000e	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0

; 647  : 	}

  00015	c3		 ret	 0
?ResetCapture@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::ResetCapture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetTopUIWindow@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
__Loc$1 = -40						; size = 12
$T2 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
?SetTopUIWindow@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::SetTopUIWindow, COMDAT
; _this$ = ecx

; 622  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 623  : 		if (m_pLockWindow)

  00013	83 7e 58 00	 cmp	 DWORD PTR [esi+88], 0
  00017	0f 85 90 00 00
	00		 jne	 $LN4@SetTopUIWi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0001d	53		 push	 ebx
  0001e	57		 push	 edi

; 2339 :         assign(_Ptr);

  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_02ELHCDOPK@UI@
  00024	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00027	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002e	c7 45 f8 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00035	c6 45 e4 00	 mov	 BYTE PTR $T2[ebp], 0

; 2339 :         assign(_Ptr);

  00039	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0003e	8d 45 e4	 lea	 eax, DWORD PTR $T2[ebp]
  00041	50		 push	 eax
  00042	8d 45 d8	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00045	50		 push	 eax
  00046	8d 8e 98 00 00
	00		 lea	 ecx, DWORD PTR [esi+152]
  0004c	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00051	8b 7d e0	 mov	 edi, DWORD PTR __Loc$1[ebp+8]
  00054	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00058	75 14		 jne	 SHORT $LN18@SetTopUIWi
  0005a	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0005d	50		 push	 eax
  0005e	8d 45 e4	 lea	 eax, DWORD PTR $T2[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00067	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0006a	84 c0		 test	 al, al
  0006c	74 06		 je	 SHORT $LN17@SetTopUIWi
$LN18@SetTopUIWi:

; 1463 :         return _Get_scary()->_Myhead;

  0006e	8b be 98 00 00
	00		 mov	 edi, DWORD PTR [esi+152]
$LN17@SetTopUIWi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00074	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp+20]
  00077	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007a	72 0d		 jb	 SHORT $LN36@SetTopUIWi

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007d	50		 push	 eax
  0007e	ff 75 e4	 push	 DWORD PTR $T2[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00086	83 c4 08	 add	 esp, 8
$LN36@SetTopUIWi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00089	3b be 98 00 00
	00		 cmp	 edi, DWORD PTR [esi+152]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 627  : 		if (itor == m_LayerWindowMap.end())

  0008f	74 1a		 je	 SHORT $LN59@SetTopUIWi

; 628  : 			return;
; 629  : 		CWindow * pGameLayer = itor->second;
; 630  : 		CWindow * pTopWindow = pGameLayer->PickTopWindow(m_lMouseX, m_lMouseY);

  00091	ff 76 18	 push	 DWORD PTR [esi+24]
  00094	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00097	ff 76 14	 push	 DWORD PTR [esi+20]
  0009a	e8 00 00 00 00	 call	 ?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickTopWindow

; 631  : 		if (pTopWindow)

  0009f	85 c0		 test	 eax, eax
  000a1	74 08		 je	 SHORT $LN59@SetTopUIWi

; 632  : 		{
; 633  : 			SetTop(pTopWindow);

  000a3	50		 push	 eax
  000a4	8b ce		 mov	 ecx, esi
  000a6	e8 00 00 00 00	 call	 ?SetTop@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::SetTop
$LN59@SetTopUIWi:
  000ab	5f		 pop	 edi
  000ac	5b		 pop	 ebx
$LN4@SetTopUIWi:

; 634  : 		}
; 635  : 	}

  000ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b0	33 cd		 xor	 ecx, ebp
  000b2	5e		 pop	 esi
  000b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
?SetTopUIWindow@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::SetTopUIWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetTop@CWindowManager@UI@@QAEXPAVCWindow@2@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?SetTop@CWindowManager@UI@@QAEXPAVCWindow@2@@Z PROC	; UI::CWindowManager::SetTop, COMDAT
; _this$ = ecx

; 611  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 81   : 			bool			HasParent()		{ return m_pParent ? true : false; }

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWin$[ebp]
  00007	83 7e 60 00	 cmp	 DWORD PTR [esi+96], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 612  : 		if (!pWin->HasParent())

  0000b	74 0f		 je	 SHORT $LN1@SetTop

; 613  : 			return;
; 614  : 
; 615  : 		CWindow * pParentWindow = pWin->GetParent();

  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent

; 616  : 		pParentWindow->SetTop(pWin);

  00014	56		 push	 esi
  00015	8b c8		 mov	 ecx, eax
  00017	e8 00 00 00 00	 call	 ?SetTop@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::SetTop
$LN1@SetTop:
  0001c	5e		 pop	 esi

; 617  : 
; 618  : //		ResetCapture();
; 619  : 	}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetTop@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ENDP	; UI::CWindowManager::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetActivateWindow@CWindowManager@UI@@QAEPAVCWindow@2@XZ
_TEXT	SEGMENT
?GetActivateWindow@CWindowManager@UI@@QAEPAVCWindow@2@XZ PROC ; UI::CWindowManager::GetActivateWindow, COMDAT
; _this$ = ecx

; 639  : 		return m_pActiveWindow;

  00000	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]

; 640  : 	}

  00003	c3		 ret	 0
?GetActivateWindow@CWindowManager@UI@@QAEPAVCWindow@2@XZ ENDP ; UI::CWindowManager::GetActivateWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?DeactivateWindow@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?DeactivateWindow@CWindowManager@UI@@QAEXXZ PROC	; UI::CWindowManager::DeactivateWindow, COMDAT
; _this$ = ecx

; 590  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 591  : 		if (m_pActiveWindow)

  00003	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00006	85 c9		 test	 ecx, ecx
  00008	74 12		 je	 SHORT $LN4@Deactivate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1200 :         return _Mypair._Myval2._Mysize == 0;

  0000a	83 7e 54 00	 cmp	 DWORD PTR [esi+84], 0
  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 593  : 			if (m_ActiveWindowList.empty())

  00010	75 0c		 jne	 SHORT $LN3@Deactivate

; 594  : 			{
; 595  : 				m_pActiveWindow->OnKillFocus();

  00012	ff 50 14	 call	 DWORD PTR [eax+20]

; 596  : 				m_pActiveWindow = NULL;

  00015	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
$LN4@Deactivate:
  0001c	5e		 pop	 esi

; 606  : 			}
; 607  : 		}
; 608  : 	}

  0001d	c3		 ret	 0
$LN3@Deactivate:

; 597  : 			}
; 598  : 			else
; 599  : 			{
; 600  : 				m_pActiveWindow->OnKillFocus();

  0001e	ff 50 14	 call	 DWORD PTR [eax+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1228 :         return _Mypair._Myval2._Myhead->_Prev->_Myval;

  00021	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00024	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 602  : 				m_pActiveWindow = m_ActiveWindowList.back();

  00026	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	89 46 4c	 mov	 DWORD PTR [esi+76], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1260 :         _Unchecked_erase(_Mypair._Myval2._Myhead->_Prev);

  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1360 :         const auto _Result = _Pnode->_Next;

  00033	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 1361 :         _Mypair._Myval2._Orphan_ptr2(_Pnode);
; 1362 :         --_Mypair._Myval2._Mysize;

  00035	ff 4e 54	 dec	 DWORD PTR [esi+84]

; 1363 :         _Pnode->_Prev->_Next = _Result;

  00038	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx

; 1364 :         _Result->_Prev       = _Pnode->_Prev;

  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00043	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 605  : 				m_pActiveWindow->OnSetFocus();

  00048	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0004b	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 605  : 				m_pActiveWindow->OnSetFocus();

  0004e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00050	5e		 pop	 esi
  00051	ff 60 10	 jmp	 DWORD PTR [eax+16]
?DeactivateWindow@CWindowManager@UI@@QAEXXZ ENDP	; UI::CWindowManager::DeactivateWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?ActivateWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?ActivateWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z PROC ; UI::CWindowManager::ActivateWindow, COMDAT
; _this$ = ecx

; 569  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 570  : 		m_ActiveWindowList.remove(pWin);

  00007	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  0000a	57		 push	 edi
  0000b	50		 push	 eax
  0000c	8d 5e 50	 lea	 ebx, DWORD PTR [esi+80]
  0000f	8b cb		 mov	 ecx, ebx
  00011	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 571  : 
; 572  : 		if (pWin == m_pActiveWindow)

  00016	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  00019	8d 7e 4c	 lea	 edi, DWORD PTR [esi+76]
  0001c	8b 75 08	 mov	 esi, DWORD PTR _pWin$[ebp]
  0001f	3b f0		 cmp	 esi, eax
  00021	74 20		 je	 SHORT $LN4@ActivateWi

; 573  : 			return;
; 574  : 
; 575  : 		if (m_pActiveWindow)

  00023	85 c0		 test	 eax, eax
  00025	74 0f		 je	 SHORT $LN3@ActivateWi

; 576  : 		{
; 577  : 			m_ActiveWindowList.push_back(m_pActiveWindow);

  00027	57		 push	 edi
  00028	8b cb		 mov	 ecx, ebx
  0002a	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 578  : 			m_pActiveWindow->OnKillFocus();

  0002f	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00031	8b 01		 mov	 eax, DWORD PTR [ecx]
  00033	ff 50 14	 call	 DWORD PTR [eax+20]
$LN3@ActivateWi:

; 579  : 		}
; 580  : 
; 581  : 		m_pActiveWindow = pWin;

  00036	89 37		 mov	 DWORD PTR [edi], esi

; 582  : 
; 583  : 		if (m_pActiveWindow)

  00038	85 f6		 test	 esi, esi
  0003a	74 07		 je	 SHORT $LN4@ActivateWi

; 584  : 		{
; 585  : 			m_pActiveWindow->OnSetFocus();

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	8b ce		 mov	 ecx, esi
  00040	ff 50 10	 call	 DWORD PTR [eax+16]
$LN4@ActivateWi:

; 586  : 		}
; 587  : 	}

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?ActivateWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ENDP ; UI::CWindowManager::ActivateWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?UnlockWindow@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?UnlockWindow@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::UnlockWindow, COMDAT
; _this$ = ecx

; 551  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 552  : 		if (m_pLockWindow)

  00003	83 7e 58 00	 cmp	 DWORD PTR [esi+88], 0
  00007	74 47		 je	 SHORT $LN18@UnlockWind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1200 :         return _Mypair._Myval2._Mysize == 0;

  00009	57		 push	 edi
  0000a	8b 7e 60	 mov	 edi, DWORD PTR [esi+96]
  0000d	85 ff		 test	 edi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 554  : 			if (m_LockWindowList.empty())

  0000f	75 11		 jne	 SHORT $LN3@UnlockWind

; 555  : 			{
; 556  : 				m_pLockWindow = NULL;
; 557  : 				if (m_pActiveWindow)

  00011	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00014	89 7e 58	 mov	 DWORD PTR [esi+88], edi
  00017	85 c9		 test	 ecx, ecx
  00019	74 34		 je	 SHORT $LN21@UnlockWind

; 558  : 					m_pActiveWindow->OnSetFocus();

  0001b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	ff 60 10	 jmp	 DWORD PTR [eax+16]
$LN3@UnlockWind:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1228 :         return _Mypair._Myval2._Myhead->_Prev->_Myval;

  00022	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00025	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 562  : 				m_pLockWindow = m_LockWindowList.back();

  00027	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	89 46 58	 mov	 DWORD PTR [esi+88], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1362 :         --_Mypair._Myval2._Mysize;

  00030	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]

; 1260 :         _Unchecked_erase(_Mypair._Myval2._Myhead->_Prev);

  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00036	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1360 :         const auto _Result = _Pnode->_Next;

  00037	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 1362 :         --_Mypair._Myval2._Mysize;

  00039	89 46 60	 mov	 DWORD PTR [esi+96], eax

; 1363 :         _Pnode->_Prev->_Next = _Result;

  0003c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003f	89 08		 mov	 DWORD PTR [eax], ecx

; 1364 :         _Result->_Prev       = _Pnode->_Prev;

  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN21@UnlockWind:
  0004f	5f		 pop	 edi
$LN18@UnlockWind:
  00050	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 566  : 	}

  00051	c3		 ret	 0
?UnlockWindow@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::UnlockWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?LockWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?LockWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z PROC	; UI::CWindowManager::LockWindow, COMDAT
; _this$ = ecx

; 533  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi

; 534  : 		if (m_pActiveWindow)

  00008	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 05		 je	 SHORT $LN2@LockWindow

; 535  : 			m_pActiveWindow->OnKillFocus();

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	ff 50 14	 call	 DWORD PTR [eax+20]
$LN2@LockWindow:

; 536  : 
; 537  : 		m_LockWindowList.remove(pWin);

  00014	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  00017	8d 5e 5c	 lea	 ebx, DWORD PTR [esi+92]
  0001a	50		 push	 eax
  0001b	8b cb		 mov	 ecx, ebx
  0001d	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 538  : 
; 539  : 		if (m_pLockWindow)

  00022	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00025	83 c6 58	 add	 esi, 88			; 00000058H
  00028	8b 7d 08	 mov	 edi, DWORD PTR _pWin$[ebp]
  0002b	85 c0		 test	 eax, eax
  0002d	74 0c		 je	 SHORT $LN3@LockWindow

; 540  : 		{
; 541  : 			if (m_pLockWindow==pWin)

  0002f	3b c7		 cmp	 eax, edi
  00031	74 0a		 je	 SHORT $LN1@LockWindow

; 542  : 				return;
; 543  : 
; 544  : 			m_LockWindowList.push_back(m_pLockWindow);

  00033	56		 push	 esi
  00034	8b cb		 mov	 ecx, ebx
  00036	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
$LN3@LockWindow:

; 545  : 		}
; 546  : 
; 547  : 		m_pLockWindow = pWin;

  0003b	89 3e		 mov	 DWORD PTR [esi], edi
$LN1@LockWindow:
  0003d	5f		 pop	 edi

; 548  : 	}

  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?LockWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ENDP	; UI::CWindowManager::LockWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?OnceIgnoreMouseLeftButtonUpEvent@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?OnceIgnoreMouseLeftButtonUpEvent@CWindowManager@UI@@QAEXXZ PROC ; UI::CWindowManager::OnceIgnoreMouseLeftButtonUpEvent, COMDAT
; _this$ = ecx

; 527  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 528  : 		m_bOnceIgnoreMouseLeftButtonUpEventFlag = TRUE;

  00003	c7 46 2c 01 00
	00 00		 mov	 DWORD PTR [esi+44], 1

; 529  : 		m_iIgnoreEndTime = timeGetTime() + 500;

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00010	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  00015	89 46 30	 mov	 DWORD PTR [esi+48], eax
  00018	5e		 pop	 esi

; 530  : 	}

  00019	c3		 ret	 0
?OnceIgnoreMouseLeftButtonUpEvent@CWindowManager@UI@@QAEXXZ ENDP ; UI::CWindowManager::OnceIgnoreMouseLeftButtonUpEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetAttachingFlag@CWindowManager@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetAttachingFlag@CWindowManager@UI@@QAEXH@Z PROC	; UI::CWindowManager::SetAttachingFlag, COMDAT
; _this$ = ecx

; 484  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 485  : 		m_bAttachingFlag = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 486  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetAttachingFlag@CWindowManager@UI@@QAEXH@Z ENDP	; UI::CWindowManager::SetAttachingFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?DeattachIcon@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?DeattachIcon@CWindowManager@UI@@QAEXXZ PROC		; UI::CWindowManager::DeattachIcon, COMDAT
; _this$ = ecx

; 489  : 	{

  00000	56		 push	 esi

; 490  : 		SetAttachingFlag(FALSE);

  00001	6a 00		 push	 0
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?SetAttachingFlag@CWindowManager@UI@@QAEXH@Z ; UI::CWindowManager::SetAttachingFlag

; 491  : 		if (m_poMouseHandler)

  0000a	83 7e 34 00	 cmp	 DWORD PTR [esi+52], 0
  0000e	74 16		 je	 SHORT $LN2@DeattachIc

; 492  : 			PyCallClassMemberFunc(m_poMouseHandler, "DeattachObject", BuildEmptyTuple());

  00010	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00015	50		 push	 eax
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLAFPINF@DeattachObject@
  0001b	ff 76 34	 push	 DWORD PTR [esi+52]
  0001e	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@DeattachIc:

; 493  : 	}

  00026	5e		 pop	 esi
  00027	c3		 ret	 0
?DeattachIcon@CWindowManager@UI@@QAEXXZ ENDP		; UI::CWindowManager::DeattachIcon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?AttachIcon@CWindowManager@UI@@QAEXKKKEE@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
_dwIndex$ = 12						; size = 4
_dwSlotNumber$ = 16					; size = 4
_byWidth$ = 20						; size = 1
_byHeight$ = 24						; size = 1
?AttachIcon@CWindowManager@UI@@QAEXKKKEE@Z PROC		; UI::CWindowManager::AttachIcon, COMDAT
; _this$ = ecx

; 473  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 474  : 		m_bAttachingFlag = TRUE;
; 475  : 		m_dwAttachingType = dwType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 476  : 		m_dwAttachingIndex = dwIndex;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwIndex$[ebp]
  0000c	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 477  : 		m_dwAttachingSlotNumber = dwSlotNumber;

  0000f	8b 45 10	 mov	 eax, DWORD PTR _dwSlotNumber$[ebp]
  00012	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 478  : 
; 479  : 		m_byAttachingIconWidth = byWidth;

  00015	8a 45 14	 mov	 al, BYTE PTR _byWidth$[ebp]
  00018	88 41 48	 mov	 BYTE PTR [ecx+72], al

; 480  : 		m_byAttachingIconHeight = byHeight;

  0001b	8a 45 18	 mov	 al, BYTE PTR _byHeight$[ebp]
  0001e	c7 41 38 01 00
	00 00		 mov	 DWORD PTR [ecx+56], 1
  00025	88 41 49	 mov	 BYTE PTR [ecx+73], al

; 481  : 	}

  00028	5d		 pop	 ebp
  00029	c2 14 00	 ret	 20			; 00000014H
?AttachIcon@CWindowManager@UI@@QAEXKKKEE@Z ENDP		; UI::CWindowManager::AttachIcon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetAttachingIconSize@CWindowManager@UI@@QAEXPAE0@Z
_TEXT	SEGMENT
_pbyWidth$ = 8						; size = 4
_pbyHeight$ = 12					; size = 4
?GetAttachingIconSize@CWindowManager@UI@@QAEXPAE0@Z PROC ; UI::CWindowManager::GetAttachingIconSize, COMDAT
; _this$ = ecx

; 467  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 468  : 		*pbyWidth = m_byAttachingIconWidth;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pbyWidth$[ebp]
  00006	8a 51 48	 mov	 dl, BYTE PTR [ecx+72]
  00009	88 10		 mov	 BYTE PTR [eax], dl

; 469  : 		*pbyHeight = m_byAttachingIconHeight;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _pbyHeight$[ebp]
  0000e	8a 49 49	 mov	 cl, BYTE PTR [ecx+73]
  00011	88 08		 mov	 BYTE PTR [eax], cl

; 470  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetAttachingIconSize@CWindowManager@UI@@QAEXPAE0@Z ENDP ; UI::CWindowManager::GetAttachingIconSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetAttachingSlotNumber@CWindowManager@UI@@QAEKXZ
_TEXT	SEGMENT
?GetAttachingSlotNumber@CWindowManager@UI@@QAEKXZ PROC	; UI::CWindowManager::GetAttachingSlotNumber, COMDAT
; _this$ = ecx

; 463  : 		return m_dwAttachingSlotNumber;

  00000	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]

; 464  : 	}

  00003	c3		 ret	 0
?GetAttachingSlotNumber@CWindowManager@UI@@QAEKXZ ENDP	; UI::CWindowManager::GetAttachingSlotNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetAttachingIndex@CWindowManager@UI@@QAEKXZ
_TEXT	SEGMENT
?GetAttachingIndex@CWindowManager@UI@@QAEKXZ PROC	; UI::CWindowManager::GetAttachingIndex, COMDAT
; _this$ = ecx

; 458  : 		return m_dwAttachingIndex;

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]

; 459  : 	}

  00003	c3		 ret	 0
?GetAttachingIndex@CWindowManager@UI@@QAEKXZ ENDP	; UI::CWindowManager::GetAttachingIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetAttachingType@CWindowManager@UI@@QAEKXZ
_TEXT	SEGMENT
?GetAttachingType@CWindowManager@UI@@QAEKXZ PROC	; UI::CWindowManager::GetAttachingType, COMDAT
; _this$ = ecx

; 453  : 		return m_dwAttachingType;

  00000	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]

; 454  : 	}

  00003	c3		 ret	 0
?GetAttachingType@CWindowManager@UI@@QAEKXZ ENDP	; UI::CWindowManager::GetAttachingType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?IsAttaching@CWindowManager@UI@@QAEHXZ
_TEXT	SEGMENT
?IsAttaching@CWindowManager@UI@@QAEHXZ PROC		; UI::CWindowManager::IsAttaching, COMDAT
; _this$ = ecx

; 448  : 		return m_bAttachingFlag;

  00000	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]

; 449  : 	}

  00003	c3		 ret	 0
?IsAttaching@CWindowManager@UI@@QAEHXZ ENDP		; UI::CWindowManager::IsAttaching
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?NotifyDestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z
_TEXT	SEGMENT
_itor$ = -4						; size = 4
__Successor$1 = 8					; size = 4
_pWindow$ = 8						; size = 4
?NotifyDestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z PROC ; UI::CWindowManager::NotifyDestroyWindow, COMDAT
; _this$ = ecx

; 387  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 388  : 		if (pWindow == m_pActiveWindow)

  00004	8b 45 08	 mov	 eax, DWORD PTR _pWindow$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	3b 46 4c	 cmp	 eax, DWORD PTR [esi+76]
  0000e	75 07		 jne	 SHORT $LN5@NotifyDest

; 389  : 			m_pActiveWindow = NULL;

  00010	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
$LN5@NotifyDest:

; 390  : 
; 391  : 		if (pWindow == m_pPointWindow)

  00017	3b 46 64	 cmp	 eax, DWORD PTR [esi+100]
  0001a	75 07		 jne	 SHORT $LN6@NotifyDest

; 392  : 			m_pPointWindow = NULL;

  0001c	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
$LN6@NotifyDest:

; 393  : 
; 394  : 		if (pWindow == m_pLeftCaptureWindow)

  00023	3b 46 68	 cmp	 eax, DWORD PTR [esi+104]
  00026	75 07		 jne	 SHORT $LN7@NotifyDest

; 395  : 			m_pLeftCaptureWindow = NULL;

  00028	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
$LN7@NotifyDest:

; 396  : 
; 397  : 		if (pWindow == m_pMiddleCaptureWindow)

  0002f	3b 46 70	 cmp	 eax, DWORD PTR [esi+112]
  00032	75 07		 jne	 SHORT $LN8@NotifyDest

; 398  : 			m_pMiddleCaptureWindow = NULL;

  00034	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0
$LN8@NotifyDest:

; 399  : 
; 400  : 		if (pWindow == m_pRightCaptureWindow)

  0003b	3b 46 6c	 cmp	 eax, DWORD PTR [esi+108]
  0003e	75 07		 jne	 SHORT $LN9@NotifyDest

; 401  : 			m_pRightCaptureWindow = NULL;

  00040	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
$LN9@NotifyDest:

; 402  : 
; 403  : 		if (pWindow == m_pLockWindow)

  00047	3b 46 58	 cmp	 eax, DWORD PTR [esi+88]
  0004a	75 07		 jne	 SHORT $LN10@NotifyDest

; 404  : 			m_pLockWindow = NULL;

  0004c	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
$LN10@NotifyDest:

; 405  : 
; 406  : 		m_LockWindowList.remove(pWindow);

  00053	8d 45 08	 lea	 eax, DWORD PTR _pWindow$[ebp]
  00056	50		 push	 eax
  00057	8d 4e 5c	 lea	 ecx, DWORD PTR [esi+92]
  0005a	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 407  : 		m_ActiveWindowList.remove(pWindow);

  0005f	8d 45 08	 lea	 eax, DWORD PTR _pWindow$[ebp]
  00062	50		 push	 eax
  00063	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  00066	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 408  : 		m_PickAlwaysWindowList.remove(pWindow);

  0006b	8d 45 08	 lea	 eax, DWORD PTR _pWindow$[ebp]
  0006e	50		 push	 eax
  0006f	8d 8e 84 00 00
	00		 lea	 ecx, DWORD PTR [esi+132]
  00075	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0007a	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  0007d	8d 7e 74	 lea	 edi, DWORD PTR [esi+116]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00080	8b 30		 mov	 esi, DWORD PTR [eax]
  00082	89 75 fc	 mov	 DWORD PTR _itor$[ebp], esi
  00085	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 411  : 		for (; itor != m_KeyCaptureWindowMap.end();)

  00087	74 42		 je	 SHORT $LN3@NotifyDest
  00089	53		 push	 ebx
  0008a	8b 5d 08	 mov	 ebx, DWORD PTR _pWindow$[ebp]
  0008d	0f 1f 00	 npad	 3
$LL2@NotifyDest:

; 412  : 		{
; 413  : 			if (pWindow == itor->second)

  00090	3b 5e 14	 cmp	 ebx, DWORD PTR [esi+20]
  00093	75 26		 jne	 SHORT $LN11@NotifyDest
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1388 :         ++_Successor; // save successor iterator for return

  00095	8d 4d 08	 lea	 ecx, DWORD PTR __Successor$1[ebp]
  00098	89 75 08	 mov	 DWORD PTR __Successor$1[ebp], esi
  0009b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >,std::_Iterator_base0>::operator++

; 1389 :         _Nodeptr _Erasednode = _Scary->_Extract(_Where); // node to erase

  000a0	56		 push	 esi
  000a1	8b cf		 mov	 ecx, edi
  000a3	e8 00 00 00 00	 call	 ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Extract
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000a8	6a 18		 push	 24			; 00000018H
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 415  : 				itor = m_KeyCaptureWindowMap.erase(itor);

  000b0	8b 75 08	 mov	 esi, DWORD PTR __Successor$1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000b3	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 415  : 				itor = m_KeyCaptureWindowMap.erase(itor);

  000b6	89 75 fc	 mov	 DWORD PTR _itor$[ebp], esi

; 416  : 			}

  000b9	eb 0b		 jmp	 SHORT $LN12@NotifyDest
$LN11@NotifyDest:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 198  :         _Mybase::operator++();

  000bb	8d 4d fc	 lea	 ecx, DWORD PTR _itor$[ebp]
  000be	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >,std::_Iterator_base0>::operator++
  000c3	8b 75 fc	 mov	 esi, DWORD PTR _itor$[ebp]
$LN12@NotifyDest:

; 232  :         return this->_Ptr == _Right._Ptr;

  000c6	3b 37		 cmp	 esi, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 411  : 		for (; itor != m_KeyCaptureWindowMap.end();)

  000c8	75 c6		 jne	 SHORT $LL2@NotifyDest
  000ca	5b		 pop	 ebx
$LN3@NotifyDest:
  000cb	5f		 pop	 edi

; 417  : 			else
; 418  : 			{
; 419  : 				++itor;
; 420  : 			}
; 421  : 		}
; 422  : 	}

  000cc	5e		 pop	 esi
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 04 00	 ret	 4
?NotifyDestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ENDP ; UI::CWindowManager::NotifyDestroyWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z PROC ; UI::CWindowManager::DestroyWindow, COMDAT
; _this$ = ecx

; 425  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 426  : 		NotifyDestroyWindow(pWin);

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWin$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?NotifyDestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::NotifyDestroyWindow
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 81   : 			bool			HasParent()		{ return m_pParent ? true : false; }

  00010	83 7e 60 00	 cmp	 DWORD PTR [esi+96], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 427  : 		if (pWin->HasParent())

  00014	74 0f		 je	 SHORT $LN2@DestroyWin

; 428  : 		{
; 429  : 			CWindow * pParentWin = pWin->GetParent();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent

; 430  : 			pParentWin->DeleteChild(pWin);

  0001d	56		 push	 esi
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?DeleteChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::DeleteChild
$LN2@DestroyWin:

; 431  : 		}
; 432  : 		pWin->Clear();

  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?Clear@CWindow@UI@@QAEXXZ ; UI::CWindow::Clear

; 433  : 		m_ReserveDeleteWindowList.push_back(pWin);

  0002c	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  0002f	50		 push	 eax
  00030	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00033	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
  00038	5f		 pop	 edi
  00039	5e		 pop	 esi

; 434  : 	}

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ENDP ; UI::CWindowManager::DestroyWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterNumberLine, COMDAT
; _this$ = ecx

; 374  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 377  : 		CWindow * pWin = new CNumberLine(po);

  00033	68 c0 00 00 00	 push	 192			; 000000c0H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterNu
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAU_object@@@Z ; UI::CNumberLine::CNumberLine
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterNu
$LN3@RegisterNu:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterNu:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 377  : 		CWindow * pWin = new CNumberLine(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 378  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterNu

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterNu:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 384  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterNumberLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterNumberLine
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterBar3D, COMDAT
; _this$ = ecx

; 361  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 364  : 		CWindow * pWin = new CBar3D(po);

  00033	68 88 00 00 00	 push	 136			; 00000088H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterBa
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CBar3D@UI@@QAE@PAU_object@@@Z ; UI::CBar3D::CBar3D
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterBa
$LN3@RegisterBa:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterBa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 364  : 		CWindow * pWin = new CBar3D(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 365  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterBa

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterBa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 371  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 88 00 00 00	 push	 136			; 00000088H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterBar3D@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterBar3D
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterLine, COMDAT
; _this$ = ecx

; 348  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 351  : 		CWindow * pWin = new CLine(po);

  00033	68 80 00 00 00	 push	 128			; 00000080H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterLi
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CLine@UI@@QAE@PAU_object@@@Z ; UI::CLine::CLine
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterLi
$LN3@RegisterLi:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 351  : 		CWindow * pWin = new CLine(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 352  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterLi

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterLi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 358  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterLine
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterBar, COMDAT
; _this$ = ecx

; 335  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 338  : 		CWindow * pWin = new CBar(po);

  00033	68 80 00 00 00	 push	 128			; 00000080H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterBa
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CBar@UI@@QAE@PAU_object@@@Z ; UI::CBar::CBar
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterBa
$LN3@RegisterBa:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterBa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 338  : 		CWindow * pWin = new CBar(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 339  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterBa

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterBa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 345  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterBar@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterBar
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterBox, COMDAT
; _this$ = ecx

; 322  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 325  : 		CWindow * pWin = new CBox(po);

  00033	68 80 00 00 00	 push	 128			; 00000080H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterBo
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CBox@UI@@QAE@PAU_object@@@Z ; UI::CBox::CBox
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterBo
$LN3@RegisterBo:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterBo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 325  : 		CWindow * pWin = new CBox(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 326  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterBo

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterBo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 332  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterDragButton, COMDAT
; _this$ = ecx

; 309  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 312  : 		CWindow * pWin = new CDragButton(po);

  00033	68 1c 01 00 00	 push	 284			; 0000011cH
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterDr
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CDragButton@UI@@QAE@PAU_object@@@Z ; UI::CDragButton::CDragButton
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterDr
$LN3@RegisterDr:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterDr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 312  : 		CWindow * pWin = new CDragButton(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 313  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterDr

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterDr:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 319  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 1c 01 00 00	 push	 284			; 0000011cH
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterDragButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterDragButton
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterToggleButton, COMDAT
; _this$ = ecx

; 296  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 299  : 		CWindow * pWin = new CToggleButton(po);

  00033	68 0c 01 00 00	 push	 268			; 0000010cH
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterTo
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CToggleButton@UI@@QAE@PAU_object@@@Z ; UI::CToggleButton::CToggleButton
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterTo
$LN3@RegisterTo:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterTo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 299  : 		CWindow * pWin = new CToggleButton(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 300  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterTo

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterTo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 306  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 0c 01 00 00	 push	 268			; 0000010cH
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterToggleButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterToggleButton
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterRadioButton, COMDAT
; _this$ = ecx

; 283  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 286  : 		CWindow * pWin = new CRadioButton(po);

  00033	68 0c 01 00 00	 push	 268			; 0000010cH
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterRa
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CRadioButton@UI@@QAE@PAU_object@@@Z ; UI::CRadioButton::CRadioButton
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterRa
$LN3@RegisterRa:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterRa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 286  : 		CWindow * pWin = new CRadioButton(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 287  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterRa

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterRa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 293  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 0c 01 00 00	 push	 268			; 0000010cH
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterRadioButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterRadioButton
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterButton, COMDAT
; _this$ = ecx

; 270  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 273  : 		CWindow * pWin = new CButton(po);

  00033	68 0c 01 00 00	 push	 268			; 0000010cH
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterBu
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterBu
$LN3@RegisterBu:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterBu:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 273  : 		CWindow * pWin = new CButton(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 274  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterBu

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterBu:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 280  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 0c 01 00 00	 push	 268			; 0000010cH
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterButton@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterButton
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterAniImageBox, COMDAT
; _this$ = ecx

; 257  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 260  : 		CWindow * pWin = new CAniImageBox(po);

  00033	68 8c 00 00 00	 push	 140			; 0000008cH
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterAn
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterAn
$LN3@RegisterAn:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterAn:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 260  : 		CWindow * pWin = new CAniImageBox(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 261  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterAn

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterAn:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 267  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 8c 00 00 00	 push	 140			; 0000008cH
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterAniImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterAniImageBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterExpandedImageBox, COMDAT
; _this$ = ecx

; 244  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 247  : 		CWindow * pWin = new CExpandedImageBox(po);

  00033	68 80 00 00 00	 push	 128			; 00000080H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterEx
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z ; UI::CExpandedImageBox::CExpandedImageBox
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterEx
$LN3@RegisterEx:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterEx:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 247  : 		CWindow * pWin = new CExpandedImageBox(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 248  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterEx

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterEx:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 254  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterExpandedImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterExpandedImageBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterImageBox, COMDAT
; _this$ = ecx

; 218  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 221  : 		CWindow * pWin = new CImageBox(po);

  00033	68 80 00 00 00	 push	 128			; 00000080H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterIm
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterIm
$LN3@RegisterIm:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterIm:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 221  : 		CWindow * pWin = new CImageBox(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 222  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterIm

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterIm:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 228  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterImageBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterImageBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterMarkBox, COMDAT
; _this$ = ecx

; 231  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 234  : 		CWindow * pWin = new CMarkBox(po);

  00033	68 80 00 00 00	 push	 128			; 00000080H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterMa
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CMarkBox@UI@@QAE@PAU_object@@@Z ; UI::CMarkBox::CMarkBox
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterMa
$LN3@RegisterMa:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 234  : 		CWindow * pWin = new CMarkBox(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 235  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterMa

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterMa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 241  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterMarkBox@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterMarkBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterTextLine, COMDAT
; _this$ = ecx

; 205  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 208  : 		CWindow * pWin = new CTextLine(po);

  00033	68 f8 00 00 00	 push	 248			; 000000f8H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterTe
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CTextLine@UI@@QAE@PAU_object@@@Z ; UI::CTextLine::CTextLine
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterTe
$LN3@RegisterTe:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterTe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 208  : 		CWindow * pWin = new CTextLine(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 209  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterTe

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterTe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 215  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 f8 00 00 00	 push	 248			; 000000f8H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterTextLine@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterTextLine
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterGridSlotWindow, COMDAT
; _this$ = ecx

; 192  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 195  : 		CWindow * pWin = new CGridSlotWindow(po);

  00033	68 dc 00 00 00	 push	 220			; 000000dcH
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterGr
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CGridSlotWindow@UI@@QAE@PAU_object@@@Z ; UI::CGridSlotWindow::CGridSlotWindow
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterGr
$LN3@RegisterGr:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterGr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 195  : 		CWindow * pWin = new CGridSlotWindow(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 196  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterGr

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterGr:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 202  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 dc 00 00 00	 push	 220			; 000000dcH
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterGridSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterGridSlotWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterSlotWindow, COMDAT
; _this$ = ecx

; 179  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 182  : 		CWindow * pWin = new CSlotWindow(po);

  00033	68 c8 00 00 00	 push	 200			; 000000c8H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN3@RegisterSl
  0004e	56		 push	 esi
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CSlotWindow@UI@@QAE@PAU_object@@@Z ; UI::CSlotWindow::CSlotWindow
  00056	8b f0		 mov	 esi, eax
  00058	eb 02		 jmp	 SHORT $LN4@RegisterSl
$LN3@RegisterSl:
  0005a	33 f6		 xor	 esi, esi
$LN4@RegisterSl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0005c	53		 push	 ebx
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 182  : 		CWindow * pWin = new CSlotWindow(po);

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00079	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 183  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00081	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00094	56		 push	 esi
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0009c	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a2	72 0d		 jb	 SHORT $LN25@RegisterSl

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	50		 push	 eax
  000a6	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ae	83 c4 08	 add	 esp, 8
$LN25@RegisterSl:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 189  : 	}

  000b1	8b c6		 mov	 eax, esi
  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	68 c8 00 00 00	 push	 200			; 000000c8H
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  00012	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterSlotWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterSlotWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_dwWndType$ = 12					; size = 4
_c_szLayer$ = 16					; size = 4
?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z PROC ; UI::CWindowManager::RegisterTypeWindow, COMDAT
; _this$ = ecx

; 166  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 45 0c	 mov	 eax, DWORD PTR _dwWndType$[ebp]
  00030	8b 55 08	 mov	 edx, DWORD PTR _po$[ebp]
  00033	8b 75 10	 mov	 esi, DWORD PTR _c_szLayer$[ebp]

; 169  : 		CWindow * pWin = __NewWindow(po, dwWndType);

  00036	50		 push	 eax
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ?__NewWindow@CWindowManager@UI@@AAEPAVCWindow@2@PAU_object@@K@Z ; UI::CWindowManager::__NewWindow
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0003d	56		 push	 esi
  0003e	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00041	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 169  : 		CWindow * pWin = __NewWindow(po, dwWndType);

  00048	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00051	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0

; 2339 :         assign(_Ptr);

  00055	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 170  : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0005a	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	50		 push	 eax
  00065	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0006b	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00070	53		 push	 ebx
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00078	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp+20]
  0007b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007e	72 0d		 jb	 SHORT $LN22@RegisterTy

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00080	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00081	50		 push	 eax
  00082	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  00085	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008a	83 c4 08	 add	 esp, 8
$LN22@RegisterTy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 176  : 	}

  0008d	8b c3		 mov	 eax, ebx
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00099	59		 pop	 ecx
  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a0	33 cd		 xor	 ecx, ebp
  000a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterTypeWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@KPBD@Z ENDP ; UI::CWindowManager::RegisterTypeWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_po$ = 8						; size = 4
_c_szLayer$ = 12					; size = 4
?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z PROC ; UI::CWindowManager::RegisterWindow, COMDAT
; _this$ = ecx

; 95   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _po$[ebp]
  00030	8b 5d 0c	 mov	 ebx, DWORD PTR _c_szLayer$[ebp]

; 98   : 		CWindow * pWin = new CWindow(po);

  00033	6a 7c		 push	 124			; 0000007cH
  00035	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	85 c0		 test	 eax, eax
  00049	74 0c		 je	 SHORT $LN3@RegisterWi
  0004b	56		 push	 esi
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00053	8b f0		 mov	 esi, eax
  00055	eb 02		 jmp	 SHORT $LN4@RegisterWi
$LN3@RegisterWi:
  00057	33 f6		 xor	 esi, esi
$LN4@RegisterWi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00059	53		 push	 ebx
  0005a	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 98   : 		CWindow * pWin = new CWindow(po);

  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00064	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00072	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00076	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 99   : 		m_LayerWindowMap[c_szLayer]->AddChild(pWin);

  0007b	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0007e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00085	50		 push	 eax
  00086	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  0008c	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAEAAPAVCWindow@UI@@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::operator[]
  00091	56		 push	 esi
  00092	8b 08		 mov	 ecx, DWORD PTR [eax]
  00094	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00099	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
  0009c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0009f	72 0d		 jb	 SHORT $LN25@RegisterWi

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a1	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a2	50		 push	 eax
  000a3	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ab	83 c4 08	 add	 esp, 8
$LN25@RegisterWi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 104  : 	}

  000ae	8b c6		 mov	 eax, esi
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ba	59		 pop	 ecx
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c1	33 cd		 xor	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$0:
  00000	6a 7c		 push	 124			; 0000007cH
  00002	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__unwindfunclet$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z$1:
  0000f	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00012	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
__ehhandler$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z:
  0001c	90		 npad	 1
  0001d	90		 npad	 1
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterWindow@CWindowManager@UI@@QAEPAVCWindow@2@PAU_object@@PBD@Z ENDP ; UI::CWindowManager::RegisterWindow
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetPickAlways@CWindowManager@UI@@QAEXPAVCWindow@2@@Z
_TEXT	SEGMENT
_pWindow$ = 8						; size = 4
?SetPickAlways@CWindowManager@UI@@QAEXPAVCWindow@2@@Z PROC ; UI::CWindowManager::SetPickAlways, COMDAT
; _this$ = ecx

; 522  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 523  : 		m_PickAlwaysWindowList.push_back(pWindow);

  00003	8d 45 08	 lea	 eax, DWORD PTR _pWindow$[ebp]
  00006	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 524  : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?SetPickAlways@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ENDP ; UI::CWindowManager::SetPickAlways
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z
_TEXT	SEGMENT
_pWindow$ = 8						; size = 4
_pParentWindow$ = 12					; size = 4
?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z PROC	; UI::CWindowManager::SetParent, COMDAT
; _this$ = ecx

; 496  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 497  : 		if (!pWindow)

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWindow$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 2a		 je	 SHORT $LN1@SetParent

; 498  : 		{
; 499  : 			assert(!"CWindowManager::SetParent - There is no self window!");
; 500  : 			return;
; 501  : 		}
; 502  : 		if (!pParentWindow)

  0000b	57		 push	 edi
  0000c	8b 7d 0c	 mov	 edi, DWORD PTR _pParentWindow$[ebp]
  0000f	85 ff		 test	 edi, edi
  00011	74 21		 je	 SHORT $LN9@SetParent
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 81   : 			bool			HasParent()		{ return m_pParent ? true : false; }

  00013	83 7e 60 00	 cmp	 DWORD PTR [esi+96], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 508  : 		if (pWindow->HasParent())

  00017	74 13		 je	 SHORT $LN4@SetParent

; 509  : 		{
; 510  : 			CWindow * pOldParentWindow = pWindow->GetParent();

  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?GetParent@CWindow@UI@@QAEPAV12@XZ ; UI::CWindow::GetParent

; 511  : 
; 512  : 			if (pParentWindow == pOldParentWindow)

  00020	3b f8		 cmp	 edi, eax
  00022	74 10		 je	 SHORT $LN9@SetParent

; 513  : 				return;
; 514  : 
; 515  : 			pOldParentWindow->DeleteChild(pWindow);

  00024	56		 push	 esi
  00025	8b c8		 mov	 ecx, eax
  00027	e8 00 00 00 00	 call	 ?DeleteChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::DeleteChild
$LN4@SetParent:

; 516  : 		}
; 517  : 
; 518  : 		pParentWindow->AddChild(pWindow);

  0002c	56		 push	 esi
  0002d	8b cf		 mov	 ecx, edi
  0002f	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
$LN9@SetParent:
  00034	5f		 pop	 edi
$LN1@SetParent:
  00035	5e		 pop	 esi

; 519  : 	}

  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ENDP	; UI::CWindowManager::SetParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?IsDragging@CWindowManager@UI@@QAEHXZ
_TEXT	SEGMENT
?IsDragging@CWindowManager@UI@@QAEHXZ PROC		; UI::CWindowManager::IsDragging, COMDAT
; _this$ = ecx

; 439  : 		long ldy = abs(m_lMouseY - m_lPickedY);

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00003	2b 41 28	 sub	 eax, DWORD PTR [ecx+40]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h

; 361  :         return labs(_X);

  00006	99		 cdq
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 437  : 	{

  00007	56		 push	 esi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h

; 361  :         return labs(_X);

  00008	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 438  : 		long ldx = abs(m_lMouseX - m_lPickedX);

  0000a	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0000d	2b 41 24	 sub	 eax, DWORD PTR [ecx+36]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdlib.h

; 361  :         return labs(_X);

  00010	33 f2		 xor	 esi, edx
  00012	2b f2		 sub	 esi, edx
  00014	99		 cdq
  00015	33 c2		 xor	 eax, edx
  00017	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 440  : 		if (ldx+ldy < 10)

  00019	03 f0		 add	 esi, eax
  0001b	33 c0		 xor	 eax, eax
  0001d	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00020	5e		 pop	 esi
  00021	0f 9d c0	 setge	 al

; 441  : 			return FALSE;
; 442  : 
; 443  : 		return TRUE;
; 444  : 	}

  00024	c3		 ret	 0
?IsDragging@CWindowManager@UI@@QAEHXZ ENDP		; UI::CWindowManager::IsDragging
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rx$ = 8						; size = 4
_ry$ = 12						; size = 4
?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z PROC	; UI::CWindowManager::GetMousePosition, COMDAT
; _this$ = ecx

; 740  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 741  : 		rx = m_lMouseX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _rx$[ebp]
  00006	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00009	89 10		 mov	 DWORD PTR [eax], edx

; 742  : 		ry = m_lMouseY;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _ry$[ebp]
  0000e	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00011	89 08		 mov	 DWORD PTR [eax], ecx

; 743  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ENDP	; UI::CWindowManager::GetMousePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetMouseHandler@CWindowManager@UI@@QAEXPAU_object@@@Z
_TEXT	SEGMENT
_poMouseHandler$ = 8					; size = 4
?SetMouseHandler@CWindowManager@UI@@QAEXPAU_object@@@Z PROC ; UI::CWindowManager::SetMouseHandler, COMDAT
; _this$ = ecx

; 90   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   : 		m_poMouseHandler = poMouseHandler;

  00003	8b 45 08	 mov	 eax, DWORD PTR _poMouseHandler$[ebp]
  00006	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 92   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetMouseHandler@CWindowManager@UI@@QAEXPAU_object@@@Z ENDP ; UI::CWindowManager::SetMouseHandler
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetResolution@CWindowManager@UI@@QAEXHH@Z
_TEXT	SEGMENT
_hres$ = 8						; size = 4
_vres$ = 12						; size = 4
?SetResolution@CWindowManager@UI@@QAEXHH@Z PROC		; UI::CWindowManager::SetResolution, COMDAT
; _this$ = ecx

; 650  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 651  : 		if (hres<=0 || vres<=0)

  00003	8b 55 08	 mov	 edx, DWORD PTR _hres$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	7e 0d		 jle	 SHORT $LN3@SetResolut
  0000a	8b 45 0c	 mov	 eax, DWORD PTR _vres$[ebp]
  0000d	85 c0		 test	 eax, eax
  0000f	7e 06		 jle	 SHORT $LN3@SetResolut

; 652  : 			return;
; 653  : 
; 654  : 		m_iHres = hres;

  00011	89 51 10	 mov	 DWORD PTR [ecx+16], edx

; 655  : 		m_iVres = vres;

  00014	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
$LN3@SetResolut:

; 656  : 	}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?SetResolution@CWindowManager@UI@@QAEXHH@Z ENDP		; UI::CWindowManager::SetResolution
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?SetScreenSize@CWindowManager@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_lWidth$ = 8						; size = 4
_lHeight$ = 12						; size = 4
?SetScreenSize@CWindowManager@UI@@QAEXJJ@Z PROC		; UI::CWindowManager::SetScreenSize, COMDAT
; _this$ = ecx

; 664  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 665  : 		m_lWidth	= lWidth;

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _lWidth$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 666  : 		m_lHeight	= lHeight;

  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _lHeight$[ebp]
  0000e	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  00011	89 4f 08	 mov	 DWORD PTR [edi+8], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00014	8b 87 98 00 00
	00		 mov	 eax, DWORD PTR [edi+152]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0001a	8b 30		 mov	 esi, DWORD PTR [eax]
  0001c	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 668  : 		for (TLayerContainer::iterator itor = m_LayerWindowMap.begin(); itor != m_LayerWindowMap.end(); ++itor)

  0001e	74 57		 je	 SHORT $LN3@SetScreenS
$LL22@SetScreenS:

; 669  : 		{
; 670  : 			itor->second->SetSize(lWidth, lHeight);

  00020	51		 push	 ecx
  00021	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00024	53		 push	 ebx
  00025	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0002a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0002d	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00031	74 21		 je	 SHORT $LN21@SetScreenS

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00033	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00036	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003a	75 14		 jne	 SHORT $LN58@SetScreenS
  0003c	0f 1f 40 00	 npad	 4
$LL19@SetScreenS:
  00040	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00043	75 0b		 jne	 SHORT $LN58@SetScreenS

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00045	8b f0		 mov	 esi, eax
  00047	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004e	74 f0		 je	 SHORT $LL19@SetScreenS
$LN58@SetScreenS:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00050	8b f0		 mov	 esi, eax

; 59   :         } else {

  00052	eb 18		 jmp	 SHORT $LN26@SetScreenS
$LN21@SetScreenS:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00054	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00056	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00058	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0005c	75 0e		 jne	 SHORT $LN26@SetScreenS
  0005e	66 90		 npad	 2
$LL25@SetScreenS:
  00060	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00062	8b f1		 mov	 esi, ecx
  00064	8b c8		 mov	 ecx, eax
  00066	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0006a	74 f4		 je	 SHORT $LL25@SetScreenS
$LN26@SetScreenS:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 668  : 		for (TLayerContainer::iterator itor = m_LayerWindowMap.begin(); itor != m_LayerWindowMap.end(); ++itor)

  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR _lHeight$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  0006f	3b b7 98 00 00
	00		 cmp	 esi, DWORD PTR [edi+152]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 668  : 		for (TLayerContainer::iterator itor = m_LayerWindowMap.begin(); itor != m_LayerWindowMap.end(); ++itor)

  00075	75 a9		 jne	 SHORT $LL22@SetScreenS
$LN3@SetScreenS:
  00077	5f		 pop	 edi

; 671  : 		}
; 672  : 	}

  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
?SetScreenSize@CWindowManager@UI@@QAEXJJ@Z ENDP		; UI::CWindowManager::SetScreenSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?GetAspect@CWindowManager@UI@@QAEMXZ
_TEXT	SEGMENT
tv134 = -4						; size = 4
?GetAspect@CWindowManager@UI@@QAEMXZ PROC		; UI::CWindowManager::GetAspect, COMDAT
; _this$ = ecx

; 659  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	66 0f 6e 49 10	 movd	 xmm1, DWORD PTR [ecx+16]
  00009	66 0f 6e 41 0c	 movd	 xmm0, DWORD PTR [ecx+12]

; 660  : 		return (m_iHres)/float(m_iVres);

  0000e	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00011	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00014	f3 0f 5e c8	 divss	 xmm1, xmm0
  00018	f3 0f 11 4d fc	 movss	 DWORD PTR tv134[ebp], xmm1
  0001d	d9 45 fc	 fld	 DWORD PTR tv134[ebp]

; 661  : 	}

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetAspect@CWindowManager@UI@@QAEMXZ ENDP		; UI::CWindowManager::GetAspect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ?Destroy@CWindowManager@UI@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CWindowManager@UI@@QAEXXZ PROC			; UI::CWindowManager::Destroy, COMDAT
; _this$ = ecx

; 77   : 		__ClearReserveDeleteWindowList();

  00000	e9 00 00 00 00	 jmp	 ?__ClearReserveDeleteWindowList@CWindowManager@UI@@AAEXXZ ; UI::CWindowManager::__ClearReserveDeleteWindowList
?Destroy@CWindowManager@UI@@QAEXXZ ENDP			; UI::CWindowManager::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ??1CWindowManager@UI@@UAE@XZ
_TEXT	SEGMENT
__Head$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CWindowManager@UI@@UAE@XZ PROC			; UI::CWindowManager::~CWindowManager, COMDAT
; _this$ = ecx

; 63   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CWindowManager@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx

; 64   : 		Py_DECREF(gs_poEmptyTuple);

  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gs_poEmptyTuple@UI@@3PAU_object@@A
  0002e	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CWindowManager@UI@@6B@
  00034	83 01 ff	 add	 DWORD PTR [ecx], -1
  00037	75 0c		 jne	 SHORT $LN2@CWindowMan
  00039	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0003c	51		 push	 ecx
  0003d	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00040	ff d0		 call	 eax
  00042	83 c4 04	 add	 esp, 4
$LN2@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00045	8b bb 98 00 00
	00		 mov	 edi, DWORD PTR [ebx+152]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 66   : 		stl_wipe_second(m_LayerWindowMap);

  0004b	8d 93 98 00 00
	00		 lea	 edx, DWORD PTR [ebx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00051	8b 37		 mov	 esi, DWORD PTR [edi]
  00053	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 127  : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00055	74 5b		 je	 SHORT $LN12@CWindowMan
$LL33@CWindowMan:

; 128  : 	{
; 129  : 		delete i->second;

  00057	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 0c		 je	 SHORT $LN11@CWindowMan
  0005e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00060	6a 01		 push	 1
  00062	ff 10		 call	 DWORD PTR [eax]
  00064	8d 93 98 00 00
	00		 lea	 edx, DWORD PTR [ebx+152]
$LN11@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0006a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0006d	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00071	74 21		 je	 SHORT $LN32@CWindowMan

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00073	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00076	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0007a	75 14		 jne	 SHORT $LN31@CWindowMan
  0007c	0f 1f 40 00	 npad	 4
$LL30@CWindowMan:
  00080	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00083	75 0b		 jne	 SHORT $LN31@CWindowMan

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00085	8b f0		 mov	 esi, eax
  00087	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0008a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0008e	74 f0		 je	 SHORT $LL30@CWindowMan
$LN31@CWindowMan:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00090	8b f0		 mov	 esi, eax

; 59   :         } else {

  00092	eb 18		 jmp	 SHORT $LN211@CWindowMan
$LN32@CWindowMan:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00094	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00096	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00098	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0009c	75 0e		 jne	 SHORT $LN211@CWindowMan
  0009e	66 90		 npad	 2
$LL36@CWindowMan:
  000a0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  000a2	8b f1		 mov	 esi, ecx
  000a4	8b c8		 mov	 ecx, eax
  000a6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000aa	74 f4		 je	 SHORT $LL36@CWindowMan
$LN211@CWindowMan:

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  000ac	8b 3a		 mov	 edi, DWORD PTR [edx]

; 232  :         return this->_Ptr == _Right._Ptr;

  000ae	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 127  : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  000b0	75 a5		 jne	 SHORT $LL33@CWindowMan
$LN12@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  000b2	ff 77 04	 push	 DWORD PTR [edi+4]
  000b5	8b ca		 mov	 ecx, edx
  000b7	52		 push	 edx
  000b8	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >

; 1449 :         _Head->_Parent  = _Head;

  000bd	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  000c0	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  000c2	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  000c5	8d bb 98 00 00
	00		 lea	 edi, DWORD PTR [ebx+152]
  000cb	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  000d2	8b cf		 mov	 ecx, edi
  000d4	8b 37		 mov	 esi, DWORD PTR [edi]
  000d6	ff 76 04	 push	 DWORD PTR [esi+4]
  000d9	57		 push	 edi
  000da	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >

; 1449 :         _Head->_Parent  = _Head;

  000df	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 1450 :         _Head->_Left    = _Head;

  000e2	89 36		 mov	 DWORD PTR [esi], esi

; 1451 :         _Head->_Right   = _Head;

  000e4	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1452 :         _Scary->_Mysize = 0;

  000e7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  000ee	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]

; 324  :         _Head->_Prev->_Next = nullptr;

  000f4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000f7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  000fd	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000ff	85 c0		 test	 eax, eax
  00101	74 13		 je	 SHORT $LN65@CWindowMan
$LL66@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  00103	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00105	6a 0c		 push	 12			; 0000000cH
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0010d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00110	8b c6		 mov	 eax, esi
  00112	85 f6		 test	 esi, esi
  00114	75 ed		 jne	 SHORT $LL66@CWindowMan
$LN65@CWindowMan:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00116	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 69   : 		m_KeyCaptureWindowMap.clear();

  0011c	8d 7b 74	 lea	 edi, DWORD PTR [ebx+116]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  0011f	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  00121	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  00127	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  0012a	c7 83 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+148], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  00134	8b 07		 mov	 eax, DWORD PTR [edi]
  00136	89 45 f0	 mov	 DWORD PTR __Head$1$[ebp], eax

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00139	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0013c	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00140	75 23		 jne	 SHORT $LN78@CWindowMan
$LL77@CWindowMan:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00142	ff 76 08	 push	 DWORD PTR [esi+8]
  00145	8b cf		 mov	 ecx, edi
  00147	57		 push	 edi
  00148	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0014d	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0014f	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00151	6a 18		 push	 24			; 00000018H
  00153	50		 push	 eax
  00154	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00159	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0015c	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00160	74 e0		 je	 SHORT $LL77@CWindowMan
  00162	8b 45 f0	 mov	 eax, DWORD PTR __Head$1$[ebp]
$LN78@CWindowMan:

; 1449 :         _Head->_Parent  = _Head;

  00165	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1450 :         _Head->_Left    = _Head;

  00168	89 00		 mov	 DWORD PTR [eax], eax

; 1451 :         _Head->_Right   = _Head;

  0016a	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1452 :         _Scary->_Mysize = 0;

  0016d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 71   : 		delete m_pRootWindow;

  00174	8b 8b 8c 00 00
	00		 mov	 ecx, DWORD PTR [ebx+140]
  0017a	85 c9		 test	 ecx, ecx
  0017c	74 06		 je	 SHORT $LN8@CWindowMan
  0017e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00180	6a 01		 push	 1
  00182	ff 10		 call	 DWORD PTR [eax]
$LN8@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00184	8d b3 98 00 00
	00		 lea	 esi, DWORD PTR [ebx+152]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 72   : 		m_pRootWindow = NULL;

  0018a	c7 83 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+140], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00194	8b 06		 mov	 eax, DWORD PTR [esi]
  00196	8b ce		 mov	 ecx, esi
  00198	ff 70 04	 push	 DWORD PTR [eax+4]
  0019b	56		 push	 esi
  0019c	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001a1	6a 2c		 push	 44			; 0000002cH
  001a3	ff 36		 push	 DWORD PTR [esi]
  001a5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  001aa	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001b0	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  001b3	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001b6	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  001bc	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  001be	85 c0		 test	 eax, eax
  001c0	74 13		 je	 SHORT $LN105@CWindowMan
$LL106@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  001c2	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001c4	6a 0c		 push	 12			; 0000000cH
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001cc	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  001cf	8b c6		 mov	 eax, esi
  001d1	85 f6		 test	 esi, esi
  001d3	75 ed		 jne	 SHORT $LL106@CWindowMan
$LN105@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001d5	6a 0c		 push	 12			; 0000000cH
  001d7	ff b3 90 00 00
	00		 push	 DWORD PTR [ebx+144]
  001dd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  001e2	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001e8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  001eb	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001ee	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  001f4	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  001f6	85 c0		 test	 eax, eax
  001f8	74 19		 je	 SHORT $LN124@CWindowMan
  001fa	66 0f 1f 44 00
	00		 npad	 6
$LL125@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  00200	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00202	6a 0c		 push	 12			; 0000000cH
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0020a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0020d	8b c6		 mov	 eax, esi
  0020f	85 f6		 test	 esi, esi
  00211	75 ed		 jne	 SHORT $LL125@CWindowMan
$LN124@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00213	6a 0c		 push	 12			; 0000000cH
  00215	ff b3 84 00 00
	00		 push	 DWORD PTR [ebx+132]
  0021b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00220	8b 4b 7c	 mov	 ecx, DWORD PTR [ebx+124]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00223	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00226	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00229	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0022f	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00231	85 c0		 test	 eax, eax
  00233	74 13		 je	 SHORT $LN143@CWindowMan
$LL144@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  00235	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00237	6a 0c		 push	 12			; 0000000cH
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0023f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00242	8b c6		 mov	 eax, esi
  00244	85 f6		 test	 esi, esi
  00246	75 ed		 jne	 SHORT $LL144@CWindowMan
$LN143@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00248	6a 0c		 push	 12			; 0000000cH
  0024a	ff 73 7c	 push	 DWORD PTR [ebx+124]
  0024d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00252	83 c4 08	 add	 esp, 8
  00255	8b cf		 mov	 ecx, edi
  00257	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >::~_Tree<std::_Tmap_traits<int,UI::CWindow *,std::less<int>,std::allocator<std::pair<int const ,UI::CWindow *> >,0> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0025c	8b 4b 5c	 mov	 ecx, DWORD PTR [ebx+92]

; 324  :         _Head->_Prev->_Next = nullptr;

  0025f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00262	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00268	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0026a	85 c0		 test	 eax, eax
  0026c	74 15		 je	 SHORT $LN165@CWindowMan
  0026e	66 90		 npad	 2
$LL166@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  00270	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00272	6a 0c		 push	 12			; 0000000cH
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0027a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0027d	8b c6		 mov	 eax, esi
  0027f	85 f6		 test	 esi, esi
  00281	75 ed		 jne	 SHORT $LL166@CWindowMan
$LN165@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00283	6a 0c		 push	 12			; 0000000cH
  00285	ff 73 5c	 push	 DWORD PTR [ebx+92]
  00288	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0028d	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00290	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00293	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00296	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0029c	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0029e	85 c0		 test	 eax, eax
  002a0	74 13		 je	 SHORT $LN184@CWindowMan
$LL185@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  002a2	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  002a4	6a 0c		 push	 12			; 0000000cH
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002ac	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  002af	8b c6		 mov	 eax, esi
  002b1	85 f6		 test	 esi, esi
  002b3	75 ed		 jne	 SHORT $LL185@CWindowMan
$LN184@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  002b5	6a 0c		 push	 12			; 0000000cH
  002b7	ff 73 50	 push	 DWORD PTR [ebx+80]
  002ba	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h

; 19   : 	{

  002bf	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CSingleton@VCWindowManager@UI@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  002c5	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h

; 21   : 		ms_singleton = 0;

  002c8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A, 0 ; CSingleton<UI::CWindowManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 73   : 	}

  002d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002dc	59		 pop	 ecx
  002dd	5f		 pop	 edi
  002de	5e		 pop	 esi
  002df	5b		 pop	 ebx
  002e0	8b e5		 mov	 esp, ebp
  002e2	5d		 pop	 ebp
  002e3	c3		 ret	 0
  002e4	cc		 int	 3
  002e5	cc		 int	 3
  002e6	cc		 int	 3
  002e7	cc		 int	 3
  002e8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CWindowManager@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CWindowManager@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CWindowManager@UI@@UAE@XZ ENDP			; UI::CWindowManager::~CWindowManager
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp
;	COMDAT ??0CWindowManager@UI@@QAE@XZ
_TEXT	SEGMENT
$T2 = -156						; size = 12
__Loc$3 = -144						; size = 12
$T4 = -132						; size = 4
_this$GSCopy$ = -128					; size = 4
__Op$5 = -124						; size = 8
$T6 = -116						; size = 8
__New_array$7 = -108					; size = 4
_layer$1$ = -104					; size = 4
$T8 = -100						; size = 4
_this$1$ = -96						; size = 4
$T9 = -92						; size = 4
__Result$2$ = -88					; size = 4
__Insert_after$10 = -88					; size = 4
$T11 = -84						; size = 4
__Where$1$ = -84					; size = 4
_this$GSCopy$1$ = -80					; size = 4
$T12 = -76						; size = 4
__Insert_before$13 = -76				; size = 4
_this$ = -76						; size = 4
_this$ = -76						; size = 4
$T14 = -76						; size = 4
_this$ = -76						; size = 4
__Myhead$15 = -72					; size = 4
__Pnode$16 = -72					; size = 4
__Pnode$17 = -72					; size = 4
$T18 = -68						; size = 4
__Newhead$19 = -68					; size = 4
__Newhead$20 = -68					; size = 4
__Newhead$21 = -68					; size = 4
__Newhead$22 = -68					; size = 4
__Newhead$23 = -68					; size = 4
$T24 = -64						; size = 28
_layerTbl$ = -36					; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0CWindowManager@UI@@QAE@XZ PROC			; UI::CWindowManager::CWindowManager, COMDAT
; _this$ = ecx

; 39   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWindowManager@UI@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f9		 mov	 edi, ecx
  0002f	89 7d b0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00032	89 7d b4	 mov	 DWORD PTR _this$[ebp], edi
  00035	89 7d 80	 mov	 DWORD PTR _this$GSCopy$[ebp], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  00038	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A, edi ; CSingleton<UI::CWindowManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  0003e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWindowManager@UI@@6B@

; 37   : 		m_iVres(0),

  00044	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 36   : 		m_iHres(0),

  0004b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 38   : 		m_bOnceIgnoreMouseLeftButtonUpEventFlag(FALSE)

  00052	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0

; 35   : 		m_poMouseHandler(NULL),

  00059	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0

; 31   : 		m_bAttachingFlag(FALSE),

  00060	c7 47 38 00 00
	00 00		 mov	 DWORD PTR [edi+56], 0

; 32   : 		m_dwAttachingType(0),

  00067	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0

; 33   : 		m_dwAttachingIndex(0),

  0006e	c7 47 40 00 00
	00 00		 mov	 DWORD PTR [edi+64], 0

; 34   : 		m_dwAttachingSlotNumber(0),

  00075	c7 47 44 00 00
	00 00		 mov	 DWORD PTR [edi+68], 0

; 25   : 		m_pActiveWindow(NULL),

  0007c	c7 47 4c 00 00
	00 00		 mov	 DWORD PTR [edi+76], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00083	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  00085	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  0008c	c7 47 50 00 00
	00 00		 mov	 DWORD PTR [edi+80], 0
  00093	c7 47 54 00 00
	00 00		 mov	 DWORD PTR [edi+84], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  0009f	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000a1	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$23[ebp]
  000a4	50		 push	 eax
  000a5	56		 push	 esi
  000a6	89 75 bc	 mov	 DWORD PTR __Newhead$23[ebp], esi
  000a9	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000ae	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$23[ebp]
  000b1	50		 push	 eax
  000b2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  000bb	89 77 50	 mov	 DWORD PTR [edi+80], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 30   : 		m_pLockWindow(NULL),

  000be	c7 47 58 00 00
	00 00		 mov	 DWORD PTR [edi+88], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c5	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  000c7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  000cb	c7 47 5c 00 00
	00 00		 mov	 DWORD PTR [edi+92], 0
  000d2	c7 47 60 00 00
	00 00		 mov	 DWORD PTR [edi+96], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000d9	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  000de	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000e0	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$22[ebp]
  000e3	50		 push	 eax
  000e4	56		 push	 esi
  000e5	89 75 bc	 mov	 DWORD PTR __Newhead$22[ebp], esi
  000e8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000ed	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$22[ebp]
  000f0	50		 push	 eax
  000f1	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  000fa	89 77 5c	 mov	 DWORD PTR [edi+92], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 26   : 		m_pPointWindow(NULL),

  000fd	c7 47 64 00 00
	00 00		 mov	 DWORD PTR [edi+100], 0

; 27   : 		m_pLeftCaptureWindow(NULL),

  00104	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], 0

; 29   : 		m_pRightCaptureWindow(NULL),

  0010b	c7 47 6c 00 00
	00 00		 mov	 DWORD PTR [edi+108], 0

; 28   : 		m_pMiddleCaptureWindow(NULL),

  00112	c7 47 70 00 00
	00 00		 mov	 DWORD PTR [edi+112], 0

; 39   : 	{

  00119	83 c7 74	 add	 edi, 116		; 00000074H
  0011c	89 7d b4	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0011f	6a 18		 push	 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  00121	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00125	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0012b	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00132	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00137	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00139	8d 45 b8	 lea	 eax, DWORD PTR __Pnode$17[ebp]
  0013c	50		 push	 eax
  0013d	56		 push	 esi
  0013e	89 75 b8	 mov	 DWORD PTR __Pnode$17[ebp], esi
  00141	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00146	8d 45 b8	 lea	 eax, DWORD PTR __Pnode$17[ebp]
  00149	50		 push	 eax
  0014a	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00153	8d 45 b8	 lea	 eax, DWORD PTR __Pnode$17[ebp]
  00156	50		 push	 eax
  00157	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<int const ,UI::CWindow *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00160	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00166	83 c4 44	 add	 esp, 68			; 00000044H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00169	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  0016b	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0016e	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  00170	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00174	c7 47 7c 00 00
	00 00		 mov	 DWORD PTR [edi+124], 0
  0017b	c7 87 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+128], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00185	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  0018a	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  0018c	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$21[ebp]
  0018f	50		 push	 eax
  00190	56		 push	 esi
  00191	89 75 bc	 mov	 DWORD PTR __Newhead$21[ebp], esi
  00194	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00199	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$21[ebp]
  0019c	50		 push	 eax
  0019d	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  001a6	89 77 7c	 mov	 DWORD PTR [edi+124], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001a9	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  001ab	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  001af	c7 87 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+132], 0
  001b9	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001c3	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  001c8	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  001ca	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$20[ebp]
  001cd	50		 push	 eax
  001ce	56		 push	 esi
  001cf	89 75 bc	 mov	 DWORD PTR __Newhead$20[ebp], esi
  001d2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  001d7	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$20[ebp]
  001da	50		 push	 eax
  001db	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  001e4	89 b7 84 00 00
	00		 mov	 DWORD PTR [edi+132], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001ea	6a 0c		 push	 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  001ec	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  001f0	c7 87 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+144], 0
  001fa	c7 87 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+148], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00204	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  00209	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  0020b	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$19[ebp]
  0020e	50		 push	 eax
  0020f	56		 push	 esi
  00210	89 75 bc	 mov	 DWORD PTR __Newhead$19[ebp], esi
  00213	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00218	8d 45 bc	 lea	 eax, DWORD PTR __Newhead$19[ebp]
  0021b	50		 push	 eax
  0021c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  00225	89 b7 90 00 00
	00		 mov	 DWORD PTR [edi+144], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 39   : 	{

  0022b	81 c7 98 00 00
	00		 add	 edi, 152		; 00000098H
  00231	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00235	89 7d b4	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00238	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0023a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00240	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00247	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0024c	83 c4 40	 add	 esp, 64			; 00000040H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0024f	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00251	8d 45 b8	 lea	 eax, DWORD PTR __Pnode$16[ebp]
  00254	89 75 b8	 mov	 DWORD PTR __Pnode$16[ebp], esi
  00257	50		 push	 eax
  00258	56		 push	 esi
  00259	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0025e	8d 45 b8	 lea	 eax, DWORD PTR __Pnode$16[ebp]
  00261	50		 push	 eax
  00262	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0026b	8d 45 b8	 lea	 eax, DWORD PTR __Pnode$16[ebp]
  0026e	50		 push	 eax
  0026f	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00278	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0027e	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 40   : 		m_pRootWindow = new CWindow(NULL);

  00280	6a 7c		 push	 124			; 0000007cH
  00282	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00286	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0028b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0028e	89 45 b4	 mov	 DWORD PTR $T14[ebp], eax
  00291	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00295	85 c0		 test	 eax, eax
  00297	74 0b		 je	 SHORT $LN6@CWindowMan
  00299	6a 00		 push	 0
  0029b	8b c8		 mov	 ecx, eax
  0029d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  002a2	eb 02		 jmp	 SHORT $LN7@CWindowMan
$LN6@CWindowMan:
  002a4	33 c0		 xor	 eax, eax
$LN7@CWindowMan:
  002a6	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]

; 41   : 		m_pRootWindow->SetName("root");

  002a9	8b c8		 mov	 ecx, eax
  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_04NBFCGMPH@root@
  002b0	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  002b4	89 87 8c 00 00
	00		 mov	 DWORD PTR [edi+140], eax
  002ba	e8 00 00 00 00	 call	 ?SetName@CWindow@UI@@QAEXPBD@Z ; UI::CWindow::SetName

; 42   : 		m_pRootWindow->Show();

  002bf	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]
  002c5	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 46   : 		for(DWORD layer = 0; layer < sizeof(layerTbl)/sizeof(layerTbl[0]); layer++)

  002ca	33 f6		 xor	 esi, esi
  002cc	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _layerTbl$[ebp], OFFSET ??_C@_04FOKBGDA@GAME@
  002d3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _layerTbl$[ebp+4], OFFSET ??_C@_09CHAIFIBB@UI_BOTTOM@
  002da	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _layerTbl$[ebp+8], OFFSET ??_C@_02ELHCDOPK@UI@
  002e1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _layerTbl$[ebp+12], OFFSET ??_C@_08MLMBKENF@TOP_MOST@
  002e8	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _layerTbl$[ebp+16], OFFSET ??_C@_07PCOOAIOD@CURTAIN@
  002ef	89 75 98	 mov	 DWORD PTR _layer$1$[ebp], esi
$LL4@CWindowMan:

; 48   : 			CWindow * pLayer = new CLayer(NULL);

  002f2	6a 7c		 push	 124			; 0000007cH
  002f4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002f9	8b f8		 mov	 edi, eax
  002fb	83 c4 04	 add	 esp, 4
  002fe	89 7d bc	 mov	 DWORD PTR $T18[ebp], edi
  00301	89 bd 7c ff ff
	ff		 mov	 DWORD PTR $T4[ebp], edi
  00307	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  0030b	85 ff		 test	 edi, edi
  0030d	74 11		 je	 SHORT $LN8@CWindowMan
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindow.h

; 202  : 			CLayer(PyObject * ppyObject) : CWindow(ppyObject) {}

  0030f	6a 00		 push	 0
  00311	8b cf		 mov	 ecx, edi
  00313	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00318	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CLayer@UI@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 48   : 			CWindow * pLayer = new CLayer(NULL);

  0031e	eb 05		 jmp	 SHORT $LN9@CWindowMan
$LN8@CWindowMan:
  00320	33 ff		 xor	 edi, edi
  00322	89 7d bc	 mov	 DWORD PTR $T18[ebp], edi
$LN9@CWindowMan:

; 49   : 			pLayer->SetName(layerTbl[layer]);

  00325	8b 74 b5 dc	 mov	 esi, DWORD PTR _layerTbl$[ebp+esi*4]
  00329	8b cf		 mov	 ecx, edi
  0032b	56		 push	 esi
  0032c	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00330	e8 00 00 00 00	 call	 ?SetName@CWindow@UI@@QAEXPBD@Z ; UI::CWindow::SetName

; 50   : 			pLayer->Show();

  00335	8b cf		 mov	 ecx, edi
  00337	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0033c	56		 push	 esi
  0033d	8d 4d c0	 lea	 ecx, DWORD PTR $T24[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00340	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T24[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00347	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T24[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0034e	c6 45 c0 00	 mov	 BYTE PTR $T24[ebp], 0

; 2339 :         assign(_Ptr);

  00352	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00357	89 7d d8	 mov	 DWORD PTR $T24[ebp+24], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 51   : 			m_LayerWindowMap.insert(TLayerContainer::value_type(layerTbl[layer], pLayer));

  0035a	8b 75 b0	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0035d	8d 4d c0	 lea	 ecx, DWORD PTR $T24[ebp]
  00360	51		 push	 ecx
  00361	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 51   : 			m_LayerWindowMap.insert(TLayerContainer::value_type(layerTbl[layer], pLayer));

  00367	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0036b	51		 push	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 51   : 			m_LayerWindowMap.insert(TLayerContainer::value_type(layerTbl[layer], pLayer));

  0036c	8d 86 98 00 00
	00		 lea	 eax, DWORD PTR [esi+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00372	8b c8		 mov	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 51   : 			m_LayerWindowMap.insert(TLayerContainer::value_type(layerTbl[layer], pLayer));

  00374	89 45 a0	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00377	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,UI::CWindow *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0037c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0037f	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00383	8b 45 d4	 mov	 eax, DWORD PTR $T24[ebp+20]
  00386	89 45 9c	 mov	 DWORD PTR $T8[ebp], eax
  00389	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0038d	8b 45 c0	 mov	 eax, DWORD PTR $T24[ebp]

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00390	66 0f d6 85 70
	ff ff ff	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00398	89 45 ac	 mov	 DWORD PTR $T11[ebp], eax
  0039b	75 18		 jne	 SHORT $LN176@CWindowMan
  0039d	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  003a0	50		 push	 eax
  003a1	8d 45 c0	 lea	 eax, DWORD PTR $T24[ebp]
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  003aa	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  003ad	84 c0		 test	 al, al
  003af	0f 84 0d 01 00
	00		 je	 $LN267@CWindowMan
$LN176@CWindowMan:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  003b5	8b 4d a0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  003b8	81 79 04 5d 74
	d1 05		 cmp	 DWORD PTR [ecx+4], 97612893 ; 05d1745dH
  003bf	0f 84 48 02 00
	00		 je	 $LN353@CWindowMan

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  003c5	8b 01		 mov	 eax, DWORD PTR [ecx]
  003c7	89 45 b8	 mov	 DWORD PTR __Myhead$15[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  003ca	89 4d 8c	 mov	 DWORD PTR $T6[ebp], ecx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  003cd	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  003cf	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  003d3	c7 45 90 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  003da	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  003df	8b f0		 mov	 esi, eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  003e1	83 c4 04	 add	 esp, 4

; 1048 :         _Ptr = _Al.allocate(1);

  003e4	89 75 90	 mov	 DWORD PTR $T6[ebp+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  003e7	83 7d 9c 10	 cmp	 DWORD PTR $T8[ebp], 16	; 00000010H
  003eb	8d 45 c0	 lea	 eax, DWORD PTR $T24[ebp]

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  003ee	8b 55 d0	 mov	 edx, DWORD PTR $T24[ebp+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  003f1	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  003f4	0f 43 45 ac	 cmovae	 eax, DWORD PTR $T11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 805  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  003f8	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  003fc	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00403	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2145 :         if (_Large_string_engaged()) {

  0040a	89 45 a8	 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  0040d	89 55 a4	 mov	 DWORD PTR $T9[ebp], edx
  00410	83 fa 10	 cmp	 edx, 16			; 00000010H
  00413	73 0d		 jae	 SHORT $LN217@CWindowMan

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00415	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00418	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0041d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 2663 :             return;

  00420	eb 4b		 jmp	 SHORT $LN216@CWindowMan
$LN217@CWindowMan:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00422	8b c2		 mov	 eax, edx
  00424	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00429	83 c8 0f	 or	 eax, 15			; 0000000fH
  0042c	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  00431	0f 47 c1	 cmova	 eax, ecx
  00434	89 45 b4	 mov	 DWORD PTR $T12[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00437	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0043e	8b f8		 mov	 edi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00440	8d 45 94	 lea	 eax, DWORD PTR __New_array$7[ebp]
  00443	50		 push	 eax
  00444	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00447	89 7d 94	 mov	 DWORD PTR __New_array$7[ebp], edi
  0044a	50		 push	 eax
  0044b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00450	8b 45 a4	 mov	 eax, DWORD PTR $T9[ebp]
  00453	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00454	50		 push	 eax
  00455	ff 75 a8	 push	 DWORD PTR __Result$2$[ebp]
  00458	57		 push	 edi
  00459	e8 00 00 00 00	 call	 _memcpy
  0045e	8b 7d bc	 mov	 edi, DWORD PTR $T18[ebp]

; 2672 :         _My_data._Myres  = _New_capacity;

  00461	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00464	8b 45 b4	 mov	 eax, DWORD PTR $T12[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00467	83 c4 18	 add	 esp, 24			; 00000018H
  0046a	8b 55 a4	 mov	 edx, DWORD PTR $T9[ebp]
$LN216@CWindowMan:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

  0046d	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  00470	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00473	8d 45 b8	 lea	 eax, DWORD PTR __Myhead$15[ebp]
  00476	50		 push	 eax
  00477	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

  00478	89 79 18	 mov	 DWORD PTR [ecx+24], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0047b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00480	8d 45 b8	 lea	 eax, DWORD PTR __Myhead$15[ebp]
  00483	50		 push	 eax
  00484	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00487	50		 push	 eax
  00488	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  0048d	8d 45 b8	 lea	 eax, DWORD PTR __Myhead$15[ebp]
  00490	50		 push	 eax
  00491	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00494	50		 push	 eax
  00495	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> * &>

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0049a	8b 4d a0	 mov	 ecx, DWORD PTR _this$1$[ebp]

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  0049d	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  004a0	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  004a6	c7 45 90 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  004ad	56		 push	 esi
  004ae	ff b5 74 ff ff
	ff		 push	 DWORD PTR __Loc$3[ebp+4]
  004b4	ff b5 70 ff ff
	ff		 push	 DWORD PTR __Loc$3[ebp]
  004ba	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *> > >::_Insert_node
  004bf	8b 75 b0	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
$LN267@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004c2	8b 45 9c	 mov	 eax, DWORD PTR $T8[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 51   : 			m_LayerWindowMap.insert(TLayerContainer::value_type(layerTbl[layer], pLayer));

  004c5	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004c9	83 f8 10	 cmp	 eax, 16			; 00000010H
  004cc	72 0d		 jb	 SHORT $LN284@CWindowMan

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004ce	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004cf	50		 push	 eax
  004d0	ff 75 ac	 push	 DWORD PTR $T11[ebp]
  004d3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004d8	83 c4 08	 add	 esp, 8
$LN284@CWindowMan:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 52   : 			m_pRootWindow->AddChild(pLayer);

  004db	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  004e1	57		 push	 edi
  004e2	e8 00 00 00 00	 call	 ?AddChild@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::AddChild
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  004e7	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 53   : 			m_LayerWindowList.push_back(pLayer);

  004ed	81 c6 90 00 00
	00		 add	 esi, 144		; 00000090H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  004f3	89 45 ac	 mov	 DWORD PTR __Where$1$[ebp], eax

; 1014 :         if (_Mysize == max_size()) {

  004f6	81 7e 04 55 55
	55 15		 cmp	 DWORD PTR [esi+4], 357913941 ; 15555555H
  004fd	0f 84 0f 01 00
	00		 je	 $LN354@CWindowMan
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00503	89 75 84	 mov	 DWORD PTR __Op$5[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00506	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00508	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0050c	c7 45 88 00 00
	00 00		 mov	 DWORD PTR __Op$5[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00513	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00518	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 588  :     }

  0051a	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0051e	8b 45 bc	 mov	 eax, DWORD PTR $T18[ebp]
  00521	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 1020 :         return _Op._Transfer_before(_Where);

  00524	8b 45 ac	 mov	 eax, DWORD PTR __Where$1$[ebp]
  00527	ff 46 04	 inc	 DWORD PTR [esi+4]
  0052a	89 45 b4	 mov	 DWORD PTR __Insert_before$13[ebp], eax

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  0052d	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00530	8d 45 b4	 lea	 eax, DWORD PTR __Insert_before$13[ebp]
  00533	50		 push	 eax
  00534	57		 push	 edi
  00535	89 75 a8	 mov	 DWORD PTR __Insert_after$10[ebp], esi
  00538	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0053d	8d 45 a8	 lea	 eax, DWORD PTR __Insert_after$10[ebp]
  00540	50		 push	 eax
  00541	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00544	50		 push	 eax
  00545	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCWindow@UI@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCWindow@UI@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<UI::CWindow *,void *> *,std::_List_node<UI::CWindow *,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  0054a	8b 45 ac	 mov	 eax, DWORD PTR __Where$1$[ebp]
  0054d	83 c4 14	 add	 esp, 20			; 00000014H
  00550	c7 45 88 00 00
	00 00		 mov	 DWORD PTR __Op$5[ebp+4], 0
  00557	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 606  :         _Insert_after->_Next  = _Result;

  0055a	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 46   : 		for(DWORD layer = 0; layer < sizeof(layerTbl)/sizeof(layerTbl[0]); layer++)

  0055c	8b 75 98	 mov	 esi, DWORD PTR _layer$1$[ebp]
  0055f	46		 inc	 esi
  00560	89 75 98	 mov	 DWORD PTR _layer$1$[ebp], esi
  00563	83 fe 05	 cmp	 esi, 5
  00566	0f 82 86 fd ff
	ff		 jb	 $LL4@CWindowMan
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0056c	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  0056f	8b 4f 50	 mov	 ecx, DWORD PTR [edi+80]

; 324  :         _Head->_Prev->_Next = nullptr;

  00572	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00575	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0057b	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0057d	85 c0		 test	 eax, eax
  0057f	74 13		 je	 SHORT $LN328@CWindowMan
$LL329@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  00581	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00583	6a 0c		 push	 12			; 0000000cH
  00585	50		 push	 eax
  00586	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0058b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0058e	8b c6		 mov	 eax, esi
  00590	85 f6		 test	 esi, esi
  00592	75 ed		 jne	 SHORT $LL329@CWindowMan
$LN328@CWindowMan:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00594	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  00597	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  00599	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  0059c	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  0059f	c7 47 54 00 00
	00 00		 mov	 DWORD PTR [edi+84], 0

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  005a6	8b 4f 5c	 mov	 ecx, DWORD PTR [edi+92]

; 324  :         _Head->_Prev->_Next = nullptr;

  005a9	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  005ac	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  005b2	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  005b4	85 c0		 test	 eax, eax
  005b6	74 13		 je	 SHORT $LN341@CWindowMan
$LL342@CWindowMan:

; 328  :             _Pnext = _Pnode->_Next;

  005b8	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  005ba	6a 0c		 push	 12			; 0000000cH
  005bc	50		 push	 eax
  005bd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  005c2	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  005c5	8b c6		 mov	 eax, esi
  005c7	85 f6		 test	 esi, esi
  005c9	75 ed		 jne	 SHORT $LL342@CWindowMan
$LN341@CWindowMan:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  005cb	8b 4f 5c	 mov	 ecx, DWORD PTR [edi+92]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 59   : 		gs_poEmptyTuple = Py_BuildValue("()");

  005ce	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  005d3	89 09		 mov	 DWORD PTR [ecx], ecx

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  005d5	8b 4f 5c	 mov	 ecx, DWORD PTR [edi+92]
  005d8	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 1432 :         _My_data._Mysize        = 0;

  005db	c7 47 60 00 00
	00 00		 mov	 DWORD PTR [edi+96], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterPythonLib\PythonWindowManager.cpp

; 59   : 		gs_poEmptyTuple = Py_BuildValue("()");

  005e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  005e8	a3 00 00 00 00	 mov	 DWORD PTR ?gs_poEmptyTuple@UI@@3PAU_object@@A, eax
  005ed	83 c4 04	 add	 esp, 4

; 60   : 	}

  005f0	8b c7		 mov	 eax, edi
  005f2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  005fc	59		 pop	 ecx
  005fd	5f		 pop	 edi
  005fe	5e		 pop	 esi
  005ff	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00602	33 cd		 xor	 ecx, ebp
  00604	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00609	8b e5		 mov	 esp, ebp
  0060b	5d		 pop	 ebp
  0060c	c3		 ret	 0
$LN353@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  0060d	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN354@CWindowMan:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1015 :             _Xlength_error("list too long");

  00612	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  00617	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN366@CWindowMan:
  0061c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$0:
  00000	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSingleton@VCWindowManager@UI@@@@UAE@XZ ; CSingleton<UI::CWindowManager>::~CSingleton<UI::CWindowManager>
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$1:
  00008	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0000b	83 c1 50	 add	 ecx, 80			; 00000050H
  0000e	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$2:
  00013	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00016	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00019	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$3:
  0001e	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00021	83 c1 74	 add	 ecx, 116		; 00000074H
  00024	e9 00 00 00 00	 jmp	 ??1?$map@HPAVCWindow@UI@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVCWindow@UI@@@std@@@4@@std@@QAE@XZ
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$4:
  00029	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0002c	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0002f	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$5:
  00034	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00037	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0003d	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$6:
  00042	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00045	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0004b	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$7:
  00050	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00053	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  00059	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@@2@@std@@QAE@XZ
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$8:
  0005e	6a 7c		 push	 124			; 0000007cH
  00060	8b 45 b4	 mov	 eax, DWORD PTR $T14[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00069	83 c4 08	 add	 esp, 8
  0006c	c3		 ret	 0
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$9:
  0006d	6a 7c		 push	 124			; 0000007cH
  0006f	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007b	83 c4 08	 add	 esp, 8
  0007e	c3		 ret	 0
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$10:
  0007f	8d 4d c0	 lea	 ecx, DWORD PTR $T24[ebp]
  00082	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@QAE@XZ
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$17:
  00087	8d 4d 8c	 lea	 ecx, DWORD PTR $T6[ebp]
  0008a	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,UI::CWindow *>,void *> > >
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$16:
  0008f	8d 4d 8c	 lea	 ecx, DWORD PTR $T6[ebp]
  00092	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCWindow@UI@@@std@@PAX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0CWindowManager@UI@@QAE@XZ$26:
  00097	8d 4d 84	 lea	 ecx, DWORD PTR __Op$5[ebp]
  0009a	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
  000a2	cc		 int	 3
  000a3	cc		 int	 3
__ehhandler$??0CWindowManager@UI@@QAE@XZ:
  000a4	90		 npad	 1
  000a5	90		 npad	 1
  000a6	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  000aa	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000ad	8b 8a 64 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-156]
  000b3	33 c8		 xor	 ecx, eax
  000b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ba	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  000bd	33 c8		 xor	 ecx, eax
  000bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c4	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CWindowManager@UI@@QAE@XZ
  000c9	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CWindowManager@UI@@QAE@XZ ENDP			; UI::CWindowManager::CWindowManager
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCWindowManager@UI@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCWindowManager@UI@@@@UAEPAXI@Z PROC	; CSingleton<UI::CWindowManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCWindowManager@UI@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A, 0 ; CSingleton<UI::CWindowManager>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCWindowManager@UI@@@@UAEPAXI@Z ENDP	; CSingleton<UI::CWindowManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCWindowManager@UI@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCWindowManager@UI@@@@UAE@XZ PROC	; CSingleton<UI::CWindowManager>::~CSingleton<UI::CWindowManager>, COMDAT
; _this$ = ecx

; 19   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCWindowManager@UI@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A, 0 ; CSingleton<UI::CWindowManager>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCWindowManager@UI@@@@UAE@XZ ENDP	; CSingleton<UI::CWindowManager>::~CSingleton<UI::CWindowManager>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
__New_ptr$1 = -4					; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00010	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL38@assign:
  00013	8a 06		 mov	 al, BYTE PTR [esi]
  00015	46		 inc	 esi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL38@assign
  0001a	2b f1		 sub	 esi, ecx

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001c	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0001f	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00022	3b f1		 cmp	 esi, ecx
  00024	77 26		 ja	 SHORT $LN6@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00026	8b df		 mov	 ebx, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00028	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0002b	72 02		 jb	 SHORT $LN9@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0002d	8b 1f		 mov	 ebx, DWORD PTR [edi]
$LN9@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002f	56		 push	 esi
  00030	52		 push	 edx
  00031	53		 push	 ebx

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00032	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00035	e8 00 00 00 00	 call	 _memmove
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00041	8b c7		 mov	 eax, edi
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx

; 2985 :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN6@assign:

; 4221 :         if (_New_size > max_size()) {

  0004c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00052	0f 87 91 00 00
	00		 ja	 $LN42@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00058	8b de		 mov	 ebx, esi
  0005a	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0005d	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 07		 jbe	 SHORT $LN23@assign

; 4203 :             return _Max;

  00065	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0006a	eb 1e		 jmp	 SHORT $LN22@assign
$LN23@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 07		 jbe	 SHORT $LN24@assign

; 4207 :             return _Max;

  0007b	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00080	eb 08		 jmp	 SHORT $LN22@assign
$LN24@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00082	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00085	3b d8		 cmp	 ebx, eax
  00087	0f 42 d8	 cmovb	 ebx, eax
$LN22@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008a	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	56		 push	 esi
  00094	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00097	89 45 fc	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009a	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0009e	89 5f 14	 mov	 DWORD PTR [edi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a1	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a6	8b 5d fc	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a9	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000ac	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000af	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000b3	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b6	72 19		 jb	 SHORT $LN17@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000b8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b9	50		 push	 eax
  000ba	ff 37		 push	 DWORD PTR [edi]
  000bc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c1	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000c4	89 1f		 mov	 DWORD PTR [edi], ebx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c6	8b c7		 mov	 eax, edi
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx

; 2985 :     }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 04 00	 ret	 4
$LN17@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000d1	8d 45 fc	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000d4	50		 push	 eax
  000d5	57		 push	 edi
  000d6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000db	83 c4 08	 add	 esp, 8
  000de	8b c7		 mov	 eax, edi
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx

; 2985 :     }

  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
$LN42@assign:

; 4222 :             _Xlen_string(); // result too long

  000e9	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN39@assign:
  000ee	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
