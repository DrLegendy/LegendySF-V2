; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CFileBase@@QAE@XZ				; CFileBase::CFileBase
PUBLIC	??1CFileBase@@UAE@XZ				; CFileBase::~CFileBase
PUBLIC	?Destroy@CFileBase@@QAEXXZ			; CFileBase::Destroy
PUBLIC	?Close@CFileBase@@QAEXXZ			; CFileBase::Close
PUBLIC	?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z	; CFileBase::Create
PUBLIC	?Size@CFileBase@@QAEKXZ				; CFileBase::Size
PUBLIC	?SeekCur@CFileBase@@QAEXK@Z			; CFileBase::SeekCur
PUBLIC	?Seek@CFileBase@@QAEXK@Z			; CFileBase::Seek
PUBLIC	?GetPosition@CFileBase@@QAEKXZ			; CFileBase::GetPosition
PUBLIC	?Write@CFileBase@@UAEHPBXH@Z			; CFileBase::Write
PUBLIC	?Read@CFileBase@@QAEHPAXH@Z			; CFileBase::Read
PUBLIC	?GetFileName@CFileBase@@QAEPADXZ		; CFileBase::GetFileName
PUBLIC	?IsNull@CFileBase@@QAEHXZ			; CFileBase::IsNull
PUBLIC	??_GCFileBase@@UAEPAXI@Z			; CFileBase::`scalar deleting destructor'
PUBLIC	??_7CFileBase@@6B@				; CFileBase::`vftable'
PUBLIC	??_R4CFileBase@@6B@				; CFileBase::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFileBase@@@8				; CFileBase `RTTI Type Descriptor'
PUBLIC	??_R3CFileBase@@8				; CFileBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFileBase@@8				; CFileBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFileBase@@8			; CFileBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_strncpy:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__GetFileSize@8:PROC
EXTRN	__imp__ReadFile@20:PROC
EXTRN	__imp__SetFilePointer@16:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	??_ECFileBase@@UAEPAXI@Z:PROC			; CFileBase::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CFileBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFileBase@@8 DD FLAT:??_R0?AVCFileBase@@@8 ; CFileBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CFileBase@@8
rdata$r	SEGMENT
??_R2CFileBase@@8 DD FLAT:??_R1A@?0A@EA@CFileBase@@8	; CFileBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFileBase@@8
rdata$r	SEGMENT
??_R3CFileBase@@8 DD 00H				; CFileBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFileBase@@@8
data$r	SEGMENT
??_R0?AVCFileBase@@@8 DD FLAT:??_7type_info@@6B@	; CFileBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFileBase@@', 00H
data$r	ENDS
;	COMDAT ??_R4CFileBase@@6B@
rdata$r	SEGMENT
??_R4CFileBase@@6B@ DD 00H				; CFileBase::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFileBase@@@8
	DD	FLAT:??_R3CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_7CFileBase@@6B@
CONST	SEGMENT
??_7CFileBase@@6B@ DD FLAT:??_R4CFileBase@@6B@		; CFileBase::`vftable'
	DD	FLAT:??_ECFileBase@@UAEPAXI@Z
	DD	FLAT:?Write@CFileBase@@UAEHPBXH@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCFileBase@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFileBase@@UAEPAXI@Z PROC				; CFileBase::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CFileBase@@UAE@XZ	; CFileBase::~CFileBase
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 18 01 00 00	 push	 280			; 00000118H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCFileBase@@UAEPAXI@Z ENDP				; CFileBase::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?IsNull@CFileBase@@QAEHXZ
_TEXT	SEGMENT
?IsNull@CFileBase@@QAEHXZ PROC				; CFileBase::IsNull, COMDAT
; _this$ = ecx

; 114  : 	return !m_hFile ? true : false;

  00000	33 c0		 xor	 eax, eax
  00002	39 81 10 01 00
	00		 cmp	 DWORD PTR [ecx+272], eax
  00008	0f 94 c0	 sete	 al

; 115  : }

  0000b	c3		 ret	 0
?IsNull@CFileBase@@QAEHXZ ENDP				; CFileBase::IsNull
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?GetFileName@CFileBase@@QAEPADXZ
_TEXT	SEGMENT
?GetFileName@CFileBase@@QAEPADXZ PROC			; CFileBase::GetFileName, COMDAT
; _this$ = ecx

; 15   : 	return m_filename;

  00000	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]

; 16   : }

  00003	c3		 ret	 0
?GetFileName@CFileBase@@QAEPADXZ ENDP			; CFileBase::GetFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Read@CFileBase@@QAEHPAXH@Z
_TEXT	SEGMENT
_dwUseless$ = -4					; size = 4
_dest$ = 8						; size = 4
_bytes$ = 12						; size = 4
?Read@CFileBase@@QAEHPAXH@Z PROC			; CFileBase::Read, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 108  : 	DWORD dwUseless;
; 109  : 	return ReadFile(m_hFile, dest, bytes, &dwUseless, NULL);

  00004	6a 00		 push	 0
  00006	8d 45 fc	 lea	 eax, DWORD PTR _dwUseless$[ebp]
  00009	50		 push	 eax
  0000a	ff 75 0c	 push	 DWORD PTR _bytes$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR _dest$[ebp]
  00010	ff b1 10 01 00
	00		 push	 DWORD PTR [ecx+272]
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReadFile@20

; 110  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?Read@CFileBase@@QAEHPAXH@Z ENDP			; CFileBase::Read
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Write@CFileBase@@UAEHPBXH@Z
_TEXT	SEGMENT
_dwUseless$ = -4					; size = 4
_src$ = 8						; size = 4
_bytes$ = 12						; size = 4
?Write@CFileBase@@UAEHPBXH@Z PROC			; CFileBase::Write, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 96   : 	DWORD dwUseless;
; 97   : 	BOOL ret = WriteFile(m_hFile, src, bytes, &dwUseless, NULL);

  00005	6a 00		 push	 0
  00007	8d 45 fc	 lea	 eax, DWORD PTR _dwUseless$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	ff 75 0c	 push	 DWORD PTR _bytes$[ebp]
  00010	ff 75 08	 push	 DWORD PTR _src$[ebp]
  00013	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WriteFile@20

; 98   : 
; 99   : 	if (!ret)

  0001f	85 c0		 test	 eax, eax
  00021	75 07		 jne	 SHORT $LN2@Write
  00023	5e		 pop	 esi

; 104  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
$LN2@Write:

; 100  : 		return false;
; 101  : 
; 102  : 	m_dwSize = GetFileSize(m_hFile, NULL);

  0002a	6a 00		 push	 0
  0002c	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFileSize@8
  00038	89 86 14 01 00
	00		 mov	 DWORD PTR [esi+276], eax

; 103  : 	return true;

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	5e		 pop	 esi

; 104  : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?Write@CFileBase@@UAEHPBXH@Z ENDP			; CFileBase::Write
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?GetPosition@CFileBase@@QAEKXZ
_TEXT	SEGMENT
?GetPosition@CFileBase@@QAEKXZ PROC			; CFileBase::GetPosition, COMDAT
; _this$ = ecx

; 91   : 	return SetFilePointer(m_hFile, 0, NULL, FILE_CURRENT);

  00000	6a 01		 push	 1
  00002	6a 00		 push	 0
  00004	6a 00		 push	 0
  00006	ff b1 10 01 00
	00		 push	 DWORD PTR [ecx+272]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFilePointer@16

; 92   : }

  00012	c3		 ret	 0
?GetPosition@CFileBase@@QAEKXZ ENDP			; CFileBase::GetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Seek@CFileBase@@QAEXK@Z
_TEXT	SEGMENT
_offset$ = 8						; size = 4
?Seek@CFileBase@@QAEXK@Z PROC				; CFileBase::Seek, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 83   : 	if (offset > m_dwSize)

  00003	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  00009	8b 55 08	 mov	 edx, DWORD PTR _offset$[ebp]
  0000c	3b d0		 cmp	 edx, eax

; 84   : 		offset = m_dwSize;
; 85   : 
; 86   : 	SetFilePointer(m_hFile, offset, NULL, FILE_BEGIN);

  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	0f 47 d0	 cmova	 edx, eax
  00015	52		 push	 edx
  00016	ff b1 10 01 00
	00		 push	 DWORD PTR [ecx+272]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFilePointer@16

; 87   : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?Seek@CFileBase@@QAEXK@Z ENDP				; CFileBase::Seek
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?SeekCur@CFileBase@@QAEXK@Z
_TEXT	SEGMENT
_size$ = 8						; size = 4
?SeekCur@CFileBase@@QAEXK@Z PROC			; CFileBase::SeekCur, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 78   : 	SetFilePointer(m_hFile, size, NULL, FILE_CURRENT);

  00003	6a 01		 push	 1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR _size$[ebp]
  0000a	ff b1 10 01 00
	00		 push	 DWORD PTR [ecx+272]
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFilePointer@16

; 79   : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SeekCur@CFileBase@@QAEXK@Z ENDP			; CFileBase::SeekCur
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Size@CFileBase@@QAEKXZ
_TEXT	SEGMENT
?Size@CFileBase@@QAEKXZ PROC				; CFileBase::Size, COMDAT
; _this$ = ecx

; 73   : 	return (m_dwSize);

  00000	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]

; 74   : }

  00006	c3		 ret	 0
?Size@CFileBase@@QAEKXZ ENDP				; CFileBase::Size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
_mode$ = 12						; size = 4
?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z PROC		; CFileBase::Create, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 35   : 	Destroy();

  00007	e8 00 00 00 00	 call	 ?Destroy@CFileBase@@QAEXXZ ; CFileBase::Destroy

; 36   : 
; 37   : 	strncpy(m_filename, filename, MAX_PATH);

  0000c	68 04 01 00 00	 push	 260			; 00000104H
  00011	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  00014	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 _strncpy

; 38   : 
; 39   : 	DWORD dwMode, dwShareMode = FILE_SHARE_READ;
; 40   : 
; 41   : 	if (mode == FILEMODE_WRITE)
; 42   : 	{
; 43   : 		dwMode = GENERIC_READ | GENERIC_WRITE;
; 44   : 		dwShareMode = FILE_SHARE_READ | FILE_SHARE_WRITE;
; 45   : 	}
; 46   : 	else
; 47   : 		dwMode = GENERIC_READ;
; 48   : 
; 49   : 	m_hFile = CreateFile(filename,					// name of the file

  0001d	8b 5d 0c	 mov	 ebx, DWORD PTR _mode$[ebp]
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	33 c0		 xor	 eax, eax
  00025	b9 00 00 00 80	 mov	 ecx, -2147483648	; 80000000H
  0002a	83 fb 01	 cmp	 ebx, 1
  0002d	0f 95 c0	 setne	 al
  00030	6a 00		 push	 0
  00032	83 c0 03	 add	 eax, 3
  00035	68 80 00 00 00	 push	 128			; 00000080H
  0003a	50		 push	 eax
  0003b	33 c0		 xor	 eax, eax
  0003d	83 fb 02	 cmp	 ebx, 2
  00040	6a 00		 push	 0
  00042	0f 94 c0	 sete	 al
  00045	8d 04 45 01 00
	00 00		 lea	 eax, DWORD PTR [eax*2+1]
  0004c	50		 push	 eax
  0004d	b8 00 00 00 c0	 mov	 eax, -1073741824	; c0000000H
  00052	0f 45 c1	 cmovne	 eax, ecx
  00055	50		 push	 eax
  00056	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  0005f	89 87 10 01 00
	00		 mov	 DWORD PTR [edi+272], eax

; 50   : 						 dwMode,					// desired access
; 51   : 						 dwShareMode,				// share mode
; 52   : 						 NULL,						// security attributes
; 53   : 						 mode == FILEMODE_READ ? OPEN_EXISTING : OPEN_ALWAYS, // creation disposition
; 54   : 						 FILE_ATTRIBUTE_NORMAL,		// flags and attr
; 55   : 						 NULL);						// template file
; 56   : 
; 57   : 	if (m_hFile != INVALID_HANDLE_VALUE)

  00065	83 f8 ff	 cmp	 eax, -1
  00068	74 1d		 je	 SHORT $LN4@Create

; 58   : 	{
; 59   : 		m_dwSize = GetFileSize(m_hFile, NULL);

  0006a	6a 00		 push	 0
  0006c	50		 push	 eax
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFileSize@8
  00073	89 87 14 01 00
	00		 mov	 DWORD PTR [edi+276], eax

; 60   : 		m_mode = mode;
; 61   : 		return true;

  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  00081	5f		 pop	 edi

; 69   : }

  00082	5b		 pop	 ebx
  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
$LN4@Create:

; 62   : 	}
; 63   : 
; 64   : /*	char buf[256];
; 65   : 	GetCurrentDirectory(256, buf);
; 66   : 	DWORD dwErr = GetLastError();*/
; 67   : 	m_hFile = NULL;

  00087	c7 87 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+272], 0

; 68   : 	return false;

  00091	33 c0		 xor	 eax, eax
  00093	5f		 pop	 edi

; 69   : }

  00094	5b		 pop	 ebx
  00095	5d		 pop	 ebp
  00096	c2 08 00	 ret	 8
?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z ENDP		; CFileBase::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Close@CFileBase@@QAEXXZ
_TEXT	SEGMENT
?Close@CFileBase@@QAEXXZ PROC				; CFileBase::Close, COMDAT
; _this$ = ecx

; 25   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 26   : 	if (m_hFile)

  00003	8b 86 10 01 00
	00		 mov	 eax, DWORD PTR [esi+272]
  00009	85 c0		 test	 eax, eax
  0000b	74 11		 je	 SHORT $LN2@Close

; 27   : 	{
; 28   : 		CloseHandle(m_hFile);

  0000d	50		 push	 eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 29   : 		m_hFile = NULL;

  00014	c7 86 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+272], 0
$LN2@Close:

; 30   : 	}
; 31   : }

  0001e	5e		 pop	 esi
  0001f	c3		 ret	 0
?Close@CFileBase@@QAEXXZ ENDP				; CFileBase::Close
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ?Destroy@CFileBase@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CFileBase@@QAEXXZ PROC				; CFileBase::Destroy, COMDAT
; _this$ = ecx

; 19   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 20   : 	Close();

  00003	e8 00 00 00 00	 call	 ?Close@CFileBase@@QAEXXZ ; CFileBase::Close

; 21   : 	m_dwSize = 0;

  00008	c7 86 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+276], 0
  00012	5e		 pop	 esi

; 22   : }

  00013	c3		 ret	 0
?Destroy@CFileBase@@QAEXXZ ENDP				; CFileBase::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ??1CFileBase@@UAE@XZ
_TEXT	SEGMENT
??1CFileBase@@UAE@XZ PROC				; CFileBase::~CFileBase, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CFileBase@@6B@

; 10   : 	Destroy();

  00006	e9 00 00 00 00	 jmp	 ?Destroy@CFileBase@@QAEXXZ ; CFileBase::Destroy
??1CFileBase@@UAE@XZ ENDP				; CFileBase::~CFileBase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\FileBase.cpp
;	COMDAT ??0CFileBase@@QAE@XZ
_TEXT	SEGMENT
??0CFileBase@@QAE@XZ PROC				; CFileBase::CFileBase, COMDAT
; _this$ = ecx

; 5    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CFileBase@@6B@

; 6    : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 81 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+272], 0
  00012	c7 81 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+276], 0
  0001c	c3		 ret	 0
??0CFileBase@@QAE@XZ ENDP				; CFileBase::CFileBase
_TEXT	ENDS
END
