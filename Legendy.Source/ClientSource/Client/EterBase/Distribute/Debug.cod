; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_R4CLogFile@@6B@				; CLogFile::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLogFile@@@8				; CLogFile `RTTI Type Descriptor'
PUBLIC	??_R3CLogFile@@8				; CLogFile::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLogFile@@8				; CLogFile::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLogFile@@8			; CLogFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCLogFile@@@@8	; CSingleton<CLogFile>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCLogFile@@@@@8		; CSingleton<CLogFile> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCLogFile@@@@8		; CSingleton<CLogFile>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCLogFile@@@@8		; CSingleton<CLogFile>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCLogFile@@@@6B@		; CSingleton<CLogFile>::`RTTI Complete Object Locator'
PUBLIC	?g_PopupHwnd@@3PAUHWND__@@A			; g_PopupHwnd
PUBLIC	?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A ; CSingleton<CLogFile>::ms_singleton
PUBLIC	??_7?$CSingleton@VCLogFile@@@@6B@		; CSingleton<CLogFile>::`vftable'
PUBLIC	??_G?$CSingleton@VCLogFile@@@@UAEPAXI@Z		; CSingleton<CLogFile>::`scalar deleting destructor'
PUBLIC	??_7CLogFile@@6B@				; CLogFile::`vftable'
PUBLIC	??_GCLogFile@@UAEPAXI@Z				; CLogFile::`scalar deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CSingleton@VCLogFile@@@@UAEPAXI@Z:PROC	; CSingleton<CLogFile>::`vector deleting destructor'
EXTRN	??_ECLogFile@@UAEPAXI@Z:PROC			; CLogFile::`vector deleting destructor'
_BSS	SEGMENT
?g_PopupHwnd@@3PAUHWND__@@A DD 01H DUP (?)		; g_PopupHwnd
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A DD 01H DUP (?) ; CSingleton<CLogFile>::ms_singleton
_BSS	ENDS
;	COMDAT ??_7CLogFile@@6B@
CONST	SEGMENT
??_7CLogFile@@6B@ DD FLAT:??_R4CLogFile@@6B@		; CLogFile::`vftable'
	DD	FLAT:??_ECLogFile@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCLogFile@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCLogFile@@@@6B@ DD FLAT:??_R4?$CSingleton@VCLogFile@@@@6B@ ; CSingleton<CLogFile>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCLogFile@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$CSingleton@VCLogFile@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCLogFile@@@@6B@ DD 00H		; CSingleton<CLogFile>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCLogFile@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCLogFile@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCLogFile@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCLogFile@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCLogFile@@@@8 ; CSingleton<CLogFile>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCLogFile@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCLogFile@@@@8 DD 00H			; CSingleton<CLogFile>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCLogFile@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCLogFile@@@@@8
data$r	SEGMENT
??_R0?AV?$CSingleton@VCLogFile@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CLogFile> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCLogFile@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCLogFile@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCLogFile@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCLogFile@@@@@8 ; CSingleton<CLogFile>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCLogFile@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLogFile@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLogFile@@8 DD FLAT:??_R0?AVCLogFile@@@8	; CLogFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLogFile@@8
rdata$r	ENDS
;	COMDAT ??_R2CLogFile@@8
rdata$r	SEGMENT
??_R2CLogFile@@8 DD FLAT:??_R1A@?0A@EA@CLogFile@@8	; CLogFile::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCLogFile@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CLogFile@@8
rdata$r	SEGMENT
??_R3CLogFile@@8 DD 00H					; CLogFile::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLogFile@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLogFile@@@8
data$r	SEGMENT
??_R0?AVCLogFile@@@8 DD FLAT:??_7type_info@@6B@		; CLogFile `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLogFile@@', 00H
data$r	ENDS
;	COMDAT ??_R4CLogFile@@6B@
rdata$r	SEGMENT
??_R4CLogFile@@6B@ DD 00H				; CLogFile::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLogFile@@@8
	DD	FLAT:??_R3CLogFile@@8
rdata$r	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_fprintf
PUBLIC	?SetLogLevel@@YAXI@Z				; SetLogLevel
PUBLIC	?Log@@YAXIPBD@Z					; Log
PUBLIC	?Logn@@YAXIPBD@Z				; Logn
PUBLIC	?Logf@@YAXIPBDZZ				; Logf
PUBLIC	?Lognf@@YAXIPBDZZ				; Lognf
PUBLIC	?Trace@@YAXPBD@Z				; Trace
PUBLIC	?Tracen@@YAXPBD@Z				; Tracen
PUBLIC	?Tracenf@@YAXPBDZZ				; Tracenf
PUBLIC	?Tracef@@YAXPBDZZ				; Tracef
PUBLIC	?TraceError@@YAXPBDZZ				; TraceError
PUBLIC	?TraceErrorWithoutEnter@@YAXPBDZZ		; TraceErrorWithoutEnter
PUBLIC	?LogBox@@YAXPBD0PAUHWND__@@@Z			; LogBox
PUBLIC	?LogBoxf@@YAXPBDZZ				; LogBoxf
PUBLIC	?LogFile@@YAXPBD@Z				; LogFile
PUBLIC	?LogFilef@@YAXPBDZZ				; LogFilef
PUBLIC	?OpenConsoleWindow@@YAXXZ			; OpenConsoleWindow
PUBLIC	?OpenLogFile@@YAX_N@Z				; OpenLogFile
PUBLIC	??1?$CSingleton@VCLogFile@@@@UAE@XZ		; CSingleton<CLogFile>::~CSingleton<CLogFile>
PUBLIC	??1CLogFile@@UAE@XZ				; CLogFile::~CLogFile
PUBLIC	?Write@CLogFile@@QAEXPBD@Z			; CLogFile::Write
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_07POILLFDI@log?4txt@			; `string'
PUBLIC	??_C@_0BO@IGAAHNNJ@?$CF02d?$CF02d?5?$CF02d?3?$CF02d?3?$CF05d?5?3?3?5?$CFs@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_08MKEHAJJM@SYSERR?3?5@			; `string'
PUBLIC	??_C@_03MLIHNEFJ@LOG@				; `string'
PUBLIC	??_C@_0L@BOMBMLAA@syserr?4txt@			; `string'
PUBLIC	??_C@_01MCMALHOG@a@				; `string'
PUBLIC	??_C@_07GPDNMNG@CONOUT$@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_06GDENEHCP@CONIN$@			; `string'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_strncpy:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__AllocConsole@0:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	_fclose:PROC
EXTRN	_fflush:PROC
EXTRN	_fopen:PROC
EXTRN	_freopen:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	__localtime64:PROC
EXTRN	__time64:PROC
EXTRN	?ELTimer_GetMSec@@YAKXZ:PROC			; ELTimer_GetMSec
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?isLogFile@@3HA DD 01H DUP (?)				; isLogFile
?gs_uLevel@@3IA DD 01H DUP (?)				; gs_uLevel
_BSS	ENDS
CRT$XCU	SEGMENT
?gs_logfile$initializer$@@3P6AXXZA DD FLAT:??__Egs_logfile@@YAXXZ ; gs_logfile$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_06GDENEHCP@CONIN$@
CONST	SEGMENT
??_C@_06GDENEHCP@CONIN$@ DB 'CONIN$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07GPDNMNG@CONOUT$@
CONST	SEGMENT
??_C@_07GPDNMNG@CONOUT$@ DB 'CONOUT$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a@
CONST	SEGMENT
??_C@_01MCMALHOG@a@ DB 'a', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BOMBMLAA@syserr?4txt@
CONST	SEGMENT
??_C@_0L@BOMBMLAA@syserr?4txt@ DB 'syserr.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03MLIHNEFJ@LOG@
CONST	SEGMENT
??_C@_03MLIHNEFJ@LOG@ DB 'LOG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MKEHAJJM@SYSERR?3?5@
CONST	SEGMENT
??_C@_08MKEHAJJM@SYSERR?3?5@ DB 'SYSERR: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?gs_logfile@@3VCLogFile@@A DD FLAT:??_7CLogFile@@6B@	; gs_logfile
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_0BO@IGAAHNNJ@?$CF02d?$CF02d?5?$CF02d?3?$CF02d?3?$CF05d?5?3?3?5?$CFs@
CONST	SEGMENT
??_C@_0BO@IGAAHNNJ@?$CF02d?$CF02d?5?$CF02d?3?$CF02d?3?$CF05d?5?3?3?5?$CFs@ DB '%'
	DB	'02d%02d %02d:%02d:%05d :: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07POILLFDI@log?4txt@
CONST	SEGMENT
??_C@_07POILLFDI@log?4txt@ DB 'log.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h
;	COMDAT ??__Fgs_logfile@@YAXXZ
text$yd	SEGMENT
??__Fgs_logfile@@YAXXZ PROC				; `dynamic atexit destructor for 'gs_logfile'', COMDAT
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 23   : 			if (m_fp)

  00000	a1 04 00 00 00	 mov	 eax, DWORD PTR ?gs_logfile@@3VCLogFile@@A+4
  00005	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gs_logfile@@3VCLogFile@@A, OFFSET ??_7CLogFile@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 09		 je	 SHORT $LN4@dynamic

; 24   : 				fclose(m_fp);

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _fclose
  00019	83 c4 04	 add	 esp, 4
$LN4@dynamic:

; 25   : 
; 26   : 			m_fp = NULL;

  0001c	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gs_logfile@@3VCLogFile@@A+4, 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h

; 19   : 	{

  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gs_logfile@@3VCLogFile@@A, OFFSET ??_7?$CSingleton@VCLogFile@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00030	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A, 0 ; CSingleton<CLogFile>::ms_singleton
  0003a	c3		 ret	 0
??__Fgs_logfile@@YAXXZ ENDP				; `dynamic atexit destructor for 'gs_logfile''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ??__Egs_logfile@@YAXXZ
text$di	SEGMENT
??__Egs_logfile@@YAXXZ PROC				; `dynamic initializer for 'gs_logfile'', COMDAT

; 57   : static CLogFile gs_logfile;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fgs_logfile@@YAXXZ ; `dynamic atexit destructor for 'gs_logfile''
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  00005	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A, OFFSET ?gs_logfile@@3VCLogFile@@A ; CSingleton<CLogFile>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 57   : static CLogFile gs_logfile;

  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Egs_logfile@@YAXXZ ENDP				; `dynamic initializer for 'gs_logfile''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h
;	COMDAT ??_GCLogFile@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCLogFile@@UAEPAXI@Z PROC				; CLogFile::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 22   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 23   : 			if (m_fp)

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLogFile@@6B@
  0000f	85 c0		 test	 eax, eax
  00011	74 09		 je	 SHORT $LN5@scalar

; 24   : 				fclose(m_fp);

  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _fclose
  00019	83 c4 04	 add	 esp, 4
$LN5@scalar:
  0001c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 25   : 
; 26   : 			m_fp = NULL;

  00020	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h

; 19   : 	{

  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCLogFile@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  0002d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A, 0 ; CSingleton<CLogFile>::ms_singleton
  00037	74 0b		 je	 SHORT $LN10@scalar
  00039	6a 08		 push	 8
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00044	8b c6		 mov	 eax, esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
??_GCLogFile@@UAEPAXI@Z ENDP				; CLogFile::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Write@CLogFile@@QAEXPBD@Z
_TEXT	SEGMENT
_ctm$6$ = -40						; size = 16
_ctm$5$ = -24						; size = 16
_ct$ = -8						; size = 8
_c_pszMsg$ = 8						; size = 4
?Write@CLogFile@@QAEXPBD@Z PROC				; CLogFile::Write, COMDAT
; _this$ = ecx

; 35   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 36   : 			if (!m_fp)

  00009	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0000d	74 7f		 je	 SHORT $LN1@Write
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 536  :             return _time64(_Time);

  0000f	6a 00		 push	 0
  00011	e8 00 00 00 00	 call	 __time64
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 39   : 			time_t ct = time(0);

  00016	89 45 f8	 mov	 DWORD PTR _ct$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 512  :             return _localtime64(_Time);

  00019	8d 45 f8	 lea	 eax, DWORD PTR _ct$[ebp]
  0001c	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 39   : 			time_t ct = time(0);

  0001d	89 55 fc	 mov	 DWORD PTR _ct$[ebp+4], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 512  :             return _localtime64(_Time);

  00020	e8 00 00 00 00	 call	 __localtime64
  00025	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 40   : 			struct tm ctm = *localtime(&ct);

  00028	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 41   : 
; 42   : 			fprintf(m_fp, "%02d%02d %02d:%02d:%05d :: %s",

  0002b	ff 75 08	 push	 DWORD PTR _c_pszMsg$[ebp]
  0002e	0f 11 45 e8	 movups	 XMMWORD PTR _ctm$5$[ebp], xmm0
  00032	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00036	0f 11 45 d8	 movups	 XMMWORD PTR _ctm$6$[ebp], xmm0
  0003a	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  0003f	33 d2		 xor	 edx, edx
  00041	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  00046	f7 f1		 div	 ecx
  00048	0f 10 4d e8	 movups	 xmm1, XMMWORD PTR _ctm$5$[ebp]
  0004c	52		 push	 edx
  0004d	0f 28 c1	 movaps	 xmm0, xmm1
  00050	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00055	66 0f 7e c0	 movd	 eax, xmm0
  00059	0f 28 c1	 movaps	 xmm0, xmm1
  0005c	66 0f 73 d8 08	 psrldq	 xmm0, 8
  00061	66 0f 73 d9 0c	 psrldq	 xmm1, 12		; 0000000cH
  00066	50		 push	 eax
  00067	66 0f 7e c0	 movd	 eax, xmm0
  0006b	50		 push	 eax
  0006c	66 0f 7e c8	 movd	 eax, xmm1
  00070	50		 push	 eax
  00071	8b 45 d8	 mov	 eax, DWORD PTR _ctm$6$[ebp]
  00074	40		 inc	 eax
  00075	50		 push	 eax
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IGAAHNNJ@?$CF02d?$CF02d?5?$CF02d?3?$CF02d?3?$CF05d?5?3?3?5?$CFs@
  0007b	ff 76 04	 push	 DWORD PTR [esi+4]
  0007e	e8 00 00 00 00	 call	 _fprintf

; 43   : 				ctm.tm_mon + 1,
; 44   : 				ctm.tm_mday,
; 45   : 				ctm.tm_hour,
; 46   : 				ctm.tm_min,
; 47   : 				ELTimer_GetMSec() % 60000,
; 48   : 				c_pszMsg);
; 49   : 
; 50   : 			fflush(m_fp);

  00083	ff 76 04	 push	 DWORD PTR [esi+4]
  00086	e8 00 00 00 00	 call	 _fflush
  0008b	83 c4 24	 add	 esp, 36			; 00000024H
$LN1@Write:
  0008e	5e		 pop	 esi

; 51   : 		}

  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?Write@CLogFile@@QAEXPBD@Z ENDP				; CLogFile::Write
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ??1CLogFile@@UAE@XZ
_TEXT	SEGMENT
??1CLogFile@@UAE@XZ PROC				; CLogFile::~CLogFile, COMDAT
; _this$ = ecx

; 22   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 23   : 			if (m_fp)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLogFile@@6B@
  0000c	85 c0		 test	 eax, eax
  0000e	74 09		 je	 SHORT $LN2@CLogFile

; 24   : 				fclose(m_fp);

  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 _fclose
  00016	83 c4 04	 add	 esp, 4
$LN2@CLogFile:

; 25   : 
; 26   : 			m_fp = NULL;

  00019	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h

; 19   : 	{

  00020	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCLogFile@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A, 0 ; CSingleton<CLogFile>::ms_singleton
  00030	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 27   : 		}

  00031	c3		 ret	 0
??1CLogFile@@UAE@XZ ENDP				; CLogFile::~CLogFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCLogFile@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCLogFile@@@@UAEPAXI@Z PROC		; CSingleton<CLogFile>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCLogFile@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A, 0 ; CSingleton<CLogFile>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCLogFile@@@@UAEPAXI@Z ENDP		; CSingleton<CLogFile>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCLogFile@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCLogFile@@@@UAE@XZ PROC		; CSingleton<CLogFile>::~CSingleton<CLogFile>, COMDAT
; _this$ = ecx

; 19   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCLogFile@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A, 0 ; CSingleton<CLogFile>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCLogFile@@@@UAE@XZ ENDP		; CSingleton<CLogFile>::~CSingleton<CLogFile>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?OpenLogFile@@YAX_N@Z
_TEXT	SEGMENT
_bUseLogFIle$ = 8					; size = 1
?OpenLogFile@@YAX_N@Z PROC				; OpenLogFile, COMDAT

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 309  : #ifndef _DISTRIBUTE
; 310  : 	freopen("syserr.txt", "w", stderr);

  00003	6a 02		 push	 2
  00005	e8 00 00 00 00	 call	 ___acrt_iob_func
  0000a	50		 push	 eax
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BOMBMLAA@syserr?4txt@
  00015	e8 00 00 00 00	 call	 _freopen
  0001a	83 c4 10	 add	 esp, 16			; 00000010H

; 311  : 
; 312  : 	if (bUseLogFIle)

  0001d	80 7d 08 00	 cmp	 BYTE PTR _bUseLogFIle$[ebp], 0
  00021	74 27		 je	 SHORT $LN2@OpenLogFil

; 313  : 	{
; 314  : 		isLogFile = true;

  00023	56		 push	 esi

; 315  : 		CLogFile::Instance().Initialize();

  00024	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A ; CSingleton<CLogFile>::ms_singleton

; 31   : 			m_fp = fopen("log.txt", "w");

  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_07POILLFDI@log?4txt@

; 313  : 	{
; 314  : 		isLogFile = true;

  00034	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?isLogFile@@3HA, 1

; 31   : 			m_fp = fopen("log.txt", "w");

  0003e	e8 00 00 00 00	 call	 _fopen
  00043	83 c4 08	 add	 esp, 8
  00046	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00049	5e		 pop	 esi
$LN2@OpenLogFil:

; 316  : 	}
; 317  : #endif
; 318  : }

  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?OpenLogFile@@YAX_N@Z ENDP				; OpenLogFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?OpenConsoleWindow@@YAXXZ
_TEXT	SEGMENT
?OpenConsoleWindow@@YAXXZ PROC				; OpenConsoleWindow, COMDAT

; 322  : 	AllocConsole();

  00000	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AllocConsole@0

; 323  : 
; 324  : 	freopen("CONOUT$", "a", stdout);

  00006	6a 01		 push	 1
  00008	e8 00 00 00 00	 call	 ___acrt_iob_func
  0000d	50		 push	 eax
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01MCMALHOG@a@
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_07GPDNMNG@CONOUT$@
  00018	e8 00 00 00 00	 call	 _freopen

; 325  : 	freopen("CONIN$", "r", stdin);

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ___acrt_iob_func
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_06GDENEHCP@CONIN$@
  0002f	e8 00 00 00 00	 call	 _freopen
  00034	83 c4 20	 add	 esp, 32			; 00000020H

; 326  : }

  00037	c3		 ret	 0
?OpenConsoleWindow@@YAXXZ ENDP				; OpenConsoleWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?LogFilef@@YAXPBDZZ
_TEXT	SEGMENT
_szBuf$ = -1032						; size = 1025
__$ArrayPad$ = -4					; size = 4
_c_szMessage$ = 8					; size = 4
?LogFilef@@YAXPBDZZ PROC				; LogFilef, COMDAT

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 04 00
	00		 sub	 esp, 1032		; 00000408H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00013	8d 45 0c	 lea	 eax, DWORD PTR _c_szMessage$[ebp+4]
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	ff 75 08	 push	 DWORD PTR _c_szMessage$[ebp]
  0001c	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00022	68 01 04 00 00	 push	 1025			; 00000401H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	ff 70 04	 push	 DWORD PTR [eax+4]
  00032	83 c9 01	 or	 ecx, 1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 304  : 	CLogFile::Instance().Write(szBuf);

  0003b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A ; CSingleton<CLogFile>::ms_singleton
  00041	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00047	83 c4 1c	 add	 esp, 28			; 0000001cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 304  : 	CLogFile::Instance().Write(szBuf);

  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?Write@CLogFile@@QAEXPBD@Z ; CLogFile::Write

; 305  : }

  00050	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00053	33 cd		 xor	 ecx, ebp
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?LogFilef@@YAXPBDZZ ENDP				; LogFilef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?LogFile@@YAXPBD@Z
_TEXT	SEGMENT
_c_szMsg$ = 8						; size = 4
?LogFile@@YAXPBD@Z PROC					; LogFile, COMDAT

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 294  : 	CLogFile::Instance().Write(c_szMsg);

  00003	ff 75 08	 push	 DWORD PTR _c_szMsg$[ebp]
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCLogFile@@@@0PAVCLogFile@@A ; CSingleton<CLogFile>::ms_singleton
  0000c	e8 00 00 00 00	 call	 ?Write@CLogFile@@QAEXPBD@Z ; CLogFile::Write

; 295  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?LogFile@@YAXPBD@Z ENDP					; LogFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?LogBoxf@@YAXPBDZZ
_TEXT	SEGMENT
_szBuf$ = -2052						; size = 2048
__$ArrayPad$ = -4					; size = 4
_c_szFormat$ = 8					; size = 4
?LogBoxf@@YAXPBDZZ PROC					; LogBoxf, COMDAT

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 08 00
	00		 sub	 esp, 2052		; 00000804H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00013	8d 45 0c	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	ff 75 08	 push	 DWORD PTR _c_szFormat$[ebp]
  0001c	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00022	68 00 08 00 00	 push	 2048			; 00000800H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	ff 70 04	 push	 DWORD PTR [eax+4]
  00032	83 c9 01	 or	 ecx, 1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 280  : 	LogBox(szBuf);

  0003b	6a 00		 push	 0
  0003d	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00043	6a 00		 push	 0
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?LogBox@@YAXPBD0PAUHWND__@@@Z ; LogBox

; 281  : }

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004e	83 c4 28	 add	 esp, 40			; 00000028H
  00051	33 cd		 xor	 ecx, ebp
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?LogBoxf@@YAXPBDZZ ENDP					; LogBoxf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?LogBox@@YAXPBD0PAUHWND__@@@Z
_TEXT	SEGMENT
_c_szMsg$ = 8						; size = 4
_c_szCaption$ = 12					; size = 4
_hWnd$ = 16						; size = 4
?LogBox@@YAXPBD0PAUHWND__@@@Z PROC			; LogBox, COMDAT

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 285  : 	if (!hWnd)

  00003	8b 55 10	 mov	 edx, DWORD PTR _hWnd$[ebp]

; 286  : 		hWnd = g_PopupHwnd;
; 287  : 
; 288  : 	MessageBox(hWnd, c_szMsg, c_szCaption ? c_szCaption : "LOG", MB_OK);

  00006	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_03MLIHNEFJ@LOG@
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _c_szCaption$[ebp]
  0000e	85 d2		 test	 edx, edx
  00010	6a 00		 push	 0
  00012	0f 44 15 00 00
	00 00		 cmove	 edx, DWORD PTR ?g_PopupHwnd@@3PAUHWND__@@A ; g_PopupHwnd
  00019	85 c0		 test	 eax, eax
  0001b	0f 45 c8	 cmovne	 ecx, eax
  0001e	51		 push	 ecx
  0001f	ff 75 08	 push	 DWORD PTR _c_szMsg$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 289  : 	Tracen(c_szMsg);

  00029	ff 75 08	 push	 DWORD PTR _c_szMsg$[ebp]
  0002c	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  00031	83 c4 04	 add	 esp, 4

; 290  : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
?LogBox@@YAXPBD0PAUHWND__@@@Z ENDP			; LogBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?TraceErrorWithoutEnter@@YAXPBDZZ
_TEXT	SEGMENT
_ctm$6$ = -1068						; size = 16
_ctm$5$ = -1052						; size = 16
_ct$ = -1036						; size = 8
_szBuf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_c_szFormat$ = 8					; size = 4
?TraceErrorWithoutEnter@@YAXPBDZZ PROC			; TraceErrorWithoutEnter, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 04 00
	00		 sub	 esp, 1104		; 00000450H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00013	8d 45 0c	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	ff 75 08	 push	 DWORD PTR _c_szFormat$[ebp]
  0001c	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00022	68 00 04 00 00	 push	 1024			; 00000400H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	ff 70 04	 push	 DWORD PTR [eax+4]
  00032	83 c9 01	 or	 ecx, 1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 536  :             return _time64(_Time);

  0003b	6a 00		 push	 0
  0003d	e8 00 00 00 00	 call	 __time64
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 250  : 	time_t ct = time(0);

  00042	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _ct$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 512  :             return _localtime64(_Time);

  00048	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _ct$[ebp]
  0004e	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 250  : 	time_t ct = time(0);

  0004f	89 95 f8 fb ff
	ff		 mov	 DWORD PTR _ct$[ebp+4], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 512  :             return _localtime64(_Time);

  00055	e8 00 00 00 00	 call	 __localtime64
  0005a	83 c4 24	 add	 esp, 36			; 00000024H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 251  : 	struct tm ctm = *localtime(&ct);

  0005d	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00060	0f 11 85 e4 fb
	ff ff		 movups	 XMMWORD PTR _ctm$5$[ebp], xmm0
  00067	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 252  : 
; 253  : 	fprintf(stderr, "%02d%02d %02d:%02d:%05d :: %s",

  0006b	8d 85 04 fc ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+8]
  00071	50		 push	 eax
  00072	0f 11 85 d4 fb
	ff ff		 movups	 XMMWORD PTR _ctm$6$[ebp], xmm0
  00079	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  0007e	33 d2		 xor	 edx, edx
  00080	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  00085	f7 f1		 div	 ecx
  00087	0f 10 8d e4 fb
	ff ff		 movups	 xmm1, XMMWORD PTR _ctm$5$[ebp]
  0008e	52		 push	 edx
  0008f	0f 28 c1	 movaps	 xmm0, xmm1
  00092	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00097	66 0f 7e c0	 movd	 eax, xmm0
  0009b	0f 28 c1	 movaps	 xmm0, xmm1
  0009e	66 0f 73 d8 08	 psrldq	 xmm0, 8
  000a3	66 0f 73 d9 0c	 psrldq	 xmm1, 12		; 0000000cH
  000a8	50		 push	 eax
  000a9	66 0f 7e c0	 movd	 eax, xmm0
  000ad	50		 push	 eax
  000ae	66 0f 7e c8	 movd	 eax, xmm1
  000b2	50		 push	 eax
  000b3	8b 85 d4 fb ff
	ff		 mov	 eax, DWORD PTR _ctm$6$[ebp]
  000b9	40		 inc	 eax
  000ba	50		 push	 eax
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IGAAHNNJ@?$CF02d?$CF02d?5?$CF02d?3?$CF02d?3?$CF05d?5?3?3?5?$CFs@
  000c0	6a 02		 push	 2
  000c2	e8 00 00 00 00	 call	 ___acrt_iob_func
  000c7	83 c4 04	 add	 esp, 4
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 _fprintf

; 254  : 					ctm.tm_mon + 1,
; 255  : 					ctm.tm_mday,
; 256  : 					ctm.tm_hour,
; 257  : 					ctm.tm_min,
; 258  : 					ELTimer_GetMSec() % 60000,
; 259  : 					szBuf + 8);
; 260  : 	fflush(stderr);

  000d0	6a 02		 push	 2
  000d2	e8 00 00 00 00	 call	 ___acrt_iob_func
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 _fflush
  000dd	83 c4 28	 add	 esp, 40			; 00000028H

; 261  : 
; 262  : #ifdef _DEBUG
; 263  : 	OutputDebugString(szBuf);
; 264  : 	fputs(szBuf, stdout);
; 265  : #endif
; 266  : 
; 267  : 	if (isLogFile)

  000e0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  000e7	74 0f		 je	 SHORT $LN2@TraceError

; 268  : 		LogFile(szBuf);

  000e9	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  000f5	83 c4 04	 add	 esp, 4
$LN2@TraceError:

; 269  : #endif
; 270  : }

  000f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fb	33 cd		 xor	 ecx, ebp
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
?TraceErrorWithoutEnter@@YAXPBDZZ ENDP			; TraceErrorWithoutEnter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?TraceError@@YAXPBDZZ
_TEXT	SEGMENT
_ctm$6$ = -1072						; size = 16
_ctm$5$ = -1056						; size = 16
_ct$ = -1040						; size = 8
_szBuf$ = -1032						; size = 1026
__$ArrayPad$ = -4					; size = 4
_c_szFormat$ = 8					; size = 4
?TraceError@@YAXPBDZZ PROC				; TraceError, COMDAT

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 04 00
	00		 sub	 esp, 1108		; 00000454H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 201  : #ifndef _DISTRIBUTE
; 202  : 
; 203  : 	char szBuf[DEBUG_STRING_MAX_LEN+2];
; 204  : 
; 205  : 	strncpy(szBuf, "SYSERR: ", DEBUG_STRING_MAX_LEN);

  00014	68 00 04 00 00	 push	 1024			; 00000400H
  00019	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_08MKEHAJJM@SYSERR?3?5@
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _strncpy

; 206  : 	int len = strlen(szBuf);

  0002a	8d b5 f8 fb ff
	ff		 lea	 esi, DWORD PTR _szBuf$[ebp]
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL14@TraceError:
  00036	8a 06		 mov	 al, BYTE PTR [esi]
  00038	46		 inc	 esi
  00039	84 c0		 test	 al, al
  0003b	75 f9		 jne	 SHORT $LL14@TraceError
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  0003d	8d 45 0c	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 206  : 	int len = strlen(szBuf);

  00040	2b f1		 sub	 esi, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00042	50		 push	 eax
  00043	6a 00		 push	 0
  00045	ff 75 08	 push	 DWORD PTR _c_szFormat$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 210  : 	len = _vsnprintf(szBuf + len, sizeof(szBuf) - (len + 1), c_szFormat, args) + len;

  00048	b8 01 04 00 00	 mov	 eax, 1025		; 00000401H
  0004d	2b c6		 sub	 eax, esi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  0004f	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 210  : 	len = _vsnprintf(szBuf + len, sizeof(szBuf) - (len + 1), c_szFormat, args) + len;

  00050	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00056	03 c6		 add	 eax, esi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	ff 70 04	 push	 DWORD PTR [eax+4]
  00063	83 c9 01	 or	 ecx, 1
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  0006c	83 c9 ff	 or	 ecx, -1
  0006f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00072	85 c0		 test	 eax, eax
  00074	0f 48 c1	 cmovs	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 210  : 	len = _vsnprintf(szBuf + len, sizeof(szBuf) - (len + 1), c_szFormat, args) + len;

  00077	03 f0		 add	 esi, eax

; 211  : 	va_end(args);
; 212  : 
; 213  : 	szBuf[len] = '\n';

  00079	c6 84 35 f8 fb
	ff ff 0a	 mov	 BYTE PTR _szBuf$[ebp+esi], 10 ; 0000000aH

; 214  : 	szBuf[len + 1] = '\0';

  00081	46		 inc	 esi
  00082	81 fe 02 04 00
	00		 cmp	 esi, 1026		; 00000402H
  00088	0f 83 d4 00 00
	00		 jae	 $LN4@TraceError
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 536  :             return _time64(_Time);

  0008e	6a 00		 push	 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 214  : 	szBuf[len + 1] = '\0';

  00090	c6 84 35 f8 fb
	ff ff 00	 mov	 BYTE PTR _szBuf$[ebp+esi], 0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 536  :             return _time64(_Time);

  00098	e8 00 00 00 00	 call	 __time64
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 216  : 	time_t ct = time(0);

  0009d	89 85 f0 fb ff
	ff		 mov	 DWORD PTR _ct$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 512  :             return _localtime64(_Time);

  000a3	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _ct$[ebp]
  000a9	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 216  : 	time_t ct = time(0);

  000aa	89 95 f4 fb ff
	ff		 mov	 DWORD PTR _ct$[ebp+4], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 512  :             return _localtime64(_Time);

  000b0	e8 00 00 00 00	 call	 __localtime64
  000b5	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 217  : 	struct tm ctm = *localtime(&ct);

  000b8	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000bb	0f 11 85 e0 fb
	ff ff		 movups	 XMMWORD PTR _ctm$5$[ebp], xmm0
  000c2	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 218  : 
; 219  : 	fprintf(stderr, "%02d%02d %02d:%02d:%05d :: %s",

  000c6	8d 85 00 fc ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+8]
  000cc	50		 push	 eax
  000cd	0f 11 85 d0 fb
	ff ff		 movups	 XMMWORD PTR _ctm$6$[ebp], xmm0
  000d4	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  000d9	33 d2		 xor	 edx, edx
  000db	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  000e0	f7 f1		 div	 ecx
  000e2	0f 10 8d e0 fb
	ff ff		 movups	 xmm1, XMMWORD PTR _ctm$5$[ebp]
  000e9	52		 push	 edx
  000ea	0f 28 c1	 movaps	 xmm0, xmm1
  000ed	66 0f 73 d8 04	 psrldq	 xmm0, 4
  000f2	66 0f 7e c0	 movd	 eax, xmm0
  000f6	0f 28 c1	 movaps	 xmm0, xmm1
  000f9	66 0f 73 d8 08	 psrldq	 xmm0, 8
  000fe	66 0f 73 d9 0c	 psrldq	 xmm1, 12		; 0000000cH
  00103	50		 push	 eax
  00104	66 0f 7e c0	 movd	 eax, xmm0
  00108	50		 push	 eax
  00109	66 0f 7e c8	 movd	 eax, xmm1
  0010d	50		 push	 eax
  0010e	8b 85 d0 fb ff
	ff		 mov	 eax, DWORD PTR _ctm$6$[ebp]
  00114	40		 inc	 eax
  00115	50		 push	 eax
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IGAAHNNJ@?$CF02d?$CF02d?5?$CF02d?3?$CF02d?3?$CF05d?5?3?3?5?$CFs@
  0011b	6a 02		 push	 2
  0011d	e8 00 00 00 00	 call	 ___acrt_iob_func
  00122	83 c4 04	 add	 esp, 4
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 _fprintf

; 220  : 					ctm.tm_mon + 1,
; 221  : 					ctm.tm_mday,
; 222  : 					ctm.tm_hour,
; 223  : 					ctm.tm_min,
; 224  : 					ELTimer_GetMSec() % 60000,
; 225  : 					szBuf + 8);
; 226  : 	fflush(stderr);

  0012b	6a 02		 push	 2
  0012d	e8 00 00 00 00	 call	 ___acrt_iob_func
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 _fflush
  00138	83 c4 28	 add	 esp, 40			; 00000028H

; 227  : 
; 228  : #ifdef _DEBUG
; 229  : 	OutputDebugString(szBuf);
; 230  : 	fputs(szBuf, stdout);
; 231  : #endif
; 232  : 
; 233  : 	if (isLogFile)

  0013b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  00142	5e		 pop	 esi
  00143	74 0f		 je	 SHORT $LN2@TraceError

; 234  : 		LogFile(szBuf);

  00145	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0014b	50		 push	 eax
  0014c	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  00151	83 c4 04	 add	 esp, 4
$LN2@TraceError:

; 235  : 
; 236  : #endif
; 237  : }

  00154	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00157	33 cd		 xor	 ecx, ebp
  00159	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c3		 ret	 0
$LN4@TraceError:

; 214  : 	szBuf[len + 1] = '\0';

  00162	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN15@TraceError:
  00167	cc		 int	 3
?TraceError@@YAXPBDZZ ENDP				; TraceError
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Tracef@@YAXPBDZZ
_TEXT	SEGMENT
_szBuf$ = -1032						; size = 1025
__$ArrayPad$ = -4					; size = 4
_c_szFormat$ = 8					; size = 4
?Tracef@@YAXPBDZZ PROC					; Tracef, COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 04 00
	00		 sub	 esp, 1032		; 00000408H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00013	8d 45 0c	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	ff 75 08	 push	 DWORD PTR _c_szFormat$[ebp]
  0001c	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00022	68 01 04 00 00	 push	 1025			; 00000401H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	ff 70 04	 push	 DWORD PTR [eax+4]
  00032	83 c9 01	 or	 ecx, 1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  0003b	83 c4 1c	 add	 esp, 28			; 0000001cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 195  : 	if (isLogFile)

  0003e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  00045	74 0f		 je	 SHORT $LN2@Tracef

; 196  : 		LogFile(szBuf);

  00047	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  00053	83 c4 04	 add	 esp, 4
$LN2@Tracef:

; 197  : }

  00056	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00059	33 cd		 xor	 ecx, ebp
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?Tracef@@YAXPBDZZ ENDP					; Tracef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Tracenf@@YAXPBDZZ
_TEXT	SEGMENT
_szBuf$ = -1032						; size = 1026
__$ArrayPad$ = -4					; size = 4
_c_szFormat$ = 8					; size = 4
?Tracenf@@YAXPBDZZ PROC					; Tracenf, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 04 00
	00		 sub	 esp, 1032		; 00000408H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00013	8d 45 0c	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	ff 75 08	 push	 DWORD PTR _c_szFormat$[ebp]
  0001c	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00022	68 01 04 00 00	 push	 1025			; 00000401H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	ff 70 04	 push	 DWORD PTR [eax+4]
  00032	83 c9 01	 or	 ecx, 1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  0003b	83 c9 ff	 or	 ecx, -1
  0003e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00041	85 c0		 test	 eax, eax
  00043	0f 48 c1	 cmovs	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 166  : 	if (len > 0)

  00046	85 c0		 test	 eax, eax
  00048	7e 18		 jle	 SHORT $LN2@Tracenf

; 167  : 	{
; 168  : 		szBuf[len] = '\n';

  0004a	c6 84 05 f8 fb
	ff ff 0a	 mov	 BYTE PTR _szBuf$[ebp+eax], 10 ; 0000000aH

; 169  : 		szBuf[len + 1] = '\0';

  00052	40		 inc	 eax
  00053	3d 02 04 00 00	 cmp	 eax, 1026		; 00000402H
  00058	73 2e		 jae	 SHORT $LN5@Tracenf
  0005a	c6 84 05 f8 fb
	ff ff 00	 mov	 BYTE PTR _szBuf$[ebp+eax], 0
$LN2@Tracenf:

; 170  : 	}
; 171  : 	va_end(args);
; 172  : #ifdef _DEBUG
; 173  : 	OutputDebugString(szBuf);
; 174  : 	printf("%s", szBuf);
; 175  : #endif
; 176  : 
; 177  : 	if (isLogFile)

  00062	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  00069	74 0f		 je	 SHORT $LN3@Tracenf

; 178  : 		LogFile(szBuf);

  0006b	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  00077	83 c4 04	 add	 esp, 4
$LN3@Tracenf:

; 179  : }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN5@Tracenf:

; 169  : 		szBuf[len + 1] = '\0';

  00088	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN11@Tracenf:
  0008d	cc		 int	 3
?Tracenf@@YAXPBDZZ ENDP					; Tracenf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Tracen@@YAXPBD@Z
_TEXT	SEGMENT
_c_szMsg$ = 8						; size = 4
?Tracen@@YAXPBD@Z PROC					; Tracen, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  : #ifdef _DEBUG
; 139  : 	char szBuf[DEBUG_STRING_MAX_LEN+1];
; 140  : 	_snprintf(szBuf, sizeof(szBuf), "%s\n", c_szMsg);
; 141  : 	OutputDebugString(szBuf);
; 142  : 	puts(c_szMsg);
; 143  : 
; 144  : 	if (isLogFile)
; 145  : 		LogFile(szBuf);
; 146  : 
; 147  : 	puts(c_szMsg);
; 148  : 	putc('\n', stdout);
; 149  : #else
; 150  : 	if (isLogFile)

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  0000a	74 18		 je	 SHORT $LN2@Tracen

; 151  : 	{
; 152  : 		LogFile(c_szMsg);

  0000c	ff 75 08	 push	 DWORD PTR _c_szMsg$[ebp]
  0000f	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  00014	83 c4 04	 add	 esp, 4

; 153  : 		LogFile("\n");

  00017	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _c_szMsg$[ebp], OFFSET ??_C@_01EEMJAFIK@?6@

; 154  : 	}
; 155  : #endif
; 156  : }

  0001e	5d		 pop	 ebp

; 153  : 		LogFile("\n");

  0001f	e9 00 00 00 00	 jmp	 ?LogFile@@YAXPBD@Z	; LogFile
$LN2@Tracen:

; 154  : 	}
; 155  : #endif
; 156  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?Tracen@@YAXPBD@Z ENDP					; Tracen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Trace@@YAXPBD@Z
_TEXT	SEGMENT
_c_szMsg$ = 8						; size = 4
?Trace@@YAXPBD@Z PROC					; Trace, COMDAT

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 127  : #ifdef _DEBUG
; 128  : 	OutputDebugString(c_szMsg);
; 129  : 	printf("%s", c_szMsg);
; 130  : #endif
; 131  : 
; 132  : 	if (isLogFile)

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  0000a	74 06		 je	 SHORT $LN2@Trace

; 134  : }

  0000c	5d		 pop	 ebp

; 133  : 		LogFile(c_szMsg);

  0000d	e9 00 00 00 00	 jmp	 ?LogFile@@YAXPBD@Z	; LogFile
$LN2@Trace:

; 134  : }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?Trace@@YAXPBD@Z ENDP					; Trace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Lognf@@YAXIPBDZZ
_TEXT	SEGMENT
_szBuf$ = -1032						; size = 1026
__$ArrayPad$ = -4					; size = 4
_uLevel$ = 8						; size = 4
_c_szFormat$ = 12					; size = 4
?Lognf@@YAXIPBDZZ PROC					; Lognf, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 04 00
	00		 sub	 esp, 1032		; 00000408H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 100  : 	if (uLevel<gs_uLevel)

  00013	8b 45 08	 mov	 eax, DWORD PTR _uLevel$[ebp]
  00016	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gs_uLevel@@3IA
  0001c	72 67		 jb	 SHORT $LN4@Lognf
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  0001e	8d 45 10	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
  00021	50		 push	 eax
  00022	6a 00		 push	 0
  00024	ff 75 0c	 push	 DWORD PTR _c_szFormat$[ebp]
  00027	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0002d	68 01 04 00 00	 push	 1025			; 00000401H
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	ff 70 04	 push	 DWORD PTR [eax+4]
  0003d	83 c9 01	 or	 ecx, 1
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00046	83 c9 ff	 or	 ecx, -1
  00049	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004c	85 c0		 test	 eax, eax
  0004e	0f 48 c1	 cmovs	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 109  : 	if (len > 0)

  00051	85 c0		 test	 eax, eax
  00053	7e 18		 jle	 SHORT $LN3@Lognf

; 110  : 	{
; 111  : 		szBuf[len] = '\n';

  00055	c6 84 05 f8 fb
	ff ff 0a	 mov	 BYTE PTR _szBuf$[ebp+eax], 10 ; 0000000aH

; 112  : 		szBuf[len + 1] = '\0';

  0005d	40		 inc	 eax
  0005e	3d 02 04 00 00	 cmp	 eax, 1026		; 00000402H
  00063	73 2e		 jae	 SHORT $LN6@Lognf
  00065	c6 84 05 f8 fb
	ff ff 00	 mov	 BYTE PTR _szBuf$[ebp+eax], 0
$LN3@Lognf:

; 113  : 	}
; 114  : 	va_end(args);
; 115  : #ifdef _DEBUG
; 116  : 	OutputDebugString(szBuf);
; 117  : 	puts(szBuf);
; 118  : #endif
; 119  : 
; 120  : 	if (isLogFile)

  0006d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  00074	74 0f		 je	 SHORT $LN4@Lognf

; 121  : 		LogFile(szBuf);

  00076	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  00082	83 c4 04	 add	 esp, 4
$LN4@Lognf:

; 122  : }

  00085	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00088	33 cd		 xor	 ecx, ebp
  0008a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN6@Lognf:

; 112  : 		szBuf[len + 1] = '\0';

  00093	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN12@Lognf:
  00098	cc		 int	 3
?Lognf@@YAXIPBDZZ ENDP					; Lognf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Logf@@YAXIPBDZZ
_TEXT	SEGMENT
_szBuf$ = -1032						; size = 1025
__$ArrayPad$ = -4					; size = 4
_uLevel$ = 8						; size = 4
_c_szFormat$ = 12					; size = 4
?Logf@@YAXIPBDZZ PROC					; Logf, COMDAT

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 04 00
	00		 sub	 esp, 1032		; 00000408H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 80   : 	if (uLevel<gs_uLevel)

  00013	8b 45 08	 mov	 eax, DWORD PTR _uLevel$[ebp]
  00016	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gs_uLevel@@3IA
  0001c	72 43		 jb	 SHORT $LN3@Logf
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h

; 1390 :         int const _Result = __stdio_common_vsprintf(

  0001e	8d 45 10	 lea	 eax, DWORD PTR _c_szFormat$[ebp+4]
  00021	50		 push	 eax
  00022	6a 00		 push	 0
  00024	ff 75 0c	 push	 DWORD PTR _c_szFormat$[ebp]
  00027	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0002d	68 01 04 00 00	 push	 1025			; 00000401H
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	ff 70 04	 push	 DWORD PTR [eax+4]
  0003d	83 c9 01	 or	 ecx, 1
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00046	83 c4 1c	 add	 esp, 28			; 0000001cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp

; 94   : 	if (isLogFile)

  00049	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isLogFile@@3HA, 0
  00050	74 0f		 je	 SHORT $LN3@Logf

; 95   : 		LogFile(szBuf);

  00052	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD@Z	; LogFile
  0005e	83 c4 04	 add	 esp, 4
$LN3@Logf:

; 96   : }

  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?Logf@@YAXIPBDZZ ENDP					; Logf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Logn@@YAXIPBD@Z
_TEXT	SEGMENT
_uLevel$ = 8						; size = 4
_c_szMsg$ = 12						; size = 4
?Logn@@YAXIPBD@Z PROC					; Logn, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   : 	if (uLevel>=gs_uLevel)

  00003	8b 45 08	 mov	 eax, DWORD PTR _uLevel$[ebp]
  00006	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gs_uLevel@@3IA
  0000c	72 0b		 jb	 SHORT $LN2@Logn

; 75   : 		Tracen(c_szMsg);

  0000e	ff 75 0c	 push	 DWORD PTR _c_szMsg$[ebp]
  00011	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  00016	83 c4 04	 add	 esp, 4
$LN2@Logn:

; 76   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?Logn@@YAXIPBD@Z ENDP					; Logn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?Log@@YAXIPBD@Z
_TEXT	SEGMENT
_uLevel$ = 8						; size = 4
_c_szMsg$ = 12						; size = 4
?Log@@YAXIPBD@Z PROC					; Log, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	if (uLevel>=gs_uLevel)

  00003	8b 45 08	 mov	 eax, DWORD PTR _uLevel$[ebp]
  00006	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gs_uLevel@@3IA
  0000c	72 0b		 jb	 SHORT $LN2@Log

; 69   : 		Trace(c_szMsg);

  0000e	ff 75 0c	 push	 DWORD PTR _c_szMsg$[ebp]
  00011	e8 00 00 00 00	 call	 ?Trace@@YAXPBD@Z	; Trace
  00016	83 c4 04	 add	 esp, 4
$LN2@Log:

; 70   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?Log@@YAXIPBD@Z ENDP					; Log
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\Debug.cpp
;	COMDAT ?SetLogLevel@@YAXI@Z
_TEXT	SEGMENT
_uLevel$ = 8						; size = 4
?SetLogLevel@@YAXI@Z PROC				; SetLogLevel, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	gs_uLevel=uLevel;

  00003	8b 45 08	 mov	 eax, DWORD PTR _uLevel$[ebp]
  00006	a3 00 00 00 00	 mov	 DWORD PTR ?gs_uLevel@@3IA, eax

; 64   : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?SetLogLevel@@YAXI@Z ENDP				; SetLogLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR __Stream$[ebp]
  0000f	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00014	ff 70 04	 push	 DWORD PTR [eax+4]
  00017	ff 30		 push	 DWORD PTR [eax]
  00019	e8 00 00 00 00	 call	 ___stdio_common_vfprintf
  0001e	83 c4 18	 add	 esp, 24			; 00000018H

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);
; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);
; 840  :         __crt_va_end(_ArgList);
; 841  :         return _Result;
; 842  :     }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
