; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CMappedFile@@QAE@XZ				; CMappedFile::CMappedFile
PUBLIC	??1CMappedFile@@UAE@XZ				; CMappedFile::~CMappedFile
PUBLIC	?Link@CMappedFile@@QAEXKPBX@Z			; CMappedFile::Link
PUBLIC	?Create@CMappedFile@@QAEHPBD@Z			; CMappedFile::Create
PUBLIC	?Create@CMappedFile@@QAEHPBDPAPBXHH@Z		; CMappedFile::Create
PUBLIC	?Get@CMappedFile@@QAEPBXXZ			; CMappedFile::Get
PUBLIC	?Destroy@CMappedFile@@QAEXXZ			; CMappedFile::Destroy
PUBLIC	?Seek@CMappedFile@@QAEHKH@Z			; CMappedFile::Seek
PUBLIC	?Map@CMappedFile@@QAEHPAPBXHH@Z			; CMappedFile::Map
PUBLIC	?Size@CMappedFile@@QAEKXZ			; CMappedFile::Size
PUBLIC	?GetPosition@CMappedFile@@QAEKXZ		; CMappedFile::GetPosition
PUBLIC	?Read@CMappedFile@@QAEHPAXH@Z			; CMappedFile::Read
PUBLIC	?GetSeekPosition@CMappedFile@@QAEKXZ		; CMappedFile::GetSeekPosition
PUBLIC	?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z	; CMappedFile::BindLZObject
PUBLIC	?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z ; CMappedFile::BindLZObjectWithBufferedSize
PUBLIC	?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z	; CMappedFile::AppendDataBlock
PUBLIC	?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ	; CMappedFile::GetCurrentSeekPoint
PUBLIC	?Unmap@CMappedFile@@AAEXPBX@Z			; CMappedFile::Unmap
PUBLIC	??_GCMappedFile@@UAEPAXI@Z			; CMappedFile::`scalar deleting destructor'
PUBLIC	??_7CMappedFile@@6B@				; CMappedFile::`vftable'
PUBLIC	??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@ ; `string'
PUBLIC	??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@ ; `string'
PUBLIC	??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@ ; `string'
PUBLIC	??_R4CMappedFile@@6B@				; CMappedFile::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMappedFile@@@8				; CMappedFile `RTTI Type Descriptor'
PUBLIC	??_R3CMappedFile@@8				; CMappedFile::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMappedFile@@8				; CMappedFile::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMappedFile@@8			; CMappedFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CFileBase@@8			; CFileBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCFileBase@@@8				; CFileBase `RTTI Type Descriptor'
PUBLIC	??_R3CFileBase@@8				; CFileBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFileBase@@8				; CFileBase::`RTTI Base Class Array'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__UnmapViewOfFile@4:PROC
EXTRN	__imp__CreateFileMappingA@24:PROC
EXTRN	??1CLZObject@@QAE@XZ:PROC			; CLZObject::~CLZObject
EXTRN	?GetSize@CLZObject@@QAEKXZ:PROC			; CLZObject::GetSize
EXTRN	??0CFileBase@@QAE@XZ:PROC			; CFileBase::CFileBase
EXTRN	??1CFileBase@@UAE@XZ:PROC			; CFileBase::~CFileBase
EXTRN	?Destroy@CFileBase@@QAEXXZ:PROC			; CFileBase::Destroy
EXTRN	?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z:PROC	; CFileBase::Create
EXTRN	?Write@CFileBase@@UAEHPBXH@Z:PROC		; CFileBase::Write
EXTRN	??_ECMappedFile@@UAEPAXI@Z:PROC			; CMappedFile::`vector deleting destructor'
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R2CFileBase@@8
rdata$r	SEGMENT
??_R2CFileBase@@8 DD FLAT:??_R1A@?0A@EA@CFileBase@@8	; CFileBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFileBase@@8
rdata$r	SEGMENT
??_R3CFileBase@@8 DD 00H				; CFileBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFileBase@@@8
data$r	SEGMENT
??_R0?AVCFileBase@@@8 DD FLAT:??_7type_info@@6B@	; CFileBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFileBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFileBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFileBase@@8 DD FLAT:??_R0?AVCFileBase@@@8 ; CFileBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMappedFile@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMappedFile@@8 DD FLAT:??_R0?AVCMappedFile@@@8 ; CMappedFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMappedFile@@8
rdata$r	ENDS
;	COMDAT ??_R2CMappedFile@@8
rdata$r	SEGMENT
??_R2CMappedFile@@8 DD FLAT:??_R1A@?0A@EA@CMappedFile@@8 ; CMappedFile::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CMappedFile@@8
rdata$r	SEGMENT
??_R3CMappedFile@@8 DD 00H				; CMappedFile::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMappedFile@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMappedFile@@@8
data$r	SEGMENT
??_R0?AVCMappedFile@@@8 DD FLAT:??_7type_info@@6B@	; CMappedFile `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMappedFile@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMappedFile@@6B@
rdata$r	SEGMENT
??_R4CMappedFile@@6B@ DD 00H				; CMappedFile::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMappedFile@@@8
	DD	FLAT:??_R3CMappedFile@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@
CONST	SEGMENT
??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@ DB 'CMappedFile::Unma'
	DB	'p - Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@
CONST	SEGMENT
??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@ DB 'CMapped'
	DB	'File::Map !m_lpMapData %lu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@
CONST	SEGMENT
??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@ DB 'CMappedFile::Map '
	DB	'!m_hFM', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CMappedFile@@6B@
CONST	SEGMENT
??_7CMappedFile@@6B@ DD FLAT:??_R4CMappedFile@@6B@	; CMappedFile::`vftable'
	DD	FLAT:??_ECMappedFile@@UAEPAXI@Z
	DD	FLAT:?Write@CFileBase@@UAEHPBXH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMappedFile@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCMappedFile@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMappedFile@@UAEPAXI@Z PROC				; CMappedFile::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 44 01 00 00	 push	 324			; 00000144H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCMappedFile@@UAEPAXI@Z ENDP				; CMappedFile::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Unmap@CMappedFile@@AAEXPBX@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?Unmap@CMappedFile@@AAEXPBX@Z PROC			; CMappedFile::Unmap, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 246  : 	if (UnmapViewOfFile(data))

  00004	ff 75 08	 push	 DWORD PTR _data$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnmapViewOfFile@4
  0000f	85 c0		 test	 eax, eax
  00011	75 0d		 jne	 SHORT $LN5@Unmap

; 247  : 	{
; 248  : 		//g_dwCount--;
; 249  : 		//Tracenf("UNMAPFILE %d", g_dwCount);
; 250  : 	}
; 251  : 	else
; 252  : 	{
; 253  : 		TraceError("CMappedFile::Unmap - Error");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@
  00018	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0001d	83 c4 04	 add	 esp, 4
$LN5@Unmap:

; 254  : 	}
; 255  : 	m_lpData = NULL;
; 256  : }

  00020	c7 86 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+316], 0
  0002a	5e		 pop	 esi
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?Unmap@CMappedFile@@AAEXPBX@Z ENDP			; CMappedFile::Unmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ
_TEXT	SEGMENT
?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ PROC		; CMappedFile::GetCurrentSeekPoint, COMDAT
; _this$ = ecx

; 208  : 	return m_pbBufLinkData+m_seekPosition;

  00000	8b 81 28 01 00
	00		 mov	 eax, DWORD PTR [ecx+296]
  00006	03 81 18 01 00
	00		 add	 eax, DWORD PTR [ecx+280]

; 209  : 	//return m_pLZObj ? m_pLZObj->GetBuffer() + m_seekPosition : (BYTE *) m_lpData + m_seekPosition;
; 210  : }

  0000c	c3		 ret	 0
?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ ENDP		; CMappedFile::GetCurrentSeekPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z
_TEXT	SEGMENT
_pBlock$ = 8						; size = 4
_dwBlockSize$ = 12					; size = 4
?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z PROC		; CMappedFile::AppendDataBlock, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 68   : 	if( m_pbAppendResultDataBlock )

  00007	8b 87 20 01 00
	00		 mov	 eax, DWORD PTR [edi+288]
  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN2@AppendData

; 69   : 	{
; 70   : 		delete []m_pbAppendResultDataBlock;

  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00017	83 c4 04	 add	 esp, 4
$LN2@AppendData:

; 71   : 	}
; 72   : 
; 73   : 	//realloc
; 74   : 	m_dwAppendResultDataSize  = m_dwBufLinkSize+dwBlockSize;

  0001a	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00020	8b 75 0c	 mov	 esi, DWORD PTR _dwBlockSize$[ebp]
  00023	03 c6		 add	 eax, esi

; 75   : 	m_pbAppendResultDataBlock = new BYTE[m_dwAppendResultDataSize];

  00025	50		 push	 eax
  00026	89 87 24 01 00
	00		 mov	 DWORD PTR [edi+292], eax
  0002c	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 76   : 
; 77   : 	memcpy(m_pbAppendResultDataBlock, m_pbBufLinkData, m_dwBufLinkSize );

  00031	ff b7 1c 01 00
	00		 push	 DWORD PTR [edi+284]
  00037	89 87 20 01 00
	00		 mov	 DWORD PTR [edi+288], eax
  0003d	ff b7 18 01 00
	00		 push	 DWORD PTR [edi+280]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 _memcpy

; 78   : 	memcpy(m_pbAppendResultDataBlock + m_dwBufLinkSize, pBlock, dwBlockSize );

  00049	8b 87 20 01 00
	00		 mov	 eax, DWORD PTR [edi+288]
  0004f	03 87 1c 01 00
	00		 add	 eax, DWORD PTR [edi+284]
  00055	56		 push	 esi
  00056	ff 75 08	 push	 DWORD PTR _pBlock$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 _memcpy
  0005f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 79   : 
; 80   : 	//redirect
; 81   : 	Link(m_dwAppendResultDataSize, m_pbAppendResultDataBlock);

  00062	8b cf		 mov	 ecx, edi
  00064	ff b7 20 01 00
	00		 push	 DWORD PTR [edi+288]
  0006a	ff b7 24 01 00
	00		 push	 DWORD PTR [edi+292]
  00070	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 82   : 
; 83   : 	return m_pbAppendResultDataBlock;

  00075	8b 87 20 01 00
	00		 mov	 eax, DWORD PTR [edi+288]
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi

; 84   : }

  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z ENDP		; CMappedFile::AppendDataBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z
_TEXT	SEGMENT
_pLZObj$ = 8						; size = 4
?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z PROC ; CMappedFile::BindLZObjectWithBufferedSize, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 60   : 	assert(m_pLZObj == NULL);
; 61   : 	m_pLZObj = pLZObj;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pLZObj$[ebp]
  00006	89 81 40 01 00
	00		 mov	 DWORD PTR [ecx+320], eax

; 62   : 
; 63   : 	Link(m_pLZObj->GetBufferSize(), m_pLZObj->GetBuffer());

  0000c	ff 30		 push	 DWORD PTR [eax]
  0000e	ff 70 04	 push	 DWORD PTR [eax+4]
  00011	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 64   : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z ENDP ; CMappedFile::BindLZObjectWithBufferedSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z
_TEXT	SEGMENT
_pLZObj$ = 8						; size = 4
?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z PROC	; CMappedFile::BindLZObject, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 52   : 	assert(m_pLZObj == NULL);
; 53   : 	m_pLZObj = pLZObj;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pLZObj$[ebp]
  00009	89 8e 40 01 00
	00		 mov	 DWORD PTR [esi+320], ecx

; 54   : 
; 55   : 	Link(m_pLZObj->GetSize(), m_pLZObj->GetBuffer());

  0000f	ff 31		 push	 DWORD PTR [ecx]
  00011	e8 00 00 00 00	 call	 ?GetSize@CLZObject@@QAEKXZ ; CLZObject::GetSize
  00016	50		 push	 eax
  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link
  0001e	5e		 pop	 esi

; 56   : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z ENDP	; CMappedFile::BindLZObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?GetSeekPosition@CMappedFile@@QAEKXZ
_TEXT	SEGMENT
?GetSeekPosition@CMappedFile@@QAEKXZ PROC		; CMappedFile::GetSeekPosition, COMDAT
; _this$ = ecx

; 241  : 	return m_seekPosition;

  00000	8b 81 28 01 00
	00		 mov	 eax, DWORD PTR [ecx+296]

; 242  : }

  00006	c3		 ret	 0
?GetSeekPosition@CMappedFile@@QAEKXZ ENDP		; CMappedFile::GetSeekPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Read@CMappedFile@@QAEHPAXH@Z
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_bytes$ = 12						; size = 4
?Read@CMappedFile@@QAEHPAXH@Z PROC			; CMappedFile::Read, COMDAT
; _this$ = ecx

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 231  : 	if (m_seekPosition + bytes > Size())

  00007	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  0000c	8b 96 28 01 00
	00		 mov	 edx, DWORD PTR [esi+296]
  00012	8b 7d 0c	 mov	 edi, DWORD PTR _bytes$[ebp]
  00015	03 d7		 add	 edx, edi
  00017	3b d0		 cmp	 edx, eax
  00019	76 08		 jbe	 SHORT $LN2@Read

; 232  : 		return FALSE;

  0001b	5f		 pop	 edi
  0001c	33 c0		 xor	 eax, eax

; 237  : }

  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
$LN2@Read:

; 233  : 
; 234  : 	memcpy(dest, GetCurrentSeekPoint(), bytes);

  00023	57		 push	 edi
  00024	8b ce		 mov	 ecx, esi
  00026	e8 00 00 00 00	 call	 ?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ ; CMappedFile::GetCurrentSeekPoint
  0002b	50		 push	 eax
  0002c	ff 75 08	 push	 DWORD PTR _dest$[ebp]
  0002f	e8 00 00 00 00	 call	 _memcpy
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 235  : 	m_seekPosition += bytes;
; 236  : 	return TRUE;

  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	01 be 28 01 00
	00		 add	 DWORD PTR [esi+296], edi
  00042	5f		 pop	 edi

; 237  : }

  00043	5e		 pop	 esi
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?Read@CMappedFile@@QAEHPAXH@Z ENDP			; CMappedFile::Read
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?GetPosition@CMappedFile@@QAEKXZ
_TEXT	SEGMENT
?GetPosition@CMappedFile@@QAEKXZ PROC			; CMappedFile::GetPosition, COMDAT
; _this$ = ecx

; 226  : 	return m_dataOffset;

  00000	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]

; 227  : }

  00006	c3		 ret	 0
?GetPosition@CMappedFile@@QAEKXZ ENDP			; CMappedFile::GetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Size@CMappedFile@@QAEKXZ
_TEXT	SEGMENT
?Size@CMappedFile@@QAEKXZ PROC				; CMappedFile::Size, COMDAT
; _this$ = ecx

; 215  : 	return m_dwBufLinkSize;

  00000	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]

; 216  : 	/*
; 217  : 	if (m_pLZObj)
; 218  : 		return m_pLZObj->GetSize();
; 219  : 
; 220  : 	return (m_mapSize);
; 221  : 	*/
; 222  : }

  00006	c3		 ret	 0
?Size@CMappedFile@@QAEKXZ ENDP				; CMappedFile::Size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Map@CMappedFile@@QAEHPAPBXHH@Z
_TEXT	SEGMENT
_SysInfo$ = -36						; size = 36
_dest$ = 8						; size = 4
_dwSysGran$1$ = 12					; size = 4
_offset$ = 12						; size = 4
tv352 = 16						; size = 4
_size$ = 16						; size = 4
?Map@CMappedFile@@QAEHPAPBXHH@Z PROC			; CMappedFile::Map, COMDAT
; _this$ = ecx

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 151  : 	m_dataOffset = offset;
; 152  : 
; 153  : 	if (size == 0)

  00003	8b 45 10	 mov	 eax, DWORD PTR _size$[ebp]
  00006	83 ec 24	 sub	 esp, 36			; 00000024H
  00009	8b 55 0c	 mov	 edx, DWORD PTR _offset$[ebp]
  0000c	56		 push	 esi
  0000d	8b f1		 mov	 esi, ecx
  0000f	89 96 30 01 00
	00		 mov	 DWORD PTR [esi+304], edx
  00015	85 c0		 test	 eax, eax
  00017	75 0a		 jne	 SHORT $LN2@Map

; 154  : 		m_mapSize = m_dwSize;

  00019	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]
  0001f	8b c8		 mov	 ecx, eax
  00021	eb 06		 jmp	 SHORT $LN3@Map
$LN2@Map:

; 155  : 	else
; 156  : 		m_mapSize = size;

  00023	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
$LN3@Map:

; 157  : 
; 158  : 	if (m_dataOffset + m_mapSize > m_dwSize)

  00029	89 86 34 01 00
	00		 mov	 DWORD PTR [esi+308], eax
  0002f	03 c2		 add	 eax, edx
  00031	3b c1		 cmp	 eax, ecx
  00033	76 09		 jbe	 SHORT $LN4@Map

; 159  : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	5e		 pop	 esi

; 204  : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
$LN4@Map:
  0003e	53		 push	 ebx
  0003f	57		 push	 edi

; 160  : 
; 161  : 	SYSTEM_INFO SysInfo;
; 162  : 	GetSystemInfo(&SysInfo);

  00040	8d 45 dc	 lea	 eax, DWORD PTR _SysInfo$[ebp]
  00043	50		 push	 eax
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemInfo@4

; 163  : 	DWORD dwSysGran = SysInfo.dwAllocationGranularity;
; 164  : 	DWORD dwFileMapStart = (m_dataOffset / dwSysGran) * dwSysGran;

  0004a	8b be 30 01 00
	00		 mov	 edi, DWORD PTR [esi+304]
  00050	33 d2		 xor	 edx, edx
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _SysInfo$[ebp+28]
  00055	8b c7		 mov	 eax, edi
  00057	f7 f1		 div	 ecx

; 165  : 	DWORD dwMapViewSize = (m_dataOffset % dwSysGran) + m_mapSize;

  00059	8b 86 34 01 00
	00		 mov	 eax, DWORD PTR [esi+308]
  0005f	8b df		 mov	 ebx, edi

; 166  : 	INT iViewDelta = m_dataOffset - dwFileMapStart;
; 167  : 
; 168  : 
; 169  : 	m_hFM = CreateFileMapping(m_hFile,				// handle

  00061	6a 00		 push	 0
  00063	89 45 10	 mov	 DWORD PTR tv352[ebp], eax
  00066	2b da		 sub	 ebx, edx
  00068	03 c7		 add	 eax, edi
  0006a	89 4d 0c	 mov	 DWORD PTR _dwSysGran$1$[ebp], ecx
  0006d	50		 push	 eax
  0006e	6a 00		 push	 0
  00070	6a 02		 push	 2
  00072	6a 00		 push	 0
  00074	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileMappingA@24
  00080	8b c8		 mov	 ecx, eax
  00082	89 8e 2c 01 00
	00		 mov	 DWORD PTR [esi+300], ecx

; 170  : 							  NULL,					// security
; 171  : 							  PAGE_READONLY,		// flProtect
; 172  : 							  0,					// high
; 173  : 							  m_dataOffset + m_mapSize,	// low
; 174  : 							  NULL);				// name
; 175  : 
; 176  : 	if (!m_hFM)

  00088	85 c9		 test	 ecx, ecx
  0008a	75 16		 jne	 SHORT $LN5@Map

; 177  : 	{
; 178  : 		OutputDebugString("CMappedFile::Map !m_hFM\n");

  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4
  00097	5f		 pop	 edi
  00098	5b		 pop	 ebx

; 179  : 		return NULL;

  00099	33 c0		 xor	 eax, eax
  0009b	5e		 pop	 esi

; 204  : }

  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Map:

; 165  : 	DWORD dwMapViewSize = (m_dataOffset % dwSysGran) + m_mapSize;

  000a2	33 d2		 xor	 edx, edx
  000a4	8b c7		 mov	 eax, edi
  000a6	f7 75 0c	 div	 DWORD PTR _dwSysGran$1$[ebp]
  000a9	03 55 10	 add	 edx, DWORD PTR tv352[ebp]

; 180  : 	}
; 181  : 
; 182  : 	m_lpMapData = MapViewOfFile(m_hFM,

  000ac	52		 push	 edx
  000ad	53		 push	 ebx
  000ae	6a 00		 push	 0
  000b0	6a 04		 push	 4
  000b2	51		 push	 ecx
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MapViewOfFile@20
  000b9	89 86 38 01 00
	00		 mov	 DWORD PTR [esi+312], eax

; 183  : 								FILE_MAP_READ,
; 184  : 								0,
; 185  : 								dwFileMapStart,
; 186  : 								dwMapViewSize);
; 187  : 
; 188  : 	if (!m_lpMapData) // Success

  000bf	85 c0		 test	 eax, eax
  000c1	75 1f		 jne	 SHORT $LN6@Map

; 189  : 	{
; 190  : 		TraceError("CMappedFile::Map !m_lpMapData %lu", GetLastError());

  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000c9	50		 push	 eax
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@
  000cf	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000d4	83 c4 08	 add	 esp, 8

; 191  : 		return 0;

  000d7	33 c0		 xor	 eax, eax
  000d9	5f		 pop	 edi
  000da	5b		 pop	 ebx
  000db	5e		 pop	 esi

; 204  : }

  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 0c 00	 ret	 12			; 0000000cH
$LN6@Map:

; 192  : 	}
; 193  : 
; 194  : 	//g_dwCount++;
; 195  : 	//Tracenf("MAPFILE %d", g_dwCount);
; 196  : 
; 197  : 	m_lpData = (char*) m_lpMapData + iViewDelta;

  000e2	2b c3		 sub	 eax, ebx
  000e4	8d 0c 38	 lea	 ecx, DWORD PTR [eax+edi]

; 198  : 	*dest = (char*) m_lpData;

  000e7	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
  000ea	89 8e 3c 01 00
	00		 mov	 DWORD PTR [esi+316], ecx
  000f0	89 08		 mov	 DWORD PTR [eax], ecx

; 199  : 	m_seekPosition = 0;
; 200  : 
; 201  : 	Link(m_mapSize, m_lpData);

  000f2	8b ce		 mov	 ecx, esi
  000f4	ff b6 3c 01 00
	00		 push	 DWORD PTR [esi+316]
  000fa	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0
  00104	ff b6 34 01 00
	00		 push	 DWORD PTR [esi+308]
  0010a	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 202  : 
; 203  : 	return (m_mapSize);

  0010f	8b 86 34 01 00
	00		 mov	 eax, DWORD PTR [esi+308]
  00115	5f		 pop	 edi
  00116	5b		 pop	 ebx
  00117	5e		 pop	 esi

; 204  : }

  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 0c 00	 ret	 12			; 0000000cH
?Map@CMappedFile@@QAEHPAPBXHH@Z ENDP			; CMappedFile::Map
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Seek@CMappedFile@@QAEHKH@Z
_TEXT	SEGMENT
_offset$ = 8						; size = 4
_iSeekType$ = 12					; size = 4
?Seek@CMappedFile@@QAEHKH@Z PROC			; CMappedFile::Seek, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 126  : 	switch (iSeekType)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iSeekType$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	83 e8 00	 sub	 eax, 0
  0000c	74 4d		 je	 SHORT $LN4@Seek
  0000e	83 e8 01	 sub	 eax, 1
  00011	74 1e		 je	 SHORT $LN6@Seek
  00013	83 e8 01	 sub	 eax, 1
  00016	75 0e		 jne	 SHORT $LN13@Seek

; 137  : 			break;
; 138  : 
; 139  : 		case SEEK_TYPE_END:
; 140  : 			m_seekPosition = max(0, Size() - offset);

  00018	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  0001d	2b 45 08	 sub	 eax, DWORD PTR _offset$[ebp]
  00020	89 86 28 01 00
	00		 mov	 DWORD PTR [esi+296], eax
$LN13@Seek:

; 145  : }

  00026	8b 86 28 01 00
	00		 mov	 eax, DWORD PTR [esi+296]
  0002c	5e		 pop	 esi
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
$LN6@Seek:
  00031	57		 push	 edi

; 133  : 			break;
; 134  : 
; 135  : 		case SEEK_TYPE_CURRENT:
; 136  : 			m_seekPosition = min(m_seekPosition + offset, Size());

  00032	8b be 28 01 00
	00		 mov	 edi, DWORD PTR [esi+296]
  00038	03 7d 08	 add	 edi, DWORD PTR _offset$[ebp]
  0003b	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00040	3b f8		 cmp	 edi, eax
  00042	72 09		 jb	 SHORT $LN10@Seek
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  0004b	8b f8		 mov	 edi, eax
$LN10@Seek:
  0004d	89 be 28 01 00
	00		 mov	 DWORD PTR [esi+296], edi

; 141  : 			break;
; 142  : 	}
; 143  : 
; 144  : 	return m_seekPosition;

  00053	8b c7		 mov	 eax, edi
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 145  : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
$LN4@Seek:

; 127  : 	{
; 128  : 		case SEEK_TYPE_BEGIN:
; 129  : 			if (offset > m_dwSize)

  0005b	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]
  00061	8b 4d 08	 mov	 ecx, DWORD PTR _offset$[ebp]
  00064	3b c8		 cmp	 ecx, eax
  00066	0f 47 c8	 cmova	 ecx, eax

; 130  : 				offset = m_dwSize;
; 131  : 
; 132  : 			m_seekPosition = offset;

  00069	89 8e 28 01 00
	00		 mov	 DWORD PTR [esi+296], ecx

; 141  : 			break;
; 142  : 	}
; 143  : 
; 144  : 	return m_seekPosition;

  0006f	8b c1		 mov	 eax, ecx
  00071	5e		 pop	 esi

; 145  : }

  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?Seek@CMappedFile@@QAEHKH@Z ENDP			; CMappedFile::Seek
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Destroy@CMappedFile@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CMappedFile@@QAEXXZ PROC			; CMappedFile::Destroy, COMDAT
; _this$ = ecx

; 87   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 88   : 	if (m_pLZObj)

  00004	8b be 40 01 00
	00		 mov	 edi, DWORD PTR [esi+320]
  0000a	85 ff		 test	 edi, edi
  0000c	74 1c		 je	 SHORT $LN2@Destroy

; 89   : 	{
; 90   : 		delete m_pLZObj;
; 91   : 		m_pLZObj = NULL;

  0000e	8b cf		 mov	 ecx, edi
  00010	e8 00 00 00 00	 call	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
  00015	6a 14		 push	 20			; 00000014H
  00017	57		 push	 edi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001d	83 c4 08	 add	 esp, 8
  00020	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0
$LN2@Destroy:

; 92   : 	}
; 93   : 
; 94   : 	if (NULL != m_lpMapData)

  0002a	8b 86 38 01 00
	00		 mov	 eax, DWORD PTR [esi+312]
  00030	85 c0		 test	 eax, eax
  00032	74 12		 je	 SHORT $LN3@Destroy

; 95   : 	{
; 96   : 		Unmap(m_lpMapData);

  00034	50		 push	 eax
  00035	8b ce		 mov	 ecx, esi
  00037	e8 00 00 00 00	 call	 ?Unmap@CMappedFile@@AAEXPBX@Z ; CMappedFile::Unmap

; 97   : 		m_lpMapData = NULL;

  0003c	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0
$LN3@Destroy:

; 98   : 	}
; 99   : 
; 100  : 	if (NULL != m_hFM)

  00046	8b 86 2c 01 00
	00		 mov	 eax, DWORD PTR [esi+300]
  0004c	85 c0		 test	 eax, eax
  0004e	74 11		 je	 SHORT $LN4@Destroy

; 101  : 	{
; 102  : 		CloseHandle(m_hFM);

  00050	50		 push	 eax
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 103  : 		m_hFM = NULL;

  00057	c7 86 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+300], 0
$LN4@Destroy:

; 104  : 	}
; 105  : 
; 106  : 	if( m_pbAppendResultDataBlock )

  00061	8b 86 20 01 00
	00		 mov	 eax, DWORD PTR [esi+288]
  00067	85 c0		 test	 eax, eax
  00069	74 13		 je	 SHORT $LN5@Destroy

; 107  : 	{
; 108  : 		delete []m_pbAppendResultDataBlock;

  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 109  : 		m_pbAppendResultDataBlock = NULL;

  00074	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
$LN5@Destroy:

; 110  : 	}
; 111  : 
; 112  : 	m_dwAppendResultDataSize = 0;
; 113  : 
; 114  : 	m_pbBufLinkData = NULL;
; 115  : 	m_dwBufLinkSize = 0;
; 116  : 
; 117  : 	m_seekPosition = 0;
; 118  : 	m_dataOffset = 0;
; 119  : 	m_mapSize = 0;
; 120  : 
; 121  : 	CFileBase::Destroy();

  0007e	5f		 pop	 edi
  0007f	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0
  00089	8b ce		 mov	 ecx, esi
  0008b	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0
  00095	c7 86 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+284], 0
  0009f	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0
  000a9	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
  000b3	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  000bd	5e		 pop	 esi
  000be	e9 00 00 00 00	 jmp	 ?Destroy@CFileBase@@QAEXXZ ; CFileBase::Destroy
?Destroy@CMappedFile@@QAEXXZ ENDP			; CMappedFile::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Get@CMappedFile@@QAEPBXXZ
_TEXT	SEGMENT
?Get@CMappedFile@@QAEPBXXZ PROC				; CMappedFile::Get, COMDAT
; _this$ = ecx

; 41   : 	return m_lpData;

  00000	8b 81 3c 01 00
	00		 mov	 eax, DWORD PTR [ecx+316]

; 42   : }

  00006	c3		 ret	 0
?Get@CMappedFile@@QAEPBXXZ ENDP				; CMappedFile::Get
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Create@CMappedFile@@QAEHPBDPAPBXHH@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
_dest$ = 12						; size = 4
_offset$ = 16						; size = 4
_size$ = 20						; size = 4
?Create@CMappedFile@@QAEHPBDPAPBXHH@Z PROC		; CMappedFile::Create, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 32   : 	if (!CMappedFile::Create(filename))

  00004	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?Create@CMappedFile@@QAEHPBD@Z ; CMappedFile::Create
  0000e	85 c0		 test	 eax, eax
  00010	75 05		 jne	 SHORT $LN2@Create
  00012	5e		 pop	 esi

; 37   : }

  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
$LN2@Create:

; 33   : 		return NULL;
; 34   : 
; 35   : 	int ret = Map(dest, offset, size);

  00017	ff 75 14	 push	 DWORD PTR _size$[ebp]
  0001a	8b ce		 mov	 ecx, esi
  0001c	ff 75 10	 push	 DWORD PTR _offset$[ebp]
  0001f	ff 75 0c	 push	 DWORD PTR _dest$[ebp]
  00022	e8 00 00 00 00	 call	 ?Map@CMappedFile@@QAEHPAPBXHH@Z ; CMappedFile::Map

; 36   : 	return (ret) > 0;

  00027	33 c9		 xor	 ecx, ecx
  00029	85 c0		 test	 eax, eax
  0002b	5e		 pop	 esi
  0002c	0f 9f c1	 setg	 cl
  0002f	8b c1		 mov	 eax, ecx

; 37   : }

  00031	5d		 pop	 ebp
  00032	c2 10 00	 ret	 16			; 00000010H
?Create@CMappedFile@@QAEHPBDPAPBXHH@Z ENDP		; CMappedFile::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Create@CMappedFile@@QAEHPBD@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
?Create@CMappedFile@@QAEHPBD@Z PROC			; CMappedFile::Create, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 26   : 	Destroy();

  00006	e8 00 00 00 00	 call	 ?Destroy@CMappedFile@@QAEXXZ ; CMappedFile::Destroy

; 27   : 	return CFileBase::Create(filename, FILEMODE_READ);

  0000b	6a 01		 push	 1
  0000d	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z ; CFileBase::Create
  00017	5e		 pop	 esi

; 28   : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?Create@CMappedFile@@QAEHPBD@Z ENDP			; CMappedFile::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ?Link@CMappedFile@@QAEXKPBX@Z
_TEXT	SEGMENT
_dwBufSize$ = 8						; size = 4
_c_pvBufData$ = 12					; size = 4
?Link@CMappedFile@@QAEXKPBX@Z PROC			; CMappedFile::Link, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 46   : 	m_dwBufLinkSize=dwBufSize;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwBufSize$[ebp]
  00006	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax

; 47   : 	m_pbBufLinkData=(BYTE*)c_pvBufData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _c_pvBufData$[ebp]
  0000f	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax

; 48   : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?Link@CMappedFile@@QAEXKPBX@Z ENDP			; CMappedFile::Link
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ??1CMappedFile@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMappedFile@@UAE@XZ PROC				; CMappedFile::~CMappedFile, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMappedFile@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMappedFile@@6B@

; 21   : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CMappedFile@@QAEXXZ ; CMappedFile::Destroy

; 22   : }

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CFileBase@@UAE@XZ	; CFileBase::~CFileBase
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMappedFile@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMappedFile@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMappedFile@@UAE@XZ ENDP				; CMappedFile::~CMappedFile
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterBase\MappedFile.cpp
;	COMDAT ??0CMappedFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMappedFile@@QAE@XZ PROC				; CMappedFile::CMappedFile, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0CFileBase@@QAE@XZ	; CFileBase::CFileBase
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMappedFile@@6B@

; 17   : }

  00015	8b c6		 mov	 eax, esi
  00017	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0
  00021	c7 86 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+284], 0
  0002b	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
  00035	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0
  0003f	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0
  00049	c7 86 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+300], 0
  00053	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
  0005d	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  00067	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0
  00071	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0
  0007b	5e		 pop	 esi
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
??0CMappedFile@@QAE@XZ ENDP				; CMappedFile::CMappedFile
_TEXT	ENDS
END
