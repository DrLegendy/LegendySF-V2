; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_R4?$CDynamicPool@VCWeaponTrace@@@@6B@	; CDynamicPool<CWeaponTrace>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCWeaponTrace@@@@@8	; CDynamicPool<CWeaponTrace> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCWeaponTrace@@@@8		; CDynamicPool<CWeaponTrace>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCWeaponTrace@@@@8		; CDynamicPool<CWeaponTrace>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCWeaponTrace@@@@8	; CDynamicPool<CWeaponTrace>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPool@VCWeaponTrace@@@@6B@		; CDynamicPool<CWeaponTrace>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCWeaponTrace@@@@UAEPAXI@Z	; CDynamicPool<CWeaponTrace>::`scalar deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@VCWeaponTrace@@@@UAEPAXI@Z:PROC ; CDynamicPool<CWeaponTrace>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPool@VCWeaponTrace@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCWeaponTrace@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCWeaponTrace@@@@6B@ ; CDynamicPool<CWeaponTrace>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCWeaponTrace@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCWeaponTrace@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCWeaponTrace@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCWeaponTrace@@@@@8 ; CDynamicPool<CWeaponTrace>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCWeaponTrace@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCWeaponTrace@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCWeaponTrace@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCWeaponTrace@@@@8 ; CDynamicPool<CWeaponTrace>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCWeaponTrace@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCWeaponTrace@@@@8 DD 00H		; CDynamicPool<CWeaponTrace>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCWeaponTrace@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCWeaponTrace@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCWeaponTrace@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CWeaponTrace> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCWeaponTrace@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCWeaponTrace@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCWeaponTrace@@@@6B@ DD 00H		; CDynamicPool<CWeaponTrace>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCWeaponTrace@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCWeaponTrace@@@@8
rdata$r	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?DestroySystem@CWeaponTrace@@SAXXZ		; CWeaponTrace::DestroySystem
PUBLIC	?Delete@CWeaponTrace@@SAXPAV1@@Z		; CWeaponTrace::Delete
PUBLIC	?New@CWeaponTrace@@SAPAV1@XZ			; CWeaponTrace::New
PUBLIC	??0CWeaponTrace@@QAE@XZ				; CWeaponTrace::CWeaponTrace
PUBLIC	??1CWeaponTrace@@UAE@XZ				; CWeaponTrace::~CWeaponTrace
PUBLIC	?Clear@CWeaponTrace@@QAEXXZ			; CWeaponTrace::Clear
PUBLIC	?TurnOn@CWeaponTrace@@QAEXXZ			; CWeaponTrace::TurnOn
PUBLIC	?TurnOff@CWeaponTrace@@QAEXXZ			; CWeaponTrace::TurnOff
PUBLIC	?UseAlpha@CWeaponTrace@@QAEXXZ			; CWeaponTrace::UseAlpha
PUBLIC	?UseTexture@CWeaponTrace@@QAEXXZ		; CWeaponTrace::UseTexture
PUBLIC	?SetTexture@CWeaponTrace@@QAEXPBD@Z		; CWeaponTrace::SetTexture
PUBLIC	?SetWeaponInstance@CWeaponTrace@@QAE_NPAVCGraphicThingInstance@@KPBD@Z ; CWeaponTrace::SetWeaponInstance
PUBLIC	?SetPosition@CWeaponTrace@@QAEXMMM@Z		; CWeaponTrace::SetPosition
PUBLIC	?SetRotation@CWeaponTrace@@QAEXM@Z		; CWeaponTrace::SetRotation
PUBLIC	?SetLifeTime@CWeaponTrace@@QAEXM@Z		; CWeaponTrace::SetLifeTime
PUBLIC	?SetSamplingTime@CWeaponTrace@@QAEXM@Z		; CWeaponTrace::SetSamplingTime
PUBLIC	?Update@CWeaponTrace@@QAEXM@Z			; CWeaponTrace::Update
PUBLIC	?Render@CWeaponTrace@@QAEXXZ			; CWeaponTrace::Render
PUBLIC	?Initialize@CWeaponTrace@@QAEXXZ		; CWeaponTrace::Initialize
PUBLIC	?BuildVertex@CWeaponTrace@@IAE_NXZ		; CWeaponTrace::BuildVertex
PUBLIC	?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
PUBLIC	??1?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::~deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >
PUBLIC	?erase@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@0@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::erase
PUBLIC	?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen
PUBLIC	?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
PUBLIC	??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::~vector<SPDTVertex,std::allocator<SPDTVertex> >
PUBLIC	?_Xlength@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@CAXXZ ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Xlength
PUBLIC	??_GCWeaponTrace@@UAEPAXI@Z			; CWeaponTrace::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCWeaponTrace@@@@UAE@XZ	; CDynamicPool<CWeaponTrace>::~CDynamicPool<CWeaponTrace>
PUBLIC	?Delete@?$CDynamicPool@VCWeaponTrace@@@@KAXPAVCWeaponTrace@@@Z ; CDynamicPool<CWeaponTrace>::Delete
PUBLIC	?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength
PUBLIC	??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Emplace_reallocate<SPDTVertex const &>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
PUBLIC	??$_Destroy_range@V?$allocator@USPDTVertex@@@std@@@std@@YAXPAUSPDTVertex@@QAU1@AAV?$allocator@USPDTVertex@@@0@@Z ; std::_Destroy_range<std::allocator<SPDTVertex> >
PUBLIC	??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z ; std::_Destroy_in_place<std::pair<float,D3DXVECTOR3> *>
PUBLIC	??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>
PUBLIC	??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z ; std::_Destroy_range<std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Destroy_range<std::allocator<CWeaponTrace *> >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >
PUBLIC	??$_Uninitialized_move@PAUSPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@YAPAUSPDTVertex@@QAU1@0PAU1@AAV?$allocator@USPDTVertex@@@0@@Z ; std::_Uninitialized_move<SPDTVertex *,std::allocator<SPDTVertex> >
PUBLIC	??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A ; CWeaponTrace::ms_kPool
PUBLIC	??_7CWeaponTrace@@6B@				; CWeaponTrace::`vftable'
PUBLIC	??_C@_0BA@NCBBOAJD@lot_ade10?92?4tga@		; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CWeaponTrace@@6B@				; CWeaponTrace::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWeaponTrace@@@8			; CWeaponTrace `RTTI Type Descriptor'
PUBLIC	??_R3CWeaponTrace@@8				; CWeaponTrace::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWeaponTrace@@8				; CWeaponTrace::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWeaponTrace@@8			; CWeaponTrace::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@38d1b717
PUBLIC	__real@3c8efa35
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fb99999a0000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@437f0000
PUBLIC	__real@c0000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?fMAX@@YAMMM@Z:PROC				; fMAX
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixTranslation@16:PROC
EXTRN	_D3DXMatrixRotationZ@8:PROC
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SaveVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SaveVertexShader
EXTRN	?RestoreVertexShader@CStateManager@@QAEXXZ:PROC	; CStateManager::RestoreVertexShader
EXTRN	?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SaveTransform
EXTRN	?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z:PROC ; CStateManager::RestoreTransform
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?Update@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Update
EXTRN	?DeformNoSkin@CGraphicThingInstance@@QAEXXZ:PROC ; CGraphicThingInstance::DeformNoSkin
EXTRN	?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z:PROC ; CGraphicThingInstance::GetBoundBox
EXTRN	?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z:PROC ; CGraphicThingInstance::GetBoneMatrix
EXTRN	?GetCompositeBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z:PROC ; CGraphicThingInstance::GetCompositeBoneMatrix
EXTRN	??_ECWeaponTrace@@UAEPAXI@Z:PROC		; CWeaponTrace::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	__ftoui3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CWeaponTrace@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CWeaponTrace@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fb99999a0000000
CONST	SEGMENT
__real@3fb99999a0000000 DQ 03fb99999a0000000r	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CWeaponTrace@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWeaponTrace@@8 DD FLAT:??_R0?AVCWeaponTrace@@@8 ; CWeaponTrace::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWeaponTrace@@8
rdata$r	ENDS
;	COMDAT ??_R2CWeaponTrace@@8
rdata$r	SEGMENT
??_R2CWeaponTrace@@8 DD FLAT:??_R1A@?0A@EA@CWeaponTrace@@8 ; CWeaponTrace::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWeaponTrace@@8
rdata$r	SEGMENT
??_R3CWeaponTrace@@8 DD 00H				; CWeaponTrace::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWeaponTrace@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWeaponTrace@@@8
data$r	SEGMENT
??_R0?AVCWeaponTrace@@@8 DD FLAT:??_7type_info@@6B@	; CWeaponTrace `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWeaponTrace@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWeaponTrace@@6B@
rdata$r	SEGMENT
??_R4CWeaponTrace@@6B@ DD 00H				; CWeaponTrace::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWeaponTrace@@@8
	DD	FLAT:??_R3CWeaponTrace@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NCBBOAJD@lot_ade10?92?4tga@
CONST	SEGMENT
??_C@_0BA@NCBBOAJD@lot_ade10?92?4tga@ DB 'lot_ade10-2.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CWeaponTrace@@6B@
CONST	SEGMENT
??_7CWeaponTrace@@6B@ DD FLAT:??_R4CWeaponTrace@@6B@	; CWeaponTrace::`vftable'
	DD	FLAT:??_ECWeaponTrace@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A DD FLAT:??_7?$CDynamicPool@VCWeaponTrace@@@@6B@ ; CWeaponTrace::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCWeaponTrace@@@@QAEPAVCWeaponTrace@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCWeaponTrace@@@@QAEPAVCWeaponTrace@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCWeaponTrace@@@@QAEPAVCWeaponTrace@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCWeaponTrace@@@@QAEPAVCWeaponTrace@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?BuildVertex@CWeaponTrace@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildVertex@CWeaponTrace@@IAE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildVertex@CWeaponTrace@@IAE_NXZ$1
__ehfuncinfo$?BuildVertex@CWeaponTrace@@IAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?BuildVertex@CWeaponTrace@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CWeaponTrace@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CWeaponTrace@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CWeaponTrace@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CWeaponTrace@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CWeaponTrace@@QAE@XZ$3
__ehfuncinfo$??0CWeaponTrace@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CWeaponTrace@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CWeaponTrace@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CWeaponTrace@@SAPAV1@XZ$0
__ehfuncinfo$?New@CWeaponTrace@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CWeaponTrace@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@YAPAUSPDTVertex@@QAU1@0PAU1@AAV?$allocator@USPDTVertex@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@YAPAUSPDTVertex@@QAU1@0PAU1@AAV?$allocator@USPDTVertex@@@0@@Z PROC ; std::_Uninitialized_move<SPDTVertex *,std::allocator<SPDTVertex> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000c	3b ca		 cmp	 ecx, edx
  0000e	74 1a		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00010	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00013	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00016	f3 0f 7e 41 10	 movq	 xmm0, QWORD PTR [ecx+16]

; 1509 :         ++_Last;

  0001b	83 c1 18	 add	 ecx, 24			; 00000018H

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0001e	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0

; 1509 :         ++_Last;

  00023	83 c0 18	 add	 eax, 24			; 00000018H

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00026	3b ca		 cmp	 ecx, edx
  00028	75 e6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Uninitialized_move@PAUSPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@YAPAUSPDTVertex@@QAU1@0PAU1@AAV?$allocator@USPDTVertex@@@0@@Z ENDP ; std::_Uninitialized_move<SPDTVertex *,std::allocator<SPDTVertex> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z PROC ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ENDP ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z PROC ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z ENDP ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z PROC ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z ENDP ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1084 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Obj$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	89 01		 mov	 DWORD PTR [ecx], eax
  0000d	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00003	6a 08		 push	 8
  00005	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000d	83 c4 08	 add	 esp, 8

; 999  :     // deallocate a plain pointer using an allocator
; 1000 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1001 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1002 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);
; 1003 :     } else {
; 1004 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1005 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1006 :     }
; 1007 : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CWeaponTrace *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CWeaponTrace *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z PROC ; std::_Destroy_range<std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 969  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 970  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 971  :         for (; _First != _Last; ++_First) {
; 972  :             _Destroy_in_place(*_First);
; 973  :         }
; 974  :     }
; 975  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z ENDP ; std::_Destroy_range<std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>, COMDAT

; 1874 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 1879 :     } else {
; 1880 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1881 :         for (; 0 < _Count; --_Count) {
; 1882 :             _Backout._Emplace_back();
; 1883 :         }
; 1884 : 
; 1885 :         return _Backout._Release();
; 1886 :     }
; 1887 : }

  00012	5d		 pop	 ebp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z PROC ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 1591 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1599 :     } else {
; 1600 :         _Uninitialized_backout<decltype(_UDest)> _Backout{_UDest};
; 1601 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1602 :             _Backout._Emplace_back(*_UFirst);
; 1603 :         }
; 1604 : 
; 1605 :         _UDest = _Backout._Release();
; 1606 :     }
; 1607 : 
; 1608 :     _Seek_wrapped(_Dest, _UDest);
; 1609 :     return _Dest;
; 1610 : }

  00003	5d		 pop	 ebp

; 1592 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1593 :     _Adl_verify_range(_First, _Last);
; 1594 :     auto _UFirst      = _Get_unwrapped(_First);
; 1595 :     const auto _ULast = _Get_unwrapped(_Last);
; 1596 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1597 :     if constexpr (_Ptr_copy_cat<decltype(_UFirst), decltype(_UDest)>::_Really_trivial) {
; 1598 :         _UDest = _Copy_memmove(_UFirst, _ULast, _UDest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ENDP ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z PROC ; std::_Destroy_in_place<std::pair<float,D3DXVECTOR3> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z ENDP ; std::_Destroy_in_place<std::pair<float,D3DXVECTOR3> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USPDTVertex@@@std@@@std@@YAXPAUSPDTVertex@@QAU1@AAV?$allocator@USPDTVertex@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USPDTVertex@@@std@@@std@@YAXPAUSPDTVertex@@QAU1@AAV?$allocator@USPDTVertex@@@0@@Z PROC ; std::_Destroy_range<std::allocator<SPDTVertex> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USPDTVertex@@@std@@@std@@YAXPAUSPDTVertex@@QAU1@AAV?$allocator@USPDTVertex@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<SPDTVertex> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1027 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1028 :     using _Ty = typename _Alloc::value_type;
; 1029 :     _Ptr->~_Ty();
; 1030 :     _Deallocate_plain(_Al, _Ptr);

  00000	e9 00 00 00 00	 jmp	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z
_TEXT	SEGMENT
tv377 = -8						; size = 4
tv376 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z PROC ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Emplace_reallocate<SPDTVertex const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00009	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	8b f1		 mov	 esi, ecx
  00012	57		 push	 edi
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	2b d7		 sub	 edx, edi

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	f7 ea		 imul	 edx
  0001c	2b cf		 sub	 ecx, edi
  0001e	c1 fa 02	 sar	 edx, 2
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  0002b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00030	f7 e9		 imul	 ecx
  00032	c1 fa 02	 sar	 edx, 2
  00035	8b da		 mov	 ebx, edx
  00037	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  0003a	03 da		 add	 ebx, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0003c	81 fb aa aa aa
	0a		 cmp	 ebx, 178956970		; 0aaaaaaaH
  00042	0f 84 f0 00 00
	00		 je	 $LN41@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00048	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00050	2b cf		 sub	 ecx, edi

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00052	43		 inc	 ebx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00053	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00055	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005a	c1 fa 02	 sar	 edx, 2
  0005d	8b ca		 mov	 ecx, edx
  0005f	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00062	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00064	8b d1		 mov	 edx, ecx
  00066	d1 ea		 shr	 edx, 1
  00068	2b c2		 sub	 eax, edx
  0006a	3b c8		 cmp	 ecx, eax
  0006c	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  0006e	8b c3		 mov	 eax, ebx
  00070	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00072	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00075	3b c3		 cmp	 eax, ebx
  00077	0f 42 c3	 cmovb	 eax, ebx
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0007a	3d aa aa aa 0a	 cmp	 eax, 178956970		; 0aaaaaaaH
  0007f	0f 87 b8 00 00
	00		 ja	 $LN42@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00085	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00088	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008b	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0008c	89 45 f8	 mov	 DWORD PTR tv377[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00094	8b f8		 mov	 edi, eax
  00096	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00099	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0009f	8d 0c c7	 lea	 ecx, DWORD PTR [edi+eax*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000a2	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a5	89 4d fc	 mov	 DWORD PTR tv376[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000a8	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000ab	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  000ae	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000b6	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000bb	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000be	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000c0	3b c2		 cmp	 eax, edx
  000c2	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000c4	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000c6	eb 18		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000c8	56		 push	 esi
  000c9	57		 push	 edi
  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@YAPAUSPDTVertex@@QAU1@0PAU1@AAV?$allocator@USPDTVertex@@@0@@Z ; std::_Uninitialized_move<SPDTVertex *,std::allocator<SPDTVertex> >

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d1	8b 45 fc	 mov	 eax, DWORD PTR tv376[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000da	83 c0 18	 add	 eax, 24			; 00000018H

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000dd	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000e0	56		 push	 esi
  000e1	50		 push	 eax
  000e2	52		 push	 edx
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@YAPAUSPDTVertex@@QAU1@0PAU1@AAV?$allocator@USPDTVertex@@@0@@Z ; std::_Uninitialized_move<SPDTVertex *,std::allocator<SPDTVertex> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000e9	8b 06		 mov	 eax, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000eb	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ee	85 c0		 test	 eax, eax
  000f0	74 27		 je	 SHORT $LN35@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000f2	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000f5	2b c8		 sub	 ecx, eax
  000f7	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000fc	f7 e9		 imul	 ecx
  000fe	c1 fa 02	 sar	 edx, 2
  00101	8b c2		 mov	 eax, edx
  00103	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00106	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00108	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0010b	c1 e0 03	 shl	 eax, 3
  0010e	50		 push	 eax
  0010f	ff 36		 push	 DWORD PTR [esi]
  00111	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00116	83 c4 08	 add	 esp, 8
$LN35@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 766  :         return _Newvec + _Whereoff;

  00119	8b 45 fc	 mov	 eax, DWORD PTR tv376[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0011c	8d 0c 5b	 lea	 ecx, DWORD PTR [ebx+ebx*2]
  0011f	8d 0c cf	 lea	 ecx, DWORD PTR [edi+ecx*8]
  00122	89 3e		 mov	 DWORD PTR [esi], edi
  00124	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00127	8b 4d f8	 mov	 ecx, DWORD PTR tv377[ebp]
  0012a	03 cf		 add	 ecx, edi

; 766  :         return _Newvec + _Whereoff;

  0012c	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  0012d	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 766  :         return _Newvec + _Whereoff;

  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx

; 767  :     }

  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 08 00	 ret	 8
$LN41@Emplace_re:

; 738  :             _Xlength();

  00138	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@CAXXZ ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Xlength
$LN42@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN39@Emplace_re:
  00142	cc		 int	 3
??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z ENDP ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Emplace_reallocate<SPDTVertex const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CWeaponTrace::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A ; CWeaponTrace::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCWeaponTrace@@@@UAE@XZ ; CDynamicPool<CWeaponTrace>::~CDynamicPool<CWeaponTrace>
??__F?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CWeaponTrace::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ??__E?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CWeaponTrace::ms_kPool'', COMDAT

; 7    : CDynamicPool<CWeaponTrace> CWeaponTrace::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CWeaponTrace::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CWeaponTrace::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCWeaponTrace@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCWeaponTrace@@@@UAEPAXI@Z PROC	; CDynamicPool<CWeaponTrace>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCWeaponTrace@@@@UAE@XZ ; CDynamicPool<CWeaponTrace>::~CDynamicPool<CWeaponTrace>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCWeaponTrace@@@@UAEPAXI@Z ENDP	; CDynamicPool<CWeaponTrace>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ PROC ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ ENDP ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCWeaponTrace@@@@KAXPAVCWeaponTrace@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCWeaponTrace@@@@KAXPAVCWeaponTrace@@@Z PROC ; CDynamicPool<CWeaponTrace>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCWeaponTrace@@@@KAXPAVCWeaponTrace@@@Z ENDP ; CDynamicPool<CWeaponTrace>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCWeaponTrace@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCWeaponTrace@@@@UAE@XZ PROC		; CDynamicPool<CWeaponTrace>::~CDynamicPool<CWeaponTrace>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCWeaponTrace@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCWeaponTrace@@@@UAE@XZ ENDP		; CDynamicPool<CWeaponTrace>::~CDynamicPool<CWeaponTrace>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCWeaponTrace@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWeaponTrace@@UAEPAXI@Z PROC			; CWeaponTrace::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWeaponTrace@@UAE@XZ	; CWeaponTrace::~CWeaponTrace
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 8c 00 00 00	 push	 140			; 0000008cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCWeaponTrace@@UAEPAXI@Z ENDP			; CWeaponTrace::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@CAXXZ PROC ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@CAXXZ ENDP ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ PROC ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::~vector<SPDTVertex,std::allocator<SPDTVertex> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 3a		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0000c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00011	2b d1		 sub	 edx, ecx
  00013	f7 ea		 imul	 edx
  00015	c1 fa 02	 sar	 edx, 2
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001f	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00022	c1 e0 03	 shl	 eax, 3
  00025	50		 push	 eax
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00035	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  0003c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00043	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00044	c3		 ret	 0
??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ ENDP ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::~vector<SPDTVertex,std::allocator<SPDTVertex> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy, COMDAT
; _this$ = ecx

; 1464 :     void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1009 :         return _Mysize() == 0;

  00003	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00006	85 c9		 test	 ecx, ecx

; 1465 :         _Orphan_all();
; 1466 : 
; 1467 :         _Alpty _Almap(_Getal());
; 1468 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN30@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1143 :         if (--_Mysize() == 0) {

  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00016	8b c8		 mov	 ecx, eax
  00018	85 c0		 test	 eax, eax
  0001a	75 f4		 jne	 SHORT $LL2@Tidy

; 1144 :             _Myoff() = 0;

  0001c	89 46 0c	 mov	 DWORD PTR [esi+12], eax
$LN30@Tidy:
  0001f	57		 push	 edi

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00020	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00023	85 ff		 test	 edi, edi
  00025	74 1a		 je	 SHORT $LN5@Tidy
$LL25@Tidy:

; 1473 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	4f		 dec	 edi
  0002b	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN7@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	6a 10		 push	 16			; 00000010H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
$LN7@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0003d	85 ff		 test	 edi, edi
  0003f	75 e6		 jne	 SHORT $LL25@Tidy
$LN5@Tidy:

; 1474 :                 _Getal().deallocate(_Map()[_Block], _DEQUESIZ);
; 1475 :                 _Destroy_in_place(_Map()[_Block]);
; 1476 :             }
; 1477 :         }
; 1478 : 
; 1479 :         if (_Map() != _Mapptr()) {

  00041	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00044	5f		 pop	 edi
  00045	85 c9		 test	 ecx, ecx
  00047	74 10		 je	 SHORT $LN32@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00049	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004c	c1 e0 02	 shl	 eax, 2
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00056	83 c4 08	 add	 esp, 8
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1485 :     }

  00059	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00060	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00067	5e		 pop	 esi
  00068	c3		 ret	 0
?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen, COMDAT
; _this$ = ecx

; 1418 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?erase@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
__Count$1$ = -36					; size = 4
_this$1$ = -32						; size = 4
__First$$sroa$1326$1$ = -28				; size = 4
__Off$1$ = -24						; size = 4
$T13 = -20						; size = 4
$T14 = -20						; size = 4
__Dest$$sroa$1330$1$ = -16				; size = 4
$T15 = -12						; size = 4
tv2350 = -12						; size = 4
$T7$sroa$1339$1$ = -8					; size = 4
__UFirst$3$sroa$1361$1$ = -4				; size = 4
$T6$sroa$1341$1$ = -4					; size = 4
$T16 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 12
__Last_arg$ = 24					; size = 12
?erase@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@0@Z PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::erase, COMDAT
; _this$ = ecx

; 1278 :         is_nothrow_move_assignable_v<value_type>) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 e0	 mov	 DWORD PTR _this$1$[ebp], esi
  0000d	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1152 :         if (_Parent) {

  0000e	85 f6		 test	 esi, esi
  00010	74 04		 je	 SHORT $LN70@erase

; 1166 :             _Myproxy = _Parent_proxy;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  00014	eb 02		 jmp	 SHORT $LN71@erase
$LN70@erase:

; 1174 :             _Myproxy = nullptr;

  00016	33 c9		 xor	 ecx, ecx
$LN71@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 341  :         return static_cast<difference_type>(this->_Myoff - _Right._Myoff);

  00018	8b 45 14	 mov	 eax, DWORD PTR __First_arg$[ebp+8]
  0001b	8b d8		 mov	 ebx, eax

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  0001d	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]

; 341  :         return static_cast<difference_type>(this->_Myoff - _Right._Myoff);

  00020	2b da		 sub	 ebx, edx

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00022	89 55 fc	 mov	 DWORD PTR __UFirst$3$sroa$1361$1$[ebp], edx

; 1279 :         iterator _First = _Make_iter(_First_arg);
; 1280 :         iterator _Last  = _Make_iter(_Last_arg);
; 1281 : 
; 1282 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1283 :         _STL_VERIFY(_First <= _Last && begin() <= _First && _Last <= end(), "deque erase iterator outside range");
; 1284 :         _Adl_verify_range(_First, _Last);
; 1285 : 
; 1286 :         auto _Off   = static_cast<size_type>(_First - begin());
; 1287 :         auto _Count = static_cast<size_type>(_Last - _First);
; 1288 :         bool _Moved = 0 < _Off && _Off + _Count < _Mysize();
; 1289 : 
; 1290 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1291 :         auto _Off   = static_cast<size_type>(_First - begin());

  00025	8b 55 20	 mov	 edx, DWORD PTR __Last_arg$[ebp+8]
  00028	8b fa		 mov	 edi, edx
  0002a	2b f8		 sub	 edi, eax

; 341  :         return static_cast<difference_type>(this->_Myoff - _Right._Myoff);

  0002c	89 45 f0	 mov	 DWORD PTR __Dest$$sroa$1330$1$[ebp], eax

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  0002f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00032	03 45 fc	 add	 eax, DWORD PTR __UFirst$3$sroa$1361$1$[ebp]
  00035	89 45 f8	 mov	 DWORD PTR $T7$sroa$1339$1$[ebp], eax

; 341  :         return static_cast<difference_type>(this->_Myoff - _Right._Myoff);

  00038	2b c2		 sub	 eax, edx
  0003a	89 5d e8	 mov	 DWORD PTR __Off$1$[ebp], ebx

; 1292 :         auto _Count = static_cast<size_type>(_Last - _First);
; 1293 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1294 : 
; 1295 :         if (_Off < static_cast<size_type>(end() - _Last)) { // closer to front

  0003d	3b d8		 cmp	 ebx, eax
  0003f	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  00042	89 55 e4	 mov	 DWORD PTR __First$$sroa$1326$1$[ebp], edx
  00045	89 7d dc	 mov	 DWORD PTR __Count$1$[ebp], edi
  00048	0f 83 ae 00 00
	00		 jae	 $LN8@erase
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  0004e	85 c9		 test	 ecx, ecx
  00050	74 15		 je	 SHORT $LN128@erase

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00052	8b 11		 mov	 edx, DWORD PTR [ecx]

; 1152 :         if (_Parent) {

  00054	8b 4d fc	 mov	 ecx, DWORD PTR __UFirst$3$sroa$1361$1$[ebp]
  00057	85 d2		 test	 edx, edx
  00059	74 0f		 je	 SHORT $LN127@erase

; 1166 :             _Myproxy = _Parent_proxy;

  0005b	8b 02		 mov	 eax, DWORD PTR [edx]
  0005d	8b d0		 mov	 edx, eax

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0005f	85 c0		 test	 eax, eax
  00061	74 0c		 je	 SHORT $LN184@erase
  00063	8b 00		 mov	 eax, DWORD PTR [eax]
  00065	eb 0a		 jmp	 SHORT $LN498@erase
$LN128@erase:

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __UFirst$3$sroa$1361$1$[ebp]
$LN127@erase:

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0006a	89 4d fc	 mov	 DWORD PTR __UFirst$3$sroa$1361$1$[ebp], ecx
  0006d	33 d2		 xor	 edx, edx
$LN184@erase:
  0006f	33 c0		 xor	 eax, eax
$LN498@erase:
  00071	89 45 ec	 mov	 DWORD PTR $T14[ebp], eax
  00074	85 d2		 test	 edx, edx
  00076	74 04		 je	 SHORT $LN202@erase
  00078	8b 02		 mov	 eax, DWORD PTR [edx]
  0007a	eb 02		 jmp	 SHORT $LN499@erase
$LN202@erase:
  0007c	33 c0		 xor	 eax, eax
$LN499@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4483 :     _Seek_wrapped(_Dest, _Move_backward_unchecked(_UFirst, _ULast, _UDest));

  0007e	89 45 f4	 mov	 DWORD PTR $T15[ebp], eax
  00081	3b 4d f0	 cmp	 ecx, DWORD PTR __Dest$$sroa$1330$1$[ebp]

; 4444 :     while (_First != _Last) {

  00084	74 4b		 je	 SHORT $LN210@erase
  00086	8b 5d e4	 mov	 ebx, DWORD PTR __First$$sroa$1326$1$[ebp]
  00089	8b 75 f0	 mov	 esi, DWORD PTR __Dest$$sroa$1330$1$[ebp]
  0008c	8b 7d fc	 mov	 edi, DWORD PTR __UFirst$3$sroa$1361$1$[ebp]
  0008f	90		 npad	 1
$LL209@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00090	8b 45 ec	 mov	 eax, DWORD PTR $T14[ebp]

; 76   :         --_Myoff;

  00093	4e		 dec	 esi
  00094	4b		 dec	 ebx

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00095	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 171  :         return const_cast<reference>(_Mybase::operator*());

  00098	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0009b	49		 dec	 ecx
  0009c	23 ce		 and	 ecx, esi

; 171  :         return const_cast<reference>(_Mybase::operator*());

  0009e	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000a1	8b 45 f4	 mov	 eax, DWORD PTR $T15[ebp]
  000a4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4445 :         *--_Dest = _STD move(*--_Last);

  000a7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000aa	49		 dec	 ecx
  000ab	23 cb		 and	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4445 :         *--_Dest = _STD move(*--_Last);

  000ad	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  000b0	8b 02		 mov	 eax, DWORD PTR [edx]
  000b2	89 01		 mov	 DWORD PTR [ecx], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  000b4	f3 0f 7e 42 04	 movq	 xmm0, QWORD PTR [edx+4]
  000b9	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
  000be	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000c1	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 115  :         return _Myoff == _Right._Myoff;

  000c4	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4444 :     while (_First != _Last) {

  000c6	75 c8		 jne	 SHORT $LL209@erase
  000c8	8b 75 e0	 mov	 esi, DWORD PTR _this$1$[ebp]
  000cb	8b 7d dc	 mov	 edi, DWORD PTR __Count$1$[ebp]
  000ce	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
$LN210@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1297 :             for (; 0 < _Count; --_Count) {

  000d1	85 ff		 test	 edi, edi
  000d3	0f 84 e9 00 00
	00		 je	 $LN6@erase
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@erase:

; 1103 :         if (--_Mysize() == 0) {

  000e0	83 46 10 ff	 add	 DWORD PTR [esi+16], -1
  000e4	75 09		 jne	 SHORT $LN256@erase

; 1104 :             _Myoff() = 0;

  000e6	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 1105 :         } else {

  000ed	eb 03		 jmp	 SHORT $LN2@erase
$LN256@erase:

; 1106 :             ++_Myoff();

  000ef	ff 46 0c	 inc	 DWORD PTR [esi+12]
$LN2@erase:

; 1297 :             for (; 0 < _Count; --_Count) {

  000f2	83 ef 01	 sub	 edi, 1
  000f5	75 e9		 jne	 SHORT $LL4@erase
  000f7	e9 c6 00 00 00	 jmp	 $LN6@erase
$LN8@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  000fc	33 c0		 xor	 eax, eax
  000fe	89 45 fc	 mov	 DWORD PTR $T6$sroa$1341$1$[ebp], eax

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00101	85 c9		 test	 ecx, ecx
  00103	74 33		 je	 SHORT $LN278@erase

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00105	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1152 :         if (_Parent) {

  00107	85 c0		 test	 eax, eax
  00109	74 0f		 je	 SHORT $LN277@erase

; 1166 :             _Myproxy = _Parent_proxy;

  0010b	8b 00		 mov	 eax, DWORD PTR [eax]
  0010d	89 45 fc	 mov	 DWORD PTR $T6$sroa$1341$1$[ebp], eax
  00110	8b 45 f8	 mov	 eax, DWORD PTR $T7$sroa$1339$1$[ebp]
  00113	89 45 f4	 mov	 DWORD PTR tv2350[ebp], eax
  00116	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  00118	eb 31		 jmp	 SHORT $LN496@erase
$LN277@erase:

; 1174 :             _Myproxy = nullptr;

  0011a	8b 4d f8	 mov	 ecx, DWORD PTR $T7$sroa$1339$1$[ebp]
  0011d	33 c0		 xor	 eax, eax
  0011f	89 45 fc	 mov	 DWORD PTR $T6$sroa$1341$1$[ebp], eax
  00122	89 4d f4	 mov	 DWORD PTR tv2350[ebp], ecx
  00125	89 4d f8	 mov	 DWORD PTR $T7$sroa$1339$1$[ebp], ecx
$LN322@erase:

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00128	33 c9		 xor	 ecx, ecx
$LN500@erase:
  0012a	8b 45 fc	 mov	 eax, DWORD PTR $T6$sroa$1341$1$[ebp]
  0012d	89 4d ec	 mov	 DWORD PTR $T13[ebp], ecx
  00130	85 c0		 test	 eax, eax
  00132	74 21		 je	 SHORT $LN352@erase
  00134	8b 00		 mov	 eax, DWORD PTR [eax]
  00136	eb 1f		 jmp	 SHORT $LN501@erase
$LN278@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00138	8b 45 f8	 mov	 eax, DWORD PTR $T7$sroa$1339$1$[ebp]
  0013b	89 45 f8	 mov	 DWORD PTR $T7$sroa$1339$1$[ebp], eax
  0013e	89 45 f4	 mov	 DWORD PTR tv2350[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00141	85 c9		 test	 ecx, ecx
  00143	74 e3		 je	 SHORT $LN322@erase

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00145	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1152 :         if (_Parent) {

  00147	85 c0		 test	 eax, eax
  00149	74 dd		 je	 SHORT $LN322@erase
$LN496@erase:

; 1166 :             _Myproxy = _Parent_proxy;

  0014b	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 503  :         return {this->_Myoff, this->_Getcont()};

  0014d	85 c9		 test	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0014f	74 d7		 je	 SHORT $LN322@erase
  00151	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00153	eb d5		 jmp	 SHORT $LN500@erase
$LN352@erase:
  00155	33 c0		 xor	 eax, eax
$LN501@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4414 :     _Seek_wrapped(_Dest, _Move_unchecked(_UFirst, _ULast, _UDest));

  00157	89 45 fc	 mov	 DWORD PTR $T16[ebp], eax
  0015a	3b 55 f4	 cmp	 edx, DWORD PTR tv2350[ebp]

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0015d	74 4c		 je	 SHORT $LN360@erase
  0015f	8b 75 f0	 mov	 esi, DWORD PTR __Dest$$sroa$1330$1$[ebp]
  00162	8b da		 mov	 ebx, edx
  00164	8b 7d f8	 mov	 edi, DWORD PTR $T7$sroa$1339$1$[ebp]
$LL361@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00167	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4377 :         *_Dest = _STD move(*_First);

  0016a	8b 45 ec	 mov	 eax, DWORD PTR $T13[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0016d	49		 dec	 ecx
  0016e	23 cb		 and	 ecx, ebx

; 65   :         ++_Myoff;

  00170	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4377 :         *_Dest = _STD move(*_First);

  00171	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00174	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00177	8b 45 fc	 mov	 eax, DWORD PTR $T16[ebp]
  0017a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4377 :         *_Dest = _STD move(*_First);

  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00180	49		 dec	 ecx
  00181	23 ce		 and	 ecx, esi

; 65   :         ++_Myoff;

  00183	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4377 :         *_Dest = _STD move(*_First);

  00184	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00187	8b 02		 mov	 eax, DWORD PTR [edx]
  00189	89 01		 mov	 DWORD PTR [ecx], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  0018b	f3 0f 7e 42 04	 movq	 xmm0, QWORD PTR [edx+4]
  00190	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
  00195	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00198	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0019b	8b 4d ec	 mov	 ecx, DWORD PTR $T13[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 115  :         return _Myoff == _Right._Myoff;

  0019e	3b df		 cmp	 ebx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  001a0	75 c5		 jne	 SHORT $LL361@erase
  001a2	8b 75 e0	 mov	 esi, DWORD PTR _this$1$[ebp]
  001a5	8b 7d dc	 mov	 edi, DWORD PTR __Count$1$[ebp]
  001a8	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
$LN360@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1302 :             for (; 0 < _Count; --_Count) {

  001ab	85 ff		 test	 edi, edi
  001ad	74 13		 je	 SHORT $LN6@erase
  001af	90		 npad	 1
$LL7@erase:

; 1143 :         if (--_Mysize() == 0) {

  001b0	83 46 10 ff	 add	 DWORD PTR [esi+16], -1
  001b4	75 07		 jne	 SHORT $LN5@erase

; 1144 :             _Myoff() = 0;

  001b6	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN5@erase:

; 1302 :             for (; 0 < _Count; --_Count) {

  001bd	83 ef 01	 sub	 edi, 1
  001c0	75 ee		 jne	 SHORT $LL7@erase
$LN6@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  001c2	8b 16		 mov	 edx, DWORD PTR [esi]

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  001c4	33 c0		 xor	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  001c6	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  001c9	85 d2		 test	 edx, edx
  001cb	74 08		 je	 SHORT $LN447@erase

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  001cd	8b 02		 mov	 eax, DWORD PTR [edx]

; 1152 :         if (_Parent) {

  001cf	85 c0		 test	 eax, eax
  001d1	74 2e		 je	 SHORT $LN446@erase

; 1166 :             _Myproxy = _Parent_proxy;

  001d3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN447@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 321  :         _Myoff += _Off;

  001d5	03 4d e8	 add	 ecx, DWORD PTR __Off$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  001d8	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  001de	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  001e5	85 c0		 test	 eax, eax
  001e7	74 3a		 je	 SHORT $LN497@erase

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  001e9	8b 00		 mov	 eax, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  001eb	85 c0		 test	 eax, eax
  001ed	74 30		 je	 SHORT $LN467@erase

; 1166 :             _Myproxy = _Parent_proxy;

  001ef	8b 00		 mov	 eax, DWORD PTR [eax]

; 1131 :             } else { // becoming invalid, disown current parent

  001f1	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1314 :     }

  001f3	8b c3		 mov	 eax, ebx
  001f5	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	5b		 pop	 ebx
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c2 1c 00	 ret	 28			; 0000001cH
$LN446@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  00201	03 4d e8	 add	 ecx, DWORD PTR __Off$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1314 :     }

  00204	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  00206	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  0020c	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1314 :     }

  00213	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  00216	5f		 pop	 edi
  00217	5e		 pop	 esi
  00218	5b		 pop	 ebx
  00219	8b e5		 mov	 esp, ebp
  0021b	5d		 pop	 ebp
  0021c	c2 1c 00	 ret	 28			; 0000001cH
$LN467@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  0021f	33 c0		 xor	 eax, eax

; 1131 :             } else { // becoming invalid, disown current parent

  00221	89 03		 mov	 DWORD PTR [ebx], eax
$LN497@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1314 :     }

  00223	5f		 pop	 edi
  00224	5e		 pop	 esi
  00225	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  00228	8b c3		 mov	 eax, ebx
  0022a	5b		 pop	 ebx
  0022b	8b e5		 mov	 esp, ebp
  0022d	5d		 pop	 ebp
  0022e	c2 1c 00	 ret	 28			; 0000001cH
?erase@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@0@Z ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ??1?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
__Proxy_allocator$ = -1					; size = 1
??1?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE@XZ PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::~deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >, COMDAT
; _this$ = ecx

; 868  :     ~deque() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 869  :         _Tidy();

  00007	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  0000e	50		 push	 eax
  0000f	8d 45 ff	 lea	 eax, DWORD PTR __Proxy_allocator$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0001e	83 c4 08	 add	 esp, 8
  00021	5e		 pop	 esi

; 872  :     }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??1?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE@XZ ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::~deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z
_TEXT	SEGMENT
tv592 = -8						; size = 4
__Newmap$1$ = -4					; size = 4
__Val$ = 8						; size = 4
?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front, COMDAT
; _this$ = ecx

; 787  :     void push_front(_Ty&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 789  :         _PUSH_FRONT_BEGIN;

  0000b	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0000e	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00011	40		 inc	 eax
  00012	3b d0		 cmp	 edx, eax
  00014	0f 87 de 00 00
	00		 ja	 $LN45@push_front

; 1429 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  0001a	85 d2		 test	 edx, edx
  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	0f 45 c2	 cmovne	 eax, edx
$LL8@push_front:

; 1430 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _DEQUEMAPSIZ) {

  00024	8b f0		 mov	 esi, eax
  00026	2b f2		 sub	 esi, edx
  00028	83 fe 01	 cmp	 esi, 1
  0002b	72 05		 jb	 SHORT $LN10@push_front
  0002d	83 f8 08	 cmp	 eax, 8
  00030	73 13		 jae	 SHORT $LN9@push_front
$LN10@push_front:

; 1431 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1432 :             if (max_size() / _DEQUESIZ - _Newsize < _Newsize) {

  00032	b9 ff ff ff 0f	 mov	 ecx, 268435455		; 0fffffffH
  00037	2b c8		 sub	 ecx, eax
  00039	3b c8		 cmp	 ecx, eax
  0003b	0f 82 04 01 00
	00		 jb	 $LN41@push_front

; 1434 :             }
; 1435 : 
; 1436 :             _Newsize *= 2;

  00041	03 c0		 add	 eax, eax

; 1437 :         }

  00043	eb df		 jmp	 SHORT $LL8@push_front
$LN9@push_front:

; 1438 :         _Count = _Newsize - _Mapsize();
; 1439 : 
; 1440 :         size_type _Myboff = _Myoff() / _DEQUESIZ;

  00045	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00048	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0004d	0f 87 f9 00 00
	00		 ja	 $LN49@push_front

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00053	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  0005c	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0005f	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  00066	89 4d f8	 mov	 DWORD PTR tv592[ebp], ecx
  00069	03 c8		 add	 ecx, eax
  0006b	51		 push	 ecx
  0006c	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006f	89 45 fc	 mov	 DWORD PTR __Newmap$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00072	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]
  00075	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]
  00078	51		 push	 ecx
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
  0007f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00082	83 c4 10	 add	 esp, 16			; 00000010H

; 1445 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  00085	50		 push	 eax
  00086	3b de		 cmp	 ebx, esi
  00088	77 1d		 ja	 SHORT $LN12@push_front

; 1446 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  0008a	8d 04 99	 lea	 eax, DWORD PTR [ecx+ebx*4]
  0008d	50		 push	 eax
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>

; 1447 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  00094	8b ce		 mov	 ecx, esi
  00096	2b cb		 sub	 ecx, ebx
  00098	51		 push	 ecx
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>

; 1448 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

  0009f	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000a2	83 c4 14	 add	 esp, 20			; 00000014H

; 1449 :         } else { // increment not greater than offset of initial block

  000a5	eb 24		 jmp	 SHORT $LN13@push_front
$LN12@push_front:

; 1450 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000a7	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000aa	50		 push	 eax
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>

; 1451 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000b1	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000b4	ff 75 fc	 push	 DWORD PTR __Newmap$1$[ebp]
  000b7	8b 45 f8	 mov	 eax, DWORD PTR tv592[ebp]
  000ba	03 c1		 add	 eax, ecx
  000bc	50		 push	 eax
  000bd	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
  000c6	83 c4 18	 add	 esp, 24			; 00000018H

; 1452 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000c9	8b de		 mov	 ebx, esi
$LN13@push_front:

; 1453 :         }
; 1454 : 
; 1455 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());
; 1456 :         if (_Map() != _Mapptr()) {

  000cb	53		 push	 ebx
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>
  000d2	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000d5	83 c4 08	 add	 esp, 8
  000d8	85 c9		 test	 ecx, ecx
  000da	74 10		 je	 SHORT $LN14@push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000dc	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000df	c1 e0 02	 shl	 eax, 2
  000e2	50		 push	 eax
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e9	83 c4 08	 add	 esp, 8
$LN14@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1460 :         _Map() = _Newmap; // point at new

  000ec	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000ef	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1461 :         _Mapsize() += _Count;

  000f2	01 77 08	 add	 DWORD PTR [edi+8], esi
  000f5	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
$LN45@push_front:

; 789  :         _PUSH_FRONT_BEGIN;

  000f8	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  000fb	21 47 0c	 and	 DWORD PTR [edi+12], eax
  000fe	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00101	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00104	0f 44 f2	 cmove	 esi, edx
  00107	4e		 dec	 esi

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00108	23 c6		 and	 eax, esi

; 789  :         _PUSH_FRONT_BEGIN;

  0010a	8d 1c 85 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*4]
  00111	83 3c 0b 00	 cmp	 DWORD PTR [ebx+ecx], 0
  00115	75 13		 jne	 SHORT $LN3@push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00117	6a 10		 push	 16			; 00000010H
  00119	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 789  :         _PUSH_FRONT_BEGIN;

  0011e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00121	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 789  :         _PUSH_FRONT_BEGIN;

  00124	89 04 0b	 mov	 DWORD PTR [ebx+ecx], eax
  00127	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN3@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0012a	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0012d	8b 0c 0b	 mov	 ecx, DWORD PTR [ebx+ecx]
  00130	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00133	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 791  :         _PUSH_FRONT_END;

  00136	ff 47 10	 inc	 DWORD PTR [edi+16]
  00139	89 77 0c	 mov	 DWORD PTR [edi+12], esi
  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi
  0013e	5b		 pop	 ebx

; 792  :     }

  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c2 04 00	 ret	 4
$LN41@push_front:

; 1433 :                 _Xlen(); // result too long

  00145	8b cf		 mov	 ecx, edi
  00147	e8 00 00 00 00	 call	 ?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen
$LN49@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0014c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN47@push_front:
  00151	cc		 int	 3
?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?BuildVertex@CWeaponTrace@@IAE_NXZ
_TEXT	SEGMENT
$T13 = -6252						; size = 12
$T14 = -6240						; size = 12
__real@3fb99999a0000000$1$ = -6228			; size = 8
__real@4004000000000000$1$ = -6220			; size = 8
_v$15 = -6212						; size = 24
__real@0000000000000000$1$ = -6188			; size = 8
tv7129 = -6180						; size = 4
tv7390 = -6176						; size = 4
_Output$1$ = -6172					; size = 4
__real@3ff0000000000000$1$ = -6168			; size = 8
__Tmp$16 = -6168					; size = 8
__Tmp$17 = -6168					; size = 8
_m_ShortVertexVector$ = -6160				; size = 12
_a$18 = -6148						; size = 12
_b$19 = -6136						; size = 12
_timebase$1$ = -6124					; size = 4
tv7413 = -6120						; size = 4
tv7229 = -6116						; size = 4
tv7227 = -6112						; size = 4
__Tmp$20 = -6108					; size = 8
__Tmp$21 = -6108					; size = 8
__Tmp$22 = -6108					; size = 8
_c$1$sroa$2719$1$ = -6104				; size = 4
_m_LongVertexVector$ = -6100				; size = 12
__Tmp$23 = -6088					; size = 8
__Tmp$24 = -6088					; size = 8
__Tmp$25 = -6088					; size = 8
_dt$1$ = -6084						; size = 4
tv7416 = -6084						; size = 4
_cc$1$ = -6080						; size = 4
tv7362 = -6080						; size = 4
_length$1$ = -6076					; size = 4
tv7231 = -6072						; size = 4
tv7170 = -6072						; size = 4
_n$1$ = -6068						; size = 4
_loop$1$ = -6064					; size = 4
$T26 = -6060						; size = 4
_sp$1$ = -6056						; size = 4
_c$1$sroa$2718$1$ = -6052				; size = 4
tv7375 = -6052						; size = 4
_d$2$sroa$2715$1$ = -6048				; size = 4
_d$2$sroa$2716$1$ = -6044				; size = 4
_c$1$sroa$2835$1$ = -6040				; size = 4
_d$2$sroa$2717$1$ = -6036				; size = 4
$T27 = -6036						; size = 4
__Tmp$1$ = -6032					; size = 4
_timenext$1$ = -6028					; size = 4
tv7376 = -6028						; size = 4
_t$1$ = -6024						; size = 4
_i$1$ = -6024						; size = 4
tv7172 = -6024						; size = 4
_this$GSCopy$1$ = -6020					; size = 4
_stk$ = -6016						; size = 1200
_h$ = -4816						; size = 1200
_r$ = -3616						; size = 3600
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?BuildVertex@CWeaponTrace@@IAE_NXZ PROC			; CWeaponTrace::BuildVertex, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?BuildVertex@CWeaponTrace@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 60 18 00 00	 mov	 eax, 6240		; 00001860H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	50		 push	 eax
  00028	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00031	8b c1		 mov	 eax, ecx
  00033	89 85 7c e8 ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], eax

; 123  : 	const int max_size = 300;
; 124  : 	// calculate speed
; 125  : 	float h[max_size];
; 126  : 	float stk[max_size];
; 127  : 	int sp=0;
; 128  : 	D3DXVECTOR3 r[max_size];
; 129  : 
; 130  : 	if (m_LongTimePointList.size()<=1)

  00039	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
  0003c	33 f6		 xor	 esi, esi
  0003e	89 b5 58 e8 ff
	ff		 mov	 DWORD PTR _sp$1$[ebp], esi
  00044	83 ff 01	 cmp	 edi, 1
  00047	77 07		 ja	 SHORT $LN25@BuildVerte

; 131  : 		return false;

  00049	32 c0		 xor	 al, al
  0004b	e9 fe 0d 00 00	 jmp	 $LN1@BuildVerte
$LN25@BuildVerte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00050	89 b5 f0 e7 ff
	ff		 mov	 DWORD PTR _m_ShortVertexVector$[ebp], esi
  00056	89 b5 f4 e7 ff
	ff		 mov	 DWORD PTR _m_ShortVertexVector$[ebp+4], esi
  0005c	89 b5 f8 e7 ff
	ff		 mov	 DWORD PTR _m_ShortVertexVector$[ebp+8], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 144  : 	std::vector<TPDTVertex> m_ShortVertexVector, m_LongVertexVector;

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00069	c7 85 2c e8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _m_LongVertexVector$[ebp], 0
  00073	c7 85 30 e8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _m_LongVertexVector$[ebp+4], 0
  0007d	c7 85 34 e8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _m_LongVertexVector$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 921  :         return _Unchecked_iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00087	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 146  : 	float length = min(m_fLifeTime, m_LongTimePointList.back().first);

  0008a	8b 85 7c e8 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 921  :         return _Unchecked_iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00090	03 d7		 add	 edx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 144  : 	std::vector<TPDTVertex> m_ShortVertexVector, m_LongVertexVector;

  00092	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 216  :         _Deque_unchecked_iterator _Tmp = *this;

  00096	89 95 ec e7 ff
	ff		 mov	 DWORD PTR __Tmp$17[ebp+4], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 146  : 	float length = min(m_fLifeTime, m_LongTimePointList.back().first);

  0009c	f3 0f 10 50 3c	 movss	 xmm2, DWORD PTR [eax+60]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000a1	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]

; 97   :         _Myoff -= _Off;

  000a4	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000a7	49		 dec	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 146  : 	float length = min(m_fLifeTime, m_LongTimePointList.back().first);

  000a8	f3 0f 11 95 44
	e8 ff ff	 movss	 DWORD PTR _length$1$[ebp], xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000b0	23 c8		 and	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 146  : 	float length = min(m_fLifeTime, m_LongTimePointList.back().first);

  000b2	8b 85 7c e8 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000b8	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  000bb	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  000be	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000c2	0f 2f c2	 comiss	 xmm0, xmm2
  000c5	77 2d		 ja	 SHORT $LN32@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000c7	8b 85 7c e8 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]

; 216  :         _Deque_unchecked_iterator _Tmp = *this;

  000cd	89 95 ec e7 ff
	ff		 mov	 DWORD PTR __Tmp$16[ebp+4], edx

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000d3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]

; 97   :         _Myoff -= _Off;

  000d6	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000d9	49		 dec	 ecx
  000da	23 c8		 and	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 146  : 	float length = min(m_fLifeTime, m_LongTimePointList.back().first);

  000dc	8b 85 7c e8 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000e2	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  000e5	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  000e8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000ec	f3 0f 11 85 44
	e8 ff ff	 movss	 DWORD PTR _length$1$[ebp], xmm0
$LN32@BuildVerte:

; 181  : 		r[n]-=r[n-1];

  000f4	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4004000000000000
  000fc	8d 57 ff	 lea	 edx, DWORD PTR [edi-1]
  000ff	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00107	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  0010a	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@40800000
  00112	33 ff		 xor	 edi, edi
  00114	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  0011c	0f 57 e4	 xorps	 xmm4, xmm4
  0011f	f2 0f 11 85 b4
	e7 ff ff	 movsd	 QWORD PTR __real@4004000000000000$1$[ebp], xmm0
  00127	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb99999a0000000
  0012f	f2 0f 11 85 ac
	e7 ff ff	 movsd	 QWORD PTR __real@3fb99999a0000000$1$[ebp], xmm0
  00137	0f 57 c0	 xorps	 xmm0, xmm0
  0013a	f2 0f 11 85 d4
	e7 ff ff	 movsd	 QWORD PTR __real@0000000000000000$1$[ebp], xmm0
  00142	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0014a	89 95 4c e8 ff
	ff		 mov	 DWORD PTR _n$1$[ebp], edx
  00150	89 bd 50 e8 ff
	ff		 mov	 DWORD PTR _loop$1$[ebp], edi
  00156	89 85 e0 e7 ff
	ff		 mov	 DWORD PTR tv7390[ebp], eax
  0015c	c7 85 dc e7 ff
	ff 10 00 00 00	 mov	 DWORD PTR tv7129[ebp], 16 ; 00000010H
  00166	f3 0f 11 a5 54
	e8 ff ff	 movss	 DWORD PTR $T26[ebp], xmm4
  0016e	f2 0f 11 85 e8
	e7 ff ff	 movsd	 QWORD PTR __real@3ff0000000000000$1$[ebp], xmm0
  00176	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL4@BuildVerte:

; 154  : 	{
; 155  : 		TTimePointList & Input = (loop) ? m_LongTimePointList : m_ShortTimePointList;

  00180	85 ff		 test	 edi, edi
  00182	c7 85 78 e8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  0018c	b8 08 00 00 00	 mov	 eax, 8

; 156  : 		std::vector<TPDTVertex> & Output = (loop) ? m_LongVertexVector : m_ShortVertexVector;

  00191	8d b5 f0 e7 ff
	ff		 lea	 esi, DWORD PTR _m_ShortVertexVector$[ebp]
  00197	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0019c	0f 44 c8	 cmove	 ecx, eax
  0019f	8d 85 2c e8 ff
	ff		 lea	 eax, DWORD PTR _m_LongVertexVector$[ebp]
  001a5	03 8d 7c e8 ff
	ff		 add	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  001ab	85 ff		 test	 edi, edi
  001ad	89 8d 70 e8 ff
	ff		 mov	 DWORD PTR __Tmp$1$[ebp], ecx
  001b3	0f 44 c6	 cmove	 eax, esi

; 160  : 		for(i=0;i<n;++i)

  001b6	8b b5 58 e8 ff
	ff		 mov	 esi, DWORD PTR _sp$1$[ebp]
  001bc	89 85 e4 e7 ff
	ff		 mov	 DWORD PTR _Output$1$[ebp], eax
  001c2	85 d2		 test	 edx, edx
  001c4	0f 8e 55 01 00
	00		 jle	 $LN687@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  001ca	8b b5 7c e8 ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  001d0	85 ff		 test	 edi, edi
  001d2	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@40400000
  001da	ba 14 00 00 00	 mov	 edx, 20			; 00000014H
  001df	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  001e4	0f 44 c2	 cmove	 eax, edx
  001e7	8d 95 e0 f1 ff
	ff		 lea	 edx, DWORD PTR _r$[ebp]
  001ed	89 95 5c e8 ff
	ff		 mov	 DWORD PTR tv7375[ebp], edx
  001f3	8b 34 30	 mov	 esi, DWORD PTR [eax+esi]
  001f6	8b c6		 mov	 eax, esi
  001f8	89 b5 6c e8 ff
	ff		 mov	 DWORD PTR $T27[ebp], esi
  001fe	89 85 74 e8 ff
	ff		 mov	 DWORD PTR tv7376[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 160  : 		for(i=0;i<n;++i)

  00204	eb 10		 jmp	 SHORT $LN7@BuildVerte
  00206	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL691@BuildVerte:
  00210	8b 8d 70 e8 ff
	ff		 mov	 ecx, DWORD PTR __Tmp$1$[ebp]
$LN7@BuildVerte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00216	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]

; 87   :         _Myoff += _Off;

  00219	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 162  : 			h[i] = Input[i+1].first - Input[i].first;

  0021c	8b 85 70 e8 ff
	ff		 mov	 eax, DWORD PTR __Tmp$1$[ebp]

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  00222	0f 28 d7	 movaps	 xmm2, xmm7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 206  :         _Deque_unchecked_iterator _Tmp = *this;

  00225	89 b5 3c e8 ff
	ff		 mov	 DWORD PTR __Tmp$25[ebp+4], esi

; 57   :         return _Mycont->_Map[_Block][_Off];

  0022b	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0022e	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 162  : 			h[i] = Input[i+1].first - Input[i].first;

  00231	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00234	23 cf		 and	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 162  : 			h[i] = Input[i+1].first - Input[i].first;

  00236	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00239	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  0023c	23 85 74 e8 ff
	ff		 and	 eax, DWORD PTR tv7376[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 162  : 			h[i] = Input[i+1].first - Input[i].first;

  00242	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00246	8b 04 86	 mov	 eax, DWORD PTR [esi+eax*4]
  00249	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0024d	8b 85 78 e8 ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  00253	f3 0f 11 84 85
	30 ed ff ff	 movss	 DWORD PTR _h$[ebp+eax*4], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 206  :         _Deque_unchecked_iterator _Tmp = *this;

  0025c	8b 85 6c e8 ff
	ff		 mov	 eax, DWORD PTR $T27[ebp]
  00262	89 85 3c e8 ff
	ff		 mov	 DWORD PTR __Tmp$24[ebp+4], eax

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00268	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  0026b	23 85 74 e8 ff
	ff		 and	 eax, DWORD PTR tv7376[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  00271	f3 0f 5e d0	 divss	 xmm2, xmm0
  00275	8b 14 86	 mov	 edx, DWORD PTR [esi+eax*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00278	8b 85 70 e8 ff
	ff		 mov	 eax, DWORD PTR __Tmp$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 160  : 		for(i=0;i<n;++i)

  0027e	8b b5 78 e8 ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
  00284	46		 inc	 esi
  00285	89 b5 78 e8 ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0028b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  0028e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00291	49		 dec	 ecx
  00292	23 cf		 and	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  00294	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00297	8b 8d 5c e8 ff
	ff		 mov	 ecx, DWORD PTR tv7375[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0029d	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  002a2	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  002a7	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  002ac	f3 0f 5c 5a 04	 subss	 xmm3, DWORD PTR [edx+4]
  002b1	f3 0f 5c 4a 08	 subss	 xmm1, DWORD PTR [edx+8]
  002b6	f3 0f 5c 42 0c	 subss	 xmm0, DWORD PTR [edx+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 160  : 		for(i=0;i<n;++i)

  002bb	8b 95 4c e8 ff
	ff		 mov	 edx, DWORD PTR _n$1$[ebp]

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  002c1	f3 0f 59 da	 mulss	 xmm3, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  002c5	f3 0f 59 ca	 mulss	 xmm1, xmm2

; 181  :     y = fy;

  002c9	f3 0f 59 c2	 mulss	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  002cd	0f 14 d9	 unpcklps xmm3, xmm1
  002d0	66 0f d6 19	 movq	 QWORD PTR [ecx], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002d4	f3 0f 11 85 a8
	e7 ff ff	 movss	 DWORD PTR $T14[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 163  : 			r[i] = (Input[i+1].second - Input[i].second)*(3/h[i]);

  002dc	8b 85 a8 e7 ff
	ff		 mov	 eax, DWORD PTR $T14[ebp+8]
  002e2	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  002e5	83 c1 0c	 add	 ecx, 12			; 0000000cH
  002e8	8b 85 74 e8 ff
	ff		 mov	 eax, DWORD PTR tv7376[ebp]
  002ee	40		 inc	 eax
  002ef	89 8d 5c e8 ff
	ff		 mov	 DWORD PTR tv7375[ebp], ecx
  002f5	3b f2		 cmp	 esi, edx
  002f7	89 85 74 e8 ff
	ff		 mov	 DWORD PTR tv7376[ebp], eax
  002fd	8b b5 6c e8 ff
	ff		 mov	 esi, DWORD PTR $T27[ebp]
  00303	0f 8c 07 ff ff
	ff		 jl	 $LL691@BuildVerte
  00309	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  00311	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00319	8b b5 58 e8 ff
	ff		 mov	 esi, DWORD PTR _sp$1$[ebp]
$LN687@BuildVerte:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0031f	c7 85 9c e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T13[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 165  : 		r[n] = D3DXVECTOR3(0.0f,0.0f,0.0f);

  00329	0f 28 c4	 movaps	 xmm0, xmm4
  0032c	8b 85 9c e7 ff
	ff		 mov	 eax, DWORD PTR $T13[ebp+8]
  00332	8d 3c 52	 lea	 edi, DWORD PTR [edx+edx*2]
  00335	0f 14 c4	 unpcklps xmm0, xmm4

; 166  : 		for(i=n;i>0;i--)

  00338	8b ca		 mov	 ecx, edx
  0033a	66 0f d6 84 bd
	e0 f1 ff ff	 movq	 QWORD PTR _r$[ebp+edi*4], xmm0
  00343	89 84 bd e8 f1
	ff ff		 mov	 DWORD PTR _r$[ebp+edi*4+8], eax
  0034a	85 d2		 test	 edx, edx
  0034c	7e 3b		 jle	 SHORT $LN9@BuildVerte
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0034e	8d 84 bd dc f1
	ff ff		 lea	 eax, DWORD PTR _r$[ebp+edi*4-4]
$LL10@BuildVerte:

; 204  :     x += v.x;

  00355	f3 0f 10 40 f8	 movss	 xmm0, DWORD PTR [eax-8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 166  : 		for(i=n;i>0;i--)

  0035a	49		 dec	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 204  :     x += v.x;

  0035b	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  00360	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 205  :     y += v.y;

  00365	f3 0f 10 40 fc	 movss	 xmm0, DWORD PTR [eax-4]
  0036a	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0036f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 206  :     z += v.z;

  00374	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00379	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0037d	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 166  : 		for(i=n;i>0;i--)

  00382	83 e8 0c	 sub	 eax, 12			; 0000000cH
  00385	85 c9		 test	 ecx, ecx
  00387	7f cc		 jg	 SHORT $LL10@BuildVerte
$LN9@BuildVerte:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00389	f3 0f 10 85 e0
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 171  : 		float rate = 0.5f;

  00391	0f 28 f1	 movaps	 xmm6, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00394	f3 0f 59 c1	 mulss	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 173  : 		stk[sp++] = rate;

  00398	c7 84 b5 80 e8
	ff ff 00 00 00
	3f		 mov	 DWORD PTR _stk$[ebp+esi*4], 1056964608 ; 3f000000H
  003a3	46		 inc	 esi
  003a4	89 b5 58 e8 ff
	ff		 mov	 DWORD PTR _sp$1$[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  003aa	f3 0f 11 85 e0
	f1 ff ff	 movss	 DWORD PTR _r$[ebp], xmm0

; 223  :     y *= f;

  003b2	f3 0f 10 85 e4
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+4]
  003ba	f3 0f 59 c1	 mulss	 xmm0, xmm1
  003be	f3 0f 11 85 e4
	f1 ff ff	 movss	 DWORD PTR _r$[ebp+4], xmm0

; 224  :     z *= f;

  003c6	f3 0f 10 85 e8
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+8]
  003ce	f3 0f 59 c1	 mulss	 xmm0, xmm1
  003d2	f3 0f 11 85 e8
	f1 ff ff	 movss	 DWORD PTR _r$[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 174  : 		for(i=1;i<n;i++)

  003da	83 fa 01	 cmp	 edx, 1
  003dd	7e 6e		 jle	 SHORT $LN12@BuildVerte

; 171  : 		float rate = 0.5f;

  003df	8d 85 f0 f1 ff
	ff		 lea	 eax, DWORD PTR _r$[ebp+16]
  003e5	4a		 dec	 edx
  003e6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL13@BuildVerte:

; 177  : 			rate = 1/(4-rate);

  003f0	0f 28 c5	 movaps	 xmm0, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  003f3	f3 0f 10 58 fc	 movss	 xmm3, DWORD PTR [eax-4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 177  : 			rate = 1/(4-rate);

  003f8	f3 0f 5c c6	 subss	 xmm0, xmm6
  003fc	0f 28 f7	 movaps	 xmm6, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  003ff	f3 0f 5c 58 f0	 subss	 xmm3, DWORD PTR [eax-16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 177  : 			rate = 1/(4-rate);

  00404	f3 0f 5e f0	 divss	 xmm6, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 214  :     y -= v.y;

  00408	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]

; 222  :     x *= f;

  0040c	f3 0f 59 de	 mulss	 xmm3, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 179  : 			stk[sp++]=rate;

  00410	f3 0f 11 b4 b5
	80 e8 ff ff	 movss	 DWORD PTR _stk$[ebp+esi*4], xmm6
  00419	46		 inc	 esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  0041a	f3 0f 11 58 fc	 movss	 DWORD PTR [eax-4], xmm3

; 214  :     y -= v.y;

  0041f	f3 0f 5c 40 f4	 subss	 xmm0, DWORD PTR [eax-12]

; 223  :     y *= f;

  00424	f3 0f 59 c6	 mulss	 xmm0, xmm6
  00428	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 215  :     z -= v.z;

  0042c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00431	f3 0f 5c 40 f8	 subss	 xmm0, DWORD PTR [eax-8]

; 224  :     z *= f;

  00436	f3 0f 59 c6	 mulss	 xmm0, xmm6
  0043a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 174  : 		for(i=1;i<n;i++)

  0043f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00442	83 ea 01	 sub	 edx, 1
  00445	75 a9		 jne	 SHORT $LL13@BuildVerte
  00447	89 b5 58 e8 ff
	ff		 mov	 DWORD PTR _sp$1$[ebp], esi
$LN12@BuildVerte:

; 182  : 		rate = 1/(2-rate);

  0044d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00455	0f 28 cf	 movaps	 xmm1, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  00458	f3 0f 10 ac bd
	e0 f1 ff ff	 movss	 xmm5, DWORD PTR _r$[ebp+edi*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 182  : 		rate = 1/(2-rate);

  00461	f3 0f 5c c6	 subss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  00465	f3 0f 5c ac bd
	d4 f1 ff ff	 subss	 xmm5, DWORD PTR _r$[ebp+edi*4-12]

; 214  :     y -= v.y;

  0046e	f3 0f 10 a4 bd
	e4 f1 ff ff	 movss	 xmm4, DWORD PTR _r$[ebp+edi*4+4]

; 215  :     z -= v.z;

  00477	f3 0f 10 9c bd
	e8 f1 ff ff	 movss	 xmm3, DWORD PTR _r$[ebp+edi*4+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 181  : 		r[n]-=r[n-1];

  00480	8b 8d e0 e7 ff
	ff		 mov	 ecx, DWORD PTR tv7390[ebp]

; 182  : 		rate = 1/(2-rate);

  00486	f3 0f 5e c8	 divss	 xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  0048a	f3 0f 11 ac bd
	e0 f1 ff ff	 movss	 DWORD PTR _r$[ebp+edi*4], xmm5

; 222  :     x *= f;

  00493	f3 0f 59 e9	 mulss	 xmm5, xmm1

; 214  :     y -= v.y;

  00497	f3 0f 5c a4 bd
	d8 f1 ff ff	 subss	 xmm4, DWORD PTR _r$[ebp+edi*4-8]

; 222  :     x *= f;

  004a0	f3 0f 11 ac bd
	e0 f1 ff ff	 movss	 DWORD PTR _r$[ebp+edi*4], xmm5

; 223  :     y *= f;

  004a9	f3 0f 59 e1	 mulss	 xmm4, xmm1
  004ad	f3 0f 11 a4 bd
	e4 f1 ff ff	 movss	 DWORD PTR _r$[ebp+edi*4+4], xmm4

; 215  :     z -= v.z;

  004b6	f3 0f 5c 9c bd
	dc f1 ff ff	 subss	 xmm3, DWORD PTR _r$[ebp+edi*4-4]

; 224  :     z *= f;

  004bf	f3 0f 59 d9	 mulss	 xmm3, xmm1
  004c3	f3 0f 11 9c bd
	e8 f1 ff ff	 movss	 DWORD PTR _r$[ebp+edi*4+8], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 185  : 		for(i=n-1;i>=0;i--)

  004cc	85 c9		 test	 ecx, ecx
  004ce	78 66		 js	 SHORT $LN15@BuildVerte

; 181  : 		r[n]-=r[n-1];

  004d0	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  004d3	8d 84 85 e4 f1
	ff ff		 lea	 eax, DWORD PTR _r$[ebp+eax*4+4]
  004da	66 0f 1f 44 00
	00		 npad	 6
$LL16@BuildVerte:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  004e0	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 187  : 			r[i] -= stk[--sp] * r[i+1];

  004e5	4e		 dec	 esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  004e6	f3 0f 10 40 fc	 movss	 xmm0, DWORD PTR [eax-4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 187  : 			r[i] -= stk[--sp] * r[i+1];

  004eb	f3 0f 10 a4 b5
	80 e8 ff ff	 movss	 xmm4, DWORD PTR _stk$[ebp+esi*4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  004f4	f3 0f 59 cc	 mulss	 xmm1, xmm4

; 213  :     x -= v.x;

  004f8	f3 0f 5c c1	 subss	 xmm0, xmm1

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  004fc	0f 28 cc	 movaps	 xmm1, xmm4

; 213  :     x -= v.x;

  004ff	f3 0f 11 40 fc	 movss	 DWORD PTR [eax-4], xmm0

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00504	f3 0f 59 48 0c	 mulss	 xmm1, DWORD PTR [eax+12]

; 214  :     y -= v.y;

  00509	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0050d	f3 0f 5c c1	 subss	 xmm0, xmm1
  00511	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00515	f3 0f 59 60 10	 mulss	 xmm4, DWORD PTR [eax+16]

; 215  :     z -= v.z;

  0051a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0051f	f3 0f 5c c4	 subss	 xmm0, xmm4
  00523	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 185  : 		for(i=n-1;i>=0;i--)

  00528	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0052b	83 e9 01	 sub	 ecx, 1
  0052e	79 b0		 jns	 SHORT $LL16@BuildVerte
  00530	89 b5 58 e8 ff
	ff		 mov	 DWORD PTR _sp$1$[ebp], esi
$LN15@BuildVerte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00536	8b b5 50 e8 ff
	ff		 mov	 esi, DWORD PTR _loop$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 190  : 		int base = 0;

  0053c	33 ff		 xor	 edi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  0053e	85 f6		 test	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 193  : 		float timebase=0,timenext=h[base], dt=m_fSamplingTime;

  00540	f3 0f 10 9d 30
	ed ff ff	 movss	 xmm3, DWORD PTR _h$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00548	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 196  : 		c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  0054d	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00555	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 193  : 		float timebase=0,timenext=h[base], dt=m_fSamplingTime;

  0055a	f3 0f 11 9d 74
	e8 ff ff	 movss	 DWORD PTR _timenext$1$[ebp], xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00562	0f 44 c1	 cmove	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00565	0f 28 f3	 movaps	 xmm6, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00568	8b 8d 7c e8 ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 195  : 		b = r[base];

  0056e	0f 28 eb	 movaps	 xmm5, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00571	03 c1		 add	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00573	f3 0f 59 f3	 mulss	 xmm6, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 913  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

  00577	89 85 18 e8 ff
	ff		 mov	 DWORD PTR tv7413[ebp], eax

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0057d	85 f6		 test	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 195  : 		b = r[base];

  0057f	f3 0f 58 eb	 addss	 xmm5, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  00583	8b 10		 mov	 edx, DWORD PTR [eax]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00585	b8 24 00 00 00	 mov	 eax, 36			; 00000024H
  0058a	0f 44 85 dc e7
	ff ff		 cmove	 eax, DWORD PTR tv7129[ebp]

; 206  :         _Deque_unchecked_iterator _Tmp = *this;

  00591	89 95 3c e8 ff
	ff		 mov	 DWORD PTR __Tmp$23[ebp+4], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 196  : 		c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  00597	f3 0f 5e ce	 divss	 xmm1, xmm6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0059b	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]

; 57   :         return _Mycont->_Map[_Block][_Off];

  0059e	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  005a3	49		 dec	 ecx
  005a4	23 ca		 and	 ecx, edx

; 57   :         return _Mycont->_Map[_Block][_Off];

  005a6	85 f6		 test	 esi, esi
  005a8	be 0c 00 00 00	 mov	 esi, 12			; 0000000cH
  005ad	0f 44 c6	 cmove	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 192  : 		D3DXVECTOR3 v3Tmp = Input[base+1].second-Input[base].second;

  005b0	8b b5 7c e8 ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  005b6	8b 04 30	 mov	 eax, DWORD PTR [eax+esi]
  005b9	8b 34 88	 mov	 esi, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  005bc	8b 85 70 e8 ff
	ff		 mov	 eax, DWORD PTR __Tmp$1$[ebp]
  005c2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 87   :         _Myoff += _Off;

  005c5	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 192  : 		D3DXVECTOR3 v3Tmp = Input[base+1].second-Input[base].second;

  005c8	8b 95 70 e8 ff
	ff		 mov	 edx, DWORD PTR __Tmp$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  005ce	49		 dec	 ecx
  005cf	23 c8		 and	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 192  : 		D3DXVECTOR3 v3Tmp = Input[base+1].second-Input[base].second;

  005d1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  005d4	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]

; 193  : 		float timebase=0,timenext=h[base], dt=m_fSamplingTime;

  005d7	8b 8d 7c e8 ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005dd	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  005e2	f3 0f 5c 46 0c	 subss	 xmm0, DWORD PTR [esi+12]
  005e7	f3 0f 10 78 04	 movss	 xmm7, DWORD PTR [eax+4]
  005ec	f3 0f 5c 7e 04	 subss	 xmm7, DWORD PTR [esi+4]
  005f1	f3 0f 10 50 08	 movss	 xmm2, DWORD PTR [eax+8]
  005f6	f3 0f 5c 56 08	 subss	 xmm2, DWORD PTR [esi+8]
  005fb	f3 0f 11 85 78
	e8 ff ff	 movss	 DWORD PTR tv7172[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 193  : 		float timebase=0,timenext=h[base], dt=m_fSamplingTime;

  00603	f3 0f 10 85 54
	e8 ff ff	 movss	 xmm0, DWORD PTR $T26[ebp]
  0060b	f3 0f 11 85 14
	e8 ff ff	 movss	 DWORD PTR _timebase$1$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00613	0f 28 e7	 movaps	 xmm4, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 193  : 		float timebase=0,timenext=h[base], dt=m_fSamplingTime;

  00616	f3 0f 10 41 40	 movss	 xmm0, DWORD PTR [ecx+64]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0061b	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@40400000
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 194  : 		a = Input[base].second;

  00623	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00626	f3 0f 11 85 3c
	e8 ff ff	 movss	 DWORD PTR _dt$1$[ebp], xmm0
  0062e	f3 0f 7e 46 04	 movq	 xmm0, QWORD PTR [esi+4]
  00633	66 0f d6 85 fc
	e7 ff ff	 movq	 QWORD PTR _a$18[ebp], xmm0

; 195  : 		b = r[base];

  0063b	f3 0f 7e 85 e0
	f1 ff ff	 movq	 xmm0, QWORD PTR _r$[ebp]
  00643	66 0f d6 85 08
	e8 ff ff	 movq	 QWORD PTR _b$19[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  0064b	f3 0f 10 85 ec
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+12]
  00653	f3 0f 11 85 6c
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2717$1$[ebp], xmm0
  0065b	f3 0f 59 c3	 mulss	 xmm0, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 194  : 		a = Input[base].second;

  0065f	89 85 04 e8 ff
	ff		 mov	 DWORD PTR _a$18[ebp+8], eax

; 195  : 		b = r[base];

  00665	8b 85 e8 f1 ff
	ff		 mov	 eax, DWORD PTR _r$[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0066b	f3 0f 11 95 48
	e8 ff ff	 movss	 DWORD PTR tv7170[ebp], xmm2

; 182  :     z = fz;

  00673	f3 0f 5c e0	 subss	 xmm4, xmm0
  00677	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@40400000
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 195  : 		b = r[base];

  0067f	89 85 10 e8 ff
	ff		 mov	 DWORD PTR _b$19[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00685	f3 0f 10 85 e0
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp]
  0068d	f3 0f 59 c5	 mulss	 xmm0, xmm5

; 182  :     z = fz;

  00691	f3 0f 11 a5 68
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2835$1$[ebp], xmm4
  00699	f3 0f 5c e0	 subss	 xmm4, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 196  : 		c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  0069d	0f 28 c4	 movaps	 xmm0, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  006a0	f3 0f 11 a5 68
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2835$1$[ebp], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 196  : 		c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  006a8	f3 0f 59 c1	 mulss	 xmm0, xmm1
  006ac	f3 0f 11 85 68
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2835$1$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  006b4	f3 0f 10 85 f0
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+16]
  006bc	f3 0f 11 85 64
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2716$1$[ebp], xmm0
  006c4	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 180  :     x = fx;

  006c8	f3 0f 5c d0	 subss	 xmm2, xmm0

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  006cc	f3 0f 10 85 e4
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+4]

; 181  :     y = fy;

  006d4	f3 0f 10 a5 78
	e8 ff ff	 movss	 xmm4, DWORD PTR tv7172[ebp]
  006dc	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@40400000

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  006e4	f3 0f 59 c5	 mulss	 xmm0, xmm5

; 182  :     z = fz;

  006e8	f3 0f 59 3d 00
	00 00 00	 mulss	 xmm7, DWORD PTR __real@c0000000

; 180  :     x = fx;

  006f0	f3 0f 5c d0	 subss	 xmm2, xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  006f4	f3 0f 10 85 f4
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+20]
  006fc	f3 0f 11 85 60
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2715$1$[ebp], xmm0
  00704	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 180  :     x = fx;

  00708	f3 0f 59 d1	 mulss	 xmm2, xmm1

; 181  :     y = fy;

  0070c	f3 0f 5c e0	 subss	 xmm4, xmm0

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00710	f3 0f 10 85 e8
	f1 ff ff	 movss	 xmm0, DWORD PTR _r$[ebp+8]
  00718	f3 0f 59 c5	 mulss	 xmm0, xmm5

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0071c	0f 28 eb	 movaps	 xmm5, xmm3
  0071f	f3 0f 10 9d 60
	e8 ff ff	 movss	 xmm3, DWORD PTR _d$2$sroa$2715$1$[ebp]
  00727	f3 0f 58 9d e8
	f1 ff ff	 addss	 xmm3, DWORD PTR _r$[ebp+8]

; 181  :     y = fy;

  0072f	f3 0f 5c e0	 subss	 xmm4, xmm0

; 180  :     x = fx;

  00733	f3 0f 11 95 28
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2719$1$[ebp], xmm2

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0073b	0f 28 c5	 movaps	 xmm0, xmm5
  0073e	f3 0f 59 c6	 mulss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 198  : 		d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  00742	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@3f800000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0074a	f3 0f 59 e1	 mulss	 xmm4, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 198  : 		d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  0074e	0f 28 ce	 movaps	 xmm1, xmm6
  00751	f3 0f 5e c8	 divss	 xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00755	f3 0f 10 85 6c
	e8 ff ff	 movss	 xmm0, DWORD PTR _d$2$sroa$2717$1$[ebp]
  0075d	f3 0f 58 85 e0
	f1 ff ff	 addss	 xmm0, DWORD PTR _r$[ebp]

; 181  :     y = fy;

  00765	f3 0f 11 a5 5c
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2718$1$[ebp], xmm4

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0076d	f3 0f 10 a5 64
	e8 ff ff	 movss	 xmm4, DWORD PTR _d$2$sroa$2716$1$[ebp]
  00775	f3 0f 58 a5 e4
	f1 ff ff	 addss	 xmm4, DWORD PTR _r$[ebp+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 198  : 		d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  0077d	f3 0f 59 dd	 mulss	 xmm3, xmm5
  00781	f3 0f 59 c5	 mulss	 xmm0, xmm5
  00785	f3 0f 59 e5	 mulss	 xmm4, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00789	f3 0f 58 c7	 addss	 xmm0, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 198  : 		d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  0078d	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00791	f3 0f 11 85 6c
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2717$1$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00799	f3 0f 10 85 48
	e8 ff ff	 movss	 xmm0, DWORD PTR tv7170[ebp]
  007a1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c0000000
  007a9	f3 0f 58 e0	 addss	 xmm4, xmm0

; 181  :     y = fy;

  007ad	f3 0f 10 85 78
	e8 ff ff	 movss	 xmm0, DWORD PTR tv7172[ebp]
  007b5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c0000000
  007bd	f3 0f 58 d8	 addss	 xmm3, xmm0

; 180  :     x = fx;

  007c1	f3 0f 59 e1	 mulss	 xmm4, xmm1
  007c5	f3 0f 11 a5 64
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2716$1$[ebp], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 201  : 		for(float t = 0; t<=length; t+=dt)

  007cd	f3 0f 10 a5 54
	e8 ff ff	 movss	 xmm4, DWORD PTR $T26[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  007d5	f3 0f 59 d9	 mulss	 xmm3, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 201  : 		for(float t = 0; t<=length; t+=dt)

  007d9	0f 28 c4	 movaps	 xmm0, xmm4
  007dc	f3 0f 10 8d 44
	e8 ff ff	 movss	 xmm1, DWORD PTR _length$1$[ebp]
  007e4	0f 2f cc	 comiss	 xmm1, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  007e7	f3 0f 11 9d 60
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2715$1$[ebp], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 201  : 		for(float t = 0; t<=length; t+=dt)

  007ef	f3 0f 11 a5 78
	e8 ff ff	 movss	 DWORD PTR _t$1$[ebp], xmm4
  007f7	0f 82 25 05 00
	00		 jb	 $LN2@BuildVerte
  007fd	0f 1f 00	 npad	 3
$LL19@BuildVerte:

; 203  : 			while (t>timenext)

  00800	0f 2f c5	 comiss	 xmm0, xmm5
  00803	0f 86 cc 02 00
	00		 jbe	 $LN688@BuildVerte
  00809	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  0080c	8d 8d e8 f1 ff
	ff		 lea	 ecx, DWORD PTR _r$[ebp+8]
  00812	8d 0c 81	 lea	 ecx, DWORD PTR [ecx+eax*4]
  00815	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL20@BuildVerte:

; 204  : 			{
; 205  : 				timebase = timenext;
; 206  : 				base++;

  00820	47		 inc	 edi
  00821	f3 0f 11 ad 14
	e8 ff ff	 movss	 DWORD PTR _timebase$1$[ebp], xmm5
  00829	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0082c	89 8d 40 e8 ff
	ff		 mov	 DWORD PTR tv7362[ebp], ecx

; 207  : 				if (base>=n) break;

  00832	3b bd 4c e8 ff
	ff		 cmp	 edi, DWORD PTR _n$1$[ebp]
  00838	0f 8d 87 02 00
	00		 jge	 $LN689@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  0083e	8b 85 18 e8 ff
	ff		 mov	 eax, DWORD PTR tv7413[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 211  : 				c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  00844	f3 0f 10 bc bd
	30 ed ff ff	 movss	 xmm7, DWORD PTR _h$[ebp+edi*4]
  0084d	0f 28 d7	 movaps	 xmm2, xmm7
  00850	0f 28 df	 movaps	 xmm3, xmm7
  00853	f3 0f 59 d7	 mulss	 xmm2, xmm7
  00857	f3 0f 58 df	 addss	 xmm3, xmm7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  0085b	8b 30		 mov	 esi, DWORD PTR [eax]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0085d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00860	48		 dec	 eax

; 206  :         _Deque_unchecked_iterator _Tmp = *this;

  00861	89 b5 28 e8 ff
	ff		 mov	 DWORD PTR __Tmp$22[ebp+4], esi
  00867	89 b5 28 e8 ff
	ff		 mov	 DWORD PTR __Tmp$21[ebp+4], esi

; 87   :         _Myoff += _Off;

  0086d	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]

; 206  :         _Deque_unchecked_iterator _Tmp = *this;

  00870	89 b5 28 e8 ff
	ff		 mov	 DWORD PTR __Tmp$20[ebp+4], esi

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00876	23 c8		 and	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 208  : 				D3DXVECTOR3 v3Tmp = Input[base+1].second-Input[base].second;

  00878	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0087b	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 87   :         _Myoff += _Off;

  0087e	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00881	8b 85 70 e8 ff
	ff		 mov	 eax, DWORD PTR __Tmp$1$[ebp]

; 87   :         _Myoff += _Off;

  00887	03 cf		 add	 ecx, edi

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00889	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0088c	48		 dec	 eax
  0088d	23 c8		 and	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 208  : 				D3DXVECTOR3 v3Tmp = Input[base+1].second-Input[base].second;

  0088f	8b 85 70 e8 ff
	ff		 mov	 eax, DWORD PTR __Tmp$1$[ebp]
  00895	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00898	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 87   :         _Myoff += _Off;

  0089b	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0089e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  008a3	f3 0f 5c 42 04	 subss	 xmm0, DWORD PTR [edx+4]
  008a8	f3 0f 11 85 20
	e8 ff ff	 movss	 DWORD PTR tv7227[ebp], xmm0
  008b0	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  008b5	f3 0f 5c 42 08	 subss	 xmm0, DWORD PTR [edx+8]

; 182  :     z = fz;

  008ba	f3 0f 10 b5 20
	e8 ff ff	 movss	 xmm6, DWORD PTR tv7227[ebp]
  008c2	f3 0f 59 35 00
	00 00 00	 mulss	 xmm6, DWORD PTR __real@40400000

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  008ca	f3 0f 11 85 1c
	e8 ff ff	 movss	 DWORD PTR tv7229[ebp], xmm0
  008d2	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  008d7	f3 0f 5c 42 0c	 subss	 xmm0, DWORD PTR [edx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  008dc	8b 95 70 e8 ff
	ff		 mov	 edx, DWORD PTR __Tmp$1$[ebp]
  008e2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  008e5	48		 dec	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  008e6	f3 0f 11 85 48
	e8 ff ff	 movss	 DWORD PTR tv7231[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  008ee	23 c8		 and	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 209  : 				a = Input[base].second;

  008f0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  008f3	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]

; 210  : 				b = r[base];

  008f6	8b 8d 40 e8 ff
	ff		 mov	 ecx, DWORD PTR tv7362[ebp]
  008fc	f3 0f 7e 40 04	 movq	 xmm0, QWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00901	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00906	f3 0f 11 8d 64
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2716$1$[ebp], xmm1
  0090e	f3 0f 10 49 0c	 movss	 xmm1, DWORD PTR [ecx+12]
  00913	f3 0f 11 8d 60
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2715$1$[ebp], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 211  : 				c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  0091b	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00923	66 0f d6 85 fc
	e7 ff ff	 movq	 QWORD PTR _a$18[ebp], xmm0
  0092b	f3 0f 7e 41 f8	 movq	 xmm0, QWORD PTR [ecx-8]
  00930	f3 0f 5e ca	 divss	 xmm1, xmm2
  00934	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00937	89 85 04 e8 ff
	ff		 mov	 DWORD PTR _a$18[ebp+8], eax
  0093d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0093f	89 85 10 e8 ff
	ff		 mov	 DWORD PTR _b$19[ebp+8], eax
  00945	66 0f d6 85 08
	e8 ff ff	 movq	 QWORD PTR _b$19[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0094d	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00952	f3 0f 11 85 6c
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2717$1$[ebp], xmm0
  0095a	f3 0f 59 c7	 mulss	 xmm0, xmm7

; 182  :     z = fz;

  0095e	f3 0f 5c f0	 subss	 xmm6, xmm0

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00962	f3 0f 10 41 f8	 movss	 xmm0, DWORD PTR [ecx-8]
  00967	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 182  :     z = fz;

  0096b	f3 0f 5c f0	 subss	 xmm6, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 211  : 				c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  0096f	0f 28 c6	 movaps	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00972	f3 0f 11 b5 68
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2835$1$[ebp], xmm6

; 180  :     x = fx;

  0097a	f3 0f 10 b5 1c
	e8 ff ff	 movss	 xmm6, DWORD PTR tv7229[ebp]
  00982	f3 0f 59 35 00
	00 00 00	 mulss	 xmm6, DWORD PTR __real@40400000
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 211  : 				c = ( 3*v3Tmp - r[base+1]*h[base] - (2*h[base])*r[base] )

  0098a	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0098e	f3 0f 11 85 68
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2835$1$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00996	f3 0f 10 85 64
	e8 ff ff	 movss	 xmm0, DWORD PTR _d$2$sroa$2716$1$[ebp]
  0099e	f3 0f 59 c7	 mulss	 xmm0, xmm7

; 180  :     x = fx;

  009a2	f3 0f 5c f0	 subss	 xmm6, xmm0

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  009a6	f3 0f 10 41 fc	 movss	 xmm0, DWORD PTR [ecx-4]
  009ab	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 180  :     x = fx;

  009af	f3 0f 5c f0	 subss	 xmm6, xmm0
  009b3	f3 0f 59 f1	 mulss	 xmm6, xmm1
  009b7	f3 0f 11 b5 28
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2719$1$[ebp], xmm6

; 181  :     y = fy;

  009bf	f3 0f 10 b5 48
	e8 ff ff	 movss	 xmm6, DWORD PTR tv7231[ebp]
  009c7	f3 0f 59 35 00
	00 00 00	 mulss	 xmm6, DWORD PTR __real@40400000

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  009cf	f3 0f 10 85 60
	e8 ff ff	 movss	 xmm0, DWORD PTR _d$2$sroa$2715$1$[ebp]
  009d7	f3 0f 59 c7	 mulss	 xmm0, xmm7

; 182  :     z = fz;

  009db	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@c0000000
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 213  : 				d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  009e3	f3 0f 59 d7	 mulss	 xmm2, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  009e7	f3 0f 5c f0	 subss	 xmm6, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 216  : 				timenext+=h[base];

  009eb	f3 0f 10 ad 74
	e8 ff ff	 movss	 xmm5, DWORD PTR _timenext$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  009f3	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 216  : 				timenext+=h[base];

  009f7	f3 0f 58 ef	 addss	 xmm5, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  009fb	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 181  :     y = fy;

  009ff	0f 28 de	 movaps	 xmm3, xmm6
  00a02	f3 0f 11 b5 5c
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2718$1$[ebp], xmm6
  00a0a	f3 0f 5c d8	 subss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 216  : 				timenext+=h[base];

  00a0e	f3 0f 11 ad 74
	e8 ff ff	 movss	 DWORD PTR _timenext$1$[ebp], xmm5
  00a16	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a1e	f3 0f 5e c2	 divss	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00a22	f3 0f 10 95 6c
	e8 ff ff	 movss	 xmm2, DWORD PTR _d$2$sroa$2717$1$[ebp]
  00a2a	f3 0f 58 51 f8	 addss	 xmm2, DWORD PTR [ecx-8]

; 181  :     y = fy;

  00a2f	f3 0f 59 d9	 mulss	 xmm3, xmm1

; 182  :     z = fz;

  00a33	f3 0f 10 8d 20
	e8 ff ff	 movss	 xmm1, DWORD PTR tv7227[ebp]
  00a3b	f3 0f 59 cc	 mulss	 xmm1, xmm4

; 181  :     y = fy;

  00a3f	f3 0f 11 9d 5c
	e8 ff ff	 movss	 DWORD PTR _c$1$sroa$2718$1$[ebp], xmm3

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00a47	f3 0f 10 9d 64
	e8 ff ff	 movss	 xmm3, DWORD PTR _d$2$sroa$2716$1$[ebp]
  00a4f	f3 0f 58 59 fc	 addss	 xmm3, DWORD PTR [ecx-4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 213  : 				d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  00a54	f3 0f 59 d7	 mulss	 xmm2, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00a58	f3 0f 58 d1	 addss	 xmm2, xmm1

; 180  :     x = fx;

  00a5c	f3 0f 59 df	 mulss	 xmm3, xmm7
  00a60	f3 0f 10 8d 1c
	e8 ff ff	 movss	 xmm1, DWORD PTR tv7229[ebp]
  00a68	f3 0f 59 cc	 mulss	 xmm1, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 213  : 				d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  00a6c	f3 0f 59 d0	 mulss	 xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00a70	f3 0f 58 d9	 addss	 xmm3, xmm1

; 181  :     y = fy;

  00a74	f3 0f 10 8d 48
	e8 ff ff	 movss	 xmm1, DWORD PTR tv7231[ebp]
  00a7c	f3 0f 59 cc	 mulss	 xmm1, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 213  : 				d = ( -2*v3Tmp + (r[base+1]+r[base])*h[base])

  00a80	f3 0f 11 95 6c
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2717$1$[ebp], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00a88	f3 0f 59 d8	 mulss	 xmm3, xmm0
  00a8c	f3 0f 11 9d 64
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2716$1$[ebp], xmm3

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00a94	f3 0f 10 9d 60
	e8 ff ff	 movss	 xmm3, DWORD PTR _d$2$sroa$2715$1$[ebp]
  00a9c	f3 0f 58 19	 addss	 xmm3, DWORD PTR [ecx]

; 181  :     y = fy;

  00aa0	f3 0f 59 df	 mulss	 xmm3, xmm7
  00aa4	f3 0f 58 d9	 addss	 xmm3, xmm1
  00aa8	f3 0f 59 d8	 mulss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 203  : 			while (t>timenext)

  00aac	f3 0f 10 85 78
	e8 ff ff	 movss	 xmm0, DWORD PTR _t$1$[ebp]
  00ab4	0f 2f c5	 comiss	 xmm0, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00ab7	f3 0f 11 9d 60
	e8 ff ff	 movss	 DWORD PTR _d$2$sroa$2715$1$[ebp], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 203  : 			while (t>timenext)

  00abf	0f 87 5b fd ff
	ff		 ja	 $LL20@BuildVerte
$LN689@BuildVerte:
  00ac5	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@3f800000
  00acd	f3 0f 10 a5 54
	e8 ff ff	 movss	 xmm4, DWORD PTR $T26[ebp]
$LN688@BuildVerte:

; 217  : 				if (loop)
; 218  : 				{
; 219  : 					//Tracef("%f:%f %f %f\n",Input[base].first,Input[base].second.x,Input[base].second.y,Input[base].second.z);
; 220  : 				}
; 221  : 			}
; 222  : 			if (base>n) break;

  00ad5	3b bd 4c e8 ff
	ff		 cmp	 edi, DWORD PTR _n$1$[ebp]
  00adb	0f 8f 33 02 00
	00		 jg	 $LN690@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00ae1	8b 85 18 e8 ff
	ff		 mov	 eax, DWORD PTR tv7413[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 223  : 			float cc = t - timebase;

  00ae7	0f 28 d8	 movaps	 xmm3, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00aea	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00aed	49		 dec	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 223  : 			float cc = t - timebase;

  00aee	f3 0f 5c 9d 14
	e8 ff ff	 subss	 xmm3, DWORD PTR _timebase$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00af6	23 08		 and	 ecx, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 227  : 			float ttt = min(max((t+Input[0].first)/m_fLifeTime,0.0f),1.0f);

  00af8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00afb	f3 0f 11 9d 40
	e8 ff ff	 movss	 DWORD PTR _cc$1$[ebp], xmm3
  00b03	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00b06	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00b0a	8b 85 7c e8 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00b10	f3 0f 58 c8	 addss	 xmm1, xmm0
  00b14	f3 0f 5e 48 3c	 divss	 xmm1, DWORD PTR [eax+60]
  00b19	0f 2f cc	 comiss	 xmm1, xmm4
  00b1c	76 0f		 jbe	 SHORT $LN694@BuildVerte
  00b1e	0f 2f f1	 comiss	 xmm6, xmm1
  00b21	77 05		 ja	 SHORT $LN686@BuildVerte
  00b23	0f 28 ce	 movaps	 xmm1, xmm6
  00b26	eb 08		 jmp	 SHORT $LN40@BuildVerte
$LN686@BuildVerte:
  00b28	0f 2f cc	 comiss	 xmm1, xmm4
  00b2b	77 03		 ja	 SHORT $LN40@BuildVerte
$LN694@BuildVerte:
  00b2d	0f 28 cc	 movaps	 xmm1, xmm4
$LN40@BuildVerte:

; 228  : 			v.diffuse = D3DXCOLOR(0.3f,0.8f,1.0f, (loop)?min(max((1.0f-ttt)*(1.0f-ttt)/2.5-0.1f,0.0f),1.0f):0.0f );

  00b30	8b b5 50 e8 ff
	ff		 mov	 esi, DWORD PTR _loop$1$[ebp]
  00b36	85 f6		 test	 esi, esi
  00b38	74 39		 je	 SHORT $LN47@BuildVerte
  00b3a	0f 28 c6	 movaps	 xmm0, xmm6
  00b3d	f3 0f 5c c1	 subss	 xmm0, xmm1
  00b41	f2 0f 10 8d e8
	e7 ff ff	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000$1$[ebp]
  00b49	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00b4d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00b50	f2 0f 5e 85 b4
	e7 ff ff	 divsd	 xmm0, QWORD PTR __real@4004000000000000$1$[ebp]
  00b58	f2 0f 5c 85 ac
	e7 ff ff	 subsd	 xmm0, QWORD PTR __real@3fb99999a0000000$1$[ebp]
  00b60	f2 0f 5f 85 d4
	e7 ff ff	 maxsd	 xmm0, QWORD PTR __real@0000000000000000$1$[ebp]
  00b68	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b6c	77 0d		 ja	 SHORT $LN48@BuildVerte
  00b6e	0f 28 c1	 movaps	 xmm0, xmm1
  00b71	eb 08		 jmp	 SHORT $LN48@BuildVerte
$LN47@BuildVerte:
  00b73	f2 0f 10 85 d4
	e7 ff ff	 movsd	 xmm0, QWORD PTR __real@0000000000000000$1$[ebp]
$LN48@BuildVerte:
  00b7b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00b7f	0f 2f c6	 comiss	 xmm0, xmm6
  00b82	72 07		 jb	 SHORT $LN543@BuildVerte
  00b84	b9 ff 00 00 00	 mov	 ecx, 255		; 000000ffH
  00b89	eb 2e		 jmp	 SHORT $LN542@BuildVerte
$LN543@BuildVerte:
  00b8b	0f 2f e0	 comiss	 xmm4, xmm0
  00b8e	72 04		 jb	 SHORT $LN541@BuildVerte
  00b90	33 c9		 xor	 ecx, ecx
  00b92	eb 25		 jmp	 SHORT $LN542@BuildVerte
$LN541@BuildVerte:
  00b94	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00b9c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00ba4	e8 00 00 00 00	 call	 __ftoui3
  00ba9	f3 0f 10 9d 40
	e8 ff ff	 movss	 xmm3, DWORD PTR _cc$1$[ebp]
  00bb1	8b c8		 mov	 ecx, eax
  00bb3	8b 85 7c e8 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
$LN542@BuildVerte:

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00bb9	f3 0f 10 85 6c
	e8 ff ff	 movss	 xmm0, DWORD PTR _d$2$sroa$2717$1$[ebp]
  00bc1	0f 57 e4	 xorps	 xmm4, xmm4
  00bc4	f3 0f 10 8d 64
	e8 ff ff	 movss	 xmm1, DWORD PTR _d$2$sroa$2716$1$[ebp]
  00bcc	f3 0f 10 95 60
	e8 ff ff	 movss	 xmm2, DWORD PTR _d$2$sroa$2715$1$[ebp]
  00bd4	f3 0f 59 c3	 mulss	 xmm0, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00bd8	8b 95 e4 e7 ff
	ff		 mov	 edx, DWORD PTR _Output$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00bde	f3 0f 59 cb	 mulss	 xmm1, xmm3

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00be2	c1 e1 18	 shl	 ecx, 24			; 00000018H

; 182  :     z = fz;

  00be5	f3 0f 58 85 68
	e8 ff ff	 addss	 xmm0, DWORD PTR _c$1$sroa$2835$1$[ebp]

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00bed	f3 0f 59 d3	 mulss	 xmm2, xmm3

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00bf1	81 c9 ff cc 4d
	00		 or	 ecx, 5098751		; 004dccffH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 228  : 			v.diffuse = D3DXCOLOR(0.3f,0.8f,1.0f, (loop)?min(max((1.0f-ttt)*(1.0f-ttt)/2.5-0.1f,0.0f),1.0f):0.0f );

  00bf7	89 8d c8 e7 ff
	ff		 mov	 DWORD PTR _v$15[ebp+12], ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00bfd	f3 0f 58 8d 28
	e8 ff ff	 addss	 xmm1, DWORD PTR _c$1$sroa$2719$1$[ebp]

; 181  :     y = fy;

  00c05	f3 0f 58 95 5c
	e8 ff ff	 addss	 xmm2, DWORD PTR _c$1$sroa$2718$1$[ebp]

; 182  :     z = fz;

  00c0d	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 180  :     x = fx;

  00c11	f3 0f 59 cb	 mulss	 xmm1, xmm3

; 182  :     z = fz;

  00c15	f3 0f 58 85 08
	e8 ff ff	 addss	 xmm0, DWORD PTR _b$19[ebp]
  00c1d	f3 0f 59 d3	 mulss	 xmm2, xmm3

; 180  :     x = fx;

  00c21	f3 0f 58 8d 0c
	e8 ff ff	 addss	 xmm1, DWORD PTR _b$19[ebp+4]

; 181  :     y = fy;

  00c29	f3 0f 58 95 10
	e8 ff ff	 addss	 xmm2, DWORD PTR _b$19[ebp+8]

; 182  :     z = fz;

  00c31	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 180  :     x = fx;

  00c35	f3 0f 59 cb	 mulss	 xmm1, xmm3

; 181  :     y = fy;

  00c39	f3 0f 59 d3	 mulss	 xmm2, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 232  : 			v.texCoord.x = t/m_fLifeTime;

  00c3d	f3 0f 10 9d 78
	e8 ff ff	 movss	 xmm3, DWORD PTR _t$1$[ebp]
  00c45	f3 0f 5e 58 3c	 divss	 xmm3, DWORD PTR [eax+60]

; 233  : 			v.texCoord.y = loop ? 0 : 1;

  00c4a	33 c0		 xor	 eax, eax
  00c4c	85 f6		 test	 esi, esi
  00c4e	0f 94 c0	 sete	 al
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00c51	f3 0f 58 85 fc
	e7 ff ff	 addss	 xmm0, DWORD PTR _a$18[ebp]

; 180  :     x = fx;

  00c59	f3 0f 58 8d 00
	e8 ff ff	 addss	 xmm1, DWORD PTR _a$18[ebp+4]

; 181  :     y = fy;

  00c61	f3 0f 58 95 04
	e8 ff ff	 addss	 xmm2, DWORD PTR _a$18[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 233  : 			v.texCoord.y = loop ? 0 : 1;

  00c69	f3 0f 2a e0	 cvtsi2ss xmm4, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00c6d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 231  : 			v.position = a+cc*(b+cc*(c+cc*d));	// next position

  00c70	f3 0f 11 85 bc
	e7 ff ff	 movss	 DWORD PTR _v$15[ebp], xmm0
  00c78	f3 0f 11 8d c0
	e7 ff ff	 movss	 DWORD PTR _v$15[ebp+4], xmm1
  00c80	f3 0f 11 95 c4
	e7 ff ff	 movss	 DWORD PTR _v$15[ebp+8], xmm2

; 232  : 			v.texCoord.x = t/m_fLifeTime;

  00c88	f3 0f 11 9d cc
	e7 ff ff	 movss	 DWORD PTR _v$15[ebp+16], xmm3

; 233  : 			v.texCoord.y = loop ? 0 : 1;

  00c90	f3 0f 11 a5 d0
	e7 ff ff	 movss	 DWORD PTR _v$15[ebp+20], xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00c98	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00c9b	74 21		 je	 SHORT $LN572@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00c9d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00ca1	f3 0f 11 48 04	 movss	 DWORD PTR [eax+4], xmm1
  00ca6	f3 0f 11 50 08	 movss	 DWORD PTR [eax+8], xmm2
  00cab	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00cae	f3 0f 11 58 10	 movss	 DWORD PTR [eax+16], xmm3
  00cb3	f3 0f 11 60 14	 movss	 DWORD PTR [eax+20], xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00cb8	83 42 04 18	 add	 DWORD PTR [edx+4], 24	; 00000018H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00cbc	eb 0f		 jmp	 SHORT $LN17@BuildVerte
$LN572@BuildVerte:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00cbe	8d 8d bc e7 ff
	ff		 lea	 ecx, DWORD PTR _v$15[ebp]
  00cc4	51		 push	 ecx
  00cc5	50		 push	 eax
  00cc6	8b ca		 mov	 ecx, edx
  00cc8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Emplace_reallocate<SPDTVertex const &>
$LN17@BuildVerte:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 201  : 		for(float t = 0; t<=length; t+=dt)

  00ccd	f3 0f 10 85 78
	e8 ff ff	 movss	 xmm0, DWORD PTR _t$1$[ebp]
  00cd5	f3 0f 58 85 3c
	e8 ff ff	 addss	 xmm0, DWORD PTR _dt$1$[ebp]
  00cdd	f3 0f 10 95 44
	e8 ff ff	 movss	 xmm2, DWORD PTR _length$1$[ebp]
  00ce5	f3 0f 10 ad 74
	e8 ff ff	 movss	 xmm5, DWORD PTR _timenext$1$[ebp]
  00ced	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@3f800000
  00cf5	f3 0f 10 a5 54
	e8 ff ff	 movss	 xmm4, DWORD PTR $T26[ebp]
  00cfd	0f 2f d0	 comiss	 xmm2, xmm0
  00d00	8b 95 70 e8 ff
	ff		 mov	 edx, DWORD PTR __Tmp$1$[ebp]
  00d06	f3 0f 11 85 78
	e8 ff ff	 movss	 DWORD PTR _t$1$[ebp], xmm0
  00d0e	0f 83 ec fa ff
	ff		 jae	 $LL19@BuildVerte
$LN690@BuildVerte:
  00d14	f3 0f 10 a5 54
	e8 ff ff	 movss	 xmm4, DWORD PTR $T26[ebp]
  00d1c	8b 8d 7c e8 ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@BuildVerte:

; 147  : 
; 148  : 	int n = m_LongTimePointList.size()-1;
; 149  : 	assert(n<max_size-1);
; 150  : 
; 151  : 	// cubic spline
; 152  : 
; 153  : 	for(int loop = 0; loop<=1; ++loop)

  00d22	8b bd 50 e8 ff
	ff		 mov	 edi, DWORD PTR _loop$1$[ebp]
  00d28	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  00d30	47		 inc	 edi
  00d31	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00d39	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@40800000
  00d41	8b 95 4c e8 ff
	ff		 mov	 edx, DWORD PTR _n$1$[ebp]
  00d47	89 bd 50 e8 ff
	ff		 mov	 DWORD PTR _loop$1$[ebp], edi
  00d4d	83 ff 01	 cmp	 edi, 1
  00d50	0f 8e 2a f4 ff
	ff		 jle	 $LL4@BuildVerte

; 234  : 			Output.push_back(v);
; 235  : 			if (loop)
; 236  : 			{
; 237  : 			//	Tracef("%f %f %f\n", timebase,t,timenext);
; 238  : 				//Tracef("a:%f %f %f\nb:%f %f %f \nc:%f %f %f \nd:%f %f %f, \n",,a.x,a.y,a.z,b.x,b.y,b.z,c.x,c.y,c.z,d.x,d.y,d.z);
; 239  : 
; 240  : 				//Tracef("%f %f %f\n",v.position.x,v.position.y,v.position.z);
; 241  : 				/*D3DXMATRIX * pBoneMat;
; 242  : 				m_pInstance->GetBoneMatrix(m_dwModelInstanceIndex, 55, &pBoneMat);
; 243  : 				D3DXVECTOR3 vbone(m_fx+pBoneMat->_41,m_fy+pBoneMat->_42,m_fz+pBoneMat->_43);
; 244  : 				float len = D3DXVec3Length(&(v.position-vbone));*/
; 245  : 			}
; 246  : 		}
; 247  : 	}
; 248  : 
; 249  : 	// build vertex
; 250  : 
; 251  : 	m_PDTVertexVector.clear();
; 252  : 
; 253  : 	/*
; 254  : 	TTimePointList::iterator lit1,lit2, sit1,sit2;
; 255  : 
; 256  : 	lit2 = lit1 = m_LongTimePointList.begin();
; 257  : 	++lit2;
; 258  : 
; 259  : 	sit2 = sit1 = m_ShortTimePointList.begin();
; 260  : 	++sit2;
; 261  : 	*/
; 262  : 	std::vector<TPDTVertex>::iterator lit,sit;
; 263  : 	for(lit = m_LongVertexVector.begin(), sit = m_ShortVertexVector.begin();

  00d56	8b 95 2c e8 ff
	ff		 mov	 edx, DWORD PTR _m_LongVertexVector$[ebp]
  00d5c	8d 79 30	 lea	 edi, DWORD PTR [ecx+48]
  00d5f	8b 07		 mov	 eax, DWORD PTR [edi]
  00d61	8b f2		 mov	 esi, edx
  00d63	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00d66	3b b5 30 e8 ff
	ff		 cmp	 esi, DWORD PTR _m_LongVertexVector$[ebp+4]

; 264  : 		lit != m_LongVertexVector.end();

  00d6c	74 79		 je	 SHORT $LN23@BuildVerte
  00d6e	8b 85 f0 e7 ff
	ff		 mov	 eax, DWORD PTR _m_ShortVertexVector$[ebp]
  00d74	2b c2		 sub	 eax, edx
  00d76	89 85 3c e8 ff
	ff		 mov	 DWORD PTR tv7416[ebp], eax
  00d7c	0f 1f 40 00	 npad	 4
$LL24@BuildVerte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00d80	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00d83	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00d86	74 16		 je	 SHORT $LN619@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00d88	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00d8b	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00d8e	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00d93	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00d98	83 47 04 18	 add	 DWORD PTR [edi+4], 24	; 00000018H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00d9c	eb 09		 jmp	 SHORT $LN695@BuildVerte
$LN619@BuildVerte:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00d9e	56		 push	 esi
  00d9f	50		 push	 eax
  00da0	8b cf		 mov	 ecx, edi
  00da2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Emplace_reallocate<SPDTVertex const &>
$LN695@BuildVerte:

; 704  :         if (_Mylast != _My_data._Myend) {

  00da7	8b 8d 3c e8 ff
	ff		 mov	 ecx, DWORD PTR tv7416[ebp]
  00dad	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00db0	03 ce		 add	 ecx, esi
  00db2	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00db5	74 16		 je	 SHORT $LN628@BuildVerte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00db7	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00dba	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00dbd	f3 0f 7e 41 10	 movq	 xmm0, QWORD PTR [ecx+16]
  00dc2	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00dc7	83 47 04 18	 add	 DWORD PTR [edi+4], 24	; 00000018H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00dcb	eb 09		 jmp	 SHORT $LN22@BuildVerte
$LN628@BuildVerte:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00dcd	51		 push	 ecx
  00dce	50		 push	 eax
  00dcf	8b cf		 mov	 ecx, edi
  00dd1	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSPDTVertex@@@?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAEPAUSPDTVertex@@QAU2@ABU2@@Z ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::_Emplace_reallocate<SPDTVertex const &>
$LN22@BuildVerte:

; 75   :         ++_Ptr;

  00dd6	83 c6 18	 add	 esi, 24			; 00000018H

; 149  :         return _Ptr == _Right._Ptr;

  00dd9	3b b5 30 e8 ff
	ff		 cmp	 esi, DWORD PTR _m_LongVertexVector$[ebp+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 264  : 		lit != m_LongVertexVector.end();

  00ddf	75 9f		 jne	 SHORT $LL24@BuildVerte
  00de1	8b 95 2c e8 ff
	ff		 mov	 edx, DWORD PTR _m_LongVertexVector$[ebp]
$LN23@BuildVerte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00de7	85 d2		 test	 edx, edx
  00de9	74 2e		 je	 SHORT $LN637@BuildVerte

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00deb	8b 8d 34 e8 ff
	ff		 mov	 ecx, DWORD PTR _m_LongVertexVector$[ebp+8]
  00df1	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00df6	2b ca		 sub	 ecx, edx
  00df8	f7 e9		 imul	 ecx
  00dfa	c1 fa 02	 sar	 edx, 2
  00dfd	8b c2		 mov	 eax, edx
  00dff	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00e02	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e04	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00e07	c1 e0 03	 shl	 eax, 3
  00e0a	50		 push	 eax
  00e0b	ff b5 2c e8 ff
	ff		 push	 DWORD PTR _m_LongVertexVector$[ebp]
  00e11	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00e16	83 c4 08	 add	 esp, 8
$LN637@BuildVerte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00e19	8b b5 f0 e7 ff
	ff		 mov	 esi, DWORD PTR _m_ShortVertexVector$[ebp]
  00e1f	85 f6		 test	 esi, esi
  00e21	74 29		 je	 SHORT $LN644@BuildVerte

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00e23	8b 8d f8 e7 ff
	ff		 mov	 ecx, DWORD PTR _m_ShortVertexVector$[ebp+8]
  00e29	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00e2e	2b ce		 sub	 ecx, esi
  00e30	f7 e9		 imul	 ecx
  00e32	c1 fa 02	 sar	 edx, 2
  00e35	8b c2		 mov	 eax, edx
  00e37	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00e3a	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e3c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00e3f	c1 e0 03	 shl	 eax, 3
  00e42	50		 push	 eax
  00e43	56		 push	 esi
  00e44	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00e49	83 c4 08	 add	 esp, 8
$LN644@BuildVerte:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 274  : 	return true;

  00e4c	b0 01		 mov	 al, 1
$LN1@BuildVerte:

; 275  : }

  00e4e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00e51	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00e58	59		 pop	 ecx
  00e59	5f		 pop	 edi
  00e5a	5e		 pop	 esi
  00e5b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e5e	33 cd		 xor	 ecx, ebp
  00e60	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e65	8b e5		 mov	 esp, ebp
  00e67	5d		 pop	 ebp
  00e68	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BuildVertex@CWeaponTrace@@IAE_NXZ$0:
  00000	8d 8d f0 e7 ff
	ff		 lea	 ecx, DWORD PTR _m_ShortVertexVector$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::~vector<SPDTVertex,std::allocator<SPDTVertex> >
__unwindfunclet$?BuildVertex@CWeaponTrace@@IAE_NXZ$1:
  0000b	8d 8d 2c e8 ff
	ff		 lea	 ecx, DWORD PTR _m_LongVertexVector$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::~vector<SPDTVertex,std::allocator<SPDTVertex> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$?BuildVertex@CWeaponTrace@@IAE_NXZ:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 8a 94 e7 ff
	ff		 mov	 ecx, DWORD PTR [edx-6252]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?BuildVertex@CWeaponTrace@@IAE_NXZ
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?BuildVertex@CWeaponTrace@@IAE_NXZ ENDP			; CWeaponTrace::BuildVertex
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?Initialize@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::Initialize, COMDAT
; _this$ = ecx

; 442  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 443  : 	m_pInstance = NULL;

  00003	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0

; 444  : 	m_dwModelInstanceIndex = 0;

  0000a	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0

; 445  : 
; 446  : 	m_fx = 0.0f;

  00011	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0

; 447  : 	m_fy = 0.0f;

  00018	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0

; 448  : 	m_fz = 0.0f;

  0001f	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0

; 449  : 	m_fRotation = 0.0f;

  00026	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0

; 450  : 
; 451  : 	m_fLifeTime = 0.18f;

  0002d	c7 46 3c ec 51
	38 3e		 mov	 DWORD PTR [esi+60], 1043878380 ; 3e3851ecH

; 452  : 	//m_fLifeTime = 3.0f;
; 453  : 	m_fSamplingTime = 0.003f;

  00034	c7 46 40 a6 9b
	44 3b		 mov	 DWORD PTR [esi+64], 994352038 ; 3b449ba6H

; 454  : 	//m_fLifeTime = 3.0f;
; 455  : 	//m_fSamplingTime = 0.003f;
; 456  : 
; 457  : 	m_isPlaying = FALSE;

  0003b	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0

; 458  : 
; 459  : 	m_bUseTexture = false;

  00045	c6 86 84 00 00
	00 00		 mov	 BYTE PTR [esi+132], 0

; 460  : 
; 461  : 	m_iBoneIndex = 0;

  0004c	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 462  : 
; 463  : 	m_fLastUpdate = CTimer::Instance().GetCurrentSecond();

  00056	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0005c	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00061	d9 5e 04	 fstp	 DWORD PTR [esi+4]
  00064	5e		 pop	 esi

; 464  : 	///////////////////////////////////////////////////////////////////////
; 465  : 
; 466  : 	//const int c_iSplineCount = 8;
; 467  : 	//m_SplineValueVector.clear();
; 468  : 	//m_SplineValueVector.resize(c_iSplineCount);
; 469  : 
; 470  : 	//for (int i = 0; i < c_iSplineCount; ++i)
; 471  : 	//{
; 472  : 	//	float fValue = float(i) / float(c_iSplineCount);
; 473  : 	//	m_SplineValueVector[i].fValue1 = fValue;
; 474  : 	//	m_SplineValueVector[i].fValue2 = fValue * fValue;
; 475  : 	//	m_SplineValueVector[i].fValue3 = fValue * fValue * fValue;
; 476  : 	//}
; 477  : 
; 478  : }

  00065	c3		 ret	 0
?Initialize@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?Render@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
_matWorld$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?Render@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::Render, COMDAT
; _this$ = ecx

; 278  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 279  : 	//if (!m_isPlaying)
; 280  : 	//	return;
; 281  : 	//if (m_CurvingTraceVector.size() < 4)
; 282  : 	//	return;
; 283  : 
; 284  : 	if (!BuildVertex())

  00013	e8 00 00 00 00	 call	 ?BuildVertex@CWeaponTrace@@IAE_NXZ ; CWeaponTrace::BuildVertex
  00018	84 c0		 test	 al, al
  0001a	0f 84 f8 02 00
	00		 je	 $LN1@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00020	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00023	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00028	2b 4e 30	 sub	 ecx, DWORD PTR [esi+48]
  0002b	f7 e9		 imul	 ecx
  0002d	c1 fa 02	 sar	 edx, 2
  00030	8b c2		 mov	 eax, edx
  00032	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00035	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 287  : 	if (m_PDTVertexVector.size()<4)

  00037	83 f8 04	 cmp	 eax, 4
  0003a	0f 82 d8 02 00
	00		 jb	 $LN1@Render

; 297  : 	STATEMANAGER.SaveTransform(D3DTS_WORLD, &matWorld);

  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00046	8d 45 bc	 lea	 eax, DWORD PTR _matWorld$[ebp]
  00049	50		 push	 eax
  0004a	68 00 01 00 00	 push	 256			; 00000100H
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0004f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+56], 0
  00056	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+52], 0
  0005d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+48], 0
  00064	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+44], 0
  0006b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+36], 0
  00072	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+32], 0
  00079	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+28], 0
  00080	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+24], 0
  00087	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+16], 0
  0008e	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+12], 0
  00095	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+8], 0
  0009c	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+4], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  000a3	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp+60], 1065353216 ; 3f800000H
  000aa	c7 45 e4 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp+40], 1065353216 ; 3f800000H
  000b1	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp+20], 1065353216 ; 3f800000H
  000b8	c7 45 bc 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 297  : 	STATEMANAGER.SaveTransform(D3DTS_WORLD, &matWorld);

  000bf	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 298  : 	STATEMANAGER.SaveVertexShader(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1);

  000c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ca	68 42 01 00 00	 push	 322			; 00000142H
  000cf	e8 00 00 00 00	 call	 ?SaveVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SaveVertexShader

; 299  : 	STATEMANAGER.SaveRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000da	6a 01		 push	 1
  000dc	6a 16		 push	 22			; 00000016H
  000de	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 300  : 
; 301  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e9	6a 01		 push	 1
  000eb	6a 1b		 push	 27			; 0000001bH
  000ed	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 302  : 	STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  000f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f8	6a 05		 push	 5
  000fa	6a 13		 push	 19			; 00000013H
  000fc	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 303  : 	STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  00101	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00107	6a 06		 push	 6
  00109	6a 14		 push	 20			; 00000014H
  0010b	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 304  : 
; 305  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHATESTENABLE, FALSE);

  00110	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00116	6a 00		 push	 0
  00118	6a 0f		 push	 15			; 0000000fH
  0011a	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 306  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHAREF, 0x00000011);

  0011f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00125	6a 11		 push	 17			; 00000011H
  00127	6a 18		 push	 24			; 00000018H
  00129	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 307  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHAFUNC, D3DCMP_GREATER);

  0012e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00134	6a 05		 push	 5
  00136	6a 19		 push	 25			; 00000019H
  00138	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 308  : 
; 309  : 	STATEMANAGER.SaveRenderState(D3DRS_ZENABLE, TRUE);

  0013d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00143	6a 01		 push	 1
  00145	6a 07		 push	 7
  00147	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 310  : 	STATEMANAGER.SaveRenderState(D3DRS_ZFUNC, D3DCMP_LESSEQUAL);

  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00152	6a 04		 push	 4
  00154	6a 17		 push	 23			; 00000017H
  00156	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 311  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, FALSE);

  0015b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00161	6a 00		 push	 0
  00163	6a 0e		 push	 14			; 0000000eH
  00165	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 312  : 
; 313  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_DIFFUSE);

  0016a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00170	6a 00		 push	 0
  00172	6a 02		 push	 2
  00174	6a 00		 push	 0
  00176	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 314  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_TEXTURE);

  0017b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00181	6a 02		 push	 2
  00183	6a 03		 push	 3
  00185	6a 00		 push	 0
  00187	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 315  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, (m_bUseTexture)?D3DTOP_SELECTARG2:D3DTOP_SELECTARG1);

  0018c	33 c0		 xor	 eax, eax
  0018e	38 86 84 00 00
	00		 cmp	 BYTE PTR [esi+132], al
  00194	0f 95 c0	 setne	 al
  00197	83 c0 02	 add	 eax, 2
  0019a	50		 push	 eax
  0019b	6a 01		 push	 1
  0019d	6a 00		 push	 0
  0019f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001a5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 316  : 	//STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG1);
; 317  : 	//STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE);
; 318  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_DIFFUSE);

  001aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b0	6a 00		 push	 0
  001b2	6a 05		 push	 5
  001b4	6a 00		 push	 0
  001b6	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 319  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG2, D3DTA_TEXTURE);

  001bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c1	6a 02		 push	 2
  001c3	6a 06		 push	 6
  001c5	6a 00		 push	 0
  001c7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 320  : 	//STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_MODULATE);
; 321  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, (m_bUseTexture)?D3DTOP_SELECTARG2:D3DTOP_SELECTARG1);

  001cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001d2	33 c0		 xor	 eax, eax
  001d4	38 86 84 00 00
	00		 cmp	 BYTE PTR [esi+132], al
  001da	0f 95 c0	 setne	 al
  001dd	83 c0 02	 add	 eax, 2
  001e0	50		 push	 eax
  001e1	6a 04		 push	 4
  001e3	6a 00		 push	 0
  001e5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 322  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  001ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001f0	6a 01		 push	 1
  001f2	6a 01		 push	 1
  001f4	6a 01		 push	 1
  001f6	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 323  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  001fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00201	6a 01		 push	 1
  00203	6a 04		 push	 4
  00205	6a 01		 push	 1
  00207	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 324  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, FALSE);

  0020c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00212	6a 00		 push	 0
  00214	68 89 00 00 00	 push	 137			; 00000089H
  00219	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 325  : 	STATEMANAGER.SetTexture(0, lpTexture);

  0021e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00224	6a 00		 push	 0
  00226	6a 00		 push	 0
  00228	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 326  : 	STATEMANAGER.SetTexture(1, NULL);

  0022d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00233	6a 00		 push	 0
  00235	6a 01		 push	 1
  00237	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 327  : 	STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,

  0023c	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0023f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00244	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
  00247	2b d1		 sub	 edx, ecx
  00249	f7 ea		 imul	 edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 327  : 	STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,

  0024b	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0024d	c1 fa 02	 sar	 edx, 2
  00250	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 327  : 	STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,

  00252	83 c2 fe	 add	 edx, -2			; fffffffeH
  00255	51		 push	 ecx
  00256	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0025c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 327  : 	STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,

  0025f	03 c2		 add	 eax, edx
  00261	50		 push	 eax
  00262	6a 05		 push	 5
  00264	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP

; 328  : 								 int(m_PDTVertexVector.size() - 2),
; 329  : 								 &m_PDTVertexVector[0],
; 330  : 								 sizeof(TPDTVertex));
; 331  : 
; 332  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, TRUE);

  00269	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0026f	6a 01		 push	 1
  00271	68 89 00 00 00	 push	 137			; 00000089H
  00276	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 333  : 
; 334  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZENABLE);

  0027b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00281	6a 07		 push	 7
  00283	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 335  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZFUNC);

  00288	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0028e	6a 17		 push	 23			; 00000017H
  00290	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 336  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  00295	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0029b	6a 0e		 push	 14			; 0000000eH
  0029d	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 337  : 
; 338  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHATESTENABLE);

  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002a8	6a 0f		 push	 15			; 0000000fH
  002aa	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 339  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHAREF);

  002af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b5	6a 18		 push	 24			; 00000018H
  002b7	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 340  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHAFUNC);

  002bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002c2	6a 19		 push	 25			; 00000019H
  002c4	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 341  : 
; 342  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  002c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002cf	6a 1b		 push	 27			; 0000001bH
  002d1	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 343  : 	STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  002d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002dc	6a 13		 push	 19			; 00000013H
  002de	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 344  : 	STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  002e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002e9	6a 14		 push	 20			; 00000014H
  002eb	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 345  : 
; 346  : 	STATEMANAGER.RestoreTransform(D3DTS_WORLD);

  002f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002f6	68 00 01 00 00	 push	 256			; 00000100H
  002fb	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 347  : 	STATEMANAGER.RestoreVertexShader();

  00300	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00306	e8 00 00 00 00	 call	 ?RestoreVertexShader@CStateManager@@QAEXXZ ; CStateManager::RestoreVertexShader

; 348  : 	STATEMANAGER.RestoreRenderState(D3DRS_CULLMODE);

  0030b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00311	6a 16		 push	 22			; 00000016H
  00313	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN1@Render:

; 349  : }

  00318	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0031b	33 cd		 xor	 ecx, ebp
  0031d	5e		 pop	 esi
  0031e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00323	8b e5		 mov	 esp, ebp
  00325	5d		 pop	 ebp
  00326	c3		 ret	 0
?Render@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?Update@CWeaponTrace@@QAEXM@Z
_TEXT	SEGMENT
$T4 = -352						; size = 16
$T5 = -352						; size = 16
$T6 = -348						; size = 12
$T7 = -348						; size = 12
_pBoneMat$8 = -332					; size = 4
_fElapsedTime$ = -332					; size = 4
$T2$sroa$1577$1$ = -328					; size = 4
$T3$sroa$827$1$ = -328					; size = 4
_pMatrix$9 = -328					; size = 4
_matPoint$10 = -324					; size = 64
_matTranslation$11 = -260				; size = 64
_matRotation$12 = -196					; size = 64
_mat$13 = -132						; size = 64
$T14 = -68						; size = 64
$T15 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_fReachScale$ = 8					; size = 4
?Update@CWeaponTrace@@QAEXM@Z PROC			; CWeaponTrace::Update, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 60 01 00
	00		 sub	 esp, 352		; 00000160H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f9		 mov	 edi, ecx

; 29   : 	float fElapsedTime = CTimer::Instance().GetCurrentSecond() - m_fLastUpdate;

  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0001e	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00023	d8 67 04	 fsub	 DWORD PTR [edi+4]

; 30   : 	m_fLastUpdate = CTimer::Instance().GetCurrentSecond();

  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0002c	d9 9d b4 fe ff
	ff		 fstp	 DWORD PTR _fElapsedTime$[ebp]
  00032	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond

; 31   : 
; 32   : 	if (!m_pInstance)

  00037	83 7f 44 00	 cmp	 DWORD PTR [edi+68], 0
  0003b	d9 5f 04	 fstp	 DWORD PTR [edi+4]
  0003e	0f 84 08 04 00
	00		 je	 $LN14@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  00044	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 1174 :             _Myproxy = nullptr;

  00047	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 897  :         return iterator(_Myoff(), _STD addressof(_Get_data()));

  00049	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  0004c	85 c0		 test	 eax, eax
  0004e	74 0c		 je	 SHORT $LN62@Update

; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00050	8b 30		 mov	 esi, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  00052	85 f6		 test	 esi, esi
  00054	74 04		 je	 SHORT $LN61@Update

; 1166 :             _Myproxy = _Parent_proxy;

  00056	8b 36		 mov	 esi, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  00058	eb 02		 jmp	 SHORT $LN62@Update
$LN61@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  0005a	33 f6		 xor	 esi, esi
$LN62@Update:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 36   : 		for(it=m_ShortTimePointList.begin();it!=m_ShortTimePointList.end();++it)

  0005c	f3 0f 10 8d b4
	fe ff ff	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LL4@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00064	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00067	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]
  0006a	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 36   : 		for(it=m_ShortTimePointList.begin();it!=m_ShortTimePointList.end();++it)

  0006d	3b d0		 cmp	 edx, eax
  0006f	74 48		 je	 SHORT $LN3@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00071	85 f6		 test	 esi, esi
  00073	74 04		 je	 SHORT $LN97@Update
  00075	8b 06		 mov	 eax, DWORD PTR [esi]
  00077	eb 02		 jmp	 SHORT $LN98@Update
$LN97@Update:
  00079	33 c0		 xor	 eax, eax
$LN98@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0007b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 38   : 			it->first += fElapsedTime;

  0007e	0f 28 c1	 movaps	 xmm0, xmm1
  00081	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00084	49		 dec	 ecx
  00085	23 ca		 and	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 38   : 			it->first += fElapsedTime;

  00087	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  0008a	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0008e	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00092	85 f6		 test	 esi, esi
  00094	74 04		 je	 SHORT $LN109@Update
  00096	8b 06		 mov	 eax, DWORD PTR [esi]
  00098	eb 02		 jmp	 SHORT $LN110@Update
$LN109@Update:
  0009a	33 c0		 xor	 eax, eax
$LN110@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0009c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 39   : 			if (it->first>m_fLifeTime)

  0009f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000a2	49		 dec	 ecx
  000a3	23 ca		 and	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 39   : 			if (it->first>m_fLifeTime)

  000a5	42		 inc	 edx
  000a6	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  000a9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000ad	0f 2f 47 3c	 comiss	 xmm0, DWORD PTR [edi+60]
  000b1	76 b1		 jbe	 SHORT $LL4@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  000b3	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  000b6	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]
$LN3@Update:

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  000b9	8d 04 19	 lea	 eax, DWORD PTR [ecx+ebx]
  000bc	89 85 b8 fe ff
	ff		 mov	 DWORD PTR $T2$sroa$1577$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 45   : 		if (it!=m_ShortTimePointList.end())

  000c2	3b d0		 cmp	 edx, eax
  000c4	74 77		 je	 SHORT $LN10@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1152 :         if (_Parent) {

  000c6	8d 5f 08	 lea	 ebx, DWORD PTR [edi+8]
  000c9	85 db		 test	 ebx, ebx
  000cb	74 04		 je	 SHORT $LN169@Update

; 1166 :             _Myproxy = _Parent_proxy;

  000cd	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  000cf	eb 02		 jmp	 SHORT $LN170@Update
$LN169@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  000d1	33 c9		 xor	 ecx, ecx
$LN170@Update:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 46   : 		m_ShortTimePointList.erase(it,m_ShortTimePointList.end());

  000d3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000d6	8b c4		 mov	 eax, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  000d8	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  000de	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  000e5	85 c9		 test	 ecx, ecx
  000e7	74 0e		 je	 SHORT $LN180@Update

; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  000e9	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1152 :         if (_Parent) {

  000eb	85 c9		 test	 ecx, ecx
  000ed	74 04		 je	 SHORT $LN183@Update

; 1166 :             _Myproxy = _Parent_proxy;

  000ef	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  000f1	eb 02		 jmp	 SHORT $LN184@Update
$LN183@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  000f3	33 c9		 xor	 ecx, ecx
$LN184@Update:

; 1131 :             } else { // becoming invalid, disown current parent

  000f5	89 08		 mov	 DWORD PTR [eax], ecx
$LN180@Update:
  000f7	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2$sroa$1577$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 46   : 		m_ShortTimePointList.erase(it,m_ShortTimePointList.end());

  000fd	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00100	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00103	8b c4		 mov	 eax, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  00105	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0010b	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00112	85 f6		 test	 esi, esi
  00114	74 0e		 je	 SHORT $LN194@Update

; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00116	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1152 :         if (_Parent) {

  00118	85 c9		 test	 ecx, ecx
  0011a	74 04		 je	 SHORT $LN197@Update

; 1166 :             _Myproxy = _Parent_proxy;

  0011c	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  0011e	eb 02		 jmp	 SHORT $LN198@Update
$LN197@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  00120	33 c9		 xor	 ecx, ecx
$LN198@Update:

; 1131 :             } else { // becoming invalid, disown current parent

  00122	89 08		 mov	 DWORD PTR [eax], ecx
$LN194@Update:
  00124	89 50 08	 mov	 DWORD PTR [eax+8], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 46   : 		m_ShortTimePointList.erase(it,m_ShortTimePointList.end());

  00127	8b cb		 mov	 ecx, ebx
  00129	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?erase@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@0@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::erase
  00135	f3 0f 10 8d b4
	fe ff ff	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN10@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  0013d	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 897  :         return iterator(_Myoff(), _STD addressof(_Get_data()));

  00140	8b 57 28	 mov	 edx, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00143	3b f0		 cmp	 esi, eax
  00145	74 10		 je	 SHORT $LL224@Update

; 1129 :             if (_Right._Myproxy) {

  00147	85 c0		 test	 eax, eax
  00149	74 0a		 je	 SHORT $LN223@Update

; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  0014b	8b 30		 mov	 esi, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  0014d	85 f6		 test	 esi, esi
  0014f	74 04		 je	 SHORT $LN223@Update

; 1166 :             _Myproxy = _Parent_proxy;

  00151	8b 36		 mov	 esi, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  00153	eb 02		 jmp	 SHORT $LL224@Update
$LN223@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00155	33 f6		 xor	 esi, esi
$LL224@Update:
  00157	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  0015a	8b 5f 28	 mov	 ebx, DWORD PTR [edi+40]
  0015d	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 47   : 		for(it=m_LongTimePointList.begin();it!=m_LongTimePointList.end();++it)

  00160	3b d0		 cmp	 edx, eax
  00162	74 49		 je	 SHORT $LN6@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00164	85 f6		 test	 esi, esi
  00166	74 04		 je	 SHORT $LN263@Update
  00168	8b 06		 mov	 eax, DWORD PTR [esi]
  0016a	eb 02		 jmp	 SHORT $LN264@Update
$LN263@Update:
  0016c	33 c0		 xor	 eax, eax
$LN264@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0016e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 49   : 			it->first += fElapsedTime;

  00171	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00174	49		 dec	 ecx
  00175	23 ca		 and	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 49   : 			it->first += fElapsedTime;

  00177	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  0017a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0017e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00182	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00186	85 f6		 test	 esi, esi
  00188	74 04		 je	 SHORT $LN275@Update
  0018a	8b 06		 mov	 eax, DWORD PTR [esi]
  0018c	eb 02		 jmp	 SHORT $LN276@Update
$LN275@Update:
  0018e	33 c0		 xor	 eax, eax
$LN276@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00190	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 50   : 			if (it->first>m_fLifeTime)

  00193	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00196	49		 dec	 ecx
  00197	23 ca		 and	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 50   : 			if (it->first>m_fLifeTime)

  00199	42		 inc	 edx
  0019a	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  0019d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001a1	0f 2f 47 3c	 comiss	 xmm0, DWORD PTR [edi+60]
  001a5	76 b0		 jbe	 SHORT $LL224@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  001a7	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  001aa	8b 5f 28	 mov	 ebx, DWORD PTR [edi+40]
$LN6@Update:

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  001ad	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  001b0	89 85 b8 fe ff
	ff		 mov	 DWORD PTR $T3$sroa$827$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 56   : 		if (it!=m_LongTimePointList.end())

  001b6	8d 5f 1c	 lea	 ebx, DWORD PTR [edi+28]
  001b9	3b d0		 cmp	 edx, eax
  001bb	74 6c		 je	 SHORT $LN12@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1152 :         if (_Parent) {

  001bd	85 db		 test	 ebx, ebx
  001bf	74 04		 je	 SHORT $LN335@Update

; 1166 :             _Myproxy = _Parent_proxy;

  001c1	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  001c3	eb 02		 jmp	 SHORT $LN336@Update
$LN335@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  001c5	33 c9		 xor	 ecx, ecx
$LN336@Update:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 57   : 			m_LongTimePointList.erase(it, m_LongTimePointList.end());

  001c7	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001ca	8b c4		 mov	 eax, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  001cc	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  001d2	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  001d9	85 c9		 test	 ecx, ecx
  001db	74 0e		 je	 SHORT $LN346@Update

; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  001dd	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1152 :         if (_Parent) {

  001df	85 c9		 test	 ecx, ecx
  001e1	74 04		 je	 SHORT $LN349@Update

; 1166 :             _Myproxy = _Parent_proxy;

  001e3	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  001e5	eb 02		 jmp	 SHORT $LN350@Update
$LN349@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  001e7	33 c9		 xor	 ecx, ecx
$LN350@Update:

; 1131 :             } else { // becoming invalid, disown current parent

  001e9	89 08		 mov	 DWORD PTR [eax], ecx
$LN346@Update:
  001eb	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR $T3$sroa$827$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 57   : 			m_LongTimePointList.erase(it, m_LongTimePointList.end());

  001f1	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001f4	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  001f7	8b c4		 mov	 eax, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1123 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

  001f9	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  001ff	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00206	85 f6		 test	 esi, esi
  00208	74 0e		 je	 SHORT $LN360@Update

; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  0020a	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1152 :         if (_Parent) {

  0020c	85 c9		 test	 ecx, ecx
  0020e	74 04		 je	 SHORT $LN363@Update

; 1166 :             _Myproxy = _Parent_proxy;

  00210	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  00212	eb 02		 jmp	 SHORT $LN364@Update
$LN363@Update:

; 1169 :             // no future parent, just disown current parent
; 1170 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Lockit _Lock(_LOCK_DEBUG);
; 1172 :             _Orphan_me();
; 1173 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1174 :             _Myproxy = nullptr;

  00214	33 c9		 xor	 ecx, ecx
$LN364@Update:

; 1131 :             } else { // becoming invalid, disown current parent

  00216	89 08		 mov	 DWORD PTR [eax], ecx
$LN360@Update:
  00218	89 50 08	 mov	 DWORD PTR [eax+8], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 57   : 			m_LongTimePointList.erase(it, m_LongTimePointList.end());

  0021b	8b cb		 mov	 ecx, ebx
  0021d	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?erase@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@MUD3DXVECTOR3@@@std@@@std@@@std@@@2@0@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::erase
$LN12@Update:

; 58   : 	}
; 59   : 
; 60   : 	if (m_isPlaying && m_fz>=0.0001f)

  00229	83 bf 80 00 00
	00 00		 cmp	 DWORD PTR [edi+128], 0
  00230	0f 84 16 02 00
	00		 je	 $LN14@Update
  00236	f3 0f 10 47 74	 movss	 xmm0, DWORD PTR [edi+116]
  0023b	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@38d1b717
  00242	0f 82 04 02 00
	00		 jb	 $LN14@Update

; 61   : 	{
; 62   : 		D3DXMATRIX * pMatrix;
; 63   : 		if (m_pInstance->GetCompositeBoneMatrix(m_dwModelInstanceIndex, m_iBoneIndex, &pMatrix))

  00248	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  0024b	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _pMatrix$9[ebp]
  00251	50		 push	 eax
  00252	ff b7 88 00 00
	00		 push	 DWORD PTR [edi+136]
  00258	ff 77 48	 push	 DWORD PTR [edi+72]
  0025b	e8 00 00 00 00	 call	 ?GetCompositeBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ; CGraphicThingInstance::GetCompositeBoneMatrix
  00260	85 c0		 test	 eax, eax
  00262	0f 84 e4 01 00
	00		 je	 $LN14@Update

; 64   : 		{
; 65   : 			D3DXMATRIX * pBoneMat;
; 66   : 			m_pInstance->GetBoneMatrix(m_dwModelInstanceIndex, m_iBoneIndex, &pBoneMat);

  00268	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  0026b	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _pBoneMat$8[ebp]
  00271	50		 push	 eax
  00272	ff b7 88 00 00
	00		 push	 DWORD PTR [edi+136]
  00278	ff 77 48	 push	 DWORD PTR [edi+72]
  0027b	e8 00 00 00 00	 call	 ?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ; CGraphicThingInstance::GetBoneMatrix

; 67   : 			D3DXMATRIX mat = *pMatrix;

  00280	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _pMatrix$9[ebp]

; 68   : 			mat._41 = pBoneMat->_41;
; 69   : 			mat._42 = pBoneMat->_42;
; 70   : 			mat._43 = pBoneMat->_43;
; 71   : 			D3DXMATRIX matPoint;
; 72   : 			D3DXMATRIX matTranslation;
; 73   : 			D3DXMATRIX matRotation;
; 74   : 
; 75   : 			//D3DXMatrixTranslation(&matTranslation, 0.0f, m_fLength, 0.0f);
; 76   : 			D3DXMatrixTranslation(&matTranslation, 0.0f, 0.0f, m_fLength*fReachScale);

  00286	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00289	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0028c	0f 11 85 7c ff
	ff ff		 movups	 XMMWORD PTR _mat$13[ebp], xmm0
  00293	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00297	0f 11 45 8c	 movups	 XMMWORD PTR _mat$13[ebp+16], xmm0
  0029b	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  0029f	0f 11 45 9c	 movups	 XMMWORD PTR _mat$13[ebp+32], xmm0
  002a3	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]
  002a7	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pBoneMat$8[ebp]
  002ad	0f 11 45 ac	 movups	 XMMWORD PTR _mat$13[ebp+48], xmm0
  002b1	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  002b6	f3 0f 11 45 ac	 movss	 DWORD PTR _mat$13[ebp+48], xmm0
  002bb	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  002c0	f3 0f 11 45 b0	 movss	 DWORD PTR _mat$13[ebp+52], xmm0
  002c5	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  002ca	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _matTranslation$11[ebp]
  002d0	f3 0f 11 45 b4	 movss	 DWORD PTR _mat$13[ebp+56], xmm0
  002d5	f3 0f 10 47 7c	 movss	 xmm0, DWORD PTR [edi+124]
  002da	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fReachScale$[ebp]
  002df	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002e5	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  002ed	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 _D3DXMatrixTranslation@16

; 77   : 			D3DXMatrixRotationZ(&matRotation, D3DXToRadian(m_fRotation));

  002fa	f3 0f 10 47 78	 movss	 xmm0, DWORD PTR [edi+120]
  002ff	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _matRotation$12[ebp]
  00305	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0030d	51		 push	 ecx
  0030e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 _D3DXMatrixRotationZ@8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  00319	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _matRotation$12[ebp]
  0031f	50		 push	 eax
  00320	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _mat$13[ebp]
  00326	50		 push	 eax
  00327	8d 45 bc	 lea	 eax, DWORD PTR $T15[ebp]
  0032a	50		 push	 eax
  0032b	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 80   : 			matPoint = /**pMatrix*/mat * matRotation;

  00330	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR $T15[ebp]

; 87   : 			m_ShortTimePointList.push_front(

  00334	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0033a	c7 85 a0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 80   : 			matPoint = /**pMatrix*/mat * matRotation;

  00344	0f 10 55 ec	 movups	 xmm2, XMMWORD PTR $T15[ebp+48]

; 87   : 			m_ShortTimePointList.push_front(

  00348	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0034b	f3 0f 10 4f 70	 movss	 xmm1, DWORD PTR [edi+112]
  00350	0f 11 85 bc fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp], xmm0
  00357	50		 push	 eax
  00358	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR $T15[ebp+16]
  0035c	0f 11 95 ec fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp+48], xmm2
  00363	0f 11 85 cc fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp+16], xmm0
  0036a	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR $T15[ebp+32]
  0036e	0f 11 85 dc fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp+32], xmm0
  00375	f3 0f 10 47 6c	 movss	 xmm0, DWORD PTR [edi+108]
  0037a	f3 0f 58 c2	 addss	 xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0037e	f3 0f 11 85 a4
	fe ff ff	 movss	 DWORD PTR $T5[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 87   : 			m_ShortTimePointList.push_front(

  00386	0f 28 c2	 movaps	 xmm0, xmm2
  00389	0f c6 c2 55	 shufps	 xmm0, xmm2, 85		; 00000055H
  0038d	f3 0f 58 c8	 addss	 xmm1, xmm0
  00391	0f c6 d2 aa	 shufps	 xmm2, xmm2, 170		; 000000aaH
  00395	f3 0f 10 47 74	 movss	 xmm0, DWORD PTR [edi+116]
  0039a	f3 0f 58 c2	 addss	 xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0039e	f3 0f 11 8d a8
	fe ff ff	 movss	 DWORD PTR $T5[ebp+8], xmm1
  003a6	f3 0f 11 85 ac
	fe ff ff	 movss	 DWORD PTR $T5[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 87   : 			m_ShortTimePointList.push_front(

  003ae	e8 00 00 00 00	 call	 ?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  003b3	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _matPoint$10[ebp]
  003b9	50		 push	 eax
  003ba	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _matTranslation$11[ebp]
  003c0	50		 push	 eax
  003c1	8d 45 bc	 lea	 eax, DWORD PTR $T14[ebp]
  003c4	50		 push	 eax
  003c5	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 98   : 			matPoint = matTranslation * matPoint;

  003ca	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR $T14[ebp]
  003ce	0f 11 85 bc fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp], xmm0
  003d5	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR $T14[ebp+16]
  003d9	0f 11 85 cc fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp+16], xmm0
  003e0	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR $T14[ebp+32]

; 104  : 			m_LongTimePointList.push_front(

  003e4	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  003ea	8b cb		 mov	 ecx, ebx
  003ec	0f 10 55 ec	 movups	 xmm2, XMMWORD PTR $T14[ebp+48]
  003f0	50		 push	 eax
  003f1	f3 0f 10 4f 70	 movss	 xmm1, DWORD PTR [edi+112]
  003f6	0f 11 85 dc fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  003fd	c7 85 a0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 104  : 			m_LongTimePointList.push_front(

  00407	f3 0f 10 47 6c	 movss	 xmm0, DWORD PTR [edi+108]
  0040c	f3 0f 58 c2	 addss	 xmm0, xmm2
  00410	0f 11 95 ec fe
	ff ff		 movups	 XMMWORD PTR _matPoint$10[ebp+48], xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00417	f3 0f 11 85 a4
	fe ff ff	 movss	 DWORD PTR $T4[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 104  : 			m_LongTimePointList.push_front(

  0041f	0f 28 c2	 movaps	 xmm0, xmm2
  00422	0f c6 c2 55	 shufps	 xmm0, xmm2, 85		; 00000055H
  00426	f3 0f 58 c8	 addss	 xmm1, xmm0
  0042a	0f c6 d2 aa	 shufps	 xmm2, xmm2, 170		; 000000aaH
  0042e	f3 0f 10 47 74	 movss	 xmm0, DWORD PTR [edi+116]
  00433	f3 0f 58 c2	 addss	 xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00437	f3 0f 11 8d a8
	fe ff ff	 movss	 DWORD PTR $T4[ebp+8], xmm1
  0043f	f3 0f 11 85 ac
	fe ff ff	 movss	 DWORD PTR $T4[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 104  : 			m_LongTimePointList.push_front(

  00447	e8 00 00 00 00	 call	 ?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
$LN14@Update:

; 105  : 				TTimePoint(
; 106  : 					0.0f,
; 107  : 					D3DXVECTOR3(
; 108  : 						m_fx + matPoint._41,
; 109  : 						m_fy + matPoint._42,
; 110  : 						m_fz + matPoint._43
; 111  : 						)
; 112  : 					)
; 113  : 				);
; 114  : 		}
; 115  : 	}
; 116  : 
; 117  : 	//if (!BuildVertex())
; 118  : 	//	return;
; 119  : }

  0044c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0044f	5f		 pop	 edi
  00450	5e		 pop	 esi
  00451	33 cd		 xor	 ecx, ebp
  00453	5b		 pop	 ebx
  00454	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00459	8b e5		 mov	 esp, ebp
  0045b	5d		 pop	 ebp
  0045c	c2 04 00	 ret	 4
?Update@CWeaponTrace@@QAEXM@Z ENDP			; CWeaponTrace::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?SetSamplingTime@CWeaponTrace@@QAEXM@Z
_TEXT	SEGMENT
_fSamplingTime$ = 8					; size = 4
?SetSamplingTime@CWeaponTrace@@QAEXM@Z PROC		; CWeaponTrace::SetSamplingTime, COMDAT
; _this$ = ecx

; 417  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 418  : 	m_fSamplingTime = fSamplingTime;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fSamplingTime$[ebp]
  00008	f3 0f 11 41 40	 movss	 DWORD PTR [ecx+64], xmm0

; 419  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetSamplingTime@CWeaponTrace@@QAEXM@Z ENDP		; CWeaponTrace::SetSamplingTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?SetLifeTime@CWeaponTrace@@QAEXM@Z
_TEXT	SEGMENT
_fLifeTime$ = 8						; size = 4
?SetLifeTime@CWeaponTrace@@QAEXM@Z PROC			; CWeaponTrace::SetLifeTime, COMDAT
; _this$ = ecx

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 413  : 	m_fLifeTime = fLifeTime;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLifeTime$[ebp]
  00008	f3 0f 11 41 3c	 movss	 DWORD PTR [ecx+60], xmm0

; 414  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetLifeTime@CWeaponTrace@@QAEXM@Z ENDP			; CWeaponTrace::SetLifeTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?SetRotation@CWeaponTrace@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CWeaponTrace@@QAEXM@Z PROC			; CWeaponTrace::SetRotation, COMDAT
; _this$ = ecx

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 408  : 	m_fRotation = fRotation;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  00008	f3 0f 11 41 78	 movss	 DWORD PTR [ecx+120], xmm0

; 409  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetRotation@CWeaponTrace@@QAEXM@Z ENDP			; CWeaponTrace::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?SetPosition@CWeaponTrace@@QAEXMMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
?SetPosition@CWeaponTrace@@QAEXMMM@Z PROC		; CWeaponTrace::SetPosition, COMDAT
; _this$ = ecx

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 401  : 	m_fx = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 41 6c	 movss	 DWORD PTR [ecx+108], xmm0

; 402  : 	m_fy = fy;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	f3 0f 11 41 70	 movss	 DWORD PTR [ecx+112], xmm0

; 403  : 	m_fz = fz;

  00017	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001c	f3 0f 11 41 74	 movss	 DWORD PTR [ecx+116], xmm0

; 404  : }

  00021	5d		 pop	 ebp
  00022	c2 0c 00	 ret	 12			; 0000000cH
?SetPosition@CWeaponTrace@@QAEXMMM@Z ENDP		; CWeaponTrace::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?SetWeaponInstance@CWeaponTrace@@QAE_NPAVCGraphicThingInstance@@KPBD@Z
_TEXT	SEGMENT
tv459 = -40						; size = 8
_pmat$ = -40						; size = 4
_v3Max$ = -28						; size = 12
_v3Min$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pInstance$ = 8						; size = 4
_dwModelIndex$ = 12					; size = 4
_c_szBoneName$ = 16					; size = 4
?SetWeaponInstance@CWeaponTrace@@QAE_NPAVCGraphicThingInstance@@KPBD@Z PROC ; CWeaponTrace::SetWeaponInstance, COMDAT
; _this$ = ecx

; 371  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 28	 mov	 DWORD PTR __$ArrayPad$[esp+44], eax
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	8b 75 08	 mov	 esi, DWORD PTR _pInstance$[ebp]
  00019	8b d9		 mov	 ebx, ecx
  0001b	57		 push	 edi

; 372  : 	pInstance->Update();

  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ?Update@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Update

; 373  : 	pInstance->DeformNoSkin();

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?DeformNoSkin@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::DeformNoSkin

; 374  : 
; 375  : 	D3DXVECTOR3 v3Min;
; 376  : 	D3DXVECTOR3 v3Max;
; 377  : 	if (!pInstance->GetBoundBox(dwModelIndex, &v3Min, &v3Max))

  0002a	8b 7d 0c	 mov	 edi, DWORD PTR _dwModelIndex$[ebp]
  0002d	8d 44 24 1c	 lea	 eax, DWORD PTR _v3Max$[esp+56]
  00031	50		 push	 eax
  00032	8d 44 24 2c	 lea	 eax, DWORD PTR _v3Min$[esp+60]
  00036	8b ce		 mov	 ecx, esi
  00038	50		 push	 eax
  00039	57		 push	 edi
  0003a	e8 00 00 00 00	 call	 ?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
  0003f	85 c0		 test	 eax, eax
  00041	75 16		 jne	 SHORT $LN2@SetWeaponI

; 378  : 		return false;

  00043	32 c0		 xor	 al, al

; 397  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b 4c 24 28	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+44]
  0004c	33 cc		 xor	 ecx, esp
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 0c 00	 ret	 12			; 0000000cH
$LN2@SetWeaponI:

; 379  : 
; 380  : 	m_iBoneIndex = 0;
; 381  : 	m_dwModelInstanceIndex = dwModelIndex;
; 382  : 
; 383  : 	m_pInstance = pInstance;
; 384  : 	D3DXMATRIX * pmat;
; 385  : 	pInstance->GetBoneMatrix(dwModelIndex, 0, &pmat);

  00059	8d 44 24 10	 lea	 eax, DWORD PTR _pmat$[esp+56]
  0005d	c7 83 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+136], 0
  00067	50		 push	 eax
  00068	6a 00		 push	 0
  0006a	57		 push	 edi
  0006b	8b ce		 mov	 ecx, esi
  0006d	89 7b 48	 mov	 DWORD PTR [ebx+72], edi
  00070	89 73 44	 mov	 DWORD PTR [ebx+68], esi
  00073	e8 00 00 00 00	 call	 ?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ; CGraphicThingInstance::GetBoneMatrix
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00078	8b 44 24 10	 mov	 eax, DWORD PTR _pmat$[esp+56]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 388  : 	m_fLength =

  0007c	83 ec 08	 sub	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0007f	f3 0f 10 60 30	 movss	 xmm4, DWORD PTR [eax+48]

; 181  :     y = fy;

  00084	f3 0f 10 68 34	 movss	 xmm5, DWORD PTR [eax+52]

; 182  :     z = fz;

  00089	0f 28 cc	 movaps	 xmm1, xmm4
  0008c	f3 0f 5c 4c 24
	24		 subss	 xmm1, DWORD PTR _v3Max$[esp+64]
  00092	f3 0f 10 58 38	 movss	 xmm3, DWORD PTR [eax+56]

; 180  :     x = fx;

  00097	0f 28 d5	 movaps	 xmm2, xmm5
  0009a	f3 0f 5c 54 24
	28		 subss	 xmm2, DWORD PTR _v3Max$[esp+68]
  000a0	f3 0f 5c 6c 24
	34		 subss	 xmm5, DWORD PTR _v3Min$[esp+68]

; 182  :     z = fz;

  000a6	f3 0f 5c 64 24
	30		 subss	 xmm4, DWORD PTR _v3Min$[esp+64]
  000ac	0f 28 c3	 movaps	 xmm0, xmm3

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000af	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 181  :     y = fy;

  000b3	f3 0f 5c 44 24
	2c		 subss	 xmm0, DWORD PTR _v3Max$[esp+72]
  000b9	f3 0f 5c 5c 24
	38		 subss	 xmm3, DWORD PTR _v3Min$[esp+72]

; 182  :     z = fz;

  000bf	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 388  : 	m_fLength =

  000c3	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000c7	f3 0f 59 e4	 mulss	 xmm4, xmm4
  000cb	f3 0f 58 d1	 addss	 xmm2, xmm1
  000cf	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000d3	f3 0f 58 ec	 addss	 xmm5, xmm4
  000d7	f3 0f 59 db	 mulss	 xmm3, xmm3
  000db	f3 0f 58 d0	 addss	 xmm2, xmm0
  000df	f3 0f 58 eb	 addss	 xmm5, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 388  : 	m_fLength =

  000e3	f3 0f 11 54 24
	04		 movss	 DWORD PTR [esp+4], xmm2
  000e9	f3 0f 11 2c 24	 movss	 DWORD PTR [esp], xmm5
  000ee	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000f3	dd 5c 24 18	 fstp	 QWORD PTR tv459[esp+64]
  000f7	f2 0f 10 44 24
	18		 movsd	 xmm0, QWORD PTR tv459[esp+64]
  000fd	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 388  : 	m_fLength =

  00100	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00103	66 0f 2e c8	 ucomisd xmm1, xmm0
  00107	77 06		 ja	 SHORT $LN20@SetWeaponI
  00109	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0010d	eb 05		 jmp	 SHORT $LN21@SetWeaponI
$LN20@SetWeaponI:
  0010f	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN21@SetWeaponI:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 397  : }

  00114	8b 4c 24 34	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+56]
  00118	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0011a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 397  : }

  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	f3 0f 11 43 7c	 movss	 DWORD PTR [ebx+124], xmm0
  00125	5b		 pop	 ebx
  00126	33 cc		 xor	 ecx, esp
  00128	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 0c 00	 ret	 12			; 0000000cH
?SetWeaponInstance@CWeaponTrace@@QAE_NPAVCGraphicThingInstance@@KPBD@Z ENDP ; CWeaponTrace::SetWeaponInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?SetTexture@CWeaponTrace@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetTexture@CWeaponTrace@@QAEXPBD@Z PROC		; CWeaponTrace::SetTexture, COMDAT
; _this$ = ecx

; 362  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 363  : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer("lot_ade10-2.tga");

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NCBBOAJD@lot_ade10?92?4tga@
  0000e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 364  : 	m_ImageInstance.SetImagePointer(pImage);

  00013	50		 push	 eax
  00014	8d 4e 4c	 lea	 ecx, DWORD PTR [esi+76]
  00017	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
  0001c	5e		 pop	 esi

; 365  : 
; 366  : 	//CGraphicTexture * pTexture = m_ImageInstance.GetTexturePointer();
; 367  : 	//m_lpTexture = pTexture->GetD3DTexture();
; 368  : }

  0001d	c2 04 00	 ret	 4
?SetTexture@CWeaponTrace@@QAEXPBD@Z ENDP		; CWeaponTrace::SetTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?UseTexture@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
?UseTexture@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::UseTexture, COMDAT
; _this$ = ecx

; 358  : 	m_bUseTexture = true;

  00000	c6 81 84 00 00
	00 01		 mov	 BYTE PTR [ecx+132], 1

; 359  : }

  00007	c3		 ret	 0
?UseTexture@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::UseTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?UseAlpha@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
?UseAlpha@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::UseAlpha, COMDAT
; _this$ = ecx

; 353  : 	m_bUseTexture = false;

  00000	c6 81 84 00 00
	00 00		 mov	 BYTE PTR [ecx+132], 0

; 354  : }

  00007	c3		 ret	 0
?UseAlpha@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::UseAlpha
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?TurnOff@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
?TurnOff@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::TurnOff, COMDAT
; _this$ = ecx

; 427  : 	m_isPlaying = FALSE;

  00000	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0

; 428  : 	//Clear();
; 429  : }

  0000a	c3		 ret	 0
?TurnOff@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::TurnOff
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?TurnOn@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
?TurnOn@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::TurnOn, COMDAT
; _this$ = ecx

; 423  : 	m_isPlaying = TRUE;

  00000	c7 81 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+128], 1

; 424  : }

  0000a	c3		 ret	 0
?TurnOn@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::TurnOn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?Clear@CWeaponTrace@@QAEXXZ
_TEXT	SEGMENT
?Clear@CWeaponTrace@@QAEXXZ PROC			; CWeaponTrace::Clear, COMDAT
; _this$ = ecx

; 432  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 433  : 	//m_PDTVertexVector.clear();
; 434  : 	//m_CurvingTraceVector.clear();
; 435  : 
; 436  : 	m_ShortTimePointList.clear();

  00003	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1325 :         _Tidy();

  00006	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 437  : 	m_LongTimePointList.clear();

  0000b	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1325 :         _Tidy();

  0000e	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 438  : 	Initialize();

  00013	8b ce		 mov	 ecx, esi
  00015	5e		 pop	 esi
  00016	e9 00 00 00 00	 jmp	 ?Initialize@CWeaponTrace@@QAEXXZ ; CWeaponTrace::Initialize
?Clear@CWeaponTrace@@QAEXXZ ENDP			; CWeaponTrace::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ??1CWeaponTrace@@UAE@XZ
_TEXT	SEGMENT
__Proxy_allocator$1 = -1				; size = 1
__Proxy_allocator$2 = -1				; size = 1
??1CWeaponTrace@@UAE@XZ PROC				; CWeaponTrace::~CWeaponTrace, COMDAT
; _this$ = ecx

; 485  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 486  : }

  00008	8d 4f 4c	 lea	 ecx, DWORD PTR [edi+76]
  0000b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWeaponTrace@@6B@
  00011	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00016	8b 77 30	 mov	 esi, DWORD PTR [edi+48]
  00019	85 f6		 test	 esi, esi
  0001b	74 3b		 je	 SHORT $LN6@CWeaponTra

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0001d	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  00020	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00025	2b ce		 sub	 ecx, esi
  00027	f7 e9		 imul	 ecx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00036	c1 e0 03	 shl	 eax, 3
  00039	50		 push	 eax
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00040	c7 47 30 00 00
	00 00		 mov	 DWORD PTR [edi+48], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00047	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004a	c7 47 34 00 00
	00 00		 mov	 DWORD PTR [edi+52], 0

; 1699 :             _Myend   = pointer();

  00051	c7 47 38 00 00
	00 00		 mov	 DWORD PTR [edi+56], 0
$LN6@CWeaponTra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 869  :         _Tidy();

  00058	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  0005b	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00060	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00063	50		 push	 eax
  00064	8d 45 ff	 lea	 eax, DWORD PTR __Proxy_allocator$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00067	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	83 c4 08	 add	 esp, 8

; 869  :         _Tidy();

  00077	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0007a	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0007f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00082	50		 push	 eax
  00083	8d 45 ff	 lea	 eax, DWORD PTR __Proxy_allocator$1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00086	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00093	83 c4 08	 add	 esp, 8
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 486  : }

  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
??1CWeaponTrace@@UAE@XZ ENDP				; CWeaponTrace::~CWeaponTrace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ??0CWeaponTrace@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CWeaponTrace@@QAE@XZ PROC				; CWeaponTrace::CWeaponTrace, COMDAT
; _this$ = ecx

; 481  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWeaponTrace@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CWeaponTrace@@6B@
  00033	8d 7b 08	 lea	 edi, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00036	6a 08		 push	 8

; 1092 :     _Container_base12() noexcept : _Myproxy(nullptr) {}

  00038	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 543  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  0003e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00045	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0004c	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00053	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1102 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  0005f	8b f0		 mov	 esi, eax

; 1103 :         _Construct_in_place(*_New_proxy, this);

  00061	89 7d f0	 mov	 DWORD PTR $T3[ebp], edi
  00064	8d 45 f0	 lea	 eax, DWORD PTR $T3[ebp]
  00067	50		 push	 eax
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1104 :         _Myproxy            = _New_proxy;

  0006e	89 37		 mov	 DWORD PTR [edi], esi

; 1105 :         _New_proxy->_Mycont = this;

  00070	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 481  : {

  00072	8d 7b 1c	 lea	 edi, DWORD PTR [ebx+28]
  00075	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007c	6a 08		 push	 8

; 1092 :     _Container_base12() noexcept : _Myproxy(nullptr) {}

  0007e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 543  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  00084	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0008b	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00092	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00099	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a0	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1102 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  000a5	8b f0		 mov	 esi, eax

; 1103 :         _Construct_in_place(*_New_proxy, this);

  000a7	89 7d f0	 mov	 DWORD PTR $T2[ebp], edi
  000aa	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000ad	50		 push	 eax
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1104 :         _Myproxy            = _New_proxy;

  000b4	89 37		 mov	 DWORD PTR [edi], esi
  000b6	83 c4 18	 add	 esp, 24			; 00000018H

; 1105 :         _New_proxy->_Mycont = this;

  000b9	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000bb	c7 43 30 00 00
	00 00		 mov	 DWORD PTR [ebx+48], 0
  000c2	c7 43 34 00 00
	00 00		 mov	 DWORD PTR [ebx+52], 0
  000c9	c7 43 38 00 00
	00 00		 mov	 DWORD PTR [ebx+56], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 481  : {

  000d0	8d 4b 4c	 lea	 ecx, DWORD PTR [ebx+76]
  000d3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000d7	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance

; 482  : 	Initialize();

  000dc	8b cb		 mov	 ecx, ebx
  000de	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e2	e8 00 00 00 00	 call	 ?Initialize@CWeaponTrace@@QAEXXZ ; CWeaponTrace::Initialize

; 483  : }

  000e7	8b c3		 mov	 eax, ebx
  000e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f3	59		 pop	 ecx
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CWeaponTrace@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e9 00 00 00 00	 jmp	 ??1?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::~deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >
__unwindfunclet$??0CWeaponTrace@@QAE@XZ$1:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00011	e9 00 00 00 00	 jmp	 ??1?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::~deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >
__unwindfunclet$??0CWeaponTrace@@QAE@XZ$2:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 30	 add	 ecx, 48			; 00000030H
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@USPDTVertex@@V?$allocator@USPDTVertex@@@std@@@std@@QAE@XZ ; std::vector<SPDTVertex,std::allocator<SPDTVertex> >::~vector<SPDTVertex,std::allocator<SPDTVertex> >
__unwindfunclet$??0CWeaponTrace@@QAE@XZ$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00027	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$??0CWeaponTrace@@QAE@XZ:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CWeaponTrace@@QAE@XZ
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CWeaponTrace@@QAE@XZ ENDP				; CWeaponTrace::CWeaponTrace
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?New@CWeaponTrace@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CWeaponTrace@@SAPAV1@XZ PROC			; CWeaponTrace::New, COMDAT

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CWeaponTrace@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+16, ecx
  00030	0f 85 87 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	68 8c 00 00 00	 push	 140			; 0000008cH
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 c0		 test	 eax, eax
  0004f	74 0b		 je	 SHORT $LN6@New
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??0CWeaponTrace@@QAE@XZ	; CWeaponTrace::CWeaponTrace
  00058	8b f0		 mov	 esi, eax
  0005a	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  0005c	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006d	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+12
  00073	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00075	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 24   : 	return ms_kPool.Alloc();

  00077	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00079	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00080	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 25   : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5e		 pop	 esi
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00096	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00099	51		 push	 ecx
  0009a	50		 push	 eax
  0009b	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+4
  000a0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a5	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 24   : 	return ms_kPool.Alloc();

  000ab	8b c6		 mov	 eax, esi

; 25   : }

  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5e		 pop	 esi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000bd	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000c0	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c3	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 25   : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5e		 pop	 esi
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CWeaponTrace@@SAPAV1@XZ$0:
  00000	68 8c 00 00 00	 push	 140			; 0000008cH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CWeaponTrace@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CWeaponTrace@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CWeaponTrace@@SAPAV1@XZ ENDP			; CWeaponTrace::New
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?Delete@CWeaponTrace@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkWTDel$ = 8						; size = 4
?Delete@CWeaponTrace@@SAXPAV1@@Z PROC			; CWeaponTrace::Delete, COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 16   : 	assert(pkWTDel!=NULL && "CWeaponTrace::Delete");
; 17   : 
; 18   : 	pkWTDel->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkWTDel$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CWeaponTrace@@QAEXXZ ; CWeaponTrace::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 19   : 	ms_kPool.Free(pkWTDel);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 20   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 20   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CWeaponTrace@@SAXPAV1@@Z ENDP			; CWeaponTrace::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp
;	COMDAT ?DestroySystem@CWeaponTrace@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CWeaponTrace@@SAXXZ PROC			; CWeaponTrace::DestroySystem, COMDAT

; 10   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 10   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 12   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+16
  00041	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\WeaponTrace.cpp

; 12   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CWeaponTrace@@1V?$CDynamicPool@VCWeaponTrace@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CWeaponTrace@@SAXXZ ENDP			; CWeaponTrace::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 89   :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
