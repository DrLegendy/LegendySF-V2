; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	?MAPOUTDOOR_GET_HEIGHT_USE2D@@3_NA		; MAPOUTDOOR_GET_HEIGHT_USE2D
PUBLIC	?MAPOUTDOOR_GET_HEIGHT_TRACE@@3_NA		; MAPOUTDOOR_GET_HEIGHT_TRACE
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
_BSS	SEGMENT
?MAPOUTDOOR_GET_HEIGHT_TRACE@@3_NA DB 01H DUP (?)	; MAPOUTDOOR_GET_HEIGHT_TRACE
_BSS	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?MAPOUTDOOR_GET_HEIGHT_USE2D@@3_NA DB 01H		; MAPOUTDOOR_GET_HEIGHT_USE2D
_DATA	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0D3DXPLANE@@QAE@XZ				; D3DXPLANE::D3DXPLANE
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1SpherePackCallback@@UAE@XZ			; SpherePackCallback::~SpherePackCallback
PUBLIC	?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::VisibilityCallback
PUBLIC	?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; SpherePackCallback::RayTraceCallback
PUBLIC	?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::RangeTestCallback
PUBLIC	?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::PointTest2dCallback
PUBLIC	??_GSpherePackCallback@@UAEPAXI@Z		; SpherePackCallback::`scalar deleting destructor'
PUBLIC	??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
PUBLIC	??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
PUBLIC	??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QAE@XZ ; std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >
PUBLIC	??_ECTerrainPatchProxy@@UAEPAXI@Z		; CTerrainPatchProxy::`vector deleting destructor'
PUBLIC	??1?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAE@XZ ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::~vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >
PUBLIC	?_Xlength@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@CAXXZ ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Xlength
PUBLIC	??0CMapOutdoor@@QAE@XZ				; CMapOutdoor::CMapOutdoor
PUBLIC	??1CMapOutdoor@@UAE@XZ				; CMapOutdoor::~CMapOutdoor
PUBLIC	?OnBeginEnvironment@CMapOutdoor@@UAEXXZ		; CMapOutdoor::OnBeginEnvironment
PUBLIC	?Initialize@CMapOutdoor@@MAE_NXZ		; CMapOutdoor::Initialize
PUBLIC	?InitializeFog@CMapOutdoor@@IAEXXZ		; CMapOutdoor::InitializeFog
PUBLIC	?Destroy@CMapOutdoor@@MAE_NXZ			; CMapOutdoor::Destroy
PUBLIC	?OnSetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ	; CMapOutdoor::OnSetEnvironmentDataPtr
PUBLIC	?OnResetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ	; CMapOutdoor::OnResetEnvironmentDataPtr
PUBLIC	?OnPreAssignTerrainPtr@CMapOutdoor@@MAEXXZ	; CMapOutdoor::OnPreAssignTerrainPtr
PUBLIC	?GetHeight@CMapOutdoor@@UAEMMM@Z		; CMapOutdoor::GetHeight
PUBLIC	?GetCacheHeight@CMapOutdoor@@UAEMMM@Z		; CMapOutdoor::GetCacheHeight
PUBLIC	?Clear@CMapOutdoor@@UAEXXZ			; CMapOutdoor::Clear
PUBLIC	?SetEnvironmentScreenFilter@CMapOutdoor@@QAEXXZ	; CMapOutdoor::SetEnvironmentScreenFilter
PUBLIC	?SetEnvironmentSkyBox@CMapOutdoor@@QAEXXZ	; CMapOutdoor::SetEnvironmentSkyBox
PUBLIC	?SetEnvironmentLensFlare@CMapOutdoor@@QAEXXZ	; CMapOutdoor::SetEnvironmentLensFlare
PUBLIC	?ClearGuildArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::ClearGuildArea
PUBLIC	?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z	; CMapOutdoor::RegisterGuildArea
PUBLIC	?VisibleMarkedArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::VisibleMarkedArea
PUBLIC	?DisableMarkedArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::DisableMarkedArea
PUBLIC	?SetWireframe@CMapOutdoor@@QAEX_N@Z		; CMapOutdoor::SetWireframe
PUBLIC	?IsWireframe@CMapOutdoor@@QAE_NXZ		; CMapOutdoor::IsWireframe
PUBLIC	?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z ; CMapOutdoor::GetPickingPointWithRay
PUBLIC	?GetPickingPointWithRayOnlyTerrain@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z ; CMapOutdoor::GetPickingPointWithRayOnlyTerrain
PUBLIC	?GetPickingPoint@CMapOutdoor@@QAE_NPAUD3DXVECTOR3@@@Z ; CMapOutdoor::GetPickingPoint
PUBLIC	?SetTerrainCount@CMapOutdoor@@QAE_NFF@Z		; CMapOutdoor::SetTerrainCount
PUBLIC	?SetDrawShadow@CMapOutdoor@@QAEX_N@Z		; CMapOutdoor::SetDrawShadow
PUBLIC	?SetDrawCharacterShadow@CMapOutdoor@@QAEX_N@Z	; CMapOutdoor::SetDrawCharacterShadow
PUBLIC	?GetShadowMapColor@CMapOutdoor@@QAEKMM@Z	; CMapOutdoor::GetShadowMapColor
PUBLIC	?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
PUBLIC	?SaveAlphaFogOperation@CMapOutdoor@@IAEXXZ	; CMapOutdoor::SaveAlphaFogOperation
PUBLIC	?RestoreAlphaFogOperation@CMapOutdoor@@IAEXXZ	; CMapOutdoor::RestoreAlphaFogOperation
PUBLIC	?GetHeightMap@CMapOutdoor@@IAEXABEPAPAG@Z	; CMapOutdoor::GetHeightMap
PUBLIC	?GetNormalMap@CMapOutdoor@@IAEXABEPAPAD@Z	; CMapOutdoor::GetNormalMap
PUBLIC	?GetWaterMap@CMapOutdoor@@IAEXABEPAPAE@Z	; CMapOutdoor::GetWaterMap
PUBLIC	?GetWaterHeight@CMapOutdoor@@IAEXEEPAJ@Z	; CMapOutdoor::GetWaterHeight
PUBLIC	??1?$map@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@U?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >
PUBLIC	?DestroyTerrain@CMapOutdoor@@MAEXXZ		; CMapOutdoor::DestroyTerrain
PUBLIC	?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ ; CMapOutdoor::CreateTerrainPatchProxyList
PUBLIC	?DestroyTerrainPatchProxyList@CMapOutdoor@@IAEXXZ ; CMapOutdoor::DestroyTerrainPatchProxyList
PUBLIC	?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
PUBLIC	?GetTerrainHeight@CMapOutdoor@@QAEMMM@Z		; CMapOutdoor::GetTerrainHeight
PUBLIC	?GetWaterHeight@CMapOutdoor@@QAE_NHHPAJ@Z	; CMapOutdoor::GetWaterHeight
PUBLIC	?GetNormal@CMapOutdoor@@QAE_NHHPAUD3DXVECTOR3@@@Z ; CMapOutdoor::GetNormal
PUBLIC	?DestroyArea@CMapOutdoor@@MAEXXZ		; CMapOutdoor::DestroyArea
PUBLIC	?ConvertToMapCoords@CMapOutdoor@@IAEXMMPAH0PAE1PAG2@Z ; CMapOutdoor::ConvertToMapCoords
PUBLIC	?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
PUBLIC	?GetHeight@CMapOutdoor@@QAEMPAM@Z		; CMapOutdoor::GetHeight
PUBLIC	?GetBrushColor@CMapOutdoor@@QAE_NMMPAM0@Z	; CMapOutdoor::GetBrushColor
PUBLIC	?isAttrOn@CMapOutdoor@@QAE_NMME@Z		; CMapOutdoor::isAttrOn
PUBLIC	?GetAttr@CMapOutdoor@@QAE_NMMPAE@Z		; CMapOutdoor::GetAttr
PUBLIC	?isAttrOn@CMapOutdoor@@QAE_NHHE@Z		; CMapOutdoor::isAttrOn
PUBLIC	?GetAttr@CMapOutdoor@@QAE_NHHPAE@Z		; CMapOutdoor::GetAttr
PUBLIC	?GetTerrainNum@CMapOutdoor@@QAE_NMMPAE@Z	; CMapOutdoor::GetTerrainNum
PUBLIC	?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
PUBLIC	??1?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::~vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >
PUBLIC	??1?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::~vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >
PUBLIC	?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z ; CMapOutdoor::BuildViewFrustum
PUBLIC	??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >
PUBLIC	?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
PUBLIC	??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >
PUBLIC	?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	??1?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAE@XZ ; std::list<tagRECT,std::allocator<tagRECT> >::~list<tagRECT,std::allocator<tagRECT> >
PUBLIC	??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ	; CDynamicPool<CMonsterAreaInfo>::~CDynamicPool<CMonsterAreaInfo>
PUBLIC	?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ ; CDynamicPool<CMonsterAreaInfo>::Alloc
PUBLIC	?Delete@?$CDynamicPool@VCMonsterAreaInfo@@@@KAXPAVCMonsterAreaInfo@@@Z ; CDynamicPool<CMonsterAreaInfo>::Delete
PUBLIC	??_G?$CDynamicPool@VCMonsterAreaInfo@@@@UAEPAXI@Z ; CDynamicPool<CMonsterAreaInfo>::`scalar deleting destructor'
PUBLIC	?AddMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJ@Z ; CMapOutdoor::AddMonsterAreaInfo
PUBLIC	?RemoveAllMonsterAreaInfo@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RemoveAllMonsterAreaInfo
PUBLIC	?GetMonsterAreaInfoFromVectorIndex@CMapOutdoor@@QAE_NKPAPAVCMonsterAreaInfo@@@Z ; CMapOutdoor::GetMonsterAreaInfoFromVectorIndex
PUBLIC	?AddNewMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJW4EMonsterAreaInfoType@2@KKW4EMonsterDir@2@@Z ; CMapOutdoor::AddNewMonsterAreaInfo
PUBLIC	?GetBaseXY@CMapOutdoor@@QAEXPAK0@Z		; CMapOutdoor::GetBaseXY
PUBLIC	?SetBaseXY@CMapOutdoor@@QAEXKK@Z		; CMapOutdoor::SetBaseXY
PUBLIC	?EnablePortal@CMapOutdoor@@QAEX_N@Z		; CMapOutdoor::EnablePortal
PUBLIC	?__XMasTree_Initialize@CMapOutdoor@@AAEXXZ	; CMapOutdoor::__XMasTree_Initialize
PUBLIC	?__XMasTree_Create@CMapOutdoor@@AAEXMMMPBD0@Z	; CMapOutdoor::__XMasTree_Create
PUBLIC	?XMasTree_Destroy@CMapOutdoor@@QAEXXZ		; CMapOutdoor::XMasTree_Destroy
PUBLIC	?XMasTree_Set@CMapOutdoor@@QAEXMMMPBD0@Z	; CMapOutdoor::XMasTree_Set
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Insert_node
PUBLIC	??1?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >::~map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >
PUBLIC	?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z ; CMapOutdoor::SpecialEffect_Create
PUBLIC	?SpecialEffect_Delete@CMapOutdoor@@QAEXK@Z	; CMapOutdoor::SpecialEffect_Delete
PUBLIC	?SpecialEffect_Destroy@CMapOutdoor@@QAEXXZ	; CMapOutdoor::SpecialEffect_Destroy
PUBLIC	??0?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
PUBLIC	??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::~vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
PUBLIC	?_Xlength@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@CAXXZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Xlength
PUBLIC	??1SHeightCache@CMapOutdoor@@QAE@XZ		; CMapOutdoor::SHeightCache::~SHeightCache
PUBLIC	?__HeightCache_Init@CMapOutdoor@@AAEXXZ		; CMapOutdoor::__HeightCache_Init
PUBLIC	?__HeightCache_Update@CMapOutdoor@@AAEXXZ	; CMapOutdoor::__HeightCache_Update
PUBLIC	?SetEnvironmentDataName@CMapOutdoor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMapOutdoor::SetEnvironmentDataName
PUBLIC	??_GCMapOutdoor@@UAEPAXI@Z			; CMapOutdoor::`scalar deleting destructor'
PUBLIC	??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ	; RangeTester<FGetObjectHeight>::~RangeTester<FGetObjectHeight>
PUBLIC	?RayTraceCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<FGetObjectHeight>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetObjectHeight>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetObjectHeight>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetObjectHeight>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UFGetObjectHeight@@@@UAEPAXI@Z ; RangeTester<FGetObjectHeight>::`scalar deleting destructor'
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::~_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Insert_node
PUBLIC	??1?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAE@XZ ; std::map<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> > >::~map<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> > >
PUBLIC	??$_Emplace_reallocate@ABUSItem@SHeightCache@CMapOutdoor@@@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAEPAUSItem@SHeightCache@CMapOutdoor@@QAU234@ABU234@@Z ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Emplace_reallocate<CMapOutdoor::SHeightCache::SItem const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >
PUBLIC	??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Emplace_reallocate<CMonsterAreaInfo * const &>
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Destroy_range@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAXPAUSItem@SHeightCache@CMapOutdoor@@QAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z ; std::_Destroy_range<std::allocator<CMapOutdoor::SHeightCache::SItem> >
PUBLIC	??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Destroy_range<std::allocator<CTerrain *> >
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<float,long> > >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXPAPAVCMonsterAreaInfo@@QAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z ; std::_Destroy_range<std::allocator<CMonsterAreaInfo *> >
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$_Pocca@V?$allocator@PAVCArea@@@std@@@std@@YAXAAV?$allocator@PAVCArea@@@0@ABV10@@Z ; std::_Pocca<std::allocator<CArea *> >
PUBLIC	??$_Pocca@V?$allocator@PAVCTerrain@@@std@@@std@@YAXAAV?$allocator@PAVCTerrain@@@0@ABV10@@Z ; std::_Pocca<std::allocator<CTerrain *> >
PUBLIC	??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ; std::_Destroy_range<std::allocator<CMapOutdoor::TPatchDrawStruct> >
PUBLIC	??$_Pocca@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXAAV?$allocator@PAVCMonsterAreaInfo@@@0@ABV10@@Z ; std::_Pocca<std::allocator<CMonsterAreaInfo *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicObjectInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??1?$RangeTester@UFGetPickingPoint@@@@UAE@XZ	; RangeTester<FGetPickingPoint>::~RangeTester<FGetPickingPoint>
PUBLIC	?RayTraceCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<FGetPickingPoint>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetPickingPoint>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetPickingPoint>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetPickingPoint>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UFGetPickingPoint@@@@UAEPAXI@Z ; RangeTester<FGetPickingPoint>::`scalar deleting destructor'
PUBLIC	??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::_Find_lower_bound<int>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<tagRECT,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *>
PUBLIC	??$_Uninitialized_move@PAUSItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@QAU123@0PAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z ; std::_Uninitialized_move<CMapOutdoor::SHeightCache::SItem *,std::allocator<CMapOutdoor::SHeightCache::SItem> >
PUBLIC	??$_Uninitialized_move@PAPAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAPAPAVCMonsterAreaInfo@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z ; std::_Uninitialized_move<CMonsterAreaInfo * *,std::allocator<CMonsterAreaInfo *> >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
PUBLIC	??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
PUBLIC	??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ; std::_Refancy<CArea * *,0>
PUBLIC	??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
PUBLIC	??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ; std::_Refancy<CTerrain * *,0>
PUBLIC	??$_Copy_memmove@PAPAVCMonsterAreaInfo@@PAPAV1@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@00@Z ; std::_Copy_memmove<CMonsterAreaInfo * *,CMonsterAreaInfo * *>
PUBLIC	??$_Refancy@PAPAVCMonsterAreaInfo@@$0A@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@@Z ; std::_Refancy<CMonsterAreaInfo * *,0>
PUBLIC	??$_Copy_memmove@PAUSItem@SHeightCache@CMapOutdoor@@PAU123@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@PAU123@00@Z ; std::_Copy_memmove<CMapOutdoor::SHeightCache::SItem *,CMapOutdoor::SHeightCache::SItem *>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
PUBLIC	??$?0ABH$$Z$$V@?$pair@$$CBHPAE@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$V@1@@Z ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><int const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * &>
PUBLIC	??$?0V?$tuple@ABH@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBHPAE@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><std::tuple<int const &>,std::tuple<>,0>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_7SpherePackCallback@@6B@			; SpherePackCallback::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
PUBLIC	??_7?$CDynamicPool@VCMonsterAreaInfo@@@@6B@	; CDynamicPool<CMonsterAreaInfo>::`vftable'
PUBLIC	??_7CMapOutdoor@@6B@				; CMapOutdoor::`vftable'
PUBLIC	??_C@_0BN@FIOHACND@D?3?1ymir?5work?1special?1fog?4tga@ ; `string'
PUBLIC	??_C@_0BP@JMMOMCFP@d?3?1ymir?5work?1special?1white?4dds@ ; `string'
PUBLIC	??_C@_0CI@OKIKMFPM@d?3?1ymir?5Work?1special?1PCBlockerA@ ; `string'
PUBLIC	??_C@_0BJ@GGJMMCMN@d?3?1ymir?5work?1environment@ ; `string'
PUBLIC	??_7?$RangeTester@UFGetObjectHeight@@@@6B@	; RangeTester<FGetObjectHeight>::`vftable'
PUBLIC	??_7?$RangeTester@UFGetPickingPoint@@@@6B@	; RangeTester<FGetPickingPoint>::`vftable'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4SpherePackCallback@@6B@			; SpherePackCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpherePackCallback@@@8			; SpherePackCallback `RTTI Type Descriptor'
PUBLIC	??_R3SpherePackCallback@@8			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePackCallback@@8			; SpherePackCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpherePackCallback@@8		; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMapOutdoor@@6B@				; CMapOutdoor::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMapOutdoor@@@8				; CMapOutdoor `RTTI Type Descriptor'
PUBLIC	??_R3CMapOutdoor@@8				; CMapOutdoor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapOutdoor@@8				; CMapOutdoor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMapOutdoor@@8			; CMapOutdoor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CMapBase@@8			; CMapBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCMapBase@@@8				; CMapBase `RTTI Type Descriptor'
PUBLIC	??_R3CMapBase@@8				; CMapBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapBase@@8				; CMapBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	??_R4?$CDynamicPool@VCMonsterAreaInfo@@@@6B@	; CDynamicPool<CMonsterAreaInfo>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCMonsterAreaInfo@@@@@8	; CDynamicPool<CMonsterAreaInfo> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCMonsterAreaInfo@@@@8	; CDynamicPool<CMonsterAreaInfo>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCMonsterAreaInfo@@@@8	; CDynamicPool<CMonsterAreaInfo>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCMonsterAreaInfo@@@@8 ; CDynamicPool<CMonsterAreaInfo>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UFGetObjectHeight@@@@6B@	; RangeTester<FGetObjectHeight>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UFGetObjectHeight@@@@@8	; RangeTester<FGetObjectHeight> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UFGetObjectHeight@@@@8	; RangeTester<FGetObjectHeight>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UFGetObjectHeight@@@@8	; RangeTester<FGetObjectHeight>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UFGetObjectHeight@@@@8 ; RangeTester<FGetObjectHeight>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UFGetPickingPoint@@@@6B@	; RangeTester<FGetPickingPoint>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UFGetPickingPoint@@@@@8	; RangeTester<FGetPickingPoint> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UFGetPickingPoint@@@@8	; RangeTester<FGetPickingPoint>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UFGetPickingPoint@@@@8	; RangeTester<FGetPickingPoint>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UFGetPickingPoint@@@@8 ; RangeTester<FGetPickingPoint>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3ca3d70a
PUBLIC	__real@3f800000
PUBLIC	__real@46c80000
PUBLIC	__real@47480000
PUBLIC	__real@c6c35000
PUBLIC	__real@c6c80000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?fMAX@@YAMMM@Z:PROC				; fMAX
EXTRN	?GetCaseCRC32@@YAKPBDI@Z:PROC			; GetCaseCRC32
EXTRN	_D3DXPlaneNormalize@8:PROC
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	??0CGraphicIndexBuffer@@QAE@XZ:PROC		; CGraphicIndexBuffer::CGraphicIndexBuffer
EXTRN	??1CGraphicIndexBuffer@@UAE@XZ:PROC		; CGraphicIndexBuffer::~CGraphicIndexBuffer
EXTRN	?Destroy@CGraphicIndexBuffer@@QAEXXZ:PROC	; CGraphicIndexBuffer::Destroy
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?Destroy@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Destroy
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	??0CSkyBox@@QAE@XZ:PROC				; CSkyBox::CSkyBox
EXTRN	??1CSkyBox@@UAE@XZ:PROC				; CSkyBox::~CSkyBox
EXTRN	?Unload@CSkyBox@@QAEXXZ:PROC			; CSkyBox::Unload
EXTRN	?SetSkyBoxScale@CSkyBox@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CSkyBox::SetSkyBoxScale
EXTRN	?SetGradientLevel@CSkyBox@@QAEXEE@Z:PROC	; CSkyBox::SetGradientLevel
EXTRN	?SetFaceTexture@CSkyBox@@QAEXPBDH@Z:PROC	; CSkyBox::SetFaceTexture
EXTRN	?SetCloudTexture@CSkyBox@@QAEXPBD@Z:PROC	; CSkyBox::SetCloudTexture
EXTRN	?SetCloudScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z:PROC ; CSkyBox::SetCloudScale
EXTRN	?SetCloudHeight@CSkyBox@@QAEXM@Z:PROC		; CSkyBox::SetCloudHeight
EXTRN	?SetCloudTextureScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z:PROC ; CSkyBox::SetCloudTextureScale
EXTRN	?SetCloudScrollSpeed@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z:PROC ; CSkyBox::SetCloudScrollSpeed
EXTRN	?SetCloudColor@CSkyBox@@QAEXABUTGradientColor@@0ABK@Z:PROC ; CSkyBox::SetCloudColor
EXTRN	?Refresh@CSkyBox@@QAEXXZ:PROC			; CSkyBox::Refresh
EXTRN	?SetSkyColor@CSkyBox@@QAEXABV?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@0J@Z:PROC ; CSkyBox::SetSkyColor
EXTRN	?GetFogNearDistance@SEnvironmentData@@QBEMXZ:PROC ; SEnvironmentData::GetFogNearDistance
EXTRN	?GetFogFarDistance@SEnvironmentData@@QBEMXZ:PROC ; SEnvironmentData::GetFogFarDistance
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	??_ESpherePackCallback@@UAEPAXI@Z:PROC		; SpherePackCallback::`vector deleting destructor'
EXTRN	?RayTrace@SpherePackFactory@@QAEXABVVector3d@@0PAVSpherePackCallback@@@Z:PROC ; SpherePackFactory::RayTrace
EXTRN	?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z:PROC ; SpherePackFactory::PointTest2d
EXTRN	?Clear@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Clear
EXTRN	?IsObjectHeight@CGraphicObjectInstance@@QAE_NXZ:PROC ; CGraphicObjectInstance::IsObjectHeight
EXTRN	?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z:PROC ; CGraphicObjectInstance::GetObjectHeight
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	?CreateEffect@CEffectManager@@QAEHPBDABUD3DXVECTOR3@@1@Z:PROC ; CEffectManager::CreateEffect
EXTRN	?SelectEffectInstance@CEffectManager@@QAEHK@Z:PROC ; CEffectManager::SelectEffectInstance
EXTRN	?DestroyEffectInstance@CEffectManager@@QAE_NK@Z:PROC ; CEffectManager::DestroyEffectInstance
EXTRN	?SetEffectInstanceGlobalMatrix@CEffectManager@@QAEXABUD3DXMATRIX@@@Z:PROC ; CEffectManager::SetEffectInstanceGlobalMatrix
EXTRN	??0CLensFlare@@QAE@XZ:PROC			; CLensFlare::CLensFlare
EXTRN	??1CLensFlare@@UAE@XZ:PROC			; CLensFlare::~CLensFlare
EXTRN	?SetMainFlare@CLensFlare@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z:PROC ; CLensFlare::SetMainFlare
EXTRN	?Initialize@CLensFlare@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CLensFlare::Initialize
EXTRN	?CharacterizeFlare@CLensFlare@@QAEX_N0MABUD3DXCOLOR@@@Z:PROC ; CLensFlare::CharacterizeFlare
EXTRN	??0CScreenFilter@@QAE@XZ:PROC			; CScreenFilter::CScreenFilter
EXTRN	??1CScreenFilter@@UAE@XZ:PROC			; CScreenFilter::~CScreenFilter
EXTRN	?SetEnable@CScreenFilter@@QAEXH@Z:PROC		; CScreenFilter::SetEnable
EXTRN	?SetBlendType@CScreenFilter@@QAEXEE@Z:PROC	; CScreenFilter::SetBlendType
EXTRN	?SetColor@CScreenFilter@@QAEXABUD3DXCOLOR@@@Z:PROC ; CScreenFilter::SetColor
EXTRN	??0CTextureSet@@QAE@XZ:PROC			; CTextureSet::CTextureSet
EXTRN	??1CTextureSet@@UAE@XZ:PROC			; CTextureSet::~CTextureSet
EXTRN	?CreateInstance@CSpeedTreeForest@@QAEPAVCSpeedTreeWrapper@@MMMKPBD@Z:PROC ; CSpeedTreeForest::CreateInstance
EXTRN	?DeleteInstance@CSpeedTreeForest@@QAEXPAVCSpeedTreeWrapper@@@Z:PROC ; CSpeedTreeForest::DeleteInstance
EXTRN	?Clear@CSpeedTreeForest@@QAEXXZ:PROC		; CSpeedTreeForest::Clear
EXTRN	?SetLight@CSpeedTreeForest@@QAEXPBM00@Z:PROC	; CSpeedTreeForest::SetLight
EXTRN	?SetFog@CSpeedTreeForest@@QAEXMM@Z:PROC		; CSpeedTreeForest::SetFog
EXTRN	?SetWindStrength@CSpeedTreeForest@@QAEXM@Z:PROC	; CSpeedTreeForest::SetWindStrength
EXTRN	??0CMapBase@@QAE@XZ:PROC			; CMapBase::CMapBase
EXTRN	??1CMapBase@@UAE@XZ:PROC			; CMapBase::~CMapBase
EXTRN	?Clear@CMapBase@@UAEXXZ:PROC			; CMapBase::Clear
EXTRN	?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z:PROC ; CGraphicThingInstance::Picking
EXTRN	?EnablePortal@CArea@@QAEXH@Z:PROC		; CArea::EnablePortal
EXTRN	?DestroySystem@CArea@@SAXXZ:PROC		; CArea::DestroySystem
EXTRN	?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z:PROC	; CTerrainImpl::GetShadowMapColor
EXTRN	??0CTerrainPatchProxy@@QAE@XZ:PROC		; CTerrainPatchProxy::CTerrainPatchProxy
EXTRN	??1CTerrainPatchProxy@@UAE@XZ:PROC		; CTerrainPatchProxy::~CTerrainPatchProxy
EXTRN	?GetHeight@CTerrain@@QAEMHH@Z:PROC		; CTerrain::GetHeight
EXTRN	?GetNormal@CTerrain@@QAE_NHHPAUD3DXVECTOR3@@@Z:PROC ; CTerrain::GetNormal
EXTRN	?GetAttr@CTerrain@@QAEEGG@Z:PROC		; CTerrain::GetAttr
EXTRN	?isAttrOn@CTerrain@@QAE_NGGE@Z:PROC		; CTerrain::isAttrOn
EXTRN	?GetWaterHeight@CTerrain@@QAEXEPAJ@Z:PROC	; CTerrain::GetWaterHeight
EXTRN	?GetWaterHeight@CTerrain@@QAE_NGGPAJ@Z:PROC	; CTerrain::GetWaterHeight
EXTRN	?AllocateMarkedSplats@CTerrain@@QAEXPAE@Z:PROC	; CTerrain::AllocateMarkedSplats
EXTRN	?DeallocateMarkedSplats@CTerrain@@QAEXXZ:PROC	; CTerrain::DeallocateMarkedSplats
EXTRN	?DestroySystem@CTerrain@@SAXXZ:PROC		; CTerrain::DestroySystem
EXTRN	??0CMonsterAreaInfo@@QAE@XZ:PROC		; CMonsterAreaInfo::CMonsterAreaInfo
EXTRN	?Clear@CMonsterAreaInfo@@QAEXXZ:PROC		; CMonsterAreaInfo::Clear
EXTRN	?SetOrigin@CMonsterAreaInfo@@QAEXJJ@Z:PROC	; CMonsterAreaInfo::SetOrigin
EXTRN	?SetSize@CMonsterAreaInfo@@QAEXJJ@Z:PROC	; CMonsterAreaInfo::SetSize
EXTRN	?SetMonsterCount@CMonsterAreaInfo@@QAEXK@Z:PROC	; CMonsterAreaInfo::SetMonsterCount
EXTRN	?SetMonsterDirection@CMonsterAreaInfo@@QAEXW4EMonsterDir@1@@Z:PROC ; CMonsterAreaInfo::SetMonsterDirection
EXTRN	?OnRender@CMapOutdoor@@MAEXXZ:PROC		; CMapOutdoor::OnRender
EXTRN	?Load@CMapOutdoor@@UAE_NMMM@Z:PROC		; CMapOutdoor::Load
EXTRN	?Update@CMapOutdoor@@UAE_NMMM@Z:PROC		; CMapOutdoor::Update
EXTRN	?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z:PROC ; CMapOutdoor::UpdateAroundAmbience
EXTRN	?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z:PROC ; CMapOutdoor::ApplyLight
EXTRN	?ReleaseCharacterShadowTexture@CMapOutdoor@@QAEXXZ:PROC ; CMapOutdoor::ReleaseCharacterShadowTexture
EXTRN	?__ClearGarvage@CMapOutdoor@@MAEXXZ:PROC	; CMapOutdoor::__ClearGarvage
EXTRN	?__UpdateGarvage@CMapOutdoor@@MAEXXZ:PROC	; CMapOutdoor::__UpdateGarvage
EXTRN	?LoadTerrain@CMapOutdoor@@MAE_NGGGG@Z:PROC	; CMapOutdoor::LoadTerrain
EXTRN	?LoadArea@CMapOutdoor@@MAE_NGGGG@Z:PROC		; CMapOutdoor::LoadArea
EXTRN	?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z:PROC	; CMapOutdoor::UpdateAreaList
EXTRN	?FreeQuadTree@CMapOutdoor@@IAEXXZ:PROC		; CMapOutdoor::FreeQuadTree
EXTRN	?UnloadWaterTexture@CMapOutdoor@@IAEXXZ:PROC	; CMapOutdoor::UnloadWaterTexture
EXTRN	?SetIndexBuffer@CMapOutdoor@@IAEXXZ:PROC	; CMapOutdoor::SetIndexBuffer
EXTRN	?InitializeVisibleParts@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::InitializeVisibleParts
EXTRN	?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::__SoftwareTransformPatch_Initialize
EXTRN	?__SoftwareTransformPatch_Create@CMapOutdoor@@IAE_NXZ:PROC ; CMapOutdoor::__SoftwareTransformPatch_Create
EXTRN	?__SoftwareTransformPatch_Destroy@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::__SoftwareTransformPatch_Destroy
EXTRN	??_E?$CDynamicPool@VCMonsterAreaInfo@@@@UAEPAXI@Z:PROC ; CDynamicPool<CMonsterAreaInfo>::`vector deleting destructor'
EXTRN	??_ECMapOutdoor@@UAEPAXI@Z:PROC			; CMapOutdoor::`vector deleting destructor'
EXTRN	??_E?$RangeTester@UFGetObjectHeight@@@@UAEPAXI@Z:PROC ; RangeTester<FGetObjectHeight>::`vector deleting destructor'
EXTRN	??_E?$RangeTester@UFGetPickingPoint@@@@UAEPAXI@Z:PROC ; RangeTester<FGetPickingPoint>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	?ms_Ray@CGraphicBase@@1VCRay@@A:BYTE		; CGraphicBase::ms_Ray
EXTRN	?PR_FCNV@@3MA:DWORD				; PR_FCNV
EXTRN	?PR_ICNV@@3JA:DWORD				; PR_ICNV
EXTRN	?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A:BYTE ; CArea::ms_kPool
EXTRN	?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A:BYTE ; CTerrain::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A DD 01H DUP (?) ; CSingleton<CCullingManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A DD 01H DUP (?) ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@c6c80000
CONST	SEGMENT
__real@c6c80000 DD 0c6c80000r			; -25600
CONST	ENDS
;	COMDAT __real@c6c35000
CONST	SEGMENT
__real@c6c35000 DD 0c6c35000r			; -25000
CONST	ENDS
;	COMDAT __real@47480000
CONST	SEGMENT
__real@47480000 DD 047480000r			; 51200
CONST	ENDS
;	COMDAT __real@46c80000
CONST	SEGMENT
__real@46c80000 DD 046c80000r			; 25600
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3ca3d70a
CONST	SEGMENT
__real@3ca3d70a DD 03ca3d70ar			; 0.02
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UFGetPickingPoint@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UFGetPickingPoint@@@@8 DD FLAT:??_R0?AU?$RangeTester@UFGetPickingPoint@@@@@8 ; RangeTester<FGetPickingPoint>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UFGetPickingPoint@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UFGetPickingPoint@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UFGetPickingPoint@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UFGetPickingPoint@@@@8 ; RangeTester<FGetPickingPoint>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UFGetPickingPoint@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UFGetPickingPoint@@@@8 DD 00H	; RangeTester<FGetPickingPoint>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UFGetPickingPoint@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UFGetPickingPoint@@@@@8
data$r	SEGMENT
??_R0?AU?$RangeTester@UFGetPickingPoint@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<FGetPickingPoint> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UFGetPickingPoint@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$RangeTester@UFGetPickingPoint@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UFGetPickingPoint@@@@6B@ DD 00H	; RangeTester<FGetPickingPoint>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UFGetPickingPoint@@@@@8
	DD	FLAT:??_R3?$RangeTester@UFGetPickingPoint@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UFGetObjectHeight@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UFGetObjectHeight@@@@8 DD FLAT:??_R0?AU?$RangeTester@UFGetObjectHeight@@@@@8 ; RangeTester<FGetObjectHeight>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UFGetObjectHeight@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UFGetObjectHeight@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UFGetObjectHeight@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UFGetObjectHeight@@@@8 ; RangeTester<FGetObjectHeight>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UFGetObjectHeight@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UFGetObjectHeight@@@@8 DD 00H	; RangeTester<FGetObjectHeight>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UFGetObjectHeight@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UFGetObjectHeight@@@@@8
data$r	SEGMENT
??_R0?AU?$RangeTester@UFGetObjectHeight@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<FGetObjectHeight> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UFGetObjectHeight@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$RangeTester@UFGetObjectHeight@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UFGetObjectHeight@@@@6B@ DD 00H	; RangeTester<FGetObjectHeight>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UFGetObjectHeight@@@@@8
	DD	FLAT:??_R3?$RangeTester@UFGetObjectHeight@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCMonsterAreaInfo@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCMonsterAreaInfo@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCMonsterAreaInfo@@@@@8 ; CDynamicPool<CMonsterAreaInfo>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCMonsterAreaInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCMonsterAreaInfo@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCMonsterAreaInfo@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCMonsterAreaInfo@@@@8 ; CDynamicPool<CMonsterAreaInfo>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCMonsterAreaInfo@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCMonsterAreaInfo@@@@8 DD 00H	; CDynamicPool<CMonsterAreaInfo>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCMonsterAreaInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCMonsterAreaInfo@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCMonsterAreaInfo@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CMonsterAreaInfo> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCMonsterAreaInfo@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCMonsterAreaInfo@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCMonsterAreaInfo@@@@6B@ DD 00H	; CDynamicPool<CMonsterAreaInfo>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCMonsterAreaInfo@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCMonsterAreaInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CScreen@@8
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
data$r	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapBase@@8
rdata$r	SEGMENT
??_R2CMapBase@@8 DD FLAT:??_R1A@?0A@EA@CMapBase@@8	; CMapBase::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CMapBase@@8
rdata$r	SEGMENT
??_R3CMapBase@@8 DD 00H					; CMapBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CMapBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapBase@@@8
data$r	SEGMENT
??_R0?AVCMapBase@@@8 DD FLAT:??_7type_info@@6B@		; CMapBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMapBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapBase@@8 DD FLAT:??_R0?AVCMapBase@@@8	; CMapBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMapOutdoor@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapOutdoor@@8 DD FLAT:??_R0?AVCMapOutdoor@@@8 ; CMapOutdoor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapOutdoor@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapOutdoor@@8
rdata$r	SEGMENT
??_R2CMapOutdoor@@8 DD FLAT:??_R1A@?0A@EA@CMapOutdoor@@8 ; CMapOutdoor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CMapBase@@8
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CMapOutdoor@@8
rdata$r	SEGMENT
??_R3CMapOutdoor@@8 DD 00H				; CMapOutdoor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CMapOutdoor@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapOutdoor@@@8
data$r	SEGMENT
??_R0?AVCMapOutdoor@@@8 DD FLAT:??_7type_info@@6B@	; CMapOutdoor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapOutdoor@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMapOutdoor@@6B@
rdata$r	SEGMENT
??_R4CMapOutdoor@@6B@ DD 00H				; CMapOutdoor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMapOutdoor@@@8
	DD	FLAT:??_R3CMapOutdoor@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePackCallback@@8 DD FLAT:??_R0?AVSpherePackCallback@@@8 ; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePackCallback@@8
rdata$r	SEGMENT
??_R2SpherePackCallback@@8 DD FLAT:??_R1A@?0A@EA@SpherePackCallback@@8 ; SpherePackCallback::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SpherePackCallback@@8
rdata$r	SEGMENT
??_R3SpherePackCallback@@8 DD 00H			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePackCallback@@@8
data$r	SEGMENT
??_R0?AVSpherePackCallback@@@8 DD FLAT:??_7type_info@@6B@ ; SpherePackCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePackCallback@@', 00H
data$r	ENDS
;	COMDAT ??_R4SpherePackCallback@@6B@
rdata$r	SEGMENT
??_R4SpherePackCallback@@6B@ DD 00H			; SpherePackCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePackCallback@@@8
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UFGetPickingPoint@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UFGetPickingPoint@@@@6B@ DD FLAT:??_R4?$RangeTester@UFGetPickingPoint@@@@6B@ ; RangeTester<FGetPickingPoint>::`vftable'
	DD	FLAT:??_E?$RangeTester@UFGetPickingPoint@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UFGetObjectHeight@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UFGetObjectHeight@@@@6B@ DD FLAT:??_R4?$RangeTester@UFGetObjectHeight@@@@6B@ ; RangeTester<FGetObjectHeight>::`vftable'
	DD	FLAT:??_E?$RangeTester@UFGetObjectHeight@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BJ@GGJMMCMN@d?3?1ymir?5work?1environment@
CONST	SEGMENT
??_C@_0BJ@GGJMMCMN@d?3?1ymir?5work?1environment@ DB 'd:/ymir work/environ'
	DB	'ment', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OKIKMFPM@d?3?1ymir?5Work?1special?1PCBlockerA@
CONST	SEGMENT
??_C@_0CI@OKIKMFPM@d?3?1ymir?5Work?1special?1PCBlockerA@ DB 'd:/ymir Work'
	DB	'/special/PCBlockerAlpha.dds', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JMMOMCFP@d?3?1ymir?5work?1special?1white?4dds@
CONST	SEGMENT
??_C@_0BP@JMMOMCFP@d?3?1ymir?5work?1special?1white?4dds@ DB 'd:/ymir work'
	DB	'/special/white.dds', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FIOHACND@D?3?1ymir?5work?1special?1fog?4tga@
CONST	SEGMENT
??_C@_0BN@FIOHACND@D?3?1ymir?5work?1special?1fog?4tga@ DB 'D:/ymir work/s'
	DB	'pecial/fog.tga', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CMapOutdoor@@6B@
CONST	SEGMENT
??_7CMapOutdoor@@6B@ DD FLAT:??_R4CMapOutdoor@@6B@	; CMapOutdoor::`vftable'
	DD	FLAT:??_ECMapOutdoor@@UAEPAXI@Z
	DD	FLAT:?Clear@CMapOutdoor@@UAEXXZ
	DD	FLAT:?Initialize@CMapOutdoor@@MAE_NXZ
	DD	FLAT:?Destroy@CMapOutdoor@@MAE_NXZ
	DD	FLAT:?Load@CMapOutdoor@@UAE_NMMM@Z
	DD	FLAT:?Update@CMapOutdoor@@UAE_NMMM@Z
	DD	FLAT:?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z
	DD	FLAT:?GetHeight@CMapOutdoor@@UAEMMM@Z
	DD	FLAT:?OnBeginEnvironment@CMapOutdoor@@UAEXXZ
	DD	FLAT:?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z
	DD	FLAT:?OnRender@CMapOutdoor@@MAEXXZ
	DD	FLAT:?OnSetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ
	DD	FLAT:?OnResetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ
	DD	FLAT:?OnPreAssignTerrainPtr@CMapOutdoor@@MAEXXZ
	DD	FLAT:?GetCacheHeight@CMapOutdoor@@UAEMMM@Z
	DD	FLAT:?__ClearGarvage@CMapOutdoor@@MAEXXZ
	DD	FLAT:?__UpdateGarvage@CMapOutdoor@@MAEXXZ
	DD	FLAT:?LoadTerrain@CMapOutdoor@@MAE_NGGGG@Z
	DD	FLAT:?LoadArea@CMapOutdoor@@MAE_NGGGG@Z
	DD	FLAT:?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
	DD	FLAT:?DestroyTerrain@CMapOutdoor@@MAEXXZ
	DD	FLAT:?DestroyArea@CMapOutdoor@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCMonsterAreaInfo@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCMonsterAreaInfo@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCMonsterAreaInfo@@@@6B@ ; CDynamicPool<CMonsterAreaInfo>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCMonsterAreaInfo@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SpherePackCallback@@6B@
CONST	SEGMENT
??_7SpherePackCallback@@6B@ DD FLAT:??_R4SpherePackCallback@@6B@ ; SpherePackCallback::`vftable'
	DD	FLAT:??_ESpherePackCallback@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@$$QAU?$pair@KK@1@@Z$1
__ehfuncinfo$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUtagRECT@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@1@ABUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUtagRECT@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@1@ABUtagRECT@@@Z$0
__ehfuncinfo$??$?0ABUtagRECT@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@1@ABUtagRECT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUtagRECT@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@1@ABUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABH@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABH@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABH@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABH@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z$2
__ehfuncinfo$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABUtagRECT@@@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEPAU?$_List_node@UtagRECT@@PAX@1@QAU21@ABUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABUtagRECT@@@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEPAU?$_List_node@UtagRECT@@PAX@1@QAU21@ABUtagRECT@@@Z$1
__ehfuncinfo$??$_Emplace@ABUtagRECT@@@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEPAU?$_List_node@UtagRECT@@PAX@1@QAU21@ABUtagRECT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABUtagRECT@@@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEPAU?$_List_node@UtagRECT@@PAX@1@QAU21@ABUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABH$$V@?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@_N@1@ABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABH$$V@?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@_N@1@ABH@Z$2
__ehfuncinfo$??$_Try_emplace@ABH$$V@?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@_N@1@ABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABH$$V@?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@_N@1@ABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAEAAPAEABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAEAAPAEABH@Z$2
__ehfuncinfo$??A?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAEAAPAEABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAEAAPAEABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@U?$pair@KK@std@@$0A@@?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@U?$pair@KK@std@@$0A@@?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z$2
__ehfuncinfo$??$insert@U?$pair@KK@std@@$0A@@?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@U?$pair@KK@std@@$0A@@?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$ForInRay@UFGetObjectHeight@@@CCullingManager@@QAEXABVVector3d@@0PAUFGetObjectHeight@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$ForInRay@UFGetObjectHeight@@@CCullingManager@@QAEXABVVector3d@@0PAUFGetObjectHeight@@@Z$0
__ehfuncinfo$??$ForInRay@UFGetObjectHeight@@@CCullingManager@@QAEXABVVector3d@@0PAUFGetObjectHeight@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$ForInRay@UFGetObjectHeight@@@CCullingManager@@QAEXABVVector3d@@0PAUFGetObjectHeight@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$ForInRange2d@UFGetPickingPoint@@@CCullingManager@@QAEXABVVector3d@@PAUFGetPickingPoint@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$ForInRange2d@UFGetPickingPoint@@@CCullingManager@@QAEXABVVector3d@@PAUFGetPickingPoint@@@Z$0
__ehfuncinfo$??$ForInRange2d@UFGetPickingPoint@@@CCullingManager@@QAEXABVVector3d@@PAUFGetPickingPoint@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$ForInRange2d@UFGetPickingPoint@@@CCullingManager@@QAEXABVVector3d@@PAUFGetPickingPoint@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1SHeightCache@CMapOutdoor@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0SHeightCache@CMapOutdoor@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z$2
__ehfuncinfo$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEXABUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEXABUtagRECT@@@Z$1
__ehfuncinfo$?push_back@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEXABUtagRECT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAEXABUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ$0
__ehfuncinfo$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z$0
__ehfuncinfo$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$6
	DD	01H
	DD	FLAT:__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$11
__ehfuncinfo$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z$1
__ehfuncinfo$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z$1
__ehfuncinfo$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetHeight@CMapOutdoor@@UAEMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetHeight@CMapOutdoor@@UAEMMM@Z$0
__ehfuncinfo$?GetHeight@CMapOutdoor@@UAEMMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetHeight@CMapOutdoor@@UAEMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMapOutdoor@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CMapOutdoor@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMapOutdoor@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CMapOutdoor@@QAE@XZ DD 019930522H
	DD	020H
	DD	FLAT:__unwindtable$??0CMapOutdoor@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CMapOutdoor@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$15
	DD	0fH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$17
	DD	011H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$19
	DD	013H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$24
	DD	018H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$26
	DD	01aH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$27
	DD	01bH
	DD	FLAT:___std_terminate
	DD	01bH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$28
	DD	01dH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$29
	DD	01eH
	DD	FLAT:__unwindfunclet$??0CMapOutdoor@@QAE@XZ$30
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECTerrainPatchProxy@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@ABH@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBHPAE@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABH@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBHPAE@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><std::tuple<int const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 00		 mov	 eax, DWORD PTR [eax]
  0000a	89 01		 mov	 DWORD PTR [ecx], eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00015	5d		 pop	 ebp
  00016	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@ABH@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBHPAE@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><std::tuple<int const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0ABH$$Z$$V@?$pair@$$CBHPAE@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABH$$Z$$V@?$pair@$$CBHPAE@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$V@1@@Z PROC ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><int const &>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  0000b	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000e	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00011	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  00015	8b f1		 mov	 esi, ecx
  00017	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$?0V?$tuple@ABH@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBHPAE@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><std::tuple<int const &>,std::tuple<>,0>
  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 0c 00	 ret	 12			; 0000000cH
??$?0ABH$$Z$$V@?$pair@$$CBHPAE@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><int const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAUSItem@SHeightCache@CMapOutdoor@@PAU123@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@PAU123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUSItem@SHeightCache@CMapOutdoor@@PAU123@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@PAU123@00@Z PROC ; std::_Copy_memmove<CMapOutdoor::SHeightCache::SItem *,CMapOutdoor::SHeightCache::SItem *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUSItem@SHeightCache@CMapOutdoor@@PAU123@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@PAU123@00@Z ENDP ; std::_Copy_memmove<CMapOutdoor::SHeightCache::SItem *,CMapOutdoor::SHeightCache::SItem *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAPAVCMonsterAreaInfo@@$0A@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAPAVCMonsterAreaInfo@@$0A@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@@Z PROC ; std::_Refancy<CMonsterAreaInfo * *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAPAVCMonsterAreaInfo@@$0A@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@@Z ENDP ; std::_Refancy<CMonsterAreaInfo * *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCMonsterAreaInfo@@PAPAV1@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCMonsterAreaInfo@@PAPAV1@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CMonsterAreaInfo * *,CMonsterAreaInfo * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCMonsterAreaInfo@@PAPAV1@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CMonsterAreaInfo * *,CMonsterAreaInfo * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z PROC ; std::_Refancy<CTerrain * *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ENDP ; std::_Refancy<CTerrain * *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CTerrain * *,CTerrain * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z PROC ; std::_Refancy<CArea * *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ENDP ; std::_Refancy<CArea * *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CArea * *,CArea * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CArea * *,CArea * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAPAPAVCMonsterAreaInfo@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAPAPAVCMonsterAreaInfo@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z PROC ; std::_Uninitialized_move<CMonsterAreaInfo * *,std::allocator<CMonsterAreaInfo *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCMonsterAreaInfo@@PAPAV1@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@00@Z ; std::_Copy_memmove<CMonsterAreaInfo * *,CMonsterAreaInfo * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAPAPAVCMonsterAreaInfo@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z ENDP ; std::_Uninitialized_move<CMonsterAreaInfo * *,std::allocator<CMonsterAreaInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@QAU123@0PAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@QAU123@0PAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z PROC ; std::_Uninitialized_move<CMapOutdoor::SHeightCache::SItem *,std::allocator<CMapOutdoor::SHeightCache::SItem> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUSItem@SHeightCache@CMapOutdoor@@PAU123@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@PAU123@00@Z ; std::_Copy_memmove<CMapOutdoor::SHeightCache::SItem *,CMapOutdoor::SHeightCache::SItem *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 03	 sar	 edi, 3
  0001e	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAUSItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@QAU123@0PAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z ENDP ; std::_Uninitialized_move<CMapOutdoor::SHeightCache::SItem *,std::allocator<CMapOutdoor::SHeightCache::SItem> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<tagRECT,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<tagRECT,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::_Find_lower_bound<int>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	7d 07		 jge	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::_Find_lower_bound<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UFGetPickingPoint@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UFGetPickingPoint@@@@UAEPAXI@Z PROC	; RangeTester<FGetPickingPoint>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UFGetPickingPoint@@@@UAEPAXI@Z ENDP	; RangeTester<FGetPickingPoint>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_fZ$1 = -4						; size = 4
_p$ = 8							; size = 4
_fY$2 = 12						; size = 4
_sphere$ = 12						; size = 4
_fX$3 = 16						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetPickingPoint>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00004	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00008	0f 84 98 00 00
	00		 je	 $LN8@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  00011	56		 push	 esi
  00012	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00015	57		 push	 edi
  00016	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 48   : 		if( pInstance && pInstance->GetType() == CGraphicThingInstance::ID )

  00019	85 ff		 test	 edi, edi
  0001b	0f 84 83 00 00
	00		 je	 $LN10@PointTest2
  00021	8b 07		 mov	 eax, DWORD PTR [edi]
  00023	8b cf		 mov	 ecx, edi
  00025	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00028	ff d0		 call	 eax
  0002a	3d 13 1f f2 ad	 cmp	 eax, -1376641261	; adf21f13H
  0002f	75 73		 jne	 SHORT $LN10@PointTest2

; 49   : 		{
; 50   : 			CGraphicThingInstance * pThing = (CGraphicThingInstance *)pInstance;
; 51   : 			if (!pThing->IsObjectHeight())

  00031	8b cf		 mov	 ecx, edi
  00033	e8 00 00 00 00	 call	 ?IsObjectHeight@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::IsObjectHeight
  00038	84 c0		 test	 al, al
  0003a	74 68		 je	 SHORT $LN10@PointTest2

; 52   : 				return;
; 53   : 
; 54   : 			float fX, fY, fZ;
; 55   : 			if (pThing->Picking(m_v3Start, m_v3Dir, fX, fY))

  0003c	8d 45 0c	 lea	 eax, DWORD PTR _fY$2[ebp]
  0003f	8b cf		 mov	 ecx, edi
  00041	50		 push	 eax
  00042	8d 45 10	 lea	 eax, DWORD PTR _fX$3[ebp]
  00045	50		 push	 eax
  00046	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z ; CGraphicThingInstance::Picking
  00050	84 c0		 test	 al, al
  00052	74 50		 je	 SHORT $LN10@PointTest2

; 56   : 			{
; 57   : 				if (pThing->GetObjectHeight(fX, -fY, &fZ))

  00054	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$2[ebp]
  00059	8d 45 fc	 lea	 eax, DWORD PTR _fZ$1[ebp]
  0005c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00063	8b cf		 mov	 ecx, edi
  00065	50		 push	 eax
  00066	83 ec 08	 sub	 esp, 8
  00069	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0006f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fX$3[ebp]
  00074	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00079	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  0007e	84 c0		 test	 al, al
  00080	74 22		 je	 SHORT $LN10@PointTest2

; 58   : 				{
; 59   : 					m_v3PickingPoint.x = fX;

  00082	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fX$3[ebp]
  00087	f3 0f 11 46 18	 movss	 DWORD PTR [esi+24], xmm0

; 60   : 					m_v3PickingPoint.y = fY;

  0008c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$2[ebp]
  00091	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0

; 61   : 					m_v3PickingPoint.z = fZ;

  00096	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fZ$1[ebp]
  0009b	f3 0f 11 46 20	 movss	 DWORD PTR [esi+32], xmm0

; 62   : 					m_bPicked = true;

  000a0	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
$LN10@PointTest2:
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
$LN8@PointTest2:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 62   : 	}

  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetPickingPoint>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_fZ$1 = -4						; size = 4
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_fY$2 = 16						; size = 4
_sphere$ = 16						; size = 4
_fX$3 = 20						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetPickingPoint>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00004	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00008	0f 84 98 00 00
	00		 je	 $LN8@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000e	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  00011	56		 push	 esi
  00012	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00015	57		 push	 edi
  00016	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 48   : 		if( pInstance && pInstance->GetType() == CGraphicThingInstance::ID )

  00019	85 ff		 test	 edi, edi
  0001b	0f 84 83 00 00
	00		 je	 $LN10@RangeTestC
  00021	8b 07		 mov	 eax, DWORD PTR [edi]
  00023	8b cf		 mov	 ecx, edi
  00025	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00028	ff d0		 call	 eax
  0002a	3d 13 1f f2 ad	 cmp	 eax, -1376641261	; adf21f13H
  0002f	75 73		 jne	 SHORT $LN10@RangeTestC

; 49   : 		{
; 50   : 			CGraphicThingInstance * pThing = (CGraphicThingInstance *)pInstance;
; 51   : 			if (!pThing->IsObjectHeight())

  00031	8b cf		 mov	 ecx, edi
  00033	e8 00 00 00 00	 call	 ?IsObjectHeight@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::IsObjectHeight
  00038	84 c0		 test	 al, al
  0003a	74 68		 je	 SHORT $LN10@RangeTestC

; 52   : 				return;
; 53   : 
; 54   : 			float fX, fY, fZ;
; 55   : 			if (pThing->Picking(m_v3Start, m_v3Dir, fX, fY))

  0003c	8d 45 10	 lea	 eax, DWORD PTR _fY$2[ebp]
  0003f	8b cf		 mov	 ecx, edi
  00041	50		 push	 eax
  00042	8d 45 14	 lea	 eax, DWORD PTR _fX$3[ebp]
  00045	50		 push	 eax
  00046	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z ; CGraphicThingInstance::Picking
  00050	84 c0		 test	 al, al
  00052	74 50		 je	 SHORT $LN10@RangeTestC

; 56   : 			{
; 57   : 				if (pThing->GetObjectHeight(fX, -fY, &fZ))

  00054	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fY$2[ebp]
  00059	8d 45 fc	 lea	 eax, DWORD PTR _fZ$1[ebp]
  0005c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00063	8b cf		 mov	 ecx, edi
  00065	50		 push	 eax
  00066	83 ec 08	 sub	 esp, 8
  00069	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0006f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fX$3[ebp]
  00074	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00079	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  0007e	84 c0		 test	 al, al
  00080	74 22		 je	 SHORT $LN10@RangeTestC

; 58   : 				{
; 59   : 					m_v3PickingPoint.x = fX;

  00082	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fX$3[ebp]
  00087	f3 0f 11 46 18	 movss	 DWORD PTR [esi+24], xmm0

; 60   : 					m_v3PickingPoint.y = fY;

  0008c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fY$2[ebp]
  00091	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0

; 61   : 					m_v3PickingPoint.z = fZ;

  00096	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fZ$1[ebp]
  0009b	f3 0f 11 46 20	 movss	 DWORD PTR [esi+32], xmm0

; 62   : 					m_bPicked = true;

  000a0	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
$LN10@RangeTestC:
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
$LN8@RangeTestC:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 47   : 	}

  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetPickingPoint>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetPickingPoint>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetPickingPoint>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_fZ$1 = -4						; size = 4
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_fX$2 = 16						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_fY$3 = 24						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<FGetPickingPoint>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00004	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	0f 2f c1	 comiss	 xmm0, xmm1
  0000f	73 0a		 jae	 SHORT $LN3@RayTraceCa
  00011	0f 2f 4d 10	 comiss	 xmm1, DWORD PTR _distance$[ebp]
  00015	0f 82 98 00 00
	00		 jb	 $LN9@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0001b	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  0001e	56		 push	 esi
  0001f	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00022	57		 push	 edi
  00023	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 48   : 		if( pInstance && pInstance->GetType() == CGraphicThingInstance::ID )

  00026	85 ff		 test	 edi, edi
  00028	0f 84 83 00 00
	00		 je	 $LN11@RayTraceCa
  0002e	8b 07		 mov	 eax, DWORD PTR [edi]
  00030	8b cf		 mov	 ecx, edi
  00032	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00035	ff d0		 call	 eax
  00037	3d 13 1f f2 ad	 cmp	 eax, -1376641261	; adf21f13H
  0003c	75 73		 jne	 SHORT $LN11@RayTraceCa

; 49   : 		{
; 50   : 			CGraphicThingInstance * pThing = (CGraphicThingInstance *)pInstance;
; 51   : 			if (!pThing->IsObjectHeight())

  0003e	8b cf		 mov	 ecx, edi
  00040	e8 00 00 00 00	 call	 ?IsObjectHeight@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::IsObjectHeight
  00045	84 c0		 test	 al, al
  00047	74 68		 je	 SHORT $LN11@RayTraceCa

; 52   : 				return;
; 53   : 
; 54   : 			float fX, fY, fZ;
; 55   : 			if (pThing->Picking(m_v3Start, m_v3Dir, fX, fY))

  00049	8d 45 18	 lea	 eax, DWORD PTR _fY$3[ebp]
  0004c	8b cf		 mov	 ecx, edi
  0004e	50		 push	 eax
  0004f	8d 45 10	 lea	 eax, DWORD PTR _fX$2[ebp]
  00052	50		 push	 eax
  00053	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00056	50		 push	 eax
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z ; CGraphicThingInstance::Picking
  0005d	84 c0		 test	 al, al
  0005f	74 50		 je	 SHORT $LN11@RayTraceCa

; 56   : 			{
; 57   : 				if (pThing->GetObjectHeight(fX, -fY, &fZ))

  00061	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fY$3[ebp]
  00066	8d 45 fc	 lea	 eax, DWORD PTR _fZ$1[ebp]
  00069	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00070	8b cf		 mov	 ecx, edi
  00072	50		 push	 eax
  00073	83 ec 08	 sub	 esp, 8
  00076	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0007c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fX$2[ebp]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  0008b	84 c0		 test	 al, al
  0008d	74 22		 je	 SHORT $LN11@RayTraceCa

; 58   : 				{
; 59   : 					m_v3PickingPoint.x = fX;

  0008f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fX$2[ebp]
  00094	f3 0f 11 46 18	 movss	 DWORD PTR [esi+24], xmm0

; 60   : 					m_v3PickingPoint.y = fY;

  00099	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fY$3[ebp]
  0009e	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0

; 61   : 					m_v3PickingPoint.z = fZ;

  000a3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fZ$1[ebp]
  000a8	f3 0f 11 46 20	 movss	 DWORD PTR [esi+32], xmm0

; 62   : 					m_bPicked = true;

  000ad	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
$LN11@RayTraceCa:
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
$LN9@RayTraceCa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 34   : 	};

  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UFGetPickingPoint@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<FGetPickingPoint>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ??1?$RangeTester@UFGetPickingPoint@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UFGetPickingPoint@@@@UAE@XZ PROC	; RangeTester<FGetPickingPoint>::~RangeTester<FGetPickingPoint>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UFGetPickingPoint@@@@UAE@XZ ENDP	; RangeTester<FGetPickingPoint>::~RangeTester<FGetPickingPoint>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicObjectInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXAAV?$allocator@PAVCMonsterAreaInfo@@@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXAAV?$allocator@PAVCMonsterAreaInfo@@@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<CMonsterAreaInfo *> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXAAV?$allocator@PAVCMonsterAreaInfo@@@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<CMonsterAreaInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CMapOutdoor::TPatchDrawStruct> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMapOutdoor::TPatchDrawStruct> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@PAVCTerrain@@@std@@@std@@YAXAAV?$allocator@PAVCTerrain@@@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@PAVCTerrain@@@std@@@std@@YAXAAV?$allocator@PAVCTerrain@@@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<CTerrain *> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@PAVCTerrain@@@std@@@std@@YAXAAV?$allocator@PAVCTerrain@@@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<CTerrain *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@PAVCArea@@@std@@@std@@YAXAAV?$allocator@PAVCArea@@@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@PAVCArea@@@std@@@std@@YAXAAV?$allocator@PAVCArea@@@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<CArea *> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@PAVCArea@@@std@@@std@@YAXAAV?$allocator@PAVCArea@@@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXPAPAVCMonsterAreaInfo@@QAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXPAPAVCMonsterAreaInfo@@QAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CMonsterAreaInfo *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAXPAPAVCMonsterAreaInfo@@QAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMonsterAreaInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<float,long> > >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<float,long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CTerrain *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CTerrain *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAXPAUSItem@SHeightCache@CMapOutdoor@@QAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAXPAUSItem@SHeightCache@CMapOutdoor@@QAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CMapOutdoor::SHeightCache::SItem> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAXPAUSItem@SHeightCache@CMapOutdoor@@QAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMapOutdoor::SHeightCache::SItem> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Emplace_reallocate<CMonsterAreaInfo * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAPAPAVCMonsterAreaInfo@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z ; std::_Uninitialized_move<CMonsterAreaInfo * *,std::allocator<CMonsterAreaInfo *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@YAPAPAVCMonsterAreaInfo@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCMonsterAreaInfo@@@0@@Z ; std::_Uninitialized_move<CMonsterAreaInfo * *,std::allocator<CMonsterAreaInfo *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@CAXXZ ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Emplace_reallocate<CMonsterAreaInfo * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 7d 0c	 mov	 edi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00011	75 51		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	56		 push	 esi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 77 08	 push	 DWORD PTR [edi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b f7		 mov	 esi, edi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00027	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0002a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002d	72 0d		 jb	 SHORT $LN21@Erase_tree

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0002f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00030	50		 push	 eax
  00031	ff 76 10	 push	 DWORD PTR [esi+16]
  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00039	83 c4 08	 add	 esp, 8
$LN21@Erase_tree:

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003c	6a 2c		 push	 44			; 0000002cH
  0003e	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00059	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0005c	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00060	74 b6		 je	 SHORT $LL2@Erase_tree
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
$LN3@Erase_tree:
  00064	5f		 pop	 edi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUSItem@SHeightCache@CMapOutdoor@@@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAEPAUSItem@SHeightCache@CMapOutdoor@@QAU234@ABU234@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUSItem@SHeightCache@CMapOutdoor@@@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAEPAUSItem@SHeightCache@CMapOutdoor@@QAU234@ABU234@@Z PROC ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Emplace_reallocate<CMapOutdoor::SHeightCache::SItem const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 03	 sar	 ebx, 3
  0001a	c1 f8 03	 sar	 eax, 3

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00022	0f 84 c4 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 03	 sar	 ecx, 3

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00056	0f 87 95 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 55 0c	 mov	 edx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 df	 lea	 eax, DWORD PTR [edi+ebx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00080	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00083	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00086	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00088	3b da		 cmp	 ebx, edx
  0008a	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008c	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008f	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00091	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00093	56		 push	 esi
  00094	57		 push	 edi
  00095	53		 push	 ebx
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@QAU123@0PAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z ; std::_Uninitialized_move<CMapOutdoor::SHeightCache::SItem *,std::allocator<CMapOutdoor::SHeightCache::SItem> >
  0009c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009f	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a4	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a7	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
$LN5@Emplace_re:
  000aa	56		 push	 esi
  000ab	50		 push	 eax
  000ac	52		 push	 edx
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@YAPAUSItem@SHeightCache@CMapOutdoor@@QAU123@0PAU123@AAV?$allocator@USItem@SHeightCache@CMapOutdoor@@@0@@Z ; std::_Uninitialized_move<CMapOutdoor::SHeightCache::SItem *,std::allocator<CMapOutdoor::SHeightCache::SItem> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000b5	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	85 c9		 test	 ecx, ecx
  000ba	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	83 e0 f8	 and	 eax, -8			; fffffff8H
  000c4	50		 push	 eax
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000ce	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d1	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000d3	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000d5	8d 0c cf	 lea	 ecx, DWORD PTR [edi+ecx*8]
  000d8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000de	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e0	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000e1	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 767  :     }

  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000ec	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@CAXXZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f1	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f6	cc		 int	 3
??$_Emplace_reallocate@ABUSItem@SHeightCache@CMapOutdoor@@@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAEPAUSItem@SHeightCache@CMapOutdoor@@QAU234@ABU234@@Z ENDP ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Emplace_reallocate<CMapOutdoor::SHeightCache::SItem const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAE@XZ PROC ; std::map<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> > >::~map<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::~_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >
??1?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAE@XZ ENDP ; std::map<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> > >::~map<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::~_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::~_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UFGetObjectHeight@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UFGetObjectHeight@@@@UAEPAXI@Z PROC	; RangeTester<FGetObjectHeight>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UFGetObjectHeight@@@@UAEPAXI@Z ENDP	; RangeTester<FGetObjectHeight>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetObjectHeight>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 31		 je	 SHORT $LN5@PointTest2

; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 28   : 		if (pObject->GetObjectHeight(m_fRequestX, m_fRequestY, &m_fReturnHeight))

  00012	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00017	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 28   : 		if (pObject->GetObjectHeight(m_fRequestX, m_fRequestY, &m_fReturnHeight))

  0001a	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0001d	50		 push	 eax
  0001e	83 ec 08	 sub	 esp, 8
  00021	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00027	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00036	84 c0		 test	 al, al
  00038	74 03		 je	 SHORT $LN5@PointTest2

; 29   : 		{
; 30   : #ifdef SPHERELIB_STRICT
; 31   : 			printf("FIND %f\n", m_fReturnHeight);
; 32   : #endif
; 33   : 			m_bHeightFound = true;

  0003a	c6 06 01	 mov	 BYTE PTR [esi], 1
$LN5@PointTest2:
  0003d	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 62   : 	}

  0003e	5d		 pop	 ebp
  0003f	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetObjectHeight>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetObjectHeight>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 31		 je	 SHORT $LN5@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000c	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  0000f	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 28   : 		if (pObject->GetObjectHeight(m_fRequestX, m_fRequestY, &m_fReturnHeight))

  00012	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00017	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 28   : 		if (pObject->GetObjectHeight(m_fRequestX, m_fRequestY, &m_fReturnHeight))

  0001a	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0001d	50		 push	 eax
  0001e	83 ec 08	 sub	 esp, 8
  00021	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00027	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00036	84 c0		 test	 al, al
  00038	74 03		 je	 SHORT $LN5@RangeTestC

; 29   : 		{
; 30   : #ifdef SPHERELIB_STRICT
; 31   : 			printf("FIND %f\n", m_fReturnHeight);
; 32   : #endif
; 33   : 			m_bHeightFound = true;

  0003a	c6 06 01	 mov	 BYTE PTR [esi], 1
$LN5@RangeTestC:
  0003d	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 47   : 	}

  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetObjectHeight>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetObjectHeight>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetObjectHeight>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<FGetObjectHeight>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00009	f3 0f 10 4e 08	 movss	 xmm1, DWORD PTR [esi+8]
  0000e	0f 2f c1	 comiss	 xmm0, xmm1
  00011	73 06		 jae	 SHORT $LN3@RayTraceCa
  00013	0f 2f 4d 10	 comiss	 xmm1, DWORD PTR _distance$[ebp]
  00017	72 31		 jb	 SHORT $LN6@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00019	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  0001c	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 28   : 		if (pObject->GetObjectHeight(m_fRequestX, m_fRequestY, &m_fReturnHeight))

  0001f	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00024	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 28   : 		if (pObject->GetObjectHeight(m_fRequestX, m_fRequestY, &m_fReturnHeight))

  00027	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0002a	50		 push	 eax
  0002b	83 ec 08	 sub	 esp, 8
  0002e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00034	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  00039	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003e	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00043	84 c0		 test	 al, al
  00045	74 03		 je	 SHORT $LN6@RayTraceCa

; 29   : 		{
; 30   : #ifdef SPHERELIB_STRICT
; 31   : 			printf("FIND %f\n", m_fReturnHeight);
; 32   : #endif
; 33   : 			m_bHeightFound = true;

  00047	c6 06 01	 mov	 BYTE PTR [esi], 1
$LN6@RayTraceCa:
  0004a	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 34   : 	};

  0004b	5d		 pop	 ebp
  0004c	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UFGetObjectHeight@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<FGetObjectHeight>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
;	COMDAT ??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ PROC	; RangeTester<FGetObjectHeight>::~RangeTester<FGetObjectHeight>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ ENDP	; RangeTester<FGetObjectHeight>::~RangeTester<FGetObjectHeight>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCMapOutdoor@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMapOutdoor@@UAEPAXI@Z PROC				; CMapOutdoor::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMapOutdoor@@UAE@XZ	; CMapOutdoor::~CMapOutdoor
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 b0 13 00 00	 push	 5040			; 000013b0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCMapOutdoor@@UAEPAXI@Z ENDP				; CMapOutdoor::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetEnvironmentDataName@CMapOutdoor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_strEnvironmentDataName$ = 8				; size = 4
?SetEnvironmentDataName@CMapOutdoor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CMapOutdoor::SetEnvironmentDataName, COMDAT
; _this$ = ecx

; 1339 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00003	8b 45 08	 mov	 eax, DWORD PTR _strEnvironmentDataName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1340 : 	m_envDataName = strEnvironmentDataName;

  00006	81 c1 94 13 00
	00		 add	 ecx, 5012		; 00001394H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  0000c	3b c8		 cmp	 ecx, eax
  0000e	74 13		 je	 SHORT $LN4@SetEnviron

; 2153 :         return _BUF_SIZE <= _Myres;

  00010	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00014	8b d0		 mov	 edx, eax

; 2145 :         if (_Large_string_engaged()) {

  00016	72 02		 jb	 SHORT $LN9@SetEnviron

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00018	8b 10		 mov	 edx, DWORD PTR [eax]
$LN9@SetEnviron:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0001a	ff 70 10	 push	 DWORD PTR [eax+16]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN4@SetEnviron:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1341 : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetEnvironmentDataName@CMapOutdoor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMapOutdoor::SetEnvironmentDataName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__HeightCache_Update@CMapOutdoor@@AAEXXZ
_TEXT	SEGMENT
?__HeightCache_Update@CMapOutdoor@@AAEXXZ PROC		; CMapOutdoor::__HeightCache_Update, COMDAT
; _this$ = ecx

; 735  : 	m_kHeightCache.m_isUpdated=true;

  00000	c6 81 78 13 00
	00 01		 mov	 BYTE PTR [ecx+4984], 1

; 736  : }

  00007	c3		 ret	 0
?__HeightCache_Update@CMapOutdoor@@AAEXXZ ENDP		; CMapOutdoor::__HeightCache_Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__HeightCache_Init@CMapOutdoor@@AAEXXZ
_TEXT	SEGMENT
?__HeightCache_Init@CMapOutdoor@@AAEXXZ PROC		; CMapOutdoor::__HeightCache_Init, COMDAT
; _this$ = ecx

; 740  : 	m_kHeightCache.m_isUpdated=false;

  00000	c6 81 78 13 00
	00 00		 mov	 BYTE PTR [ecx+4984], 0
  00007	8d 81 c8 0e 00
	00		 lea	 eax, DWORD PTR [ecx+3784]
  0000d	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
$LL4@HeightCach:

; 741  : 
; 742  : 	for (UINT uIndex=0; uIndex!=SHeightCache::HASH_SIZE; ++uIndex)
; 743  : 		m_kHeightCache.m_akVct_kItem[uIndex].clear();

  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8d 40 0c	 lea	 eax, DWORD PTR [eax+12]
  00017	89 48 f8	 mov	 DWORD PTR [eax-8], ecx
  0001a	83 ea 01	 sub	 edx, 1
  0001d	75 f3		 jne	 SHORT $LL4@HeightCach

; 744  : }

  0001f	c3		 ret	 0
?__HeightCache_Init@CMapOutdoor@@AAEXXZ ENDP		; CMapOutdoor::__HeightCache_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1SHeightCache@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1SHeightCache@CMapOutdoor@@QAE@XZ PROC		; CMapOutdoor::SHeightCache::~SHeightCache, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1SHeightCache@CMapOutdoor@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	68 00 00 00 00	 push	 OFFSET ??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::~vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
  00027	6a 64		 push	 100			; 00000064H
  00029	6a 0c		 push	 12			; 0000000cH
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00031	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00034	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003b	59		 pop	 ecx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
  00040	cc		 int	 3
  00041	cc		 int	 3
  00042	cc		 int	 3
  00043	cc		 int	 3
  00044	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1SHeightCache@CMapOutdoor@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1SHeightCache@CMapOutdoor@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1SHeightCache@CMapOutdoor@@QAE@XZ ENDP		; CMapOutdoor::SHeightCache::~SHeightCache
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@CAXXZ PROC ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@CAXXZ ENDP ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ PROC ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::~vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 f8	 and	 eax, -8			; fffffff8H
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ENDP ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::~vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??0?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ PROC ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >, COMDAT
; _this$ = ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 446  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 447  :     }

  00006	8b c1		 mov	 eax, ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 446  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 447  :     }

  00016	c3		 ret	 0
??0?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ENDP ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SpecialEffect_Destroy@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?SpecialEffect_Destroy@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::SpecialEffect_Destroy, COMDAT
; _this$ = ecx

; 1428 : {

  00000	53		 push	 ebx

; 1429 : 	CEffectManager& rkEffMgr = CEffectManager::Instance();

  00001	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0000b	8b 87 c0 0e 00
	00		 mov	 eax, DWORD PTR [edi+3776]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00011	8b 30		 mov	 esi, DWORD PTR [eax]
  00013	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1432 : 	for (; itor != m_kMap_dwID_iEffectID.end(); ++itor)

  00015	74 5d		 je	 SHORT $LN3@SpecialEff
  00017	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL22@SpecialEff:

; 1433 : 	{
; 1434 : 		int iEffectID = itor->second;
; 1435 : 		rkEffMgr.DestroyEffectInstance(iEffectID);

  00020	ff 76 14	 push	 DWORD PTR [esi+20]
  00023	8b cb		 mov	 ecx, ebx
  00025	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0002a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0002d	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00031	74 21		 je	 SHORT $LN21@SpecialEff

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00033	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00036	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003a	75 14		 jne	 SHORT $LN58@SpecialEff
  0003c	0f 1f 40 00	 npad	 4
$LL19@SpecialEff:
  00040	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00043	75 0b		 jne	 SHORT $LN58@SpecialEff

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00045	8b f0		 mov	 esi, eax
  00047	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004e	74 f0		 je	 SHORT $LL19@SpecialEff
$LN58@SpecialEff:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00050	8b f0		 mov	 esi, eax

; 59   :         } else {

  00052	eb 18		 jmp	 SHORT $LN26@SpecialEff
$LN21@SpecialEff:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00054	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00056	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00058	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0005c	75 0e		 jne	 SHORT $LN26@SpecialEff
  0005e	66 90		 npad	 2
$LL25@SpecialEff:
  00060	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00062	8b f1		 mov	 esi, ecx
  00064	8b c8		 mov	 ecx, eax
  00066	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0006a	74 f4		 je	 SHORT $LL25@SpecialEff
$LN26@SpecialEff:

; 232  :         return this->_Ptr == _Right._Ptr;

  0006c	3b b7 c0 0e 00
	00		 cmp	 esi, DWORD PTR [edi+3776]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1432 : 	for (; itor != m_kMap_dwID_iEffectID.end(); ++itor)

  00072	75 ac		 jne	 SHORT $LL22@SpecialEff
$LN3@SpecialEff:
  00074	5f		 pop	 edi

; 1436 : 	}
; 1437 : }

  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	c3		 ret	 0
?SpecialEffect_Destroy@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::SpecialEffect_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SpecialEffect_Delete@CMapOutdoor@@QAEXK@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwID$ = 8						; size = 4
?SpecialEffect_Delete@CMapOutdoor@@QAEXK@Z PROC		; CMapOutdoor::SpecialEffect_Delete, COMDAT
; _this$ = ecx

; 1416 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _dwID$[ebp]
  0000a	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1417 : 	TSpecialEffectMap::iterator itor = m_kMap_dwID_iEffectID.find(dwID);

  0000b	8d b1 c0 0e 00
	00		 lea	 esi, DWORD PTR [ecx+3776]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00011	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001f	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00023	75 1a		 jne	 SHORT $LN1@SpecialEff
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	8b 45 08	 mov	 eax, DWORD PTR _dwID$[ebp]
  00028	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002b	72 12		 jb	 SHORT $LN1@SpecialEff

; 232  :         return this->_Ptr == _Right._Ptr;

  0002d	39 0e		 cmp	 DWORD PTR [esi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1419 : 	if (m_kMap_dwID_iEffectID.end() == itor)

  0002f	74 0e		 je	 SHORT $LN1@SpecialEff

; 1420 : 		return;
; 1421 : 
; 1422 : 	CEffectManager& rkEffMgr = CEffectManager::Instance();
; 1423 : 	int iEffectID = itor->second;
; 1424 : 	rkEffMgr.DestroyEffectInstance(iEffectID);

  00031	ff 71 14	 push	 DWORD PTR [ecx+20]
  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0003a	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance
$LN1@SpecialEff:
  0003f	5e		 pop	 esi

; 1425 : }

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?SpecialEffect_Delete@CMapOutdoor@@QAEXK@Z ENDP		; CMapOutdoor::SpecialEffect_Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z
_TEXT	SEGMENT
_y$GSCopy$1$ = -124					; size = 4
$T2 = -120						; size = 8
$T3 = -120						; size = 8
_z$GSCopy$1$ = -116					; size = 4
_c_szEffName$GSCopy$1$ = -112				; size = 4
_dwEffectID$1$ = -112					; size = 4
_x$GSCopy$1$ = -108					; size = 4
__Myhead$4 = -108					; size = 4
_mat$5 = -104						; size = 64
$T6 = -40						; size = 12
$T7 = -40						; size = 12
__Loc$8 = -28						; size = 12
__Loc$9 = -28						; size = 12
$T10 = -28						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_z$ = 20						; size = 4
_c_szEffName$ = 24					; size = 4
?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z PROC	; CMapOutdoor::SpecialEffect_Create, COMDAT
; _this$ = ecx

; 1389 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 70	 sub	 esp, 112		; 00000070H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]

; 1391 : 
; 1392 : 	TSpecialEffectMap::iterator itor = m_kMap_dwID_iEffectID.find(dwID);

  00030	8d b9 c0 0e 00
	00		 lea	 edi, DWORD PTR [ecx+3776]
  00036	8b 45 18	 mov	 eax, DWORD PTR _c_szEffName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00039	8b cf		 mov	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1390 : 	CEffectManager& rkEffMgr = CEffectManager::Instance();

  0003b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00041	89 45 90	 mov	 DWORD PTR _c_szEffName$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00044	8d 45 08	 lea	 eax, DWORD PTR _dwID$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1389 : {

  00047	f3 0f 11 45 94	 movss	 DWORD PTR _x$GSCopy$1$[ebp], xmm0
  0004c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00051	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1389 : {

  00052	f3 0f 11 45 84	 movss	 DWORD PTR _y$GSCopy$1$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00057	8d 45 e4	 lea	 eax, DWORD PTR __Loc$9[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1389 : {

  0005a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _z$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0005f	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1389 : {

  00060	f3 0f 11 45 8c	 movss	 DWORD PTR _z$GSCopy$1$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00065	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0006a	8b 45 ec	 mov	 eax, DWORD PTR __Loc$9[ebp+8]
  0006d	8b 5d 08	 mov	 ebx, DWORD PTR _dwID$[ebp]
  00070	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00074	75 05		 jne	 SHORT $LN8@SpecialEff
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00076	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00079	73 02		 jae	 SHORT $LN7@SpecialEff
$LN8@SpecialEff:

; 1463 :         return _Get_scary()->_Myhead;

  0007b	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@SpecialEff:

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0007d	39 07		 cmp	 DWORD PTR [edi], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1393 : 	if (m_kMap_dwID_iEffectID.end() != itor)

  0007f	0f 84 9b 00 00
	00		 je	 $LN125@SpecialEff

; 1394 : 	{
; 1395 : 		DWORD dwEffectID = itor->second;
; 1396 : 		if (rkEffMgr.SelectEffectInstance(dwEffectID))

  00085	ff 70 14	 push	 DWORD PTR [eax+20]
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?SelectEffectInstance@CEffectManager@@QAEHK@Z ; CEffectManager::SelectEffectInstance
  0008f	85 c0		 test	 eax, eax
  00091	0f 84 89 00 00
	00		 je	 $LN125@SpecialEff

; 1397 : 		{
; 1398 : 			D3DXMATRIX mat;
; 1399 : 			D3DXMatrixIdentity(&mat);
; 1400 : 			mat._41 = x;

  00097	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _x$GSCopy$1$[ebp]

; 1403 : 			rkEffMgr.SetEffectInstanceGlobalMatrix(mat);

  0009c	8d 45 98	 lea	 eax, DWORD PTR _mat$5[ebp]
  0009f	f3 0f 11 45 c8	 movss	 DWORD PTR _mat$5[ebp+48], xmm0
  000a4	8b ce		 mov	 ecx, esi
  000a6	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _y$GSCopy$1$[ebp]
  000ab	f3 0f 11 45 cc	 movss	 DWORD PTR _mat$5[ebp+52], xmm0
  000b0	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _z$GSCopy$1$[ebp]
  000b5	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  000b6	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+44], 0
  000bd	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+36], 0
  000c4	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+32], 0
  000cb	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+28], 0
  000d2	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+24], 0
  000d9	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+16], 0
  000e0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+12], 0
  000e7	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+8], 0
  000ee	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _mat$5[ebp+4], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  000f5	c7 45 d4 00 00
	80 3f		 mov	 DWORD PTR _mat$5[ebp+60], 1065353216 ; 3f800000H
  000fc	c7 45 c0 00 00
	80 3f		 mov	 DWORD PTR _mat$5[ebp+40], 1065353216 ; 3f800000H
  00103	c7 45 ac 00 00
	80 3f		 mov	 DWORD PTR _mat$5[ebp+20], 1065353216 ; 3f800000H
  0010a	c7 45 98 00 00
	80 3f		 mov	 DWORD PTR _mat$5[ebp], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1402 : 			mat._43 = z;

  00111	f3 0f 11 45 d0	 movss	 DWORD PTR _mat$5[ebp+56], xmm0

; 1403 : 			rkEffMgr.SetEffectInstanceGlobalMatrix(mat);

  00116	e8 00 00 00 00	 call	 ?SetEffectInstanceGlobalMatrix@CEffectManager@@QAEXABUD3DXMATRIX@@@Z ; CEffectManager::SetEffectInstanceGlobalMatrix

; 1404 : 			return;

  0011b	e9 f2 00 00 00	 jmp	 $LN110@SpecialEff
$LN125@SpecialEff:

; 1405 : 		}
; 1406 : 	}
; 1407 : 
; 1408 : 	rkEffMgr.RegisterEffect(c_szEffName);

  00120	6a 00		 push	 0
  00122	6a 00		 push	 0
  00124	ff 75 90	 push	 DWORD PTR _c_szEffName$GSCopy$1$[ebp]
  00127	8b ce		 mov	 ecx, esi
  00129	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0012e	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _x$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1409 : 	DWORD dwEffectID = rkEffMgr.CreateEffect(c_szEffName,

  00133	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  00136	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00137	f3 0f 11 45 e4	 movss	 DWORD PTR $T10[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1409 : 	DWORD dwEffectID = rkEffMgr.CreateEffect(c_szEffName,

  0013c	8d 45 e4	 lea	 eax, DWORD PTR $T10[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0013f	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _y$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1409 : 	DWORD dwEffectID = rkEffMgr.CreateEffect(c_szEffName,

  00144	8b ce		 mov	 ecx, esi
  00146	50		 push	 eax
  00147	ff 75 90	 push	 DWORD PTR _c_szEffName$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0014a	f3 0f 11 45 e8	 movss	 DWORD PTR $T10[ebp+4], xmm0

; 182  :     z = fz;

  0014f	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _z$GSCopy$1$[ebp]

; 180  :     x = fx;

  00154	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp], 0

; 181  :     y = fy;

  0015b	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+4], 0

; 182  :     z = fz;

  00162	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+8], 0
  00169	f3 0f 11 45 ec	 movss	 DWORD PTR $T10[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1409 : 	DWORD dwEffectID = rkEffMgr.CreateEffect(c_szEffName,

  0016e	e8 00 00 00 00	 call	 ?CreateEffect@CEffectManager@@QAEHPBDABUD3DXVECTOR3@@1@Z ; CEffectManager::CreateEffect
  00173	89 45 90	 mov	 DWORD PTR _dwEffectID$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00176	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00178	89 45 8c	 mov	 DWORD PTR $T3[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0017b	8d 45 88	 lea	 eax, DWORD PTR $T3[ebp]
  0017e	50		 push	 eax
  0017f	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00182	89 5d 88	 mov	 DWORD PTR $T3[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::_Find_lower_bound<unsigned long>
  0018b	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0018f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00192	66 0f d6 45 e4	 movq	 QWORD PTR __Loc$8[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00197	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0019b	75 05		 jne	 SHORT $LN60@SpecialEff
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0019d	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  001a0	73 70		 jae	 SHORT $LN110@SpecialEff
$LN60@SpecialEff:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  001a2	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  001a9	0f 84 81 00 00
	00		 je	 $LN129@SpecialEff

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  001af	8b 07		 mov	 eax, DWORD PTR [edi]
  001b1	89 45 94	 mov	 DWORD PTR __Myhead$4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  001b4	89 7d 88	 mov	 DWORD PTR $T2[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001b7	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  001b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  001c0	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001c7	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  001cc	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  001ce	8b 45 90	 mov	 eax, DWORD PTR _dwEffectID$1$[ebp]
  001d1	89 46 14	 mov	 DWORD PTR [esi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  001d4	8d 45 94	 lea	 eax, DWORD PTR __Myhead$4[ebp]
  001d7	50		 push	 eax
  001d8	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  001d9	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  001dc	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  001e1	8d 45 94	 lea	 eax, DWORD PTR __Myhead$4[ebp]
  001e4	50		 push	 eax
  001e5	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  001ee	8d 45 94	 lea	 eax, DWORD PTR __Myhead$4[ebp]
  001f1	50		 push	 eax
  001f2	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * &>
  001fb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  001fe	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00204	8b cf		 mov	 ecx, edi
  00206	56		 push	 esi
  00207	ff 75 e8	 push	 DWORD PTR __Loc$8[ebp+4]
  0020a	ff 75 e4	 push	 DWORD PTR __Loc$8[ebp]
  0020d	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Insert_node
$LN110@SpecialEff:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1413 : }

  00212	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00215	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0021c	59		 pop	 ecx
  0021d	5f		 pop	 edi
  0021e	5e		 pop	 esi
  0021f	5b		 pop	 ebx
  00220	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00223	33 cd		 xor	 ecx, ebp
  00225	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0022a	8b e5		 mov	 esp, ebp
  0022c	5d		 pop	 ebp
  0022d	c2 14 00	 ret	 20			; 00000014H
$LN129@SpecialEff:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  00230	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN127@SpecialEff:
  00235	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z$2:
  00000	8d 4d 88	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SpecialEffect_Create@CMapOutdoor@@QAEXKMMMPBD@Z ENDP	; CMapOutdoor::SpecialEffect_Create
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >::~map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
??1?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >::~map<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKH@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,int>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?XMasTree_Set@CMapOutdoor@@QAEXMMMPBD0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_c_szTreeName$ = 20					; size = 4
_c_szEffName$ = 24					; size = 4
?XMasTree_Set@CMapOutdoor@@QAEXMMMPBD0@Z PROC		; CMapOutdoor::XMasTree_Set, COMDAT
; _this$ = ecx

; 1383 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1384 : 	XMasTree_Destroy();

  00006	e8 00 00 00 00	 call	 ?XMasTree_Destroy@CMapOutdoor@@QAEXXZ ; CMapOutdoor::XMasTree_Destroy

; 1385 : 	__XMasTree_Create(x, y, z, c_szTreeName, c_szEffName);

  0000b	ff 75 18	 push	 DWORD PTR _c_szEffName$[ebp]
  0000e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _z$[ebp]
  00013	8b ce		 mov	 ecx, esi
  00015	ff 75 14	 push	 DWORD PTR _c_szTreeName$[ebp]
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00021	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00026	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00031	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00036	e8 00 00 00 00	 call	 ?__XMasTree_Create@CMapOutdoor@@AAEXMMMPBD0@Z ; CMapOutdoor::__XMasTree_Create
  0003b	5e		 pop	 esi

; 1386 : }

  0003c	5d		 pop	 ebp
  0003d	c2 14 00	 ret	 20			; 00000014H
?XMasTree_Set@CMapOutdoor@@QAEXMMMPBD0@Z ENDP		; CMapOutdoor::XMasTree_Set
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?XMasTree_Destroy@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?XMasTree_Destroy@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::XMasTree_Destroy, COMDAT
; _this$ = ecx

; 1350 : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1351 : 	if (m_kXMas.m_pkTree)

  00003	8b 8f b8 0e 00
	00		 mov	 ecx, DWORD PTR [edi+3768]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 24		 je	 SHORT $LN2@XMasTree_D

; 1352 : 	{
; 1353 : 		CSpeedTreeForestDirectX8& rkForest=CSpeedTreeForestDirectX8::Instance();

  0000d	56		 push	 esi
  0000e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton

; 1354 : 		m_kXMas.m_pkTree->Clear();

  00014	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear

; 1355 : 		rkForest.DeleteInstance(m_kXMas.m_pkTree);

  00019	ff b7 b8 0e 00
	00		 push	 DWORD PTR [edi+3768]
  0001f	8b ce		 mov	 ecx, esi
  00021	e8 00 00 00 00	 call	 ?DeleteInstance@CSpeedTreeForest@@QAEXPAVCSpeedTreeWrapper@@@Z ; CSpeedTreeForest::DeleteInstance

; 1356 : 		m_kXMas.m_pkTree=NULL;

  00026	c7 87 b8 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+3768], 0
  00030	5e		 pop	 esi
$LN2@XMasTree_D:

; 1357 : 	}
; 1358 : 	if (-1 != m_kXMas.m_iEffectID)

  00031	8b 87 bc 0e 00
	00		 mov	 eax, DWORD PTR [edi+3772]
  00037	83 f8 ff	 cmp	 eax, -1
  0003a	74 16		 je	 SHORT $LN3@XMasTree_D

; 1359 : 	{
; 1360 : 		CEffectManager& rkEffMgr = CEffectManager::Instance();
; 1361 : 		rkEffMgr.DestroyEffectInstance(m_kXMas.m_iEffectID);

  0003c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance

; 1362 : 		m_kXMas.m_iEffectID=-1;

  00048	c7 87 bc 0e 00
	00 ff ff ff ff	 mov	 DWORD PTR [edi+3772], -1
$LN3@XMasTree_D:

; 1363 : 	}
; 1364 : }

  00052	5f		 pop	 edi
  00053	c3		 ret	 0
?XMasTree_Destroy@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::XMasTree_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__XMasTree_Create@CMapOutdoor@@AAEXMMMPBD0@Z
_TEXT	SEGMENT
_rkForest$1$ = -44					; size = 4
_z$GSCopy$1$ = -40					; size = 4
_y$GSCopy$1$ = -36					; size = 4
_x$GSCopy$1$ = -32					; size = 4
$T1 = -28						; size = 12
$T2 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_c_szTreeName$ = 20					; size = 4
_c_szEffName$ = 24					; size = 4
?__XMasTree_Create@CMapOutdoor@@AAEXMMMPBD0@Z PROC	; CMapOutdoor::__XMasTree_Create, COMDAT
; _this$ = ecx

; 1367 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]

; 1368 : 	assert(NULL==m_kXMas.m_pkTree);
; 1369 : 	assert(-1==m_kXMas.m_iEffectID);
; 1370 : 
; 1371 : 	CSpeedTreeForestDirectX8& rkForest=CSpeedTreeForestDirectX8::Instance();

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  0001a	53		 push	 ebx
  0001b	8b 5d 18	 mov	 ebx, DWORD PTR _c_szEffName$[ebp]
  0001e	56		 push	 esi
  0001f	8b 75 14	 mov	 esi, DWORD PTR _c_szTreeName$[ebp]
  00022	57		 push	 edi
  00023	f3 0f 11 45 e0	 movss	 DWORD PTR _x$GSCopy$1$[ebp], xmm0
  00028	8b f9		 mov	 edi, ecx
  0002a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]

; 1372 : 	DWORD dwCRC32 = GetCaseCRC32(c_szTreeName, strlen(c_szTreeName));

  0002f	8b ce		 mov	 ecx, esi
  00031	f3 0f 11 45 dc	 movss	 DWORD PTR _y$GSCopy$1$[ebp], xmm0
  00036	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _z$[ebp]
  0003b	f3 0f 11 45 d8	 movss	 DWORD PTR _z$GSCopy$1$[ebp], xmm0
  00040	89 45 d4	 mov	 DWORD PTR _rkForest$1$[ebp], eax
  00043	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL7@XMasTree_C:
  00046	8a 01		 mov	 al, BYTE PTR [ecx]
  00048	41		 inc	 ecx
  00049	84 c0		 test	 al, al
  0004b	75 f9		 jne	 SHORT $LL7@XMasTree_C
  0004d	2b ca		 sub	 ecx, edx
  0004f	51		 push	 ecx
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32

; 1373 : 	m_kXMas.m_pkTree=rkForest.CreateInstance(x, y, z, dwCRC32, c_szTreeName);

  00056	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _z$GSCopy$1$[ebp]
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 4d d4	 mov	 ecx, DWORD PTR _rkForest$1$[ebp]
  00061	56		 push	 esi
  00062	50		 push	 eax
  00063	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00066	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0006c	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y$GSCopy$1$[ebp]
  00071	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00077	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x$GSCopy$1$[ebp]
  0007c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00081	e8 00 00 00 00	 call	 ?CreateInstance@CSpeedTreeForest@@QAEPAVCSpeedTreeWrapper@@MMMKPBD@Z ; CSpeedTreeForest::CreateInstance

; 1374 : 
; 1375 : 	CEffectManager& rkEffMgr = CEffectManager::Instance();
; 1376 : 	rkEffMgr.RegisterEffect(c_szEffName);

  00086	6a 00		 push	 0
  00088	89 87 b8 0e 00
	00		 mov	 DWORD PTR [edi+3768], eax
  0008e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00094	8b ce		 mov	 ecx, esi
  00096	6a 00		 push	 0
  00098	53		 push	 ebx
  00099	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0009e	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1377 : 	m_kXMas.m_iEffectID = rkEffMgr.CreateEffect(c_szEffName,

  000a3	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000a6	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  000a7	f3 0f 11 45 e4	 movss	 DWORD PTR $T1[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1377 : 	m_kXMas.m_iEffectID = rkEffMgr.CreateEffect(c_szEffName,

  000ac	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000af	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1377 : 	m_kXMas.m_iEffectID = rkEffMgr.CreateEffect(c_szEffName,

  000b4	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000b6	f3 0f 11 45 e8	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 182  :     z = fz;

  000bb	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _z$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1377 : 	m_kXMas.m_iEffectID = rkEffMgr.CreateEffect(c_szEffName,

  000c0	50		 push	 eax
  000c1	53		 push	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  000c2	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 181  :     y = fy;

  000c9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+4], 0

; 182  :     z = fz;

  000d0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+8], 0
  000d7	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1377 : 	m_kXMas.m_iEffectID = rkEffMgr.CreateEffect(c_szEffName,

  000dc	e8 00 00 00 00	 call	 ?CreateEffect@CEffectManager@@QAEHPBDABUD3DXVECTOR3@@1@Z ; CEffectManager::CreateEffect

; 1378 : 												D3DXVECTOR3(x, y, z),
; 1379 : 												D3DXVECTOR3(0.0f, 0.0f, 0.0f));
; 1380 : }

  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	89 87 bc 0e 00
	00		 mov	 DWORD PTR [edi+3772], eax
  000ea	33 cd		 xor	 ecx, ebp
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 14 00	 ret	 20			; 00000014H
?__XMasTree_Create@CMapOutdoor@@AAEXMMMPBD0@Z ENDP	; CMapOutdoor::__XMasTree_Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__XMasTree_Initialize@CMapOutdoor@@AAEXXZ
_TEXT	SEGMENT
?__XMasTree_Initialize@CMapOutdoor@@AAEXXZ PROC		; CMapOutdoor::__XMasTree_Initialize, COMDAT
; _this$ = ecx

; 1345 : 	m_kXMas.m_pkTree=NULL;

  00000	c7 81 b8 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+3768], 0

; 1346 : 	m_kXMas.m_iEffectID=-1;

  0000a	c7 81 bc 0e 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+3772], -1

; 1347 : }

  00014	c3		 ret	 0
?__XMasTree_Initialize@CMapOutdoor@@AAEXXZ ENDP		; CMapOutdoor::__XMasTree_Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?EnablePortal@CMapOutdoor@@QAEX_N@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 1
?EnablePortal@CMapOutdoor@@QAEX_N@Z PROC		; CMapOutdoor::EnablePortal, COMDAT
; _this$ = ecx

; 390  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 391  : 	m_bEnablePortal = bFlag;

  00004	8a 5d 08	 mov	 bl, BYTE PTR _bFlag$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	88 99 b7 0e 00
	00		 mov	 BYTE PTR [ecx+3767], bl
  0000f	8d b1 e0 00 00
	00		 lea	 esi, DWORD PTR [ecx+224]
  00015	bf 09 00 00 00	 mov	 edi, 9
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@EnablePort:

; 394  : 		if (m_pArea[i])

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	85 c9		 test	 ecx, ecx
  00024	74 09		 je	 SHORT $LN2@EnablePort

; 395  : 			m_pArea[i]->EnablePortal(bFlag);

  00026	0f b6 c3	 movzx	 eax, bl
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?EnablePortal@CArea@@QAEXH@Z ; CArea::EnablePortal
$LN2@EnablePort:

; 392  : 
; 393  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0002f	83 c6 04	 add	 esi, 4
  00032	83 ef 01	 sub	 edi, 1
  00035	75 e9		 jne	 SHORT $LL4@EnablePort

; 396  : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?EnablePortal@CMapOutdoor@@QAEX_N@Z ENDP		; CMapOutdoor::EnablePortal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetBaseXY@CMapOutdoor@@QAEXKK@Z
_TEXT	SEGMENT
_dwBaseX$ = 8						; size = 4
_dwBaseY$ = 12						; size = 4
?SetBaseXY@CMapOutdoor@@QAEXKK@Z PROC			; CMapOutdoor::SetBaseXY, COMDAT
; _this$ = ecx

; 1333 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1334 : 	m_dwBaseX = dwBaseX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwBaseX$[ebp]
  00006	89 81 a0 0e 00
	00		 mov	 DWORD PTR [ecx+3744], eax

; 1335 : 	m_dwBaseY = dwBaseY;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _dwBaseY$[ebp]
  0000f	89 81 a4 0e 00
	00		 mov	 DWORD PTR [ecx+3748], eax

; 1336 : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?SetBaseXY@CMapOutdoor@@QAEXKK@Z ENDP			; CMapOutdoor::SetBaseXY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetBaseXY@CMapOutdoor@@QAEXPAK0@Z
_TEXT	SEGMENT
_pdwBaseX$ = 8						; size = 4
_pdwBaseY$ = 12						; size = 4
?GetBaseXY@CMapOutdoor@@QAEXPAK0@Z PROC			; CMapOutdoor::GetBaseXY, COMDAT
; _this$ = ecx

; 1327 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1328 : 	*pdwBaseX = m_dwBaseX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pdwBaseX$[ebp]
  00006	8b 91 a0 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3744]
  0000c	89 10		 mov	 DWORD PTR [eax], edx

; 1329 : 	*pdwBaseY = m_dwBaseY;

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pdwBaseY$[ebp]
  00011	8b 89 a4 0e 00
	00		 mov	 ecx, DWORD PTR [ecx+3748]
  00017	89 08		 mov	 DWORD PTR [eax], ecx

; 1330 : }

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?GetBaseXY@CMapOutdoor@@QAEXPAK0@Z ENDP			; CMapOutdoor::GetBaseXY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?AddNewMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJW4EMonsterAreaInfoType@2@KKW4EMonsterDir@2@@Z
_TEXT	SEGMENT
_pMonsterAreaInfo$ = -4					; size = 4
_lOriginX$ = 8						; size = 4
_lOriginY$ = 12						; size = 4
_lSizeX$ = 16						; size = 4
_lSizeY$ = 20						; size = 4
_eMonsterAreaInfoType$ = 24				; size = 4
_dwVID$ = 28						; size = 4
_dwCount$ = 32						; size = 4
_eMonsterDir$ = 36					; size = 4
?AddNewMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJW4EMonsterAreaInfoType@2@KKW4EMonsterDir@2@@Z PROC ; CMapOutdoor::AddNewMonsterAreaInfo, COMDAT
; _this$ = ecx

; 1306 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1307 : 	CMonsterAreaInfo * pMonsterAreaInfo = m_kPool_kMonsterAreaInfo.Alloc();

  00008	8d 8f 6c 0e 00
	00		 lea	 ecx, DWORD PTR [edi+3692]
  0000e	e8 00 00 00 00	 call	 ?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ ; CDynamicPool<CMonsterAreaInfo>::Alloc
  00013	8b f0		 mov	 esi, eax

; 1308 : 	pMonsterAreaInfo->Clear();

  00015	8b ce		 mov	 ecx, esi
  00017	89 75 fc	 mov	 DWORD PTR _pMonsterAreaInfo$[ebp], esi
  0001a	e8 00 00 00 00	 call	 ?Clear@CMonsterAreaInfo@@QAEXXZ ; CMonsterAreaInfo::Clear

; 1309 : 	pMonsterAreaInfo->SetOrigin(lOriginX, lOriginY);

  0001f	ff 75 0c	 push	 DWORD PTR _lOriginY$[ebp]
  00022	8b ce		 mov	 ecx, esi
  00024	ff 75 08	 push	 DWORD PTR _lOriginX$[ebp]
  00027	e8 00 00 00 00	 call	 ?SetOrigin@CMonsterAreaInfo@@QAEXJJ@Z ; CMonsterAreaInfo::SetOrigin

; 1310 : 	pMonsterAreaInfo->SetSize(lSizeX, lSizeY);

  0002c	ff 75 14	 push	 DWORD PTR _lSizeY$[ebp]
  0002f	8b ce		 mov	 ecx, esi
  00031	ff 75 10	 push	 DWORD PTR _lSizeX$[ebp]
  00034	e8 00 00 00 00	 call	 ?SetSize@CMonsterAreaInfo@@QAEXJJ@Z ; CMonsterAreaInfo::SetSize

; 1311 : 
; 1312 : 	pMonsterAreaInfo->SetMonsterAreaInfoType(eMonsterAreaInfoType);

  00039	8b 45 18	 mov	 eax, DWORD PTR _eMonsterAreaInfoType$[ebp]
  0003c	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1313 : 
; 1314 : 	if (CMonsterAreaInfo::MONSTERAREAINFOTYPE_MONSTER == eMonsterAreaInfoType)

  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 08		 jne	 SHORT $LN2@AddNewMons

; 1315 : 		pMonsterAreaInfo->SetMonsterVID(dwVID);

  00044	8b 45 1c	 mov	 eax, DWORD PTR _dwVID$[ebp]
  00047	89 46 40	 mov	 DWORD PTR [esi+64], eax
  0004a	eb 0b		 jmp	 SHORT $LN4@AddNewMons
$LN2@AddNewMons:

; 1316 : 	else if (CMonsterAreaInfo::MONSTERAREAINFOTYPE_GROUP == eMonsterAreaInfoType)

  0004c	83 f8 02	 cmp	 eax, 2
  0004f	75 06		 jne	 SHORT $LN4@AddNewMons

; 1317 : 		pMonsterAreaInfo->SetMonsterGroupID(dwVID);

  00051	8b 45 1c	 mov	 eax, DWORD PTR _dwVID$[ebp]
  00054	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN4@AddNewMons:

; 1318 : 	pMonsterAreaInfo->SetMonsterCount(dwCount);

  00057	ff 75 20	 push	 DWORD PTR _dwCount$[ebp]
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?SetMonsterCount@CMonsterAreaInfo@@QAEXK@Z ; CMonsterAreaInfo::SetMonsterCount

; 1319 : 	pMonsterAreaInfo->SetMonsterDirection(eMonsterDir);

  00061	ff 75 24	 push	 DWORD PTR _eMonsterDir$[ebp]
  00064	8b ce		 mov	 ecx, esi
  00066	e8 00 00 00 00	 call	 ?SetMonsterDirection@CMonsterAreaInfo@@QAEXW4EMonsterDir@1@@Z ; CMonsterAreaInfo::SetMonsterDirection
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006b	8b 87 94 0e 00
	00		 mov	 eax, DWORD PTR [edi+3732]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1320 : 	m_MonsterAreaInfoPtrVector.push_back(pMonsterAreaInfo);

  00071	8d 8f 90 0e 00
	00		 lea	 ecx, DWORD PTR [edi+3728]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00077	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0007a	74 10		 je	 SHORT $LN9@AddNewMons

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0007c	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1323 : }

  0007e	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00080	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
  00084	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1323 : }

  00085	5e		 pop	 esi
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 20 00	 ret	 32			; 00000020H
$LN9@AddNewMons:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0008c	8d 55 fc	 lea	 edx, DWORD PTR _pMonsterAreaInfo$[ebp]
  0008f	52		 push	 edx
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Emplace_reallocate<CMonsterAreaInfo * const &>
  00096	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1323 : }

  00097	8b c6		 mov	 eax, esi
  00099	5e		 pop	 esi
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 20 00	 ret	 32			; 00000020H
?AddNewMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJW4EMonsterAreaInfoType@2@KKW4EMonsterDir@2@@Z ENDP ; CMapOutdoor::AddNewMonsterAreaInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetMonsterAreaInfoFromVectorIndex@CMapOutdoor@@QAE_NKPAPAVCMonsterAreaInfo@@@Z
_TEXT	SEGMENT
_dwMonsterAreaInfoVectorIndex$ = 8			; size = 4
_ppMonsterAreaInfo$ = 12				; size = 4
?GetMonsterAreaInfoFromVectorIndex@CMapOutdoor@@QAE_NKPAPAVCMonsterAreaInfo@@@Z PROC ; CMapOutdoor::GetMonsterAreaInfoFromVectorIndex, COMDAT
; _this$ = ecx

; 1294 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 94 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3732]
  00009	8b 91 90 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3728]
  0000f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1295 : 	if (dwMonsterAreaInfoVectorIndex >= m_MonsterAreaInfoPtrVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwMonsterAreaInfoVectorIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1295 : 	if (dwMonsterAreaInfoVectorIndex >= m_MonsterAreaInfoPtrVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetMonster

; 1296 : 		return false;

  0001b	32 c0		 xor	 al, al

; 1300 : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
$LN2@GetMonster:

; 1297 : 
; 1298 : 	*ppMonsterAreaInfo = m_MonsterAreaInfoPtrVector[dwMonsterAreaInfoVectorIndex];

  00021	8b 45 0c	 mov	 eax, DWORD PTR _ppMonsterAreaInfo$[ebp]
  00024	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00027	89 08		 mov	 DWORD PTR [eax], ecx

; 1299 : 	return true;

  00029	b0 01		 mov	 al, 1

; 1300 : }

  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?GetMonsterAreaInfoFromVectorIndex@CMapOutdoor@@QAE_NKPAPAVCMonsterAreaInfo@@@Z ENDP ; CMapOutdoor::GetMonsterAreaInfoFromVectorIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?RemoveAllMonsterAreaInfo@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
__Last$1$ = -12						; size = 4
__First$1$ = -8						; size = 4
tv591 = -4						; size = 4
?RemoveAllMonsterAreaInfo@CMapOutdoor@@QAEXXZ PROC	; CMapOutdoor::RemoveAllMonsterAreaInfo, COMDAT
; _this$ = ecx

; 1281 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000a	8b 86 90 0e 00
	00		 mov	 eax, DWORD PTR [esi+3728]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1282 : 	m_MonsterAreaInfoPtrVectorIterator = m_MonsterAreaInfoPtrVector.begin();

  00010	89 86 9c 0e 00
	00		 mov	 DWORD PTR [esi+3740], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	3b 86 94 0e 00
	00		 cmp	 eax, DWORD PTR [esi+3732]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1283 : 	while (m_MonsterAreaInfoPtrVectorIterator != m_MonsterAreaInfoPtrVector.end())

  0001c	74 24		 je	 SHORT $LN3@RemoveAllM
  0001e	66 90		 npad	 2
$LL2@RemoveAllM:

; 1284 : 	{
; 1285 : 		CMonsterAreaInfo * pMonsterAreaInfo = *m_MonsterAreaInfoPtrVectorIterator;

  00020	8b 8e 9c 0e 00
	00		 mov	 ecx, DWORD PTR [esi+3740]

; 1286 : 		pMonsterAreaInfo->Clear();

  00026	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00028	e8 00 00 00 00	 call	 ?Clear@CMonsterAreaInfo@@QAEXXZ ; CMonsterAreaInfo::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0002d	83 86 9c 0e 00
	00 04		 add	 DWORD PTR [esi+3740], 4
  00034	8b 86 9c 0e 00
	00		 mov	 eax, DWORD PTR [esi+3740]

; 149  :         return _Ptr == _Right._Ptr;

  0003a	3b 86 94 0e 00
	00		 cmp	 eax, DWORD PTR [esi+3732]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1283 : 	while (m_MonsterAreaInfoPtrVectorIterator != m_MonsterAreaInfoPtrVector.end())

  00040	75 de		 jne	 SHORT $LL2@RemoveAllM
$LN3@RemoveAllM:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 85   : 			m_kVct_pkFree=m_kVct_pkData;

  00042	8d 86 70 0e 00
	00		 lea	 eax, DWORD PTR [esi+3696]
  00048	8d 9e 7c 0e 00
	00		 lea	 ebx, DWORD PTR [esi+3708]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1168 :         if (this != _STD addressof(_Right)) {

  0004e	3b d8		 cmp	 ebx, eax
  00050	0f 84 af 00 00
	00		 je	 $LN61@RemoveAllM

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00056	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00059	8b 00		 mov	 eax, DWORD PTR [eax]

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  0005b	8b 13		 mov	 edx, DWORD PTR [ebx]

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  0005d	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0005e	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00060	89 4d f4	 mov	 DWORD PTR __Last$1$[ebp], ecx

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00063	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00066	2b f8		 sub	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00068	2b ca		 sub	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0006a	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  0006d	c1 f9 02	 sar	 ecx, 2

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00070	89 45 f8	 mov	 DWORD PTR __First$1$[ebp], eax

; 1108 :             if (_Newsize > _Oldcapacity) {

  00073	3b f9		 cmp	 edi, ecx
  00075	76 77		 jbe	 SHORT $LN59@RemoveAllM

; 1285 :         if (_Newsize > max_size()) {

  00077	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  0007d	0f 87 94 00 00
	00		 ja	 $LN73@RemoveAllM

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00083	8b c1		 mov	 eax, ecx
  00085	d1 e8		 shr	 eax, 1
  00087	89 45 fc	 mov	 DWORD PTR tv591[ebp], eax
  0008a	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0008f	2b 45 fc	 sub	 eax, DWORD PTR tv591[ebp]
  00092	3b c8		 cmp	 ecx, eax
  00094	77 0c		 ja	 SHORT $LN45@RemoveAllM

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00096	8b 45 fc	 mov	 eax, DWORD PTR tv591[ebp]
  00099	03 c1		 add	 eax, ecx

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0009b	3b c7		 cmp	 eax, edi
  0009d	0f 42 c7	 cmovb	 eax, edi
  000a0	8b f8		 mov	 edi, eax
$LN45@RemoveAllM:

; 1291 :         if (_Myfirst) { // destroy and deallocate old array

  000a2	85 d2		 test	 edx, edx
  000a4	74 25		 je	 SHORT $LN41@RemoveAllM
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a6	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  000ad	50		 push	 eax
  000ae	52		 push	 edx
  000af	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1295 :             _Myfirst = pointer();

  000b4	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ba	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1296 :             _Mylast  = pointer();

  000bd	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1297 :             _Myend   = pointer();

  000c4	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN41@RemoveAllM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000cb	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  000d1	77 49		 ja	 SHORT $LN74@RemoveAllM

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000d3	c1 e7 02	 shl	 edi, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000d6	57		 push	 edi
  000d7	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1643 :         _Myfirst           = _Newvec;

  000dc	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000de	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1644 :         _Mylast            = _Newvec;

  000e1	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  000e4	03 c7		 add	 eax, edi
  000e6	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  000e9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000eb	8b 45 f8	 mov	 eax, DWORD PTR __First$1$[ebp]
$LN59@RemoveAllM:

; 1112 :             _Mylast = _Refancy<pointer>(_Copy_memmove(_First, _Last, _Unfancy(_Myfirst)));

  000ee	52		 push	 edx
  000ef	ff 75 f4	 push	 DWORD PTR __Last$1$[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCMonsterAreaInfo@@PAPAV1@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@00@Z ; std::_Copy_memmove<CMonsterAreaInfo * *,CMonsterAreaInfo * *>
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCMonsterAreaInfo@@$0A@@std@@YAPAPAVCMonsterAreaInfo@@PAPAV1@@Z ; std::_Refancy<CMonsterAreaInfo * *,0>
  000fe	83 c4 10	 add	 esp, 16			; 00000010H
  00101	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00104	5f		 pop	 edi
$LN61@RemoveAllM:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1290 : 	m_MonsterAreaInfoPtrVector.clear();

  00105	8b 86 90 0e 00
	00		 mov	 eax, DWORD PTR [esi+3728]
  0010b	89 86 94 0e 00
	00		 mov	 DWORD PTR [esi+3732], eax
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx

; 1291 : }

  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
$LN73@RemoveAllM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1286 :             _Xlength();

  00117	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@CAXXZ ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Xlength
$LN74@RemoveAllM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0011c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN71@RemoveAllM:
  00121	cc		 int	 3
?RemoveAllMonsterAreaInfo@CMapOutdoor@@QAEXXZ ENDP	; CMapOutdoor::RemoveAllMonsterAreaInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?AddMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJ@Z
_TEXT	SEGMENT
_pMonsterAreaInfo$ = -4					; size = 4
_lOriginX$ = 8						; size = 4
_lOriginY$ = 12						; size = 4
_lSizeX$ = 16						; size = 4
_lSizeY$ = 20						; size = 4
?AddMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJ@Z PROC ; CMapOutdoor::AddMonsterAreaInfo, COMDAT
; _this$ = ecx

; 1270 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi

; 1271 : 	CMonsterAreaInfo * pMonsterAreaInfo = m_kPool_kMonsterAreaInfo.Alloc();

  00008	8d 8e 6c 0e 00
	00		 lea	 ecx, DWORD PTR [esi+3692]
  0000e	e8 00 00 00 00	 call	 ?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ ; CDynamicPool<CMonsterAreaInfo>::Alloc
  00013	8b f8		 mov	 edi, eax

; 1272 : 	pMonsterAreaInfo->Clear();

  00015	8b cf		 mov	 ecx, edi
  00017	89 7d fc	 mov	 DWORD PTR _pMonsterAreaInfo$[ebp], edi
  0001a	e8 00 00 00 00	 call	 ?Clear@CMonsterAreaInfo@@QAEXXZ ; CMonsterAreaInfo::Clear

; 1273 : 	pMonsterAreaInfo->SetOrigin(lOriginX, lOriginY);

  0001f	ff 75 0c	 push	 DWORD PTR _lOriginY$[ebp]
  00022	8b cf		 mov	 ecx, edi
  00024	ff 75 08	 push	 DWORD PTR _lOriginX$[ebp]
  00027	e8 00 00 00 00	 call	 ?SetOrigin@CMonsterAreaInfo@@QAEXJJ@Z ; CMonsterAreaInfo::SetOrigin

; 1274 : 	pMonsterAreaInfo->SetSize(lSizeX, lSizeY);

  0002c	ff 75 14	 push	 DWORD PTR _lSizeY$[ebp]
  0002f	8b cf		 mov	 ecx, edi
  00031	ff 75 10	 push	 DWORD PTR _lSizeX$[ebp]
  00034	e8 00 00 00 00	 call	 ?SetSize@CMonsterAreaInfo@@QAEXJJ@Z ; CMonsterAreaInfo::SetSize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00039	8b 86 94 0e 00
	00		 mov	 eax, DWORD PTR [esi+3732]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1275 : 	m_MonsterAreaInfoPtrVector.push_back(pMonsterAreaInfo);

  0003f	8d 8e 90 0e 00
	00		 lea	 ecx, DWORD PTR [esi+3728]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00045	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00048	74 10		 je	 SHORT $LN6@AddMonster

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0004a	89 38		 mov	 DWORD PTR [eax], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1278 : }

  0004c	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  0004e	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
  00052	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1278 : }

  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 10 00	 ret	 16			; 00000010H
$LN6@AddMonster:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005a	8d 55 fc	 lea	 edx, DWORD PTR _pMonsterAreaInfo$[ebp]
  0005d	52		 push	 edx
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Emplace_reallocate<CMonsterAreaInfo * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1278 : }

  00064	8b c7		 mov	 eax, edi
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 10 00	 ret	 16			; 00000010H
?AddMonsterAreaInfo@CMapOutdoor@@QAEPAVCMonsterAreaInfo@@JJJJ@Z ENDP ; CMapOutdoor::AddMonsterAreaInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCMonsterAreaInfo@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCMonsterAreaInfo@@@@UAEPAXI@Z PROC	; CDynamicPool<CMonsterAreaInfo>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ ; CDynamicPool<CMonsterAreaInfo>::~CDynamicPool<CMonsterAreaInfo>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCMonsterAreaInfo@@@@UAEPAXI@Z ENDP	; CDynamicPool<CMonsterAreaInfo>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCMonsterAreaInfo@@@@KAXPAVCMonsterAreaInfo@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCMonsterAreaInfo@@@@KAXPAVCMonsterAreaInfo@@@Z PROC ; CDynamicPool<CMonsterAreaInfo>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCMonsterAreaInfo@@@@KAXPAVCMonsterAreaInfo@@@Z ENDP ; CDynamicPool<CMonsterAreaInfo>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ PROC ; CDynamicPool<CMonsterAreaInfo>::Alloc, COMDAT
; _this$ = ecx

; 62   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 63   : 			if (m_kVct_pkFree.empty())

  00027	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0002a	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  0002d	75 79		 jne	 SHORT $LN2@Alloc

; 64   : 			{
; 65   : 				T* pkNewData=new T;

  0002f	68 9c 00 00 00	 push	 156			; 0000009cH
  00034	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00039	83 c4 04	 add	 esp, 4
  0003c	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	85 c0		 test	 eax, eax
  00048	74 0b		 je	 SHORT $LN4@Alloc
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ??0CMonsterAreaInfo@@QAE@XZ ; CMonsterAreaInfo::CMonsterAreaInfo
  00051	8b f8		 mov	 edi, eax
  00053	eb 02		 jmp	 SHORT $LN5@Alloc
$LN4@Alloc:
  00055	33 ff		 xor	 edi, edi
$LN5@Alloc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00057	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 66   : 				m_kVct_pkData.push_back(pkNewData);

  0005a	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	89 7d f0	 mov	 DWORD PTR _pkNewData$3[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00067	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0006a	74 1c		 je	 SHORT $LN12@Alloc

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0006c	89 38		 mov	 DWORD PTR [eax], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 68   : 				return pkNewData;

  0006e	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00070	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00074	ff 46 20	 inc	 DWORD PTR [esi+32]

; 74   : 		}

  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN12@Alloc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00088	8d 55 f0	 lea	 edx, DWORD PTR _pkNewData$3[ebp]
  0008b	52		 push	 edx
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCMonsterAreaInfo@@@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAEPAPAVCMonsterAreaInfo@@QAPAV2@ABQAV2@@Z ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Emplace_reallocate<CMonsterAreaInfo * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00092	ff 46 20	 inc	 DWORD PTR [esi+32]

; 68   : 				return pkNewData;

  00095	8b c7		 mov	 eax, edi

; 74   : 		}

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
$LN2@Alloc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000a8	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  000ab	83 c0 fc	 add	 eax, -4			; fffffffcH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1338 :         --_Mylast;

  000b0	89 46 14	 mov	 DWORD PTR [esi+20], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 73   : 			return pkFreeData;

  000b3	8b c1		 mov	 eax, ecx

; 74   : 		}

  000b5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bf	59		 pop	 ecx
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ$0:
  00000	68 9c 00 00 00	 push	 156			; 0000009cH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Alloc@?$CDynamicPool@VCMonsterAreaInfo@@@@QAEPAVCMonsterAreaInfo@@XZ ENDP ; CDynamicPool<CMonsterAreaInfo>::Alloc
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ PROC	; CDynamicPool<CMonsterAreaInfo>::~CDynamicPool<CMonsterAreaInfo>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCMonsterAreaInfo@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ ENDP	; CDynamicPool<CMonsterAreaInfo>::~CDynamicPool<CMonsterAreaInfo>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ??1?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAE@XZ PROC ; std::list<tagRECT,std::allocator<tagRECT> >::~list<tagRECT,std::allocator<tagRECT> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 328  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00017	6a 18		 push	 24			; 00000018H
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00029	6a 18		 push	 24			; 00000018H
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAE@XZ ENDP ; std::list<tagRECT,std::allocator<tagRECT> >::~list<tagRECT,std::allocator<tagRECT> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ PROC ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ ENDP ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
$T5 = -16						; size = 16
$T6 = -16						; size = 16
_mat$ = 8						; size = 4
?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z PROC ; CMapOutdoor::BuildViewFrustum, COMDAT
; _this$ = ecx

; 717  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 719  : 	m_plane[0] = D3DXPLANE(          mat._13,           mat._23,           mat._33,           mat._43);		// Near

  00006	8b 45 08	 mov	 eax, DWORD PTR _mat$[ebp]
  00009	56		 push	 esi
  0000a	8d b1 1c 02 00
	00		 lea	 esi, DWORD PTR [ecx+540]
  00010	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 829  :     a = fa;

  00011	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00016	f3 0f 11 45 f0	 movss	 DWORD PTR $T6[ebp], xmm0

; 830  :     b = fb;

  0001b	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  00020	f3 0f 11 45 f4	 movss	 DWORD PTR $T6[ebp+4], xmm0

; 831  :     c = fc;

  00025	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  0002a	f3 0f 11 45 f8	 movss	 DWORD PTR $T6[ebp+8], xmm0

; 832  :     d = fd;

  0002f	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00034	f3 0f 11 45 fc	 movss	 DWORD PTR $T6[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 719  : 	m_plane[0] = D3DXPLANE(          mat._13,           mat._23,           mat._33,           mat._43);		// Near

  00039	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T6[ebp]
  0003d	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 720  : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);		// Far

  00040	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00045	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 829  :     a = fa;

  0004a	f3 0f 11 45 f0	 movss	 DWORD PTR $T5[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 720  : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);		// Far

  0004f	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00054	f3 0f 5c 40 18	 subss	 xmm0, DWORD PTR [eax+24]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 830  :     b = fb;

  00059	f3 0f 11 45 f4	 movss	 DWORD PTR $T5[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 720  : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);		// Far

  0005e	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00063	f3 0f 5c 40 28	 subss	 xmm0, DWORD PTR [eax+40]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 831  :     c = fc;

  00068	f3 0f 11 45 f8	 movss	 DWORD PTR $T5[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 720  : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);		// Far

  0006d	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00072	f3 0f 5c 40 38	 subss	 xmm0, DWORD PTR [eax+56]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 832  :     d = fd;

  00077	f3 0f 11 45 fc	 movss	 DWORD PTR $T5[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 720  : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);		// Far

  0007c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T5[ebp]
  00080	0f 11 81 2c 02
	00 00		 movups	 XMMWORD PTR [ecx+556], xmm0

; 721  : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);		// Left

  00087	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0008c	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 829  :     a = fa;

  00090	f3 0f 11 45 f0	 movss	 DWORD PTR $T4[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 721  : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);		// Left

  00095	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0009a	f3 0f 58 40 10	 addss	 xmm0, DWORD PTR [eax+16]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 830  :     b = fb;

  0009f	f3 0f 11 45 f4	 movss	 DWORD PTR $T4[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 721  : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);		// Left

  000a4	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  000a9	f3 0f 58 40 20	 addss	 xmm0, DWORD PTR [eax+32]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 831  :     c = fc;

  000ae	f3 0f 11 45 f8	 movss	 DWORD PTR $T4[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 721  : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);		// Left

  000b3	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  000b8	f3 0f 58 40 30	 addss	 xmm0, DWORD PTR [eax+48]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 832  :     d = fd;

  000bd	f3 0f 11 45 fc	 movss	 DWORD PTR $T4[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 721  : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);		// Left

  000c2	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T4[ebp]
  000c6	0f 11 81 3c 02
	00 00		 movups	 XMMWORD PTR [ecx+572], xmm0

; 722  : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);		// Right

  000cd	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  000d2	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 829  :     a = fa;

  000d6	f3 0f 11 45 f0	 movss	 DWORD PTR $T3[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 722  : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);		// Right

  000db	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  000e0	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 830  :     b = fb;

  000e5	f3 0f 11 45 f4	 movss	 DWORD PTR $T3[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 722  : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);		// Right

  000ea	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  000ef	f3 0f 5c 40 20	 subss	 xmm0, DWORD PTR [eax+32]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 831  :     c = fc;

  000f4	f3 0f 11 45 f8	 movss	 DWORD PTR $T3[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 722  : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);		// Right

  000f9	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  000fe	f3 0f 5c 40 30	 subss	 xmm0, DWORD PTR [eax+48]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 832  :     d = fd;

  00103	f3 0f 11 45 fc	 movss	 DWORD PTR $T3[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 722  : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);		// Right

  00108	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T3[ebp]
  0010c	0f 11 81 4c 02
	00 00		 movups	 XMMWORD PTR [ecx+588], xmm0

; 723  : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);		// Bottom

  00113	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00118	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 829  :     a = fa;

  0011d	f3 0f 11 45 f0	 movss	 DWORD PTR $T2[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 723  : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);		// Bottom

  00122	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00127	f3 0f 58 40 14	 addss	 xmm0, DWORD PTR [eax+20]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 830  :     b = fb;

  0012c	f3 0f 11 45 f4	 movss	 DWORD PTR $T2[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 723  : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);		// Bottom

  00131	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00136	f3 0f 58 40 24	 addss	 xmm0, DWORD PTR [eax+36]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 831  :     c = fc;

  0013b	f3 0f 11 45 f8	 movss	 DWORD PTR $T2[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 723  : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);		// Bottom

  00140	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00145	f3 0f 58 40 34	 addss	 xmm0, DWORD PTR [eax+52]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 832  :     d = fd;

  0014a	f3 0f 11 45 fc	 movss	 DWORD PTR $T2[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 723  : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);		// Bottom

  0014f	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T2[ebp]
  00153	0f 11 81 5c 02
	00 00		 movups	 XMMWORD PTR [ecx+604], xmm0

; 724  : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);		// Top

  0015a	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0015f	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 829  :     a = fa;

  00164	f3 0f 11 45 f0	 movss	 DWORD PTR $T1[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 724  : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);		// Top

  00169	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0016e	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 830  :     b = fb;

  00173	f3 0f 11 45 f4	 movss	 DWORD PTR $T1[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 724  : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);		// Top

  00178	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0017d	f3 0f 5c 40 24	 subss	 xmm0, DWORD PTR [eax+36]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 831  :     c = fc;

  00182	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 724  : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);		// Top

  00187	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  0018c	f3 0f 5c 40 34	 subss	 xmm0, DWORD PTR [eax+52]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 832  :     d = fd;

  00191	f3 0f 11 45 fc	 movss	 DWORD PTR $T1[ebp+12], xmm0

; 829  :     a = fa;

  00196	bf 06 00 00 00	 mov	 edi, 6
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 724  : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);		// Top

  0019b	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T1[ebp]
  0019f	0f 11 81 6c 02
	00 00		 movups	 XMMWORD PTR [ecx+620], xmm0
$LL4@BuildViewF:

; 725  : 
; 726  : 	for (int i = 0; i < 6; ++i)
; 727  : 		D3DXPlaneNormalize(&m_plane[i],&m_plane[i]);

  001a6	56		 push	 esi
  001a7	56		 push	 esi
  001a8	e8 00 00 00 00	 call	 _D3DXPlaneNormalize@8
  001ad	83 c6 10	 add	 esi, 16			; 00000010H
  001b0	83 ef 01	 sub	 edi, 1
  001b3	75 f1		 jne	 SHORT $LL4@BuildViewF

; 728  : }

  001b5	5f		 pop	 edi
  001b6	5e		 pop	 esi
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c2 04 00	 ret	 4
?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z ENDP ; CMapOutdoor::BuildViewFrustum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAE@XZ PROC ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::~vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 f0	 and	 eax, -16		; fffffff0H
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAE@XZ ENDP ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::~vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::~vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 f8	 and	 eax, -8			; fffffff8H
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::~vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z
_TEXT	SEGMENT
_wCoordX$ = 8						; size = 2
_wCoordY$ = 12						; size = 2
_pbyTerrainNum$ = 16					; size = 4
?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z PROC	; CMapOutdoor::GetTerrainNumFromCoord, COMDAT
; _this$ = ecx

; 707  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 708  : 	*pbyTerrainNum = (wCoordY - m_CurCoordinate.m_sTerrainCoordY + LOAD_SIZE_WIDTH) * 3 +

  00003	8a 45 0c	 mov	 al, BYTE PTR _wCoordY$[ebp]
  00006	2a 41 76	 sub	 al, BYTE PTR [ecx+118]
  00009	8a d0		 mov	 dl, al
  0000b	02 c0		 add	 al, al
  0000d	02 d0		 add	 dl, al
  0000f	8b 45 10	 mov	 eax, DWORD PTR _pbyTerrainNum$[ebp]
  00012	2a 51 74	 sub	 dl, BYTE PTR [ecx+116]
  00015	80 c2 04	 add	 dl, 4
  00018	02 55 08	 add	 dl, BYTE PTR _wCoordX$[ebp]

; 709  : 		(wCoordX - m_CurCoordinate.m_sTerrainCoordX + LOAD_SIZE_WIDTH);
; 710  : 
; 711  : 	if (*pbyTerrainNum < 0 || *pbyTerrainNum > AROUND_AREA_NUM)

  0001b	80 fa 09	 cmp	 dl, 9
  0001e	88 10		 mov	 BYTE PTR [eax], dl
  00020	0f 96 c0	 setbe	 al

; 712  : 		return false;
; 713  : 	return true;
; 714  : }

  00023	5d		 pop	 ebp
  00024	c2 0c 00	 ret	 12			; 0000000cH
?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ENDP	; CMapOutdoor::GetTerrainNumFromCoord
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetTerrainNum@CMapOutdoor@@QAE_NMMPAE@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_pbyTerrainNum$ = 16					; size = 4
?GetTerrainNum@CMapOutdoor@@QAE_NMMPAE@Z PROC		; CMapOutdoor::GetTerrainNum, COMDAT
; _this$ = ecx

; 428  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 429  : 	if (fy < 0)

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	0f 2f c1	 comiss	 xmm0, xmm1
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8b f9		 mov	 edi, ecx
  00012	76 07		 jbe	 SHORT $LN2@GetTerrain

; 430  : 		fy = -fy;

  00014	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
$LN2@GetTerrain:

; 431  : 
; 432  : 	int ix, iy;
; 433  : 
; 434  : 	PR_FLOAT_TO_INT(fx, ix);

  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00020	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00028	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0002e	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00034	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0003a	66 0f 6e c6	 movd	 xmm0, esi
  0003e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00041	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00048	76 01		 jbe	 SHORT $LN4@GetTerrain
  0004a	4e		 dec	 esi
$LN4@GetTerrain:

; 435  : 	PR_FLOAT_TO_INT(fy, iy);

  0004b	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm1
  00053	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00059	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00065	66 0f 6e c1	 movd	 xmm0, ecx
  00069	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006c	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00073	76 01		 jbe	 SHORT $LN6@GetTerrain
  00075	49		 dec	 ecx
$LN6@GetTerrain:

; 436  : 
; 437  : 	WORD wTerrainNumX = ix / (CTerrainImpl::TERRAIN_XSIZE);
; 438  : 	WORD wTerrainNumY = iy / (CTerrainImpl::TERRAIN_YSIZE);
; 439  : 
; 440  : 	return GetTerrainNumFromCoord(wTerrainNumX, wTerrainNumY, pbyTerrainNum);

  00076	ff 75 10	 push	 DWORD PTR _pbyTerrainNum$[ebp]
  00079	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0007e	f7 e9		 imul	 ecx
  00080	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00085	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  00088	8b ca		 mov	 ecx, edx
  0008a	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0008d	03 ca		 add	 ecx, edx
  0008f	f7 ee		 imul	 esi
  00091	51		 push	 ecx
  00092	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  00095	8b cf		 mov	 ecx, edi
  00097	8b c2		 mov	 eax, edx
  00099	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0009c	03 c2		 add	 eax, edx
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi

; 441  : }

  000a6	5d		 pop	 ebp
  000a7	c2 0c 00	 ret	 12			; 0000000cH
?GetTerrainNum@CMapOutdoor@@QAE_NMMPAE@Z ENDP		; CMapOutdoor::GetTerrainNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetAttr@CMapOutdoor@@QAE_NHHPAE@Z
_TEXT	SEGMENT
_pTerrain$ = -8						; size = 4
_wTerrainCoordX$1$ = -4					; size = 4
_wTerrainCoordY$1$ = 8					; size = 4
_iX$ = 8						; size = 4
_byTerrainNum$ = 12					; size = 1
_iY$ = 12						; size = 4
_pbyAttr$ = 16						; size = 4
?GetAttr@CMapOutdoor@@QAE_NHHPAE@Z PROC			; CMapOutdoor::GetAttr, COMDAT
; _this$ = ecx

; 1242 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _iX$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _iY$[ebp]

; 1243 : 	if (iX < 0 || iY < 0 || iX > m_sTerrainCountX * CTerrainImpl::TERRAIN_XSIZE || iY > m_sTerrainCountY * CTerrainImpl::TERRAIN_YSIZE)

  00011	85 db		 test	 ebx, ebx
  00013	0f 88 b5 00 00
	00		 js	 $LN3@GetAttr
  00019	85 ff		 test	 edi, edi
  0001b	0f 88 ad 00 00
	00		 js	 $LN3@GetAttr
  00021	0f bf 46 70	 movsx	 eax, WORD PTR [esi+112]
  00025	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0002b	3b d8		 cmp	 ebx, eax
  0002d	0f 8f 9b 00 00
	00		 jg	 $LN3@GetAttr
  00033	0f bf 46 72	 movsx	 eax, WORD PTR [esi+114]
  00037	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0003d	3b f8		 cmp	 edi, eax
  0003f	0f 8f 89 00 00
	00		 jg	 $LN3@GetAttr

; 1244 : 		return false;
; 1245 : 
; 1246 : 	WORD wTerrainCoordX, wTerrainCoordY;
; 1247 : 	wTerrainCoordX = iX / CTerrainImpl::TERRAIN_XSIZE;

  00045	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0004a	f7 e3		 mul	 ebx

; 1248 : 	wTerrainCoordY = iY / CTerrainImpl::TERRAIN_YSIZE;

  0004c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00051	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00054	0f b7 ca	 movzx	 ecx, dx
  00057	f7 e7		 mul	 edi
  00059	89 4d fc	 mov	 DWORD PTR _wTerrainCoordX$1$[ebp], ecx
  0005c	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  0005f	0f b7 c2	 movzx	 eax, dx

; 1249 : 
; 1250 : 	BYTE byTerrainNum;
; 1251 : 	if (!GetTerrainNumFromCoord(wTerrainCoordX, wTerrainCoordY, &byTerrainNum))

  00062	8d 55 0c	 lea	 edx, DWORD PTR _byTerrainNum$[ebp]
  00065	52		 push	 edx
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	8b ce		 mov	 ecx, esi
  0006a	89 45 08	 mov	 DWORD PTR _wTerrainCoordY$1$[ebp], eax
  0006d	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  00072	84 c0		 test	 al, al
  00074	74 58		 je	 SHORT $LN3@GetAttr

; 1252 : 		return false;
; 1253 : 	CTerrain * pTerrain;
; 1254 : 	if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  00076	8d 45 f8	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00079	8b ce		 mov	 ecx, esi
  0007b	50		 push	 eax
  0007c	ff 75 0c	 push	 DWORD PTR _byTerrainNum$[ebp]
  0007f	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00084	85 c0		 test	 eax, eax
  00086	74 46		 je	 SHORT $LN3@GetAttr

; 1255 : 		return false;
; 1256 : 
; 1257 : 	WORD wLocalX, wLocalY;
; 1258 : 	wLocalX = (WORD) (iX - wTerrainCoordX * CTerrainImpl::TERRAIN_XSIZE) / (CTerrainImpl::HALF_CELLSCALE);
; 1259 : 	wLocalY = (WORD) (iY - wTerrainCoordY * CTerrainImpl::TERRAIN_YSIZE) / (CTerrainImpl::HALF_CELLSCALE);

  00088	69 45 08 00 64
	00 00		 imul	 eax, DWORD PTR _wTerrainCoordY$1$[ebp], 25600
  0008f	2b f8		 sub	 edi, eax
  00091	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00096	0f b7 cf	 movzx	 ecx, di
  00099	f7 e1		 mul	 ecx
  0009b	69 4d fc 00 64
	00 00		 imul	 ecx, DWORD PTR _wTerrainCoordX$1$[ebp], 25600
  000a2	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000a7	c1 ea 05	 shr	 edx, 5

; 1260 : 
; 1261 : 	BYTE byAttr = pTerrain->GetAttr(wLocalX, wLocalY);

  000aa	52		 push	 edx
  000ab	2b d9		 sub	 ebx, ecx
  000ad	0f b7 cb	 movzx	 ecx, bx
  000b0	f7 e1		 mul	 ecx
  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  000b5	c1 ea 05	 shr	 edx, 5
  000b8	52		 push	 edx
  000b9	e8 00 00 00 00	 call	 ?GetAttr@CTerrain@@QAEEGG@Z ; CTerrain::GetAttr

; 1262 : 
; 1263 : 	*pbyAttr = byAttr;

  000be	8b 4d 10	 mov	 ecx, DWORD PTR _pbyAttr$[ebp]
  000c1	5f		 pop	 edi

; 1264 : 
; 1265 : 	return true;
; 1266 : }

  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	88 01		 mov	 BYTE PTR [ecx], al
  000c6	b0 01		 mov	 al, 1
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetAttr:
  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	32 c0		 xor	 al, al
  000d2	5b		 pop	 ebx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 0c 00	 ret	 12			; 0000000cH
?GetAttr@CMapOutdoor@@QAE_NHHPAE@Z ENDP			; CMapOutdoor::GetAttr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?isAttrOn@CMapOutdoor@@QAE_NHHE@Z
_TEXT	SEGMENT
_pTerrain$ = -8						; size = 4
_wTerrainCoordX$1$ = -4					; size = 4
_wTerrainCoordY$1$ = 8					; size = 4
_iX$ = 8						; size = 4
_byTerrainNum$ = 12					; size = 1
_iY$ = 12						; size = 4
_byAttr$ = 16						; size = 1
?isAttrOn@CMapOutdoor@@QAE_NHHE@Z PROC			; CMapOutdoor::isAttrOn, COMDAT
; _this$ = ecx

; 1219 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _iX$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _iY$[ebp]

; 1220 : 	if (iX < 0 || iY < 0 || iX > m_sTerrainCountX * CTerrainImpl::TERRAIN_XSIZE || iY > m_sTerrainCountY * CTerrainImpl::TERRAIN_YSIZE)

  00011	85 db		 test	 ebx, ebx
  00013	0f 88 c3 00 00
	00		 js	 $LN3@isAttrOn
  00019	85 ff		 test	 edi, edi
  0001b	0f 88 bb 00 00
	00		 js	 $LN3@isAttrOn
  00021	0f bf 46 70	 movsx	 eax, WORD PTR [esi+112]
  00025	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0002b	3b d8		 cmp	 ebx, eax
  0002d	0f 8f a9 00 00
	00		 jg	 $LN3@isAttrOn
  00033	0f bf 46 72	 movsx	 eax, WORD PTR [esi+114]
  00037	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0003d	3b f8		 cmp	 edi, eax
  0003f	0f 8f 97 00 00
	00		 jg	 $LN3@isAttrOn

; 1221 : 		return false;
; 1222 : 
; 1223 : 	WORD wTerrainCoordX, wTerrainCoordY;
; 1224 : 	wTerrainCoordX = iX / CTerrainImpl::TERRAIN_XSIZE;

  00045	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0004a	f7 e3		 mul	 ebx

; 1225 : 	wTerrainCoordY = iY / CTerrainImpl::TERRAIN_YSIZE;

  0004c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00051	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00054	0f b7 ca	 movzx	 ecx, dx
  00057	f7 e7		 mul	 edi
  00059	89 4d fc	 mov	 DWORD PTR _wTerrainCoordX$1$[ebp], ecx
  0005c	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  0005f	0f b7 c2	 movzx	 eax, dx

; 1226 : 
; 1227 : 	BYTE byTerrainNum;
; 1228 : 	if (!GetTerrainNumFromCoord(wTerrainCoordX, wTerrainCoordY, &byTerrainNum))

  00062	8d 55 0c	 lea	 edx, DWORD PTR _byTerrainNum$[ebp]
  00065	52		 push	 edx
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	8b ce		 mov	 ecx, esi
  0006a	89 45 08	 mov	 DWORD PTR _wTerrainCoordY$1$[ebp], eax
  0006d	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  00072	84 c0		 test	 al, al
  00074	74 66		 je	 SHORT $LN3@isAttrOn

; 1229 : 		return false;
; 1230 : 	CTerrain * pTerrain;
; 1231 : 	if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  00076	8d 45 f8	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00079	8b ce		 mov	 ecx, esi
  0007b	50		 push	 eax
  0007c	ff 75 0c	 push	 DWORD PTR _byTerrainNum$[ebp]
  0007f	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00084	85 c0		 test	 eax, eax
  00086	74 54		 je	 SHORT $LN3@isAttrOn

; 1232 : 		return false;
; 1233 : 
; 1234 : 	WORD wLocalX, wLocalY;
; 1235 : 	wLocalX = (iX - wTerrainCoordX * CTerrainImpl::TERRAIN_XSIZE) / (CTerrainImpl::HALF_CELLSCALE);
; 1236 : 	wLocalY = (iY - wTerrainCoordY * CTerrainImpl::TERRAIN_YSIZE) / (CTerrainImpl::HALF_CELLSCALE);

  00088	8b 45 08	 mov	 eax, DWORD PTR _wTerrainCoordY$1$[ebp]

; 1237 : 
; 1238 : 	return pTerrain->isAttrOn(wLocalX, wLocalY, byAttr);

  0008b	ff 75 10	 push	 DWORD PTR _byAttr$[ebp]
  0008e	0f b7 c0	 movzx	 eax, ax
  00091	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  00097	2b f8		 sub	 edi, eax
  00099	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0009e	f7 ef		 imul	 edi
  000a0	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000a5	c1 fa 05	 sar	 edx, 5
  000a8	8b ca		 mov	 ecx, edx
  000aa	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000ad	03 ca		 add	 ecx, edx
  000af	51		 push	 ecx
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _wTerrainCoordX$1$[ebp]
  000b3	0f b7 c9	 movzx	 ecx, cx
  000b6	69 c9 00 64 00
	00		 imul	 ecx, ecx, 25600
  000bc	2b d9		 sub	 ebx, ecx
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  000c1	f7 eb		 imul	 ebx
  000c3	c1 fa 05	 sar	 edx, 5
  000c6	8b c2		 mov	 eax, edx
  000c8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000cb	03 c2		 add	 eax, edx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?isAttrOn@CTerrain@@QAE_NGGE@Z ; CTerrain::isAttrOn
  000d3	5f		 pop	 edi

; 1239 : }

  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 0c 00	 ret	 12			; 0000000cH
$LN3@isAttrOn:
  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	32 c0		 xor	 al, al
  000e0	5b		 pop	 ebx
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 0c 00	 ret	 12			; 0000000cH
?isAttrOn@CMapOutdoor@@QAE_NHHE@Z ENDP			; CMapOutdoor::isAttrOn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetAttr@CMapOutdoor@@QAE_NMMPAE@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_pbyAttr$ = 16						; size = 4
?GetAttr@CMapOutdoor@@QAE_NMMPAE@Z PROC			; CMapOutdoor::GetAttr, COMDAT
; _this$ = ecx

; 1210 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1211 : 	int iX, iY;
; 1212 : 	PR_FLOAT_TO_INT(fX, iX);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00008	8b d1		 mov	 edx, ecx
  0000a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00012	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00018	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00023	66 0f 6e c0	 movd	 xmm0, eax
  00027	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0002a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00031	76 01		 jbe	 SHORT $LN3@GetAttr
  00033	48		 dec	 eax
$LN3@GetAttr:

; 1213 : 	PR_FLOAT_TO_INT(fY, iY);

  00034	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00039	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00041	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00047	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00053	66 0f 6e c1	 movd	 xmm0, ecx
  00057	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0005a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00061	76 01		 jbe	 SHORT $LN5@GetAttr
  00063	49		 dec	 ecx
$LN5@GetAttr:

; 1214 : 
; 1215 : 	return GetAttr(iX, iY, pbyAttr);

  00064	89 4d 0c	 mov	 DWORD PTR _fY$[ebp], ecx
  00067	89 45 08	 mov	 DWORD PTR _fX$[ebp], eax
  0006a	8b ca		 mov	 ecx, edx

; 1216 : }

  0006c	5d		 pop	 ebp

; 1214 : 
; 1215 : 	return GetAttr(iX, iY, pbyAttr);

  0006d	e9 00 00 00 00	 jmp	 ?GetAttr@CMapOutdoor@@QAE_NHHPAE@Z ; CMapOutdoor::GetAttr
?GetAttr@CMapOutdoor@@QAE_NMMPAE@Z ENDP			; CMapOutdoor::GetAttr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?isAttrOn@CMapOutdoor@@QAE_NMME@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_byAttr$ = 16						; size = 1
?isAttrOn@CMapOutdoor@@QAE_NMME@Z PROC			; CMapOutdoor::isAttrOn, COMDAT
; _this$ = ecx

; 1201 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1202 : 	int iX, iY;
; 1203 : 	PR_FLOAT_TO_INT(fX, iX);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00008	8b d1		 mov	 edx, ecx
  0000a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00012	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00018	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00023	66 0f 6e c0	 movd	 xmm0, eax
  00027	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0002a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00031	76 01		 jbe	 SHORT $LN3@isAttrOn
  00033	48		 dec	 eax
$LN3@isAttrOn:

; 1204 : 	PR_FLOAT_TO_INT(fY, iY);

  00034	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00039	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00041	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00047	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00053	66 0f 6e c1	 movd	 xmm0, ecx
  00057	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0005a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00061	76 01		 jbe	 SHORT $LN5@isAttrOn
  00063	49		 dec	 ecx
$LN5@isAttrOn:

; 1205 : 
; 1206 : 	return isAttrOn(iX, iY, byAttr);

  00064	89 4d 0c	 mov	 DWORD PTR _fY$[ebp], ecx
  00067	89 45 08	 mov	 DWORD PTR _fX$[ebp], eax
  0006a	8b ca		 mov	 ecx, edx

; 1207 : }

  0006c	5d		 pop	 ebp

; 1205 : 
; 1206 : 	return isAttrOn(iX, iY, byAttr);

  0006d	e9 00 00 00 00	 jmp	 ?isAttrOn@CMapOutdoor@@QAE_NHHE@Z ; CMapOutdoor::isAttrOn
?isAttrOn@CMapOutdoor@@QAE_NMME@Z ENDP			; CMapOutdoor::isAttrOn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetBrushColor@CMapOutdoor@@QAE_NMMPAM0@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_pLowColor$ = 16					; size = 4
_pHighColor$ = 20					; size = 4
?GetBrushColor@CMapOutdoor@@QAE_NMMPAM0@Z PROC		; CMapOutdoor::GetBrushColor, COMDAT
; _this$ = ecx

; 976  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 977  : 	bool bSuccess = false;
; 978  : 
; 979  : //	float fU, fV;
; 980  : //
; 981  : //	GetOneToOneMappingCoordinates(fX, fY, fU, fV);
; 982  : //
; 983  : //	if (fU >= 0.0f && fU <= 1.0f && fV >= 0.0f && fV <= 1.0f)
; 984  : //	{
; 985  : //		int nImageCol = (m_cBrushMap.GetWidth() - 1) * fU;
; 986  : //		int nImageRow = (m_cBrushMap.GetHeight() - 1) * fV;
; 987  : //
; 988  : //		// low
; 989  : //		BYTE* pPixel = m_cBrushMap.GetPixel(nImageCol, nImageRow);
; 990  : //		pLowColor[0] = (pPixel[0] / 255.0f);
; 991  : //		pLowColor[1] = (pPixel[1] / 255.0f);
; 992  : //		pLowColor[2] = (pPixel[2] / 255.0f);
; 993  : //		pLowColor[3] = (pPixel[3] / 255.0f);
; 994  : //
; 995  : //		// high
; 996  : //		pPixel = m_cBrushMap2.GetPixel(nImageCol, nImageRow);
; 997  : //		pHighColor[0] = (pPixel[0] / 255.0f);
; 998  : //		pHighColor[1] = (pPixel[1] / 255.0f);
; 999  : //		pHighColor[2] = (pPixel[2] / 255.0f);
; 1000 : //		pHighColor[3] = (pPixel[3] / 255.0f);
; 1001 : //
; 1002 : //		bSuccess = true;
; 1003 : //	}
; 1004 : 	pLowColor[0] = (1.0f);

  00003	8b 45 10	 mov	 eax, DWORD PTR _pLowColor$[ebp]
  00006	c7 00 00 00 80
	3f		 mov	 DWORD PTR [eax], 1065353216 ; 3f800000H
  0000c	c7 40 04 00 00
	80 3f		 mov	 DWORD PTR [eax+4], 1065353216 ; 3f800000H
  00013	c7 40 08 00 00
	80 3f		 mov	 DWORD PTR [eax+8], 1065353216 ; 3f800000H
  0001a	c7 40 0c 00 00
	80 3f		 mov	 DWORD PTR [eax+12], 1065353216 ; 3f800000H

; 1005 : 	pLowColor[1] = (1.0f);
; 1006 : 	pLowColor[2] = (1.0f);
; 1007 : 	pLowColor[3] = (1.0f);
; 1008 : 	pHighColor[0] = (1.0f);

  00021	8b 45 14	 mov	 eax, DWORD PTR _pHighColor$[ebp]
  00024	c7 00 00 00 80
	3f		 mov	 DWORD PTR [eax], 1065353216 ; 3f800000H
  0002a	c7 40 04 00 00
	80 3f		 mov	 DWORD PTR [eax+4], 1065353216 ; 3f800000H
  00031	c7 40 08 00 00
	80 3f		 mov	 DWORD PTR [eax+8], 1065353216 ; 3f800000H
  00038	c7 40 0c 00 00
	80 3f		 mov	 DWORD PTR [eax+12], 1065353216 ; 3f800000H

; 1009 : 	pHighColor[1] = (1.0f);
; 1010 : 	pHighColor[2] = (1.0f);
; 1011 : 	pHighColor[3] = (1.0f);
; 1012 : 
; 1013 : 	return bSuccess;

  0003f	32 c0		 xor	 al, al

; 1014 : }

  00041	5d		 pop	 ebp
  00042	c2 10 00	 ret	 16			; 00000010H
?GetBrushColor@CMapOutdoor@@QAE_NMMPAM0@Z ENDP		; CMapOutdoor::GetBrushColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetHeight@CMapOutdoor@@QAEMPAM@Z
_TEXT	SEGMENT
tv73 = 8						; size = 4
_pPos$ = 8						; size = 4
?GetHeight@CMapOutdoor@@QAEMPAM@Z PROC			; CMapOutdoor::GetHeight, COMDAT
; _this$ = ecx

; 970  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 971  : 	pPos[2] = GetHeight(pPos[0], pPos[1]);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR _pPos$[ebp]
  00009	83 ec 08	 sub	 esp, 8
  0000c	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0000f	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  00014	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001a	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  0001e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00023	ff d0		 call	 eax
  00025	d9 5d 08	 fstp	 DWORD PTR tv73[ebp]
  00028	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv73[ebp]

; 972  : 	return pPos[2];

  0002d	d9 45 08	 fld	 DWORD PTR tv73[ebp]
  00030	f3 0f 11 46 08	 movss	 DWORD PTR [esi+8], xmm0
  00035	5e		 pop	 esi

; 973  : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?GetHeight@CMapOutdoor@@QAEMPAM@Z ENDP			; CMapOutdoor::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z
_TEXT	SEGMENT
_c_byAreaNum$ = 8					; size = 1
_ppArea$ = 12						; size = 4
?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z PROC	; CMapOutdoor::GetAreaPointer, COMDAT
; _this$ = ecx

; 1019 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1020 : 	if (c_byAreaNum >= AROUND_AREA_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _c_byAreaNum$[ebp]
  00006	3c 09		 cmp	 al, 9
  00008	73 1c		 jae	 SHORT $LN5@GetAreaPoi

; 1021 : 	{
; 1022 : 		*ppArea = NULL;
; 1023 : 		return FALSE;
; 1024 : 	}
; 1025 : 
; 1026 : 	if (NULL == m_pArea[c_byAreaNum])

  0000a	0f b6 c0	 movzx	 eax, al
  0000d	8b 8c 81 e0 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+224]
  00014	85 c9		 test	 ecx, ecx
  00016	74 0e		 je	 SHORT $LN5@GetAreaPoi

; 1030 : 	}
; 1031 : 
; 1032 : 	*ppArea = m_pArea[c_byAreaNum];

  00018	8b 45 0c	 mov	 eax, DWORD PTR _ppArea$[ebp]
  0001b	89 08		 mov	 DWORD PTR [eax], ecx

; 1033 : 	return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1

; 1034 : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN5@GetAreaPoi:

; 1027 : 	{
; 1028 : 		*ppArea = NULL;

  00026	8b 45 0c	 mov	 eax, DWORD PTR _ppArea$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1029 : 		return FALSE;

  0002f	33 c0		 xor	 eax, eax

; 1034 : }

  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ENDP	; CMapOutdoor::GetAreaPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?ConvertToMapCoords@CMapOutdoor@@IAEXMMPAH0PAE1PAG2@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_iCellX$ = 16						; size = 4
_iCellY$ = 20						; size = 4
_pucSubCellX$ = 24					; size = 4
_pucSubCellY$ = 28					; size = 4
_pwTerrainNumX$ = 32					; size = 4
_pwTerrainNumY$ = 36					; size = 4
?ConvertToMapCoords@CMapOutdoor@@IAEXMMPAH0PAE1PAG2@Z PROC ; CMapOutdoor::ConvertToMapCoords, COMDAT
; _this$ = ecx

; 1547 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1548 : 	if ( fy < 0 )

  00003	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR _fy$[ebp]
  00008	0f 57 c9	 xorps	 xmm1, xmm1
  0000b	0f 2f ca	 comiss	 xmm1, xmm2
  0000e	76 07		 jbe	 SHORT $LN10@ConvertToM

; 1549 : 		fy = -fy;

  00010	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
$LN10@ConvertToM:

; 1550 : 
; 1551 : 	int ix, iy;
; 1552 : 	PR_FLOAT_TO_INT(fx, ix);

  00017	f3 0f 10 5d 08	 movss	 xmm3, DWORD PTR _fx$[ebp]
  0001c	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm3
  00024	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0002a	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00036	66 0f 6e c1	 movd	 xmm0, ecx
  0003a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003d	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00044	76 01		 jbe	 SHORT $LN12@ConvertToM
  00046	49		 dec	 ecx
$LN12@ConvertToM:
  00047	56		 push	 esi
  00048	57		 push	 edi

; 1553 : 	PR_FLOAT_TO_INT(fy, iy);

  00049	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm2
  00051	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00057	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0005d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00063	66 0f 6e c7	 movd	 xmm0, edi
  00067	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00071	76 01		 jbe	 SHORT $LN14@ConvertToM
  00073	4f		 dec	 edi
$LN14@ConvertToM:

; 1554 : 
; 1555 : 	*pwTerrainNumX = ix / (CTerrainImpl::TERRAIN_XSIZE);
; 1556 : 	*pwTerrainNumY = iy / (CTerrainImpl::TERRAIN_YSIZE);
; 1557 : 
; 1558 : 	float maxx = (float) CTerrainImpl::TERRAIN_XSIZE;
; 1559 : 	float maxy = (float) CTerrainImpl::TERRAIN_YSIZE;
; 1560 : 
; 1561 : 	while (fx < 0)

  00074	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46c80000
  0007c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00081	f7 e9		 imul	 ecx
  00083	8b 4d 20	 mov	 ecx, DWORD PTR _pwTerrainNumX$[ebp]
  00086	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0008b	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  0008e	8b f2		 mov	 esi, edx
  00090	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00093	03 f2		 add	 esi, edx
  00095	f7 ef		 imul	 edi
  00097	8b 45 24	 mov	 eax, DWORD PTR _pwTerrainNumY$[ebp]
  0009a	66 89 31	 mov	 WORD PTR [ecx], si
  0009d	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  000a0	8b ca		 mov	 ecx, edx
  000a2	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000a5	03 ca		 add	 ecx, edx
  000a7	0f 2f cb	 comiss	 xmm1, xmm3
  000aa	5f		 pop	 edi
  000ab	66 89 08	 mov	 WORD PTR [eax], cx
  000ae	5e		 pop	 esi
  000af	76 09		 jbe	 SHORT $LN25@ConvertToM
$LL2@ConvertToM:

; 1562 : 		fx += maxx;

  000b1	f3 0f 58 d8	 addss	 xmm3, xmm0
  000b5	0f 2f cb	 comiss	 xmm1, xmm3
  000b8	77 f7		 ja	 SHORT $LL2@ConvertToM
$LN25@ConvertToM:

; 1563 : 
; 1564 : 	while (fy < 0)

  000ba	0f 2f ca	 comiss	 xmm1, xmm2
  000bd	76 0a		 jbe	 SHORT $LN26@ConvertToM
  000bf	90		 npad	 1
$LL4@ConvertToM:

; 1565 : 		fy += maxy;

  000c0	f3 0f 58 d0	 addss	 xmm2, xmm0
  000c4	0f 2f ca	 comiss	 xmm1, xmm2
  000c7	77 f7		 ja	 SHORT $LL4@ConvertToM
$LN26@ConvertToM:

; 1566 : 
; 1567 : 	while (fx >= maxx)

  000c9	0f 2f d8	 comiss	 xmm3, xmm0
  000cc	72 0b		 jb	 SHORT $LN27@ConvertToM
  000ce	66 90		 npad	 2
$LL6@ConvertToM:

; 1568 : 		fx -= maxx;

  000d0	f3 0f 5c d8	 subss	 xmm3, xmm0
  000d4	0f 2f d8	 comiss	 xmm3, xmm0
  000d7	73 f7		 jae	 SHORT $LL6@ConvertToM
$LN27@ConvertToM:

; 1569 : 
; 1570 : 	while (fy >= maxy)

  000d9	0f 2f d0	 comiss	 xmm2, xmm0
  000dc	72 0b		 jb	 SHORT $LN9@ConvertToM
  000de	66 90		 npad	 2
$LL8@ConvertToM:

; 1571 : 		fy -= maxy;

  000e0	f3 0f 5c d0	 subss	 xmm2, xmm0
  000e4	0f 2f d0	 comiss	 xmm2, xmm0
  000e7	73 f7		 jae	 SHORT $LL8@ConvertToM
$LN9@ConvertToM:

; 1572 : 
; 1573 : 	float fooscale = 1.0f / (float)(CTerrainImpl::HALF_CELLSCALE);
; 1574 : 
; 1575 : 	float fCellX, fCellY;
; 1576 : 
; 1577 : 	fCellX = fx * fooscale;

  000e9	0f 28 c3	 movaps	 xmm0, xmm3

; 1578 : 	fCellY = fy * fooscale;

  000ec	0f 28 e2	 movaps	 xmm4, xmm2
  000ef	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c23d70a
  000f7	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@3c23d70a

; 1579 : 
; 1580 : 	PR_FLOAT_TO_INT(fCellX, *iCellX);

  000ff	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00107	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0010d	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00113	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00119	66 0f 6e c1	 movd	 xmm0, ecx
  0011d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00120	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00127	76 01		 jbe	 SHORT $LN16@ConvertToM
  00129	49		 dec	 ecx
$LN16@ConvertToM:
  0012a	8b 45 10	 mov	 eax, DWORD PTR _iCellX$[ebp]
  0012d	89 08		 mov	 DWORD PTR [eax], ecx

; 1581 : 	PR_FLOAT_TO_INT(fCellY, *iCellY);

  0012f	f3 0f 11 25 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm4
  00137	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0013d	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00143	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00149	66 0f 6e c1	 movd	 xmm0, ecx
  0014d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00150	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00157	76 01		 jbe	 SHORT $LN18@ConvertToM
  00159	49		 dec	 ecx
$LN18@ConvertToM:
  0015a	8b 45 14	 mov	 eax, DWORD PTR _iCellY$[ebp]

; 1582 : 
; 1583 : 	float fRatioooscale = ((float)CTerrainImpl::HEIGHT_TILE_XRATIO) * fooscale;
; 1584 : 
; 1585 : 	float fSubcellX, fSubcellY;
; 1586 : 	fSubcellX = fx * fRatioooscale;

  0015d	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3ca3d70a

; 1587 : 	fSubcellY = fy * fRatioooscale;

  00165	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3ca3d70a
  0016d	89 08		 mov	 DWORD PTR [eax], ecx

; 1588 : 
; 1589 : 	PR_FLOAT_TO_INT(fSubcellX, *pucSubCellX);

  0016f	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm3
  00177	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0017d	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00183	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00188	66 0f 6e c0	 movd	 xmm0, eax
  0018c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0018f	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00196	76 01		 jbe	 SHORT $LN20@ConvertToM
  00198	48		 dec	 eax
$LN20@ConvertToM:
  00199	8b 55 18	 mov	 edx, DWORD PTR _pucSubCellX$[ebp]
  0019c	88 02		 mov	 BYTE PTR [edx], al

; 1590 : 	PR_FLOAT_TO_INT(fSubcellY, *pucSubCellY);

  0019e	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm2
  001a6	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  001ac	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  001b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  001b8	66 0f 6e c1	 movd	 xmm0, ecx
  001bc	0f 5b c0	 cvtdq2ps xmm0, xmm0
  001bf	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  001c6	76 01		 jbe	 SHORT $LN22@ConvertToM
  001c8	49		 dec	 ecx
$LN22@ConvertToM:
  001c9	8b 45 1c	 mov	 eax, DWORD PTR _pucSubCellY$[ebp]
  001cc	88 08		 mov	 BYTE PTR [eax], cl

; 1591 : 	*pucSubCellX = (*pucSubCellX) % CTerrainImpl::HEIGHT_TILE_XRATIO;

  001ce	80 22 01	 and	 BYTE PTR [edx], 1

; 1592 : 	*pucSubCellY = (*pucSubCellY) % CTerrainImpl::HEIGHT_TILE_YRATIO;

  001d1	80 20 01	 and	 BYTE PTR [eax], 1

; 1593 : }

  001d4	5d		 pop	 ebp
  001d5	c2 20 00	 ret	 32			; 00000020H
?ConvertToMapCoords@CMapOutdoor@@IAEXMMPAH0PAE1PAG2@Z ENDP ; CMapOutdoor::ConvertToMapCoords
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?DestroyArea@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
__First$1$ = -8						; size = 4
__Last$1$ = -4						; size = 4
?DestroyArea@CMapOutdoor@@MAEXXZ PROC			; CMapOutdoor::DestroyArea, COMDAT
; _this$ = ecx

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 400  : 	m_AreaVector.clear();

  0000a	8b 87 4c 09 00
	00		 mov	 eax, DWORD PTR [edi+2380]
  00010	89 87 50 09 00
	00		 mov	 DWORD PTR [edi+2384], eax

; 401  : 	m_AreaDeleteVector.clear();

  00016	8b 87 58 09 00
	00		 mov	 eax, DWORD PTR [edi+2392]
  0001c	89 87 5c 09 00
	00		 mov	 DWORD PTR [edi+2396], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00022	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00027	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00029	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0002f	2b f1		 sub	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00031	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+16

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00037	89 4d f8	 mov	 DWORD PTR __First$1$[ebp], ecx

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  0003a	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+24
  00040	2b ca		 sub	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00042	c1 fe 02	 sar	 esi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00045	c1 f9 02	 sar	 ecx, 2

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00048	89 45 fc	 mov	 DWORD PTR __Last$1$[ebp], eax

; 1108 :             if (_Newsize > _Oldcapacity) {

  0004b	3b f1		 cmp	 esi, ecx
  0004d	0f 86 8c 00 00
	00		 jbe	 $LN40@DestroyAre

; 1285 :         if (_Newsize > max_size()) {

  00053	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00059	0f 87 f8 00 00
	00		 ja	 $LN63@DestroyAre
  0005f	53		 push	 ebx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00060	8b d9		 mov	 ebx, ecx
  00062	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  00067	d1 eb		 shr	 ebx, 1
  00069	2b c3		 sub	 eax, ebx
  0006b	3b c8		 cmp	 ecx, eax
  0006d	77 0a		 ja	 SHORT $LN26@DestroyAre

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006f	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00072	3b c6		 cmp	 eax, esi
  00074	0f 42 c6	 cmovb	 eax, esi
  00077	8b f0		 mov	 esi, eax
$LN26@DestroyAre:
  00079	5b		 pop	 ebx

; 1291 :         if (_Myfirst) { // destroy and deallocate old array

  0007a	85 d2		 test	 edx, edx
  0007c	74 2f		 je	 SHORT $LN22@DestroyAre
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00085	50		 push	 eax
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1295 :             _Myfirst = pointer();

  0008f	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+16, 0

; 1296 :             _Mylast  = pointer();

  00099	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20, 0

; 1297 :             _Myend   = pointer();

  000a3	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+24, 0
$LN22@DestroyAre:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000ad	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  000b3	0f 87 a3 00 00
	00		 ja	 $LN64@DestroyAre

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000b9	c1 e6 02	 shl	 esi, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  000c2	8b d0		 mov	 edx, eax
  000c4	83 c4 04	 add	 esp, 4
  000c7	8b 45 fc	 mov	 eax, DWORD PTR __Last$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1643 :         _Myfirst           = _Newvec;

  000ca	89 15 10 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+16, edx

; 1644 :         _Mylast            = _Newvec;

  000d0	89 15 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20, edx

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  000d6	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]
  000d9	89 0d 18 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+24, ecx
$LN40@DestroyAre:

; 1112 :             _Mylast = _Refancy<pointer>(_Copy_memmove(_First, _Last, _Unfancy(_Myfirst)));

  000df	52		 push	 edx
  000e0	50		 push	 eax
  000e1	ff 75 f8	 push	 DWORD PTR __First$1$[ebp]
  000e4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ; std::_Refancy<CArea * *,0>
  000ef	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20, eax
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 406  : 		m_pArea[i] = NULL;

  000f7	c7 87 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+224], 0
  00101	c7 87 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+228], 0
  0010b	c7 87 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+232], 0
  00115	c7 87 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+236], 0
  0011f	c7 87 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+240], 0
  00129	c7 87 f4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+244], 0
  00133	c7 87 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+248], 0
  0013d	c7 87 fc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+252], 0
  00147	c7 87 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+256], 0
  00151	5f		 pop	 edi
  00152	5e		 pop	 esi

; 407  : }

  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c3		 ret	 0
$LN63@DestroyAre:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1286 :             _Xlength();

  00157	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
$LN64@DestroyAre:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0015c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN61@DestroyAre:
  00161	cc		 int	 3
?DestroyArea@CMapOutdoor@@MAEXXZ ENDP			; CMapOutdoor::DestroyArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetNormal@CMapOutdoor@@QAE_NHHPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_byTerrainNum$ = -16					; size = 1
tv358 = -12						; size = 4
_pTerrain$ = -12					; size = 4
_this$1$ = -8						; size = 4
$T1 = -4						; size = 4
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
_pv3Normal$ = 16					; size = 4
?GetNormal@CMapOutdoor@@QAE_NHHPAUD3DXVECTOR3@@@Z PROC	; CMapOutdoor::GetNormal, COMDAT
; _this$ = ecx

; 902  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 903  : 	if (ix <= 0)

  00006	8b 55 08	 mov	 edx, DWORD PTR _ix$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 f8	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	85 d2		 test	 edx, edx
  00013	7f 0e		 jg	 SHORT $LN6@GetNormal

; 904  : 		ix = 0;

  00015	0f b7 58 70	 movzx	 ebx, WORD PTR [eax+112]
  00019	33 d2		 xor	 edx, edx
  0001b	89 55 08	 mov	 DWORD PTR _ix$[ebp], edx
  0001e	89 5d fc	 mov	 DWORD PTR $T1[ebp], ebx
  00021	eb 23		 jmp	 SHORT $LN8@GetNormal
$LN6@GetNormal:

; 905  : 	else if (ix >= m_sTerrainCountX * CTerrainImpl::TERRAIN_XSIZE)

  00023	0f b7 48 70	 movzx	 ecx, WORD PTR [eax+112]
  00027	0f bf c1	 movsx	 eax, cx
  0002a	8b d9		 mov	 ebx, ecx
  0002c	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  00032	89 5d fc	 mov	 DWORD PTR $T1[ebp], ebx
  00035	3b d0		 cmp	 edx, eax
  00037	7c 0a		 jl	 SHORT $LN26@GetNormal

; 906  : 		ix = m_sTerrainCountX * CTerrainImpl::TERRAIN_XSIZE;

  00039	8b d0		 mov	 edx, eax
  0003b	8b c1		 mov	 eax, ecx
  0003d	89 55 08	 mov	 DWORD PTR _ix$[ebp], edx
  00040	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
$LN26@GetNormal:

; 907  : 
; 908  : 	if (iy <= 0)

  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
$LN8@GetNormal:
  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _iy$[ebp]
  00049	0f b7 40 72	 movzx	 eax, WORD PTR [eax+114]
  0004d	85 c9		 test	 ecx, ecx
  0004f	7f 04		 jg	 SHORT $LN9@GetNormal

; 909  : 		iy = 0;

  00051	33 c9		 xor	 ecx, ecx
  00053	eb 11		 jmp	 SHORT $LN27@GetNormal
$LN9@GetNormal:

; 910  : 	else if (iy >= m_sTerrainCountY * CTerrainImpl::TERRAIN_YSIZE)

  00055	8b f0		 mov	 esi, eax
  00057	98		 cwde
  00058	69 f8 00 64 00
	00		 imul	 edi, eax, 25600
  0005e	8b c6		 mov	 eax, esi
  00060	3b cf		 cmp	 ecx, edi
  00062	7c 05		 jl	 SHORT $LN11@GetNormal

; 911  : 		iy = m_sTerrainCountY * CTerrainImpl::TERRAIN_YSIZE;

  00064	8b cf		 mov	 ecx, edi
$LN27@GetNormal:

; 912  : 
; 913  : 	WORD usCoordX, usCoordY;
; 914  : 
; 915  : 	usCoordX = (WORD) (ix / (CTerrainImpl::TERRAIN_XSIZE));

  00066	89 4d 0c	 mov	 DWORD PTR _iy$[ebp], ecx
$LN11@GetNormal:
  00069	0f b7 d8	 movzx	 ebx, ax
  0006c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00071	f7 ea		 imul	 edx

; 916  : 	usCoordY = (WORD) (iy / (CTerrainImpl::TERRAIN_YSIZE));
; 917  : 
; 918  : 	if (usCoordX >= m_sTerrainCountX - 1)
; 919  : 		usCoordX = m_sTerrainCountX - 1;
; 920  : 
; 921  : 	if (usCoordY >= m_sTerrainCountY - 1)

  00073	0f bf f3	 movsx	 esi, bx
  00076	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  00079	4e		 dec	 esi
  0007a	8b c2		 mov	 eax, edx
  0007c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0007f	03 c2		 add	 eax, edx
  00081	0f b7 c0	 movzx	 eax, ax
  00084	89 45 f4	 mov	 DWORD PTR tv358[ebp], eax
  00087	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0008c	f7 e9		 imul	 ecx
  0008e	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  00091	8b c2		 mov	 eax, edx
  00093	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00096	03 c2		 add	 eax, edx
  00098	0f b7 f8	 movzx	 edi, ax

; 922  : 		usCoordY = m_sTerrainCountY - 1;
; 923  : 
; 924  : 	BYTE byTerrainNum;
; 925  : 	if (!GetTerrainNumFromCoord(usCoordX, usCoordY, &byTerrainNum))

  0009b	8d 45 f0	 lea	 eax, DWORD PTR _byTerrainNum$[ebp]
  0009e	50		 push	 eax
  0009f	3b fe		 cmp	 edi, esi
  000a1	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  000a4	0f b7 d0	 movzx	 edx, ax
  000a7	8b c7		 mov	 eax, edi
  000a9	8b 7d f4	 mov	 edi, DWORD PTR tv358[ebp]
  000ac	0f 4c d0	 cmovl	 edx, eax
  000af	0f b7 c2	 movzx	 eax, dx
  000b2	50		 push	 eax
  000b3	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
  000b6	0f bf f0	 movsx	 esi, ax
  000b9	48		 dec	 eax
  000ba	4e		 dec	 esi
  000bb	0f b7 cf	 movzx	 ecx, di
  000be	0f b7 d0	 movzx	 edx, ax
  000c1	3b ce		 cmp	 ecx, esi
  000c3	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
  000c6	8b ce		 mov	 ecx, esi
  000c8	0f b7 c7	 movzx	 eax, di
  000cb	0f 4c d0	 cmovl	 edx, eax
  000ce	0f b7 c2	 movzx	 eax, dx
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  000d7	84 c0		 test	 al, al
  000d9	74 62		 je	 SHORT $LN25@GetNormal

; 926  : 		return false;
; 927  : 
; 928  : 	CTerrain * pTerrain;
; 929  : 
; 930  : 	if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  000db	8d 45 f4	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000de	8b ce		 mov	 ecx, esi
  000e0	50		 push	 eax
  000e1	ff 75 f0	 push	 DWORD PTR _byTerrainNum$[ebp]
  000e4	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  000e9	85 c0		 test	 eax, eax
  000eb	74 50		 je	 SHORT $LN25@GetNormal

; 931  : 		return false;
; 932  : 
; 933  : 	while (ix >= CTerrainImpl::TERRAIN_XSIZE)

  000ed	8b 75 08	 mov	 esi, DWORD PTR _ix$[ebp]
  000f0	81 fe 00 64 00
	00		 cmp	 esi, 25600		; 00006400H
  000f6	7c 12		 jl	 SHORT $LN2@GetNormal
  000f8	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000fd	f7 e6		 mul	 esi
  000ff	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00102	69 ca 00 9c ff
	ff		 imul	 ecx, edx, -25600
  00108	03 f1		 add	 esi, ecx
$LN2@GetNormal:

; 934  : 		ix -= CTerrainImpl::TERRAIN_XSIZE;
; 935  : 
; 936  : 	while (iy >= CTerrainImpl::TERRAIN_YSIZE)

  0010a	8b 4d 0c	 mov	 ecx, DWORD PTR _iy$[ebp]
  0010d	81 f9 00 64 00
	00		 cmp	 ecx, 25600		; 00006400H
  00113	7c 12		 jl	 SHORT $LN4@GetNormal
  00115	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0011a	f7 e1		 mul	 ecx
  0011c	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  0011f	69 c2 00 9c ff
	ff		 imul	 eax, edx, -25600
  00125	03 c8		 add	 ecx, eax
$LN4@GetNormal:

; 937  : 		iy -= CTerrainImpl::TERRAIN_YSIZE;
; 938  : 
; 939  : 	return pTerrain->GetNormal(ix, iy, pv3Normal);

  00127	ff 75 10	 push	 DWORD PTR _pv3Normal$[ebp]
  0012a	51		 push	 ecx
  0012b	8b 4d f4	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  0012e	56		 push	 esi
  0012f	e8 00 00 00 00	 call	 ?GetNormal@CTerrain@@QAE_NHHPAUD3DXVECTOR3@@@Z ; CTerrain::GetNormal
  00134	5f		 pop	 edi

; 940  : }

  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
$LN25@GetNormal:
  0013d	5f		 pop	 edi
  0013e	5e		 pop	 esi
  0013f	32 c0		 xor	 al, al
  00141	5b		 pop	 ebx
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 0c 00	 ret	 12			; 0000000cH
?GetNormal@CMapOutdoor@@QAE_NHHPAUD3DXVECTOR3@@@Z ENDP	; CMapOutdoor::GetNormal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetWaterHeight@CMapOutdoor@@QAE_NHHPAJ@Z
_TEXT	SEGMENT
_pTerrain$ = -8						; size = 4
_wTerrainCoordX$1$ = -4					; size = 4
_wTerrainCoordY$1$ = 8					; size = 4
_iX$ = 8						; size = 4
_byTerrainNum$ = 12					; size = 1
_iY$ = 12						; size = 4
_plWaterHeight$ = 16					; size = 4
?GetWaterHeight@CMapOutdoor@@QAE_NHHPAJ@Z PROC		; CMapOutdoor::GetWaterHeight, COMDAT
; _this$ = ecx

; 680  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _iX$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _iY$[ebp]

; 681  : 	if (iX < 0 || iY < 0 || iX > m_sTerrainCountX * CTerrainImpl::TERRAIN_XSIZE || iY > m_sTerrainCountY * CTerrainImpl::TERRAIN_YSIZE)

  00011	85 db		 test	 ebx, ebx
  00013	0f 88 b7 00 00
	00		 js	 $LN3@GetWaterHe
  00019	85 ff		 test	 edi, edi
  0001b	0f 88 af 00 00
	00		 js	 $LN3@GetWaterHe
  00021	0f bf 46 70	 movsx	 eax, WORD PTR [esi+112]
  00025	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0002b	3b d8		 cmp	 ebx, eax
  0002d	0f 8f 9d 00 00
	00		 jg	 $LN3@GetWaterHe
  00033	0f bf 46 72	 movsx	 eax, WORD PTR [esi+114]
  00037	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0003d	3b f8		 cmp	 edi, eax
  0003f	0f 8f 8b 00 00
	00		 jg	 $LN3@GetWaterHe

; 682  : 		return false;
; 683  : 
; 684  : 	WORD wTerrainCoordX, wTerrainCoordY;
; 685  : 	wTerrainCoordX = iX / CTerrainImpl::TERRAIN_XSIZE;

  00045	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0004a	f7 e3		 mul	 ebx

; 686  : 	wTerrainCoordY = iY / CTerrainImpl::TERRAIN_YSIZE;

  0004c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00051	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00054	0f b7 ca	 movzx	 ecx, dx
  00057	f7 e7		 mul	 edi
  00059	89 4d fc	 mov	 DWORD PTR _wTerrainCoordX$1$[ebp], ecx
  0005c	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  0005f	0f b7 c2	 movzx	 eax, dx

; 687  : 
; 688  : 	BYTE byTerrainNum;
; 689  : 	if (!GetTerrainNumFromCoord(wTerrainCoordX, wTerrainCoordY, &byTerrainNum))

  00062	8d 55 0c	 lea	 edx, DWORD PTR _byTerrainNum$[ebp]
  00065	52		 push	 edx
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	8b ce		 mov	 ecx, esi
  0006a	89 45 08	 mov	 DWORD PTR _wTerrainCoordY$1$[ebp], eax
  0006d	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  00072	84 c0		 test	 al, al
  00074	74 5a		 je	 SHORT $LN3@GetWaterHe

; 690  : 		return false;
; 691  : 	CTerrain * pTerrain;
; 692  : 	if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  00076	8d 45 f8	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00079	8b ce		 mov	 ecx, esi
  0007b	50		 push	 eax
  0007c	ff 75 0c	 push	 DWORD PTR _byTerrainNum$[ebp]
  0007f	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00084	85 c0		 test	 eax, eax
  00086	74 48		 je	 SHORT $LN3@GetWaterHe

; 693  : 		return false;
; 694  : 
; 695  : 	WORD wLocalX, wLocalY;
; 696  : 	wLocalX = (iX - wTerrainCoordX * CTerrainImpl::TERRAIN_XSIZE) / (CTerrainImpl::WATERMAP_XSIZE);
; 697  : 	wLocalY = (iY - wTerrainCoordY * CTerrainImpl::TERRAIN_YSIZE) / (CTerrainImpl::WATERMAP_YSIZE);

  00088	8b 4d 08	 mov	 ecx, DWORD PTR _wTerrainCoordY$1$[ebp]

; 698  : 
; 699  : 	return pTerrain->GetWaterHeight(wLocalX, wLocalY, plWaterHeight);

  0008b	ff 75 10	 push	 DWORD PTR _plWaterHeight$[ebp]
  0008e	0f b7 c9	 movzx	 ecx, cx
  00091	69 c9 00 64 00
	00		 imul	 ecx, ecx, 25600
  00097	2b f9		 sub	 edi, ecx
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _wTerrainCoordX$1$[ebp]
  0009c	0f b7 c9	 movzx	 ecx, cx
  0009f	8b c7		 mov	 eax, edi
  000a1	99		 cdq
  000a2	83 e2 7f	 and	 edx, 127		; 0000007fH
  000a5	69 c9 00 64 00
	00		 imul	 ecx, ecx, 25600
  000ab	03 c2		 add	 eax, edx
  000ad	c1 f8 07	 sar	 eax, 7
  000b0	50		 push	 eax
  000b1	2b d9		 sub	 ebx, ecx
  000b3	8b 4d f8	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  000b6	8b c3		 mov	 eax, ebx
  000b8	99		 cdq
  000b9	83 e2 7f	 and	 edx, 127		; 0000007fH
  000bc	03 c2		 add	 eax, edx
  000be	c1 f8 07	 sar	 eax, 7
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?GetWaterHeight@CTerrain@@QAE_NGGPAJ@Z ; CTerrain::GetWaterHeight
  000c7	5f		 pop	 edi

; 700  : }

  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetWaterHe:
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	32 c0		 xor	 al, al
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 0c 00	 ret	 12			; 0000000cH
?GetWaterHeight@CMapOutdoor@@QAE_NHHPAJ@Z ENDP		; CMapOutdoor::GetWaterHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetTerrainHeight@CMapOutdoor@@QAEMMM@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_pTerrain$ = 8						; size = 4
_fx$ = 8						; size = 4
_byTerrainNum$ = 12					; size = 1
_fy$ = 12						; size = 4
?GetTerrainHeight@CMapOutdoor@@QAEMMM@Z PROC		; CMapOutdoor::GetTerrainHeight, COMDAT
; _this$ = ecx

; 943  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 944  : 	if (fy < 0)

  00004	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	0f 2f c1	 comiss	 xmm0, xmm1
  0000f	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  00012	76 07		 jbe	 SHORT $LN2@GetTerrain

; 945  : 		fy = -fy;

  00014	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
$LN2@GetTerrain:

; 946  : 	long lx, ly;
; 947  : 	PR_FLOAT_TO_INT(fx, lx);

  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  0002a	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00030	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00036	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0003c	66 0f 6e c6	 movd	 xmm0, esi
  00040	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00043	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  0004a	76 01		 jbe	 SHORT $LN6@GetTerrain
  0004c	4e		 dec	 esi
$LN6@GetTerrain:

; 948  : 	PR_FLOAT_TO_INT(fy, ly);

  0004d	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm1
  00055	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0005b	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00061	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00067	66 0f 6e c7	 movd	 xmm0, edi
  0006b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00075	76 01		 jbe	 SHORT $LN8@GetTerrain
  00077	4f		 dec	 edi
$LN8@GetTerrain:

; 949  : 
; 950  : 	WORD usCoordX, usCoordY;
; 951  : 
; 952  : 	usCoordX = (WORD) (lx / CTerrainImpl::TERRAIN_XSIZE);
; 953  : 	usCoordY = (WORD) (ly / CTerrainImpl::TERRAIN_YSIZE);
; 954  : 
; 955  : 	BYTE byTerrainNum;
; 956  : 	if (!GetTerrainNumFromCoord(usCoordX, usCoordY, &byTerrainNum))

  00078	8d 45 0c	 lea	 eax, DWORD PTR _byTerrainNum$[ebp]
  0007b	50		 push	 eax
  0007c	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00081	f7 ef		 imul	 edi
  00083	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00088	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  0008b	8b ca		 mov	 ecx, edx
  0008d	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00090	03 ca		 add	 ecx, edx
  00092	f7 ee		 imul	 esi
  00094	51		 push	 ecx
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00098	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  0009b	8b c2		 mov	 eax, edx
  0009d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a0	03 c2		 add	 eax, edx
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  000a8	84 c0		 test	 al, al
  000aa	74 25		 je	 SHORT $LN10@GetTerrain

; 957  : 		return 0.0f;
; 958  : 
; 959  : 	CTerrain * pTerrain;
; 960  : 
; 961  : 	if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000af	8d 45 08	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000b2	50		 push	 eax
  000b3	ff 75 0c	 push	 DWORD PTR _byTerrainNum$[ebp]
  000b6	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  000bb	85 c0		 test	 eax, eax
  000bd	74 12		 je	 SHORT $LN10@GetTerrain

; 963  : 
; 964  : 	return pTerrain->GetHeight(lx, ly);

  000bf	8b 4d 08	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  000c2	57		 push	 edi
  000c3	56		 push	 esi
  000c4	e8 00 00 00 00	 call	 ?GetHeight@CTerrain@@QAEMHH@Z ; CTerrain::GetHeight
  000c9	5f		 pop	 edi

; 965  : }

  000ca	5e		 pop	 esi
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
$LN10@GetTerrain:

; 962  : 		return 0.0f;

  000d1	d9 ee		 fldz
  000d3	5f		 pop	 edi

; 965  : }

  000d4	5e		 pop	 esi
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
?GetTerrainHeight@CMapOutdoor@@QAEMMM@Z ENDP		; CMapOutdoor::GetTerrainHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z
_TEXT	SEGMENT
_c_byTerrainNum$ = 8					; size = 1
_ppTerrain$ = 12					; size = 4
?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z PROC ; CMapOutdoor::GetTerrainPointer, COMDAT
; _this$ = ecx

; 1037 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1038 : 	if (c_byTerrainNum >= AROUND_AREA_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _c_byTerrainNum$[ebp]
  00006	3c 09		 cmp	 al, 9
  00008	73 19		 jae	 SHORT $LN5@GetTerrain

; 1039 : 	{
; 1040 : 		*ppTerrain = NULL;
; 1041 : 		return FALSE;
; 1042 : 	}
; 1043 : 
; 1044 : 	if (NULL == m_pTerrain[c_byTerrainNum])

  0000a	0f b6 c0	 movzx	 eax, al
  0000d	8b 4c 81 40	 mov	 ecx, DWORD PTR [ecx+eax*4+64]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0e		 je	 SHORT $LN5@GetTerrain

; 1048 : 	}
; 1049 : 
; 1050 : 	*ppTerrain = m_pTerrain[c_byTerrainNum];

  00015	8b 45 0c	 mov	 eax, DWORD PTR _ppTerrain$[ebp]
  00018	89 08		 mov	 DWORD PTR [eax], ecx

; 1051 : 	return TRUE;

  0001a	b8 01 00 00 00	 mov	 eax, 1

; 1052 : }

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
$LN5@GetTerrain:

; 1045 : 	{
; 1046 : 		*ppTerrain = NULL;

  00023	8b 45 0c	 mov	 eax, DWORD PTR _ppTerrain$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1047 : 		return FALSE;

  0002c	33 c0		 xor	 eax, eax

; 1052 : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ENDP ; CMapOutdoor::GetTerrainPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?DestroyTerrainPatchProxyList@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?DestroyTerrainPatchProxyList@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::DestroyTerrainPatchProxyList, COMDAT
; _this$ = ecx

; 370  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 371  : 	if (m_pTerrainPatchProxyList)

  00004	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  00007	85 c9		 test	 ecx, ecx
  00009	74 23		 je	 SHORT $LN5@DestroyTer

; 372  : 	{
; 373  : 		delete [] m_pTerrainPatchProxyList;

  0000b	83 79 fc 00	 cmp	 DWORD PTR [ecx-4], 0
  0000f	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00012	74 08		 je	 SHORT $LN7@DestroyTer
  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	6a 03		 push	 3
  00018	ff 10		 call	 DWORD PTR [eax]
  0001a	eb 0b		 jmp	 SHORT $LN8@DestroyTer
$LN7@DestroyTer:
  0001c	6a 04		 push	 4
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00024	83 c4 08	 add	 esp, 8
$LN8@DestroyTer:

; 374  : 		m_pTerrainPatchProxyList = NULL;

  00027	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
$LN5@DestroyTer:

; 375  : 	}
; 376  : 
; 377  : #ifdef WORLD_EDITOR
; 378  : 	m_IndexBuffer.Destroy();
; 379  : #else
; 380  : 	for (int i = 0; i < TERRAINPATCH_LODMAX; ++i)

  0002e	81 c6 9c 00 00
	00		 add	 esi, 156		; 0000009cH
  00034	bf 03 00 00 00	 mov	 edi, 3
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@DestroyTer:

; 381  : 		m_IndexBuffer[i].Destroy();

  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?Destroy@CGraphicIndexBuffer@@QAEXXZ ; CGraphicIndexBuffer::Destroy
  00047	83 c6 14	 add	 esi, 20			; 00000014H
  0004a	83 ef 01	 sub	 edi, 1
  0004d	75 f1		 jne	 SHORT $LL4@DestroyTer

; 382  : #endif
; 383  : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	c3		 ret	 0
?DestroyTerrainPatchProxyList@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::DestroyTerrainPatchProxyList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::CreateTerrainPatchProxyList, COMDAT
; _this$ = ecx

; 356  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 357  : 	m_wPatchCount = ((m_lViewRadius * 2) / TERRAIN_PATCHSIZE) + 2;

  0002a	8b 46 68	 mov	 eax, DWORD PTR [esi+104]

; 358  : 
; 359  : 	m_pTerrainPatchProxyList = new CTerrainPatchProxy[m_wPatchCount * m_wPatchCount];

  0002d	33 c9		 xor	 ecx, ecx
  0002f	03 c0		 add	 eax, eax
  00031	99		 cdq
  00032	83 e2 0f	 and	 edx, 15			; 0000000fH
  00035	03 c2		 add	 eax, edx
  00037	ba 1c 00 00 00	 mov	 edx, 28			; 0000001cH
  0003c	c1 f8 04	 sar	 eax, 4
  0003f	83 c0 02	 add	 eax, 2
  00042	0f b7 d8	 movzx	 ebx, ax
  00045	0f af db	 imul	 ebx, ebx
  00048	66 89 86 8c 00
	00 00		 mov	 WORD PTR [esi+140], ax
  0004f	8b c3		 mov	 eax, ebx
  00051	89 5d f0	 mov	 DWORD PTR $T3[ebp], ebx
  00054	f7 e2		 mul	 edx
  00056	0f 90 c1	 seto	 cl
  00059	f7 d9		 neg	 ecx
  0005b	0b c8		 or	 ecx, eax
  0005d	33 c0		 xor	 eax, eax
  0005f	83 c1 04	 add	 ecx, 4
  00062	0f 92 c0	 setb	 al
  00065	f7 d8		 neg	 eax
  00067	0b c1		 or	 eax, ecx
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0006f	83 c4 04	 add	 esp, 4
  00072	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00075	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007c	85 c0		 test	 eax, eax
  0007e	74 1a		 je	 SHORT $LN3@CreateTerr
  00080	68 00 00 00 00	 push	 OFFSET ??1CTerrainPatchProxy@@UAE@XZ ; CTerrainPatchProxy::~CTerrainPatchProxy
  00085	68 00 00 00 00	 push	 OFFSET ??0CTerrainPatchProxy@@QAE@XZ ; CTerrainPatchProxy::CTerrainPatchProxy
  0008a	53		 push	 ebx
  0008b	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  0008e	89 18		 mov	 DWORD PTR [eax], ebx
  00090	6a 1c		 push	 28			; 0000001cH
  00092	57		 push	 edi
  00093	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  00098	eb 02		 jmp	 SHORT $LN4@CreateTerr
$LN3@CreateTerr:
  0009a	33 ff		 xor	 edi, edi
$LN4@CreateTerr:

; 360  : 
; 361  : 	m_iPatchTerrainVertexCount = (TERRAIN_PATCHSIZE+1)*(TERRAIN_PATCHSIZE+1);
; 362  : 	m_iPatchWaterVertexCount = TERRAIN_PATCHSIZE * TERRAIN_PATCHSIZE * 6;
; 363  : 	m_iPatchTerrainVertexSize = 24;
; 364  : 	m_iPatchWaterVertexSize = 16;
; 365  : 
; 366  : 	SetIndexBuffer();

  0009c	8b ce		 mov	 ecx, esi
  0009e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a5	89 7e 64	 mov	 DWORD PTR [esi+100], edi
  000a8	c7 86 a0 09 00
	00 21 01 00 00	 mov	 DWORD PTR [esi+2464], 289 ; 00000121H
  000b2	c7 86 a4 09 00
	00 00 06 00 00	 mov	 DWORD PTR [esi+2468], 1536 ; 00000600H
  000bc	c7 86 a8 09 00
	00 18 00 00 00	 mov	 DWORD PTR [esi+2472], 24 ; 00000018H
  000c6	c7 86 ac 09 00
	00 10 00 00 00	 mov	 DWORD PTR [esi+2476], 16 ; 00000010H
  000d0	e8 00 00 00 00	 call	 ?SetIndexBuffer@CMapOutdoor@@IAEXXZ ; CMapOutdoor::SetIndexBuffer

; 367  : }

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000df	59		 pop	 ecx
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ$0:
  00000	33 db		 xor	 ebx, ebx
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  00005	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0000a	f7 e1		 mul	 ecx
  0000c	0f 90 c3	 seto	 bl
  0000f	f7 db		 neg	 ebx
  00011	0b d8		 or	 ebx, eax
  00013	33 c0		 xor	 eax, eax
  00015	83 c3 04	 add	 ebx, 4
  00018	0f 92 c0	 setb	 al
  0001b	f7 d8		 neg	 eax
  0001d	0b c3		 or	 eax, ebx
  0001f	50		 push	 eax
  00020	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00029	83 c4 08	 add	 esp, 8
  0002c	c3		 ret	 0
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
__ehhandler$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ:
  00032	90		 npad	 1
  00033	90		 npad	 1
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0003e	33 c8		 xor	 ecx, eax
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ
  0004a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateTerrainPatchProxyList@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::CreateTerrainPatchProxyList
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?DestroyTerrain@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
__First$1$ = -8						; size = 4
__Last$1$ = -4						; size = 4
?DestroyTerrain@CMapOutdoor@@MAEXXZ PROC		; CMapOutdoor::DestroyTerrain, COMDAT
; _this$ = ecx

; 414  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 415  : 	m_TerrainVector.clear();

  0000a	8b 87 18 09 00
	00		 mov	 eax, DWORD PTR [edi+2328]
  00010	89 87 1c 09 00
	00		 mov	 DWORD PTR [edi+2332], eax

; 416  : 	m_TerrainDeleteVector.clear();

  00016	8b 87 24 09 00
	00		 mov	 eax, DWORD PTR [edi+2340]
  0001c	89 87 28 09 00
	00		 mov	 DWORD PTR [edi+2344], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00022	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00027	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00029	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0002f	2b f1		 sub	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00031	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+16

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00037	89 4d f8	 mov	 DWORD PTR __First$1$[ebp], ecx

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  0003a	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+24
  00040	2b ca		 sub	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00042	c1 fe 02	 sar	 esi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1107 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00045	c1 f9 02	 sar	 ecx, 2

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00048	89 45 fc	 mov	 DWORD PTR __Last$1$[ebp], eax

; 1108 :             if (_Newsize > _Oldcapacity) {

  0004b	3b f1		 cmp	 esi, ecx
  0004d	0f 86 8c 00 00
	00		 jbe	 $LN40@DestroyTer

; 1285 :         if (_Newsize > max_size()) {

  00053	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00059	0f 87 dd 00 00
	00		 ja	 $LN63@DestroyTer
  0005f	53		 push	 ebx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00060	8b d9		 mov	 ebx, ecx
  00062	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  00067	d1 eb		 shr	 ebx, 1
  00069	2b c3		 sub	 eax, ebx
  0006b	3b c8		 cmp	 ecx, eax
  0006d	77 0a		 ja	 SHORT $LN26@DestroyTer

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006f	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00072	3b c6		 cmp	 eax, esi
  00074	0f 42 c6	 cmovb	 eax, esi
  00077	8b f0		 mov	 esi, eax
$LN26@DestroyTer:
  00079	5b		 pop	 ebx

; 1291 :         if (_Myfirst) { // destroy and deallocate old array

  0007a	85 d2		 test	 edx, edx
  0007c	74 2f		 je	 SHORT $LN22@DestroyTer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00085	50		 push	 eax
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1295 :             _Myfirst = pointer();

  0008f	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+16, 0

; 1296 :             _Mylast  = pointer();

  00099	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+20, 0

; 1297 :             _Myend   = pointer();

  000a3	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+24, 0
$LN22@DestroyTer:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000ad	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  000b3	0f 87 88 00 00
	00		 ja	 $LN64@DestroyTer

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000b9	c1 e6 02	 shl	 esi, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  000c2	8b d0		 mov	 edx, eax
  000c4	83 c4 04	 add	 esp, 4
  000c7	8b 45 fc	 mov	 eax, DWORD PTR __Last$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1643 :         _Myfirst           = _Newvec;

  000ca	89 15 10 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+16, edx

; 1644 :         _Mylast            = _Newvec;

  000d0	89 15 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+20, edx

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  000d6	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]
  000d9	89 0d 18 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+24, ecx
$LN40@DestroyTer:

; 1112 :             _Mylast = _Refancy<pointer>(_Copy_memmove(_First, _Last, _Unfancy(_Myfirst)));

  000df	52		 push	 edx
  000e0	50		 push	 eax
  000e1	ff 75 f8	 push	 DWORD PTR __First$1$[ebp]
  000e4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ; std::_Refancy<CTerrain * *,0>
  000ef	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CTerrain@@2V?$CDynamicPool@VCTerrain@@@@A+20, eax
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 420  : 		m_pTerrain[i] = NULL;

  000f7	c7 47 40 00 00
	00 00		 mov	 DWORD PTR [edi+64], 0
  000fe	c7 47 44 00 00
	00 00		 mov	 DWORD PTR [edi+68], 0
  00105	c7 47 48 00 00
	00 00		 mov	 DWORD PTR [edi+72], 0
  0010c	c7 47 4c 00 00
	00 00		 mov	 DWORD PTR [edi+76], 0
  00113	c7 47 50 00 00
	00 00		 mov	 DWORD PTR [edi+80], 0
  0011a	c7 47 54 00 00
	00 00		 mov	 DWORD PTR [edi+84], 0
  00121	c7 47 58 00 00
	00 00		 mov	 DWORD PTR [edi+88], 0
  00128	c7 47 5c 00 00
	00 00		 mov	 DWORD PTR [edi+92], 0
  0012f	c7 47 60 00 00
	00 00		 mov	 DWORD PTR [edi+96], 0
  00136	5f		 pop	 edi
  00137	5e		 pop	 esi

; 421  : }

  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c3		 ret	 0
$LN63@DestroyTer:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1286 :             _Xlength();

  0013c	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
$LN64@DestroyTer:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00141	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN61@DestroyTer:
  00146	cc		 int	 3
?DestroyTerrain@CMapOutdoor@@MAEXXZ ENDP		; CMapOutdoor::DestroyTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$map@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@U?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@U?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 70 04	 push	 DWORD PTR [eax+4]
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0000e	6a 2c		 push	 44			; 0000002cH
  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00017	83 c4 08	 add	 esp, 8
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??1?$map@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@U?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetWaterHeight@CMapOutdoor@@IAEXEEPAJ@Z
_TEXT	SEGMENT
_byTerrainNum$ = 8					; size = 1
_byWaterNum$ = 12					; size = 1
_plWaterHeight$ = 16					; size = 4
?GetWaterHeight@CMapOutdoor@@IAEXEEPAJ@Z PROC		; CMapOutdoor::GetWaterHeight, COMDAT
; _this$ = ecx

; 669  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 670  : 	if (byTerrainNum < 0 || byTerrainNum > AROUND_AREA_NUM - 1 || !m_pTerrain[byTerrainNum])

  00003	8a 45 08	 mov	 al, BYTE PTR _byTerrainNum$[ebp]
  00006	3c 08		 cmp	 al, 8
  00008	77 1a		 ja	 SHORT $LN3@GetWaterHe
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	8b 4c 81 40	 mov	 ecx, DWORD PTR [ecx+eax*4+64]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0f		 je	 SHORT $LN3@GetWaterHe

; 673  : 		return;
; 674  : 	}
; 675  : 
; 676  : 	m_pTerrain[byTerrainNum]->GetWaterHeight(byWaterNum, plWaterHeight);

  00015	ff 75 10	 push	 DWORD PTR _plWaterHeight$[ebp]
  00018	ff 75 0c	 push	 DWORD PTR _byWaterNum$[ebp]
  0001b	e8 00 00 00 00	 call	 ?GetWaterHeight@CTerrain@@QAEXEPAJ@Z ; CTerrain::GetWaterHeight

; 677  : }

  00020	5d		 pop	 ebp
  00021	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetWaterHe:

; 671  : 	{
; 672  : 		*plWaterHeight = -1;

  00024	8b 45 10	 mov	 eax, DWORD PTR _plWaterHeight$[ebp]
  00027	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 677  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?GetWaterHeight@CMapOutdoor@@IAEXEEPAJ@Z ENDP		; CMapOutdoor::GetWaterHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetWaterMap@CMapOutdoor@@IAEXABEPAPAE@Z
_TEXT	SEGMENT
_c_rucTerrainNum$ = 8					; size = 4
_pucWaterMap$ = 12					; size = 4
?GetWaterMap@CMapOutdoor@@IAEXABEPAPAE@Z PROC		; CMapOutdoor::GetWaterMap, COMDAT
; _this$ = ecx

; 658  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 659  : 	if (c_rucTerrainNum < 0 || c_rucTerrainNum > AROUND_AREA_NUM - 1 || !m_pTerrain[c_rucTerrainNum])

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucTerrainNum$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 08		 cmp	 al, 8
  0000a	77 1a		 ja	 SHORT $LN3@GetWaterMa
  0000c	0f b6 c0	 movzx	 eax, al
  0000f	8b 4c 81 40	 mov	 ecx, DWORD PTR [ecx+eax*4+64]
  00013	85 c9		 test	 ecx, ecx
  00015	74 0f		 je	 SHORT $LN3@GetWaterMa

; 660  : 	{
; 661  : 		*pucWaterMap = NULL;
; 662  : 		return;
; 663  : 	}
; 664  : 
; 665  : 	*pucWaterMap = m_pTerrain[c_rucTerrainNum]->GetWaterMap();
; 666  : }

  00017	8b 45 0c	 mov	 eax, DWORD PTR _pucWaterMap$[ebp]
  0001a	81 c1 1a 8e 02
	00		 add	 ecx, 167450		; 00028e1aH
  00020	89 08		 mov	 DWORD PTR [eax], ecx
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN3@GetWaterMa:
  00026	8b 45 0c	 mov	 eax, DWORD PTR _pucWaterMap$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?GetWaterMap@CMapOutdoor@@IAEXABEPAPAE@Z ENDP		; CMapOutdoor::GetWaterMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetNormalMap@CMapOutdoor@@IAEXABEPAPAD@Z
_TEXT	SEGMENT
_c_rucTerrainNum$ = 8					; size = 4
_pucNormalMap$ = 12					; size = 4
?GetNormalMap@CMapOutdoor@@IAEXABEPAPAD@Z PROC		; CMapOutdoor::GetNormalMap, COMDAT
; _this$ = ecx

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 648  : 	if (c_rucTerrainNum < 0 || c_rucTerrainNum > AROUND_AREA_NUM - 1 || !m_pTerrain[c_rucTerrainNum])

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucTerrainNum$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 08		 cmp	 al, 8
  0000a	77 1a		 ja	 SHORT $LN3@GetNormalM
  0000c	0f b6 c0	 movzx	 eax, al
  0000f	8b 4c 81 40	 mov	 ecx, DWORD PTR [ecx+eax*4+64]
  00013	85 c9		 test	 ecx, ecx
  00015	74 0f		 je	 SHORT $LN3@GetNormalM

; 649  : 	{
; 650  : 		*pucNormalMap = NULL;
; 651  : 		return;
; 652  : 	}
; 653  : 
; 654  : 	*pucNormalMap = m_pTerrain[c_rucTerrainNum]->GetNormalMap();
; 655  : }

  00017	8b 45 0c	 mov	 eax, DWORD PTR _pucNormalMap$[ebp]
  0001a	81 c1 1a ce 02
	00		 add	 ecx, 183834		; 0002ce1aH
  00020	89 08		 mov	 DWORD PTR [eax], ecx
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN3@GetNormalM:
  00026	8b 45 0c	 mov	 eax, DWORD PTR _pucNormalMap$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?GetNormalMap@CMapOutdoor@@IAEXABEPAPAD@Z ENDP		; CMapOutdoor::GetNormalMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetHeightMap@CMapOutdoor@@IAEXABEPAPAG@Z
_TEXT	SEGMENT
_c_rucTerrainNum$ = 8					; size = 4
_pwHeightMap$ = 12					; size = 4
?GetHeightMap@CMapOutdoor@@IAEXABEPAPAG@Z PROC		; CMapOutdoor::GetHeightMap, COMDAT
; _this$ = ecx

; 636  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 	if (c_rucTerrainNum < 0 || c_rucTerrainNum > AROUND_AREA_NUM - 1 || !m_pTerrain[c_rucTerrainNum])

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucTerrainNum$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 08		 cmp	 al, 8
  0000a	77 1a		 ja	 SHORT $LN3@GetHeightM
  0000c	0f b6 c0	 movzx	 eax, al
  0000f	8b 4c 81 40	 mov	 ecx, DWORD PTR [ecx+eax*4+64]
  00013	85 c9		 test	 ecx, ecx
  00015	74 0f		 je	 SHORT $LN3@GetHeightM

; 638  : 	{
; 639  : 		*pwHeightMap = NULL;
; 640  : 		return;
; 641  : 	}
; 642  : 
; 643  : 	*pwHeightMap = m_pTerrain[c_rucTerrainNum]->GetHeightMap();
; 644  : }

  00017	8b 45 0c	 mov	 eax, DWORD PTR _pwHeightMap$[ebp]
  0001a	81 c1 04 04 00
	00		 add	 ecx, 1028		; 00000404H
  00020	89 08		 mov	 DWORD PTR [eax], ecx
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN3@GetHeightM:
  00026	8b 45 0c	 mov	 eax, DWORD PTR _pwHeightMap$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?GetHeightMap@CMapOutdoor@@IAEXABEPAPAG@Z ENDP		; CMapOutdoor::GetHeightMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?RestoreAlphaFogOperation@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?RestoreAlphaFogOperation@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::RestoreAlphaFogOperation, COMDAT
; _this$ = ecx

; 1081 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE);

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00006	6a 00		 push	 0
  00008	6a 18		 push	 24			; 00000018H
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1082 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_TEXCOORDINDEX, 1);

  00011	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00017	6a 01		 push	 1
  00019	6a 0b		 push	 11			; 0000000bH
  0001b	6a 01		 push	 1
  0001d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1083 : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00028	6a 1b		 push	 27			; 0000001bH
  0002a	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 1084 : }

  0002f	c3		 ret	 0
?RestoreAlphaFogOperation@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::RestoreAlphaFogOperation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SaveAlphaFogOperation@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?SaveAlphaFogOperation@CMapOutdoor@@IAEXXZ PROC		; CMapOutdoor::SaveAlphaFogOperation, COMDAT
; _this$ = ecx

; 1063 : {

  00000	56		 push	 esi

; 1064 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1,	D3DTA_CURRENT);

  00001	6a 01		 push	 1
  00003	6a 02		 push	 2
  00005	8b f1		 mov	 esi, ecx
  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000d	6a 01		 push	 1
  0000f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1065 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,	D3DTOP_SELECTARG1);

  00014	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0001a	6a 02		 push	 2
  0001c	6a 01		 push	 1
  0001e	6a 01		 push	 1
  00020	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1066 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1,	D3DTA_CURRENT);

  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002b	6a 01		 push	 1
  0002d	6a 05		 push	 5
  0002f	6a 01		 push	 1
  00031	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1067 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG2,	D3DTA_TEXTURE);

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003c	6a 02		 push	 2
  0003e	6a 06		 push	 6
  00040	6a 01		 push	 1
  00042	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1068 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,	D3DTOP_MODULATE);

  00047	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004d	6a 04		 push	 4
  0004f	6a 04		 push	 4
  00051	6a 01		 push	 1
  00053	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1069 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005e	6a 02		 push	 2
  00060	6a 18		 push	 24			; 00000018H
  00062	6a 01		 push	 1
  00064	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1070 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006f	68 00 00 02 00	 push	 131072			; 00020000H
  00074	6a 0b		 push	 11			; 0000000bH
  00076	6a 01		 push	 1
  00078	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1071 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSU, D3DTADDRESS_CLAMP);

  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00083	6a 03		 push	 3
  00085	6a 0d		 push	 13			; 0000000dH
  00087	6a 01		 push	 1
  00089	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1072 : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSV, D3DTADDRESS_CLAMP);

  0008e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00094	6a 03		 push	 3
  00096	6a 0e		 push	 14			; 0000000eH
  00098	6a 01		 push	 1
  0009a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 1073 : 
; 1074 : 	STATEMANAGER.SetTransform(D3DTS_TEXTURE1, &m_matAlphaFogTexture);

  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a5	8d 86 94 01 00
	00		 lea	 eax, DWORD PTR [esi+404]
  000ab	50		 push	 eax
  000ac	6a 11		 push	 17			; 00000011H
  000ae	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 1075 : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b9	6a 01		 push	 1
  000bb	6a 1b		 push	 27			; 0000001bH
  000bd	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 1076 : 	STATEMANAGER.SetTexture(1, m_AlphaFogImageInstance.GetTexturePointer()->GetD3DTexture());

  000c2	8d 8e 74 01 00
	00		 lea	 ecx, DWORD PTR [esi+372]
  000c8	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000da	50		 push	 eax
  000db	6a 01		 push	 1
  000dd	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
  000e2	5e		 pop	 esi

; 1077 : }

  000e3	c3		 ret	 0
?SaveAlphaFogOperation@CMapOutdoor@@IAEXXZ ENDP		; CMapOutdoor::SaveAlphaFogOperation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z
_TEXT	SEGMENT
_fRayRangeInv$1$ = -24					; size = 4
tv325 = -20						; size = 4
_pTerrain$ = -16					; size = 4
_byTerrainNum$1 = -12					; size = 1
_v3CurPos$$sroa$181$1$ = -8				; size = 4
_v3CurPos$$sroa$182$1$ = -4				; size = 4
_s$1$ = 8						; size = 4
tv148 = 8						; size = 4
_fMultiplier$2 = 8					; size = 4
_fPos$ = 8						; size = 4
_v3Start$ = 12						; size = 4
_v3End$ = 16						; size = 4
_fStep$ = 20						; size = 4
_fRayRange$ = 24					; size = 4
_fLimitRange$ = 28					; size = 4
_pv3Pick$ = 32						; size = 4
?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z PROC ; CMapOutdoor::__PickTerrainHeight, COMDAT
; _this$ = ecx

; 449  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 450  : 	CTerrain * pTerrain;
; 451  : 
; 452  : 	D3DXVECTOR3 v3CurPos;
; 453  : 
; 454  : 	float fRayRangeInv=1.0f/fRayRange;

  00006	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@3f800000
  0000e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fRayRange$[ebp]
  00013	0f 28 d5	 movaps	 xmm2, xmm5
  00016	f3 0f 5e d0	 divss	 xmm2, xmm0
  0001a	56		 push	 esi

; 455  : 	while (fPos < fRayRange && fPos<fLimitRange)

  0001b	8b 75 08	 mov	 esi, DWORD PTR _fPos$[ebp]
  0001e	57		 push	 edi
  0001f	8b f9		 mov	 edi, ecx
  00021	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  00025	0f 2f c1	 comiss	 xmm0, xmm1
  00028	f3 0f 11 55 e8	 movss	 DWORD PTR _fRayRangeInv$1$[ebp], xmm2
  0002d	0f 86 a2 01 00
	00		 jbe	 $LN24@PickTerrai
  00033	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL2@PickTerrai:
  00040	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _fLimitRange$[ebp]
  00045	0f 2f c1	 comiss	 xmm0, xmm1
  00048	0f 86 87 01 00
	00		 jbe	 $LN24@PickTerrai
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1364 :     pOut->x = pV1->x + s * (pV2->x - pV1->x);

  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR _v3Start$[ebp]
  00051	8b 45 10	 mov	 eax, DWORD PTR _v3End$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 457  : 		D3DXVec3Lerp(&v3CurPos, &v3Start, &v3End, fPos*fRayRangeInv);

  00054	f3 0f 59 ca	 mulss	 xmm1, xmm2

; 458  : 		BYTE byTerrainNum;
; 459  : 		float fMultiplier = 1.0f;

  00058	f3 0f 11 6d 08	 movss	 DWORD PTR _s$1$[ebp], xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1365 :     pOut->y = pV1->y + s * (pV2->y - pV1->y);

  0005d	f3 0f 10 60 04	 movss	 xmm4, DWORD PTR [eax+4]
  00062	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  00066	f3 0f 5c 61 04	 subss	 xmm4, DWORD PTR [ecx+4]

; 1366 :     pOut->z = pV1->z + s * (pV2->z - pV1->z);

  0006b	f3 0f 10 50 08	 movss	 xmm2, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 460  : 		if (GetTerrainNum(v3CurPos.x, v3CurPos.y, &byTerrainNum))

  00070	8d 45 f4	 lea	 eax, DWORD PTR _byTerrainNum$1[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1364 :     pOut->x = pV1->x + s * (pV2->x - pV1->x);

  00073	f3 0f 5c 19	 subss	 xmm3, DWORD PTR [ecx]

; 1366 :     pOut->z = pV1->z + s * (pV2->z - pV1->z);

  00077	f3 0f 5c 51 08	 subss	 xmm2, DWORD PTR [ecx+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 460  : 		if (GetTerrainNum(v3CurPos.x, v3CurPos.y, &byTerrainNum))

  0007c	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1365 :     pOut->y = pV1->y + s * (pV2->y - pV1->y);

  0007d	f3 0f 59 e1	 mulss	 xmm4, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 460  : 		if (GetTerrainNum(v3CurPos.x, v3CurPos.y, &byTerrainNum))

  00081	83 ec 08	 sub	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1364 :     pOut->x = pV1->x + s * (pV2->x - pV1->x);

  00084	f3 0f 59 d9	 mulss	 xmm3, xmm1

; 1365 :     pOut->y = pV1->y + s * (pV2->y - pV1->y);

  00088	f3 0f 58 61 04	 addss	 xmm4, DWORD PTR [ecx+4]

; 1366 :     pOut->z = pV1->z + s * (pV2->z - pV1->z);

  0008d	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00091	f3 0f 58 19	 addss	 xmm3, DWORD PTR [ecx]
  00095	f3 0f 58 51 08	 addss	 xmm2, DWORD PTR [ecx+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 460  : 		if (GetTerrainNum(v3CurPos.x, v3CurPos.y, &byTerrainNum))

  0009a	f3 0f 11 64 24
	04		 movss	 DWORD PTR [esp+4], xmm4
  000a0	8b cf		 mov	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1365 :     pOut->y = pV1->y + s * (pV2->y - pV1->y);

  000a2	f3 0f 11 65 f8	 movss	 DWORD PTR _v3CurPos$$sroa$181$1$[ebp], xmm4
  000a7	f3 0f 11 5d fc	 movss	 DWORD PTR _v3CurPos$$sroa$182$1$[ebp], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 460  : 		if (GetTerrainNum(v3CurPos.x, v3CurPos.y, &byTerrainNum))

  000ac	f3 0f 11 1c 24	 movss	 DWORD PTR [esp], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1366 :     pOut->z = pV1->z + s * (pV2->z - pV1->z);

  000b1	f3 0f 11 55 ec	 movss	 DWORD PTR tv325[ebp], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 460  : 		if (GetTerrainNum(v3CurPos.x, v3CurPos.y, &byTerrainNum))

  000b6	e8 00 00 00 00	 call	 ?GetTerrainNum@CMapOutdoor@@QAE_NMMPAE@Z ; CMapOutdoor::GetTerrainNum
  000bb	84 c0		 test	 al, al
  000bd	0f 84 bf 00 00
	00		 je	 $LN26@PickTerrai

; 461  : 		{
; 462  : 			if (GetTerrainPointer(byTerrainNum, &pTerrain))

  000c3	8d 45 f0	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000c6	8b cf		 mov	 ecx, edi
  000c8	50		 push	 eax
  000c9	ff 75 f4	 push	 DWORD PTR _byTerrainNum$1[ebp]
  000cc	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 a9 00 00
	00		 je	 $LN26@PickTerrai

; 463  : 			{
; 464  : 				int ix, iy;
; 465  : 				PR_FLOAT_TO_INT(v3CurPos.x, ix);

  000d9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _v3CurPos$$sroa$182$1$[ebp]
  000de	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  000e6	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  000ec	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  000f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000f8	66 0f 6e c1	 movd	 xmm0, ecx
  000fc	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ff	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00106	76 01		 jbe	 SHORT $LN9@PickTerrai
  00108	49		 dec	 ecx
$LN9@PickTerrai:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  00109	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _v3CurPos$$sroa$181$1$[ebp]
  0010e	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 466  : 				PR_FLOAT_TO_INT(fabs(v3CurPos.y), iy);

  00115	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  0011d	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00123	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00129	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0012e	66 0f 6e c0	 movd	 xmm0, eax
  00132	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00135	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  0013c	76 01		 jbe	 SHORT $LN11@PickTerrai
  0013e	48		 dec	 eax
$LN11@PickTerrai:

; 467  : 				float fMapHeight = pTerrain->GetHeight(ix, iy);

  0013f	50		 push	 eax
  00140	51		 push	 ecx
  00141	8b 4d f0	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  00144	e8 00 00 00 00	 call	 ?GetHeight@CTerrain@@QAEMHH@Z ; CTerrain::GetHeight
  00149	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv325[ebp]
  0014e	d9 5d 08	 fstp	 DWORD PTR tv148[ebp]
  00151	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR tv148[ebp]
  00156	0f 2f c8	 comiss	 xmm1, xmm0

; 468  : 				if ( fMapHeight >= v3CurPos.z)

  00159	73 55		 jae	 SHORT $LN20@PickTerrai

; 471  : 					return true;
; 472  : 				}
; 473  : 				else
; 474  : 				{
; 475  : 					fMultiplier = fMAX(1.0f, 0.01f * ( v3CurPos.z - fMapHeight ) );

  0015b	f3 0f 5c c1	 subss	 xmm0, xmm1
  0015f	83 ec 08	 sub	 esp, 8
  00162	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c23d70a
  0016a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00170	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00177	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX
  0017c	d9 5d 08	 fstp	 DWORD PTR _fMultiplier$2[ebp]
  0017f	83 c4 08	 add	 esp, 8
$LN26@PickTerrai:

; 476  : 				}
; 477  : 			}
; 478  : 		}
; 479  : 		fPos += fStep * fMultiplier;

  00182	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _s$1$[ebp]
  00187	f3 0f 59 4d 14	 mulss	 xmm1, DWORD PTR _fStep$[ebp]
  0018c	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fRayRange$[ebp]
  00191	f3 0f 58 0e	 addss	 xmm1, DWORD PTR [esi]
  00195	0f 2f c1	 comiss	 xmm0, xmm1
  00198	f3 0f 11 0e	 movss	 DWORD PTR [esi], xmm1
  0019c	76 37		 jbe	 SHORT $LN24@PickTerrai

; 455  : 	while (fPos < fRayRange && fPos<fLimitRange)

  0019e	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR _fRayRangeInv$1$[ebp]
  001a3	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@3f800000
  001ab	e9 90 fe ff ff	 jmp	 $LL2@PickTerrai
$LN20@PickTerrai:

; 469  : 				{
; 470  : 					*pv3Pick = v3CurPos;

  001b0	8b 45 20	 mov	 eax, DWORD PTR _pv3Pick$[ebp]
  001b3	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _v3CurPos$$sroa$182$1$[ebp]
  001b8	5f		 pop	 edi

; 483  : }

  001b9	5e		 pop	 esi
  001ba	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1
  001be	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _v3CurPos$$sroa$181$1$[ebp]
  001c3	f3 0f 11 48 04	 movss	 DWORD PTR [eax+4], xmm1
  001c8	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
  001cd	b0 01		 mov	 al, 1
  001cf	8b e5		 mov	 esp, ebp
  001d1	5d		 pop	 ebp
  001d2	c2 1c 00	 ret	 28			; 0000001cH
$LN24@PickTerrai:
  001d5	5f		 pop	 edi

; 480  : 	}
; 481  : 
; 482  : 	return false;

  001d6	32 c0		 xor	 al, al

; 483  : }

  001d8	5e		 pop	 esi
  001d9	8b e5		 mov	 esp, ebp
  001db	5d		 pop	 ebp
  001dc	c2 1c 00	 ret	 28			; 0000001cH
?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ENDP ; CMapOutdoor::__PickTerrainHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetShadowMapColor@CMapOutdoor@@QAEKMM@Z
_TEXT	SEGMENT
_pTerrain$ = -4						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?GetShadowMapColor@CMapOutdoor@@QAEKMM@Z PROC		; CMapOutdoor::GetShadowMapColor, COMDAT
; _this$ = ecx

; 1098 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1099 : 	if (fy < 0)

  00004	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR _fy$[ebp]
  00009	0f 57 db	 xorps	 xmm3, xmm3
  0000c	0f 2f da	 comiss	 xmm3, xmm2
  0000f	76 07		 jbe	 SHORT $LN2@GetShadowM

; 1100 : 		fy = -fy;

  00011	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
$LN2@GetShadowM:
  00018	66 0f 6e 41 78	 movd	 xmm0, DWORD PTR [ecx+120]

; 1101 : 
; 1102 : 	float fTerrainSize = (float) (CTerrainImpl::TERRAIN_XSIZE);
; 1103 : 	float fXRef = fx - (float) (m_lCurCoordStartX);

  0001d	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]

; 1104 : 	float fYRef = fy - (float) (m_lCurCoordStartY);
; 1105 : 
; 1106 : 	CTerrain * pTerrain;
; 1107 : 
; 1108 : 	if (fYRef < -fTerrainSize)

  00022	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@c6c80000
  0002a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0002d	f3 0f 5c c8	 subss	 xmm1, xmm0
  00031	66 0f 6e 41 7c	 movd	 xmm0, DWORD PTR [ecx+124]
  00036	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00039	f3 0f 11 4d 08	 movss	 DWORD PTR _fx$[ebp], xmm1
  0003e	f3 0f 5c d0	 subss	 xmm2, xmm0
  00042	0f 2f e2	 comiss	 xmm4, xmm2
  00045	f3 0f 11 55 0c	 movss	 DWORD PTR _fy$[ebp], xmm2
  0004a	0f 87 d0 02 00
	00		 ja	 $LN37@GetShadowM

; 1109 : 		return 0xFFFFFFFF;
; 1110 : 	else if (fYRef >= -fTerrainSize && fYRef < 0.0f)

  00050	0f 2f d4	 comiss	 xmm2, xmm4
  00053	0f 82 1b 01 00
	00		 jb	 $LN5@GetShadowM
  00059	0f 2f da	 comiss	 xmm3, xmm2
  0005c	0f 86 12 01 00
	00		 jbe	 $LN5@GetShadowM

; 1111 : 	{
; 1112 : 		if (fXRef < -fTerrainSize)

  00062	0f 2f e1	 comiss	 xmm4, xmm1
  00065	0f 87 b5 02 00
	00		 ja	 $LN37@GetShadowM

; 1113 : 			return 0xFFFFFFFF;
; 1114 : 		else if (fXRef >= -fTerrainSize && fXRef < 0.0f)

  0006b	0f 2f cc	 comiss	 xmm1, xmm4
  0006e	72 4e		 jb	 SHORT $LN9@GetShadowM
  00070	0f 2f d9	 comiss	 xmm3, xmm1
  00073	76 49		 jbe	 SHORT $LN9@GetShadowM

; 1115 : 		{
; 1116 : 			if (GetTerrainPointer(0, &pTerrain))

  00075	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00078	50		 push	 eax
  00079	6a 00		 push	 0
  0007b	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00080	85 c0		 test	 eax, eax
  00082	0f 84 98 02 00
	00		 je	 $LN37@GetShadowM

; 1117 : 				return pTerrain->GetShadowMapColor(fXRef + fTerrainSize, fYRef + fTerrainSize);

  00088	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  0008d	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@46c80000
$LN58@GetShadowM:

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  00095	8b 4d fc	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  00098	83 ec 08	 sub	 esp, 8
  0009b	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000a1	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
  000a6	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@46c80000
  000ae	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000b3	e8 00 00 00 00	 call	 ?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z ; CTerrainImpl::GetShadowMapColor
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 08 00	 ret	 8
$LN9@GetShadowM:

; 1118 : 			else
; 1119 : 				return 0xFFFFFFFF;
; 1120 : 		}
; 1121 : 		else if (fXRef >= 0.0f && fXRef < fTerrainSize)

  000be	0f 2f cb	 comiss	 xmm1, xmm3
  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46c80000
  000c9	72 46		 jb	 SHORT $LN13@GetShadowM
  000cb	0f 2f c1	 comiss	 xmm0, xmm1
  000ce	76 41		 jbe	 SHORT $LN13@GetShadowM

; 1122 : 		{
; 1123 : 			if (GetTerrainPointer(1, &pTerrain))

  000d0	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000d3	50		 push	 eax
  000d4	6a 01		 push	 1
  000d6	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  000db	85 c0		 test	 eax, eax
  000dd	0f 84 3d 02 00
	00		 je	 $LN37@GetShadowM

; 1124 : 				return pTerrain->GetShadowMapColor(fXRef, fYRef + fTerrainSize);

  000e3	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  000e8	83 ec 08	 sub	 esp, 8
  000eb	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@46c80000
  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  000f6	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000fc	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
  00101	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00106	e8 00 00 00 00	 call	 ?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z ; CTerrainImpl::GetShadowMapColor

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 08 00	 ret	 8
$LN13@GetShadowM:

; 1125 : 			else
; 1126 : 				return 0xFFFFFFFF;
; 1127 : 		}
; 1128 : 		else if (fXRef >= fTerrainSize && fXRef < 2.0f * fTerrainSize)

  00111	0f 2f c8	 comiss	 xmm1, xmm0
  00114	0f 82 06 02 00
	00		 jb	 $LN37@GetShadowM
  0011a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47480000
  00122	0f 2f c1	 comiss	 xmm0, xmm1
  00125	0f 86 f5 01 00
	00		 jbe	 $LN37@GetShadowM

; 1129 : 		{
; 1130 : 			if (GetTerrainPointer(2, &pTerrain))

  0012b	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  0012e	50		 push	 eax
  0012f	6a 02		 push	 2
  00131	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00136	85 c0		 test	 eax, eax
  00138	0f 84 e2 01 00
	00		 je	 $LN37@GetShadowM

; 1131 : 				return pTerrain->GetShadowMapColor(fXRef - fTerrainSize, fYRef + fTerrainSize);

  0013e	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  00143	83 ec 08	 sub	 esp, 8
  00146	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@46c80000
  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  00151	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00157	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
  0015c	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@46c80000
  00164	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00169	e8 00 00 00 00	 call	 ?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z ; CTerrainImpl::GetShadowMapColor

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 08 00	 ret	 8
$LN5@GetShadowM:

; 1132 : 			else
; 1133 : 				return 0xFFFFFFFF;
; 1134 : 		}
; 1135 : 		else
; 1136 : 			return 0xFFFFFFFF;
; 1137 : 	}
; 1138 : 	else if (fYRef >= 0.0f && fYRef < fTerrainSize)

  00174	0f 2f d3	 comiss	 xmm2, xmm3
  00177	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46c80000
  0017f	0f 82 d7 00 00
	00		 jb	 $LN21@GetShadowM
  00185	0f 2f c2	 comiss	 xmm0, xmm2
  00188	0f 86 ce 00 00
	00		 jbe	 $LN21@GetShadowM

; 1139 : 	{
; 1140 : 		if (fXRef < -fTerrainSize)

  0018e	0f 2f e1	 comiss	 xmm4, xmm1
  00191	0f 87 89 01 00
	00		 ja	 $LN37@GetShadowM

; 1141 : 			return 0xFFFFFFFF;
; 1142 : 		else if (fXRef >= -fTerrainSize && fXRef < 0.0f)

  00197	0f 2f cc	 comiss	 xmm1, xmm4
  0019a	72 22		 jb	 SHORT $LN25@GetShadowM
  0019c	0f 2f d9	 comiss	 xmm3, xmm1
  0019f	76 1d		 jbe	 SHORT $LN25@GetShadowM

; 1143 : 		{
; 1144 : 			if (GetTerrainPointer(3, &pTerrain))

  001a1	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  001a4	50		 push	 eax
  001a5	6a 03		 push	 3
  001a7	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  001ac	85 c0		 test	 eax, eax
  001ae	0f 84 6c 01 00
	00		 je	 $LN37@GetShadowM

; 1145 : 				return pTerrain->GetShadowMapColor(fXRef + fTerrainSize, fYRef);

  001b4	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  001b9	e9 d7 fe ff ff	 jmp	 $LN58@GetShadowM
$LN25@GetShadowM:

; 1146 : 			else
; 1147 : 				return 0xFFFFFFFF;
; 1148 : 		}
; 1149 : 		else if (fXRef >= 0.0f && fXRef < fTerrainSize)

  001be	0f 2f cb	 comiss	 xmm1, xmm3
  001c1	72 3e		 jb	 SHORT $LN29@GetShadowM
  001c3	0f 2f c1	 comiss	 xmm0, xmm1
  001c6	76 39		 jbe	 SHORT $LN29@GetShadowM

; 1150 : 		{
; 1151 : 			if (GetTerrainPointer(4, &pTerrain))

  001c8	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  001cb	50		 push	 eax
  001cc	6a 04		 push	 4
  001ce	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  001d3	85 c0		 test	 eax, eax
  001d5	0f 84 45 01 00
	00		 je	 $LN37@GetShadowM

; 1152 : 				return pTerrain->GetShadowMapColor(fXRef, fYRef);

  001db	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  001e0	83 ec 08	 sub	 esp, 8

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  001e3	8b 4d fc	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  001e6	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  001ec	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
  001f1	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001f6	e8 00 00 00 00	 call	 ?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z ; CTerrainImpl::GetShadowMapColor
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c2 08 00	 ret	 8
$LN29@GetShadowM:

; 1153 : 			else
; 1154 : 				return 0xFFFFFFFF;
; 1155 : 		}
; 1156 : 		else if (fXRef >= fTerrainSize && fXRef < 2.0f * fTerrainSize)

  00201	0f 2f c8	 comiss	 xmm1, xmm0
  00204	0f 82 16 01 00
	00		 jb	 $LN37@GetShadowM
  0020a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47480000
  00212	0f 2f c1	 comiss	 xmm0, xmm1
  00215	0f 86 05 01 00
	00		 jbe	 $LN37@GetShadowM

; 1157 : 		{
; 1158 : 			if (GetTerrainPointer(5, &pTerrain))

  0021b	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  0021e	50		 push	 eax
  0021f	6a 05		 push	 5
  00221	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00226	85 c0		 test	 eax, eax
  00228	0f 84 f2 00 00
	00		 je	 $LN37@GetShadowM

; 1159 : 				return pTerrain->GetShadowMapColor(fXRef - fTerrainSize, fYRef);

  0022e	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
$LN60@GetShadowM:

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  00233	8b 4d fc	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  00236	83 ec 08	 sub	 esp, 8
  00239	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0023f	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
  00244	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@46c80000
  0024c	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00251	e8 00 00 00 00	 call	 ?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z ; CTerrainImpl::GetShadowMapColor
  00256	8b e5		 mov	 esp, ebp
  00258	5d		 pop	 ebp
  00259	c2 08 00	 ret	 8
$LN21@GetShadowM:

; 1160 : 			else
; 1161 : 				return 0xFFFFFFFF;
; 1162 : 		}
; 1163 : 		else
; 1164 : 			return 0xFFFFFFFF;
; 1165 : 	}
; 1166 : 	else if (fYRef >= fTerrainSize && fYRef < 2.0f * fTerrainSize)

  0025c	0f 2f d0	 comiss	 xmm2, xmm0
  0025f	0f 82 bb 00 00
	00		 jb	 $LN37@GetShadowM
  00265	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@47480000
  0026d	0f 2f ea	 comiss	 xmm5, xmm2
  00270	0f 86 aa 00 00
	00		 jbe	 $LN37@GetShadowM

; 1167 : 	{
; 1168 : 		if (fXRef < -fTerrainSize)

  00276	0f 2f e1	 comiss	 xmm4, xmm1
  00279	0f 87 a1 00 00
	00		 ja	 $LN37@GetShadowM

; 1169 : 			return 0xFFFFFFFF;
; 1170 : 		else if (fXRef >= -fTerrainSize && fXRef < 0.0f)

  0027f	0f 2f cc	 comiss	 xmm1, xmm4
  00282	72 2a		 jb	 SHORT $LN41@GetShadowM
  00284	0f 2f d9	 comiss	 xmm3, xmm1
  00287	76 25		 jbe	 SHORT $LN41@GetShadowM

; 1171 : 		{
; 1172 : 			if (GetTerrainPointer(6, &pTerrain))

  00289	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  0028c	50		 push	 eax
  0028d	6a 06		 push	 6
  0028f	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00294	85 c0		 test	 eax, eax
  00296	0f 84 84 00 00
	00		 je	 $LN37@GetShadowM

; 1173 : 				return pTerrain->GetShadowMapColor(fXRef + fTerrainSize, fYRef - fTerrainSize);

  0029c	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  002a1	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@46c80000
  002a9	e9 e7 fd ff ff	 jmp	 $LN58@GetShadowM
$LN41@GetShadowM:

; 1174 : 			else
; 1175 : 				return 0xFFFFFFFF;
; 1176 : 		}
; 1177 : 		else if (fXRef >= 0.0f && fXRef < fTerrainSize)

  002ae	0f 2f cb	 comiss	 xmm1, xmm3
  002b1	72 42		 jb	 SHORT $LN45@GetShadowM
  002b3	0f 2f c1	 comiss	 xmm0, xmm1
  002b6	76 3d		 jbe	 SHORT $LN45@GetShadowM

; 1178 : 		{
; 1179 : 			if (GetTerrainPointer(7, &pTerrain))

  002b8	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  002bb	50		 push	 eax
  002bc	6a 07		 push	 7
  002be	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  002c3	85 c0		 test	 eax, eax
  002c5	74 59		 je	 SHORT $LN37@GetShadowM

; 1180 : 				return pTerrain->GetShadowMapColor(fXRef, fYRef - fTerrainSize);

  002c7	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  002cc	83 ec 08	 sub	 esp, 8
  002cf	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@46c80000

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  002d7	8b 4d fc	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  002da	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  002e0	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
  002e5	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  002ea	e8 00 00 00 00	 call	 ?GetShadowMapColor@CTerrainImpl@@QAEKMM@Z ; CTerrainImpl::GetShadowMapColor
  002ef	8b e5		 mov	 esp, ebp
  002f1	5d		 pop	 ebp
  002f2	c2 08 00	 ret	 8
$LN45@GetShadowM:

; 1181 : 			else
; 1182 : 				return 0xFFFFFFFF;
; 1183 : 		}
; 1184 : 		else if (fXRef >= fTerrainSize && fXRef < 2.0f * fTerrainSize)

  002f5	0f 2f c8	 comiss	 xmm1, xmm0
  002f8	72 26		 jb	 SHORT $LN37@GetShadowM
  002fa	0f 2f e9	 comiss	 xmm5, xmm1
  002fd	76 21		 jbe	 SHORT $LN37@GetShadowM

; 1185 : 		{
; 1186 : 			if (GetTerrainPointer(8, &pTerrain))

  002ff	8d 45 fc	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00302	50		 push	 eax
  00303	6a 08		 push	 8
  00305	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  0030a	85 c0		 test	 eax, eax
  0030c	74 12		 je	 SHORT $LN37@GetShadowM

; 1187 : 				return pTerrain->GetShadowMapColor(fXRef - fTerrainSize, fYRef - fTerrainSize);

  0030e	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  00313	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@46c80000
  0031b	e9 13 ff ff ff	 jmp	 $LN60@GetShadowM
$LN37@GetShadowM:

; 1188 : 			else
; 1189 : 				return 0xFFFFFFFF;
; 1190 : 		}
; 1191 : 		else
; 1192 : 			return 0xFFFFFFFF;
; 1193 : 	}
; 1194 : 	else
; 1195 : 		return 0xFFFFFFFF;

  00320	83 c8 ff	 or	 eax, -1

; 1196 : 
; 1197 : 	return 0xFFFFFFFF;
; 1198 : }

  00323	8b e5		 mov	 esp, ebp
  00325	5d		 pop	 ebp
  00326	c2 08 00	 ret	 8
?GetShadowMapColor@CMapOutdoor@@QAEKMM@Z ENDP		; CMapOutdoor::GetShadowMapColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetDrawCharacterShadow@CMapOutdoor@@QAEX_N@Z
_TEXT	SEGMENT
_bDrawChrShadow$ = 8					; size = 1
?SetDrawCharacterShadow@CMapOutdoor@@QAEX_N@Z PROC	; CMapOutdoor::SetDrawCharacterShadow, COMDAT
; _this$ = ecx

; 1093 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1094 : 	m_bDrawChrShadow = bDrawChrShadow;

  00003	8a 45 08	 mov	 al, BYTE PTR _bDrawChrShadow$[ebp]
  00006	88 81 32 01 00
	00		 mov	 BYTE PTR [ecx+306], al

; 1095 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetDrawCharacterShadow@CMapOutdoor@@QAEX_N@Z ENDP	; CMapOutdoor::SetDrawCharacterShadow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetDrawShadow@CMapOutdoor@@QAEX_N@Z
_TEXT	SEGMENT
_bDrawShadow$ = 8					; size = 1
?SetDrawShadow@CMapOutdoor@@QAEX_N@Z PROC		; CMapOutdoor::SetDrawShadow, COMDAT
; _this$ = ecx

; 1088 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1089 : 	m_bDrawShadow = bDrawShadow;

  00003	8a 45 08	 mov	 al, BYTE PTR _bDrawShadow$[ebp]
  00006	88 81 31 01 00
	00		 mov	 BYTE PTR [ecx+305], al

; 1090 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetDrawShadow@CMapOutdoor@@QAEX_N@Z ENDP		; CMapOutdoor::SetDrawShadow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetTerrainCount@CMapOutdoor@@QAE_NFF@Z
_TEXT	SEGMENT
_sTerrainCountX$ = 8					; size = 2
_sTerrainCountY$ = 12					; size = 2
?SetTerrainCount@CMapOutdoor@@QAE_NFF@Z PROC		; CMapOutdoor::SetTerrainCount, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 235  : 	if (0 == sTerrainCountX || MAX_MAPSIZE < sTerrainCountX)

  00003	66 8b 45 08	 mov	 ax, WORD PTR _sTerrainCountX$[ebp]
  00007	8b d1		 mov	 edx, ecx
  00009	33 c9		 xor	 ecx, ecx
  0000b	57		 push	 edi
  0000c	66 3b c8	 cmp	 cx, ax
  0000f	74 2b		 je	 SHORT $LN3@SetTerrain
  00011	bf 00 01 00 00	 mov	 edi, 256		; 00000100H
  00016	66 3b f8	 cmp	 di, ax
  00019	7c 21		 jl	 SHORT $LN3@SetTerrain

; 237  : 
; 238  : 	if (0 == sTerrainCountY || MAX_MAPSIZE < sTerrainCountY)

  0001b	66 8b 4d 0c	 mov	 cx, WORD PTR _sTerrainCountY$[ebp]
  0001f	56		 push	 esi
  00020	33 f6		 xor	 esi, esi
  00022	66 3b f1	 cmp	 si, cx
  00025	5e		 pop	 esi
  00026	74 14		 je	 SHORT $LN3@SetTerrain
  00028	66 3b f9	 cmp	 di, cx
  0002b	7c 0f		 jl	 SHORT $LN3@SetTerrain

; 239  : 		return false;
; 240  : 
; 241  : 	m_sTerrainCountX = sTerrainCountX;

  0002d	66 89 42 70	 mov	 WORD PTR [edx+112], ax

; 242  : 	m_sTerrainCountY = sTerrainCountY;
; 243  : 	return true;

  00031	b0 01		 mov	 al, 1
  00033	66 89 4a 72	 mov	 WORD PTR [edx+114], cx
  00037	5f		 pop	 edi

; 244  : }

  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
$LN3@SetTerrain:

; 236  : 		return false;

  0003c	32 c0		 xor	 al, al
  0003e	5f		 pop	 edi

; 244  : }

  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?SetTerrainCount@CMapOutdoor@@QAE_NFF@Z ENDP		; CMapOutdoor::SetTerrainCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetPickingPoint@CMapOutdoor@@QAE_NPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_v3IntersectPt$ = 8					; size = 4
?GetPickingPoint@CMapOutdoor@@QAE_NPAUD3DXVECTOR3@@@Z PROC ; CMapOutdoor::GetPickingPoint, COMDAT
; _this$ = ecx

; 444  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 445  : 	return GetPickingPointWithRay(ms_Ray, v3IntersectPt);

  00003	ff 75 08	 push	 DWORD PTR _v3IntersectPt$[ebp]
  00006	68 00 00 00 00	 push	 OFFSET ?ms_Ray@CGraphicBase@@1VCRay@@A ; CGraphicBase::ms_Ray
  0000b	e8 00 00 00 00	 call	 ?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z ; CMapOutdoor::GetPickingPointWithRay

; 446  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?GetPickingPoint@CMapOutdoor@@QAE_NPAUD3DXVECTOR3@@@Z ENDP ; CMapOutdoor::GetPickingPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetPickingPointWithRayOnlyTerrain@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_fRayRange$1$ = -48					; size = 4
_fPos$ = -44						; size = 4
_v3TerrainPick$ = -40					; size = 12
_v3Start$ = -28						; size = 12
_v3End$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_rRay$ = 8						; size = 4
_v3IntersectPt$ = 12					; size = 4
?GetPickingPointWithRayOnlyTerrain@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z PROC ; CMapOutdoor::GetPickingPointWithRayOnlyTerrain, COMDAT
; _this$ = ecx

; 548  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _rRay$[ebp]
  00013	56		 push	 esi
  00014	8b 75 0c	 mov	 esi, DWORD PTR _v3IntersectPt$[ebp]
  00017	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h

; 36   : 			*pv3Start = m_v3Start;

  00018	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 548  : {

  0001b	8b f9		 mov	 edi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h

; 42   : 			*pfRayRange = m_fRayRange;

  0001d	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]

; 36   : 			*pv3Start = m_v3Start;

  00022	f3 0f 7e 02	 movq	 xmm0, QWORD PTR [edx]
  00026	89 45 ec	 mov	 DWORD PTR _v3Start$[ebp+8], eax

; 47   : 			*pv3End = m_v3End;

  00029	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0002c	89 45 f8	 mov	 DWORD PTR _v3End$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 566  : 	if (!__PickTerrainHeight(fPos, v3Start, v3End, 5.0f, fRayRange, 5000.0f, &v3TerrainPick))

  0002f	8d 45 d8	 lea	 eax, DWORD PTR _v3TerrainPick$[ebp]
  00032	50		 push	 eax
  00033	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h

; 36   : 			*pv3Start = m_v3Start;

  00036	66 0f d6 45 e4	 movq	 QWORD PTR _v3Start$[ebp], xmm0

; 47   : 			*pv3End = m_v3End;

  0003b	f3 0f 7e 42 0c	 movq	 xmm0, QWORD PTR [edx+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 566  : 	if (!__PickTerrainHeight(fPos, v3Start, v3End, 5.0f, fRayRange, 5000.0f, &v3TerrainPick))

  00040	8d 45 f0	 lea	 eax, DWORD PTR _v3End$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h

; 42   : 			*pfRayRange = m_fRayRange;

  00043	f3 0f 11 4d d0	 movss	 DWORD PTR _fRayRange$1$[ebp], xmm1

; 47   : 			*pv3End = m_v3End;

  00048	66 0f d6 45 f0	 movq	 QWORD PTR _v3End$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 566  : 	if (!__PickTerrainHeight(fPos, v3Start, v3End, 5.0f, fRayRange, 5000.0f, &v3TerrainPick))

  0004d	c7 44 24 08 00
	40 9c 45	 mov	 DWORD PTR [esp+8], 1167867904 ; 459c4000H
  00055	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0005b	c7 04 24 00 00
	a0 40		 mov	 DWORD PTR [esp], 1084227584 ; 40a00000H
  00062	50		 push	 eax
  00063	8d 45 e4	 lea	 eax, DWORD PTR _v3Start$[ebp]
  00066	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _fPos$[ebp], 0
  0006d	50		 push	 eax
  0006e	8d 45 d4	 lea	 eax, DWORD PTR _fPos$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
  00077	84 c0		 test	 al, al
  00079	0f 85 82 00 00
	00		 jne	 $LN17@GetPicking

; 567  : 		if (!__PickTerrainHeight(fPos, v3Start, v3End, 10.0f, fRayRange, 10000.0f, &v3TerrainPick))

  0007f	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _fRayRange$1$[ebp]
  00084	8d 45 d8	 lea	 eax, DWORD PTR _v3TerrainPick$[ebp]
  00087	50		 push	 eax
  00088	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0008b	8d 45 f0	 lea	 eax, DWORD PTR _v3End$[ebp]
  0008e	8b cf		 mov	 ecx, edi
  00090	c7 44 24 08 00
	40 1c 46	 mov	 DWORD PTR [esp+8], 1176256512 ; 461c4000H
  00098	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0009e	c7 04 24 00 00
	20 41		 mov	 DWORD PTR [esp], 1092616192 ; 41200000H
  000a5	50		 push	 eax
  000a6	8d 45 e4	 lea	 eax, DWORD PTR _v3Start$[ebp]
  000a9	50		 push	 eax
  000aa	8d 45 d4	 lea	 eax, DWORD PTR _fPos$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
  000b3	84 c0		 test	 al, al
  000b5	75 4a		 jne	 SHORT $LN17@GetPicking

; 568  : 			if (!__PickTerrainHeight(fPos, v3Start, v3End, 100.0f, fRayRange, 100000.0f, &v3TerrainPick))

  000b7	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _fRayRange$1$[ebp]
  000bc	8d 45 d8	 lea	 eax, DWORD PTR _v3TerrainPick$[ebp]
  000bf	50		 push	 eax
  000c0	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000c3	8d 45 f0	 lea	 eax, DWORD PTR _v3End$[ebp]
  000c6	8b cf		 mov	 ecx, edi
  000c8	c7 44 24 08 00
	50 c3 47	 mov	 DWORD PTR [esp+8], 1203982336 ; 47c35000H
  000d0	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d6	c7 04 24 00 00
	c8 42		 mov	 DWORD PTR [esp], 1120403456 ; 42c80000H
  000dd	50		 push	 eax
  000de	8d 45 e4	 lea	 eax, DWORD PTR _v3Start$[ebp]
  000e1	50		 push	 eax
  000e2	8d 45 d4	 lea	 eax, DWORD PTR _fPos$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
  000eb	84 c0		 test	 al, al
  000ed	75 12		 jne	 SHORT $LN17@GetPicking

; 574  : 		return true;
; 575  : 	}
; 576  : 
; 577  : 	return false;
; 578  : }

  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f4	33 cd		 xor	 ecx, ebp
  000f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 08 00	 ret	 8
$LN17@GetPicking:

; 569  : 					bTerrainPick=false;
; 570  : 
; 571  : 	if (bTerrainPick)
; 572  : 	{
; 573  : 		*v3IntersectPt = v3TerrainPick;

  00101	f3 0f 7e 45 d8	 movq	 xmm0, QWORD PTR _v3TerrainPick$[ebp]
  00106	8b 45 e0	 mov	 eax, DWORD PTR _v3TerrainPick$[ebp+8]

; 574  : 		return true;
; 575  : 	}
; 576  : 
; 577  : 	return false;
; 578  : }

  00109	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010c	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00110	33 cd		 xor	 ecx, ebp
  00112	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00115	b0 01		 mov	 al, 1
  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 08 00	 ret	 8
?GetPickingPointWithRayOnlyTerrain@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z ENDP ; CMapOutdoor::GetPickingPointWithRayOnlyTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_r$2 = -152						; size = 12
_v3ObjectPick$1$ = -140					; size = 8
tv562 = -132						; size = 4
_v3ObjectPick$ = -128					; size = 12
_this$1$ = -116						; size = 4
tv557 = -116						; size = 4
tv555 = -112						; size = 4
_fPos$ = -112						; size = 4
_fRayRange$1$ = -108					; size = 4
tv556 = -108						; size = 4
_kGetPickingPoint$3 = -104				; size = 40
_v3dStart$ = -64					; size = 12
_v3End$ = -52						; size = 12
_v3Start$ = -40						; size = 12
_v3TerrainPick$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rRay$ = 8						; size = 4
_v3IntersectPt$ = 12					; size = 4
?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z PROC ; CMapOutdoor::GetPickingPointWithRay, COMDAT
; _this$ = ecx

; 485  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d 8c	 mov	 DWORD PTR _this$1$[ebp], ecx
  00031	8b 7d 08	 mov	 edi, DWORD PTR _rRay$[ebp]

; 486  : 	bool bObjectPick = false;

  00034	32 ff		 xor	 bh, bh
  00036	8b 75 0c	 mov	 esi, DWORD PTR _v3IntersectPt$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Ray.h

; 42   : 			*pfRayRange = m_fRayRange;

  00039	f3 0f 10 47 24	 movss	 xmm0, DWORD PTR [edi+36]

; 36   : 			*pv3Start = m_v3Start;

  0003e	f3 0f 7e 0f	 movq	 xmm1, QWORD PTR [edi]
  00042	8b 57 08	 mov	 edx, DWORD PTR [edi+8]

; 47   : 			*pv3End = m_v3End;

  00045	8b 47 14	 mov	 eax, DWORD PTR [edi+20]

; 42   : 			*pfRayRange = m_fRayRange;

  00048	f3 0f 11 45 94	 movss	 DWORD PTR _fRayRange$1$[ebp], xmm0

; 47   : 			*pv3End = m_v3End;

  0004d	f3 0f 7e 47 0c	 movq	 xmm0, QWORD PTR [edi+12]

; 36   : 			*pv3Start = m_v3Start;

  00052	66 0f d6 4d d8	 movq	 QWORD PTR _v3Start$[ebp], xmm1
  00057	89 55 e0	 mov	 DWORD PTR _v3Start$[ebp+8], edx

; 47   : 			*pv3End = m_v3End;

  0005a	66 0f d6 45 cc	 movq	 QWORD PTR _v3End$[ebp], xmm0
  0005f	89 45 d4	 mov	 DWORD PTR _v3End$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  00062	66 0f d6 4d c0	 movq	 QWORD PTR _v3dStart$[ebp], xmm1
  00067	89 55 c8	 mov	 DWORD PTR _v3dStart$[ebp+8], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 500  : 	if (!m_bEnableTerrainOnlyForHeight)

  0006a	38 b9 b6 0e 00
	00		 cmp	 BYTE PTR [ecx+3766], bh
  00070	0f 85 88 00 00
	00		 jne	 $LN50@GetPicking

; 501  : 	{
; 502  : 		//DWORD baseTime = timeGetTime();
; 503  : 		CCullingManager & rkCullingMgr = CCullingManager::Instance();

  00076	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton

; 45   : 	FGetPickingPoint(D3DXVECTOR3 & v3Start, D3DXVECTOR3 & v3Dir) : m_v3Start(v3Start), m_v3Dir(v3Dir), m_bPicked(false) {}

  0007c	8b c2		 mov	 eax, edx
  0007e	f3 0f 7e c1	 movq	 xmm0, xmm1
  00082	89 45 a0	 mov	 DWORD PTR _kGetPickingPoint$3[ebp+8], eax
  00085	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00088	66 0f d6 45 98	 movq	 QWORD PTR _kGetPickingPoint$3[ebp], xmm0
  0008d	f3 0f 7e 47 18	 movq	 xmm0, QWORD PTR [edi+24]
  00092	89 45 ac	 mov	 DWORD PTR _kGetPickingPoint$3[ebp+20], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  00095	8d 45 98	 lea	 eax, DWORD PTR _kGetPickingPoint$3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 45   : 	FGetPickingPoint(D3DXVECTOR3 & v3Start, D3DXVECTOR3 & v3Dir) : m_v3Start(v3Start), m_v3Dir(v3Dir), m_bPicked(false) {}

  00098	66 0f d6 45 a4	 movq	 QWORD PTR _kGetPickingPoint$3[ebp+12], xmm0
  0009d	88 7d bc	 mov	 BYTE PTR _kGetPickingPoint$3[ebp+36], bh
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 16   : 	{}

  000a0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _r$2[ebp], OFFSET ??_7?$RangeTester@UFGetPickingPoint@@@@6B@

; 15   : 		: f(fn), dist(distance)

  000aa	89 85 6c ff ff
	ff		 mov	 DWORD PTR _r$2[ebp+4], eax
  000b0	c7 85 70 ff ff
	ff 00 00 80 bf	 mov	 DWORD PTR _r$2[ebp+8], -1082130432 ; bf800000H

; 107  : 		m_Factory->PointTest2d(p, &r);

  000ba	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000bd	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _r$2[ebp]
  000c3	50		 push	 eax
  000c4	8d 45 c0	 lea	 eax, DWORD PTR _v3dStart$[ebp]
  000c7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z ; SpherePackFactory::PointTest2d

; 108  : 	}

  000d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000db	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _r$2[ebp], OFFSET ??_7SpherePackCallback@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 507  : 		if (kGetPickingPoint.m_bPicked)

  000e5	38 7d bc	 cmp	 BYTE PTR _kGetPickingPoint$3[ebp+36], bh
  000e8	74 14		 je	 SHORT $LN50@GetPicking

; 508  : 		{
; 509  : 			bObjectPick = true;
; 510  : 			v3ObjectPick = kGetPickingPoint.m_v3PickingPoint;

  000ea	f3 0f 7e 45 b0	 movq	 xmm0, QWORD PTR _kGetPickingPoint$3[ebp+24]
  000ef	b7 01		 mov	 bh, 1
  000f1	8b 7d b8	 mov	 edi, DWORD PTR _kGetPickingPoint$3[ebp+32]
  000f4	66 0f d6 45 80	 movq	 QWORD PTR _v3ObjectPick$[ebp], xmm0
  000f9	89 7d 88	 mov	 DWORD PTR _v3ObjectPick$[ebp+8], edi
  000fc	eb 08		 jmp	 SHORT $LN56@GetPicking
$LN50@GetPicking:

; 507  : 		if (kGetPickingPoint.m_bPicked)

  000fe	8b 7d 88	 mov	 edi, DWORD PTR _v3ObjectPick$[ebp+8]
  00101	f3 0f 7e 45 80	 movq	 xmm0, QWORD PTR _v3ObjectPick$[ebp]
$LN56@GetPicking:

; 511  : 		}
; 512  : 	}
; 513  : 
; 514  : 	float fPos = 0.0f;
; 515  : 	//float fStep = 1.0f;
; 516  : 	//float fRayRangeInv=1.0f/fRayRange;
; 517  : 
; 518  : 	bTerrainPick=true;
; 519  : 	if (!__PickTerrainHeight(fPos, v3Start, v3End, 5.0f, fRayRange, 5000.0f, &v3TerrainPick))

  00106	8b 4d 8c	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00109	8d 45 e4	 lea	 eax, DWORD PTR _v3TerrainPick$[ebp]
  0010c	50		 push	 eax
  0010d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00110	66 0f d6 85 74
	ff ff ff	 movq	 QWORD PTR _v3ObjectPick$1$[ebp], xmm0
  00118	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fRayRange$1$[ebp]
  0011d	8d 45 cc	 lea	 eax, DWORD PTR _v3End$[ebp]
  00120	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _fPos$[ebp], 0
  00127	b3 01		 mov	 bl, 1
  00129	c7 44 24 08 00
	40 9c 45	 mov	 DWORD PTR [esp+8], 1167867904 ; 459c4000H
  00131	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00137	c7 04 24 00 00
	a0 40		 mov	 DWORD PTR [esp], 1084227584 ; 40a00000H
  0013e	50		 push	 eax
  0013f	8d 45 d8	 lea	 eax, DWORD PTR _v3Start$[ebp]
  00142	50		 push	 eax
  00143	8d 45 90	 lea	 eax, DWORD PTR _fPos$[ebp]
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
  0014c	84 c0		 test	 al, al
  0014e	75 74		 jne	 SHORT $LN6@GetPicking

; 520  : 		if (!__PickTerrainHeight(fPos, v3Start, v3End, 10.0f, fRayRange, 10000.0f, &v3TerrainPick))

  00150	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fRayRange$1$[ebp]
  00155	8d 45 e4	 lea	 eax, DWORD PTR _v3TerrainPick$[ebp]
  00158	8b 4d 8c	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0015b	50		 push	 eax
  0015c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0015f	8d 45 cc	 lea	 eax, DWORD PTR _v3End$[ebp]
  00162	c7 44 24 08 00
	40 1c 46	 mov	 DWORD PTR [esp+8], 1176256512 ; 461c4000H
  0016a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00170	c7 04 24 00 00
	20 41		 mov	 DWORD PTR [esp], 1092616192 ; 41200000H
  00177	50		 push	 eax
  00178	8d 45 d8	 lea	 eax, DWORD PTR _v3Start$[ebp]
  0017b	50		 push	 eax
  0017c	8d 45 90	 lea	 eax, DWORD PTR _fPos$[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
  00185	84 c0		 test	 al, al
  00187	75 3b		 jne	 SHORT $LN6@GetPicking

; 521  : 			if (!__PickTerrainHeight(fPos, v3Start, v3End, 100.0f, fRayRange, 100000.0f, &v3TerrainPick))

  00189	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fRayRange$1$[ebp]
  0018e	8d 45 e4	 lea	 eax, DWORD PTR _v3TerrainPick$[ebp]
  00191	8b 4d 8c	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00194	50		 push	 eax
  00195	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00198	8d 45 cc	 lea	 eax, DWORD PTR _v3End$[ebp]
  0019b	c7 44 24 08 00
	50 c3 47	 mov	 DWORD PTR [esp+8], 1203982336 ; 47c35000H
  001a3	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001a9	c7 04 24 00 00
	c8 42		 mov	 DWORD PTR [esp], 1120403456 ; 42c80000H
  001b0	50		 push	 eax
  001b1	8d 45 d8	 lea	 eax, DWORD PTR _v3Start$[ebp]
  001b4	50		 push	 eax
  001b5	8d 45 90	 lea	 eax, DWORD PTR _fPos$[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?__PickTerrainHeight@CMapOutdoor@@IAE_NAAMABUD3DXVECTOR3@@1MMMPAU2@@Z ; CMapOutdoor::__PickTerrainHeight
  001be	f6 d8		 neg	 al
  001c0	1a c0		 sbb	 al, al
  001c2	22 d8		 and	 bl, al
$LN6@GetPicking:

; 522  : 					bTerrainPick=false;
; 523  : 
; 524  : 
; 525  : 	if (bObjectPick && bTerrainPick)

  001c4	84 ff		 test	 bh, bh
  001c6	0f 84 fb 00 00
	00		 je	 $LN11@GetPicking
  001cc	84 db		 test	 bl, bl
  001ce	0f 84 e0 00 00
	00		 je	 $LN9@GetPicking
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001d4	f3 0f 10 6d 80	 movss	 xmm5, DWORD PTR _v3ObjectPick$[ebp]
  001d9	f3 0f 10 65 84	 movss	 xmm4, DWORD PTR _v3ObjectPick$[ebp+4]
  001de	f3 0f 5c 65 dc	 subss	 xmm4, DWORD PTR _v3Start$[ebp+4]
  001e3	f3 0f 5c 6d d8	 subss	 xmm5, DWORD PTR _v3Start$[ebp]
  001e8	f3 0f 10 5d 88	 movss	 xmm3, DWORD PTR _v3ObjectPick$[ebp+8]
  001ed	f3 0f 5c 5d e0	 subss	 xmm3, DWORD PTR _v3Start$[ebp+8]
  001f2	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _v3TerrainPick$[ebp+8]
  001f7	f3 0f 5c 4d e0	 subss	 xmm1, DWORD PTR _v3Start$[ebp+8]
  001fc	f3 0f 10 75 e4	 movss	 xmm6, DWORD PTR _v3TerrainPick$[ebp]
  00201	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR _v3TerrainPick$[ebp+4]
  00206	f3 0f 5c 75 d8	 subss	 xmm6, DWORD PTR _v3Start$[ebp]
  0020b	f3 0f 5c 55 dc	 subss	 xmm2, DWORD PTR _v3Start$[ebp+4]

; 182  :     z = fz;

  00210	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00214	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00218	f3 0f 59 db	 mulss	 xmm3, xmm3
  0021c	f3 0f 58 e5	 addss	 xmm4, xmm5

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00220	f3 0f 11 4d 94	 movss	 DWORD PTR tv556[ebp], xmm1
  00225	0f 57 c9	 xorps	 xmm1, xmm1
  00228	f3 0f 11 75 90	 movss	 DWORD PTR tv555[ebp], xmm6
  0022d	f3 0f 11 55 8c	 movss	 DWORD PTR tv557[ebp], xmm2

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00232	f3 0f 58 e3	 addss	 xmm4, xmm3
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00236	0f 5a c4	 cvtps2pd xmm0, xmm4
  00239	66 0f 2e c8	 ucomisd xmm1, xmm0
  0023d	77 06		 ja	 SHORT $LN52@GetPicking
  0023f	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00243	eb 05		 jmp	 SHORT $LN53@GetPicking
$LN52@GetPicking:
  00245	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN53@GetPicking:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 527  : 		if ( D3DXVec3Length( &(v3ObjectPick - v3Start) ) >= D3DXVec3Length( &(v3TerrainPick - v3Start) ) )

  0024a	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR tv557[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0024f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 527  : 		if ( D3DXVec3Length( &(v3ObjectPick - v3Start) ) >= D3DXVec3Length( &(v3TerrainPick - v3Start) ) )

  00253	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00257	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv562[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  0025f	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv555[ebp]
  00264	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00268	f3 0f 58 c8	 addss	 xmm1, xmm0
  0026c	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv556[ebp]
  00271	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00275	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00279	0f 5a c1	 cvtps2pd xmm0, xmm1
  0027c	0f 57 c9	 xorps	 xmm1, xmm1
  0027f	66 0f 2e c8	 ucomisd xmm1, xmm0
  00283	77 06		 ja	 SHORT $LN54@GetPicking
  00285	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00289	eb 05		 jmp	 SHORT $LN55@GetPicking
$LN54@GetPicking:
  0028b	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN55@GetPicking:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 527  : 		if ( D3DXVec3Length( &(v3ObjectPick - v3Start) ) >= D3DXVec3Length( &(v3TerrainPick - v3Start) ) )

  00290	f3 0f 10 8d 7c
	ff ff ff	 movss	 xmm1, DWORD PTR tv562[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00298	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 527  : 		if ( D3DXVec3Length( &(v3ObjectPick - v3Start) ) >= D3DXVec3Length( &(v3TerrainPick - v3Start) ) )

  0029c	0f 2f c8	 comiss	 xmm1, xmm0
  0029f	72 13		 jb	 SHORT $LN9@GetPicking

; 528  : 			*v3IntersectPt = v3TerrainPick;

  002a1	f3 0f 7e 45 e4	 movq	 xmm0, QWORD PTR _v3TerrainPick$[ebp]
  002a6	8b 45 ec	 mov	 eax, DWORD PTR _v3TerrainPick$[ebp+8]
  002a9	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  002ad	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 545  : }

  002b0	b0 01		 mov	 al, 1
  002b2	eb 2c		 jmp	 SHORT $LN1@GetPicking
$LN9@GetPicking:
  002b4	f3 0f 7e 85 74
	ff ff ff	 movq	 xmm0, QWORD PTR _v3ObjectPick$1$[ebp]
  002bc	b0 01		 mov	 al, 1
  002be	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  002c2	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  002c5	eb 19		 jmp	 SHORT $LN1@GetPicking
$LN11@GetPicking:

; 529  : 		else
; 530  : 			*v3IntersectPt = v3ObjectPick;
; 531  : 		return true;
; 532  : 	}
; 533  : 	else if (bObjectPick)
; 534  : 	{
; 535  : 		*v3IntersectPt = v3ObjectPick;
; 536  : 		return true;
; 537  : 	}
; 538  : 	else if (bTerrainPick)

  002c7	84 db		 test	 bl, bl
  002c9	74 13		 je	 SHORT $LN13@GetPicking

; 539  : 	{
; 540  : 		*v3IntersectPt = v3TerrainPick;

  002cb	f3 0f 7e 45 e4	 movq	 xmm0, QWORD PTR _v3TerrainPick$[ebp]
  002d0	8b 45 ec	 mov	 eax, DWORD PTR _v3TerrainPick$[ebp+8]
  002d3	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  002d7	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 541  : 		return true;

  002da	b0 01		 mov	 al, 1
  002dc	eb 02		 jmp	 SHORT $LN1@GetPicking
$LN13@GetPicking:

; 542  : 	}
; 543  : 
; 544  : 	return false;

  002de	32 c0		 xor	 al, al
$LN1@GetPicking:

; 545  : }

  002e0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002ea	59		 pop	 ecx
  002eb	5f		 pop	 edi
  002ec	5e		 pop	 esi
  002ed	5b		 pop	 ebx
  002ee	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002f1	33 cd		 xor	 ecx, ebp
  002f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f8	8b e5		 mov	 esp, ebp
  002fa	5d		 pop	 ebp
  002fb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z$0:
  00000	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _r$2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetPickingPoint@@@@UAE@XZ ; RangeTester<FGetPickingPoint>::~RangeTester<FGetPickingPoint>
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 64 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-156]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetPickingPointWithRay@CMapOutdoor@@QAE_NABVCRay@@PAUD3DXVECTOR3@@@Z ENDP ; CMapOutdoor::GetPickingPointWithRay
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?IsWireframe@CMapOutdoor@@QAE_NXZ
_TEXT	SEGMENT
?IsWireframe@CMapOutdoor@@QAE_NXZ PROC			; CMapOutdoor::IsWireframe, COMDAT
; _this$ = ecx

; 349  : 	return m_bDrawWireFrame;

  00000	8a 81 30 01 00
	00		 mov	 al, BYTE PTR [ecx+304]

; 350  : }

  00006	c3		 ret	 0
?IsWireframe@CMapOutdoor@@QAE_NXZ ENDP			; CMapOutdoor::IsWireframe
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetWireframe@CMapOutdoor@@QAEX_N@Z
_TEXT	SEGMENT
_bWireFrame$ = 8					; size = 1
?SetWireframe@CMapOutdoor@@QAEX_N@Z PROC		; CMapOutdoor::SetWireframe, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 344  : 	m_bDrawWireFrame = bWireFrame;

  00003	8a 45 08	 mov	 al, BYTE PTR _bWireFrame$[ebp]
  00006	88 81 30 01 00
	00		 mov	 BYTE PTR [ecx+304], al

; 345  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetWireframe@CMapOutdoor@@QAEX_N@Z ENDP		; CMapOutdoor::SetWireframe
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?DisableMarkedArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?DisableMarkedArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::DisableMarkedArea, COMDAT
; _this$ = ecx

; 1536 : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1537 : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00002	8d 71 40	 lea	 esi, DWORD PTR [ecx+64]
  00005	bf 09 00 00 00	 mov	 edi, 9
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@DisableMar:

; 1538 : 	{
; 1539 : 		if (!m_pTerrain[i])

  00010	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00012	85 c9		 test	 ecx, ecx
  00014	74 05		 je	 SHORT $LN2@DisableMar

; 1540 : 			continue;
; 1541 : 
; 1542 : 		m_pTerrain[i]->DeallocateMarkedSplats();

  00016	e8 00 00 00 00	 call	 ?DeallocateMarkedSplats@CTerrain@@QAEXXZ ; CTerrain::DeallocateMarkedSplats
$LN2@DisableMar:

; 1537 : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0001b	83 c6 04	 add	 esi, 4
  0001e	83 ef 01	 sub	 edi, 1
  00021	75 ed		 jne	 SHORT $LL4@DisableMar

; 1543 : 	}
; 1544 : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	c3		 ret	 0
?DisableMarkedArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::DisableMarkedArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?VisibleMarkedArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
__Loc$4 = -152						; size = 12
__Loc$5 = -140						; size = 12
__Loc$6 = -128						; size = 12
$T7 = -116						; size = 8
$T8 = -108						; size = 8
_kSet_iProcessedMapIndex$ = -100			; size = 8
_byTerrainNum$9 = -92					; size = 1
_ixCell$1$ = -88					; size = 4
_ixTerrain$1$ = -84					; size = 4
_iyCell$1$ = -80					; size = 4
_ix1Cell$10 = -76					; size = 4
_ixLocalCell$1$ = -72					; size = 4
_byTerrainNum$11 = -72					; size = 1
_this$1$ = -68						; size = 4
_iy2Cell$12 = -64					; size = 4
_iy1Cell$13 = -60					; size = 4
_wy2TerrainNum$14 = -56					; size = 2
_wx2TerrainNum$15 = -52					; size = 2
_wy1TerrainNum$16 = -48					; size = 2
_wx1TerrainNum$17 = -44					; size = 2
_byx2SubCell$18 = -40					; size = 1
_byy2SubCell$19 = -39					; size = 1
_byx1SubCell$20 = -38					; size = 1
_byy1SubCell$21 = -37					; size = 1
_pbyBuf$1$ = -36					; size = 4
_pTerrain$22 = -36					; size = 4
_pTerrain$23 = -36					; size = 4
__Myhead$24 = -32					; size = 4
__Myhead$25 = -32					; size = 4
_iTerrainNum$26 = -28					; size = 4
_kMap_pbyMarkBuf$ = -24					; size = 8
__Pnode$27 = -16					; size = 4
__Pnode$28 = -16					; size = 4
_ix2Cell$29 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?VisibleMarkedArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::VisibleMarkedArea, COMDAT
; _this$ = ecx

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d bc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00030	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00032	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _kMap_pbyMarkBuf$[ebp], 0
  00039	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _kMap_pbyMarkBuf$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00040	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00045	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00047	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$28[ebp]
  0004a	50		 push	 eax
  0004b	56		 push	 esi
  0004c	89 75 f0	 mov	 DWORD PTR __Pnode$28[ebp], esi
  0004f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00054	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$28[ebp]
  00057	50		 push	 eax
  00058	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005b	51		 push	 ecx
  0005c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00061	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$28[ebp]
  00064	50		 push	 eax
  00065	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  0006e	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00074	89 75 e8	 mov	 DWORD PTR _kMap_pbyMarkBuf$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00077	6a 14		 push	 20			; 00000014H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1456 : 	std::map<int, BYTE*> kMap_pbyMarkBuf;

  00079	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00080	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _kSet_iProcessedMapIndex$[ebp], 0
  00087	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _kSet_iProcessedMapIndex$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00093	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00095	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$27[ebp]
  00098	50		 push	 eax
  00099	56		 push	 esi
  0009a	89 75 f0	 mov	 DWORD PTR __Pnode$27[ebp], esi
  0009d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000a2	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$27[ebp]
  000a5	50		 push	 eax
  000a6	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000af	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$27[ebp]
  000b2	50		 push	 eax
  000b3	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  000bc	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  000c2	83 c4 38	 add	 esp, 56			; 00000038H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000c5	89 75 9c	 mov	 DWORD PTR _kSet_iProcessedMapIndex$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  000c8	8b 83 b8 09 00
	00		 mov	 eax, DWORD PTR [ebx+2488]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1457 : 	std::set<int> kSet_iProcessedMapIndex;

  000ce	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000d2	8b 30		 mov	 esi, DWORD PTR [eax]
  000d4	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1460 : 	for (; itorRect != m_rkList_kGuildArea.end(); ++itorRect)

  000d6	0f 84 53 03 00
	00		 je	 $LN421@VisibleMar
  000dc	0f 1f 40 00	 npad	 4
$LL4@VisibleMar:
  000e0	66 0f 6e 46 0c	 movd	 xmm0, DWORD PTR [esi+12]

; 1461 : 	{
; 1462 : 		const RECT & rkRect = *itorRect;
; 1463 : 
; 1464 : 		int ix1Cell;
; 1465 : 		int iy1Cell;
; 1466 : 		BYTE byx1SubCell;
; 1467 : 		BYTE byy1SubCell;
; 1468 : 		WORD wx1TerrainNum;
; 1469 : 		WORD wy1TerrainNum;
; 1470 : 
; 1471 : 		int ix2Cell;
; 1472 : 		int iy2Cell;
; 1473 : 		BYTE byx2SubCell;
; 1474 : 		BYTE byy2SubCell;
; 1475 : 		WORD wx2TerrainNum;
; 1476 : 		WORD wy2TerrainNum;
; 1477 : 
; 1478 : 		ConvertToMapCoords(float(rkRect.left), float(rkRect.top), &ix1Cell, &iy1Cell, &byx1SubCell, &byy1SubCell, &wx1TerrainNum, &wy1TerrainNum);

  000e5	8d 45 d0	 lea	 eax, DWORD PTR _wy1TerrainNum$16[ebp]
  000e8	50		 push	 eax
  000e9	8d 45 d4	 lea	 eax, DWORD PTR _wx1TerrainNum$17[ebp]
  000ec	8b cb		 mov	 ecx, ebx
  000ee	50		 push	 eax
  000ef	8d 45 db	 lea	 eax, DWORD PTR _byy1SubCell$21[ebp]
  000f2	50		 push	 eax
  000f3	8d 45 da	 lea	 eax, DWORD PTR _byx1SubCell$20[ebp]
  000f6	50		 push	 eax
  000f7	8d 45 c4	 lea	 eax, DWORD PTR _iy1Cell$13[ebp]
  000fa	50		 push	 eax
  000fb	8d 45 b4	 lea	 eax, DWORD PTR _ix1Cell$10[ebp]
  000fe	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00101	50		 push	 eax
  00102	83 ec 08	 sub	 esp, 8
  00105	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0010b	66 0f 6e 46 08	 movd	 xmm0, DWORD PTR [esi+8]
  00110	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00113	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00118	e8 00 00 00 00	 call	 ?ConvertToMapCoords@CMapOutdoor@@IAEXMMPAH0PAE1PAG2@Z ; CMapOutdoor::ConvertToMapCoords
  0011d	66 0f 6e 46 14	 movd	 xmm0, DWORD PTR [esi+20]

; 1479 : 		ConvertToMapCoords(float(rkRect.right), float(rkRect.bottom), &ix2Cell, &iy2Cell, &byx2SubCell, &byy2SubCell, &wx2TerrainNum, &wy2TerrainNum);

  00122	8d 45 c8	 lea	 eax, DWORD PTR _wy2TerrainNum$14[ebp]
  00125	50		 push	 eax
  00126	8d 45 cc	 lea	 eax, DWORD PTR _wx2TerrainNum$15[ebp]
  00129	8b cb		 mov	 ecx, ebx
  0012b	50		 push	 eax
  0012c	8d 45 d9	 lea	 eax, DWORD PTR _byy2SubCell$19[ebp]
  0012f	50		 push	 eax
  00130	8d 45 d8	 lea	 eax, DWORD PTR _byx2SubCell$18[ebp]
  00133	50		 push	 eax
  00134	8d 45 c0	 lea	 eax, DWORD PTR _iy2Cell$12[ebp]
  00137	50		 push	 eax
  00138	8d 45 f0	 lea	 eax, DWORD PTR _ix2Cell$29[ebp]
  0013b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0013e	50		 push	 eax
  0013f	83 ec 08	 sub	 esp, 8
  00142	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00148	66 0f 6e 46 10	 movd	 xmm0, DWORD PTR [esi+16]
  0014d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00150	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00155	e8 00 00 00 00	 call	 ?ConvertToMapCoords@CMapOutdoor@@IAEXMMPAH0PAE1PAG2@Z ; CMapOutdoor::ConvertToMapCoords

; 1480 : 
; 1481 : 		ix1Cell = ix1Cell + wx1TerrainNum*CTerrain::ATTRMAP_XSIZE;
; 1482 : 		iy1Cell = iy1Cell + wy1TerrainNum*CTerrain::ATTRMAP_YSIZE;

  0015a	0f b7 45 d0	 movzx	 eax, WORD PTR _wy1TerrainNum$16[ebp]

; 1483 : 		ix2Cell = ix2Cell + wx2TerrainNum*CTerrain::ATTRMAP_XSIZE;

  0015e	8b 4d f0	 mov	 ecx, DWORD PTR _ix2Cell$29[ebp]
  00161	0f b7 7d d4	 movzx	 edi, WORD PTR _wx1TerrainNum$17[ebp]

; 1484 : 		iy2Cell = iy2Cell + wy2TerrainNum*CTerrain::ATTRMAP_YSIZE;

  00165	8b 55 c0	 mov	 edx, DWORD PTR _iy2Cell$12[ebp]
  00168	c1 e0 08	 shl	 eax, 8
  0016b	01 45 c4	 add	 DWORD PTR _iy1Cell$13[ebp], eax
  0016e	0f b7 45 cc	 movzx	 eax, WORD PTR _wx2TerrainNum$15[ebp]
  00172	c1 e0 08	 shl	 eax, 8
  00175	03 c8		 add	 ecx, eax
  00177	c1 e7 08	 shl	 edi, 8
  0017a	0f b7 45 c8	 movzx	 eax, WORD PTR _wy2TerrainNum$14[ebp]
  0017e	03 7d b4	 add	 edi, DWORD PTR _ix1Cell$10[ebp]
  00181	c1 e0 08	 shl	 eax, 8
  00184	03 d0		 add	 edx, eax
  00186	89 7d a8	 mov	 DWORD PTR _ixCell$1$[ebp], edi
  00189	89 7d b4	 mov	 DWORD PTR _ix1Cell$10[ebp], edi
  0018c	89 4d f0	 mov	 DWORD PTR _ix2Cell$29[ebp], ecx
  0018f	89 55 c0	 mov	 DWORD PTR _iy2Cell$12[ebp], edx

; 1485 : 
; 1486 : 		for (int ixCell = ix1Cell; ixCell <= ix2Cell; ++ixCell)

  00192	3b f9		 cmp	 edi, ecx
  00194	0f 8f 87 02 00
	00		 jg	 $LN2@VisibleMar
  0019a	8b c1		 mov	 eax, ecx
  0019c	0f 1f 40 00	 npad	 4
$LL7@VisibleMar:

; 1487 : 		for (int iyCell = iy1Cell; iyCell <= iy2Cell; ++iyCell)

  001a0	8b 4d c4	 mov	 ecx, DWORD PTR _iy1Cell$13[ebp]
  001a3	89 4d b0	 mov	 DWORD PTR _iyCell$1$[ebp], ecx
  001a6	3b ca		 cmp	 ecx, edx
  001a8	0f 8f 64 02 00
	00		 jg	 $LN5@VisibleMar
  001ae	8b c7		 mov	 eax, edi
  001b0	25 ff 00 00 80	 and	 eax, -2147483393	; 800000ffH
  001b5	79 07		 jns	 SHORT $LN425@VisibleMar
  001b7	48		 dec	 eax
  001b8	0d 00 ff ff ff	 or	 eax, -256		; ffffff00H
  001bd	40		 inc	 eax
$LN425@VisibleMar:
  001be	89 45 b8	 mov	 DWORD PTR _ixLocalCell$1$[ebp], eax
  001c1	8b c7		 mov	 eax, edi
  001c3	99		 cdq
  001c4	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  001ca	8d 3c 02	 lea	 edi, DWORD PTR [edx+eax]
  001cd	c1 ff 08	 sar	 edi, 8
  001d0	89 7d ac	 mov	 DWORD PTR _ixTerrain$1$[ebp], edi
$LL10@VisibleMar:

; 1488 : 		{
; 1489 : 			int ixLocalCell = ixCell % CTerrain::ATTRMAP_XSIZE;
; 1490 : 			int iyLocalCell = iyCell % CTerrain::ATTRMAP_YSIZE;

  001d3	8b d9		 mov	 ebx, ecx
  001d5	81 e3 ff 00 00
	80		 and	 ebx, -2147483393	; 800000ffH
  001db	79 08		 jns	 SHORT $LN426@VisibleMar
  001dd	4b		 dec	 ebx
  001de	81 cb 00 ff ff
	ff		 or	 ebx, -256		; ffffff00H
  001e4	43		 inc	 ebx
$LN426@VisibleMar:

; 1491 : 			int ixTerrain = ixCell / CTerrain::ATTRMAP_XSIZE;
; 1492 : 			int iyTerrain = iyCell / CTerrain::ATTRMAP_YSIZE;

  001e5	8b c1		 mov	 eax, ecx
  001e7	99		 cdq
  001e8	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  001ee	03 c2		 add	 eax, edx
  001f0	c1 f8 08	 sar	 eax, 8

; 1493 : 			int iTerrainNum = ixTerrain+iyTerrain*100;

  001f3	6b c8 64	 imul	 ecx, eax, 100
  001f6	03 f9		 add	 edi, ecx

; 1494 : 
; 1495 : 			BYTE byTerrainNum;
; 1496 : 			if (!GetTerrainNumFromCoord(ixTerrain, iyTerrain, &byTerrainNum))

  001f8	8d 4d a4	 lea	 ecx, DWORD PTR _byTerrainNum$9[ebp]
  001fb	51		 push	 ecx
  001fc	8b 4d bc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  001ff	50		 push	 eax
  00200	ff 75 ac	 push	 DWORD PTR _ixTerrain$1$[ebp]
  00203	89 7d e4	 mov	 DWORD PTR _iTerrainNum$26[ebp], edi
  00206	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  0020b	84 c0		 test	 al, al
  0020d	0f 84 e4 01 00
	00		 je	 $LN8@VisibleMar

; 1497 : 				continue;
; 1498 : 			CTerrain * pTerrain;
; 1499 : 			if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  00213	8b 4d bc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00216	8d 45 dc	 lea	 eax, DWORD PTR _pTerrain$23[ebp]
  00219	50		 push	 eax
  0021a	ff 75 a4	 push	 DWORD PTR _byTerrainNum$9[ebp]
  0021d	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00222	85 c0		 test	 eax, eax
  00224	0f 84 cd 01 00
	00		 je	 $LN8@VisibleMar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0022a	8d 45 e4	 lea	 eax, DWORD PTR _iTerrainNum$26[ebp]
  0022d	50		 push	 eax
  0022e	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR __Loc$4[ebp]
  00234	50		 push	 eax
  00235	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  00238	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::_Find_lower_bound<int>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0023d	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR __Loc$4[ebp+8]
  00243	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00247	75 0e		 jne	 SHORT $LN418@VisibleMar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00249	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0024c	7c 09		 jl	 SHORT $LN418@VisibleMar

; 232  :         return this->_Ptr == _Right._Ptr;

  0024e	39 45 e8	 cmp	 DWORD PTR _kMap_pbyMarkBuf$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1502 : 			if (kMap_pbyMarkBuf.end() == kMap_pbyMarkBuf.find(iTerrainNum))

  00251	0f 85 d9 00 00
	00		 jne	 $LN16@VisibleMar
$LN418@VisibleMar:

; 1503 : 			{
; 1504 : 				BYTE * pbyBuf = new BYTE [CTerrain::ATTRMAP_XSIZE*CTerrain::ATTRMAP_YSIZE];

  00257	68 00 00 01 00	 push	 65536			; 00010000H
  0025c	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 1505 : 				ZeroMemory(pbyBuf, CTerrain::ATTRMAP_XSIZE*CTerrain::ATTRMAP_YSIZE);

  00261	68 00 00 01 00	 push	 65536			; 00010000H
  00266	6a 00		 push	 0
  00268	50		 push	 eax
  00269	89 45 dc	 mov	 DWORD PTR _pbyBuf$1$[ebp], eax
  0026c	e8 00 00 00 00	 call	 _memset
  00271	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00274	8d 45 e4	 lea	 eax, DWORD PTR _iTerrainNum$26[ebp]
  00277	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  0027a	50		 push	 eax
  0027b	8d 45 80	 lea	 eax, DWORD PTR __Loc$6[ebp]
  0027e	50		 push	 eax
  0027f	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::_Find_lower_bound<int>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00284	8b 4d 88	 mov	 ecx, DWORD PTR __Loc$6[ebp+8]
  00287	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0028b	75 0c		 jne	 SHORT $LN131@VisibleMar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0028d	8b 45 e4	 mov	 eax, DWORD PTR _iTerrainNum$26[ebp]
  00290	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00293	0f 8d 8e 00 00
	00		 jge	 $LN130@VisibleMar
$LN131@VisibleMar:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00299	81 7d ec aa aa
	aa 0a		 cmp	 DWORD PTR _kMap_pbyMarkBuf$[ebp+4], 178956970 ; 0aaaaaaaH
  002a0	0f 84 ee 02 00
	00		 je	 $LN386@VisibleMar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  002a6	8b 45 e8	 mov	 eax, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  002a9	89 45 e0	 mov	 DWORD PTR __Myhead$25[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  002ac	8d 45 e8	 lea	 eax, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  002af	89 45 94	 mov	 DWORD PTR $T8[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  002b2	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  002b4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  002b8	c7 45 98 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  002bf	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  002c4	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  002c6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

  002ca	8d 45 e4	 lea	 eax, DWORD PTR _iTerrainNum$26[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  002cd	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  002d0	51		 push	 ecx
  002d1	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

  002d3	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  002d5	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  002dc	52		 push	 edx
  002dd	e8 00 00 00 00	 call	 ??$?0ABH$$Z$$V@?$pair@$$CBHPAE@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$V@1@@Z ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><int const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  002e2	8d 45 e0	 lea	 eax, DWORD PTR __Myhead$25[ebp]
  002e5	50		 push	 eax
  002e6	57		 push	 edi
  002e7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  002ec	8d 45 e0	 lea	 eax, DWORD PTR __Myhead$25[ebp]
  002ef	50		 push	 eax
  002f0	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  002f3	50		 push	 eax
  002f4	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  002f9	8d 45 e0	 lea	 eax, DWORD PTR __Myhead$25[ebp]
  002fc	50		 push	 eax
  002fd	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00300	50		 push	 eax
  00301	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>
  00306	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  00309	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0030f	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00312	c7 45 98 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00319	57		 push	 edi
  0031a	ff 75 84	 push	 DWORD PTR __Loc$6[ebp+4]
  0031d	ff 75 80	 push	 DWORD PTR __Loc$6[ebp]
  00320	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Insert_node
  00325	8b c8		 mov	 ecx, eax
$LN130@VisibleMar:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1506 : 				kMap_pbyMarkBuf[iTerrainNum] = pbyBuf;

  00327	8b 45 dc	 mov	 eax, DWORD PTR _pbyBuf$1$[ebp]
  0032a	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0032d	8b 7d e4	 mov	 edi, DWORD PTR _iTerrainNum$26[ebp]
$LN16@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00330	8d 45 e4	 lea	 eax, DWORD PTR _iTerrainNum$26[ebp]
  00333	50		 push	 eax
  00334	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR __Loc$5[ebp]
  0033a	50		 push	 eax
  0033b	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  0033e	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@ABH@Z ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::_Find_lower_bound<int>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00343	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR __Loc$5[ebp+8]
  00349	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0034d	75 09		 jne	 SHORT $LN199@VisibleMar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0034f	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00352	0f 8d 92 00 00
	00		 jge	 $LN198@VisibleMar
$LN199@VisibleMar:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00358	81 7d ec aa aa
	aa 0a		 cmp	 DWORD PTR _kMap_pbyMarkBuf$[ebp+4], 178956970 ; 0aaaaaaaH
  0035f	0f 84 2f 02 00
	00		 je	 $LN386@VisibleMar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00365	8b 45 e8	 mov	 eax, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  00368	89 45 e0	 mov	 DWORD PTR __Myhead$24[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0036b	8d 45 e8	 lea	 eax, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  0036e	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00371	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00373	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00377	c7 45 90 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0037e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00383	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  00385	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

  00389	8d 45 e4	 lea	 eax, DWORD PTR _iTerrainNum$26[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0038c	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0038f	51		 push	 ecx
  00390	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

  00392	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00394	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  0039b	52		 push	 edx
  0039c	e8 00 00 00 00	 call	 ??$?0ABH$$Z$$V@?$pair@$$CBHPAE@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$V@1@@Z ; std::pair<int const ,unsigned char *>::pair<int const ,unsigned char *><int const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  003a1	8d 45 e0	 lea	 eax, DWORD PTR __Myhead$24[ebp]
  003a4	50		 push	 eax
  003a5	57		 push	 edi
  003a6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  003ab	8d 45 e0	 lea	 eax, DWORD PTR __Myhead$24[ebp]
  003ae	50		 push	 eax
  003af	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  003b2	50		 push	 eax
  003b3	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  003b8	8d 45 e0	 lea	 eax, DWORD PTR __Myhead$24[ebp]
  003bb	50		 push	 eax
  003bc	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  003bf	50		 push	 eax
  003c0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> *,std::_Tree_node<std::pair<int const ,unsigned char *>,void *> * &>
  003c5	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  003c8	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  003ce	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  003d1	c7 45 90 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  003d8	57		 push	 edi
  003d9	ff b5 78 ff ff
	ff		 push	 DWORD PTR __Loc$5[ebp+4]
  003df	ff b5 74 ff ff
	ff		 push	 DWORD PTR __Loc$5[ebp]
  003e5	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Insert_node
$LN198@VisibleMar:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1510 : 			pbyBuf[ixLocalCell+iyLocalCell*CTerrain::ATTRMAP_XSIZE] = 0xff;

  003ea	c1 e3 08	 shl	 ebx, 8
  003ed	03 58 14	 add	 ebx, DWORD PTR [eax+20]
  003f0	8b 45 b8	 mov	 eax, DWORD PTR _ixLocalCell$1$[ebp]
  003f3	c6 04 03 ff	 mov	 BYTE PTR [ebx+eax], 255	; 000000ffH
$LN8@VisibleMar:

; 1487 : 		for (int iyCell = iy1Cell; iyCell <= iy2Cell; ++iyCell)

  003f7	8b 4d b0	 mov	 ecx, DWORD PTR _iyCell$1$[ebp]
  003fa	8b 55 c0	 mov	 edx, DWORD PTR _iy2Cell$12[ebp]
  003fd	41		 inc	 ecx
  003fe	8b 7d ac	 mov	 edi, DWORD PTR _ixTerrain$1$[ebp]
  00401	89 4d b0	 mov	 DWORD PTR _iyCell$1$[ebp], ecx
  00404	3b ca		 cmp	 ecx, edx
  00406	0f 8e c7 fd ff
	ff		 jle	 $LL10@VisibleMar
  0040c	8b 7d a8	 mov	 edi, DWORD PTR _ixCell$1$[ebp]
  0040f	8b 45 f0	 mov	 eax, DWORD PTR _ix2Cell$29[ebp]
$LN5@VisibleMar:

; 1485 : 
; 1486 : 		for (int ixCell = ix1Cell; ixCell <= ix2Cell; ++ixCell)

  00412	47		 inc	 edi
  00413	89 7d a8	 mov	 DWORD PTR _ixCell$1$[ebp], edi
  00416	3b f8		 cmp	 edi, eax
  00418	0f 8e 82 fd ff
	ff		 jle	 $LL7@VisibleMar
  0041e	8b 5d bc	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN2@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00421	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00423	3b b3 b8 09 00
	00		 cmp	 esi, DWORD PTR [ebx+2488]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1460 : 	for (; itorRect != m_rkList_kGuildArea.end(); ++itorRect)

  00429	0f 85 b1 fc ff
	ff		 jne	 $LL4@VisibleMar
$LN421@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0042f	8b 7d e8	 mov	 edi, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  00432	8b 37		 mov	 esi, DWORD PTR [edi]

; 232  :         return this->_Ptr == _Right._Ptr;

  00434	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1515 : 	for (; itorTerrain != kMap_pbyMarkBuf.end(); ++itorTerrain)

  00436	0f 84 98 00 00
	00		 je	 $LN12@VisibleMar
  0043c	0f 1f 40 00	 npad	 4
$LL280@VisibleMar:

; 1516 : 	{
; 1517 : 		int iTerrainNum = itorTerrain->first;

  00440	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 1518 : 		int ixTerrain = iTerrainNum%100;
; 1519 : 		int iyTerrain = iTerrainNum/100;

  00443	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00448	f7 e9		 imul	 ecx
  0044a	c1 fa 05	 sar	 edx, 5
  0044d	8b c2		 mov	 eax, edx
  0044f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00452	03 c2		 add	 eax, edx

; 1520 : 		BYTE * pbyBuf = itorTerrain->second;
; 1521 : 
; 1522 : 		BYTE byTerrainNum;
; 1523 : 		if (!GetTerrainNumFromCoord(ixTerrain, iyTerrain, &byTerrainNum))

  00454	8d 55 b8	 lea	 edx, DWORD PTR _byTerrainNum$11[ebp]
  00457	0f b7 c0	 movzx	 eax, ax
  0045a	52		 push	 edx
  0045b	50		 push	 eax
  0045c	6b c0 64	 imul	 eax, eax, 100
  0045f	2b c8		 sub	 ecx, eax
  00461	51		 push	 ecx
  00462	8b cb		 mov	 ecx, ebx
  00464	e8 00 00 00 00	 call	 ?GetTerrainNumFromCoord@CMapOutdoor@@QAE_NGGPAE@Z ; CMapOutdoor::GetTerrainNumFromCoord
  00469	84 c0		 test	 al, al
  0046b	74 20		 je	 SHORT $LN11@VisibleMar

; 1524 : 			continue;
; 1525 : 		CTerrain * pTerrain;
; 1526 : 		if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  0046d	8d 45 dc	 lea	 eax, DWORD PTR _pTerrain$22[ebp]
  00470	8b cb		 mov	 ecx, ebx
  00472	50		 push	 eax
  00473	ff 75 b8	 push	 DWORD PTR _byTerrainNum$11[ebp]
  00476	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  0047b	85 c0		 test	 eax, eax
  0047d	74 0e		 je	 SHORT $LN11@VisibleMar

; 1527 : 			continue;
; 1528 : 
; 1529 : 		pTerrain->AllocateMarkedSplats(pbyBuf);

  0047f	ff 76 14	 push	 DWORD PTR [esi+20]
  00482	8b 4d dc	 mov	 ecx, DWORD PTR _pTerrain$22[ebp]
  00485	e8 00 00 00 00	 call	 ?AllocateMarkedSplats@CTerrain@@QAEXPAE@Z ; CTerrain::AllocateMarkedSplats
  0048a	8b 7d e8	 mov	 edi, DWORD PTR _kMap_pbyMarkBuf$[ebp]
$LN11@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0048d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00490	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00494	74 1e		 je	 SHORT $LN279@VisibleMar

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00496	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00499	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0049d	75 11		 jne	 SHORT $LN422@VisibleMar
  0049f	90		 npad	 1
$LL277@VisibleMar:
  004a0	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  004a3	75 0b		 jne	 SHORT $LN422@VisibleMar

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  004a5	8b f0		 mov	 esi, eax
  004a7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  004aa	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  004ae	74 f0		 je	 SHORT $LL277@VisibleMar
$LN422@VisibleMar:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  004b0	8b f0		 mov	 esi, eax

; 59   :         } else {

  004b2	eb 18		 jmp	 SHORT $LN284@VisibleMar
$LN279@VisibleMar:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  004b4	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  004b6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  004b8	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  004bc	75 0e		 jne	 SHORT $LN284@VisibleMar
  004be	66 90		 npad	 2
$LL283@VisibleMar:
  004c0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  004c2	8b f1		 mov	 esi, ecx
  004c4	8b c8		 mov	 ecx, eax
  004c6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  004ca	74 f4		 je	 SHORT $LL283@VisibleMar
$LN284@VisibleMar:

; 232  :         return this->_Ptr == _Right._Ptr;

  004cc	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1515 : 	for (; itorTerrain != kMap_pbyMarkBuf.end(); ++itorTerrain)

  004ce	0f 85 6c ff ff
	ff		 jne	 $LL280@VisibleMar
$LN12@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  004d4	8b 37		 mov	 esi, DWORD PTR [edi]

; 232  :         return this->_Ptr == _Right._Ptr;

  004d6	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 127  : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  004d8	74 59		 je	 SHORT $LN312@VisibleMar
  004da	66 0f 1f 44 00
	00		 npad	 6
$LL331@VisibleMar:

; 129  : 		delete i->second;

  004e0	6a 01		 push	 1
  004e2	ff 76 14	 push	 DWORD PTR [esi+20]
  004e5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  004ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 129  : 		delete i->second;

  004ed	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  004f0	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  004f4	74 1e		 je	 SHORT $LN330@VisibleMar

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  004f6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  004f9	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  004fd	75 11		 jne	 SHORT $LN423@VisibleMar
  004ff	90		 npad	 1
$LL328@VisibleMar:
  00500	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00503	75 0b		 jne	 SHORT $LN423@VisibleMar

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00505	8b f0		 mov	 esi, eax
  00507	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0050a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0050e	74 f0		 je	 SHORT $LL328@VisibleMar
$LN423@VisibleMar:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00510	8b f0		 mov	 esi, eax

; 59   :         } else {

  00512	eb 18		 jmp	 SHORT $LN335@VisibleMar
$LN330@VisibleMar:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00514	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00516	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00518	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0051c	75 0e		 jne	 SHORT $LN335@VisibleMar
  0051e	66 90		 npad	 2
$LL334@VisibleMar:
  00520	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00522	8b f1		 mov	 esi, ecx
  00524	8b c8		 mov	 ecx, eax
  00526	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0052a	74 f4		 je	 SHORT $LL334@VisibleMar
$LN335@VisibleMar:

; 232  :         return this->_Ptr == _Right._Ptr;

  0052c	8b 7d e8	 mov	 edi, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  0052f	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 127  : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00531	75 ad		 jne	 SHORT $LL331@VisibleMar
$LN312@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00533	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00536	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0053a	75 27		 jne	 SHORT $LN359@VisibleMar
  0053c	0f 1f 40 00	 npad	 4
$LL358@VisibleMar:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00540	ff 76 08	 push	 DWORD PTR [esi+8]
  00543	8d 45 e8	 lea	 eax, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  00546	50		 push	 eax
  00547	8b c8		 mov	 ecx, eax
  00549	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHPAE@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,unsigned char *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0054e	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00550	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00552	6a 18		 push	 24			; 00000018H
  00554	50		 push	 eax
  00555	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0055a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0055d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00561	74 dd		 je	 SHORT $LL358@VisibleMar
$LN359@VisibleMar:

; 1449 :         _Head->_Parent  = _Head;

  00563	89 7f 04	 mov	 DWORD PTR [edi+4], edi
  00566	8d 4d 9c	 lea	 ecx, DWORD PTR _kSet_iProcessedMapIndex$[ebp]

; 1450 :         _Head->_Left    = _Head;

  00569	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  0056b	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  0056e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _kMap_pbyMarkBuf$[ebp+4], 0
  00575	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0057a	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  0057d	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >::~_Tree<std::_Tmap_traits<int,unsigned char *,std::less<int>,std::allocator<std::pair<int const ,unsigned char *> >,0> >
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1533 : }

  00582	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00585	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0058c	59		 pop	 ecx
  0058d	5f		 pop	 edi
  0058e	5e		 pop	 esi
  0058f	5b		 pop	 ebx
  00590	8b e5		 mov	 esp, ebp
  00592	5d		 pop	 ebp
  00593	c3		 ret	 0
$LN386@VisibleMar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  00594	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN427@VisibleMar:
  00599	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _kMap_pbyMarkBuf$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@HPAEU?$less@H@std@@V?$allocator@U?$pair@$$CBHPAE@std@@@2@@std@@QAE@XZ
__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$1:
  00008	8d 4d 9c	 lea	 ecx, DWORD PTR _kSet_iProcessedMapIndex$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QAE@XZ
__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$6:
  00010	8d 4d 94	 lea	 ecx, DWORD PTR $T8[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
__unwindfunclet$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ$11:
  00018	8d 4d 8c	 lea	 ecx, DWORD PTR $T7[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBHPAE@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,unsigned char *>,void *> > >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 8a 64 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-156]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?VisibleMarkedArea@CMapOutdoor@@QAEXXZ
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?VisibleMarkedArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::VisibleMarkedArea
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z
_TEXT	SEGMENT
__Op$2 = -48						; size = 8
__Insert_after$3 = -44					; size = 4
__Insert_before$4 = -40					; size = 4
__Where$1$ = -36					; size = 4
_rect$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_isx$ = 8						; size = 4
_isy$ = 12						; size = 4
_iex$ = 16						; size = 4
_iey$ = 20						; size = 4
?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z PROC		; CMapOutdoor::RegisterGuildArea, COMDAT
; _this$ = ecx

; 1445 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1014 :         if (_Mysize == max_size()) {

  0002a	81 b9 bc 09 00
	00 aa aa aa 0a	 cmp	 DWORD PTR [ecx+2492], 178956970 ; 0aaaaaaaH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1451 : 	m_rkList_kGuildArea.push_back(rect);

  00034	8d b1 b8 09 00
	00		 lea	 esi, DWORD PTR [ecx+2488]
  0003a	8b 45 08	 mov	 eax, DWORD PTR _isx$[ebp]
  0003d	89 45 e0	 mov	 DWORD PTR _rect$[ebp], eax
  00040	8b 45 0c	 mov	 eax, DWORD PTR _isy$[ebp]
  00043	89 45 e4	 mov	 DWORD PTR _rect$[ebp+4], eax
  00046	8b 45 10	 mov	 eax, DWORD PTR _iex$[ebp]
  00049	89 45 e8	 mov	 DWORD PTR _rect$[ebp+8], eax
  0004c	8b 45 14	 mov	 eax, DWORD PTR _iey$[ebp]
  0004f	89 45 ec	 mov	 DWORD PTR _rect$[ebp+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00052	8b 06		 mov	 eax, DWORD PTR [esi]
  00054	89 45 dc	 mov	 DWORD PTR __Where$1$[ebp], eax

; 1014 :         if (_Mysize == max_size()) {

  00057	74 70		 je	 SHORT $LN43@RegisterGu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00059	89 75 d0	 mov	 DWORD PTR __Op$2[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005c	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00065	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006c	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00071	0f 10 45 e0	 movups	 xmm0, XMMWORD PTR _rect$[ebp]

; 1048 :         _Ptr = _Al.allocate(1);

  00075	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1020 :         return _Op._Transfer_before(_Where);

  00077	8b 45 dc	 mov	 eax, DWORD PTR __Where$1$[ebp]
  0007a	89 45 d8	 mov	 DWORD PTR __Insert_before$4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0007d	0f 11 47 08	 movups	 XMMWORD PTR [edi+8], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1019 :         ++_Mysize;

  00081	ff 46 04	 inc	 DWORD PTR [esi+4]

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  00084	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00087	8d 45 d8	 lea	 eax, DWORD PTR __Insert_before$4[ebp]
  0008a	50		 push	 eax
  0008b	57		 push	 edi
  0008c	89 75 d4	 mov	 DWORD PTR __Insert_after$3[ebp], esi
  0008f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  00094	8d 45 d4	 lea	 eax, DWORD PTR __Insert_after$3[ebp]
  00097	50		 push	 eax
  00098	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  000a1	8b 45 dc	 mov	 eax, DWORD PTR __Where$1$[ebp]
  000a4	83 c4 14	 add	 esp, 20			; 00000014H
  000a7	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 606  :         _Insert_after->_Next  = _Result;

  000aa	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1452 : }

  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bc	33 cd		 xor	 ecx, ebp
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 10 00	 ret	 16			; 00000010H
$LN43@RegisterGu:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1015 :             _Xlength_error("list too long");

  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  000ce	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN41@RegisterGu:
  000d3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z$1:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UtagRECT@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<tagRECT,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterGuildArea@CMapOutdoor@@QAEXHHHH@Z ENDP		; CMapOutdoor::RegisterGuildArea
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?ClearGuildArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?ClearGuildArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::ClearGuildArea, COMDAT
; _this$ = ecx

; 1440 : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  00003	8b 97 b8 09 00
	00		 mov	 edx, DWORD PTR [edi+2488]

; 324  :         _Head->_Prev->_Next = nullptr;

  00009	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00012	8b 02		 mov	 eax, DWORD PTR [edx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00014	85 c0		 test	 eax, eax
  00016	74 1c		 je	 SHORT $LN7@ClearGuild
  00018	56		 push	 esi
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@ClearGuild:

; 328  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00022	6a 18		 push	 24			; 00000018H
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL8@ClearGuild
  00033	5e		 pop	 esi
$LN7@ClearGuild:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00034	8b 87 b8 09 00
	00		 mov	 eax, DWORD PTR [edi+2488]
  0003a	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0003c	8b 87 b8 09 00
	00		 mov	 eax, DWORD PTR [edi+2488]
  00042	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00045	c7 87 bc 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2492], 0
  0004f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 1442 : }

  00050	c3		 ret	 0
?ClearGuildArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::ClearGuildArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetEnvironmentLensFlare@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
__New_ptr$1 = -4					; size = 4
?SetEnvironmentLensFlare@CMapOutdoor@@QAEXXZ PROC	; CMapOutdoor::SetEnvironmentLensFlare, COMDAT
; _this$ = ecx

; 326  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 327  : 	if (!mc_pEnvironmentData)

  00009	8b 57 3c	 mov	 edx, DWORD PTR [edi+60]
  0000c	85 d2		 test	 edx, edx
  0000e	0f 84 f5 00 00
	00		 je	 $LN3@SetEnviron

; 328  : 		return;
; 329  : 
; 330  : 	m_LensFlare.CharacterizeFlare(mc_pEnvironmentData->bLensFlareEnable == 1 ? true : false,

  00014	83 ba 78 02 00
	00 01		 cmp	 DWORD PTR [edx+632], 1
  0001b	8d 82 64 02 00
	00		 lea	 eax, DWORD PTR [edx+612]
  00021	f3 0f 10 82 74
	02 00 00	 movss	 xmm0, DWORD PTR [edx+628]
  00029	8d 9f b8 06 00
	00		 lea	 ebx, DWORD PTR [edi+1720]
  0002f	50		 push	 eax
  00030	51		 push	 ecx
  00031	0f 94 c0	 sete	 al
  00034	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00039	83 ba 60 02 00
	00 01		 cmp	 DWORD PTR [edx+608], 1
  00040	8b cb		 mov	 ecx, ebx
  00042	0f b6 c0	 movzx	 eax, al
  00045	50		 push	 eax
  00046	0f 94 c0	 sete	 al
  00049	0f b6 c0	 movzx	 eax, al
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?CharacterizeFlare@CLensFlare@@QAEX_N0MABUD3DXCOLOR@@@Z ; CLensFlare::CharacterizeFlare

; 335  : 	m_LensFlare.Initialize("d:/ymir work/environment");

  00052	83 ec 18	 sub	 esp, 24			; 00000018H
  00055	8b f4		 mov	 esi, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00059	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00060	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00067	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0006f	c7 46 10 18 00
	00 00		 mov	 DWORD PTR [esi+16], 24	; 00000018H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00076	c7 46 14 1f 00
	00 00		 mov	 DWORD PTR [esi+20], 31	; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0007d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BJ@GGJMMCMN@d?3?1ymir?5work?1environment@

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00084	89 45 fc	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00087	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0008a	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BJ@GGJMMCMN@d?3?1ymir?5work?1environment@+16
  00092	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00097	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0009b	8d 45 fc	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  0009e	50		 push	 eax
  0009f	56		 push	 esi
  000a0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 335  : 	m_LensFlare.Initialize("d:/ymir work/environment");

  000a8	8b cb		 mov	 ecx, ebx
  000aa	e8 00 00 00 00	 call	 ?Initialize@CLensFlare@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CLensFlare::Initialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  000af	8b 77 3c	 mov	 esi, DWORD PTR [edi+60]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 337  : 	if (!mc_pEnvironmentData->strMainFlareTextureFileName.empty())

  000b2	83 be 8c 02 00
	00 00		 cmp	 DWORD PTR [esi+652], 0
  000b9	74 4e		 je	 SHORT $LN3@SetEnviron

; 338  : 		m_LensFlare.SetMainFlare(mc_pEnvironmentData->strMainFlareTextureFileName.c_str(),

  000bb	f3 0f 10 86 94
	02 00 00	 movss	 xmm0, DWORD PTR [esi+660]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  000c3	81 c6 7c 02 00
	00		 add	 esi, 636		; 0000027cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 338  : 		m_LensFlare.SetMainFlare(mc_pEnvironmentData->strMainFlareTextureFileName.c_str(),

  000c9	51		 push	 ecx
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000cf	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000d3	72 02		 jb	 SHORT $LN59@SetEnviron

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000d5	8b 36		 mov	 esi, DWORD PTR [esi]
$LN59@SetEnviron:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 338  : 		m_LensFlare.SetMainFlare(mc_pEnvironmentData->strMainFlareTextureFileName.c_str(),

  000d7	83 ec 18	 sub	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000da	8b d6		 mov	 edx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 338  : 		m_LensFlare.SetMainFlare(mc_pEnvironmentData->strMainFlareTextureFileName.c_str(),

  000dc	8b cc		 mov	 ecx, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000de	8d 7a 01	 lea	 edi, DWORD PTR [edx+1]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000e1	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000e8	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ef	c6 01 00	 mov	 BYTE PTR [ecx], 0
$LL75@SetEnviron:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000f2	8a 02		 mov	 al, BYTE PTR [edx]
  000f4	42		 inc	 edx
  000f5	84 c0		 test	 al, al
  000f7	75 f9		 jne	 SHORT $LL75@SetEnviron
  000f9	2b d7		 sub	 edx, edi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000fb	52		 push	 edx
  000fc	56		 push	 esi
  000fd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 338  : 		m_LensFlare.SetMainFlare(mc_pEnvironmentData->strMainFlareTextureFileName.c_str(),

  00102	8b cb		 mov	 ecx, ebx
  00104	e8 00 00 00 00	 call	 ?SetMainFlare@CLensFlare@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z ; CLensFlare::SetMainFlare
$LN3@SetEnviron:

; 339  : 								 mc_pEnvironmentData->fMainFlareSize);
; 340  : }

  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
?SetEnvironmentLensFlare@CMapOutdoor@@QAEXXZ ENDP	; CMapOutdoor::SetEnvironmentLensFlare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetEnvironmentSkyBox@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
$T1 = -4						; size = 4
?SetEnvironmentSkyBox@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::SetEnvironmentSkyBox, COMDAT
; _this$ = ecx

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi

; 293  : 	if (!mc_pEnvironmentData)

  0000a	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  0000d	85 c0		 test	 eax, eax
  0000f	0f 84 37 01 00
	00		 je	 $LN1@SetEnviron

; 296  : 	m_SkyBox.SetSkyBoxScale(mc_pEnvironmentData->v3SkyBoxScale);

  00015	53		 push	 ebx
  00016	57		 push	 edi
  00017	05 5c 01 00 00	 add	 eax, 348		; 0000015cH
  0001c	8d 9e 38 03 00
	00		 lea	 ebx, DWORD PTR [esi+824]
  00022	50		 push	 eax
  00023	8b cb		 mov	 ecx, ebx
  00025	e8 00 00 00 00	 call	 ?SetSkyBoxScale@CSkyBox@@QAEXABUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyBoxScale

; 297  : 	m_SkyBox.SetGradientLevel(mc_pEnvironmentData->bySkyBoxGradientLevelUpper, mc_pEnvironmentData->bySkyBoxGradientLevelLower);

  0002a	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  0002d	0f b6 81 6d 01
	00 00		 movzx	 eax, BYTE PTR [ecx+365]
  00034	50		 push	 eax
  00035	0f b6 81 6c 01
	00 00		 movzx	 eax, BYTE PTR [ecx+364]
  0003c	8b cb		 mov	 ecx, ebx
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?SetGradientLevel@CSkyBox@@QAEXEE@Z ; CSkyBox::SetGradientLevel

; 298  : 	m_SkyBox.SetRenderMode( (mc_pEnvironmentData->bSkyBoxTextureRenderMode == TRUE) ? CSkyObject::SKY_RENDER_MODE_TEXTURE : CSkyObject::SKY_RENDER_MODE_DIFFUSE);

  00044	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  00047	83 b9 68 01 00
	00 01		 cmp	 DWORD PTR [ecx+360], 1
  0004e	0f 94 c0	 sete	 al
  00051	33 ff		 xor	 edi, edi
  00053	fe c0		 inc	 al
  00055	88 86 0c 05 00
	00		 mov	 BYTE PTR [esi+1292], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  0005b	8b c1		 mov	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 296  : 	m_SkyBox.SetSkyBoxScale(mc_pEnvironmentData->v3SkyBoxScale);

  0005d	33 f6		 xor	 esi, esi
  0005f	90		 npad	 1
$LL4@SetEnviron:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  00060	83 bc 0e 80 01
	00 00 00	 cmp	 DWORD PTR [esi+ecx+384], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 302  : 		if (!mc_pEnvironmentData->strSkyBoxFaceFileName[i].empty())

  00068	74 21		 je	 SHORT $LN2@SetEnviron
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  0006a	8d 81 70 01 00
	00		 lea	 eax, DWORD PTR [ecx+368]
  00070	03 c6		 add	 eax, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00072	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00076	72 02		 jb	 SHORT $LN15@SetEnviron

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00078	8b 00		 mov	 eax, DWORD PTR [eax]
$LN15@SetEnviron:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 303  : 			m_SkyBox.SetFaceTexture( mc_pEnvironmentData->strSkyBoxFaceFileName[i].c_str(), i );

  0007a	57		 push	 edi
  0007b	50		 push	 eax
  0007c	8b cb		 mov	 ecx, ebx
  0007e	e8 00 00 00 00	 call	 ?SetFaceTexture@CSkyBox@@QAEXPBDH@Z ; CSkyBox::SetFaceTexture
  00083	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00086	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00089	8b c1		 mov	 eax, ecx
$LN2@SetEnviron:

; 299  : 
; 300  : 	for( int i = 0; i < 6; ++i )

  0008b	83 c6 18	 add	 esi, 24			; 00000018H
  0008e	47		 inc	 edi
  0008f	81 fe 90 00 00
	00		 cmp	 esi, 144		; 00000090H
  00095	7c c9		 jl	 SHORT $LL4@SetEnviron
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  00097	83 b8 2c 02 00
	00 00		 cmp	 DWORD PTR [eax+556], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 306  : 	if (!mc_pEnvironmentData->strCloudTextureFileName.empty())

  0009e	74 1d		 je	 SHORT $LN36@SetEnviron
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  000a0	05 1c 02 00 00	 add	 eax, 540		; 0000021cH

; 2153 :         return _BUF_SIZE <= _Myres;

  000a5	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000a9	72 02		 jb	 SHORT $LN24@SetEnviron

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@SetEnviron:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 307  : 		m_SkyBox.SetCloudTexture(mc_pEnvironmentData->strCloudTextureFileName.c_str());

  000ad	50		 push	 eax
  000ae	8b cb		 mov	 ecx, ebx
  000b0	e8 00 00 00 00	 call	 ?SetCloudTexture@CSkyBox@@QAEXPBD@Z ; CSkyBox::SetCloudTexture
  000b5	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  000b8	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000bb	eb 03		 jmp	 SHORT $LN35@SetEnviron
$LN36@SetEnviron:

; 306  : 	if (!mc_pEnvironmentData->strCloudTextureFileName.empty())

  000bd	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
$LN35@SetEnviron:

; 308  : 
; 309  : 	m_SkyBox.SetCloudScale(mc_pEnvironmentData->v2CloudScale);

  000c0	05 00 02 00 00	 add	 eax, 512		; 00000200H
  000c5	8b cb		 mov	 ecx, ebx
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ?SetCloudScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ; CSkyBox::SetCloudScale

; 310  : 	m_SkyBox.SetCloudHeight(mc_pEnvironmentData->fCloudHeight);

  000cd	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000d0	51		 push	 ecx
  000d1	8b cb		 mov	 ecx, ebx
  000d3	f3 0f 10 80 08
	02 00 00	 movss	 xmm0, DWORD PTR [eax+520]
  000db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e0	e8 00 00 00 00	 call	 ?SetCloudHeight@CSkyBox@@QAEXM@Z ; CSkyBox::SetCloudHeight

; 311  : 	m_SkyBox.SetCloudTextureScale(mc_pEnvironmentData->v2CloudTextureScale);

  000e5	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000e8	8b cb		 mov	 ecx, ebx
  000ea	05 0c 02 00 00	 add	 eax, 524		; 0000020cH
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?SetCloudTextureScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ; CSkyBox::SetCloudTextureScale

; 312  : 	m_SkyBox.SetCloudScrollSpeed(mc_pEnvironmentData->v2CloudSpeed);

  000f5	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000f8	8b cb		 mov	 ecx, ebx
  000fa	05 14 02 00 00	 add	 eax, 532		; 00000214H
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ?SetCloudScrollSpeed@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ; CSkyBox::SetCloudScrollSpeed

; 313  : 	m_SkyBox.Refresh();

  00105	8b cb		 mov	 ecx, ebx
  00107	e8 00 00 00 00	 call	 ?Refresh@CSkyBox@@QAEXXZ ; CSkyBox::Refresh

; 314  : 
; 315  : 	// Temporary
; 316  : 	m_SkyBox.SetCloudColor(mc_pEnvironmentData->CloudGradientColor, mc_pEnvironmentData->CloudGradientColor, 1);

  0010c	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  0010f	8d 4d fc	 lea	 ecx, DWORD PTR $T1[ebp]
  00112	51		 push	 ecx
  00113	05 34 02 00 00	 add	 eax, 564		; 00000234H
  00118	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR $T1[ebp], 1
  0011f	50		 push	 eax
  00120	50		 push	 eax
  00121	8b cb		 mov	 ecx, ebx
  00123	e8 00 00 00 00	 call	 ?SetCloudColor@CSkyBox@@QAEXABUTGradientColor@@0ABK@Z ; CSkyBox::SetCloudColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00128	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  0012b	81 c1 54 02 00
	00		 add	 ecx, 596		; 00000254H

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00131	8b 01		 mov	 eax, DWORD PTR [ecx]
  00133	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 318  : 	if (!mc_pEnvironmentData->SkyBoxGradientColorVector.empty())

  00136	74 0b		 je	 SHORT $LN8@SetEnviron

; 319  : 		m_SkyBox.SetSkyColor(mc_pEnvironmentData->SkyBoxGradientColorVector, mc_pEnvironmentData->SkyBoxGradientColorVector, 1);

  00138	6a 01		 push	 1
  0013a	51		 push	 ecx
  0013b	51		 push	 ecx
  0013c	8b cb		 mov	 ecx, ebx
  0013e	e8 00 00 00 00	 call	 ?SetSkyColor@CSkyBox@@QAEXABV?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@0J@Z ; CSkyBox::SetSkyColor
$LN8@SetEnviron:

; 320  : 	// Temporary
; 321  : 
; 322  : 	m_SkyBox.StartTransition();

  00143	8b 03		 mov	 eax, DWORD PTR [ebx]
  00145	8b cb		 mov	 ecx, ebx
  00147	ff 50 10	 call	 DWORD PTR [eax+16]
  0014a	5f		 pop	 edi
  0014b	5b		 pop	 ebx
$LN1@SetEnviron:
  0014c	5e		 pop	 esi

; 323  : }

  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
?SetEnvironmentSkyBox@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::SetEnvironmentSkyBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?SetEnvironmentScreenFilter@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?SetEnvironmentScreenFilter@CMapOutdoor@@QAEXXZ PROC	; CMapOutdoor::SetEnvironmentScreenFilter, COMDAT
; _this$ = ecx

; 282  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 283  : 	if (!mc_pEnvironmentData)

  00003	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  00006	85 c0		 test	 eax, eax
  00008	74 45		 je	 SHORT $LN1@SetEnviron

; 284  : 		return;
; 285  : 
; 286  : 	m_ScreenFilter.SetEnable(mc_pEnvironmentData->bFilteringEnable);

  0000a	56		 push	 esi
  0000b	ff b0 3c 01 00
	00		 push	 DWORD PTR [eax+316]
  00011	8d 8f 2c 07 00
	00		 lea	 ecx, DWORD PTR [edi+1836]
  00017	e8 00 00 00 00	 call	 ?SetEnable@CScreenFilter@@QAEXH@Z ; CScreenFilter::SetEnable

; 287  : 	m_ScreenFilter.SetBlendType(mc_pEnvironmentData->byFilteringAlphaSrc, mc_pEnvironmentData->byFilteringAlphaDest);

  0001c	8b 57 3c	 mov	 edx, DWORD PTR [edi+60]
  0001f	8d 8f 2c 07 00
	00		 lea	 ecx, DWORD PTR [edi+1836]
  00025	0f b6 82 51 01
	00 00		 movzx	 eax, BYTE PTR [edx+337]
  0002c	50		 push	 eax
  0002d	0f b6 82 50 01
	00 00		 movzx	 eax, BYTE PTR [edx+336]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?SetBlendType@CScreenFilter@@QAEXEE@Z ; CScreenFilter::SetBlendType

; 288  : 	m_ScreenFilter.SetColor(mc_pEnvironmentData->FilteringColor);

  0003a	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  0003d	8d 8f 2c 07 00
	00		 lea	 ecx, DWORD PTR [edi+1836]
  00043	05 40 01 00 00	 add	 eax, 320		; 00000140H
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?SetColor@CScreenFilter@@QAEXABUD3DXCOLOR@@@Z ; CScreenFilter::SetColor
  0004e	5e		 pop	 esi
$LN1@SetEnviron:

; 289  : }

  0004f	5f		 pop	 edi
  00050	c3		 ret	 0
?SetEnvironmentScreenFilter@CMapOutdoor@@QAEXXZ ENDP	; CMapOutdoor::SetEnvironmentScreenFilter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?Clear@CMapOutdoor@@UAEXXZ
_TEXT	SEGMENT
?Clear@CMapOutdoor@@UAEXXZ PROC				; CMapOutdoor::Clear, COMDAT
; _this$ = ecx

; 227  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 	UnloadWaterTexture();

  00003	e8 00 00 00 00	 call	 ?UnloadWaterTexture@CMapOutdoor@@IAEXXZ ; CMapOutdoor::UnloadWaterTexture

; 229  : 	Destroy();

  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	8b ce		 mov	 ecx, esi
  0000c	ff 50 0c	 call	 DWORD PTR [eax+12]

; 230  : 	Initialize();

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	8b ce		 mov	 ecx, esi
  00013	5e		 pop	 esi
  00014	ff 60 08	 jmp	 DWORD PTR [eax+8]
?Clear@CMapOutdoor@@UAEXXZ ENDP				; CMapOutdoor::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetCacheHeight@CMapOutdoor@@UAEMMM@Z
_TEXT	SEGMENT
_kGetObjHeight$2 = -84					; size = 16
_fObjectHeight$1$ = -68					; size = 4
_fHeight$ = -68						; size = 4
_kItem$3 = -64						; size = 8
_this$GSCopy$1$ = -60					; size = 4
_fTerrainHeight$ = -60					; size = 4
_r$4 = -56						; size = 12
_aVector3d$5 = -56					; size = 12
_toTop$6 = -44						; size = 12
_kRangeTester_kGetObjHeight$7 = -44			; size = 12
_kGetObjHeight$8 = -32					; size = 16
_aVector3d$9 = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?GetCacheHeight@CMapOutdoor@@UAEMMM@Z PROC		; CMapOutdoor::GetCacheHeight, COMDAT
; _this$ = ecx

; 775  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d c4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx

; 776  : 	unsigned int nx=int(fx);
; 777  : 	unsigned int ny=int(fy);
; 778  : 
; 779  : 	DWORD dwKey=0;
; 780  : 
; 781  : #ifdef __HEIGHT_CACHE_TRACE__
; 782  : 	static DWORD s_dwTotalCount=0;
; 783  : 	static DWORD s_dwHitCount=0;
; 784  : 	static DWORD s_dwErrorCount=0;
; 785  : 
; 786  : 	s_dwTotalCount++;
; 787  : #endif
; 788  : 
; 789  : 	std::vector<SHeightCache::SItem>* pkVct_kItem=NULL;
; 790  : 	if (m_kHeightCache.m_isUpdated && nx<16*30000 && ny<16*30000)

  0002d	8b 55 c4	 mov	 edx, DWORD PTR _this$GSCopy$1$[ebp]
  00030	33 ff		 xor	 edi, edi
  00032	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00037	33 f6		 xor	 esi, esi
  00039	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
  0003e	f3 0f 2c c0	 cvttss2si eax, xmm0
  00042	80 ba 78 13 00
	00 00		 cmp	 BYTE PTR [edx+4984], 0
  00049	f3 0f 2c c9	 cvttss2si ecx, xmm1
  0004d	74 54		 je	 SHORT $LN3@GetCacheHe
  0004f	3d 00 53 07 00	 cmp	 eax, 480000		; 00075300H
  00054	73 4d		 jae	 SHORT $LN3@GetCacheHe
  00056	81 f9 00 53 07
	00		 cmp	 ecx, 480000		; 00075300H
  0005c	73 45		 jae	 SHORT $LN3@GetCacheHe

; 791  : 	{
; 792  : 		nx>>=4;
; 793  : 		ny>>=4;

  0005e	c1 e9 04	 shr	 ecx, 4
  00061	c1 e8 04	 shr	 eax, 4

; 794  : 		//short aPos[2]={nx, ny};
; 795  : 
; 796  : 		dwKey=(ny<<16)|nx;//CalcCRC16Words(2, aPos);

  00064	8b f9		 mov	 edi, ecx
  00066	c1 e7 10	 shl	 edi, 16			; 00000010H
  00069	0b f8		 or	 edi, eax

; 797  : 		pkVct_kItem=&m_kHeightCache.m_akVct_kItem[dwKey%SHeightCache::HASH_SIZE];

  0006b	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00070	f7 e7		 mul	 edi
  00072	8b cf		 mov	 ecx, edi
  00074	c1 ea 05	 shr	 edx, 5
  00077	6b c2 64	 imul	 eax, edx, 100
  0007a	2b c8		 sub	 ecx, eax
  0007c	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0007f	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00082	8d 80 b2 03 00
	00		 lea	 eax, DWORD PTR [eax+946]
  00088	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008b	8b 06		 mov	 eax, DWORD PTR [esi]
  0008d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00090	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 799  : 		for (i=pkVct_kItem->begin(); i!=pkVct_kItem->end(); ++i)

  00092	74 0f		 je	 SHORT $LN3@GetCacheHe
$LL4@GetCacheHe:

; 800  : 		{
; 801  : 			SHeightCache::SItem& rkItem=*i;
; 802  : 			if (rkItem.m_dwKey==dwKey)

  00094	39 38		 cmp	 DWORD PTR [eax], edi
  00096	0f 84 c4 00 00
	00		 je	 $LN73@GetCacheHe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0009c	83 c0 08	 add	 eax, 8

; 149  :         return _Ptr == _Right._Ptr;

  0009f	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 799  : 		for (i=pkVct_kItem->begin(); i!=pkVct_kItem->end(); ++i)

  000a1	75 f1		 jne	 SHORT $LL4@GetCacheHe
$LN3@GetCacheHe:

; 821  : 			}
; 822  : 		}
; 823  : 	}
; 824  : 	else
; 825  : 	{
; 826  : #ifdef __HEIGHT_CACHE_TRACE__
; 827  : 		s_dwErrorCount++;
; 828  : 		//printf("NoCache (%f, %f)\n", fx/100.0f, fy/100.0f);
; 829  : #endif
; 830  : 	}
; 831  : #ifdef __HEIGHT_CACHE_TRACE__
; 832  : 	if (s_dwTotalCount>=1000000)
; 833  : 	{
; 834  : 		printf("HitRate %f\n", s_dwHitCount*1000/s_dwTotalCount*0.1f);
; 835  : 		printf("ErrRate %f\n", s_dwErrorCount*1000/s_dwTotalCount*0.1f);
; 836  : 		s_dwHitCount=0;
; 837  : 		s_dwTotalCount=0;
; 838  : 		s_dwErrorCount=0;
; 839  : 	}
; 840  : #endif
; 841  : 
; 842  : 	float fTerrainHeight = GetTerrainHeight(fx, fy);

  000a3	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000a6	83 ec 08	 sub	 esp, 8
  000a9	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	e8 00 00 00 00	 call	 ?GetTerrainHeight@CMapOutdoor@@QAEMMM@Z ; CMapOutdoor::GetTerrainHeight

; 843  : #ifdef SPHERELIB_STRICT
; 844  : 	if (MAPOUTDOOR_GET_HEIGHT_TRACE)
; 845  : 		printf("Terrain %f\n", fTerrainHeight);
; 846  : #endif
; 847  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();
; 848  : 
; 849  : 	float CHECK_HEIGHT = 25000.0f;
; 850  : 	float fObjectHeight = -CHECK_HEIGHT;
; 851  : 
; 852  : 	if (MAPOUTDOOR_GET_HEIGHT_USE2D)

  000b9	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?MAPOUTDOOR_GET_HEIGHT_USE2D@@3_NA, 0 ; MAPOUTDOOR_GET_HEIGHT_USE2D
  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
  000c5	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR _fy$[ebp]
  000ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6c35000
  000d2	0f 28 da	 movaps	 xmm3, xmm2
  000d5	0f 57 1d 00 00
	00 00		 xorps	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  000dc	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000df	d9 5d c4	 fstp	 DWORD PTR _fTerrainHeight$[ebp]
  000e2	f3 0f 11 45 bc	 movss	 DWORD PTR _fObjectHeight$1$[ebp], xmm0
  000e7	74 7f		 je	 SHORT $LN8@GetCacheHe
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  000e9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  000ee	8d 45 e0	 lea	 eax, DWORD PTR _kGetObjHeight$8[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 109  : 		z = c;

  000f1	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _fTerrainHeight$[ebp]
  000f6	f3 0f 11 45 c8	 movss	 DWORD PTR _aVector3d$5[ebp], xmm0
  000fb	f3 0f 11 5d cc	 movss	 DWORD PTR _aVector3d$5[ebp+4], xmm3
  00100	f3 0f 11 4d d0	 movss	 DWORD PTR _aVector3d$5[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 21   : 		m_fRequestX=fRequestX;

  00105	f3 0f 11 45 e8	 movss	 DWORD PTR _kGetObjHeight$8[ebp+8], xmm0

; 22   : 		m_fRequestY=fRequestY;

  0010a	f3 0f 11 55 ec	 movss	 DWORD PTR _kGetObjHeight$8[ebp+12], xmm2

; 23   : 		m_bHeightFound=false;

  0010f	c6 45 e0 00	 mov	 BYTE PTR _kGetObjHeight$8[ebp], 0

; 24   : 		m_fReturnHeight=0.0f;

  00113	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _kGetObjHeight$8[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 16   : 	{}

  0011a	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _kRangeTester_kGetObjHeight$7[ebp], OFFSET ??_7?$RangeTester@UFGetObjectHeight@@@@6B@

; 15   : 		: f(fn), dist(distance)

  00121	89 45 d8	 mov	 DWORD PTR _kRangeTester_kGetObjHeight$7[ebp+4], eax
  00124	c7 45 dc 00 00
	80 bf		 mov	 DWORD PTR _kRangeTester_kGetObjHeight$7[ebp+8], -1082130432 ; bf800000H

; 100  : 		m_Factory->PointTest2d(p, callback);

  0012b	8d 45 d4	 lea	 eax, DWORD PTR _kRangeTester_kGetObjHeight$7[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 859  : 		RangeTester<FGetObjectHeight> kRangeTester_kGetObjHeight(&kGetObjHeight);

  0012e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 100  : 		m_Factory->PointTest2d(p, callback);

  00135	50		 push	 eax
  00136	8d 45 c8	 lea	 eax, DWORD PTR _aVector3d$5[ebp]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z ; SpherePackFactory::PointTest2d
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 862  : 		if (kGetObjHeight.m_bHeightFound)

  0013f	80 7d e0 00	 cmp	 BYTE PTR _kGetObjHeight$8[ebp], 0
  00143	74 0a		 je	 SHORT $LN10@GetCacheHe

; 863  : 			fObjectHeight = kGetObjHeight.m_fReturnHeight;

  00145	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _kGetObjHeight$8[ebp+4]
  0014a	f3 0f 11 45 bc	 movss	 DWORD PTR _fObjectHeight$1$[ebp], xmm0
$LN10@GetCacheHe:

; 864  : 	}

  0014f	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _fObjectHeight$1$[ebp]
  00154	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0015b	e9 93 00 00 00	 jmp	 $LN11@GetCacheHe
$LN73@GetCacheHe:

; 803  : 			{
; 804  : #ifdef __HEIGHT_CACHE_TRACE__
; 805  : 				s_dwHitCount++;
; 806  : 
; 807  : 				if (s_dwTotalCount>1000)
; 808  : 				{
; 809  : 					DWORD dwHitRate=s_dwHitCount*1000/s_dwTotalCount;
; 810  : 					static DWORD s_dwMaxHitRate=0;
; 811  : 					if (s_dwMaxHitRate<dwHitRate)
; 812  : 					{
; 813  : 						s_dwMaxHitRate=dwHitRate;
; 814  : 						printf("HitRate %f\n", s_dwMaxHitRate*0.1f);
; 815  : 					}
; 816  : 
; 817  : 
; 818  : 				}
; 819  : #endif
; 820  : 				return rkItem.m_fHeight;

  00160	d9 40 04	 fld	 DWORD PTR [eax+4]
  00163	e9 f4 00 00 00	 jmp	 $LN1@GetCacheHe
$LN8@GetCacheHe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  00168	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fx$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  0016d	8d 45 ac	 lea	 eax, DWORD PTR _kGetObjHeight$2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 109  : 		z = c;

  00170	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _fTerrainHeight$[ebp]
  00175	f3 0f 11 4d e4	 movss	 DWORD PTR _aVector3d$9[ebp], xmm1
  0017a	f3 0f 11 5d e8	 movss	 DWORD PTR _aVector3d$9[ebp+4], xmm3
  0017f	f3 0f 11 45 ec	 movss	 DWORD PTR _aVector3d$9[ebp+8], xmm0

; 107  : 		x = a;

  00184	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _toTop$6[ebp], 0

; 108  : 		y = b;

  0018b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _toTop$6[ebp+4], 0

; 109  : 		z = c;

  00192	c7 45 dc 00 50
	c3 46		 mov	 DWORD PTR _toTop$6[ebp+8], 1187205120 ; 46c35000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 21   : 		m_fRequestX=fRequestX;

  00199	f3 0f 11 4d b4	 movss	 DWORD PTR _kGetObjHeight$2[ebp+8], xmm1

; 22   : 		m_fRequestY=fRequestY;

  0019e	f3 0f 11 55 b8	 movss	 DWORD PTR _kGetObjHeight$2[ebp+12], xmm2

; 23   : 		m_bHeightFound=false;

  001a3	c6 45 ac 00	 mov	 BYTE PTR _kGetObjHeight$2[ebp], 0

; 24   : 		m_fReturnHeight=0.0f;

  001a7	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _kGetObjHeight$2[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 16   : 	{}

  001ae	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _r$4[ebp], OFFSET ??_7?$RangeTester@UFGetObjectHeight@@@@6B@

; 15   : 		: f(fn), dist(distance)

  001b5	89 45 cc	 mov	 DWORD PTR _r$4[ebp+4], eax
  001b8	c7 45 d0 00 00
	80 bf		 mov	 DWORD PTR _r$4[ebp+8], -1082130432 ; bf800000H

; 127  : 		m_Factory->RayTrace(p1, dir, &r/*this*/);

  001bf	8d 45 c8	 lea	 eax, DWORD PTR _r$4[ebp]
  001c2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  001c9	50		 push	 eax
  001ca	8d 45 d4	 lea	 eax, DWORD PTR _toTop$6[ebp]
  001cd	50		 push	 eax
  001ce	8d 45 e4	 lea	 eax, DWORD PTR _aVector3d$9[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?RayTrace@SpherePackFactory@@QAEXABVVector3d@@0PAVSpherePackCallback@@@Z ; SpherePackFactory::RayTrace
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 876  : 		if (kGetObjHeight.m_bHeightFound)

  001d7	80 7d ac 00	 cmp	 BYTE PTR _kGetObjHeight$2[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 128  : 	}

  001db	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 876  : 		if (kGetObjHeight.m_bHeightFound)

  001e2	74 07		 je	 SHORT $LN77@GetCacheHe

; 877  : 			fObjectHeight = kGetObjHeight.m_fReturnHeight;

  001e4	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _kGetObjHeight$2[ebp+4]
  001e9	eb 08		 jmp	 SHORT $LN11@GetCacheHe
$LN77@GetCacheHe:

; 876  : 		if (kGetObjHeight.m_bHeightFound)

  001eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6c35000
$LN11@GetCacheHe:

; 878  : 	}
; 879  : 
; 880  : 	float fHeight=fMAX(fObjectHeight, fTerrainHeight);

  001f3	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _fTerrainHeight$[ebp]
  001f8	83 ec 08	 sub	 esp, 8
  001fb	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00201	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00206	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX
  0020b	83 c4 08	 add	 esp, 8
  0020e	d9 5d bc	 fstp	 DWORD PTR _fHeight$[ebp]

; 881  : 
; 882  : 	if (pkVct_kItem)

  00211	85 f6		 test	 esi, esi
  00213	74 44		 je	 SHORT $LN67@GetCacheHe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00215	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00218	8b c1		 mov	 eax, ecx
  0021a	8b 16		 mov	 edx, DWORD PTR [esi]
  0021c	2b c2		 sub	 eax, edx
  0021e	c1 f8 03	 sar	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 884  : 		if (pkVct_kItem->size()>=200)

  00221	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  00226	72 05		 jb	 SHORT $LN13@GetCacheHe

; 885  : 		{
; 886  : #ifdef __HEIGHT_CACHE_TRACE__
; 887  : 			printf("ClearCacheHeight[%d]\n", dwKey%SHeightCache::HASH_SIZE);
; 888  : #endif
; 889  : 			pkVct_kItem->clear();

  00228	89 56 04	 mov	 DWORD PTR [esi+4], edx
  0022b	8b ca		 mov	 ecx, edx
$LN13@GetCacheHe:

; 890  : 		}
; 891  : 
; 892  : 		SHeightCache::SItem kItem;
; 893  : 		kItem.m_dwKey=dwKey;
; 894  : 		kItem.m_fHeight=fHeight;

  0022d	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _fHeight$[ebp]
  00232	89 7d c0	 mov	 DWORD PTR _kItem$3[ebp], edi
  00235	f3 0f 11 45 c4	 movss	 DWORD PTR _kItem$3[ebp+4], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0023a	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0023d	74 0e		 je	 SHORT $LN68@GetCacheHe

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0023f	8b 45 c4	 mov	 eax, DWORD PTR _kItem$3[ebp+4]
  00242	89 39		 mov	 DWORD PTR [ecx], edi
  00244	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00247	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0024b	eb 0c		 jmp	 SHORT $LN67@GetCacheHe
$LN68@GetCacheHe:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0024d	8d 45 c0	 lea	 eax, DWORD PTR _kItem$3[ebp]
  00250	50		 push	 eax
  00251	51		 push	 ecx
  00252	8b ce		 mov	 ecx, esi
  00254	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSItem@SHeightCache@CMapOutdoor@@@?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAEPAUSItem@SHeightCache@CMapOutdoor@@QAU234@ABU234@@Z ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::_Emplace_reallocate<CMapOutdoor::SHeightCache::SItem const &>
$LN67@GetCacheHe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 898  : 	return fHeight;

  00259	d9 45 bc	 fld	 DWORD PTR _fHeight$[ebp]
$LN1@GetCacheHe:

; 899  : }

  0025c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0025f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00266	59		 pop	 ecx
  00267	5f		 pop	 edi
  00268	5e		 pop	 esi
  00269	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0026c	33 cd		 xor	 ecx, ebp
  0026e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00273	8b e5		 mov	 esp, ebp
  00275	5d		 pop	 ebp
  00276	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _kRangeTester_kGetObjHeight$7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ ; RangeTester<FGetObjectHeight>::~RangeTester<FGetObjectHeight>
__unwindfunclet$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR _r$4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ ; RangeTester<FGetObjectHeight>::~RangeTester<FGetObjectHeight>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCacheHeight@CMapOutdoor@@UAEMMM@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCacheHeight@CMapOutdoor@@UAEMMM@Z ENDP		; CMapOutdoor::GetCacheHeight
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?GetHeight@CMapOutdoor@@UAEMMM@Z
_TEXT	SEGMENT
_kRangeTester_kGetObjHeight$2 = -60			; size = 12
_kGetObjHeight$3 = -48					; size = 16
_fTerrainHeight$ = -32					; size = 4
_aVector3d$4 = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?GetHeight@CMapOutdoor@@UAEMMM@Z PROC			; CMapOutdoor::GetHeight, COMDAT
; _this$ = ecx

; 747  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetHeight@CMapOutdoor@@UAEMMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b f1		 mov	 esi, ecx

; 748  : 	float fTerrainHeight = GetTerrainHeight(fx, fy);

  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00030	83 ec 08	 sub	 esp, 8
  00033	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00039	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  0003e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00043	e8 00 00 00 00	 call	 ?GetTerrainHeight@CMapOutdoor@@QAEMMM@Z ; CMapOutdoor::GetTerrainHeight

; 749  : 
; 750  : 	if (!m_bEnableTerrainOnlyForHeight)

  00048	80 be b6 0e 00
	00 00		 cmp	 BYTE PTR [esi+3766], 0
  0004f	d9 5d e0	 fstp	 DWORD PTR _fTerrainHeight$[ebp]
  00052	0f 85 a0 00 00
	00		 jne	 $LN2@GetHeight

; 758  : 		aVector3d.Set(fx, -fy, fTerrainHeight);

  00058	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fy$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  0005d	8d 45 d0	 lea	 eax, DWORD PTR _kGetObjHeight$3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  00060	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _fx$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 758  : 		aVector3d.Set(fx, -fy, fTerrainHeight);

  00065	0f 28 c1	 movaps	 xmm0, xmm1
  00068	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0006f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 108  : 		y = b;

  00075	f3 0f 11 45 e8	 movss	 DWORD PTR _aVector3d$4[ebp+4], xmm0

; 109  : 		z = c;

  0007a	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fTerrainHeight$[ebp]
  0007f	f3 0f 11 55 e4	 movss	 DWORD PTR _aVector3d$4[ebp], xmm2
  00084	f3 0f 11 45 ec	 movss	 DWORD PTR _aVector3d$4[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 21   : 		m_fRequestX=fRequestX;

  00089	f3 0f 11 55 d8	 movss	 DWORD PTR _kGetObjHeight$3[ebp+8], xmm2

; 22   : 		m_fRequestY=fRequestY;

  0008e	f3 0f 11 4d dc	 movss	 DWORD PTR _kGetObjHeight$3[ebp+12], xmm1

; 23   : 		m_bHeightFound=false;

  00093	c6 45 d0 00	 mov	 BYTE PTR _kGetObjHeight$3[ebp], 0

; 24   : 		m_fReturnHeight=0.0f;

  00097	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _kGetObjHeight$3[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 16   : 	{}

  0009e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _kRangeTester_kGetObjHeight$2[ebp], OFFSET ??_7?$RangeTester@UFGetObjectHeight@@@@6B@

; 15   : 		: f(fn), dist(distance)

  000a5	89 45 c8	 mov	 DWORD PTR _kRangeTester_kGetObjHeight$2[ebp+4], eax
  000a8	c7 45 cc 00 00
	80 bf		 mov	 DWORD PTR _kRangeTester_kGetObjHeight$2[ebp+8], -1082130432 ; bf800000H

; 100  : 		m_Factory->PointTest2d(p, callback);

  000af	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000b2	8d 45 c4	 lea	 eax, DWORD PTR _kRangeTester_kGetObjHeight$2[ebp]
  000b5	50		 push	 eax
  000b6	8d 45 e4	 lea	 eax, DWORD PTR _aVector3d$4[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 762  : 		RangeTester<FGetObjectHeight> kRangeTester_kGetObjHeight(&kGetObjHeight);

  000b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\CullingManager.h

; 100  : 		m_Factory->PointTest2d(p, callback);

  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z ; SpherePackFactory::PointTest2d
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 765  : 		if (kGetObjHeight.m_bHeightFound)

  000c6	80 7d d0 00	 cmp	 BYTE PTR _kGetObjHeight$3[ebp], 0
  000ca	74 07		 je	 SHORT $LN16@GetHeight

; 766  : 			fObjectHeight = kGetObjHeight.m_fReturnHeight;

  000cc	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _kGetObjHeight$3[ebp+4]
  000d1	eb 08		 jmp	 SHORT $LN3@GetHeight
$LN16@GetHeight:

; 765  : 		if (kGetObjHeight.m_bHeightFound)

  000d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6c35000
$LN3@GetHeight:

; 767  : 
; 768  : 		return fMAX(fObjectHeight, fTerrainHeight);

  000db	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _fTerrainHeight$[ebp]
  000e0	83 ec 08	 sub	 esp, 8
  000e3	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ee	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX
  000f3	83 c4 08	 add	 esp, 8
  000f6	eb 03		 jmp	 SHORT $LN1@GetHeight
$LN2@GetHeight:

; 769  : 	}
; 770  : 
; 771  : 	return fTerrainHeight;

  000f8	d9 45 e0	 fld	 DWORD PTR _fTerrainHeight$[ebp]
$LN1@GetHeight:

; 772  : }

  000fb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00105	59		 pop	 ecx
  00106	5e		 pop	 esi
  00107	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010a	33 cd		 xor	 ecx, ebp
  0010c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetHeight@CMapOutdoor@@UAEMMM@Z$0:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _kRangeTester_kGetObjHeight$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetObjectHeight@@@@UAE@XZ ; RangeTester<FGetObjectHeight>::~RangeTester<FGetObjectHeight>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?GetHeight@CMapOutdoor@@UAEMMM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetHeight@CMapOutdoor@@UAEMMM@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetHeight@CMapOutdoor@@UAEMMM@Z ENDP			; CMapOutdoor::GetHeight
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
;	COMDAT ?OnPreAssignTerrainPtr@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?OnPreAssignTerrainPtr@CMapOutdoor@@MAEXXZ PROC		; CMapOutdoor::OnPreAssignTerrainPtr, COMDAT
; _this$ = ecx

; 82   : 		virtual void	OnPreAssignTerrainPtr() {};

  00000	c2 00 00	 ret	 0
?OnPreAssignTerrainPtr@CMapOutdoor@@MAEXXZ ENDP		; CMapOutdoor::OnPreAssignTerrainPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?OnResetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?OnResetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ PROC	; CMapOutdoor::OnResetEnvironmentDataPtr, COMDAT
; _this$ = ecx

; 274  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 275  : 	m_SkyBox.Unload();

  00003	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00009	e8 00 00 00 00	 call	 ?Unload@CSkyBox@@QAEXXZ	; CSkyBox::Unload

; 276  : 	SetEnvironmentScreenFilter();

  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?SetEnvironmentScreenFilter@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetEnvironmentScreenFilter

; 277  : 	SetEnvironmentSkyBox();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?SetEnvironmentSkyBox@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetEnvironmentSkyBox

; 278  : 	SetEnvironmentLensFlare();

  0001c	8b ce		 mov	 ecx, esi
  0001e	5e		 pop	 esi
  0001f	e9 00 00 00 00	 jmp	 ?SetEnvironmentLensFlare@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetEnvironmentLensFlare
?OnResetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ ENDP	; CMapOutdoor::OnResetEnvironmentDataPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?OnSetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?OnSetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ PROC	; CMapOutdoor::OnSetEnvironmentDataPtr, COMDAT
; _this$ = ecx

; 267  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 268  : 	SetEnvironmentScreenFilter();

  00003	e8 00 00 00 00	 call	 ?SetEnvironmentScreenFilter@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetEnvironmentScreenFilter

; 269  : 	SetEnvironmentSkyBox();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?SetEnvironmentSkyBox@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetEnvironmentSkyBox

; 270  : 	SetEnvironmentLensFlare();

  0000f	8b ce		 mov	 ecx, esi
  00011	5e		 pop	 esi
  00012	e9 00 00 00 00	 jmp	 ?SetEnvironmentLensFlare@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetEnvironmentLensFlare
?OnSetEnvironmentDataPtr@CMapOutdoor@@MAEXXZ ENDP	; CMapOutdoor::OnSetEnvironmentDataPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?Destroy@CMapOutdoor@@MAE_NXZ
_TEXT	SEGMENT
?Destroy@CMapOutdoor@@MAE_NXZ PROC			; CMapOutdoor::Destroy, COMDAT
; _this$ = ecx

; 199  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 200  : 	m_bEnableTerrainOnlyForHeight = FALSE;

  00005	66 c7 87 b6 0e
	00 00 00 00	 mov	 WORD PTR [edi+3766], 0

; 201  : 	m_bEnablePortal = FALSE;
; 202  : 
; 203  : 	XMasTree_Destroy();

  0000e	e8 00 00 00 00	 call	 ?XMasTree_Destroy@CMapOutdoor@@QAEXXZ ; CMapOutdoor::XMasTree_Destroy

; 204  : 
; 205  : 	DestroyTerrain();

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
  00015	8b cf		 mov	 ecx, edi
  00017	ff 50 50	 call	 DWORD PTR [eax+80]

; 206  :  	DestroyArea();

  0001a	8b 07		 mov	 eax, DWORD PTR [edi]
  0001c	8b cf		 mov	 ecx, edi
  0001e	ff 50 54	 call	 DWORD PTR [eax+84]

; 207  : 	DestroyTerrainPatchProxyList();

  00021	8b cf		 mov	 ecx, edi
  00023	e8 00 00 00 00	 call	 ?DestroyTerrainPatchProxyList@CMapOutdoor@@IAEXXZ ; CMapOutdoor::DestroyTerrainPatchProxyList

; 208  : 
; 209  : 	FreeQuadTree();

  00028	8b cf		 mov	 ecx, edi
  0002a	e8 00 00 00 00	 call	 ?FreeQuadTree@CMapOutdoor@@IAEXXZ ; CMapOutdoor::FreeQuadTree

; 210  : 	ReleaseCharacterShadowTexture();

  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?ReleaseCharacterShadowTexture@CMapOutdoor@@QAEXXZ ; CMapOutdoor::ReleaseCharacterShadowTexture

; 211  : 
; 212  : 	CTerrain::DestroySystem();

  00036	e8 00 00 00 00	 call	 ?DestroySystem@CTerrain@@SAXXZ ; CTerrain::DestroySystem

; 213  : 	CArea::DestroySystem();

  0003b	e8 00 00 00 00	 call	 ?DestroySystem@CArea@@SAXXZ ; CArea::DestroySystem

; 214  : 
; 215  : 	RemoveAllMonsterAreaInfo();

  00040	8b cf		 mov	 ecx, edi
  00042	e8 00 00 00 00	 call	 ?RemoveAllMonsterAreaInfo@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RemoveAllMonsterAreaInfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  00047	8b 8f b8 09 00
	00		 mov	 ecx, DWORD PTR [edi+2488]

; 324  :         _Head->_Prev->_Next = nullptr;

  0004d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00050	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00056	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00058	85 c0		 test	 eax, eax
  0005a	74 17		 je	 SHORT $LN7@Destroy
  0005c	0f 1f 40 00	 npad	 4
$LL8@Destroy:

; 328  :             _Pnext = _Pnode->_Next;

  00060	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00062	6a 18		 push	 24			; 00000018H
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0006d	8b c6		 mov	 eax, esi
  0006f	85 f6		 test	 esi, esi
  00071	75 ed		 jne	 SHORT $LL8@Destroy
$LN7@Destroy:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00073	8b 87 b8 09 00
	00		 mov	 eax, DWORD PTR [edi+2488]
  00079	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0007b	8b 87 b8 09 00
	00		 mov	 eax, DWORD PTR [edi+2488]
  00081	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00084	c7 87 bc 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2492], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008e	8b 9f 74 0e 00
	00		 mov	 ebx, DWORD PTR [edi+3700]
  00094	8b b7 70 0e 00
	00		 mov	 esi, DWORD PTR [edi+3696]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009a	3b f3		 cmp	 esi, ebx
  0009c	74 1b		 je	 SHORT $LN32@Destroy
  0009e	66 90		 npad	 2
$LL33@Destroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  000a0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000a2	85 c9		 test	 ecx, ecx
  000a4	74 06		 je	 SHORT $LN31@Destroy
  000a6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a8	6a 01		 push	 1
  000aa	ff 10		 call	 DWORD PTR [eax]
$LN31@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	83 c6 04	 add	 esi, 4
  000af	3b f3		 cmp	 esi, ebx
  000b1	75 ed		 jne	 SHORT $LL33@Destroy
  000b3	8b b7 70 0e 00
	00		 mov	 esi, DWORD PTR [edi+3696]
$LN32@Destroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  000b9	8b 87 7c 0e 00
	00		 mov	 eax, DWORD PTR [edi+3708]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 219  : 	m_AlphaFogImageInstance.Destroy();

  000bf	8d 8f 74 01 00
	00		 lea	 ecx, DWORD PTR [edi+372]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  000c5	89 b7 74 0e 00
	00		 mov	 DWORD PTR [edi+3700], esi

; 52   : 			m_kVct_pkFree.clear();

  000cb	89 87 80 0e 00
	00		 mov	 DWORD PTR [edi+3712], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 219  : 	m_AlphaFogImageInstance.Destroy();

  000d1	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Destroy

; 220  : 
; 221  : 	CSpeedTreeForestDirectX8::Instance().Clear();

  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  000dc	e8 00 00 00 00	 call	 ?Clear@CSpeedTreeForest@@QAEXXZ ; CSpeedTreeForest::Clear

; 222  : 
; 223  : 	return true;

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	b0 01		 mov	 al, 1
  000e5	5b		 pop	 ebx

; 224  : }

  000e6	c3		 ret	 0
?Destroy@CMapOutdoor@@MAE_NXZ ENDP			; CMapOutdoor::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?InitializeFog@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?InitializeFog@CMapOutdoor@@IAEXXZ PROC			; CMapOutdoor::InitializeFog, COMDAT
; _this$ = ecx

; 1056 : 	memset(&m_matAlphaFogTexture, 0, sizeof(D3DXMATRIX));

  00000	c7 81 94 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+404], 0
  0000a	c7 81 98 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+408], 0
  00014	c7 81 9c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+412], 0
  0001e	c7 81 a0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+416], 0
  00028	c7 81 a4 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+420], 0
  00032	c7 81 a8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+424], 0
  0003c	c7 81 ac 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+428], 0
  00046	c7 81 b0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+432], 0
  00050	c7 81 b8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+440], 0
  0005a	c7 81 bc 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+444], 0
  00064	c7 81 c0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+448], 0
  0006e	c7 81 cc 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+460], 0
  00078	c7 81 d0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+464], 0

; 1057 : 	m_matAlphaFogTexture._31 = -0.001f;

  00082	c7 81 b4 01 00
	00 6f 12 83 ba	 mov	 DWORD PTR [ecx+436], -1165815185 ; ba83126fH

; 1058 : 	m_matAlphaFogTexture._41 = -7.0f;

  0008c	c7 81 c4 01 00
	00 00 00 e0 c0	 mov	 DWORD PTR [ecx+452], -1059061760 ; c0e00000H

; 1059 : 	m_matAlphaFogTexture._42 = 0.5f;

  00096	c7 81 c8 01 00
	00 00 00 00 3f	 mov	 DWORD PTR [ecx+456], 1056964608 ; 3f000000H

; 1060 : }

  000a0	c3		 ret	 0
?InitializeFog@CMapOutdoor@@IAEXXZ ENDP			; CMapOutdoor::InitializeFog
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?Initialize@CMapOutdoor@@MAE_NXZ
_TEXT	SEGMENT
?Initialize@CMapOutdoor@@MAE_NXZ PROC			; CMapOutdoor::Initialize, COMDAT
; _this$ = ecx

; 94   : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 95   : 	BYTE i;
; 96   : 	for (i = 0; i < AROUND_AREA_NUM; ++i)

  00003	b9 09 00 00 00	 mov	 ecx, 9
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8d 43 40	 lea	 eax, DWORD PTR [ebx+64]
  0000d	0f 1f 00	 npad	 3
$LL4@Initialize:

; 97   : 	{
; 98   :  		m_pArea[i] = NULL;

  00010	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], 0
  0001a	8d 40 04	 lea	 eax, DWORD PTR [eax+4]

; 99   : 		m_pTerrain[i] = NULL;

  0001d	c7 40 fc 00 00
	00 00		 mov	 DWORD PTR [eax-4], 0
  00024	83 e9 01	 sub	 ecx, 1
  00027	75 e7		 jne	 SHORT $LL4@Initialize

; 103  : 
; 104  : 	m_lViewRadius	= 0L;
; 105  : 	m_fHeightScale	= 0.0f;
; 106  : 
; 107  : 	m_sTerrainCountX = m_sTerrainCountY = 0;

  00029	33 c0		 xor	 eax, eax
  0002b	89 4b 64	 mov	 DWORD PTR [ebx+100], ecx
  0002e	89 43 70	 mov	 DWORD PTR [ebx+112], eax

; 113  : 
; 114  : 	m_EntryPointMap.clear();

  00031	8d bb 84 00 00
	00		 lea	 edi, DWORD PTR [ebx+132]
  00037	83 c8 ff	 or	 eax, -1
  0003a	89 4b 68	 mov	 DWORD PTR [ebx+104], ecx
  0003d	89 4b 6c	 mov	 DWORD PTR [ebx+108], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00040	8b cf		 mov	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 109  : 	m_CurCoordinate.m_sTerrainCoordX = -1;

  00042	66 89 43 74	 mov	 WORD PTR [ebx+116], ax

; 110  : 	m_CurCoordinate.m_sTerrainCoordY = -1;

  00046	66 89 43 76	 mov	 WORD PTR [ebx+118], ax

; 111  : 	m_PrevCoordinate.m_sTerrainCoordX = -1;

  0004a	66 89 83 80 00
	00 00		 mov	 WORD PTR [ebx+128], ax

; 112  : 	m_PrevCoordinate.m_sTerrainCoordY = -1;

  00051	66 89 83 82 00
	00 00		 mov	 WORD PTR [ebx+130], ax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  00058	8b 37		 mov	 esi, DWORD PTR [edi]

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  0005a	ff 76 04	 push	 DWORD PTR [esi+4]
  0005d	57		 push	 edi
  0005e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >

; 1449 :         _Head->_Parent  = _Head;

  00063	89 76 04	 mov	 DWORD PTR [esi+4], esi
  00066	0f 57 c0	 xorps	 xmm0, xmm0

; 1450 :         _Head->_Left    = _Head;

  00069	89 36		 mov	 DWORD PTR [esi], esi

; 1451 :         _Head->_Right   = _Head;

  0006b	89 76 08	 mov	 DWORD PTR [esi+8], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 102  : 	m_pTerrainPatchProxyList = NULL;

  0006e	8d b3 9c 00 00
	00		 lea	 esi, DWORD PTR [ebx+156]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1452 :         _Scary->_Mysize = 0;

  00074	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 102  : 	m_pTerrainPatchProxyList = NULL;

  0007b	bf 03 00 00 00	 mov	 edi, 3

; 115  : 
; 116  : 	m_lCenterX = m_lCenterY = 0;

  00080	c7 83 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+264], 0
  0008a	c7 83 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+260], 0

; 117  : 	m_lOldReadX = m_lOldReadY = -1;

  00094	c7 83 10 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+272], -1
  0009e	c7 83 0c 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+268], -1

; 118  : 
; 119  : #ifdef WORLD_EDITOR
; 120  : 	m_pwIndices = NULL;
; 121  : #else
; 122  : 	memset(m_pwaIndices, 0, sizeof(m_pwaIndices));

  000a8	66 0f d6 83 90
	00 00 00	 movq	 QWORD PTR [ebx+144], xmm0
  000b0	c7 83 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+152], 0
  000ba	66 0f 1f 44 00
	00		 npad	 6
$LL7@Initialize:

; 123  : 	for (i = 0; i < TERRAINPATCH_LODMAX; ++i)
; 124  : 		m_IndexBuffer[i].Destroy();

  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?Destroy@CGraphicIndexBuffer@@QAEXXZ ; CGraphicIndexBuffer::Destroy
  000c7	83 c6 14	 add	 esi, 20			; 00000014H
  000ca	83 ef 01	 sub	 edi, 1
  000cd	75 f1		 jne	 SHORT $LL7@Initialize

; 125  : #endif
; 126  : 
; 127  : 	m_bSettingTerrainVisible = false;
; 128  : 	m_bDrawWireFrame	= false;
; 129  : 	m_bDrawShadow		= false;
; 130  : 	m_bDrawChrShadow	= false;
; 131  : 
; 132  : 	m_iSplatLimit = 50000;
; 133  : 
; 134  : 	m_wPatchCount = 0;

  000cf	33 c0		 xor	 eax, eax
  000d1	c6 83 ac 13 00
	00 00		 mov	 BYTE PTR [ebx+5036], 0
  000d8	66 89 83 8c 00
	00 00		 mov	 WORD PTR [ebx+140], ax

; 175  : 	InitializeFog();

  000df	8b cb		 mov	 ecx, ebx
  000e1	89 83 14 01 00
	00		 mov	 DWORD PTR [ebx+276], eax
  000e7	89 83 d4 01 00
	00		 mov	 DWORD PTR [ebx+468], eax
  000ed	89 83 d8 01 00
	00		 mov	 DWORD PTR [ebx+472], eax
  000f3	89 83 dc 01 00
	00		 mov	 DWORD PTR [ebx+476], eax
  000f9	89 83 fc 01 00
	00		 mov	 DWORD PTR [ebx+508], eax
  000ff	89 83 00 02 00
	00		 mov	 DWORD PTR [ebx+512], eax
  00105	89 83 8c 09 00
	00		 mov	 DWORD PTR [ebx+2444], eax
  0010b	89 83 88 09 00
	00		 mov	 DWORD PTR [ebx+2440], eax
  00111	8b 83 18 09 00
	00		 mov	 eax, DWORD PTR [ebx+2328]
  00117	89 83 1c 09 00
	00		 mov	 DWORD PTR [ebx+2332], eax
  0011d	8b 83 24 09 00
	00		 mov	 eax, DWORD PTR [ebx+2340]
  00123	89 83 28 09 00
	00		 mov	 DWORD PTR [ebx+2344], eax
  00129	8b 83 30 09 00
	00		 mov	 eax, DWORD PTR [ebx+2352]
  0012f	89 83 34 09 00
	00		 mov	 DWORD PTR [ebx+2356], eax
  00135	8b 83 3c 09 00
	00		 mov	 eax, DWORD PTR [ebx+2364]
  0013b	89 83 40 09 00
	00		 mov	 DWORD PTR [ebx+2368], eax
  00141	8b 83 4c 09 00
	00		 mov	 eax, DWORD PTR [ebx+2380]
  00147	89 83 50 09 00
	00		 mov	 DWORD PTR [ebx+2384], eax
  0014d	8b 83 58 09 00
	00		 mov	 eax, DWORD PTR [ebx+2392]
  00153	89 83 5c 09 00
	00		 mov	 DWORD PTR [ebx+2396], eax
  00159	8b 83 64 09 00
	00		 mov	 eax, DWORD PTR [ebx+2404]
  0015f	89 83 68 09 00
	00		 mov	 DWORD PTR [ebx+2408], eax
  00165	8b 83 70 09 00
	00		 mov	 eax, DWORD PTR [ebx+2416]
  0016b	89 83 74 09 00
	00		 mov	 DWORD PTR [ebx+2420], eax
  00171	8b 83 18 01 00
	00		 mov	 eax, DWORD PTR [ebx+280]
  00177	66 89 bb 30 01
	00 00		 mov	 WORD PTR [ebx+304], di
  0017e	c6 83 32 01 00
	00 00		 mov	 BYTE PTR [ebx+306], 0
  00185	c7 83 9c 09 00
	00 50 c3 00 00	 mov	 DWORD PTR [ebx+2460], 50000 ; 0000c350H
  0018f	c7 83 24 0a 00
	00 00 00 c8 43	 mov	 DWORD PTR [ebx+2596], 1137180672 ; 43c80000H
  00199	89 83 1c 01 00
	00		 mov	 DWORD PTR [ebx+284], eax
  0019f	89 bb e8 0d 00
	00		 mov	 DWORD PTR [ebx+3560], edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  001a5	89 bb 80 07 00
	00		 mov	 DWORD PTR [ebx+1920], edi
  001ab	89 bb 7c 07 00
	00		 mov	 DWORD PTR [ebx+1916], edi
  001b1	89 bb 78 07 00
	00		 mov	 DWORD PTR [ebx+1912], edi
  001b7	89 bb 74 07 00
	00		 mov	 DWORD PTR [ebx+1908], edi
  001bd	89 bb 6c 07 00
	00		 mov	 DWORD PTR [ebx+1900], edi
  001c3	89 bb 68 07 00
	00		 mov	 DWORD PTR [ebx+1896], edi
  001c9	89 bb 64 07 00
	00		 mov	 DWORD PTR [ebx+1892], edi
  001cf	89 bb 60 07 00
	00		 mov	 DWORD PTR [ebx+1888], edi
  001d5	89 bb 58 07 00
	00		 mov	 DWORD PTR [ebx+1880], edi
  001db	89 bb 54 07 00
	00		 mov	 DWORD PTR [ebx+1876], edi
  001e1	89 bb 50 07 00
	00		 mov	 DWORD PTR [ebx+1872], edi
  001e7	89 bb 4c 07 00
	00		 mov	 DWORD PTR [ebx+1868], edi

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  001ed	c7 83 84 07 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+1924], 1065353216 ; 3f800000H
  001f7	c7 83 70 07 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+1904], 1065353216 ; 3f800000H
  00201	c7 83 5c 07 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+1884], 1065353216 ; 3f800000H
  0020b	c7 83 48 07 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+1864], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 175  : 	InitializeFog();

  00215	e8 00 00 00 00	 call	 ?InitializeFog@CMapOutdoor@@IAEXXZ ; CMapOutdoor::InitializeFog

; 176  : 	InitializeVisibleParts();

  0021a	8b cb		 mov	 ecx, ebx
  0021c	e8 00 00 00 00	 call	 ?InitializeVisibleParts@CMapOutdoor@@IAEXXZ ; CMapOutdoor::InitializeVisibleParts
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00221	57		 push	 edi
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 181  : 	m_settings_envDataName = "";

  00227	8d 8b 7c 13 00
	00		 lea	 ecx, DWORD PTR [ebx+4988]
  0022d	89 bb a0 0e 00
	00		 mov	 DWORD PTR [ebx+3744], edi
  00233	89 bb a4 0e 00
	00		 mov	 DWORD PTR [ebx+3748], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00239	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 185  : 	CMapBase::Clear();

  0023e	8b cb		 mov	 ecx, ebx
  00240	66 c7 83 b4 0e
	00 00 00 01	 mov	 WORD PTR [ebx+3764], 256 ; 00000100H
  00249	e8 00 00 00 00	 call	 ?Clear@CMapBase@@UAEXXZ	; CMapBase::Clear

; 186  : 
; 187  : 	__XMasTree_Initialize();

  0024e	8b cb		 mov	 ecx, ebx
  00250	e8 00 00 00 00	 call	 ?__XMasTree_Initialize@CMapOutdoor@@AAEXXZ ; CMapOutdoor::__XMasTree_Initialize

; 188  : 	SpecialEffect_Destroy();

  00255	8b cb		 mov	 ecx, ebx
  00257	e8 00 00 00 00	 call	 ?SpecialEffect_Destroy@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SpecialEffect_Destroy

; 189  : 
; 190  : 	m_bEnableTerrainOnlyForHeight = FALSE;

  0025c	66 89 bb b6 0e
	00 00		 mov	 WORD PTR [ebx+3766], di

; 191  : 	m_bEnablePortal = FALSE;
; 192  : 
; 193  : 	m_wShadowMapSize = 512;

  00263	b8 00 02 00 00	 mov	 eax, 512		; 00000200H

; 194  : 	return true;

  00268	5f		 pop	 edi
  00269	66 89 83 f8 01
	00 00		 mov	 WORD PTR [ebx+504], ax
  00270	b0 01		 mov	 al, 1
  00272	5e		 pop	 esi
  00273	5b		 pop	 ebx

; 195  : }

  00274	c3		 ret	 0
?Initialize@CMapOutdoor@@MAE_NXZ ENDP			; CMapOutdoor::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?OnBeginEnvironment@CMapOutdoor@@UAEXXZ
_TEXT	SEGMENT
?OnBeginEnvironment@CMapOutdoor@@UAEXXZ PROC		; CMapOutdoor::OnBeginEnvironment, COMDAT
; _this$ = ecx

; 247  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 248  : 	if (!mc_pEnvironmentData)

  00003	8b 4f 3c	 mov	 ecx, DWORD PTR [edi+60]
  00006	85 c9		 test	 ecx, ecx
  00008	74 58		 je	 SHORT $LN1@OnBeginEnv

; 249  : 		return;
; 250  : 
; 251  : 	CSpeedTreeForestDirectX8& rkForest=CSpeedTreeForestDirectX8::Instance();

  0000a	56		 push	 esi
  0000b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton

; 252  : 	rkForest.SetFog(

  00011	e8 00 00 00 00	 call	 ?GetFogFarDistance@SEnvironmentData@@QBEMXZ ; SEnvironmentData::GetFogFarDistance
  00016	51		 push	 ecx
  00017	8b 4f 3c	 mov	 ecx, DWORD PTR [edi+60]
  0001a	d9 1c 24	 fstp	 DWORD PTR [esp]
  0001d	e8 00 00 00 00	 call	 ?GetFogNearDistance@SEnvironmentData@@QBEMXZ ; SEnvironmentData::GetFogNearDistance
  00022	51		 push	 ecx
  00023	8b ce		 mov	 ecx, esi
  00025	d9 1c 24	 fstp	 DWORD PTR [esp]
  00028	e8 00 00 00 00	 call	 ?SetFog@CSpeedTreeForest@@QAEXMM@Z ; CSpeedTreeForest::SetFog

; 253  : 		mc_pEnvironmentData->GetFogNearDistance(),
; 254  : 		mc_pEnvironmentData->GetFogFarDistance()
; 255  : 	);
; 256  : 
; 257  : 	const D3DLIGHT8& c_rkLight = mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_CHARACTER];

  0002d	8b 57 3c	 mov	 edx, DWORD PTR [edi+60]

; 258  : 	rkForest.SetLight(

  00030	8b ce		 mov	 ecx, esi
  00032	8d 42 74	 lea	 eax, DWORD PTR [edx+116]
  00035	50		 push	 eax
  00036	8d 82 94 00 00
	00		 lea	 eax, DWORD PTR [edx+148]
  0003c	50		 push	 eax
  0003d	8d 82 b0 00 00
	00		 lea	 eax, DWORD PTR [edx+176]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?SetLight@CSpeedTreeForest@@QAEXPBM00@Z ; CSpeedTreeForest::SetLight

; 259  : 		(const float *)&c_rkLight.Direction,
; 260  : 		(const float *)&c_rkLight.Ambient,
; 261  : 		(const float *)&c_rkLight.Diffuse);
; 262  : 
; 263  : 	rkForest.SetWindStrength(mc_pEnvironmentData->fWindStrength);

  00049	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  0004c	51		 push	 ecx
  0004d	8b ce		 mov	 ecx, esi
  0004f	f3 0f 10 80 54
	01 00 00	 movss	 xmm0, DWORD PTR [eax+340]
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	e8 00 00 00 00	 call	 ?SetWindStrength@CSpeedTreeForest@@QAEXM@Z ; CSpeedTreeForest::SetWindStrength
  00061	5e		 pop	 esi
$LN1@OnBeginEnv:

; 264  : }

  00062	5f		 pop	 edi
  00063	c3		 ret	 0
?OnBeginEnvironment@CMapOutdoor@@UAEXXZ ENDP		; CMapOutdoor::OnBeginEnvironment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ??1CMapOutdoor@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMapOutdoor@@UAE@XZ PROC				; CMapOutdoor::~CMapOutdoor, COMDAT
; _this$ = ecx

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMapOutdoor@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMapOutdoor@@6B@

; 86   : 	__SoftwareTransformPatch_Destroy();

  0002c	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_Destroy@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_Destroy

; 87   : 
; 88   : 	// 2004.10.14.myevan.TEMP_CAreaLoaderThread
; 89   : 	//ms_AreaLoaderThread.Shutdown();
; 90   : 	Destroy();

  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?Destroy@CMapOutdoor@@MAE_NXZ ; CMapOutdoor::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00038	8b 86 a8 13 00
	00		 mov	 eax, DWORD PTR [esi+5032]

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0003e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00041	72 10		 jb	 SHORT $LN7@CMapOutdoo

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00043	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00044	50		 push	 eax
  00045	ff b6 94 13 00
	00		 push	 DWORD PTR [esi+5012]
  0004b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00050	83 c4 08	 add	 esp, 8
$LN7@CMapOutdoo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00053	c7 86 a4 13 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+5028], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0005d	c7 86 a8 13 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+5032], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00067	c6 86 94 13 00
	00 00		 mov	 BYTE PTR [esi+5012], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0006e	8b 86 90 13 00
	00		 mov	 eax, DWORD PTR [esi+5008]

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00074	83 f8 10	 cmp	 eax, 16			; 00000010H
  00077	72 10		 jb	 SHORT $LN17@CMapOutdoo

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00079	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	50		 push	 eax
  0007b	ff b6 7c 13 00
	00		 push	 DWORD PTR [esi+4988]
  00081	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00086	83 c4 08	 add	 esp, 8
$LN17@CMapOutdoo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00089	c7 86 8c 13 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+5004], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00093	c7 86 90 13 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+5008], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009d	c6 86 7c 13 00
	00 00		 mov	 BYTE PTR [esi+4988], 0
  000a4	68 00 00 00 00	 push	 OFFSET ??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::~vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
  000a9	6a 64		 push	 100			; 00000064H
  000ab	6a 0c		 push	 12			; 0000000cH
  000ad	8d 86 c8 0e 00
	00		 lea	 eax, DWORD PTR [esi+3784]
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 91   : }

  000c0	8d 8e c0 0e 00
	00		 lea	 ecx, DWORD PTR [esi+3776]
  000c6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cd	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,int,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,int> >,0> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  000d2	8b 8e 90 0e 00
	00		 mov	 ecx, DWORD PTR [esi+3728]
  000d8	85 c9		 test	 ecx, ecx
  000da	74 33		 je	 SHORT $LN32@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000dc	8b 86 98 0e 00
	00		 mov	 eax, DWORD PTR [esi+3736]
  000e2	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e4	83 e0 fc	 and	 eax, -4			; fffffffcH
  000e7	50		 push	 eax
  000e8	51		 push	 ecx
  000e9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  000ee	c7 86 90 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+3728], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  000fb	c7 86 94 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+3732], 0

; 1699 :             _Myend   = pointer();

  00105	c7 86 98 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+3736], 0
$LN32@CMapOutdoo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 91   : }

  0010f	8d 8e 6c 0e 00
	00		 lea	 ecx, DWORD PTR [esi+3692]
  00115	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ ; CDynamicPool<CMonsterAreaInfo>::~CDynamicPool<CMonsterAreaInfo>
  0011a	8d 8e 0c 0e 00
	00		 lea	 ecx, DWORD PTR [esi+3596]
  00120	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00125	8d 8e ec 0d 00
	00		 lea	 ecx, DWORD PTR [esi+3564]
  0012b	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00130	68 00 00 00 00	 push	 OFFSET ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00135	6a 1e		 push	 30			; 0000001eH
  00137	6a 20		 push	 32			; 00000020H
  00139	8d 86 28 0a 00
	00		 lea	 eax, DWORD PTR [esi+2600]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00145	8b 8e 18 0a 00
	00		 mov	 ecx, DWORD PTR [esi+2584]
  0014b	85 c9		 test	 ecx, ecx
  0014d	74 33		 je	 SHORT $LN39@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0014f	8b 86 20 0a 00
	00		 mov	 eax, DWORD PTR [esi+2592]
  00155	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00157	83 e0 fc	 and	 eax, -4			; fffffffcH
  0015a	50		 push	 eax
  0015b	51		 push	 ecx
  0015c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00161	c7 86 18 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2584], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0016b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0016e	c7 86 1c 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2588], 0

; 1699 :             _Myend   = pointer();

  00178	c7 86 20 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2592], 0
$LN39@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00182	8b 8e 0c 0a 00
	00		 mov	 ecx, DWORD PTR [esi+2572]
  00188	85 c9		 test	 ecx, ecx
  0018a	74 33		 je	 SHORT $LN46@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0018c	8b 86 14 0a 00
	00		 mov	 eax, DWORD PTR [esi+2580]
  00192	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00194	83 e0 fc	 and	 eax, -4			; fffffffcH
  00197	50		 push	 eax
  00198	51		 push	 ecx
  00199	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0019e	c7 86 0c 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2572], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  001ab	c7 86 10 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2576], 0

; 1699 :             _Myend   = pointer();

  001b5	c7 86 14 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2580], 0
$LN46@CMapOutdoo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  001bf	8b 8e b8 09 00
	00		 mov	 ecx, DWORD PTR [esi+2488]

; 324  :         _Head->_Prev->_Next = nullptr;

  001c5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001c8	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  001ce	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  001d0	85 c0		 test	 eax, eax
  001d2	74 13		 je	 SHORT $LN56@CMapOutdoo
$LL57@CMapOutdoo:

; 328  :             _Pnext = _Pnode->_Next;

  001d4	8b 38		 mov	 edi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001d6	6a 18		 push	 24			; 00000018H
  001d8	50		 push	 eax
  001d9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001de	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  001e1	8b c7		 mov	 eax, edi
  001e3	85 ff		 test	 edi, edi
  001e5	75 ed		 jne	 SHORT $LL57@CMapOutdoo
$LN56@CMapOutdoo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001e7	6a 18		 push	 24			; 00000018H
  001e9	ff b6 b8 09 00
	00		 push	 DWORD PTR [esi+2488]
  001ef	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  001f4	8b 8e 90 09 00
	00		 mov	 ecx, DWORD PTR [esi+2448]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001fa	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  001fd	85 c9		 test	 ecx, ecx
  001ff	74 33		 je	 SHORT $LN72@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00201	8b 86 98 09 00
	00		 mov	 eax, DWORD PTR [esi+2456]
  00207	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00209	83 e0 fc	 and	 eax, -4			; fffffffcH
  0020c	50		 push	 eax
  0020d	51		 push	 ecx
  0020e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00213	c7 86 90 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2448], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0021d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00220	c7 86 94 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2452], 0

; 1699 :             _Myend   = pointer();

  0022a	c7 86 98 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2456], 0
$LN72@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00234	8b 8e 70 09 00
	00		 mov	 ecx, DWORD PTR [esi+2416]
  0023a	85 c9		 test	 ecx, ecx
  0023c	74 33		 je	 SHORT $LN79@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0023e	8b 86 78 09 00
	00		 mov	 eax, DWORD PTR [esi+2424]
  00244	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00246	83 e0 fc	 and	 eax, -4			; fffffffcH
  00249	50		 push	 eax
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00250	c7 86 70 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2416], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0025a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0025d	c7 86 74 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2420], 0

; 1699 :             _Myend   = pointer();

  00267	c7 86 78 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2424], 0
$LN79@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00271	8b 8e 64 09 00
	00		 mov	 ecx, DWORD PTR [esi+2404]
  00277	85 c9		 test	 ecx, ecx
  00279	74 33		 je	 SHORT $LN86@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0027b	8b 86 6c 09 00
	00		 mov	 eax, DWORD PTR [esi+2412]
  00281	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00283	83 e0 fc	 and	 eax, -4			; fffffffcH
  00286	50		 push	 eax
  00287	51		 push	 ecx
  00288	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0028d	c7 86 64 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2404], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00297	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0029a	c7 86 68 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2408], 0

; 1699 :             _Myend   = pointer();

  002a4	c7 86 6c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2412], 0
$LN86@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  002ae	8b 8e 58 09 00
	00		 mov	 ecx, DWORD PTR [esi+2392]
  002b4	85 c9		 test	 ecx, ecx
  002b6	74 33		 je	 SHORT $LN93@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002b8	8b 86 60 09 00
	00		 mov	 eax, DWORD PTR [esi+2400]
  002be	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002c0	83 e0 fc	 and	 eax, -4			; fffffffcH
  002c3	50		 push	 eax
  002c4	51		 push	 ecx
  002c5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  002ca	c7 86 58 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2392], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002d4	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  002d7	c7 86 5c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2396], 0

; 1699 :             _Myend   = pointer();

  002e1	c7 86 60 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2400], 0
$LN93@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  002eb	8b 8e 4c 09 00
	00		 mov	 ecx, DWORD PTR [esi+2380]
  002f1	85 c9		 test	 ecx, ecx
  002f3	74 33		 je	 SHORT $LN100@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002f5	8b 86 54 09 00
	00		 mov	 eax, DWORD PTR [esi+2388]
  002fb	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002fd	83 e0 fc	 and	 eax, -4			; fffffffcH
  00300	50		 push	 eax
  00301	51		 push	 ecx
  00302	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00307	c7 86 4c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2380], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00311	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00314	c7 86 50 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2384], 0

; 1699 :             _Myend   = pointer();

  0031e	c7 86 54 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2388], 0
$LN100@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00328	8b 8e 3c 09 00
	00		 mov	 ecx, DWORD PTR [esi+2364]
  0032e	85 c9		 test	 ecx, ecx
  00330	74 33		 je	 SHORT $LN107@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00332	8b 86 44 09 00
	00		 mov	 eax, DWORD PTR [esi+2372]
  00338	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0033a	83 e0 fc	 and	 eax, -4			; fffffffcH
  0033d	50		 push	 eax
  0033e	51		 push	 ecx
  0033f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00344	c7 86 3c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2364], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0034e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00351	c7 86 40 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2368], 0

; 1699 :             _Myend   = pointer();

  0035b	c7 86 44 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2372], 0
$LN107@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00365	8b 8e 30 09 00
	00		 mov	 ecx, DWORD PTR [esi+2352]
  0036b	85 c9		 test	 ecx, ecx
  0036d	74 33		 je	 SHORT $LN114@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0036f	8b 86 38 09 00
	00		 mov	 eax, DWORD PTR [esi+2360]
  00375	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00377	83 e0 fc	 and	 eax, -4			; fffffffcH
  0037a	50		 push	 eax
  0037b	51		 push	 ecx
  0037c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00381	c7 86 30 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2352], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0038b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0038e	c7 86 34 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2356], 0

; 1699 :             _Myend   = pointer();

  00398	c7 86 38 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2360], 0
$LN114@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  003a2	8b 8e 24 09 00
	00		 mov	 ecx, DWORD PTR [esi+2340]
  003a8	85 c9		 test	 ecx, ecx
  003aa	74 33		 je	 SHORT $LN121@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  003ac	8b 86 2c 09 00
	00		 mov	 eax, DWORD PTR [esi+2348]
  003b2	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003b4	83 e0 fc	 and	 eax, -4			; fffffffcH
  003b7	50		 push	 eax
  003b8	51		 push	 ecx
  003b9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  003be	c7 86 24 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2340], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003c8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  003cb	c7 86 28 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2344], 0

; 1699 :             _Myend   = pointer();

  003d5	c7 86 2c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2348], 0
$LN121@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  003df	8b 8e 18 09 00
	00		 mov	 ecx, DWORD PTR [esi+2328]
  003e5	85 c9		 test	 ecx, ecx
  003e7	74 33		 je	 SHORT $LN128@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  003e9	8b 86 20 09 00
	00		 mov	 eax, DWORD PTR [esi+2336]
  003ef	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003f1	83 e0 fc	 and	 eax, -4			; fffffffcH
  003f4	50		 push	 eax
  003f5	51		 push	 ecx
  003f6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  003fb	c7 86 18 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2328], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00405	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00408	c7 86 1c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2332], 0

; 1699 :             _Myend   = pointer();

  00412	c7 86 20 09 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2336], 0
$LN128@CMapOutdoo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 91   : }

  0041c	8d 8e 2c 07 00
	00		 lea	 ecx, DWORD PTR [esi+1836]
  00422	e8 00 00 00 00	 call	 ??1CScreenFilter@@UAE@XZ ; CScreenFilter::~CScreenFilter
  00427	8d 8e b8 06 00
	00		 lea	 ecx, DWORD PTR [esi+1720]
  0042d	e8 00 00 00 00	 call	 ??1CLensFlare@@UAE@XZ	; CLensFlare::~CLensFlare
  00432	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00438	e8 00 00 00 00	 call	 ??1CSkyBox@@UAE@XZ	; CSkyBox::~CSkyBox
  0043d	8d 8e 7c 02 00
	00		 lea	 ecx, DWORD PTR [esi+636]
  00443	e8 00 00 00 00	 call	 ??1CTextureSet@@UAE@XZ	; CTextureSet::~CTextureSet
  00448	8d 8e 74 01 00
	00		 lea	 ecx, DWORD PTR [esi+372]
  0044e	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00453	8b 8e 24 01 00
	00		 mov	 ecx, DWORD PTR [esi+292]
  00459	85 c9		 test	 ecx, ecx
  0045b	74 33		 je	 SHORT $LN135@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0045d	8b 86 2c 01 00
	00		 mov	 eax, DWORD PTR [esi+300]
  00463	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00465	83 e0 f0	 and	 eax, -16		; fffffff0H
  00468	50		 push	 eax
  00469	51		 push	 ecx
  0046a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0046f	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00479	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0047c	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0

; 1699 :             _Myend   = pointer();

  00486	c7 86 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+300], 0
$LN135@CMapOutdoo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00490	8b 8e 18 01 00
	00		 mov	 ecx, DWORD PTR [esi+280]
  00496	85 c9		 test	 ecx, ecx
  00498	74 33		 je	 SHORT $LN142@CMapOutdoo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0049a	8b 86 20 01 00
	00		 mov	 eax, DWORD PTR [esi+288]
  004a0	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004a2	83 e0 f8	 and	 eax, -8			; fffffff8H
  004a5	50		 push	 eax
  004a6	51		 push	 ecx
  004a7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  004ac	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004b6	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  004b9	c7 86 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+284], 0

; 1699 :             _Myend   = pointer();

  004c3	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
$LN142@CMapOutdoo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 91   : }

  004cd	68 00 00 00 00	 push	 OFFSET ??1CGraphicIndexBuffer@@UAE@XZ ; CGraphicIndexBuffer::~CGraphicIndexBuffer
  004d2	6a 03		 push	 3
  004d4	6a 14		 push	 20			; 00000014H
  004d6	8d 86 9c 00 00
	00		 lea	 eax, DWORD PTR [esi+156]
  004dc	50		 push	 eax
  004dd	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  004e2	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 91   : }

  004e8	8d be 84 00 00
	00		 lea	 edi, DWORD PTR [esi+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  004ee	8b cf		 mov	 ecx, edi
  004f0	ff 70 04	 push	 DWORD PTR [eax+4]
  004f3	57		 push	 edi
  004f4	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  004f9	6a 2c		 push	 44			; 0000002cH
  004fb	ff 37		 push	 DWORD PTR [edi]
  004fd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00502	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 91   : }

  00505	8b ce		 mov	 ecx, esi
  00507	e8 00 00 00 00	 call	 ??1CMapBase@@UAE@XZ	; CMapBase::~CMapBase
  0050c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0050f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00516	59		 pop	 ecx
  00517	5f		 pop	 edi
  00518	5e		 pop	 esi
  00519	8b e5		 mov	 esp, ebp
  0051b	5d		 pop	 ebp
  0051c	c3		 ret	 0
  0051d	cc		 int	 3
  0051e	cc		 int	 3
  0051f	cc		 int	 3
  00520	cc		 int	 3
  00521	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMapOutdoor@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMapOutdoor@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMapOutdoor@@UAE@XZ ENDP				; CMapOutdoor::~CMapOutdoor
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ??0CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__Newhead$3 = -16					; size = 4
__Pnode$4 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMapOutdoor@@QAE@XZ PROC				; CMapOutdoor::CMapOutdoor, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CMapOutdoor@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$[ebp], ebx
  0002d	e8 00 00 00 00	 call	 ??0CMapBase@@QAE@XZ	; CMapBase::CMapBase
  00032	8d bb 84 00 00
	00		 lea	 edi, DWORD PTR [ebx+132]
  00038	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CMapOutdoor@@6B@
  0003e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00041	6a 2c		 push	 44			; 0000002cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00050	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0005c	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0005e	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$4[ebp]
  00061	50		 push	 eax
  00062	56		 push	 esi
  00063	89 75 f0	 mov	 DWORD PTR __Pnode$4[ebp], esi
  00066	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006b	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$4[ebp]
  0006e	50		 push	 eax
  0006f	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00078	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$4[ebp]
  0007b	50		 push	 eax
  0007c	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,SOutdoorMapCoordinate>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00085	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  0008b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0008e	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  00090	68 00 00 00 00	 push	 OFFSET ??1CGraphicIndexBuffer@@UAE@XZ ; CGraphicIndexBuffer::~CGraphicIndexBuffer
  00095	68 00 00 00 00	 push	 OFFSET ??0CGraphicIndexBuffer@@QAE@XZ ; CGraphicIndexBuffer::CGraphicIndexBuffer
  0009a	6a 03		 push	 3
  0009c	6a 14		 push	 20			; 00000014H
  0009e	8d 83 9c 00 00
	00		 lea	 eax, DWORD PTR [ebx+156]
  000a4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000ae	c7 83 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+280], 0
  000b8	c7 83 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+284], 0
  000c2	c7 83 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+288], 0
  000cc	c7 83 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+292], 0
  000d6	c7 83 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+296], 0
  000e0	c7 83 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+300], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  000ea	8d 8b 74 01 00
	00		 lea	 ecx, DWORD PTR [ebx+372]
  000f0	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000f4	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  000f9	8d 8b 7c 02 00
	00		 lea	 ecx, DWORD PTR [ebx+636]
  000ff	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00103	e8 00 00 00 00	 call	 ??0CTextureSet@@QAE@XZ	; CTextureSet::CTextureSet
  00108	8d 8b 38 03 00
	00		 lea	 ecx, DWORD PTR [ebx+824]
  0010e	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00112	e8 00 00 00 00	 call	 ??0CSkyBox@@QAE@XZ	; CSkyBox::CSkyBox
  00117	8d 8b b8 06 00
	00		 lea	 ecx, DWORD PTR [ebx+1720]
  0011d	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00121	e8 00 00 00 00	 call	 ??0CLensFlare@@QAE@XZ	; CLensFlare::CLensFlare
  00126	8d 8b 2c 07 00
	00		 lea	 ecx, DWORD PTR [ebx+1836]
  0012c	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00130	e8 00 00 00 00	 call	 ??0CScreenFilter@@QAE@XZ ; CScreenFilter::CScreenFilter
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00135	c7 83 18 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2328], 0
  0013f	c7 83 1c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2332], 0
  00149	c7 83 20 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2336], 0
  00153	c7 83 24 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2340], 0
  0015d	c7 83 28 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2344], 0
  00167	c7 83 2c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2348], 0
  00171	c7 83 30 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2352], 0
  0017b	c7 83 34 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2356], 0
  00185	c7 83 38 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2360], 0
  0018f	c7 83 3c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2364], 0
  00199	c7 83 40 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2368], 0
  001a3	c7 83 44 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2372], 0

; 40   :     _Vector_const_iterator() noexcept : _Ptr() {}

  001ad	c7 83 48 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2376], 0

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  001b7	c7 83 4c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2380], 0
  001c1	c7 83 50 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2384], 0
  001cb	c7 83 54 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2388], 0
  001d5	c7 83 58 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2392], 0
  001df	c7 83 5c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2396], 0
  001e9	c7 83 60 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2400], 0
  001f3	c7 83 64 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2404], 0
  001fd	c7 83 68 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2408], 0
  00207	c7 83 6c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2412], 0
  00211	c7 83 70 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2416], 0
  0021b	c7 83 74 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2420], 0
  00225	c7 83 78 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2424], 0

; 40   :     _Vector_const_iterator() noexcept : _Ptr() {}

  0022f	c7 83 7c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2428], 0

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00239	c7 83 90 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2448], 0
  00243	c7 83 94 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2452], 0
  0024d	c7 83 98 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2456], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00257	6a 18		 push	 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  00259	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  0025d	c7 83 b8 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2488], 0
  00267	c7 83 bc 09 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2492], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00271	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  00276	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00278	8d 45 f0	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  0027b	50		 push	 eax
  0027c	56		 push	 esi
  0027d	89 75 f0	 mov	 DWORD PTR __Newhead$3[ebp], esi
  00280	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00285	8d 45 f0	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  00288	50		 push	 eax
  00289	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0028c	51		 push	 ecx
  0028d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UtagRECT@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@UtagRECT@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<tagRECT,void *> *,std::_List_node<tagRECT,void *> * &>
  00292	83 c4 14	 add	 esp, 20			; 00000014H

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  00295	89 b3 b8 09 00
	00		 mov	 DWORD PTR [ebx+2488], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0029b	c7 83 0c 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2572], 0
  002a5	c7 83 10 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2576], 0
  002af	c7 83 14 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2580], 0
  002b9	c7 83 18 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2584], 0
  002c3	c7 83 1c 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2588], 0
  002cd	c7 83 20 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+2592], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  002d7	68 00 00 00 00	 push	 OFFSET ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  002dc	68 00 00 00 00	 push	 OFFSET ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  002e1	6a 1e		 push	 30			; 0000001eH
  002e3	6a 20		 push	 32			; 00000020H
  002e5	8d 83 28 0a 00
	00		 lea	 eax, DWORD PTR [ebx+2600]
  002eb	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  002f5	8d 8b ec 0d 00
	00		 lea	 ecx, DWORD PTR [ebx+3564]
  002fb	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  002ff	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  00304	8d 8b 0c 0e 00
	00		 lea	 ecx, DWORD PTR [ebx+3596]
  0030a	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  0030e	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 12   : 		{

  00313	c7 83 6c 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3692], OFFSET ??_7?$CDynamicPool@VCMonsterAreaInfo@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0031d	c7 83 70 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3696], 0
  00327	c7 83 74 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3700], 0
  00331	c7 83 78 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3704], 0
  0033b	c7 83 7c 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3708], 0
  00345	c7 83 80 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3712], 0
  0034f	c7 83 84 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3716], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 14   : 			m_uInitCapacity=0;

  00359	c7 83 88 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3720], 0

; 15   : 			m_uUsedCapacity=0;

  00363	c7 83 8c 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3724], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0036d	c7 83 90 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3728], 0
  00377	c7 83 94 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3732], 0
  00381	c7 83 98 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3736], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  0038b	8d bb c0 0e 00
	00		 lea	 edi, DWORD PTR [ebx+3776]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 40   :     _Vector_const_iterator() noexcept : _Ptr() {}

  00391	c7 83 9c 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+3740], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  0039b	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0039e	6a 18		 push	 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  003a0	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  003a4	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  003aa	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  003b1	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  003b6	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  003b8	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  003bb	50		 push	 eax
  003bc	56		 push	 esi
  003bd	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  003c0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  003c5	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  003c8	50		 push	 eax
  003c9	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  003cc	51		 push	 ecx
  003cd	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  003d2	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  003d5	50		 push	 eax
  003d6	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKH@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,int>,void *> *,std::_Tree_node<std::pair<unsigned long const ,int>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  003df	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  003e5	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  003e8	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 70   : {

  003ea	8d 83 c8 0e 00
	00		 lea	 eax, DWORD PTR [ebx+3784]
  003f0	68 00 00 00 00	 push	 OFFSET ??1?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::~vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
  003f5	68 00 00 00 00	 push	 OFFSET ??0?$vector@USItem@SHeightCache@CMapOutdoor@@V?$allocator@USItem@SHeightCache@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >::vector<CMapOutdoor::SHeightCache::SItem,std::allocator<CMapOutdoor::SHeightCache::SItem> >
  003fa	6a 64		 push	 100			; 00000064H
  003fc	6a 0c		 push	 12			; 0000000cH
  003fe	50		 push	 eax
  003ff	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  00403	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00408	c7 83 8c 13 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+5004], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00412	c7 83 90 13 00
	00 0f 00 00 00	 mov	 DWORD PTR [ebx+5008], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0041c	c6 83 7c 13 00
	00 00		 mov	 BYTE PTR [ebx+4988], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00423	c7 83 a4 13 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+5028], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0042d	c7 83 a8 13 00
	00 0f 00 00 00	 mov	 DWORD PTR [ebx+5032], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00437	c6 83 94 13 00
	00 00		 mov	 BYTE PTR [ebx+5012], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp

; 71   : 	CGraphicImage * pAlphaFogImage = (CGraphicImage *) CResourceManager::Instance().GetResourcePointer("D:/ymir work/special/fog.tga");

  0043e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00444	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@FIOHACND@D?3?1ymir?5work?1special?1fog?4tga@
  00449	c6 45 fc 1f	 mov	 BYTE PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  0044d	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 72   : 	CGraphicImage * pAttrImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer("d:/ymir work/special/white.dds");

  00452	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00458	8b d8		 mov	 ebx, eax
  0045a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@JMMOMCFP@d?3?1ymir?5work?1special?1white?4dds@
  0045f	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 73   : 	CGraphicImage * pBuildTransparentImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer("d:/ymir Work/special/PCBlockerAlpha.dds");

  00464	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0046a	8b f8		 mov	 edi, eax
  0046c	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@OKIKMFPM@d?3?1ymir?5Work?1special?1PCBlockerA@
  00471	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 74   : 	m_AlphaFogImageInstance.SetImagePointer(pAlphaFogImage);

  00476	53		 push	 ebx
  00477	8b 5d ec	 mov	 ebx, DWORD PTR _this$[ebp]
  0047a	8b f0		 mov	 esi, eax
  0047c	8d 8b 74 01 00
	00		 lea	 ecx, DWORD PTR [ebx+372]
  00482	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 75   : 	m_attrImageInstance.SetImagePointer(pAttrImage);

  00487	57		 push	 edi
  00488	8d 8b ec 0d 00
	00		 lea	 ecx, DWORD PTR [ebx+3564]
  0048e	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 76   : 	m_BuildingTransparentImageInstance.SetImagePointer(pBuildTransparentImage);

  00493	56		 push	 esi
  00494	8d 8b 0c 0e 00
	00		 lea	 ecx, DWORD PTR [ebx+3596]
  0049a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 77   : 
; 78   : 	Initialize();

  0049f	8b cb		 mov	 ecx, ebx
  004a1	e8 00 00 00 00	 call	 ?Initialize@CMapOutdoor@@MAE_NXZ ; CMapOutdoor::Initialize

; 79   : 
; 80   : 	__SoftwareTransformPatch_Initialize();

  004a6	8b cb		 mov	 ecx, ebx
  004a8	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_Initialize

; 81   : 	__SoftwareTransformPatch_Create();

  004ad	8b cb		 mov	 ecx, ebx
  004af	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_Create@CMapOutdoor@@IAE_NXZ ; CMapOutdoor::__SoftwareTransformPatch_Create

; 82   : }

  004b4	8b c3		 mov	 eax, ebx
  004b6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004c0	59		 pop	 ecx
  004c1	5f		 pop	 edi
  004c2	5e		 pop	 esi
  004c3	5b		 pop	 ebx
  004c4	8b e5		 mov	 esp, ebp
  004c6	5d		 pop	 ebp
  004c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMapBase@@UAE@XZ	; CMapBase::~CMapBase
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@U?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@USOutdoorMapCoordinate@@@std@@@2@@std@@QAE@XZ
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$2:
  00016	68 00 00 00 00	 push	 OFFSET ??1CGraphicIndexBuffer@@UAE@XZ ; CGraphicIndexBuffer::~CGraphicIndexBuffer
  0001b	6a 03		 push	 3
  0001d	6a 14		 push	 20			; 00000014H
  0001f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00022	05 9c 00 00 00	 add	 eax, 156		; 0000009cH
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0002d	c3		 ret	 0
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$3:
  0002e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 18 01 00
	00		 add	 ecx, 280		; 00000118H
  00037	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::~vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$4:
  0003c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	81 c1 24 01 00
	00		 add	 ecx, 292		; 00000124H
  00045	e9 00 00 00 00	 jmp	 ??1?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAE@XZ ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::~vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$5:
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	81 c1 74 01 00
	00		 add	 ecx, 372		; 00000174H
  00053	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$6:
  00058	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 7c 02 00
	00		 add	 ecx, 636		; 0000027cH
  00061	e9 00 00 00 00	 jmp	 ??1CTextureSet@@UAE@XZ	; CTextureSet::~CTextureSet
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$7:
  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0006f	e9 00 00 00 00	 jmp	 ??1CSkyBox@@UAE@XZ	; CSkyBox::~CSkyBox
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$8:
  00074	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	81 c1 b8 06 00
	00		 add	 ecx, 1720		; 000006b8H
  0007d	e9 00 00 00 00	 jmp	 ??1CLensFlare@@UAE@XZ	; CLensFlare::~CLensFlare
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$9:
  00082	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	81 c1 2c 07 00
	00		 add	 ecx, 1836		; 0000072cH
  0008b	e9 00 00 00 00	 jmp	 ??1CScreenFilter@@UAE@XZ ; CScreenFilter::~CScreenFilter
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$10:
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	81 c1 18 09 00
	00		 add	 ecx, 2328		; 00000918H
  00099	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$11:
  0009e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	81 c1 24 09 00
	00		 add	 ecx, 2340		; 00000924H
  000a7	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$12:
  000ac	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	81 c1 30 09 00
	00		 add	 ecx, 2352		; 00000930H
  000b5	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$13:
  000ba	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	81 c1 3c 09 00
	00		 add	 ecx, 2364		; 0000093cH
  000c3	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAE@XZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::~vector<CTerrain *,std::allocator<CTerrain *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$14:
  000c8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	81 c1 4c 09 00
	00		 add	 ecx, 2380		; 0000094cH
  000d1	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$15:
  000d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	81 c1 58 09 00
	00		 add	 ecx, 2392		; 00000958H
  000df	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$16:
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	81 c1 64 09 00
	00		 add	 ecx, 2404		; 00000964H
  000ed	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$17:
  000f2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	81 c1 70 09 00
	00		 add	 ecx, 2416		; 00000970H
  000fb	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAE@XZ ; std::vector<CArea *,std::allocator<CArea *> >::~vector<CArea *,std::allocator<CArea *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$18:
  00100	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	81 c1 90 09 00
	00		 add	 ecx, 2448		; 00000990H
  00109	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$19:
  0010e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	81 c1 b8 09 00
	00		 add	 ecx, 2488		; 000009b8H
  00117	e9 00 00 00 00	 jmp	 ??1?$list@UtagRECT@@V?$allocator@UtagRECT@@@std@@@std@@QAE@XZ ; std::list<tagRECT,std::allocator<tagRECT> >::~list<tagRECT,std::allocator<tagRECT> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$20:
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	81 c1 0c 0a 00
	00		 add	 ecx, 2572		; 00000a0cH
  00125	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$21:
  0012a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	81 c1 18 0a 00
	00		 add	 ecx, 2584		; 00000a18H
  00133	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$22:
  00138	68 00 00 00 00	 push	 OFFSET ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0013d	6a 1e		 push	 30			; 0000001eH
  0013f	6a 20		 push	 32			; 00000020H
  00141	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00144	05 28 0a 00 00	 add	 eax, 2600		; 00000a28H
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0014f	c3		 ret	 0
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$23:
  00150	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	81 c1 ec 0d 00
	00		 add	 ecx, 3564		; 00000decH
  00159	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$24:
  0015e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	81 c1 0c 0e 00
	00		 add	 ecx, 3596		; 00000e0cH
  00167	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$25:
  0016c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	81 c1 6c 0e 00
	00		 add	 ecx, 3692		; 00000e6cH
  00175	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCMonsterAreaInfo@@@@UAE@XZ ; CDynamicPool<CMonsterAreaInfo>::~CDynamicPool<CMonsterAreaInfo>
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$26:
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 90 0e 00
	00		 add	 ecx, 3728		; 00000e90H
  00183	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAE@XZ ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::~vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$27:
  00188	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	81 c1 c0 0e 00
	00		 add	 ecx, 3776		; 00000ec0H
  00191	e9 00 00 00 00	 jmp	 ??1?$map@KHU?$less@K@std@@V?$allocator@U?$pair@$$CBKH@std@@@2@@std@@QAE@XZ
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$28:
  00196	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00199	81 c1 c8 0e 00
	00		 add	 ecx, 3784		; 00000ec8H
  0019f	e9 00 00 00 00	 jmp	 ??1SHeightCache@CMapOutdoor@@QAE@XZ
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$29:
  001a4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	81 c1 7c 13 00
	00		 add	 ecx, 4988		; 0000137cH
  001ad	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CMapOutdoor@@QAE@XZ$30:
  001b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	81 c1 94 13 00
	00		 add	 ecx, 5012		; 00001394H
  001bb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001c0	cc		 int	 3
  001c1	cc		 int	 3
  001c2	cc		 int	 3
  001c3	cc		 int	 3
  001c4	cc		 int	 3
__ehhandler$??0CMapOutdoor@@QAE@XZ:
  001c5	90		 npad	 1
  001c6	90		 npad	 1
  001c7	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  001cb	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  001ce	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  001d1	33 c8		 xor	 ecx, eax
  001d3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d8	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CMapOutdoor@@QAE@XZ
  001dd	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CMapOutdoor@@QAE@XZ ENDP				; CMapOutdoor::CMapOutdoor
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@CAXXZ PROC ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@CAXXZ ENDP ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::~vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCMonsterAreaInfo@@V?$allocator@PAVCMonsterAreaInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >::~vector<CMonsterAreaInfo *,std::allocator<CMonsterAreaInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_ECTerrainPatchProxy@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECTerrainPatchProxy@@UAEPAXI@Z PROC			; CTerrainPatchProxy::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECTerrainPatchProxy@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b d8		 mov	 ebx, eax
  0002c	83 e3 01	 and	 ebx, 1
  0002f	a8 02		 test	 al, 2
  00031	74 49		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CTerrainPatchProxy@@UAE@XZ ; CTerrainPatchProxy::~CTerrainPatchProxy
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	6a 1c		 push	 28			; 0000001cH
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 db		 test	 ebx, ebx
  00048	74 1c		 je	 SHORT $LN3@vector
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	8d 14 cd 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*8]
  00053	2b d1		 sub	 edx, ecx
  00055	8d 0c 95 04 00
	00 00		 lea	 ecx, DWORD PTR [edx*4+4]
  0005c	51		 push	 ecx
  0005d	57		 push	 edi
  0005e	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00063	83 c4 08	 add	 esp, 8
$LN3@vector:
  00066	8b c7		 mov	 eax, edi
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
$LN2@vector:
  0007c	e8 00 00 00 00	 call	 ??1CTerrainPatchProxy@@UAE@XZ ; CTerrainPatchProxy::~CTerrainPatchProxy
  00081	85 db		 test	 ebx, ebx
  00083	74 0b		 je	 SHORT $LN4@vector
  00085	6a 1c		 push	 28			; 0000001cH
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008d	83 c4 08	 add	 esp, 8
$LN4@vector:
  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
  000a9	cc		 int	 3
  000aa	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECTerrainPatchProxy@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECTerrainPatchProxy@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECTerrainPatchProxy@@UAEPAXI@Z ENDP			; CTerrainPatchProxy::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QAE@XZ PROC ; std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QAE@XZ ENDP ; std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 14		 push	 20			; 00000014H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 14		 push	 20			; 00000014H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSpherePackCallback@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSpherePackCallback@@UAEPAXI@Z PROC			; SpherePackCallback::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSpherePackCallback@@UAEPAXI@Z ENDP			; SpherePackCallback::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_searchpos$ = 8						; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::PointTest2dCallback, COMDAT
; _this$ = ecx

; 79   : 	{};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_searchpos$ = 8						; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::RangeTestCallback, COMDAT
; _this$ = ecx

; 74   : 	{};

  00000	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; SpherePackCallback::RayTraceCallback, COMDAT
; _this$ = ecx

; 68   : 	{};

  00000	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; SpherePackCallback::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::VisibilityCallback, COMDAT
; _this$ = ecx

; 61   : 	{};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ??1SpherePackCallback@@UAE@XZ
_TEXT	SEGMENT
??1SpherePackCallback@@UAE@XZ PROC			; SpherePackCallback::~SpherePackCallback, COMDAT
; _this$ = ecx

; 56   : 	virtual ~SpherePackCallback() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1SpherePackCallback@@UAE@XZ ENDP			; SpherePackCallback::~SpherePackCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXPLANE@@QAE@XZ
_TEXT	SEGMENT
??0D3DXPLANE@@QAE@XZ PROC				; D3DXPLANE::D3DXPLANE, COMDAT
; _this$ = ecx

; 377  :     D3DXPLANE() {}

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXPLANE@@QAE@XZ ENDP				; D3DXPLANE::D3DXPLANE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
