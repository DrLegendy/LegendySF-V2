; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnClear@CGraphicObjectInstance@@UAEXXZ		; CGraphicObjectInstance::OnClear
PUBLIC	?OnUpdate@CGraphicObjectInstance@@UAEXXZ	; CGraphicObjectInstance::OnUpdate
PUBLIC	?OnDeform@CGraphicObjectInstance@@UAEXXZ	; CGraphicObjectInstance::OnDeform
PUBLIC	?GetType@CDungeonBlock@@UBEHXZ			; CDungeonBlock::GetType
PUBLIC	??0CDungeonBlock@@QAE@XZ			; CDungeonBlock::CDungeonBlock
PUBLIC	??1CDungeonBlock@@UAE@XZ			; CDungeonBlock::~CDungeonBlock
PUBLIC	?Destroy@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Destroy
PUBLIC	?BuildBoundingSphere@CDungeonBlock@@QAEXXZ	; CDungeonBlock::BuildBoundingSphere
PUBLIC	?Load@CDungeonBlock@@QAE_NPBD@Z			; CDungeonBlock::Load
PUBLIC	?Intersect@CDungeonBlock@@QAE_NPAM00@Z		; CDungeonBlock::Intersect
PUBLIC	?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z ; CDungeonBlock::GetBoundBox
PUBLIC	?Update@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Update
PUBLIC	?Render@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Render
PUBLIC	?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z ; CDungeonBlock::GetBoundingSphere
PUBLIC	?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ; CDungeonBlock::OnUpdateCollisionData
PUBLIC	?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z ; CDungeonBlock::OnUpdateHeighInstance
PUBLIC	?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z	; CDungeonBlock::OnGetObjectHeight
PUBLIC	?OnRender@CDungeonBlock@@UAEXXZ			; CDungeonBlock::OnRender
PUBLIC	?OnBlendRender@CDungeonBlock@@UAEXXZ		; CDungeonBlock::OnBlendRender
PUBLIC	?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ	; CDungeonBlock::OnRenderToShadowMap
PUBLIC	?OnRenderShadow@CDungeonBlock@@UAEXXZ		; CDungeonBlock::OnRenderShadow
PUBLIC	?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ	; CDungeonBlock::OnRenderPCBlocker
PUBLIC	?__Initialize@CDungeonBlock@@IAEXXZ		; CDungeonBlock::__Initialize
PUBLIC	??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
PUBLIC	?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
PUBLIC	??_GCDungeonBlock@@UAEPAXI@Z			; CDungeonBlock::`scalar deleting destructor'
PUBLIC	??1CDungeonModelInstance@@UAE@XZ		; CDungeonModelInstance::~CDungeonModelInstance
PUBLIC	??_GCDungeonModelInstance@@UAEPAXI@Z		; CDungeonModelInstance::`scalar deleting destructor'
PUBLIC	??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
PUBLIC	??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_7CDungeonBlock@@6B@				; CDungeonBlock::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_7CDungeonModelInstance@@6B@			; CDungeonModelInstance::`vftable'
PUBLIC	??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CDungeonModelInstance@@6B@			; CDungeonModelInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDungeonModelInstance@@@8		; CDungeonModelInstance `RTTI Type Descriptor'
PUBLIC	??_R3CDungeonModelInstance@@8			; CDungeonModelInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDungeonModelInstance@@8			; CDungeonModelInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDungeonModelInstance@@8		; CDungeonModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGrannyModelInstance@@8		; CGrannyModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGrannyModelInstance@@@8		; CGrannyModelInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyModelInstance@@8			; CGrannyModelInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyModelInstance@@8			; CGrannyModelInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	??_R4CDungeonBlock@@6B@				; CDungeonBlock::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDungeonBlock@@@8			; CDungeonBlock `RTTI Type Descriptor'
PUBLIC	??_R3CDungeonBlock@@8				; CDungeonBlock::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDungeonBlock@@8				; CDungeonBlock::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDungeonBlock@@8			; CDungeonBlock::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicObjectInstance@@8		; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicObjectInstance@@@8		; CGraphicObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@43160000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	??0CGraphicVertexBuffer@@QAE@XZ:PROC		; CGraphicVertexBuffer::CGraphicVertexBuffer
EXTRN	??1CGraphicVertexBuffer@@UAE@XZ:PROC		; CGraphicVertexBuffer::~CGraphicVertexBuffer
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetHeight@CAttributeInstance@@QAEHMMPAM@Z:PROC	; CAttributeInstance::GetHeight
EXTRN	??0CGraphicObjectInstance@@QAE@XZ:PROC		; CGraphicObjectInstance::CGraphicObjectInstance
EXTRN	??1CGraphicObjectInstance@@UAE@XZ:PROC		; CGraphicObjectInstance::~CGraphicObjectInstance
EXTRN	?Transform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Transform
EXTRN	?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ:PROC ; CGraphicObjectInstance::GetTransform
EXTRN	?OnInitialize@CGraphicObjectInstance@@UAEXXZ:PROC ; CGraphicObjectInstance::OnInitialize
EXTRN	?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z:PROC ; CGraphicObjectInstance::AddCollision
EXTRN	?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z:PROC ; CGraphicObjectInstance::SetHeightInstance
EXTRN	?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ:PROC ; CGrannyModel::GetPNTD3DVertexBuffer
EXTRN	??0CGrannyModelInstance@@QAE@XZ:PROC		; CGrannyModelInstance::CGrannyModelInstance
EXTRN	??1CGrannyModelInstance@@UAE@XZ:PROC		; CGrannyModelInstance::~CGrannyModelInstance
EXTRN	?IsEmpty@CGrannyModelInstance@@QAE_NXZ:PROC	; CGrannyModelInstance::IsEmpty
EXTRN	?Update@CGrannyModelInstance@@QAEXK@Z:PROC	; CGrannyModelInstance::Update
EXTRN	?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z:PROC ; CGrannyModelInstance::UpdateLocalTime
EXTRN	?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyModelInstance::Deform
EXTRN	?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z:PROC ; CGrannyModelInstance::SetMainModelPointer
EXTRN	?GetVertexCount@CGrannyModelInstance@@QAEKXZ:PROC ; CGrannyModelInstance::GetVertexCount
EXTRN	?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z:PROC ; CGrannyModelInstance::Intersect
EXTRN	?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGrannyModelInstance::GetBoundBox
EXTRN	?RenderMeshNodeListWithTwoTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z:PROC ; CGrannyModelInstance::RenderMeshNodeListWithTwoTexture
EXTRN	?RenderMeshNodeListWithoutTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z:PROC ; CGrannyModelInstance::RenderMeshNodeListWithoutTexture
EXTRN	?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z:PROC ; CGraphicThing::GetModelPointer
EXTRN	?GetModelCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetModelCount
EXTRN	??_ECDungeonBlock@@UAEPAXI@Z:PROC		; CDungeonBlock::`vector deleting destructor'
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	??_ECDungeonModelInstance@@UAEPAXI@Z:PROC	; CDungeonModelInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_pnt2VS@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_pnt2VS
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R2CGraphicObjectInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8 ; CGraphicObjectInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R3CGraphicObjectInstance@@8 DD 00H			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicObjectInstance@@@8
data$r	SEGMENT
??_R0?AVCGraphicObjectInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicObjectInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicObjectInstance@@8 DD FLAT:??_R0?AVCGraphicObjectInstance@@@8 ; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDungeonBlock@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDungeonBlock@@8 DD FLAT:??_R0?AVCDungeonBlock@@@8 ; CDungeonBlock::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R2CDungeonBlock@@8
rdata$r	SEGMENT
??_R2CDungeonBlock@@8 DD FLAT:??_R1A@?0A@EA@CDungeonBlock@@8 ; CDungeonBlock::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CDungeonBlock@@8
rdata$r	SEGMENT
??_R3CDungeonBlock@@8 DD 00H				; CDungeonBlock::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDungeonBlock@@@8
data$r	SEGMENT
??_R0?AVCDungeonBlock@@@8 DD FLAT:??_7type_info@@6B@	; CDungeonBlock `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDungeonBlock@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDungeonBlock@@6B@
rdata$r	SEGMENT
??_R4CDungeonBlock@@6B@ DD 00H				; CDungeonBlock::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDungeonBlock@@@8
	DD	FLAT:??_R3CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R2CGrannyModelInstance@@8 DD FLAT:??_R1A@?0A@EA@CGrannyModelInstance@@8 ; CGrannyModelInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R3CGrannyModelInstance@@8 DD 00H			; CGrannyModelInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGrannyModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyModelInstance@@@8
data$r	SEGMENT
??_R0?AVCGrannyModelInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGrannyModelInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyModelInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyModelInstance@@8 DD FLAT:??_R0?AVCGrannyModelInstance@@@8 ; CGrannyModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDungeonModelInstance@@8 DD FLAT:??_R0?AVCDungeonModelInstance@@@8 ; CDungeonModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R2CDungeonModelInstance@@8 DD FLAT:??_R1A@?0A@EA@CDungeonModelInstance@@8 ; CDungeonModelInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGrannyModelInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R3CDungeonModelInstance@@8 DD 00H			; CDungeonModelInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDungeonModelInstance@@@8
data$r	SEGMENT
??_R0?AVCDungeonModelInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CDungeonModelInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDungeonModelInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDungeonModelInstance@@6B@
rdata$r	SEGMENT
??_R4CDungeonModelInstance@@6B@ DD 00H			; CDungeonModelInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDungeonModelInstance@@@8
	DD	FLAT:??_R3CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@
CONST	SEGMENT
??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@ DB 'CDunge'
	DB	'onBlock::Load(filename=%s) - model count is %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDungeonModelInstance@@6B@
CONST	SEGMENT
??_7CDungeonModelInstance@@6B@ DD FLAT:??_R4CDungeonModelInstance@@6B@ ; CDungeonModelInstance::`vftable'
	DD	FLAT:??_ECDungeonModelInstance@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CDungeonBlock@@6B@
CONST	SEGMENT
??_7CDungeonBlock@@6B@ DD FLAT:??_R4CDungeonBlock@@6B@	; CDungeonBlock::`vftable'
	DD	FLAT:??_ECDungeonBlock@@UAEPAXI@Z
	DD	FLAT:?GetType@CDungeonBlock@@UBEHXZ
	DD	FLAT:?OnInitialize@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z
	DD	FLAT:?OnRender@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnBlendRender@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderShadow@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnClear@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnUpdate@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnDeform@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
	DD	FLAT:?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z
	DD	FLAT:?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@CDungeonBlock@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@CDungeonBlock@@QAE_NPBD@Z$0
__ehfuncinfo$?Load@CDungeonBlock@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@CDungeonBlock@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDungeonBlock@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDungeonBlock@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$1
__ehfuncinfo$??0CDungeonBlock@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDungeonBlock@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z PROC ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ??_GCDungeonModelInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDungeonModelInstance@@UAEPAXI@Z PROC		; CDungeonModelInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 		virtual ~CDungeonModelInstance() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonModelInstance@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGrannyModelInstance@@UAE@XZ ; CGrannyModelInstance::~CGrannyModelInstance
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0b		 je	 SHORT $LN7@scalar
  00017	6a 78		 push	 120			; 00000078H
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCDungeonModelInstance@@UAEPAXI@Z ENDP		; CDungeonModelInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ??1CDungeonModelInstance@@UAE@XZ
_TEXT	SEGMENT
??1CDungeonModelInstance@@UAE@XZ PROC			; CDungeonModelInstance::~CDungeonModelInstance, COMDAT
; _this$ = ecx

; 10   : 		virtual ~CDungeonModelInstance() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDungeonModelInstance@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGrannyModelInstance@@UAE@XZ ; CGrannyModelInstance::~CGrannyModelInstance
??1CDungeonModelInstance@@UAE@XZ ENDP			; CDungeonModelInstance::~CDungeonModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDungeonBlock@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDungeonBlock@@UAEPAXI@Z PROC			; CDungeonBlock::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDungeonBlock@@UAE@XZ ; CDungeonBlock::~CDungeonBlock
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 88 02 00 00	 push	 648			; 00000288H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDungeonBlock@@UAEPAXI@Z ENDP			; CDungeonBlock::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?__Initialize@CDungeonBlock@@IAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?__Initialize@CDungeonBlock@@IAEXXZ PROC		; CDungeonBlock::__Initialize, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 238  : 	m_v3Center = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00010	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp+8]
  00013	0f 14 c0	 unpcklps xmm0, xmm0
  00016	66 0f d6 81 48
	02 00 00	 movq	 QWORD PTR [ecx+584], xmm0
  0001e	89 81 50 02 00
	00		 mov	 DWORD PTR [ecx+592], eax

; 239  : 	m_fRadius = 0.0f;

  00024	c7 81 54 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+596], 0

; 240  : 
; 241  : 	m_pThing = NULL;

  0002e	c7 81 58 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+600], 0

; 242  : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?__Initialize@CDungeonBlock@@IAEXXZ ENDP		; CDungeonBlock::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.h
;	COMDAT ?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderPCBlocker, COMDAT
; _this$ = ecx

; 44   : 		void OnRenderPCBlocker() {}

  00000	c2 00 00	 ret	 0
?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderPCBlocker
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnRenderShadow@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRenderShadow@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderShadow, COMDAT
; _this$ = ecx

; 104  : {

  00000	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 60 02 00
	00		 mov	 ebx, DWORD PTR [ecx+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 104  : {

  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 5c 02 00
	00		 mov	 esi, DWORD PTR [ecx+604]
  0000e	3b f3		 cmp	 esi, ebx
  00010	0f 84 19 01 00
	00		 je	 $LN17@OnRenderSh
  00016	57		 push	 edi
$LL18@OnRenderSh:

; 236  :         _Func(*_UFirst);

  00017	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 28   : 			if (IsEmpty())

  00019	8b cf		 mov	 ecx, edi
  0001b	e8 00 00 00 00	 call	 ?IsEmpty@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::IsEmpty
  00020	84 c0		 test	 al, al
  00022	0f 85 fb 00 00
	00		 jne	 $LN16@OnRenderSh

; 29   : 				return;
; 30   : 
; 31   : 			STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, 0xffffffff);

  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002e	6a ff		 push	 -1
  00030	6a 3c		 push	 60			; 0000003cH
  00032	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 32   : 			STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TFACTOR);

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003d	6a 03		 push	 3
  0003f	6a 02		 push	 2
  00041	6a 00		 push	 0
  00043	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 33   : 			STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004e	6a 02		 push	 2
  00050	6a 01		 push	 1
  00052	6a 00		 push	 0
  00054	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 34   : 			STATEMANAGER.SaveTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	6a 01		 push	 1
  00061	6a 04		 push	 4
  00063	6a 00		 push	 0
  00065	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 35   : 			STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00070	6a 01		 push	 1
  00072	6a 1b		 push	 27			; 0000001bH
  00074	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 36   : 			STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_ZERO);

  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007f	6a 01		 push	 1
  00081	6a 13		 push	 19			; 00000013H
  00083	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 37   : 			STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_SRCCOLOR);

  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008e	6a 03		 push	 3
  00090	6a 14		 push	 20			; 00000014H
  00092	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 38   : 
; 39   : 			STATEMANAGER.SetVertexShader(ms_pnt2VS);

  00097	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a3	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 40   : 			LPDIRECT3DVERTEXBUFFER8 lpd3dRigidPNTVtxBuf = m_pModel->GetPNTD3DVertexBuffer();

  000a8	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000ab	e8 00 00 00 00	 call	 ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer

; 41   : 			if (lpd3dRigidPNTVtxBuf)

  000b0	85 c0		 test	 eax, eax
  000b2	74 1b		 je	 SHORT $LN24@OnRenderSh

; 42   : 			{
; 43   : 				STATEMANAGER.SetStreamSource(0, lpd3dRigidPNTVtxBuf, sizeof(TPNT2Vertex));

  000b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ba	6a 28		 push	 40			; 00000028H
  000bc	50		 push	 eax
  000bd	6a 00		 push	 0
  000bf	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 44   : 				RenderMeshNodeListWithoutTexture(CGrannyMesh::TYPE_RIGID, CGrannyMaterial::TYPE_BLEND_PNT);

  000c4	6a 01		 push	 1
  000c6	6a 00		 push	 0
  000c8	8b cf		 mov	 ecx, edi
  000ca	e8 00 00 00 00	 call	 ?RenderMeshNodeListWithoutTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z ; CGrannyModelInstance::RenderMeshNodeListWithoutTexture
$LN24@OnRenderSh:

; 45   : 			}
; 46   : 
; 47   : 			STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG1);

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d5	6a 02		 push	 2
  000d7	6a 00		 push	 0
  000d9	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 48   : 			STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLOROP);

  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e4	6a 01		 push	 1
  000e6	6a 00		 push	 0
  000e8	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 49   : 			STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ALPHAOP);

  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f3	6a 04		 push	 4
  000f5	6a 00		 push	 0
  000f7	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 50   : 			STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  000fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00102	6a 1b		 push	 27			; 0000001bH
  00104	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 51   : 			STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  00109	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0010f	6a 13		 push	 19			; 00000013H
  00111	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 52   : 			STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0011c	6a 14		 push	 20			; 00000014H
  0011e	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN16@OnRenderSh:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00123	83 c6 04	 add	 esi, 4
  00126	3b f3		 cmp	 esi, ebx
  00128	0f 85 e9 fe ff
	ff		 jne	 $LL18@OnRenderSh
  0012e	5f		 pop	 edi
$LN17@OnRenderSh:
  0012f	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 106  : }

  00130	5b		 pop	 ebx
  00131	c3		 ret	 0
?OnRenderShadow@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderShadow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.h
;	COMDAT ?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderToShadowMap, COMDAT
; _this$ = ecx

; 42   : 		void OnRenderToShadowMap() {}

  00000	c2 00 00	 ret	 0
?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderToShadowMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.h
;	COMDAT ?OnBlendRender@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnBlendRender@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnBlendRender, COMDAT
; _this$ = ecx

; 41   : 		void OnBlendRender() {}

  00000	c2 00 00	 ret	 0
?OnBlendRender@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnBlendRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.h
;	COMDAT ?OnRender@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CDungeonBlock@@UAEXXZ PROC			; CDungeonBlock::OnRender, COMDAT
; _this$ = ecx

; 40   : 		void OnRender() {}

  00000	c2 00 00	 ret	 0
?OnRender@CDungeonBlock@@UAEXXZ ENDP			; CDungeonBlock::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_pfHeight$ = 16						; size = 4
?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z PROC	; CDungeonBlock::OnGetObjectHeight, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 150  : 	if (m_pHeightAttributeInstance && m_pHeightAttributeInstance->GetHeight(fX, fY, pfHeight))

  00003	8b 89 44 02 00
	00		 mov	 ecx, DWORD PTR [ecx+580]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 2a		 je	 SHORT $LN2@OnGetObjec
  0000d	ff 75 10	 push	 DWORD PTR _pfHeight$[ebp]
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00015	83 ec 08	 sub	 esp, 8
  00018	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 ?GetHeight@CAttributeInstance@@QAEHMMPAM@Z ; CAttributeInstance::GetHeight
  0002d	85 c0		 test	 eax, eax
  0002f	74 06		 je	 SHORT $LN2@OnGetObjec

; 151  : 		return true;

  00031	b0 01		 mov	 al, 1

; 153  : }

  00033	5d		 pop	 ebp
  00034	c2 0c 00	 ret	 12			; 0000000cH
$LN2@OnGetObjec:

; 152  : 	return false;

  00037	32 c0		 xor	 al, al

; 153  : }

  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z ENDP	; CDungeonBlock::OnGetObjectHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z
_TEXT	SEGMENT
_pAttributeInstance$ = 8				; size = 4
?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z PROC ; CDungeonBlock::OnUpdateHeighInstance, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 146  : }

  00003	5d		 pop	 ebp

; 144  : 	assert(pAttributeInstance);
; 145  : 	SetHeightInstance(pAttributeInstance);

  00004	e9 00 00 00 00	 jmp	 ?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z ; CGraphicObjectInstance::SetHeightInstance
?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z ENDP ; CDungeonBlock::OnUpdateHeighInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
_TEXT	SEGMENT
_pscdVector$ = 8					; size = 4
?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z PROC ; CDungeonBlock::OnUpdateCollisionData, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pscdVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 133  : {

  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 33		 mov	 esi, DWORD PTR [ebx]
  0000d	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 136  : 	for(it = pscdVector->begin();it!=pscdVector->end();++it)

  00010	74 18		 je	 SHORT $LN3@OnUpdateCo
$LL4@OnUpdateCo:

; 137  : 	{
; 138  : 		AddCollision(&(*it),&GetTransform());

  00012	8b cf		 mov	 ecx, edi
  00014	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	8b cf		 mov	 ecx, edi
  0001d	e8 00 00 00 00	 call	 ?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z ; CGraphicObjectInstance::AddCollision
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00022	83 c6 50	 add	 esi, 80			; 00000050H

; 149  :         return _Ptr == _Right._Ptr;

  00025	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 136  : 	for(it = pscdVector->begin();it!=pscdVector->end();++it)

  00028	75 e8		 jne	 SHORT $LL4@OnUpdateCo
$LN3@OnUpdateCo:
  0002a	5f		 pop	 edi

; 139  : 	}
; 140  : }

  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ENDP ; CDungeonBlock::OnUpdateCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z
_TEXT	SEGMENT
_v3Center$ = 8						; size = 4
_fRadius$ = 12						; size = 4
?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z PROC ; CDungeonBlock::GetBoundingSphere, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 126  : 	v3Center = m_v3Center;

  00003	f3 0f 7e 81 48
	02 00 00	 movq	 xmm0, QWORD PTR [ecx+584]
  0000b	56		 push	 esi
  0000c	8b 75 08	 mov	 esi, DWORD PTR _v3Center$[ebp]
  0000f	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00013	8b 81 50 02 00
	00		 mov	 eax, DWORD PTR [ecx+592]
  00019	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 127  : 	fRadius = m_fRadius;

  0001c	8b 45 0c	 mov	 eax, DWORD PTR _fRadius$[ebp]
  0001f	8b 91 54 02 00
	00		 mov	 edx, DWORD PTR [ecx+596]
  00025	89 10		 mov	 DWORD PTR [eax], edx

; 128  : 	D3DXVec3TransformCoord(&v3Center, &v3Center, &GetTransform());

  00027	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  0002c	50		 push	 eax
  0002d	56		 push	 esi
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 129  : 	return true;

  00034	b0 01		 mov	 al, 1
  00036	5e		 pop	 esi

; 130  : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z ENDP ; CDungeonBlock::GetBoundingSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Render@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
?Render@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Render, COMDAT
; _this$ = ecx

; 88   : {

  00000	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 60 02 00
	00		 mov	 ebx, DWORD PTR [ecx+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 88   : {

  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 5c 02 00
	00		 mov	 esi, DWORD PTR [ecx+604]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 4e		 je	 SHORT $LN17@Render
  00012	57		 push	 edi
$LL18@Render:

; 236  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 14   : 			if (IsEmpty())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?IsEmpty@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::IsEmpty
  0001c	84 c0		 test	 al, al
  0001e	75 38		 jne	 SHORT $LN16@Render

; 15   : 				return;
; 16   : 
; 17   : 			STATEMANAGER.SetVertexShader(ms_pnt2VS);

  00020	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002c	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 18   : 			LPDIRECT3DVERTEXBUFFER8 lpd3dRigidPNTVtxBuf = m_pModel->GetPNTD3DVertexBuffer();

  00031	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00034	e8 00 00 00 00	 call	 ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer

; 19   : 			if (lpd3dRigidPNTVtxBuf)

  00039	85 c0		 test	 eax, eax
  0003b	74 1b		 je	 SHORT $LN16@Render

; 20   : 			{
; 21   : 				STATEMANAGER.SetStreamSource(0, lpd3dRigidPNTVtxBuf, sizeof(TPNT2Vertex));

  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00043	6a 28		 push	 40			; 00000028H
  00045	50		 push	 eax
  00046	6a 00		 push	 0
  00048	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 22   : 				RenderMeshNodeListWithTwoTexture(CGrannyMesh::TYPE_RIGID, CGrannyMaterial::TYPE_BLEND_PNT);

  0004d	6a 01		 push	 1
  0004f	6a 00		 push	 0
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ?RenderMeshNodeListWithTwoTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z ; CGrannyModelInstance::RenderMeshNodeListWithTwoTexture
$LN16@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00058	83 c6 04	 add	 esi, 4
  0005b	3b f3		 cmp	 esi, ebx
  0005d	75 b4		 jne	 SHORT $LL18@Render
  0005f	5f		 pop	 edi
$LN17@Render:
  00060	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 93   : }

  00061	5b		 pop	 ebx
  00062	c3		 ret	 0
?Render@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Update@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
_Update$$sroa$148$1$ = -4				; size = 4
?Update@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Update, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f1		 mov	 esi, ecx

; 71   : 	Transform();

  00009	e8 00 00 00 00	 call	 ?Transform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Transform
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000e	8b 9e 60 02 00
	00		 mov	 ebx, DWORD PTR [esi+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 75   : 	Update.pmatWorld = &m_worldMatrix;

  00014	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00017	8b be 5c 02 00
	00		 mov	 edi, DWORD PTR [esi+604]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 75   : 	Update.pmatWorld = &m_worldMatrix;

  0001d	89 45 fc	 mov	 DWORD PTR _Update$$sroa$148$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00020	3b fb		 cmp	 edi, ebx
  00022	74 2b		 je	 SHORT $LN17@Update
$LL18@Update:

; 236  :         _Func(*_UFirst);

  00024	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 63   : 		pInstance->Update(CGrannyModelInstance::ANIFPS_MIN);

  00026	8b ce		 mov	 ecx, esi
  00028	6a 1e		 push	 30			; 0000001eH
  0002a	e8 00 00 00 00	 call	 ?Update@CGrannyModelInstance@@QAEXK@Z ; CGrannyModelInstance::Update

; 64   : 		pInstance->UpdateLocalTime(fElapsedTime);

  0002f	51		 push	 ecx
  00030	8b ce		 mov	 ecx, esi
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00039	e8 00 00 00 00	 call	 ?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z ; CGrannyModelInstance::UpdateLocalTime

; 65   : 		pInstance->Deform(pmatWorld);

  0003e	ff 75 fc	 push	 DWORD PTR _Update$$sroa$148$1$[ebp]
  00041	8b ce		 mov	 ecx, esi
  00043	e8 00 00 00 00	 call	 ?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::Deform
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00048	83 c7 04	 add	 edi, 4
  0004b	3b fb		 cmp	 edi, ebx
  0004d	75 d5		 jne	 SHORT $LL18@Update
$LN17@Update:
  0004f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 77   : }

  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?Update@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_this$1$ = -32						; size = 4
_v3Max$1 = -28						; size = 12
_v3Min$2 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pv3Min$ = 8						; size = 4
_pv3Max$ = 12						; size = 4
?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z PROC ; CDungeonBlock::GetBoundBox, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pv3Max$[ebp]
  00014	8b c1		 mov	 eax, ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7d 08	 mov	 edi, DWORD PTR _pv3Min$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001b	8b b0 5c 02 00
	00		 mov	 esi, DWORD PTR [eax+604]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 178  : {

  00021	89 45 e0	 mov	 DWORD PTR _this$1$[ebp], eax

; 179  : 	pv3Min->x = +10000000.0f;

  00024	c7 07 80 96 18
	4b		 mov	 DWORD PTR [edi], 1259902592 ; 4b189680H

; 180  : 	pv3Min->y = +10000000.0f;

  0002a	c7 47 04 80 96
	18 4b		 mov	 DWORD PTR [edi+4], 1259902592 ; 4b189680H

; 181  : 	pv3Min->z = +10000000.0f;

  00031	c7 47 08 80 96
	18 4b		 mov	 DWORD PTR [edi+8], 1259902592 ; 4b189680H

; 182  : 	pv3Max->x = -10000000.0f;

  00038	c7 03 80 96 18
	cb		 mov	 DWORD PTR [ebx], -887581056 ; cb189680H

; 183  : 	pv3Max->y = -10000000.0f;

  0003e	c7 43 04 80 96
	18 cb		 mov	 DWORD PTR [ebx+4], -887581056 ; cb189680H

; 184  : 	pv3Max->z = -10000000.0f;

  00045	c7 43 08 80 96
	18 cb		 mov	 DWORD PTR [ebx+8], -887581056 ; cb189680H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0004c	3b b0 60 02 00
	00		 cmp	 esi, DWORD PTR [eax+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 187  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00052	74 6b		 je	 SHORT $LN3@GetBoundBo
$LL4@GetBoundBo:

; 188  : 	{
; 189  : 		CDungeonModelInstance * pInstance = *itor;
; 190  : 
; 191  : 		D3DXVECTOR3 v3Min;
; 192  : 		D3DXVECTOR3 v3Max;
; 193  : 		pInstance->GetBoundBox(&v3Min, &v3Max);

  00054	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00056	8d 45 e4	 lea	 eax, DWORD PTR _v3Max$1[ebp]
  00059	50		 push	 eax
  0005a	8d 45 f0	 lea	 eax, DWORD PTR _v3Min$2[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox

; 195  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  00063	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _v3Min$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00068	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 195  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  0006b	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0006e	8b 45 e0	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 195  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  00071	f3 0f 5d 07	 minss	 xmm0, DWORD PTR [edi]
  00075	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0

; 196  : 		pv3Min->y = min(v3Min.x, pv3Min->y);

  00079	0f 28 c1	 movaps	 xmm0, xmm1
  0007c	f3 0f 5d 47 04	 minss	 xmm0, DWORD PTR [edi+4]

; 197  : 		pv3Min->z = min(v3Min.x, pv3Min->z);

  00081	f3 0f 5d 4f 08	 minss	 xmm1, DWORD PTR [edi+8]
  00086	f3 0f 11 47 04	 movss	 DWORD PTR [edi+4], xmm0
  0008b	f3 0f 11 4f 08	 movss	 DWORD PTR [edi+8], xmm1

; 198  : 		pv3Max->x = max(v3Max.x, pv3Max->x);

  00090	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _v3Max$1[ebp]
  00095	0f 28 c1	 movaps	 xmm0, xmm1
  00098	f3 0f 5f 03	 maxss	 xmm0, DWORD PTR [ebx]
  0009c	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 199  : 		pv3Max->y = max(v3Max.x, pv3Max->y);

  000a0	0f 28 c1	 movaps	 xmm0, xmm1
  000a3	f3 0f 5f 43 04	 maxss	 xmm0, DWORD PTR [ebx+4]

; 200  : 		pv3Max->z = max(v3Max.x, pv3Max->z);

  000a8	f3 0f 5f 4b 08	 maxss	 xmm1, DWORD PTR [ebx+8]
  000ad	f3 0f 11 43 04	 movss	 DWORD PTR [ebx+4], xmm0
  000b2	f3 0f 11 4b 08	 movss	 DWORD PTR [ebx+8], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  000b7	3b b0 60 02 00
	00		 cmp	 esi, DWORD PTR [eax+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 187  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  000bd	75 95		 jne	 SHORT $LL4@GetBoundBo
$LN3@GetBoundBo:

; 201  : 	}
; 202  : }

  000bf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	33 cd		 xor	 ecx, ebp
  000c6	5b		 pop	 ebx
  000c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 08 00	 ret	 8
?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z ENDP ; CDungeonBlock::GetBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Intersect@CDungeonBlock@@QAE_NPAM00@Z
_TEXT	SEGMENT
_pfu$ = 8						; size = 4
_pfv$ = 12						; size = 4
_pft$ = 16						; size = 4
?Intersect@CDungeonBlock@@QAE_NPAM00@Z PROC		; CDungeonBlock::Intersect, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b b3 5c 02 00
	00		 mov	 esi, DWORD PTR [ebx+604]
  0000e	3b b3 60 02 00
	00		 cmp	 esi, DWORD PTR [ebx+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 167  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00014	74 29		 je	 SHORT $LN3@Intersect
$LL4@Intersect:

; 168  : 	{
; 169  : 		CDungeonModelInstance * pInstance = *itor;
; 170  : 		if (pInstance->Intersect(&CGraphicObjectInstance::GetTransform(), pfu, pfv, pft))

  00016	ff 75 10	 push	 DWORD PTR _pft$[ebp]
  00019	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001b	8b cb		 mov	 ecx, ebx
  0001d	ff 75 0c	 push	 DWORD PTR _pfv$[ebp]
  00020	ff 75 08	 push	 DWORD PTR _pfu$[ebp]
  00023	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00028	50		 push	 eax
  00029	8b cf		 mov	 ecx, edi
  0002b	e8 00 00 00 00	 call	 ?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z ; CGrannyModelInstance::Intersect
  00030	84 c0		 test	 al, al
  00032	75 14		 jne	 SHORT $LN28@Intersect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00034	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00037	3b b3 60 02 00
	00		 cmp	 esi, DWORD PTR [ebx+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 167  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  0003d	75 d7		 jne	 SHORT $LL4@Intersect
$LN3@Intersect:
  0003f	5f		 pop	 edi

; 171  : 			return true;
; 172  : 	}
; 173  : 
; 174  : 	return false;
; 175  : }

  00040	5e		 pop	 esi
  00041	32 c0		 xor	 al, al
  00043	5b		 pop	 ebx
  00044	5d		 pop	 ebp
  00045	c2 0c 00	 ret	 12			; 0000000cH
$LN28@Intersect:
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	b0 01		 mov	 al, 1
  0004c	5b		 pop	 ebx
  0004d	5d		 pop	 ebp
  0004e	c2 0c 00	 ret	 12			; 0000000cH
?Intersect@CDungeonBlock@@QAE_NPAM00@Z ENDP		; CDungeonBlock::Intersect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Load@CDungeonBlock@@QAE_NPBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_pModelInstance$3 = -24					; size = 4
_this$1$ = -20						; size = 4
_i$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv348 = 8						; size = 4
_c_szFileName$ = 8					; size = 4
?Load@CDungeonBlock@@QAE_NPBD@Z PROC			; CDungeonBlock::Load, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@CDungeonBlock@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi

; 206  : 	Destroy();

  0002d	e8 00 00 00 00	 call	 ?Destroy@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Destroy

; 207  : 
; 208  : 	m_pThing = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00032	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
  00035	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 209  : 
; 210  : 	m_pThing->AddReference();

  00041	8b c8		 mov	 ecx, eax
  00043	89 86 58 02 00
	00		 mov	 DWORD PTR [esi+600], eax
  00049	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 211  : 	if (m_pThing->GetModelCount() <= 0)

  0004e	8b 8e 58 02 00
	00		 mov	 ecx, DWORD PTR [esi+600]
  00054	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00059	8b 8e 58 02 00
	00		 mov	 ecx, DWORD PTR [esi+600]
  0005f	85 c0		 test	 eax, eax
  00061	7f 2a		 jg	 SHORT $LN5@Load

; 212  : 	{
; 213  : 		TraceError("CDungeonBlock::Load(filename=%s) - model count is %d\n", c_szFileName, m_pThing->GetModelCount());

  00063	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00068	50		 push	 eax
  00069	57		 push	 edi
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@
  0006f	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 214  : 		return false;

  00077	32 c0		 xor	 al, al

; 234  : }

  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
$LN5@Load:

; 217  : 	m_ModelInstanceContainer.reserve(m_pThing->GetModelCount());

  0008d	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00092	8b 8e 64 02 00
	00		 mov	 ecx, DWORD PTR [esi+612]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 217  : 	m_ModelInstanceContainer.reserve(m_pThing->GetModelCount());

  00098	8d 9e 5c 02 00
	00		 lea	 ebx, DWORD PTR [esi+604]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0009e	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  000a0	c1 f9 02	 sar	 ecx, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  000a3	3b c1		 cmp	 eax, ecx
  000a5	76 13		 jbe	 SHORT $LN11@Load

; 1307 :             if (_Newcapacity > max_size()) {

  000a7	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  000ac	0f 87 f1 00 00
	00		 ja	 $LN34@Load

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  000b2	50		 push	 eax
  000b3	8b cb		 mov	 ecx, ebx
  000b5	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
$LN11@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 219  : 	for (int i = 0; i < m_pThing->GetModelCount(); ++i)

  000ba	8b 8e 58 02 00
	00		 mov	 ecx, DWORD PTR [esi+600]
  000c0	33 ff		 xor	 edi, edi
  000c2	89 7d f0	 mov	 DWORD PTR _i$1$[ebp], edi
  000c5	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  000ca	85 c0		 test	 eax, eax
  000cc	0f 8e bb 00 00
	00		 jle	 $LN3@Load
  000d2	8d 86 68 02 00
	00		 lea	 eax, DWORD PTR [esi+616]
  000d8	89 45 08	 mov	 DWORD PTR tv348[ebp], eax
  000db	0f 1f 44 00 00	 npad	 5
$LL4@Load:

; 220  : 	{
; 221  : 		CDungeonModelInstance * pModelInstance = new CDungeonModelInstance;

  000e0	6a 78		 push	 120			; 00000078H
  000e2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e7	8b f0		 mov	 esi, eax
  000e9	83 c4 04	 add	 esp, 4
  000ec	89 75 e4	 mov	 DWORD PTR $T2[ebp], esi
  000ef	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000f6	85 f6		 test	 esi, esi
  000f8	74 0f		 je	 SHORT $LN7@Load

; 9    : 		CDungeonModelInstance() {}

  000fa	8b ce		 mov	 ecx, esi
  000fc	e8 00 00 00 00	 call	 ??0CGrannyModelInstance@@QAE@XZ ; CGrannyModelInstance::CGrannyModelInstance
  00101	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonModelInstance@@6B@

; 220  : 	{
; 221  : 		CDungeonModelInstance * pModelInstance = new CDungeonModelInstance;

  00107	eb 02		 jmp	 SHORT $LN8@Load
$LN7@Load:
  00109	33 f6		 xor	 esi, esi
$LN8@Load:

; 222  : 		pModelInstance->SetMainModelPointer(m_pThing->GetModelPointer(i), &m_kDeformableVertexBuffer);

  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0010e	ff 75 08	 push	 DWORD PTR tv348[ebp]
  00111	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00118	57		 push	 edi
  00119	8b 89 58 02 00
	00		 mov	 ecx, DWORD PTR [ecx+600]
  0011f	89 75 e8	 mov	 DWORD PTR _pModelInstance$3[ebp], esi
  00122	e8 00 00 00 00	 call	 ?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z ; CGraphicThing::GetModelPointer
  00127	50		 push	 eax
  00128	8b ce		 mov	 ecx, esi
  0012a	e8 00 00 00 00	 call	 ?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::SetMainModelPointer

; 223  : 		DWORD dwVertexCount = pModelInstance->GetVertexCount();

  0012f	8b ce		 mov	 ecx, esi
  00131	e8 00 00 00 00	 call	 ?GetVertexCount@CGrannyModelInstance@@QAEKXZ ; CGrannyModelInstance::GetVertexCount

; 224  : 		m_kDeformableVertexBuffer.Destroy();

  00136	8b 4d 08	 mov	 ecx, DWORD PTR tv348[ebp]
  00139	8b f8		 mov	 edi, eax
  0013b	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 225  : 		m_kDeformableVertexBuffer.Create(

  00140	8b 45 08	 mov	 eax, DWORD PTR tv348[ebp]
  00143	8b c8		 mov	 ecx, eax
  00145	6a 01		 push	 1
  00147	6a 08		 push	 8
  00149	68 12 01 00 00	 push	 274			; 00000112H
  0014e	8b 10		 mov	 edx, DWORD PTR [eax]
  00150	57		 push	 edi
  00151	ff 52 04	 call	 DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00154	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00157	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  0015a	74 08		 je	 SHORT $LN23@Load

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0015c	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0015e	83 43 04 04	 add	 DWORD PTR [ebx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00162	eb 0c		 jmp	 SHORT $LN2@Load
$LN23@Load:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00164	8d 4d e8	 lea	 ecx, DWORD PTR _pModelInstance$3[ebp]
  00167	51		 push	 ecx
  00168	50		 push	 eax
  00169	8b cb		 mov	 ecx, ebx
  0016b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
$LN2@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 219  : 	for (int i = 0; i < m_pThing->GetModelCount(); ++i)

  00170	8b 45 ec	 mov	 eax, DWORD PTR _this$1$[ebp]
  00173	8b 7d f0	 mov	 edi, DWORD PTR _i$1$[ebp]
  00176	47		 inc	 edi
  00177	89 7d f0	 mov	 DWORD PTR _i$1$[ebp], edi
  0017a	8b 88 58 02 00
	00		 mov	 ecx, DWORD PTR [eax+600]
  00180	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00185	3b f8		 cmp	 edi, eax
  00187	0f 8c 53 ff ff
	ff		 jl	 $LL4@Load
$LN3@Load:

; 226  : 			dwVertexCount,
; 227  : 			D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1,
; 228  : 			D3DUSAGE_WRITEONLY,
; 229  : 			D3DPOOL_MANAGED);
; 230  : 		m_ModelInstanceContainer.push_back(pModelInstance);
; 231  : 	}
; 232  : 
; 233  : 	return true;

  0018d	b0 01		 mov	 al, 1

; 234  : }

  0018f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00192	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00199	59		 pop	 ecx
  0019a	5f		 pop	 edi
  0019b	5e		 pop	 esi
  0019c	5b		 pop	 ebx
  0019d	8b e5		 mov	 esp, ebp
  0019f	5d		 pop	 ebp
  001a0	c2 04 00	 ret	 4
$LN34@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1308 :                 _Xlength();

  001a3	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
$LN32@Load:
  001a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@CDungeonBlock@@QAE_NPBD@Z$0:
  00000	6a 78		 push	 120			; 00000078H
  00002	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Load@CDungeonBlock@@QAE_NPBD@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@CDungeonBlock@@QAE_NPBD@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@CDungeonBlock@@QAE_NPBD@Z ENDP			; CDungeonBlock::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?BuildBoundingSphere@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
$T2 = -28						; size = 12
_v3Min$ = -28						; size = 12
_v3Max$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?BuildBoundingSphere@CDungeonBlock@@QAEXXZ PROC		; CDungeonBlock::BuildBoundingSphere, COMDAT
; _this$ = ecx

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 18	 mov	 DWORD PTR __$ArrayPad$[esp+28], eax
  00014	53		 push	 ebx
  00015	8b d9		 mov	 ebx, ecx
  00017	56		 push	 esi
  00018	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00019	8b bb 60 02 00
	00		 mov	 edi, DWORD PTR [ebx+608]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001f	8b b3 5c 02 00
	00		 mov	 esi, DWORD PTR [ebx+604]
  00025	3b f7		 cmp	 esi, edi
  00027	74 1f		 je	 SHORT $LN19@BuildBound
  00029	0f 1f 80 00 00
	00 00		 npad	 7
$LL20@BuildBound:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 120  : 		pInstance->GetBoundBox(m_pv3Min, m_pv3Max);

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00032	8d 44 24 18	 lea	 eax, DWORD PTR _v3Max$[esp+40]
  00036	50		 push	 eax
  00037	8d 44 24 10	 lea	 eax, DWORD PTR _v3Min$[esp+44]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00041	83 c6 04	 add	 esi, 4
  00044	3b f7		 cmp	 esi, edi
  00046	75 e8		 jne	 SHORT $LL20@BuildBound
$LN19@BuildBound:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00048	f3 0f 10 54 24
	14		 movss	 xmm2, DWORD PTR _v3Min$[esp+48]
  0004e	f3 0f 10 74 24
	20		 movss	 xmm6, DWORD PTR _v3Max$[esp+48]
  00054	0f 28 c2	 movaps	 xmm0, xmm2
  00057	f3 0f 10 4c 24
	10		 movss	 xmm1, DWORD PTR _v3Min$[esp+44]
  0005d	f3 0f 58 c6	 addss	 xmm0, xmm6
  00061	f3 0f 10 7c 24
	1c		 movss	 xmm7, DWORD PTR _v3Max$[esp+44]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00067	f3 0f 5c f2	 subss	 xmm6, xmm2

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0006b	f3 0f 10 5c 24
	18		 movss	 xmm3, DWORD PTR _v3Max$[esp+40]
  00071	f3 0f 58 cf	 addss	 xmm1, xmm7

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00075	f3 0f 5c 7c 24
	10		 subss	 xmm7, DWORD PTR _v3Min$[esp+44]

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0007b	f3 0f 58 5c 24
	0c		 addss	 xmm3, DWORD PTR _v3Min$[esp+40]

; 181  :     y = fy;

  00081	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00089	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000

; 182  :     z = fz;

  00091	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f000000
  00099	f3 0f 11 44 24
	14		 movss	 DWORD PTR $T2[esp+48], xmm0

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0009f	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _v3Max$[esp+40]
  000a5	f3 0f 5c 44 24
	0c		 subss	 xmm0, DWORD PTR _v3Min$[esp+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 160  : 	m_v3Center = (v3Min+v3Max) * 0.5f;

  000ab	8b 44 24 14	 mov	 eax, DWORD PTR $T2[esp+48]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000af	f3 0f 59 ff	 mulss	 xmm7, xmm7

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000b3	f3 0f 59 f6	 mulss	 xmm6, xmm6
  000b7	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 160  : 	m_v3Center = (v3Min+v3Max) * 0.5f;

  000bb	0f 14 d9	 unpcklps xmm3, xmm1
  000be	0f 57 c9	 xorps	 xmm1, xmm1
  000c1	66 0f d6 9b 48
	02 00 00	 movq	 QWORD PTR [ebx+584], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000c9	f3 0f 58 f8	 addss	 xmm7, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 160  : 	m_v3Center = (v3Min+v3Max) * 0.5f;

  000cd	89 83 50 02 00
	00		 mov	 DWORD PTR [ebx+592], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000d3	f3 0f 58 fe	 addss	 xmm7, xmm6
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000d7	0f 5a c7	 cvtps2pd xmm0, xmm7
  000da	66 0f 2e c8	 ucomisd xmm1, xmm0
  000de	77 06		 ja	 SHORT $LN44@BuildBound
  000e0	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000e4	eb 05		 jmp	 SHORT $LN45@BuildBound
$LN44@BuildBound:
  000e6	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN45@BuildBound:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 162  : }

  000eb	8b 4c 24 24	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 162  : }

  000f3	5f		 pop	 edi
  000f4	5e		 pop	 esi
  000f5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  000fd	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@43160000
  00105	f3 0f 11 83 54
	02 00 00	 movss	 DWORD PTR [ebx+596], xmm0
  0010d	5b		 pop	 ebx
  0010e	33 cc		 xor	 ecx, esp
  00110	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
?BuildBoundingSphere@CDungeonBlock@@QAEXXZ ENDP		; CDungeonBlock::BuildBoundingSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Destroy@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Destroy, COMDAT
; _this$ = ecx

; 245  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 246  : 	if (m_pThing)

  00004	8b 8f 58 02 00
	00		 mov	 ecx, DWORD PTR [edi+600]
  0000a	85 c9		 test	 ecx, ecx
  0000c	74 0f		 je	 SHORT $LN2@Destroy

; 247  : 	{
; 248  : 		m_pThing->Release();

  0000e	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 249  : 		m_pThing = NULL;

  00013	c7 87 58 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+600], 0
$LN2@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001d	8b b7 5c 02 00
	00		 mov	 esi, DWORD PTR [edi+604]
  00023	3b b7 60 02 00
	00		 cmp	 esi, DWORD PTR [edi+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00029	74 28		 je	 SHORT $LN6@Destroy
  0002b	0f 1f 44 00 00	 npad	 5
$LL7@Destroy:

; 96   : 	{
; 97   : 		delete *i;

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00032	85 c9		 test	 ecx, ecx
  00034	74 06		 je	 SHORT $LN9@Destroy
  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	6a 01		 push	 1
  0003a	ff 10		 call	 DWORD PTR [eax]
$LN9@Destroy:

; 98   : 		*i = NULL;

  0003c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00042	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00045	3b b7 60 02 00
	00		 cmp	 esi, DWORD PTR [edi+608]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  0004b	75 e3		 jne	 SHORT $LL7@Destroy
  0004d	8b b7 5c 02 00
	00		 mov	 esi, DWORD PTR [edi+604]
$LN6@Destroy:

; 99   : 	}
; 100  : 
; 101  : 	container.clear();

  00053	89 b7 60 02 00
	00		 mov	 DWORD PTR [edi+608], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 254  : 	__Initialize();

  00059	8b cf		 mov	 ecx, edi
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	e9 00 00 00 00	 jmp	 ?__Initialize@CDungeonBlock@@IAEXXZ ; CDungeonBlock::__Initialize
?Destroy@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ??1CDungeonBlock@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CDungeonBlock@@UAE@XZ PROC				; CDungeonBlock::~CDungeonBlock, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDungeonBlock@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonBlock@@6B@

; 263  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Destroy

; 264  : }

  00030	8d 8e 68 02 00
	00		 lea	 ecx, DWORD PTR [esi+616]
  00036	e8 00 00 00 00	 call	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0003b	8b 8e 5c 02 00
	00		 mov	 ecx, DWORD PTR [esi+604]
  00041	85 c9		 test	 ecx, ecx
  00043	74 33		 je	 SHORT $LN6@CDungeonBl

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00045	8b 86 64 02 00
	00		 mov	 eax, DWORD PTR [esi+612]
  0004b	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004d	83 e0 fc	 and	 eax, -4			; fffffffcH
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00057	c7 86 5c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+604], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00061	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00064	c7 86 60 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+608], 0

; 1699 :             _Myend   = pointer();

  0006e	c7 86 64 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+612], 0
$LN6@CDungeonBl:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 264  : }

  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5e		 pop	 esi
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
  0008f	cc		 int	 3
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDungeonBlock@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDungeonBlock@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDungeonBlock@@UAE@XZ ENDP				; CDungeonBlock::~CDungeonBlock
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp
;	COMDAT ??0CDungeonBlock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDungeonBlock@@QAE@XZ PROC				; CDungeonBlock::CDungeonBlock, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDungeonBlock@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CGraphicObjectInstance@@QAE@XZ ; CGraphicObjectInstance::CGraphicObjectInstance
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonBlock@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	c7 86 5c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+604], 0
  00045	c7 86 60 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+608], 0
  0004f	c7 86 64 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+612], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.cpp

; 258  : {

  00059	8d 8e 68 02 00
	00		 lea	 ecx, DWORD PTR [esi+616]
  0005f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00063	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer

; 259  : 	__Initialize();

  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?__Initialize@CDungeonBlock@@IAEXXZ ; CDungeonBlock::__Initialize

; 260  : }

  0006f	8b c6		 mov	 eax, esi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5e		 pop	 esi
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CDungeonBlock@@QAE@XZ:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDungeonBlock@@QAE@XZ
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDungeonBlock@@QAE@XZ ENDP				; CDungeonBlock::CDungeonBlock
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\DungeonBlock.h
;	COMDAT ?GetType@CDungeonBlock@@UBEHXZ
_TEXT	SEGMENT
?GetType@CDungeonBlock@@UBEHXZ PROC			; CDungeonBlock::GetType, COMDAT
; _this$ = ecx

; 18   : 		int GetType() const { return ID; }

  00000	b8 13 1f f2 ad	 mov	 eax, -1376641261	; adf21f13H
  00005	c3		 ret	 0
?GetType@CDungeonBlock@@UBEHXZ ENDP			; CDungeonBlock::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpObjectInstance.h
;	COMDAT ?OnDeform@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
?OnDeform@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnDeform, COMDAT
; _this$ = ecx

; 104  : 		virtual void			OnDeform(){}

  00000	c2 00 00	 ret	 0
?OnDeform@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnDeform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpObjectInstance.h
;	COMDAT ?OnUpdate@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
?OnUpdate@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnUpdate, COMDAT
; _this$ = ecx

; 103  : 		virtual void			OnUpdate(){}

  00000	c2 00 00	 ret	 0
?OnUpdate@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpObjectInstance.h
;	COMDAT ?OnClear@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
?OnClear@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnClear, COMDAT
; _this$ = ecx

; 102  : 		virtual void			OnClear(){}

  00000	c2 00 00	 ret	 0
?OnClear@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
