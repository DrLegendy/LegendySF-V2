; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0CDynamicSphereInstance@@QAE@XZ		; CDynamicSphereInstance::CDynamicSphereInstance
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1SpherePackCallback@@UAE@XZ			; SpherePackCallback::~SpherePackCallback
PUBLIC	?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::VisibilityCallback
PUBLIC	?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; SpherePackCallback::RayTraceCallback
PUBLIC	?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::RangeTestCallback
PUBLIC	?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::PointTest2dCallback
PUBLIC	??_GSpherePackCallback@@UAEPAXI@Z		; SpherePackCallback::`scalar deleting destructor'
PUBLIC	??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
PUBLIC	?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back
PUBLIC	?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength
PUBLIC	?Update@CMapOutdoor@@UAE_NMMM@Z			; CMapOutdoor::Update
PUBLIC	?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z	; CMapOutdoor::UpdateAroundAmbience
PUBLIC	?UpdateSky@CMapOutdoor@@QAEXXZ			; CMapOutdoor::UpdateSky
PUBLIC	?__ClearGarvage@CMapOutdoor@@MAEXXZ		; CMapOutdoor::__ClearGarvage
PUBLIC	?__UpdateGarvage@CMapOutdoor@@MAEXXZ		; CMapOutdoor::__UpdateGarvage
PUBLIC	?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z		; CMapOutdoor::UpdateAreaList
PUBLIC	?UpdateTerrain@CMapOutdoor@@IAEXMM@Z		; CMapOutdoor::UpdateTerrain
PUBLIC	?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z	; CMapOutdoor::ConvertTerrainToTnL
PUBLIC	?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z		; CMapOutdoor::AssignPatch
PUBLIC	?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__UpdateArea
PUBLIC	?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__Game_UpdateArea
PUBLIC	?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectShadowReceiver
PUBLIC	?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z ; CMapOutdoor::__CollectCollisionPCBlocker
PUBLIC	?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectCollisionShadowReceiver
PUBLIC	?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ	; CMapOutdoor::__UpdateAroundAreaList
PUBLIC	?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
PUBLIC	?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInPCBlockerList
PUBLIC	?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
PUBLIC	?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
PUBLIC	?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
PUBLIC	?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ; std::vector<CArea *,std::allocator<CArea *> >::push_back
PUBLIC	?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
PUBLIC	??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z ; CMapOutdoor::FPushTerrainToDeleteVector::operator()
PUBLIC	??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ ; CMapOutdoor::FPushTerrainToDeleteVector::~FPushTerrainToDeleteVector
PUBLIC	??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z ; CMapOutdoor::FPushAreaToDeleteVector::operator()
PUBLIC	??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ	; CMapOutdoor::FPushAreaToDeleteVector::~FPushAreaToDeleteVector
PUBLIC	??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
PUBLIC	??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>
PUBLIC	?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<PCBlocker_SInstanceList>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<PCBlocker_SInstanceList>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<PCBlocker_SInstanceList>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<PCBlocker_SInstanceList>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z ; RangeTester<PCBlocker_SInstanceList>::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Destroy_range<std::allocator<CTerrain *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicObjectInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>
PUBLIC	?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z ; RangeTester<FGetShadowReceiverFromHeightData>::`scalar deleting destructor'
PUBLIC	??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>
PUBLIC	?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::`scalar deleting destructor'
PUBLIC	??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@PAPAV1@IAAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CArea *> >
PUBLIC	??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_move<CTerrain * *,std::allocator<CTerrain *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@PAPAV1@IAAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CTerrain *> >
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicObjectInstance * *,std::allocator<CGraphicObjectInstance *> >
PUBLIC	??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ; std::_Zero_range<CArea * *>
PUBLIC	??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ; std::_Zero_range<CTerrain * *>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
PUBLIC	??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ; std::_Refancy<CArea * *,0>
PUBLIC	??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ; std::_Refancy<CTerrain * *,0>
PUBLIC	??$_Refancy@PAPAVCGraphicObjectInstance@@$0A@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@@Z ; std::_Refancy<CGraphicObjectInstance * *,0>
PUBLIC	??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
PUBLIC	??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	??_7SpherePackCallback@@6B@			; SpherePackCallback::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@ ; `string'
PUBLIC	??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ ; RangeTester<PCBlocker_SInstanceList>::`vftable'
PUBLIC	??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@		; `string'
PUBLIC	??_C@_0O@MNAKBLAF@Delete?5Area?5?6@		; `string'
PUBLIC	??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData>::`vftable'
PUBLIC	??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData>::`vftable'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4SpherePackCallback@@6B@			; SpherePackCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpherePackCallback@@@8			; SpherePackCallback `RTTI Type Descriptor'
PUBLIC	??_R3SpherePackCallback@@8			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePackCallback@@8			; SpherePackCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpherePackCallback@@8		; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ ; RangeTester<PCBlocker_SInstanceList>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8 ; RangeTester<PCBlocker_SInstanceList> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f000000
PUBLIC	__real@3fddb22d
PUBLIC	__real@402fff8cc0000000
PUBLIC	__real@42480000
PUBLIC	__real@c05db22d
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?MINMAX@@YAHHHH@Z:PROC				; MINMAX
EXTRN	?Trace@@YAXPBD@Z:PROC				; Trace
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?ELTimer_GetMSec@@YAKXZ:PROC			; ELTimer_GetMSec
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	??_ESpherePackCallback@@UAEPAXI@Z:PROC		; SpherePackCallback::`vector deleting destructor'
EXTRN	?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z:PROC ; SpherePackFactory::RangeTest
EXTRN	?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicObjectInstance::GetPosition
EXTRN	?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z:PROC ; CGraphicObjectInstance::CollisionDynamicSphere
EXTRN	?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z:PROC ; CGraphicObjectInstance::GetObjectHeight
EXTRN	?UpdateSystem@CSpeedTreeForest@@QAEXM@Z:PROC	; CSpeedTreeForest::UpdateSystem
EXTRN	?Update@CArea@@QAEXXZ:PROC			; CArea::Update
EXTRN	?UpdateAroundAmbience@CArea@@QAEXMMM@Z:PROC	; CArea::UpdateAroundAmbience
EXTRN	?GetCoordinate@CArea@@QAEXPAG0@Z:PROC		; CArea::GetCoordinate
EXTRN	?Delete@CArea@@SAXPAV1@@Z:PROC			; CArea::Delete
EXTRN	?GetTerrainPatchPtr@CTerrain@@QAEPAVCTerrainPatch@@EE@Z:PROC ; CTerrain::GetTerrainPatchPtr
EXTRN	?Delete@CTerrain@@SAXPAV1@@Z:PROC		; CTerrain::Delete
EXTRN	?AssignTerrainPtr@CMapOutdoor@@IAEXXZ:PROC	; CMapOutdoor::AssignTerrainPtr
EXTRN	?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z:PROC ; CMapOutdoor::GetTerrainPointer
EXTRN	?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z:PROC ; CMapOutdoor::GetAreaPointer
EXTRN	?__HeightCache_Update@CMapOutdoor@@AAEXXZ:PROC	; CMapOutdoor::__HeightCache_Update
EXTRN	?IsBuilding@CActorInstance@@QAE_NXZ:PROC	; CActorInstance::IsBuilding
EXTRN	??_E?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z:PROC ; RangeTester<PCBlocker_SInstanceList>::`vector deleting destructor'
EXTRN	??_E?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z:PROC ; RangeTester<FGetShadowReceiverFromHeightData>::`vector deleting destructor'
EXTRN	??_E?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z:PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?PR_FCNV@@3MA:DWORD				; PR_FCNV
EXTRN	?PR_ICNV@@3JA:DWORD				; PR_ICNV
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A DD 01H DUP (?) ; CSingleton<CCullingManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A DD 01H DUP (?) ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
_BSS	ENDS
;	COMDAT ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA
_BSS	SEGMENT
?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA DD 01H DUP (?) ; `CMapOutdoor::__UpdateGarvage'::`2'::dwEraseTime
_BSS	ENDS
;	COMDAT ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA DD 01H DUP (?) ; `CMapOutdoor::__UpdateGarvage'::`2'::$TSS0
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c05db22d
CONST	SEGMENT
__real@c05db22d DD 0c05db22dr			; -3.464
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@402fff8cc0000000
CONST	SEGMENT
__real@402fff8cc0000000 DQ 0402fff8cc0000000r	; 15.9991
CONST	ENDS
;	COMDAT __real@3fddb22d
CONST	SEGMENT
__real@3fddb22d DD 03fddb22dr			; 1.732
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 DD FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 DD 00H ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8
data$r	SEGMENT
??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@'
	DB	'@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ DD 00H ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 DD FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 DD 00H ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8
data$r	SEGMENT
??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ DD 00H ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8 DD FLAT:??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8 DD 00H	; RangeTester<PCBlocker_SInstanceList>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8
data$r	SEGMENT
??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<PCBlocker_SInstanceList> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UPCBlocker_SInstanceList@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ DD 00H ; RangeTester<PCBlocker_SInstanceList>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8
	DD	FLAT:??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePackCallback@@8 DD FLAT:??_R0?AVSpherePackCallback@@@8 ; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePackCallback@@8
rdata$r	SEGMENT
??_R2SpherePackCallback@@8 DD FLAT:??_R1A@?0A@EA@SpherePackCallback@@8 ; SpherePackCallback::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SpherePackCallback@@8
rdata$r	SEGMENT
??_R3SpherePackCallback@@8 DD 00H			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePackCallback@@@8
data$r	SEGMENT
??_R0?AVSpherePackCallback@@@8 DD FLAT:??_7type_info@@6B@ ; SpherePackCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePackCallback@@', 00H
data$r	ENDS
;	COMDAT ??_R4SpherePackCallback@@6B@
rdata$r	SEGMENT
??_R4SpherePackCallback@@6B@ DD 00H			; SpherePackCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePackCallback@@@8
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ DD FLAT:??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData>::`vftable'
	DD	FLAT:??_E?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ DD FLAT:??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData>::`vftable'
	DD	FLAT:??_E?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@MNAKBLAF@Delete?5Area?5?6@
CONST	SEGMENT
??_C@_0O@MNAKBLAF@Delete?5Area?5?6@ DB 'Delete Area ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@
CONST	SEGMENT
??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@ DB 'Delete Terrain ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ DD FLAT:??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ ; RangeTester<PCBlocker_SInstanceList>::`vftable'
	DD	FLAT:??_E?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@
CONST	SEGMENT
??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@ DB 'Update::Load s'
	DB	'pent %d ms', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SpherePackCallback@@6B@
CONST	SEGMENT
??_7SpherePackCallback@@6B@ DD FLAT:??_R4SpherePackCallback@@6B@ ; SpherePackCallback::`vftable'
	DD	FLAT:??_ESpherePackCallback@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z$0
__ehfuncinfo$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z$0
__ehfuncinfo$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z$0
__ehfuncinfo$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z$0
__ehfuncinfo$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$1
__ehfuncinfo$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z$0
__ehfuncinfo$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0
__ehfuncinfo$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$3
__ehfuncinfo$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__UpdateGarvage@CMapOutdoor@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__UpdateGarvage@CMapOutdoor@@MAEXXZ$0
__ehfuncinfo$?__UpdateGarvage@CMapOutdoor@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__UpdateGarvage@CMapOutdoor@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1254 = -8						; size = 4
tv1238 = -8						; size = 4
tv1225 = -8						; size = 4
tv1239 = -4						; size = 4
tv1224 = -4						; size = 4
__First$ = 8						; size = 4
tv1253 = 12						; size = 4
tv1244 = 12						; size = 4
tv1229 = 12						; size = 4
__Mid$ = 12						; size = 4
tv1258 = 16						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  0000a	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0000b	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  0000e	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0000f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00011	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  00014	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00016	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  0001b	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0001d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00021	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00025	f3 0f 11 45 fc	 movss	 DWORD PTR tv1224[ebp], xmm0
  0002a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0002f	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  00034	f3 0f 11 45 0c	 movss	 DWORD PTR tv1229[ebp], xmm0
  00039	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0003e	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00043	f3 0f 11 45 f8	 movss	 DWORD PTR tv1225[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00048	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0004d	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR tv1224[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00052	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR tv1229[ebp]

; 182  :     z = fz;

  00057	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0005b	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0005f	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00064	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00069	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0006d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00072	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00077	f3 0f 59 e4	 mulss	 xmm4, xmm4
  0007b	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0007f	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00083	f3 0f 58 e2	 addss	 xmm4, xmm2
  00087	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv1225[ebp]
  0008c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00090	f3 0f 58 d9	 addss	 xmm3, xmm1
  00094	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00098	f3 0f 58 e2	 addss	 xmm4, xmm2
  0009c	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000a0	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000a3	76 0b		 jbe	 SHORT $LN67@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  000a5	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  000a8	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000aa	8b 02		 mov	 eax, DWORD PTR [edx]
  000ac	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  000ae	89 0a		 mov	 DWORD PTR [edx], ecx
$LN67@Med3_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000b0	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  000b3	8b 33		 mov	 esi, DWORD PTR [ebx]
  000b5	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000b8	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000ba	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  000bf	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000c1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000c5	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  000c9	f3 0f 11 45 f8	 movss	 DWORD PTR tv1238[ebp], xmm0
  000ce	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000d3	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  000d8	f3 0f 11 45 0c	 movss	 DWORD PTR tv1244[ebp], xmm0
  000dd	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000e2	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  000e7	f3 0f 11 45 fc	 movss	 DWORD PTR tv1239[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000ec	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000f1	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv1238[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000f6	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR tv1244[ebp]

; 182  :     z = fz;

  000fb	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000ff	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00103	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00108	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0010d	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00111	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00116	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0011b	f3 0f 59 e4	 mulss	 xmm4, xmm4
  0011f	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00123	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00127	f3 0f 58 e2	 addss	 xmm4, xmm2
  0012b	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR tv1239[ebp]
  00130	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00134	f3 0f 58 d9	 addss	 xmm3, xmm1
  00138	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0013c	f3 0f 58 e2	 addss	 xmm4, xmm2
  00140	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00144	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00147	0f 86 ad 00 00
	00		 jbe	 $LN65@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0014d	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]

; 107  :     _Left    = _STD move(_Right);

  00150	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00152	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00155	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  00157	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00159	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0015c	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0015e	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00160	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00165	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00167	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0016b	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0016f	f3 0f 11 45 0c	 movss	 DWORD PTR tv1253[ebp], xmm0
  00174	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00179	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0017e	f3 0f 11 45 10	 movss	 DWORD PTR tv1258[ebp], xmm0
  00183	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00188	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0018d	f3 0f 11 45 f8	 movss	 DWORD PTR tv1254[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00192	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00197	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR tv1253[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0019c	f3 0f 10 65 10	 movss	 xmm4, DWORD PTR tv1258[ebp]

; 182  :     z = fz;

  001a1	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001a5	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  001a9	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  001ae	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  001b3	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  001b7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001bc	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c1	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001c5	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c9	f3 0f 59 c9	 mulss	 xmm1, xmm1
  001cd	f3 0f 58 e2	 addss	 xmm4, xmm2
  001d1	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv1254[ebp]
  001d6	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001da	f3 0f 58 d9	 addss	 xmm3, xmm1
  001de	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001e2	f3 0f 58 e2	 addss	 xmm4, xmm2
  001e6	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001ea	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  001ed	76 0b		 jbe	 SHORT $LN65@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  001ef	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  001f2	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  001f4	8b 02		 mov	 eax, DWORD PTR [edx]
  001f6	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  001f8	89 0a		 mov	 DWORD PTR [edx], ecx
$LN65@Med3_unche:
  001fa	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4016 : }

  001fb	5e		 pop	 esi
  001fc	5b		 pop	 ebx
  001fd	8b e5		 mov	 esp, ebp
  001ff	5d		 pop	 ebp
  00200	c3		 ret	 0
??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z PROC ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ENDP ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1066 = -24						; size = 4
tv1036 = -24						; size = 4
__Idx$1$ = -20						; size = 4
__Max_sequence_non_leaf$1$ = -20			; size = 4
__Idx$1$ = -16						; size = 4
tv1016 = -16						; size = 4
tv1014 = -12						; size = 4
tv1021 = -8						; size = 4
__Top$1$ = -4						; size = 4
__First$ = 8						; size = 4
tv1040 = 12						; size = 4
__Hole$ = 12						; size = 4
tv1034 = 16						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 4
??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;
; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00006	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __Hole$[ebp]
  0000d	8b c3		 mov	 eax, ebx
  0000f	56		 push	 esi
  00010	8b 75 10	 mov	 esi, DWORD PTR __Bottom$[ebp]
  00013	4e		 dec	 esi
  00014	8b ce		 mov	 ecx, esi
  00016	89 75 e8	 mov	 DWORD PTR tv1066[ebp], esi
  00019	d1 f9		 sar	 ecx, 1
  0001b	89 4d ec	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ecx
  0001e	57		 push	 edi
  0001f	8b fb		 mov	 edi, ebx
  00021	89 7d fc	 mov	 DWORD PTR __Top$1$[ebp], edi
  00024	3b d9		 cmp	 ebx, ecx
  00026	0f 8d cf 00 00
	00		 jge	 $LN53@Pop_heap_h
  0002c	0f 1f 40 00	 npad	 4
$LL2@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00030	8b 7d 18	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3365 :         _Idx = 2 * _Idx + 2;

  00033	8d 1c 00	 lea	 ebx, DWORD PTR [eax+eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00036	8b 4c 9a 08	 mov	 ecx, DWORD PTR [edx+ebx*4+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0003a	8b 74 9a 04	 mov	 esi, DWORD PTR [edx+ebx*4+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0003e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00043	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00045	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00049	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0004d	f3 0f 11 45 f4	 movss	 DWORD PTR tv1014[ebp], xmm0
  00052	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00057	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0005c	f3 0f 11 45 f8	 movss	 DWORD PTR tv1021[ebp], xmm0
  00061	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00066	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0006b	f3 0f 11 45 f0	 movss	 DWORD PTR tv1016[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00070	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00075	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR tv1014[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0007a	f3 0f 10 65 f8	 movss	 xmm4, DWORD PTR tv1021[ebp]

; 182  :     z = fz;

  0007f	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00083	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00086	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0008a	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0008f	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00094	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00099	33 c0		 xor	 eax, eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0009b	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0009f	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000a4	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000a8	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ab	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000af	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000b3	f3 0f 58 e2	 addss	 xmm4, xmm2
  000b7	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv1016[ebp]
  000bc	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000c0	f3 0f 58 d9	 addss	 xmm3, xmm1
  000c4	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000c8	f3 0f 58 e2	 addss	 xmm4, xmm2
  000cc	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000d0	0f 2f e3	 comiss	 xmm4, xmm3
  000d3	0f 96 c0	 setbe	 al
  000d6	40		 inc	 eax
  000d7	03 c3		 add	 eax, ebx
  000d9	89 45 f0	 mov	 DWORD PTR __Idx$1$[ebp], eax
  000dc	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
  000df	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3370 :         _Hole             = _Idx;

  000e2	8b 45 f0	 mov	 eax, DWORD PTR __Idx$1$[ebp]
  000e5	8b d8		 mov	 ebx, eax
  000e7	8b 4d ec	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  000ea	89 5d 0c	 mov	 DWORD PTR __Hole$[ebp], ebx
  000ed	3b c1		 cmp	 eax, ecx
  000ef	0f 8c 3b ff ff
	ff		 jl	 $LL2@Pop_heap_h

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;
; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  000f5	8b 7d fc	 mov	 edi, DWORD PTR __Top$1$[ebp]
  000f8	8b 75 e8	 mov	 esi, DWORD PTR tv1066[ebp]
$LN53@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  000fb	3b c1		 cmp	 eax, ecx
  000fd	75 10		 jne	 SHORT $LN5@Pop_heap_h
  000ff	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  00102	a8 01		 test	 al, 1
  00104	75 09		 jne	 SHORT $LN5@Pop_heap_h

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00106	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  0010a	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 3375 :         _Hole             = _Bottom - 1;

  0010d	8b de		 mov	 ebx, esi
$LN5@Pop_heap_h:

; 3376 :     }
; 3377 : 
; 3378 :     _Push_heap_by_index(_First, _Hole, _Top, _STD move(_Val), _Pred);

  0010f	8b 75 18	 mov	 esi, DWORD PTR __Pred$[ebp]

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00112	3b fb		 cmp	 edi, ebx
  00114	0f 8d bc 00 00
	00		 jge	 $LN54@Pop_heap_h
  0011a	66 0f 1f 44 00
	00		 npad	 6
$LL26@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00120	8b 4d 14	 mov	 ecx, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00123	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  00126	d1 f8		 sar	 eax, 1
  00128	89 45 ec	 mov	 DWORD PTR __Idx$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0012b	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0012d	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00130	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00135	8b cf		 mov	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00137	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0013b	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  0013f	f3 0f 11 45 10	 movss	 DWORD PTR tv1034[ebp], xmm0
  00144	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00149	f3 0f 5c 46 04	 subss	 xmm0, DWORD PTR [esi+4]
  0014e	f3 0f 11 45 0c	 movss	 DWORD PTR tv1040[ebp], xmm0
  00153	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00158	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0015d	f3 0f 11 45 e8	 movss	 DWORD PTR tv1036[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00162	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00167	f3 0f 10 55 10	 movss	 xmm2, DWORD PTR tv1034[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0016c	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR tv1040[ebp]

; 182  :     z = fz;

  00171	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00175	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00179	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0017e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00183	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00187	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0018c	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00191	f3 0f 59 e4	 mulss	 xmm4, xmm4
  00195	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00199	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0019d	f3 0f 58 e2	 addss	 xmm4, xmm2
  001a1	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1036[ebp]
  001a6	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001aa	f3 0f 58 d9	 addss	 xmm3, xmm1
  001ae	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001b2	f3 0f 58 e2	 addss	 xmm4, xmm2
  001b6	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001ba	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001bd	76 26		 jbe	 SHORT $LN55@Pop_heap_h

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001bf	8b 4d ec	 mov	 ecx, DWORD PTR __Idx$1$[ebp]
  001c2	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  001c5	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  001c8	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 3325 :         _Hole             = _Idx;

  001cb	8b d9		 mov	 ebx, ecx
  001cd	39 4d fc	 cmp	 DWORD PTR __Top$1$[ebp], ecx
  001d0	0f 8c 4a ff ff
	ff		 jl	 $LL26@Pop_heap_h
$LN54@Pop_heap_h:

; 3379 : }

  001d6	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  001d9	5f		 pop	 edi
  001da	5e		 pop	 esi
  001db	8b 00		 mov	 eax, DWORD PTR [eax]
  001dd	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax
  001e0	5b		 pop	 ebx
  001e1	8b e5		 mov	 esp, ebp
  001e3	5d		 pop	 ebp
  001e4	c3		 ret	 0
$LN55@Pop_heap_h:

; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  001e5	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  001e8	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  001eb	5f		 pop	 edi

; 3379 : }

  001ec	5e		 pop	 esi

; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  001ed	8b 00		 mov	 eax, DWORD PTR [eax]
  001ef	89 04 99	 mov	 DWORD PTR [ecx+ebx*4], eax

; 3379 : }

  001f2	5b		 pop	 ebx
  001f3	8b e5		 mov	 esp, ebp
  001f5	5d		 pop	 ebp
  001f6	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAPAVCGraphicObjectInstance@@$0A@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAPAVCGraphicObjectInstance@@$0A@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@@Z PROC ; std::_Refancy<CGraphicObjectInstance * *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAPAVCGraphicObjectInstance@@$0A@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@@Z ENDP ; std::_Refancy<CGraphicObjectInstance * *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z PROC ; std::_Refancy<CTerrain * *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ENDP ; std::_Refancy<CTerrain * *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z PROC ; std::_Refancy<CArea * *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ENDP ; std::_Refancy<CArea * *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z PROC ; std::_Zero_range<CTerrain * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ENDP ; std::_Zero_range<CTerrain * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z PROC ; std::_Zero_range<CArea * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ENDP ; std::_Zero_range<CArea * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv3422 = -28						; size = 4
tv3405 = -28						; size = 4
tv3417 = -24						; size = 4
tv3409 = -24						; size = 4
tv3395 = -24						; size = 4
tv3379 = -24						; size = 4
tv3418 = -20						; size = 4
tv3404 = -20						; size = 4
tv3390 = -20						; size = 4
tv3383 = -20						; size = 4
tv3371 = -20						; size = 4
tv3357 = -20						; size = 4
tv3344 = -20						; size = 4
tv3328 = -20						; size = 4
__Pfirst$1$ = -16					; size = 4
tv3437 = -16						; size = 4
tv3430 = -16						; size = 4
tv3391 = -16						; size = 4
tv3378 = -16						; size = 4
tv3365 = -16						; size = 4
tv3352 = -16						; size = 4
__Last$1$ = -12						; size = 4
__Gfirst$1$ = -12					; size = 4
tv3366 = -12						; size = 4
tv3353 = -12						; size = 4
tv3339 = -12						; size = 4
tv3332 = -12						; size = 4
__Glast$1$ = -8						; size = 4
tv3434 = -8						; size = 4
tv3340 = -8						; size = 4
tv3327 = -8						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  0000d	8b 75 14	 mov	 esi, DWORD PTR __Pred$[ebp]
  00010	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00013	57		 push	 edi
  00014	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  00017	2b c7		 sub	 eax, edi
  00019	c1 f8 03	 sar	 eax, 3
  0001c	89 4d f4	 mov	 DWORD PTR __Last$1$[ebp], ecx

; 4023 :     if (40 < _Count) { // Tukey's ninther

  0001f	56		 push	 esi

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00020	8d 1c 87	 lea	 ebx, DWORD PTR [edi+eax*4]

; 4022 :     const _Diff _Count = _Last - _First;

  00023	8b c1		 mov	 eax, ecx
  00025	2b c7		 sub	 eax, edi

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00027	89 5d f0	 mov	 DWORD PTR __Pfirst$1$[ebp], ebx

; 4022 :     const _Diff _Count = _Last - _First;

  0002a	c1 f8 02	 sar	 eax, 2

; 4023 :     if (40 < _Count) { // Tukey's ninther

  0002d	83 f8 28	 cmp	 eax, 40			; 00000028H
  00030	7e 60		 jle	 SHORT $LN35@Partition_

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  00032	40		 inc	 eax
  00033	c1 f8 03	 sar	 eax, 3

; 4025 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00036	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0003d	8d 1c 85 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*4]
  00044	89 4d f8	 mov	 DWORD PTR tv3434[ebp], ecx
  00047	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
  0004a	50		 push	 eax
  0004b	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  0004e	52		 push	 edx
  0004f	57		 push	 edi
  00050	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00055	8b 4d f0	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  00058	56		 push	 esi
  00059	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  0005c	50		 push	 eax
  0005d	51		 push	 ecx
  0005e	2b cb		 sub	 ecx, ebx
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00066	8b 45 f4	 mov	 eax, DWORD PTR __Last$1$[ebp]
  00069	8b f8		 mov	 edi, eax
  0006b	56		 push	 esi
  0006c	50		 push	 eax
  0006d	2b 45 f8	 sub	 eax, DWORD PTR tv3434[ebp]
  00070	2b fb		 sub	 edi, ebx
  00072	57		 push	 edi
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4029 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  00079	56		 push	 esi
  0007a	57		 push	 edi
  0007b	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  0007e	ff 75 f0	 push	 DWORD PTR __Pfirst$1$[ebp]
  00081	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4030 :     } else {

  0008a	8b 5d f0	 mov	 ebx, DWORD PTR __Pfirst$1$[ebp]
  0008d	83 c4 40	 add	 esp, 64			; 00000040H
  00090	eb 0b		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 4031 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00092	51		 push	 ecx
  00093	53		 push	 ebx
  00094	57		 push	 edi
  00095	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
  0009a	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009d	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  000a0	89 75 fc	 mov	 DWORD PTR __Plast$1$[ebp], esi

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a3	3b fb		 cmp	 edi, ebx
  000a5	0f 83 4e 01 00
	00		 jae	 $LN198@Partition_
  000ab	0f 1f 44 00 00	 npad	 5
$LL2@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000b0	8b 4b fc	 mov	 ecx, DWORD PTR [ebx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  000b3	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  000b6	8b 33		 mov	 esi, DWORD PTR [ebx]
  000b8	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  000bb	89 45 f0	 mov	 DWORD PTR tv3437[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000be	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  000c3	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000c5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000c9	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  000cd	f3 0f 11 45 f8	 movss	 DWORD PTR tv3327[ebp], xmm0
  000d2	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000d7	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  000dc	f3 0f 11 45 f4	 movss	 DWORD PTR tv3332[ebp], xmm0
  000e1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000e6	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  000eb	f3 0f 11 45 ec	 movss	 DWORD PTR tv3328[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000f0	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000f5	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv3327[ebp]

; 182  :     z = fz;

  000fa	f3 0f 10 65 f4	 movss	 xmm4, DWORD PTR tv3332[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ff	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00103	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00107	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0010c	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00111	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00115	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0011a	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  0011f	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00123	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00127	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0012b	f3 0f 58 e2	 addss	 xmm4, xmm2
  0012f	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3328[ebp]
  00134	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00138	f3 0f 58 d9	 addss	 xmm3, xmm1
  0013c	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00140	f3 0f 58 e2	 addss	 xmm4, xmm2
  00144	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00148	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  0014b	0f 87 a5 00 00
	00		 ja	 $LN223@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00151	8b 75 f0	 mov	 esi, DWORD PTR tv3437[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00154	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00156	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  00159	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0015b	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00160	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00162	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00166	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0016a	f3 0f 11 45 f4	 movss	 DWORD PTR tv3339[ebp], xmm0
  0016f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00174	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  00179	f3 0f 11 45 ec	 movss	 DWORD PTR tv3344[ebp], xmm0
  0017e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00183	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00188	f3 0f 11 45 f8	 movss	 DWORD PTR tv3340[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0018d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00192	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR tv3339[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00197	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv3344[ebp]

; 182  :     z = fz;

  0019c	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001a0	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  001a4	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  001a9	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  001ae	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  001b2	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001b7	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001bc	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001c0	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c4	f3 0f 59 c9	 mulss	 xmm1, xmm1
  001c8	f3 0f 58 e2	 addss	 xmm4, xmm2
  001cc	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv3340[ebp]
  001d1	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001d5	f3 0f 58 d9	 addss	 xmm3, xmm1
  001d9	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001dd	f3 0f 58 e2	 addss	 xmm4, xmm2
  001e1	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001e5	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001e8	77 0c		 ja	 SHORT $LN223@Partition_

; 4045 :         --_Pfirst;

  001ea	8b 5d f0	 mov	 ebx, DWORD PTR tv3437[ebp]
  001ed	39 5d 0c	 cmp	 DWORD PTR __First$[ebp], ebx
  001f0	0f 82 ba fe ff
	ff		 jb	 $LL2@Partition_
$LN223@Partition_:
  001f6	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
$LN198@Partition_:

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  001f9	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  001fc	3b f0		 cmp	 esi, eax
  001fe	0f 83 52 01 00
	00		 jae	 $LN224@Partition_
$LL4@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00204	8b 4d fc	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00207	8b 33		 mov	 esi, DWORD PTR [ebx]
  00209	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0020c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0020e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00213	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00215	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00219	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0021d	f3 0f 11 45 f0	 movss	 DWORD PTR tv3352[ebp], xmm0
  00222	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00227	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0022c	f3 0f 11 45 ec	 movss	 DWORD PTR tv3357[ebp], xmm0
  00231	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00236	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0023b	f3 0f 11 45 f4	 movss	 DWORD PTR tv3353[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00240	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00245	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv3352[ebp]

; 182  :     z = fz;

  0024a	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv3357[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0024f	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00253	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00257	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0025c	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00261	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00265	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0026a	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  0026f	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00273	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00277	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0027b	f3 0f 58 e2	 addss	 xmm4, xmm2
  0027f	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR tv3353[ebp]
  00284	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00288	f3 0f 58 d9	 addss	 xmm3, xmm1
  0028c	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00290	f3 0f 58 e2	 addss	 xmm4, xmm2
  00294	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00298	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0029b	0f 87 af 00 00
	00		 ja	 $LN229@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  002a1	8b 45 fc	 mov	 eax, DWORD PTR __Plast$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002a4	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  002a6	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  002a9	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002ab	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  002b0	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002b2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b6	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  002ba	f3 0f 11 45 f0	 movss	 DWORD PTR tv3365[ebp], xmm0
  002bf	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002c4	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  002c9	f3 0f 11 45 ec	 movss	 DWORD PTR tv3371[ebp], xmm0
  002ce	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  002d3	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  002d8	f3 0f 11 45 f4	 movss	 DWORD PTR tv3366[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002dd	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  002e2	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv3365[ebp]

; 182  :     z = fz;

  002e7	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv3371[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002ec	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002ef	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002f3	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  002f8	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  002fd	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00301	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00306	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0030b	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0030e	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 182  :     z = fz;

  00312	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00316	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0031a	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0031e	f3 0f 58 e2	 addss	 xmm4, xmm2
  00322	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR tv3366[ebp]
  00327	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0032b	f3 0f 58 d9	 addss	 xmm3, xmm1
  0032f	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00333	f3 0f 58 e2	 addss	 xmm4, xmm2
  00337	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0033b	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0033e	77 16		 ja	 SHORT $LN224@Partition_

; 4049 :         ++_Plast;

  00340	83 c6 04	 add	 esi, 4
  00343	89 75 fc	 mov	 DWORD PTR __Plast$1$[ebp], esi
  00346	3b f0		 cmp	 esi, eax
  00348	0f 82 b6 fe ff
	ff		 jb	 $LL4@Partition_

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0034e	eb 06		 jmp	 SHORT $LN224@Partition_
$LN229@Partition_:
  00350	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
  00353	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
$LN224@Partition_:

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;

  00356	8b d6		 mov	 edx, esi

; 4053 :     _RanIt _Glast  = _Pfirst;

  00358	8b f3		 mov	 esi, ebx
$LN234@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0035a	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
$LN233@Partition_:
  0035d	89 55 f4	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
$LL6@Partition_:
  00360	3b d0		 cmp	 edx, eax
  00362	0f 83 62 01 00
	00		 jae	 $LN202@Partition_
$LL11@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00368	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0036a	8b 32		 mov	 esi, DWORD PTR [edx]
  0036c	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0036f	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00374	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00376	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0037a	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0037e	f3 0f 11 45 f0	 movss	 DWORD PTR tv3378[ebp], xmm0
  00383	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00388	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0038d	f3 0f 11 45 ec	 movss	 DWORD PTR tv3383[ebp], xmm0
  00392	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00397	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0039c	f3 0f 11 45 e8	 movss	 DWORD PTR tv3379[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  003a1	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  003a6	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv3378[ebp]

; 182  :     z = fz;

  003ab	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv3383[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  003b0	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003b4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  003b8	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  003bd	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  003c2	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  003c6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003cb	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  003d0	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  003d4	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  003d8	f3 0f 59 c9	 mulss	 xmm1, xmm1
  003dc	f3 0f 58 e2	 addss	 xmm4, xmm2
  003e0	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv3379[ebp]
  003e5	f3 0f 59 d2	 mulss	 xmm2, xmm2
  003e9	f3 0f 58 d9	 addss	 xmm3, xmm1
  003ed	f3 0f 59 c0	 mulss	 xmm0, xmm0
  003f1	f3 0f 58 e2	 addss	 xmm4, xmm2
  003f5	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  003f9	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  003fc	0f 87 b3 00 00
	00		 ja	 $LN227@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00402	8b 4d f4	 mov	 ecx, DWORD PTR __Gfirst$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00405	8b 33		 mov	 esi, DWORD PTR [ebx]
  00407	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0040a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0040c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00411	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00413	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00417	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0041b	f3 0f 11 45 ec	 movss	 DWORD PTR tv3390[ebp], xmm0
  00420	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00425	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0042a	f3 0f 11 45 e8	 movss	 DWORD PTR tv3395[ebp], xmm0
  0042f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00434	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00439	f3 0f 11 45 f0	 movss	 DWORD PTR tv3391[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0043e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00443	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3390[ebp]

; 182  :     z = fz;

  00448	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv3395[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0044d	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00451	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00455	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0045a	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0045f	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00463	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00468	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  0046d	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00471	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00475	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00479	f3 0f 58 e2	 addss	 xmm4, xmm2
  0047d	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv3391[ebp]
  00482	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00486	f3 0f 58 d9	 addss	 xmm3, xmm1
  0048a	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0048e	f3 0f 58 e2	 addss	 xmm4, xmm2
  00492	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00496	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  00499	77 2c		 ja	 SHORT $LN225@Partition_

; 4059 :                 break;
; 4060 :             } else if (_Plast != _Gfirst) {

  0049b	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
  0049e	8b 55 f4	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  004a1	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  004a4	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
  004a7	3b f2		 cmp	 esi, edx
  004a9	74 0d		 je	 SHORT $LN9@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  004ab	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  004ad	8b 02		 mov	 eax, DWORD PTR [edx]
  004af	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  004b1	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  004b3	eb 03		 jmp	 SHORT $LN9@Partition_
$LN227@Partition_:

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  004b5	8b 55 f4	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
$LN9@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  004b8	83 c2 04	 add	 edx, 4
  004bb	89 55 f4	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
  004be	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  004c1	0f 82 a1 fe ff
	ff		 jb	 $LL11@Partition_
$LN225@Partition_:
  004c7	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
$LN202@Partition_:

; 4064 :                 ++_Plast;
; 4065 :             }
; 4066 :         }
; 4067 : 
; 4068 :         for (; _First < _Glast; --_Glast) {

  004ca	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  004cd	3b f0		 cmp	 esi, eax
  004cf	0f 86 79 01 00
	00		 jbe	 $LN232@Partition_
  004d5	8d 56 fc	 lea	 edx, DWORD PTR [esi-4]
  004d8	89 55 f0	 mov	 DWORD PTR tv3430[ebp], edx
  004db	0f 1f 44 00 00	 npad	 5
$LL14@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  004e0	8b 0a		 mov	 ecx, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  004e2	8b 33		 mov	 esi, DWORD PTR [ebx]
  004e4	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  004e7	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  004ec	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  004ee	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004f2	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  004f6	f3 0f 11 45 ec	 movss	 DWORD PTR tv3404[ebp], xmm0
  004fb	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00500	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  00505	f3 0f 11 45 e8	 movss	 DWORD PTR tv3409[ebp], xmm0
  0050a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0050f	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00514	f3 0f 11 45 e4	 movss	 DWORD PTR tv3405[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00519	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0051e	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3404[ebp]

; 182  :     z = fz;

  00523	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv3409[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00528	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0052c	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00530	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00535	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0053a	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0053e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00543	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  00548	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0054c	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00550	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00554	f3 0f 58 e2	 addss	 xmm4, xmm2
  00558	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv3405[ebp]
  0055d	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00561	f3 0f 58 d9	 addss	 xmm3, xmm1
  00565	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00569	f3 0f 58 e2	 addss	 xmm4, xmm2
  0056d	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00571	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  00574	0f 87 ad 00 00
	00		 ja	 $LN230@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0057a	8b 75 f0	 mov	 esi, DWORD PTR tv3430[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0057d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  0057f	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  00582	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00584	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00589	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0058b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0058f	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00593	f3 0f 11 45 e8	 movss	 DWORD PTR tv3417[ebp], xmm0
  00598	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0059d	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  005a2	f3 0f 11 45 e4	 movss	 DWORD PTR tv3422[ebp], xmm0
  005a7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  005ac	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  005b1	f3 0f 11 45 ec	 movss	 DWORD PTR tv3418[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  005b6	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  005bb	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv3417[ebp]

; 182  :     z = fz;

  005c0	f3 0f 10 65 e4	 movss	 xmm4, DWORD PTR tv3422[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  005c5	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005c9	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  005cd	f3 0f 5c 1f	 subss	 xmm3, DWORD PTR [edi]
  005d1	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005d6	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  005db	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  005e0	f3 0f 5c 4f 08	 subss	 xmm1, DWORD PTR [edi+8]

; 182  :     z = fz;

  005e5	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  005e9	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  005ed	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  005f1	f3 0f 58 e2	 addss	 xmm4, xmm2
  005f5	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3418[ebp]
  005fa	f3 0f 59 d2	 mulss	 xmm2, xmm2
  005fe	f3 0f 58 d8	 addss	 xmm3, xmm0
  00602	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00606	f3 0f 58 e2	 addss	 xmm4, xmm2
  0060a	f3 0f 58 d9	 addss	 xmm3, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0060e	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00611	77 33		 ja	 SHORT $LN231@Partition_

; 4071 :                 break;
; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  00613	8b 55 f0	 mov	 edx, DWORD PTR tv3430[ebp]
  00616	83 eb 04	 sub	 ebx, 4
  00619	3b da		 cmp	 ebx, edx
  0061b	74 0d		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0061d	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  0061f	8b 02		 mov	 eax, DWORD PTR [edx]
  00621	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  00623	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  00625	eb 03		 jmp	 SHORT $LN12@Partition_
$LN230@Partition_:
  00627	8b 55 f0	 mov	 edx, DWORD PTR tv3430[ebp]
$LN12@Partition_:

; 4064 :                 ++_Plast;
; 4065 :             }
; 4066 :         }
; 4067 : 
; 4068 :         for (; _First < _Glast; --_Glast) {

  0062a	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  0062d	83 ea 04	 sub	 edx, 4
  00630	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00633	83 ee 04	 sub	 esi, 4
  00636	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
  00639	89 55 f0	 mov	 DWORD PTR tv3430[ebp], edx
  0063c	3b c6		 cmp	 eax, esi
  0063e	0f 82 9c fe ff
	ff		 jb	 $LL14@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00644	eb 06		 jmp	 SHORT $LN226@Partition_
$LN231@Partition_:
  00646	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  00649	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN226@Partition_:

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  0064c	3b f0		 cmp	 esi, eax
$LN232@Partition_:
  0064e	8b 55 f4	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  00651	75 33		 jne	 SHORT $LN27@Partition_
  00653	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  00656	74 79		 je	 SHORT $LN204@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  00658	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
  0065b	3b f2		 cmp	 esi, edx
  0065d	74 08		 je	 SHORT $LN179@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0065f	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  00661	8b 06		 mov	 eax, DWORD PTR [esi]
  00663	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  00665	89 0e		 mov	 DWORD PTR [esi], ecx
$LN179@Partition_:

; 107  :     _Left    = _STD move(_Right);

  00667	8b 02		 mov	 eax, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4086 :             ++_Plast;

  00669	83 c6 04	 add	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0066c	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  0066e	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4088 :             ++_Pfirst;

  00670	83 c3 04	 add	 ebx, 4

; 4089 :             ++_Gfirst;

  00673	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00676	89 75 fc	 mov	 DWORD PTR __Plast$1$[ebp], esi
  00679	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0067c	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  0067e	83 c2 04	 add	 edx, 4
  00681	e9 d7 fc ff ff	 jmp	 $LN233@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00686	83 c6 fc	 add	 esi, -4			; fffffffcH
  00689	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
  0068c	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  0068f	75 2d		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  00691	83 eb 04	 sub	 ebx, 4
  00694	3b f3		 cmp	 esi, ebx
  00696	74 0a		 je	 SHORT $LN214@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00698	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  0069a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0069c	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0069e	89 0b		 mov	 DWORD PTR [ebx], ecx
  006a0	eb 02		 jmp	 SHORT $LN187@Partition_
$LN214@Partition_:
  006a2	8b 0b		 mov	 ecx, DWORD PTR [ebx]
$LN187@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  006a4	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
  006a7	83 ee 04	 sub	 esi, 4
  006aa	89 75 fc	 mov	 DWORD PTR __Plast$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  006ad	8b 06		 mov	 eax, DWORD PTR [esi]
  006af	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  006b1	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  006b4	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  006b6	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  006b9	e9 a2 fc ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  006be	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  006c0	8b 06		 mov	 eax, DWORD PTR [esi]
  006c2	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4098 :             ++_Gfirst;

  006c4	83 c2 04	 add	 edx, 4

; 4100 :     }

  006c7	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  006ca	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  006cc	e9 89 fc ff ff	 jmp	 $LN234@Partition_
$LN204@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  006d1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  006d4	8b 4d fc	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  006d7	5f		 pop	 edi
  006d8	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  006d9	89 18		 mov	 DWORD PTR [eax], ebx
  006db	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  006de	5b		 pop	 ebx

; 4101 : }

  006df	8b e5		 mov	 esp, ebp
  006e1	5d		 pop	 ebp
  006e2	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1112 = -36						; size = 4
__Idx$1$ = -32						; size = 4
tv1110 = -32						; size = 4
tv1090 = -32						; size = 4
tv1085 = -28						; size = 4
tv1069 = -28						; size = 4
tv1086 = -24						; size = 4
tv1068 = -24						; size = 4
tv1073 = -20						; size = 4
__Val$1$ = -16						; size = 4
__Hole$1$ = -12						; size = 4
__Hole$1$ = -8						; size = 4
__Max_sequence_non_leaf$1$ = -4				; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 3416 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3417 :     // make nontrivial [_First, _Last) into a heap, using _Pred
; 3418 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 3419 :     _Diff _Bottom = _Last - _First;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 24	 sub	 esp, 36			; 00000024H
  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	2b c2		 sub	 eax, edx
  0000e	c1 f8 02	 sar	 eax, 2

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00011	8b c8		 mov	 ecx, eax
  00013	89 45 0c	 mov	 DWORD PTR __Last$[ebp], eax
  00016	d1 f9		 sar	 ecx, 1
  00018	85 c9		 test	 ecx, ecx
  0001a	0f 8e d6 01 00
	00		 jle	 $LN3@Make_heap_

; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00020	53		 push	 ebx
  00021	48		 dec	 eax
  00022	56		 push	 esi
  00023	89 45 dc	 mov	 DWORD PTR tv1112[ebp], eax
  00026	d1 f8		 sar	 eax, 1
  00028	57		 push	 edi
  00029	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
  0002c	89 45 fc	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  0002f	90		 npad	 1
$LL2@Make_heap_:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00030	8b 44 8a fc	 mov	 eax, DWORD PTR [edx+ecx*4-4]
  00034	49		 dec	 ecx

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00035	8b f7		 mov	 esi, edi
  00037	89 45 f0	 mov	 DWORD PTR __Val$1$[ebp], eax
  0003a	8b d9		 mov	 ebx, ecx
  0003c	89 4d f8	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 3359 :     _Diff _Idx       = _Hole;

  0003f	8b c1		 mov	 eax, ecx

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00041	89 4d f4	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00044	3b 4d fc	 cmp	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00047	0f 8d c9 00 00
	00		 jge	 $LN62@Make_heap_
  0004d	0f 1f 00	 npad	 3
$LL7@Make_heap_:

; 3365 :         _Idx = 2 * _Idx + 2;

  00050	03 c0		 add	 eax, eax
  00052	89 45 e0	 mov	 DWORD PTR tv1110[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00055	8b 4c 82 08	 mov	 ecx, DWORD PTR [edx+eax*4+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00059	8b 5c 82 04	 mov	 ebx, DWORD PTR [edx+eax*4+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0005d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00062	8b cb		 mov	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00064	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00068	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  0006c	f3 0f 11 45 e8	 movss	 DWORD PTR tv1068[ebp], xmm0
  00071	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00076	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0007b	f3 0f 11 45 ec	 movss	 DWORD PTR tv1073[ebp], xmm0
  00080	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00085	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0008a	f3 0f 11 45 e4	 movss	 DWORD PTR tv1069[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0008f	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00094	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1068[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00099	33 db		 xor	 ebx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0009b	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv1073[ebp]

; 182  :     z = fz;

  000a0	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000a4	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000a7	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  000ab	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  000b0	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  000b5	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  000b9	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000be	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000c3	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000c7	8b 4d f4	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ca	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000ce	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000d2	f3 0f 58 e2	 addss	 xmm4, xmm2
  000d6	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1069[ebp]
  000db	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000df	f3 0f 58 d9	 addss	 xmm3, xmm1
  000e3	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000e7	f3 0f 58 e2	 addss	 xmm4, xmm2
  000eb	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000ef	0f 2f e3	 comiss	 xmm4, xmm3
  000f2	0f 96 c3	 setbe	 bl
  000f5	43		 inc	 ebx
  000f6	03 5d e0	 add	 ebx, DWORD PTR tv1110[ebp]
  000f9	89 5d e0	 mov	 DWORD PTR __Idx$1$[ebp], ebx

; 3370 :         _Hole             = _Idx;

  000fc	89 5d f4	 mov	 DWORD PTR __Hole$1$[ebp], ebx
  000ff	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  00102	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  00105	8b c3		 mov	 eax, ebx
  00107	3b 45 fc	 cmp	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  0010a	0f 8c 40 ff ff
	ff		 jl	 $LL7@Make_heap_
  00110	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
  00113	8b 4d f8	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
$LN62@Make_heap_:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00116	3b 5d fc	 cmp	 ebx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00119	75 11		 jne	 SHORT $LN10@Make_heap_
  0011b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0011e	a8 01		 test	 al, 1
  00120	75 0a		 jne	 SHORT $LN10@Make_heap_

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00122	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  00126	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 3375 :         _Hole             = _Bottom - 1;

  00129	8b 5d dc	 mov	 ebx, DWORD PTR tv1112[ebp]
$LN10@Make_heap_:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0012c	3b cb		 cmp	 ecx, ebx
  0012e	0f 8d b1 00 00
	00		 jge	 $LN30@Make_heap_
$LL31@Make_heap_:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00134	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00137	d1 ff		 sar	 edi, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00139	8b 0c ba	 mov	 ecx, DWORD PTR [edx+edi*4]
  0013c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00144	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00148	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  0014c	f3 0f 11 45 e4	 movss	 DWORD PTR tv1085[ebp], xmm0
  00151	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00156	f3 0f 5c 46 04	 subss	 xmm0, DWORD PTR [esi+4]
  0015b	f3 0f 11 45 e0	 movss	 DWORD PTR tv1090[ebp], xmm0
  00160	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00165	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0016a	f3 0f 11 45 e8	 movss	 DWORD PTR tv1086[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0016f	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00174	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1085[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00179	f3 0f 10 65 e0	 movss	 xmm4, DWORD PTR tv1090[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0017e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00181	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00185	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0018a	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0018f	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00193	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00198	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0019d	8b 4d f8	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001a0	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001a4	f3 0f 59 e4	 mulss	 xmm4, xmm4
  001a8	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001ac	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001b0	f3 0f 58 e2	 addss	 xmm4, xmm2
  001b4	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1086[ebp]
  001b9	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001bd	f3 0f 58 d9	 addss	 xmm3, xmm1
  001c1	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001c5	f3 0f 58 e2	 addss	 xmm4, xmm2
  001c9	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001cd	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001d0	76 10		 jbe	 SHORT $LN63@Make_heap_

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001d2	8b 04 ba	 mov	 eax, DWORD PTR [edx+edi*4]
  001d5	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 3325 :         _Hole             = _Idx;

  001d8	8b df		 mov	 ebx, edi
  001da	3b cf		 cmp	 ecx, edi
  001dc	0f 8c 52 ff ff
	ff		 jl	 $LL31@Make_heap_
$LN63@Make_heap_:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001e2	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
$LN30@Make_heap_:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  001e5	8b 45 f0	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001e8	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  001eb	85 c9		 test	 ecx, ecx
  001ed	0f 8f 3d fe ff
	ff		 jg	 $LL2@Make_heap_
  001f3	5f		 pop	 edi
  001f4	5e		 pop	 esi
  001f5	5b		 pop	 ebx
$LN3@Make_heap_:

; 3425 :     }
; 3426 : }

  001f6	8b e5		 mov	 esp, ebp
  001f8	5d		 pop	 ebp
  001f9	c3		 ret	 0
??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1037 = -28						; size = 4
tv1020 = -28						; size = 4
tv1032 = -24						; size = 4
tv1024 = -24						; size = 4
tv1007 = -24						; size = 4
tv1033 = -20						; size = 4
tv1019 = -20						; size = 4
tv1006 = -20						; size = 4
__Next$1$ = -16						; size = 4
tv1011 = -12						; size = 4
__First1$1$ = -12					; size = 4
__Next1$1$ = -8						; size = 4
__Val$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 3979 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(_BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3980 :     // insertion sort [_First, _Last), using _Pred
; 3981 :     if (_First != _Last) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	56		 push	 esi
  0000a	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000d	3b f0		 cmp	 esi, eax
  0000f	0f 84 3b 02 00
	00		 je	 $LN3@Insertion_

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00015	53		 push	 ebx
  00016	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00019	89 5d f0	 mov	 DWORD PTR __Next$1$[ebp], ebx
  0001c	3b d8		 cmp	 ebx, eax
  0001e	0f 84 2b 02 00
	00		 je	 $LN57@Insertion_
  00024	57		 push	 edi
$LL2@Insertion_:

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00025	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00027	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00029	8b 36		 mov	 esi, DWORD PTR [esi]
  0002b	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3983 :             _BidIt _Next1              = _Next;

  0002e	89 5d f8	 mov	 DWORD PTR __Next1$1$[ebp], ebx

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00031	89 45 fc	 mov	 DWORD PTR __Val$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00034	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  00039	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0003b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0003f	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00043	f3 0f 11 45 ec	 movss	 DWORD PTR tv1006[ebp], xmm0
  00048	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0004d	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  00052	f3 0f 11 45 f4	 movss	 DWORD PTR tv1011[ebp], xmm0
  00057	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0005c	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00061	f3 0f 11 45 e8	 movss	 DWORD PTR tv1007[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00066	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0006b	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv1006[ebp]

; 182  :     z = fz;

  00070	f3 0f 10 65 f4	 movss	 xmm4, DWORD PTR tv1011[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00075	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00079	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0007d	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00082	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00087	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0008b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00090	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  00095	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00099	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0009d	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000a1	f3 0f 58 e2	 addss	 xmm4, xmm2
  000a5	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1007[ebp]
  000aa	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000ae	f3 0f 58 d9	 addss	 xmm3, xmm1
  000b2	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000b6	f3 0f 58 e2	 addss	 xmm4, xmm2
  000ba	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000be	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000c1	76 1b		 jbe	 SHORT $LN9@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c3	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  000c6	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000c9	50		 push	 eax
  000ca	53		 push	 ebx
  000cb	56		 push	 esi
  000cc	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000d1	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000d7	89 0e		 mov	 DWORD PTR [esi], ecx

; 3989 :             } else { // look for insertion point after first

  000d9	e9 5f 01 00 00	 jmp	 $LN10@Insertion_
$LN9@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000de	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000e1	8d 73 fc	 lea	 esi, DWORD PTR [ebx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  000e4	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000e7	89 75 f4	 mov	 DWORD PTR __First1$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  000ea	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000ec	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  000f1	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000f3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000f7	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  000fb	f3 0f 11 45 ec	 movss	 DWORD PTR tv1019[ebp], xmm0
  00100	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00105	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  0010a	f3 0f 11 45 e8	 movss	 DWORD PTR tv1024[ebp], xmm0
  0010f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00114	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00119	f3 0f 11 45 e4	 movss	 DWORD PTR tv1020[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0011e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00123	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv1019[ebp]

; 182  :     z = fz;

  00128	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv1024[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0012d	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00131	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00135	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0013a	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0013f	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00143	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00148	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  0014d	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00151	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00155	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00159	f3 0f 58 e2	 addss	 xmm4, xmm2
  0015d	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1020[ebp]
  00162	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00166	f3 0f 58 d9	 addss	 xmm3, xmm1
  0016a	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0016e	f3 0f 58 e2	 addss	 xmm4, xmm2
  00172	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00176	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  00179	0f 86 b3 00 00
	00		 jbe	 $LN6@Insertion_
  0017f	8b 5d fc	 mov	 ebx, DWORD PTR __Val$1$[ebp]
$LL7@Insertion_:

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  00182	8b 4d f4	 mov	 ecx, DWORD PTR __First1$1$[ebp]
  00185	8b 55 f8	 mov	 edx, DWORD PTR __Next1$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00188	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  0018b	89 4d f8	 mov	 DWORD PTR __Next1$1$[ebp], ecx

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  0018e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00190	83 e9 04	 sub	 ecx, 4
  00193	89 02		 mov	 DWORD PTR [edx], eax
  00195	89 4d f4	 mov	 DWORD PTR __First1$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 193  :         return _Fn(_STD forward<_Args>(_Vals)...);

  00198	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0019a	8b cb		 mov	 ecx, ebx
  0019c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  001a1	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001a3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001a7	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  001ab	f3 0f 11 45 e8	 movss	 DWORD PTR tv1032[ebp], xmm0
  001b0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001b5	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  001ba	f3 0f 11 45 e4	 movss	 DWORD PTR tv1037[ebp], xmm0
  001bf	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001c4	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  001c9	f3 0f 11 45 ec	 movss	 DWORD PTR tv1033[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001ce	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001d3	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1032[ebp]

; 182  :     z = fz;

  001d8	f3 0f 10 65 e4	 movss	 xmm4, DWORD PTR tv1037[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001dd	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001e1	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  001e5	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  001ea	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  001ef	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  001f3	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001f8	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  001fd	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00201	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00205	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00209	f3 0f 58 e2	 addss	 xmm4, xmm2
  0020d	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv1033[ebp]
  00212	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00216	f3 0f 58 d9	 addss	 xmm3, xmm1
  0021a	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0021e	f3 0f 58 e2	 addss	 xmm4, xmm2
  00222	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00226	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  00229	0f 87 53 ff ff
	ff		 ja	 $LL7@Insertion_
  0022f	8b 5d f0	 mov	 ebx, DWORD PTR __Next$1$[ebp]
$LN6@Insertion_:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  00232	8b 55 f8	 mov	 edx, DWORD PTR __Next1$1$[ebp]
  00235	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
  00238	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0023b	89 02		 mov	 DWORD PTR [edx], eax
$LN10@Insertion_:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  0023d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00240	83 c3 04	 add	 ebx, 4
  00243	89 5d f0	 mov	 DWORD PTR __Next$1$[ebp], ebx
  00246	3b d8		 cmp	 ebx, eax
  00248	0f 85 d7 fd ff
	ff		 jne	 $LL2@Insertion_

; 3995 :             }
; 3996 :         }
; 3997 :     }
; 3998 : 
; 3999 :     return _Last;

  0024e	5f		 pop	 edi
$LN57@Insertion_:
  0024f	5b		 pop	 ebx
$LN3@Insertion_:
  00250	5e		 pop	 esi

; 4000 : }

  00251	8b e5		 mov	 esp, ebp
  00253	5d		 pop	 ebp
  00254	c3		 ret	 0
??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicObjectInstance * *,std::allocator<CGraphicObjectInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicObjectInstance * *,std::allocator<CGraphicObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@PAPAV1@IAAV?$allocator@PAVCTerrain@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@PAPAV1@IAAV?$allocator@PAVCTerrain@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CTerrain *> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000d	56		 push	 esi
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ; std::_Zero_range<CTerrain * *>
  00014	83 c4 08	 add	 esp, 8

; 1830 :         return _First + _Count;

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi

; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {
; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@PAPAV1@IAAV?$allocator@PAVCTerrain@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CTerrain *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z PROC ; std::_Uninitialized_move<CTerrain * *,std::allocator<CTerrain *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ENDP ; std::_Uninitialized_move<CTerrain * *,std::allocator<CTerrain *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@PAPAV1@IAAV?$allocator@PAVCArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@PAPAV1@IAAV?$allocator@PAVCArea@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CArea *> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000d	56		 push	 esi
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ; std::_Zero_range<CArea * *>
  00014	83 c4 08	 add	 esp, 8

; 1830 :         return _First + _Count;

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi

; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {
; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@PAPAV1@IAAV?$allocator@PAVCArea@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv346 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 92 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6a		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv346[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00055	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005a	2b cb		 sub	 ecx, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005c	56		 push	 esi
  0005d	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0005e	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@PAPAV1@IAAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CTerrain *> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00067	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006a	56		 push	 esi
  0006b	53		 push	 ebx
  0006c	ff 76 04	 push	 DWORD PTR [esi+4]
  0006f	ff 36		 push	 DWORD PTR [esi]
  00071	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_move<CTerrain * *,std::allocator<CTerrain *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00078	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	85 c9		 test	 ecx, ecx
  0007d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00082	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00091	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00094	89 1e		 mov	 DWORD PTR [esi], ebx
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv346[ebp]
  0009c	03 c3		 add	 eax, ebx
  0009e	5f		 pop	 edi
  0009f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 1208 :     }

  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000aa	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000af	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CTerrain * *,CTerrain * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv346 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 92 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6a		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv346[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00055	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005a	2b cb		 sub	 ecx, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005c	56		 push	 esi
  0005d	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0005e	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@PAPAV1@IAAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CArea *> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00067	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006a	56		 push	 esi
  0006b	53		 push	 ebx
  0006c	ff 76 04	 push	 DWORD PTR [esi+4]
  0006f	ff 36		 push	 DWORD PTR [esi]
  00071	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00078	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	85 c9		 test	 ecx, ecx
  0007d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00082	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00091	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00094	89 1e		 mov	 DWORD PTR [esi], ebx
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv346[ebp]
  0009c	03 c3		 add	 eax, ebx
  0009e	5f		 pop	 edi
  0009f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 1208 :     }

  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000aa	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000af	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CArea * *,CArea * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CArea * *,CArea * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_pInstance$ = 16					; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 5b		 je	 SHORT $LN7@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00011	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00014	89 75 10	 mov	 DWORD PTR _pInstance$[ebp], esi
  00017	85 f6		 test	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 175  : 		if (!pInstance)

  00019	74 47		 je	 SHORT $LN10@PointTest2

; 176  : 			return;
; 177  : 
; 178  : 		if (TREE_OBJECT == pInstance->GetType() || ACTOR_OBJECT == pInstance->GetType() || EFFECT_OBJECT == pInstance->GetType())

  0001b	8b 06		 mov	 eax, DWORD PTR [esi]
  0001d	8b ce		 mov	 ecx, esi
  0001f	ff 50 04	 call	 DWORD PTR [eax+4]
  00022	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00027	74 39		 je	 SHORT $LN10@PointTest2
  00029	8b 06		 mov	 eax, DWORD PTR [esi]
  0002b	8b ce		 mov	 ecx, esi
  0002d	ff 50 04	 call	 DWORD PTR [eax+4]
  00030	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00035	74 2b		 je	 SHORT $LN10@PointTest2
  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	8b ce		 mov	 ecx, esi
  0003b	ff 50 04	 call	 DWORD PTR [eax+4]
  0003e	3d c6 97 fa 1c	 cmp	 eax, 486184902		; 1cfa97c6H
  00043	74 1d		 je	 SHORT $LN10@PointTest2

; 179  : 			return;
; 180  : 		if (pInstance->CollisionDynamicSphere(*m_pdsi))

  00045	ff 77 08	 push	 DWORD PTR [edi+8]
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  0004f	84 c0		 test	 al, al
  00051	74 0f		 je	 SHORT $LN10@PointTest2

; 181  : 		{
; 182  : 			m_pkVct_pkShadowReceiver->push_back(pInstance);

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	8d 45 10	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back

; 183  : 			m_bCollide = true;

  0005f	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN10@PointTest2:
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
$LN7@PointTest2:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 62   : 	}

  00064	5d		 pop	 ebp
  00065	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_pInstance$ = 20					; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 5b		 je	 SHORT $LN7@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00011	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00014	89 75 14	 mov	 DWORD PTR _pInstance$[ebp], esi
  00017	85 f6		 test	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 175  : 		if (!pInstance)

  00019	74 47		 je	 SHORT $LN10@RangeTestC

; 176  : 			return;
; 177  : 
; 178  : 		if (TREE_OBJECT == pInstance->GetType() || ACTOR_OBJECT == pInstance->GetType() || EFFECT_OBJECT == pInstance->GetType())

  0001b	8b 06		 mov	 eax, DWORD PTR [esi]
  0001d	8b ce		 mov	 ecx, esi
  0001f	ff 50 04	 call	 DWORD PTR [eax+4]
  00022	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00027	74 39		 je	 SHORT $LN10@RangeTestC
  00029	8b 06		 mov	 eax, DWORD PTR [esi]
  0002b	8b ce		 mov	 ecx, esi
  0002d	ff 50 04	 call	 DWORD PTR [eax+4]
  00030	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00035	74 2b		 je	 SHORT $LN10@RangeTestC
  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	8b ce		 mov	 ecx, esi
  0003b	ff 50 04	 call	 DWORD PTR [eax+4]
  0003e	3d c6 97 fa 1c	 cmp	 eax, 486184902		; 1cfa97c6H
  00043	74 1d		 je	 SHORT $LN10@RangeTestC

; 179  : 			return;
; 180  : 		if (pInstance->CollisionDynamicSphere(*m_pdsi))

  00045	ff 77 08	 push	 DWORD PTR [edi+8]
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  0004f	84 c0		 test	 al, al
  00051	74 0f		 je	 SHORT $LN10@RangeTestC

; 181  : 		{
; 182  : 			m_pkVct_pkShadowReceiver->push_back(pInstance);

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	8d 45 14	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back

; 183  : 			m_bCollide = true;

  0005f	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN10@RangeTestC:
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
$LN7@RangeTestC:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 47   : 	}

  00064	5d		 pop	 ebp
  00065	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_pInstance$ = 16					; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00003	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	0f 2f c1	 comiss	 xmm0, xmm1
  0000e	73 06		 jae	 SHORT $LN3@RayTraceCa
  00010	0f 2f 4d 10	 comiss	 xmm1, DWORD PTR _distance$[ebp]
  00014	72 5b		 jb	 SHORT $LN8@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00016	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  0001e	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00021	89 75 10	 mov	 DWORD PTR _pInstance$[ebp], esi
  00024	85 f6		 test	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 175  : 		if (!pInstance)

  00026	74 47		 je	 SHORT $LN11@RayTraceCa

; 176  : 			return;
; 177  : 
; 178  : 		if (TREE_OBJECT == pInstance->GetType() || ACTOR_OBJECT == pInstance->GetType() || EFFECT_OBJECT == pInstance->GetType())

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 50 04	 call	 DWORD PTR [eax+4]
  0002f	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00034	74 39		 je	 SHORT $LN11@RayTraceCa
  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	8b ce		 mov	 ecx, esi
  0003a	ff 50 04	 call	 DWORD PTR [eax+4]
  0003d	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00042	74 2b		 je	 SHORT $LN11@RayTraceCa
  00044	8b 06		 mov	 eax, DWORD PTR [esi]
  00046	8b ce		 mov	 ecx, esi
  00048	ff 50 04	 call	 DWORD PTR [eax+4]
  0004b	3d c6 97 fa 1c	 cmp	 eax, 486184902		; 1cfa97c6H
  00050	74 1d		 je	 SHORT $LN11@RayTraceCa

; 179  : 			return;
; 180  : 		if (pInstance->CollisionDynamicSphere(*m_pdsi))

  00052	ff 77 08	 push	 DWORD PTR [edi+8]
  00055	8b ce		 mov	 ecx, esi
  00057	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  0005c	84 c0		 test	 al, al
  0005e	74 0f		 je	 SHORT $LN11@RayTraceCa

; 181  : 		{
; 182  : 			m_pkVct_pkShadowReceiver->push_back(pInstance);

  00060	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00063	8d 45 10	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back

; 183  : 			m_bCollide = true;

  0006c	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN11@RayTraceCa:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
$LN8@RayTraceCa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 34   : 	};

  00071	5d		 pop	 ebp
  00072	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
__Mid$1 = -8						; size = 8
__First$ = 8						; size = 4
__Val$2 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000b	8b c6		 mov	 eax, esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 fc	 and	 eax, -4			; fffffffcH
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	7e 65		 jle	 SHORT $LN23@Sort_unche
  0001d	8b 5d 10	 mov	 ebx, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00020	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	85 db		 test	 ebx, ebx
  00027	7e 6d		 jle	 SHORT $LN24@Sort_unche

; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00029	8d 45 f8	 lea	 eax, DWORD PTR __Mid$1[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00032	8b 55 fc	 mov	 edx, DWORD PTR __Mid$1[ebp+4]
  00035	8b c3		 mov	 eax, ebx
  00037	c1 f8 02	 sar	 eax, 2
  0003a	83 c4 10	 add	 esp, 16			; 00000010H
  0003d	d1 fb		 sar	 ebx, 1
  0003f	8b ce		 mov	 ecx, esi
  00041	03 d8		 add	 ebx, eax
  00043	2b ca		 sub	 ecx, edx
  00045	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  00048	83 e1 fc	 and	 ecx, -4			; fffffffcH
  0004b	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0004e	2b c7		 sub	 eax, edi
  00050	83 e0 fc	 and	 eax, -4			; fffffffcH
  00053	53		 push	 ebx
  00054	3b c1		 cmp	 eax, ecx
  00056	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  00058	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  0005b	50		 push	 eax
  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4125 :             _First = _Mid.second;

  00062	8b 7d fc	 mov	 edi, DWORD PTR __Mid$1[ebp+4]

; 4126 :         } else { // loop on first half

  00065	eb 0a		 jmp	 SHORT $LN32@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00067	56		 push	 esi
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 4128 :             _Last = _Mid.first;

  0006e	8b 75 f8	 mov	 esi, DWORD PTR __Mid$1[ebp]
$LN32@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00071	8b c6		 mov	 eax, esi
  00073	83 c4 10	 add	 esp, 16			; 00000010H
  00076	2b c7		 sub	 eax, edi
  00078	83 e0 fc	 and	 eax, -4			; fffffffcH
  0007b	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  00080	7f 9e		 jg	 SHORT $LL2@Sort_unche
$LN23@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);

  00082	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00085	56		 push	 esi
  00086	57		 push	 edi
  00087	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@Sort_unche:

; 4129 :         }
; 4130 :     }
; 4131 : }

  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN24@Sort_unche:

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00096	e8 00 00 00 00	 call	 ??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  0009b	2b f7		 sub	 esi, edi

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  000a0	8b c6		 mov	 eax, esi
  000a2	83 e0 fc	 and	 eax, -4			; fffffffcH
  000a5	83 f8 08	 cmp	 eax, 8
  000a8	7c e5		 jl	 SHORT $LN12@Sort_unche
  000aa	66 0f 1f 44 00
	00		 npad	 6
$LL13@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  000b0	8b 44 3e fc	 mov	 eax, DWORD PTR [esi+edi-4]
  000b4	89 45 0c	 mov	 DWORD PTR __Val$2[ebp], eax

; 3386 :     *_Dest      = _STD move(*_First);

  000b7	8b 07		 mov	 eax, DWORD PTR [edi]
  000b9	89 44 3e fc	 mov	 DWORD PTR [esi+edi-4], eax

; 3387 :     using _Diff = _Iter_diff_t<_RanIt>;
; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  000bd	8d 45 0c	 lea	 eax, DWORD PTR __Val$2[ebp]
  000c0	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000c3	50		 push	 eax
  000c4	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  000c7	c1 f8 02	 sar	 eax, 2
  000ca	50		 push	 eax
  000cb	6a 00		 push	 0
  000cd	57		 push	 edi
  000ce	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  000d3	83 ee 04	 sub	 esi, 4

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  000d6	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  000d9	8b c6		 mov	 eax, esi
  000db	83 e0 fc	 and	 eax, -4			; fffffffcH
  000de	83 f8 08	 cmp	 eax, 8
  000e1	7d cd		 jge	 SHORT $LL13@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	0f 84 af 00 00
	00		 je	 $LN8@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  00010	56		 push	 esi
  00011	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00014	57		 push	 edi
  00015	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 365  : 		m_dwCheckCount++;

  00018	ff 46 08	 inc	 DWORD PTR [esi+8]

; 366  : 
; 367  : 		if (!pInstance)

  0001b	85 ff		 test	 edi, edi
  0001d	0f 84 97 00 00
	00		 je	 $LN13@PointTest2

; 368  : 			return;
; 369  : 
; 370  : 		if (m_fFromY < 0)

  00023	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00028	0f 57 db	 xorps	 xmm3, xmm3
  0002b	0f 2f d9	 comiss	 xmm3, xmm1
  0002e	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  00036	76 08		 jbe	 SHORT $LN6@PointTest2

; 371  : 			m_fFromY = -m_fFromY;

  00038	0f 57 ca	 xorps	 xmm1, xmm2
  0003b	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
$LN6@PointTest2:

; 372  : 		if (m_fToY < 0)

  00040	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00045	0f 2f d8	 comiss	 xmm3, xmm0
  00048	76 08		 jbe	 SHORT $LN7@PointTest2

; 373  : 			m_fToY = -m_fToY;

  0004a	0f 57 c2	 xorps	 xmm0, xmm2
  0004d	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0
$LN7@PointTest2:

; 374  : 		if (pInstance->GetObjectHeight(m_fFromX, m_fFromY, &m_fReturnHeight) ||

  00052	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00057	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0005a	50		 push	 eax
  0005b	83 ec 08	 sub	 esp, 8
  0005e	8b cf		 mov	 ecx, edi
  00060	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00070	84 c0		 test	 al, al
  00072	75 27		 jne	 SHORT $LN9@PointTest2
  00074	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00079	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0007c	50		 push	 eax
  0007d	83 ec 08	 sub	 esp, 8
  00080	8b cf		 mov	 ecx, edi
  00082	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00088	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00097	84 c0		 test	 al, al
  00099	74 1f		 je	 SHORT $LN13@PointTest2
$LN9@PointTest2:

; 375  : 			pInstance->GetObjectHeight(m_fToX, m_fToY, &m_fReturnHeight))
; 376  : 		{
; 377  : 			if (m_dwCollectCount<COLLECT_MAX)

  0009b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009e	83 f8 64	 cmp	 eax, 100		; 00000064H
  000a1	73 11		 jae	 SHORT $LN10@PointTest2

; 378  : 				m_apkShadowReceiver[m_dwCollectCount++]=pInstance;

  000a3	89 7c 86 24	 mov	 DWORD PTR [esi+eax*4+36], edi
  000a7	ff 46 04	 inc	 DWORD PTR [esi+4]
  000aa	5f		 pop	 edi

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000ab	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
  000af	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 62   : 	}

  000b0	5d		 pop	 ebp
  000b1	c2 0c 00	 ret	 12			; 0000000cH
$LN10@PointTest2:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 380  : 				m_dwCollectOverCount++;

  000b4	ff 06		 inc	 DWORD PTR [esi]

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000b6	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
$LN13@PointTest2:
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
$LN8@PointTest2:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 62   : 	}

  000bc	5d		 pop	 ebp
  000bd	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	0f 84 af 00 00
	00		 je	 $LN8@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000d	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  00010	56		 push	 esi
  00011	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00014	57		 push	 edi
  00015	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 365  : 		m_dwCheckCount++;

  00018	ff 46 08	 inc	 DWORD PTR [esi+8]

; 366  : 
; 367  : 		if (!pInstance)

  0001b	85 ff		 test	 edi, edi
  0001d	0f 84 97 00 00
	00		 je	 $LN13@RangeTestC

; 368  : 			return;
; 369  : 
; 370  : 		if (m_fFromY < 0)

  00023	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00028	0f 57 db	 xorps	 xmm3, xmm3
  0002b	0f 2f d9	 comiss	 xmm3, xmm1
  0002e	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  00036	76 08		 jbe	 SHORT $LN6@RangeTestC

; 371  : 			m_fFromY = -m_fFromY;

  00038	0f 57 ca	 xorps	 xmm1, xmm2
  0003b	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
$LN6@RangeTestC:

; 372  : 		if (m_fToY < 0)

  00040	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00045	0f 2f d8	 comiss	 xmm3, xmm0
  00048	76 08		 jbe	 SHORT $LN7@RangeTestC

; 373  : 			m_fToY = -m_fToY;

  0004a	0f 57 c2	 xorps	 xmm0, xmm2
  0004d	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0
$LN7@RangeTestC:

; 374  : 		if (pInstance->GetObjectHeight(m_fFromX, m_fFromY, &m_fReturnHeight) ||

  00052	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00057	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0005a	50		 push	 eax
  0005b	83 ec 08	 sub	 esp, 8
  0005e	8b cf		 mov	 ecx, edi
  00060	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00070	84 c0		 test	 al, al
  00072	75 27		 jne	 SHORT $LN9@RangeTestC
  00074	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00079	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0007c	50		 push	 eax
  0007d	83 ec 08	 sub	 esp, 8
  00080	8b cf		 mov	 ecx, edi
  00082	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00088	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00097	84 c0		 test	 al, al
  00099	74 1f		 je	 SHORT $LN13@RangeTestC
$LN9@RangeTestC:

; 375  : 			pInstance->GetObjectHeight(m_fToX, m_fToY, &m_fReturnHeight))
; 376  : 		{
; 377  : 			if (m_dwCollectCount<COLLECT_MAX)

  0009b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009e	83 f8 64	 cmp	 eax, 100		; 00000064H
  000a1	73 11		 jae	 SHORT $LN10@RangeTestC

; 378  : 				m_apkShadowReceiver[m_dwCollectCount++]=pInstance;

  000a3	89 7c 86 24	 mov	 DWORD PTR [esi+eax*4+36], edi
  000a7	ff 46 04	 inc	 DWORD PTR [esi+4]
  000aa	5f		 pop	 edi

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000ab	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
  000af	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 47   : 	}

  000b0	5d		 pop	 ebp
  000b1	c2 10 00	 ret	 16			; 00000010H
$LN10@RangeTestC:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 380  : 				m_dwCollectOverCount++;

  000b4	ff 06		 inc	 DWORD PTR [esi]

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000b6	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
$LN13@RangeTestC:
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
$LN8@RangeTestC:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 47   : 	}

  000bc	5d		 pop	 ebp
  000bd	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00003	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00008	0f 57 d2	 xorps	 xmm2, xmm2
  0000b	0f 2f d0	 comiss	 xmm2, xmm0
  0000e	73 0a		 jae	 SHORT $LN3@RayTraceCa
  00010	0f 2f 45 10	 comiss	 xmm0, DWORD PTR _distance$[ebp]
  00014	0f 82 ac 00 00
	00		 jb	 $LN9@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0001a	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  0001d	56		 push	 esi
  0001e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00021	57		 push	 edi
  00022	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 365  : 		m_dwCheckCount++;

  00025	ff 46 08	 inc	 DWORD PTR [esi+8]

; 366  : 
; 367  : 		if (!pInstance)

  00028	85 ff		 test	 edi, edi
  0002a	0f 84 94 00 00
	00		 je	 $LN14@RayTraceCa

; 368  : 			return;
; 369  : 
; 370  : 		if (m_fFromY < 0)

  00030	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00035	0f 2f d1	 comiss	 xmm2, xmm1
  00038	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  00040	76 08		 jbe	 SHORT $LN7@RayTraceCa

; 371  : 			m_fFromY = -m_fFromY;

  00042	0f 57 cb	 xorps	 xmm1, xmm3
  00045	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
$LN7@RayTraceCa:

; 372  : 		if (m_fToY < 0)

  0004a	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  0004f	0f 2f d0	 comiss	 xmm2, xmm0
  00052	76 08		 jbe	 SHORT $LN8@RayTraceCa

; 373  : 			m_fToY = -m_fToY;

  00054	0f 57 c3	 xorps	 xmm0, xmm3
  00057	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0
$LN8@RayTraceCa:

; 374  : 		if (pInstance->GetObjectHeight(m_fFromX, m_fFromY, &m_fReturnHeight) ||

  0005c	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00061	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00064	50		 push	 eax
  00065	83 ec 08	 sub	 esp, 8
  00068	8b cf		 mov	 ecx, edi
  0006a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00070	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00075	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  0007a	84 c0		 test	 al, al
  0007c	75 27		 jne	 SHORT $LN10@RayTraceCa
  0007e	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00083	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00086	50		 push	 eax
  00087	83 ec 08	 sub	 esp, 8
  0008a	8b cf		 mov	 ecx, edi
  0008c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00092	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00097	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009c	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  000a1	84 c0		 test	 al, al
  000a3	74 1f		 je	 SHORT $LN14@RayTraceCa
$LN10@RayTraceCa:

; 375  : 			pInstance->GetObjectHeight(m_fToX, m_fToY, &m_fReturnHeight))
; 376  : 		{
; 377  : 			if (m_dwCollectCount<COLLECT_MAX)

  000a5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a8	83 f8 64	 cmp	 eax, 100		; 00000064H
  000ab	73 11		 jae	 SHORT $LN11@RayTraceCa

; 378  : 				m_apkShadowReceiver[m_dwCollectCount++]=pInstance;

  000ad	89 7c 86 24	 mov	 DWORD PTR [esi+eax*4+36], edi
  000b1	ff 46 04	 inc	 DWORD PTR [esi+4]
  000b4	5f		 pop	 edi

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000b5	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
  000b9	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 34   : 	};

  000ba	5d		 pop	 ebp
  000bb	c2 14 00	 ret	 20			; 00000014H
$LN11@RayTraceCa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 380  : 				m_dwCollectOverCount++;

  000be	ff 06		 inc	 DWORD PTR [esi]

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000c0	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
$LN14@RayTraceCa:
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
$LN9@RayTraceCa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 34   : 	};

  000c6	5d		 pop	 ebp
  000c7	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ PROC ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicObjectInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@QAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CTerrain *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTerrain@@@std@@@std@@YAXPAPAVCTerrain@@QAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CTerrain *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicObjectInstance * *,std::allocator<CGraphicObjectInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicObjectInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicObjectInstance * *,std::allocator<CGraphicObjectInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_move<CTerrain * *,std::allocator<CTerrain *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_move<CTerrain * *,std::allocator<CTerrain *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z PROC ; RangeTester<PCBlocker_SInstanceList>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 0e		 je	 SHORT $LN2@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	ff 70 44	 push	 DWORD PTR [eax+68]
  00012	e8 00 00 00 00	 call	 ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
$LN2@PointTest2:

; 61   : 		}
; 62   : 	}

  00017	5d		 pop	 ebp
  00018	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 0e		 je	 SHORT $LN2@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	ff 70 44	 push	 DWORD PTR [eax+68]
  00012	e8 00 00 00 00	 call	 ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
$LN2@RangeTestC:

; 47   : 	}

  00017	5d		 pop	 ebp
  00018	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00003	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	0f 2f c1	 comiss	 xmm0, xmm1
  0000e	73 06		 jae	 SHORT $LN3@RayTraceCa
  00010	0f 2f 4d 10	 comiss	 xmm1, DWORD PTR _distance$[ebp]
  00014	72 0e		 jb	 SHORT $LN2@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00016	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  00019	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0001c	ff 70 44	 push	 DWORD PTR [eax+68]
  0001f	e8 00 00 00 00	 call	 ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
$LN2@RayTraceCa:

; 34   : 	};

  00024	5d		 pop	 ebp
  00025	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
;	COMDAT ??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ PROC ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ ENDP ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
_fRadius$1 = -36					; size = 4
_fRadius$2 = -32					; size = 4
_v3Center$3 = -28					; size = 12
_v3Center$4 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_pInstance$ = 8						; size = 4
??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z PROC ; PCBlocker_SInstanceList::operator(), COMDAT
; _this$ = ecx

; 545  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _pInstance$[ebp]

; 546  : 		if (!m_pCamera)

  00017	83 be 10 08 00
	00 00		 cmp	 DWORD PTR [esi+2064], 0
  0001e	0f 84 26 01 00
	00		 je	 $LN42@operator

; 547  : 			return;
; 548  : 
; 549  : 		if (!pInstance)

  00024	85 ff		 test	 edi, edi
  00026	0f 84 1e 01 00
	00		 je	 $LN42@operator

; 550  : 			return;
; 551  : 
; 552  : 		++m_dwInstCount;

  0002c	ff 06		 inc	 DWORD PTR [esi]
  0002e	53		 push	 ebx

; 553  : 
; 554  : 		PCBlocker_CDynamicSphereInstanceVector::Iterator i;
; 555  : 
; 556  : 		for (i=m_pkDSIVector->Begin(); i!=m_pkDSIVector->End(); ++i)

  0002f	8b 9e 0c 08 00
	00		 mov	 ebx, DWORD PTR [esi+2060]
  00035	8d 43 70	 lea	 eax, DWORD PTR [ebx+112]
  00038	3b d8		 cmp	 ebx, eax
  0003a	0f 84 09 01 00
	00		 je	 $LN43@operator
$LL4@operator:

; 557  : 		{
; 558  : 			CDynamicSphereInstance& rkDSI = *i;
; 559  : 			if (pInstance->CollisionDynamicSphere(rkDSI) )

  00040	53		 push	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  00048	84 c0		 test	 al, al
  0004a	0f 84 ab 00 00
	00		 je	 $LN2@operator

; 560  : 			{
; 561  : 				if (TREE_OBJECT == pInstance->GetType())

  00050	8b 07		 mov	 eax, DWORD PTR [edi]
  00052	8b cf		 mov	 ecx, edi
  00054	ff 50 04	 call	 DWORD PTR [eax+4]
  00057	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  0005c	0f 84 c0 00 00
	00		 je	 $LN38@operator

; 562  : 				{
; 563  : 					__AppendPCBlocker(pInstance);
; 564  : 					return;
; 565  : 				}
; 566  : 				else if (THING_OBJECT == pInstance->GetType())

  00062	8b 07		 mov	 eax, DWORD PTR [edi]
  00064	8b cf		 mov	 ecx, edi
  00066	ff 50 04	 call	 DWORD PTR [eax+4]
  00069	8b 17		 mov	 edx, DWORD PTR [edi]
  0006b	8b cf		 mov	 ecx, edi
  0006d	3d 13 1f f2 ad	 cmp	 eax, -1376641261	; adf21f13H
  00072	75 17		 jne	 SHORT $LN10@operator

; 532  : 		pInstance->GetBoundingSphere(v3Center, fRadius);

  00074	8d 45 e0	 lea	 eax, DWORD PTR _fRadius$2[ebp]
  00077	50		 push	 eax
  00078	8d 45 f0	 lea	 eax, DWORD PTR _v3Center$4[ebp]
  0007b	50		 push	 eax
  0007c	ff 52 0c	 call	 DWORD PTR [edx+12]

; 533  : 
; 534  : 		D3DXVECTOR2 v2TargetToCenter;
; 535  : 		v2TargetToCenter.x = v3Center.x - m_v2Target.x;
; 536  : 		v2TargetToCenter.y = v3Center.y - m_v2Target.y;

  0007f	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _v3Center$4[ebp+4]
  00084	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Center$4[ebp]

; 567  : 				{
; 568  : 					__AppendObject(pInstance);
; 569  : 				}

  00089	eb 2e		 jmp	 SHORT $LN47@operator
$LN10@operator:

; 570  : 				else if (ACTOR_OBJECT == pInstance->GetType())

  0008b	ff 52 04	 call	 DWORD PTR [edx+4]
  0008e	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00093	75 66		 jne	 SHORT $LN2@operator

; 571  : 				{
; 572  : 					if (((CActorInstance *)pInstance)->IsBuilding())

  00095	8b cf		 mov	 ecx, edi
  00097	e8 00 00 00 00	 call	 ?IsBuilding@CActorInstance@@QAE_NXZ ; CActorInstance::IsBuilding
  0009c	84 c0		 test	 al, al
  0009e	74 5b		 je	 SHORT $LN2@operator

; 532  : 		pInstance->GetBoundingSphere(v3Center, fRadius);

  000a0	8b 07		 mov	 eax, DWORD PTR [edi]
  000a2	8d 4d dc	 lea	 ecx, DWORD PTR _fRadius$1[ebp]
  000a5	51		 push	 ecx
  000a6	8d 4d e4	 lea	 ecx, DWORD PTR _v3Center$3[ebp]
  000a9	51		 push	 ecx
  000aa	8b cf		 mov	 ecx, edi
  000ac	ff 50 0c	 call	 DWORD PTR [eax+12]

; 533  : 
; 534  : 		D3DXVECTOR2 v2TargetToCenter;
; 535  : 		v2TargetToCenter.x = v3Center.x - m_v2Target.x;
; 536  : 		v2TargetToCenter.y = v3Center.y - m_v2Target.y;

  000af	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _v3Center$3[ebp+4]
  000b4	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Center$3[ebp]
$LN47@operator:

; 553  : 
; 554  : 		PCBlocker_CDynamicSphereInstanceVector::Iterator i;
; 555  : 
; 556  : 		for (i=m_pkDSIVector->Begin(); i!=m_pkDSIVector->End(); ++i)

  000b9	f3 0f 5c 86 1c
	08 00 00	 subss	 xmm0, DWORD PTR [esi+2076]
  000c1	f3 0f 5c 8e 20
	08 00 00	 subss	 xmm1, DWORD PTR [esi+2080]
  000c9	f3 0f 59 86 14
	08 00 00	 mulss	 xmm0, DWORD PTR [esi+2068]
  000d1	f3 0f 59 8e 18
	08 00 00	 mulss	 xmm1, DWORD PTR [esi+2072]
  000d9	f3 0f 58 c8	 addss	 xmm1, xmm0
  000dd	0f 57 c0	 xorps	 xmm0, xmm0
  000e0	0f 2f c1	 comiss	 xmm0, xmm1
  000e3	72 16		 jb	 SHORT $LN2@operator
  000e5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e8	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  000ed	73 09		 jae	 SHORT $LN34@operator
  000ef	89 7c 86 0c	 mov	 DWORD PTR [esi+eax*4+12], edi
  000f3	ff 46 04	 inc	 DWORD PTR [esi+4]
  000f6	eb 03		 jmp	 SHORT $LN2@operator
$LN34@operator:
  000f8	ff 46 08	 inc	 DWORD PTR [esi+8]
$LN2@operator:
  000fb	8b 86 0c 08 00
	00		 mov	 eax, DWORD PTR [esi+2060]
  00101	83 c3 1c	 add	 ebx, 28			; 0000001cH
  00104	83 c0 70	 add	 eax, 112		; 00000070H
  00107	3b d8		 cmp	 ebx, eax
  00109	0f 85 31 ff ff
	ff		 jne	 $LL4@operator

; 573  : 					{
; 574  : 						__AppendObject(pInstance);
; 575  : 					}
; 576  : 				}
; 577  : 			}
; 578  : 		}
; 579  : 	}

  0010f	5b		 pop	 ebx
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00115	33 cd		 xor	 ecx, ebp
  00117	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c2 04 00	 ret	 4
$LN38@operator:

; 522  : 		if (m_dwBlockerCount<CAPACITY)

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  0012a	73 1a		 jae	 SHORT $LN16@operator

; 523  : 			m_apkPCBlocker[m_dwBlockerCount++]=pInstance;

  0012c	89 7c 86 0c	 mov	 DWORD PTR [esi+eax*4+12], edi
  00130	ff 46 04	 inc	 DWORD PTR [esi+4]
  00133	5b		 pop	 ebx
  00134	5f		 pop	 edi

; 573  : 					{
; 574  : 						__AppendObject(pInstance);
; 575  : 					}
; 576  : 				}
; 577  : 			}
; 578  : 		}
; 579  : 	}

  00135	5e		 pop	 esi
  00136	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00139	33 cd		 xor	 ecx, ebp
  0013b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 04 00	 ret	 4
$LN16@operator:

; 525  : 			m_dwBlockerOverCount++;

  00146	ff 46 08	 inc	 DWORD PTR [esi+8]
$LN43@operator:
  00149	5b		 pop	 ebx
$LN42@operator:

; 573  : 					{
; 574  : 						__AppendObject(pInstance);
; 575  : 					}
; 576  : 				}
; 577  : 			}
; 578  : 		}
; 579  : 	}

  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014d	5f		 pop	 edi
  0014e	33 cd		 xor	 ecx, ebp
  00150	5e		 pop	 esi
  00151	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 04 00	 ret	 4
??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ENDP ; PCBlocker_SInstanceList::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ PROC	; CMapOutdoor::FPushAreaToDeleteVector::~FPushAreaToDeleteVector, COMDAT
; _this$ = ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00006	85 c9		 test	 ecx, ecx
  00008	74 27		 je	 SHORT $LN6@FPushAreaT

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0000d	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000f	83 e0 fc	 and	 eax, -4			; fffffffcH
  00012	50		 push	 eax
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00019	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00023	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 1699 :             _Myend   = pointer();

  0002a	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN6@FPushAreaT:
  00031	5e		 pop	 esi
  00032	c3		 ret	 0
??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ ENDP	; CMapOutdoor::FPushAreaToDeleteVector::~FPushAreaToDeleteVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z
_TEXT	SEGMENT
_wReferenceCoordY$1$ = -20				; size = 4
_this$1$ = -16						; size = 4
_wReferenceCoordX$1$ = -12				; size = 4
_wCoordY$ = -8						; size = 2
_wCoordX$ = -4						; size = 2
_pArea$ = 8						; size = 4
??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z PROC ; CMapOutdoor::FPushAreaToDeleteVector::operator(), COMDAT
; _this$ = ecx

; 791  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	8b c1		 mov	 eax, ecx
  00008	53		 push	 ebx
  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  0000a	8b 75 08	 mov	 esi, DWORD PTR _pArea$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000d	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 791  : {

  00010	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00011	8d 78 0c	 lea	 edi, DWORD PTR [eax+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 791  : {

  00014	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00017	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  00019	3b c3		 cmp	 eax, ebx
  0001b	74 0e		 je	 SHORT $LN114@operator
  0001d	0f 1f 00	 npad	 3
$LL36@operator:

; 5133 :         if (*_First == _Val) {

  00020	39 30		 cmp	 DWORD PTR [eax], esi
  00022	74 07		 je	 SHORT $LN114@operator

; 5132 :     for (; _First != _Last; ++_First) {

  00024	83 c0 04	 add	 eax, 4
  00027	3b c3		 cmp	 eax, ebx
  00029	75 f5		 jne	 SHORT $LL36@operator
$LN114@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ; std::_Refancy<CArea * *,0>
  00031	83 c4 04	 add	 esp, 4
  00034	3b c3		 cmp	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 793  : 	if (aIterator != m_ReturnAreaVector.end())

  00036	0f 85 d9 00 00
	00		 jne	 $LN13@operator

; 794  : 		return;
; 795  : 
; 796  : 	WORD wReferenceCoordX = m_CurCoordinate.m_sTerrainCoordX;

  0003c	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]

; 797  : 	WORD wReferenceCoordY = m_CurCoordinate.m_sTerrainCoordY;
; 798  : 
; 799  : 	WORD wCoordX, wCoordY;
; 800  : 	pArea->GetCoordinate(&wCoordX, &wCoordY);

  0003f	8b ce		 mov	 ecx, esi
  00041	0f b7 43 08	 movzx	 eax, WORD PTR [ebx+8]
  00045	89 45 f4	 mov	 DWORD PTR _wReferenceCoordX$1$[ebp], eax
  00048	0f b7 43 0a	 movzx	 eax, WORD PTR [ebx+10]
  0004c	89 45 ec	 mov	 DWORD PTR _wReferenceCoordY$1$[ebp], eax
  0004f	8d 45 f8	 lea	 eax, DWORD PTR _wCoordY$[ebp]
  00052	50		 push	 eax
  00053	8d 45 fc	 lea	 eax, DWORD PTR _wCoordX$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?GetCoordinate@CArea@@QAEXPAG0@Z ; CArea::GetCoordinate

; 801  : 
; 802  : 	switch(m_eLRDeleteDir)

  0005c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0005e	83 e8 00	 sub	 eax, 0
  00061	74 16		 je	 SHORT $LN7@operator
  00063	83 e8 01	 sub	 eax, 1
  00066	75 3c		 jne	 SHORT $LN55@operator

; 806  : 			m_ReturnAreaVector.push_back(pArea);
; 807  : 		break;
; 808  : 	case DELETE_RIGHT:
; 809  : 		if (wCoordX > wReferenceCoordX + LOAD_SIZE_WIDTH)

  00068	8b 45 f4	 mov	 eax, DWORD PTR _wReferenceCoordX$1$[ebp]
  0006b	0f b7 c8	 movzx	 ecx, ax
  0006e	0f b7 45 fc	 movzx	 eax, WORD PTR _wCoordX$[ebp]
  00072	41		 inc	 ecx
  00073	3b c1		 cmp	 eax, ecx
  00075	76 2d		 jbe	 SHORT $LN55@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00077	eb 0f		 jmp	 SHORT $LN118@operator
$LN7@operator:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 805  : 		if (wCoordX < wReferenceCoordX - LOAD_SIZE_WIDTH)

  00079	8b 45 f4	 mov	 eax, DWORD PTR _wReferenceCoordX$1$[ebp]
  0007c	0f b7 c8	 movzx	 ecx, ax
  0007f	0f b7 45 fc	 movzx	 eax, WORD PTR _wCoordX$[ebp]
  00083	49		 dec	 ecx
  00084	3b c1		 cmp	 eax, ecx
  00086	7d 1c		 jge	 SHORT $LN55@operator
$LN118@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00088	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0008b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0008e	74 08		 je	 SHORT $LN56@operator
  00090	89 30		 mov	 DWORD PTR [eax], esi
  00092	83 47 04 04	 add	 DWORD PTR [edi+4], 4
  00096	eb 0c		 jmp	 SHORT $LN55@operator
$LN56@operator:
  00098	8d 4d 08	 lea	 ecx, DWORD PTR _pArea$[ebp]
  0009b	51		 push	 ecx
  0009c	50		 push	 eax
  0009d	8b cf		 mov	 ecx, edi
  0009f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
$LN55@operator:
  000a4	8b 5b 10	 mov	 ebx, DWORD PTR [ebx+16]
  000a7	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  000a9	3b c3		 cmp	 eax, ebx
  000ab	74 0e		 je	 SHORT $LN115@operator
  000ad	0f 1f 00	 npad	 3
$LL86@operator:

; 5133 :         if (*_First == _Val) {

  000b0	39 30		 cmp	 DWORD PTR [eax], esi
  000b2	74 07		 je	 SHORT $LN115@operator

; 5132 :     for (; _First != _Last; ++_First) {

  000b4	83 c0 04	 add	 eax, 4
  000b7	3b c3		 cmp	 eax, ebx
  000b9	75 f5		 jne	 SHORT $LL86@operator
$LN115@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCArea@@$0A@@std@@YAPAPAVCArea@@PAPAV1@@Z ; std::_Refancy<CArea * *,0>
  000c1	83 c4 04	 add	 esp, 4
  000c4	3b c3		 cmp	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 815  : 	if (aIterator != m_ReturnAreaVector.end())

  000c6	75 4d		 jne	 SHORT $LN13@operator

; 816  : 		return;
; 817  : 
; 818  : 	switch(m_eTBDeleteDir)

  000c8	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  000cb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ce	83 e8 02	 sub	 eax, 2
  000d1	74 28		 je	 SHORT $LN12@operator
  000d3	83 e8 01	 sub	 eax, 1
  000d6	75 3d		 jne	 SHORT $LN13@operator

; 823  : 		break;
; 824  : 	case DELETE_BOTTOM:
; 825  : 		if (wCoordY > wReferenceCoordY + LOAD_SIZE_WIDTH)

  000d8	8b 45 ec	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000db	0f b7 c8	 movzx	 ecx, ax
  000de	0f b7 45 f8	 movzx	 eax, WORD PTR _wCoordY$[ebp]
  000e2	41		 inc	 ecx
  000e3	3b c1		 cmp	 eax, ecx
  000e5	76 2e		 jbe	 SHORT $LN13@operator

; 822  : 			m_ReturnAreaVector.push_back(pArea);

  000e7	8d 45 08	 lea	 eax, DWORD PTR _pArea$[ebp]
  000ea	8b cf		 mov	 ecx, edi
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ; std::vector<CArea *,std::allocator<CArea *> >::push_back
  000f2	5f		 pop	 edi

; 826  : 			m_ReturnAreaVector.push_back(pArea);
; 827  : 		break;
; 828  : 	}
; 829  : }

  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 04 00	 ret	 4
$LN12@operator:

; 819  : 	{
; 820  : 	case DELETE_TOP:
; 821  : 		if (wCoordY < wReferenceCoordY - LOAD_SIZE_WIDTH)

  000fb	8b 45 ec	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000fe	0f b7 c8	 movzx	 ecx, ax
  00101	0f b7 45 f8	 movzx	 eax, WORD PTR _wCoordY$[ebp]
  00105	49		 dec	 ecx
  00106	3b c1		 cmp	 eax, ecx
  00108	7d 0b		 jge	 SHORT $LN13@operator

; 822  : 			m_ReturnAreaVector.push_back(pArea);

  0010a	8d 45 08	 lea	 eax, DWORD PTR _pArea$[ebp]
  0010d	8b cf		 mov	 ecx, edi
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ; std::vector<CArea *,std::allocator<CArea *> >::push_back
$LN13@operator:

; 826  : 			m_ReturnAreaVector.push_back(pArea);
; 827  : 		break;
; 828  : 	}
; 829  : }

  00115	5f		 pop	 edi
  00116	5e		 pop	 esi
  00117	5b		 pop	 ebx
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 04 00	 ret	 4
??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z ENDP ; CMapOutdoor::FPushAreaToDeleteVector::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ PROC	; CMapOutdoor::FPushTerrainToDeleteVector::~FPushTerrainToDeleteVector, COMDAT
; _this$ = ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00006	85 c9		 test	 ecx, ecx
  00008	74 27		 je	 SHORT $LN6@FPushTerra

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0000d	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000f	83 e0 fc	 and	 eax, -4			; fffffffcH
  00012	50		 push	 eax
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00019	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00023	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 1699 :             _Myend   = pointer();

  0002a	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN6@FPushTerra:
  00031	5e		 pop	 esi
  00032	c3		 ret	 0
??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ ENDP	; CMapOutdoor::FPushTerrainToDeleteVector::~FPushTerrainToDeleteVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\AreaTerrain.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\AreaTerrain.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z
_TEXT	SEGMENT
_wCoordY$1$ = -12					; size = 4
_wReferenceCoordY$1$ = -8				; size = 4
_this$1$ = -4						; size = 4
_pTerrain$ = 8						; size = 4
??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z PROC ; CMapOutdoor::FPushTerrainToDeleteVector::operator(), COMDAT
; _this$ = ecx

; 749  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	8b c1		 mov	 eax, ecx
  00008	53		 push	 ebx
  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  0000a	8b 75 08	 mov	 esi, DWORD PTR _pTerrain$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000d	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 749  : {

  00010	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00011	8d 78 0c	 lea	 edi, DWORD PTR [eax+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 749  : {

  00014	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00017	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  00019	3b c3		 cmp	 eax, ebx
  0001b	74 0e		 je	 SHORT $LN116@operator
  0001d	0f 1f 00	 npad	 3
$LL36@operator:

; 5133 :         if (*_First == _Val) {

  00020	39 30		 cmp	 DWORD PTR [eax], esi
  00022	74 07		 je	 SHORT $LN116@operator

; 5132 :     for (; _First != _Last; ++_First) {

  00024	83 c0 04	 add	 eax, 4
  00027	3b c3		 cmp	 eax, ebx
  00029	75 f5		 jne	 SHORT $LL36@operator
$LN116@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ; std::_Refancy<CTerrain * *,0>
  00031	83 c4 04	 add	 esp, 4
  00034	3b c3		 cmp	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 751  : 	if (aIterator != m_ReturnTerrainVector.end())

  00036	0f 85 c5 00 00
	00		 jne	 $LN13@operator

; 752  : 		return;
; 753  : 
; 754  : 	WORD wReferenceCoordX = m_CurCoordinate.m_sTerrainCoordX;

  0003c	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\AreaTerrain.h

; 92   : 			*usCoordX = m_wX;

  0003f	0f b7 96 6c a5
	06 00		 movzx	 edx, WORD PTR [esi+435564]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 755  : 	WORD wReferenceCoordY = m_CurCoordinate.m_sTerrainCoordY;

  00046	0f b7 43 0a	 movzx	 eax, WORD PTR [ebx+10]
  0004a	0f b7 4b 08	 movzx	 ecx, WORD PTR [ebx+8]
  0004e	89 45 f8	 mov	 DWORD PTR _wReferenceCoordY$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\AreaTerrain.h

; 93   : 			*usCoordY = m_wY;

  00051	0f b7 86 6e a5
	06 00		 movzx	 eax, WORD PTR [esi+435566]
  00058	89 45 f4	 mov	 DWORD PTR _wCoordY$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 761  : 	switch(m_eLRDeleteDir)

  0005b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0005d	83 e8 00	 sub	 eax, 0
  00060	74 0c		 je	 SHORT $LN7@operator
  00062	83 e8 01	 sub	 eax, 1
  00065	75 28		 jne	 SHORT $LN57@operator

; 765  : 			m_ReturnTerrainVector.push_back(pTerrain);
; 766  : 		break;
; 767  : 	case DELETE_RIGHT:
; 768  : 		if (wCoordX > wReferenceCoordX + LOAD_SIZE_WIDTH)

  00067	41		 inc	 ecx
  00068	3b d1		 cmp	 edx, ecx
  0006a	76 23		 jbe	 SHORT $LN57@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0006c	eb 05		 jmp	 SHORT $LN120@operator
$LN7@operator:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 764  : 		if (wCoordX < wReferenceCoordX - LOAD_SIZE_WIDTH)

  0006e	49		 dec	 ecx
  0006f	3b d1		 cmp	 edx, ecx
  00071	7d 1c		 jge	 SHORT $LN57@operator
$LN120@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00073	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00076	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00079	74 08		 je	 SHORT $LN58@operator
  0007b	89 30		 mov	 DWORD PTR [eax], esi
  0007d	83 47 04 04	 add	 DWORD PTR [edi+4], 4
  00081	eb 0c		 jmp	 SHORT $LN57@operator
$LN58@operator:
  00083	8d 4d 08	 lea	 ecx, DWORD PTR _pTerrain$[ebp]
  00086	51		 push	 ecx
  00087	50		 push	 eax
  00088	8b cf		 mov	 ecx, edi
  0008a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>
$LN57@operator:
  0008f	8b 5b 10	 mov	 ebx, DWORD PTR [ebx+16]
  00092	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  00094	3b c3		 cmp	 eax, ebx
  00096	74 0b		 je	 SHORT $LN117@operator
$LL88@operator:

; 5133 :         if (*_First == _Val) {

  00098	39 30		 cmp	 DWORD PTR [eax], esi
  0009a	74 07		 je	 SHORT $LN117@operator

; 5132 :     for (; _First != _Last; ++_First) {

  0009c	83 c0 04	 add	 eax, 4
  0009f	3b c3		 cmp	 eax, ebx
  000a1	75 f5		 jne	 SHORT $LL88@operator
$LN117@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCTerrain@@$0A@@std@@YAPAPAVCTerrain@@PAPAV1@@Z ; std::_Refancy<CTerrain * *,0>
  000a9	83 c4 04	 add	 esp, 4
  000ac	3b c3		 cmp	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 774  : 	if (aIterator != m_ReturnTerrainVector.end())

  000ae	75 51		 jne	 SHORT $LN13@operator

; 775  : 		return;
; 776  : 
; 777  : 	switch(m_eTBDeleteDir)

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000b3	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b6	83 e8 02	 sub	 eax, 2
  000b9	74 2a		 je	 SHORT $LN12@operator
  000bb	83 e8 01	 sub	 eax, 1
  000be	75 41		 jne	 SHORT $LN13@operator

; 782  : 		break;
; 783  : 	case DELETE_BOTTOM:
; 784  : 		if (wCoordY > wReferenceCoordY + LOAD_SIZE_WIDTH)

  000c0	8b 45 f8	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000c3	0f b7 c8	 movzx	 ecx, ax
  000c6	8b 45 f4	 mov	 eax, DWORD PTR _wCoordY$1$[ebp]
  000c9	41		 inc	 ecx
  000ca	0f b7 c0	 movzx	 eax, ax
  000cd	3b c1		 cmp	 eax, ecx
  000cf	76 30		 jbe	 SHORT $LN13@operator

; 781  : 			m_ReturnTerrainVector.push_back(pTerrain);

  000d1	8d 45 08	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000d4	8b cf		 mov	 ecx, edi
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
  000dc	5f		 pop	 edi

; 785  : 			m_ReturnTerrainVector.push_back(pTerrain);
; 786  : 		break;
; 787  : 	}
; 788  : }

  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c2 04 00	 ret	 4
$LN12@operator:

; 778  : 	{
; 779  : 	case DELETE_TOP:
; 780  : 		if (wCoordY < wReferenceCoordY - LOAD_SIZE_WIDTH)

  000e5	8b 45 f8	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000e8	0f b7 c8	 movzx	 ecx, ax
  000eb	8b 45 f4	 mov	 eax, DWORD PTR _wCoordY$1$[ebp]
  000ee	49		 dec	 ecx
  000ef	0f b7 c0	 movzx	 eax, ax
  000f2	3b c1		 cmp	 eax, ecx
  000f4	7d 0b		 jge	 SHORT $LN13@operator

; 781  : 			m_ReturnTerrainVector.push_back(pTerrain);

  000f6	8d 45 08	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000f9	8b cf		 mov	 ecx, edi
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
$LN13@operator:

; 785  : 			m_ReturnTerrainVector.push_back(pTerrain);
; 786  : 		break;
; 787  : 	}
; 788  : }

  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z ENDP ; CMapOutdoor::FPushTerrainToDeleteVector::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::push_back, COMDAT
; _this$ = ecx

; 716  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 704  :         if (_Mylast != _My_data._Myend) {

  00003	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00006	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00009	74 0f		 je	 SHORT $LN4@push_back

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 02		 mov	 DWORD PTR [edx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00012	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 717  :         emplace_back(_Val);
; 718  :     }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@push_back:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0001a	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>

; 717  :         emplace_back(_Val);
; 718  :     }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back, COMDAT
; _this$ = ecx

; 716  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 704  :         if (_Mylast != _My_data._Myend) {

  00003	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00006	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00009	74 0f		 je	 SHORT $LN4@push_back

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 02		 mov	 DWORD PTR [edx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00012	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 717  :         emplace_back(_Val);
; 718  :     }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@push_back:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0001a	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>

; 717  :         emplace_back(_Val);
; 718  :     }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\TerrainPatch.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\TerrainPatch.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
tv997 = -8						; size = 4
tv998 = -4						; size = 4
_Node$ = 8						; size = 4
?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z PROC ; CMapOutdoor::UpdateQuadTreeHeights, COMDAT
; _this$ = ecx

; 1065 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 5c 24 0c	 mov	 DWORD PTR _this$1$[esp+24], ebx

; 1066 : 	// Inserted by levites
; 1067 : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::UpdateQuadTreeHeights");
; 1068 : 	if (!m_pTerrainPatchProxyList)

  00012	8b 73 64	 mov	 esi, DWORD PTR [ebx+100]
  00015	85 f6		 test	 esi, esi
  00017	0f 84 db 01 00
	00		 je	 $LN83@UpdateQuad

; 1087 : 		{
; 1088 : 			long patch = y * m_wPatchCount + x;
; 1089 : 
; 1090 : 			if (!m_pTerrainPatchProxyList[patch].isUsed())

  0001d	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f000000
  00025	8b d6		 mov	 edx, esi
  00027	8b 7d 08	 mov	 edi, DWORD PTR _Node$[ebp]
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL66@UpdateQuad:

; 1069 : 		return;
; 1070 : 
; 1071 : 	float minx, maxx, miny, maxy, minz, maxz;
; 1072 : 	minx = maxx = miny = maxy = minz = maxz = 0;
; 1073 : 
; 1074 : 	if (m_pTerrainPatchProxyList[Node->PatchNum].isUsed())

  00030	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00033	0f 57 db	 xorps	 xmm3, xmm3
  00036	0f 57 ed	 xorps	 xmm5, xmm5
  00039	0f 57 e4	 xorps	 xmm4, xmm4
  0003c	0f 57 f6	 xorps	 xmm6, xmm6
  0003f	0f 57 d2	 xorps	 xmm2, xmm2
  00042	0f 57 c9	 xorps	 xmm1, xmm1
  00045	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0004c	2b c8		 sub	 ecx, eax
  0004e	80 7c 8a 04 00	 cmp	 BYTE PTR [edx+ecx*4+4], 0
  00053	74 21		 je	 SHORT $LN77@UpdateQuad
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\TerrainPatch.h

; 64   : 	float GetMinX()											{ return m_fMinX; }

  00055	8b 44 8a 0c	 mov	 eax, DWORD PTR [edx+ecx*4+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 1076 : 		minx = m_pTerrainPatchProxyList[Node->PatchNum].GetMinX();

  00059	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]

; 1077 : 		maxx = m_pTerrainPatchProxyList[Node->PatchNum].GetMaxX();

  0005d	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]

; 1078 : 		miny = m_pTerrainPatchProxyList[Node->PatchNum].GetMinY();

  00062	f3 0f 10 70 08	 movss	 xmm6, DWORD PTR [eax+8]

; 1079 : 		maxy = m_pTerrainPatchProxyList[Node->PatchNum].GetMaxY();

  00067	f3 0f 10 60 0c	 movss	 xmm4, DWORD PTR [eax+12]

; 1080 : 		minz = m_pTerrainPatchProxyList[Node->PatchNum].GetMinZ();

  0006c	f3 0f 10 68 10	 movss	 xmm5, DWORD PTR [eax+16]

; 1081 : 		maxz = m_pTerrainPatchProxyList[Node->PatchNum].GetMaxZ();

  00071	f3 0f 10 58 14	 movss	 xmm3, DWORD PTR [eax+20]
$LN77@UpdateQuad:

; 1082 : 	}
; 1083 : 
; 1084 : 	for (long y = Node->y0; y <= Node->y1; y++)

  00076	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00079	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  0007c	89 44 24 14	 mov	 DWORD PTR tv998[esp+24], eax
  00080	3b f0		 cmp	 esi, eax
  00082	0f 8f a8 00 00
	00		 jg	 $LN78@UpdateQuad

; 1085 : 	{
; 1086 : 		for (long x = Node->x0; x <= Node->x1; x++)

  00088	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0008b	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  0008e	8b 7c 24 0c	 mov	 edi, DWORD PTR _this$1$[esp+24]
  00092	89 54 24 10	 mov	 DWORD PTR tv997[esp+24], edx
$LL4@UpdateQuad:
  00096	3b da		 cmp	 ebx, edx
  00098	0f 8f 82 00 00
	00		 jg	 $LN2@UpdateQuad

; 1087 : 		{
; 1088 : 			long patch = y * m_wPatchCount + x;
; 1089 : 
; 1090 : 			if (!m_pTerrainPatchProxyList[patch].isUsed())

  0009e	0f b7 8f 8c 00
	00 00		 movzx	 ecx, WORD PTR [edi+140]
  000a5	2b d3		 sub	 edx, ebx
  000a7	0f af ce	 imul	 ecx, esi
  000aa	03 cb		 add	 ecx, ebx
  000ac	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  000b3	2b c1		 sub	 eax, ecx
  000b5	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]
  000b8	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000bb	42		 inc	 edx
  000bc	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000bf	90		 npad	 1
$LL7@UpdateQuad:
  000c0	80 78 f8 00	 cmp	 BYTE PTR [eax-8], 0
  000c4	74 4a		 je	 SHORT $LN5@UpdateQuad
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\TerrainPatch.h

; 64   : 	float GetMinX()											{ return m_fMinX; }

  000c6	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 1093 : 			if (m_pTerrainPatchProxyList[patch].GetMinX() < minx)

  000c8	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  000cc	0f 2f c8	 comiss	 xmm1, xmm0
  000cf	76 03		 jbe	 SHORT $LN11@UpdateQuad

; 1094 : 				minx = m_pTerrainPatchProxyList[patch].GetMinX();

  000d1	0f 28 c8	 movaps	 xmm1, xmm0
$LN11@UpdateQuad:

; 1095 : 			if (m_pTerrainPatchProxyList[patch].GetMaxX() > maxx)

  000d4	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  000d9	f3 0f 5f c2	 maxss	 xmm0, xmm2

; 1096 : 				maxx = m_pTerrainPatchProxyList[patch].GetMaxX();

  000dd	0f 28 d0	 movaps	 xmm2, xmm0

; 1097 : 
; 1098 : 			if (m_pTerrainPatchProxyList[patch].GetMinY() < miny)

  000e0	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000e5	f3 0f 5d c6	 minss	 xmm0, xmm6

; 1099 : 				miny = m_pTerrainPatchProxyList[patch].GetMinY();

  000e9	0f 28 f0	 movaps	 xmm6, xmm0

; 1100 : 			if (m_pTerrainPatchProxyList[patch].GetMaxY() > maxy)

  000ec	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  000f1	f3 0f 5f c4	 maxss	 xmm0, xmm4

; 1101 : 				maxy = m_pTerrainPatchProxyList[patch].GetMaxY();

  000f5	0f 28 e0	 movaps	 xmm4, xmm0

; 1102 : 
; 1103 : 			if (m_pTerrainPatchProxyList[patch].GetMinZ() < minz)

  000f8	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  000fd	f3 0f 5d c5	 minss	 xmm0, xmm5

; 1104 : 				minz = m_pTerrainPatchProxyList[patch].GetMinZ();

  00101	0f 28 e8	 movaps	 xmm5, xmm0

; 1105 : 			if (m_pTerrainPatchProxyList[patch].GetMaxZ() > maxz)

  00104	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  00109	f3 0f 5f c3	 maxss	 xmm0, xmm3

; 1106 : 				maxz = m_pTerrainPatchProxyList[patch].GetMaxZ();

  0010d	0f 28 d8	 movaps	 xmm3, xmm0
$LN5@UpdateQuad:

; 1085 : 	{
; 1086 : 		for (long x = Node->x0; x <= Node->x1; x++)

  00110	83 c0 1c	 add	 eax, 28			; 0000001cH
  00113	83 ea 01	 sub	 edx, 1
  00116	75 a8		 jne	 SHORT $LL7@UpdateQuad
  00118	8b 54 24 10	 mov	 edx, DWORD PTR tv997[esp+24]
  0011c	8b 44 24 14	 mov	 eax, DWORD PTR tv998[esp+24]
$LN2@UpdateQuad:

; 1082 : 	}
; 1083 : 
; 1084 : 	for (long y = Node->y0; y <= Node->y1; y++)

  00120	46		 inc	 esi
  00121	3b f0		 cmp	 esi, eax
  00123	0f 8e 6d ff ff
	ff		 jle	 $LL4@UpdateQuad
  00129	8b 7d 08	 mov	 edi, DWORD PTR _Node$[ebp]
  0012c	8b 5c 24 0c	 mov	 ebx, DWORD PTR _this$1$[esp+24]
$LN78@UpdateQuad:

; 1107 : 		}
; 1108 : 	}
; 1109 : 
; 1110 : 	Node->center.x = (maxx + minx) * 0.5f;

  00130	0f 28 c2	 movaps	 xmm0, xmm2

; 1114 : 	Node->radius = sqrtf((maxx-minx)*(maxx-minx) +

  00133	f3 0f 5c d1	 subss	 xmm2, xmm1
  00137	f3 0f 58 c1	 addss	 xmm0, xmm1
  0013b	0f 57 c9	 xorps	 xmm1, xmm1
  0013e	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00142	f3 0f 59 c7	 mulss	 xmm0, xmm7
  00146	f3 0f 11 47 2c	 movss	 DWORD PTR [edi+44], xmm0
  0014b	0f 28 c4	 movaps	 xmm0, xmm4
  0014e	f3 0f 58 c6	 addss	 xmm0, xmm6
  00152	f3 0f 5c e6	 subss	 xmm4, xmm6
  00156	f3 0f 59 c7	 mulss	 xmm0, xmm7
  0015a	f3 0f 59 e4	 mulss	 xmm4, xmm4
  0015e	f3 0f 11 47 30	 movss	 DWORD PTR [edi+48], xmm0
  00163	0f 28 c3	 movaps	 xmm0, xmm3
  00166	f3 0f 5c dd	 subss	 xmm3, xmm5
  0016a	f3 0f 58 c5	 addss	 xmm0, xmm5
  0016e	f3 0f 58 d4	 addss	 xmm2, xmm4
  00172	f3 0f 59 db	 mulss	 xmm3, xmm3
  00176	f3 0f 59 c7	 mulss	 xmm0, xmm7
  0017a	f3 0f 58 d3	 addss	 xmm2, xmm3
  0017e	f3 0f 11 47 34	 movss	 DWORD PTR [edi+52], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00183	0f 57 c0	 xorps	 xmm0, xmm0
  00186	f3 0f 5a c2	 cvtss2sd xmm0, xmm2
  0018a	66 0f 2e c8	 ucomisd xmm1, xmm0
  0018e	77 06		 ja	 SHORT $LN84@UpdateQuad
  00190	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00194	eb 05		 jmp	 SHORT $LN85@UpdateQuad
$LN84@UpdateQuad:
  00196	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN85@UpdateQuad:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 1118 : 	if (Node->NW_Node != NULL)

  0019b	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0019e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 1114 : 	Node->radius = sqrtf((maxx-minx)*(maxx-minx) +

  001a2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  001aa	f3 0f 11 47 38	 movss	 DWORD PTR [edi+56], xmm0

; 1118 : 	if (Node->NW_Node != NULL)

  001af	85 c0		 test	 eax, eax
  001b1	74 08		 je	 SHORT $LN17@UpdateQuad

; 1119 : 		UpdateQuadTreeHeights(Node->NW_Node);

  001b3	50		 push	 eax
  001b4	8b cb		 mov	 ecx, ebx
  001b6	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
$LN17@UpdateQuad:

; 1120 : 
; 1121 : 	if (Node->NE_Node != NULL)

  001bb	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  001be	85 c0		 test	 eax, eax
  001c0	74 08		 je	 SHORT $LN18@UpdateQuad

; 1122 : 		UpdateQuadTreeHeights(Node->NE_Node);

  001c2	50		 push	 eax
  001c3	8b cb		 mov	 ecx, ebx
  001c5	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
$LN18@UpdateQuad:

; 1123 : 
; 1124 : 	if (Node->SW_Node != NULL)

  001ca	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  001cd	85 c0		 test	 eax, eax
  001cf	74 08		 je	 SHORT $LN19@UpdateQuad

; 1125 : 		UpdateQuadTreeHeights(Node->SW_Node);

  001d1	50		 push	 eax
  001d2	8b cb		 mov	 ecx, ebx
  001d4	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
$LN19@UpdateQuad:

; 1126 : 
; 1127 : 	if (Node->SE_Node != NULL)

  001d9	8b 7f 20	 mov	 edi, DWORD PTR [edi+32]
  001dc	89 7d 08	 mov	 DWORD PTR _Node$[ebp], edi
  001df	85 ff		 test	 edi, edi
  001e1	74 15		 je	 SHORT $LN83@UpdateQuad

; 1066 : 	// Inserted by levites
; 1067 : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::UpdateQuadTreeHeights");
; 1068 : 	if (!m_pTerrainPatchProxyList)

  001e3	8b 73 64	 mov	 esi, DWORD PTR [ebx+100]
  001e6	8b d6		 mov	 edx, esi
  001e8	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f000000
  001f0	85 f6		 test	 esi, esi
  001f2	0f 85 38 fe ff
	ff		 jne	 $LL66@UpdateQuad
$LN83@UpdateQuad:

; 1128 : 		UpdateQuadTreeHeights(Node->SE_Node);
; 1129 : }

  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	5b		 pop	 ebx
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c2 04 00	 ret	 4
?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ENDP ; CMapOutdoor::UpdateQuadTreeHeights
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
_pkObjInstTest$ = 8					; size = 4
?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z PROC ; CMapOutdoor::__IsInPCBlockerList, COMDAT
; _this$ = ecx

; 713  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00003	8b 81 18 0a 00
	00		 mov	 eax, DWORD PTR [ecx+2584]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 713  : {

  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000a	8b b1 1c 0a 00
	00		 mov	 esi, DWORD PTR [ecx+2588]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  00010	3b c6		 cmp	 eax, esi
  00012	74 0e		 je	 SHORT $LN43@IsInPCBloc
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _pkObjInstTest$[ebp]
$LL23@IsInPCBloc:

; 5133 :         if (*_First == _Val) {

  00017	39 08		 cmp	 DWORD PTR [eax], ecx
  00019	74 07		 je	 SHORT $LN43@IsInPCBloc

; 5132 :     for (; _First != _Last; ++_First) {

  0001b	83 c0 04	 add	 eax, 4
  0001e	3b c6		 cmp	 eax, esi
  00020	75 f5		 jne	 SHORT $LL23@IsInPCBloc
$LN43@IsInPCBloc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCGraphicObjectInstance@@$0A@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@@Z ; std::_Refancy<CGraphicObjectInstance * *,0>
  00028	83 c4 04	 add	 esp, 4
  0002b	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 714  : 	if (m_PCBlockerVector.end() == std::find(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), pkObjInstTest))

  0002d	0f 95 c0	 setne	 al
  00030	5e		 pop	 esi

; 715  : 		return false;
; 716  : 
; 717  : 	return true;
; 718  : }

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ENDP ; CMapOutdoor::__IsInPCBlockerList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
_pkObjInstTest$ = 8					; size = 4
?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z PROC ; CMapOutdoor::__IsInShadowReceiverList, COMDAT
; _this$ = ecx

; 705  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00003	8b 81 0c 0a 00
	00		 mov	 eax, DWORD PTR [ecx+2572]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 705  : {

  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000a	8b b1 10 0a 00
	00		 mov	 esi, DWORD PTR [ecx+2576]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5132 :     for (; _First != _Last; ++_First) {

  00010	3b c6		 cmp	 eax, esi
  00012	74 0e		 je	 SHORT $LN43@IsInShadow
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _pkObjInstTest$[ebp]
$LL23@IsInShadow:

; 5133 :         if (*_First == _Val) {

  00017	39 08		 cmp	 DWORD PTR [eax], ecx
  00019	74 07		 je	 SHORT $LN43@IsInShadow

; 5132 :     for (; _First != _Last; ++_First) {

  0001b	83 c0 04	 add	 eax, 4
  0001e	3b c6		 cmp	 eax, esi
  00020	75 f5		 jne	 SHORT $LL23@IsInShadow
$LN43@IsInShadow:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$_Refancy@PAPAVCGraphicObjectInstance@@$0A@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@@Z ; std::_Refancy<CGraphicObjectInstance * *,0>
  00028	83 c4 04	 add	 esp, 4
  0002b	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 706  : 	if (m_ShadowReceiverVector.end() == std::find(m_ShadowReceiverVector.begin(), m_ShadowReceiverVector.end(), pkObjInstTest))

  0002d	0f 95 c0	 setne	 al
  00030	5e		 pop	 esi

; 707  : 		return false;
; 708  : 
; 709  : 	return true;
; 710  : }

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ENDP ; CMapOutdoor::__IsInShadowReceiverList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
_pArea$1 = -48						; size = 4
_this$GSCopy$1$ = -44					; size = 4
__$ArrayPad$ = -4					; size = 4
?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::__UpdateAroundAreaList, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi

; 301  : #ifdef __PERFORMANCE_CHECKER__
; 302  : 	DWORD ft1=timeGetTime();
; 303  : #endif
; 304  : 	DWORD at[AROUND_AREA_NUM];
; 305  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00013	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__timeGetTime@0
  00019	33 f6		 xor	 esi, esi
  0001b	89 4d d4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0001e	66 90		 npad	 2
$LL4@UpdateArou:

; 306  : 	{
; 307  : 		DWORD t1=timeGetTime();

  00020	ff d7		 call	 edi

; 308  : 		CArea * pArea;
; 309  : 		if (GetAreaPointer(i, &pArea))

  00022	8b 4d d4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00025	8d 45 d0	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00028	50		 push	 eax
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0002f	85 c0		 test	 eax, eax
  00031	74 08		 je	 SHORT $LN5@UpdateArou

; 310  : 			pArea->Update();

  00033	8b 4d d0	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00036	e8 00 00 00 00	 call	 ?Update@CArea@@QAEXXZ	; CArea::Update
$LN5@UpdateArou:

; 311  : 		DWORD t2=timeGetTime();

  0003b	ff d7		 call	 edi
  0003d	46		 inc	 esi
  0003e	83 fe 09	 cmp	 esi, 9
  00041	7c dd		 jl	 SHORT $LL4@UpdateArou

; 312  : 
; 313  : 		at[i]=t2-t1;
; 314  : 	}
; 315  : #ifdef __PERFORMANCE_CHECKER__
; 316  : 	DWORD ft2=timeGetTime();
; 317  : 	if (ft2-ft1>5)
; 318  : 	{
; 319  : 		for (int i=0; i<AROUND_AREA_NUM; ++i)
; 320  : 			Tracef("Area %d %d\n", i, at[i]);
; 321  : 	}
; 322  : #endif
; 323  : }

  00043	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	33 cd		 xor	 ecx, ebp
  0004a	5b		 pop	 ebx
  0004b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::__UpdateAroundAreaList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_r$2 = -96						; size = 12
_kGetShadowReceiverFromCollisionData$ = -84		; size = 12
_pObjInstEach$3 = -72					; size = 4
_kVct_pkShadowReceiver$ = -68				; size = 12
_s$ = -56						; size = 28
_aVector3d$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_v3Target$ = 8						; size = 4
_v3Light$ = 12						; size = 4
?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z PROC ; CMapOutdoor::__CollectCollisionShadowReceiver, COMDAT
; _this$ = ecx

; 677  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	8b 55 08	 mov	 edx, DWORD PTR _v3Target$[ebp]
  00030	8b 45 0c	 mov	 eax, DWORD PTR _v3Light$[ebp]

; 682  : 
; 683  : 	Vector3d aVector3d;
; 684  : 	aVector3d.Set(v3Target.x, v3Target.y, v3Target.z);
; 685  : 
; 686  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();

  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
  00039	c7 45 e0 00 00
	48 42		 mov	 DWORD PTR _s$[ebp+24], 1112014848 ; 42480000H
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00040	f3 0f 10 7a 04	 movss	 xmm7, DWORD PTR [edx+4]
  00045	f3 0f 10 6a 08	 movss	 xmm5, DWORD PTR [edx+8]
  0004a	0f 28 e7	 movaps	 xmm4, xmm7
  0004d	f3 0f 10 30	 movss	 xmm6, DWORD PTR [eax]
  00051	0f 28 cd	 movaps	 xmm1, xmm5
  00054	f3 0f 58 32	 addss	 xmm6, DWORD PTR [edx]
  00058	f3 0f 58 60 04	 addss	 xmm4, DWORD PTR [eax+4]
  0005d	f3 0f 58 48 08	 addss	 xmm1, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  00062	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00066	f3 0f 11 45 e4	 movss	 DWORD PTR _aVector3d$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 680  : 	s.v3LastPosition = v3Target + v3Light;

  0006b	f3 0f 11 75 d4	 movss	 DWORD PTR _s$[ebp+12], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00070	f3 0f 58 30	 addss	 xmm6, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 680  : 	s.v3LastPosition = v3Target + v3Light;

  00074	f3 0f 11 65 d8	 movss	 DWORD PTR _s$[ebp+16], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00079	f3 0f 58 60 04	 addss	 xmm4, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 680  : 	s.v3LastPosition = v3Target + v3Light;

  0007e	f3 0f 11 4d dc	 movss	 DWORD PTR _s$[ebp+20], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00083	f3 0f 58 48 08	 addss	 xmm1, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 681  : 	s.v3Position = s.v3LastPosition + v3Light;

  00088	f3 0f 11 75 c8	 movss	 DWORD PTR _s$[ebp], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 108  : 		y = b;

  0008d	f3 0f 11 7d e8	 movss	 DWORD PTR _aVector3d$[ebp+4], xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 681  : 	s.v3Position = s.v3LastPosition + v3Light;

  00092	f3 0f 11 65 cc	 movss	 DWORD PTR _s$[ebp+4], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 109  : 		z = c;

  00097	f3 0f 11 6d ec	 movss	 DWORD PTR _aVector3d$[ebp+8], xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 681  : 	s.v3Position = s.v3LastPosition + v3Light;

  0009c	f3 0f 11 4d d0	 movss	 DWORD PTR _s$[ebp+8], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000a1	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _kVct_pkShadowReceiver$[ebp], 0
  000a8	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _kVct_pkShadowReceiver$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 168  : 	FGetShadowReceiverFromCollisionData(CDynamicSphereInstance * pdsi, std::vector<CGraphicObjectInstance *>* pkVct_pkShadowReceiver) : m_pdsi(pdsi), m_bCollide(false)

  000af	8d 45 c8	 lea	 eax, DWORD PTR _s$[ebp]

; 687  : 
; 688  : 	std::vector<CGraphicObjectInstance *> kVct_pkShadowReceiver;

  000b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 168  : 	FGetShadowReceiverFromCollisionData(CDynamicSphereInstance * pdsi, std::vector<CGraphicObjectInstance *>* pkVct_pkShadowReceiver) : m_pdsi(pdsi), m_bCollide(false)

  000b9	89 45 b4	 mov	 DWORD PTR _kGetShadowReceiverFromCollisionData$[ebp+8], eax

; 169  : 	{
; 170  : 		m_pkVct_pkShadowReceiver=pkVct_pkShadowReceiver;

  000bc	8d 45 bc	 lea	 eax, DWORD PTR _kVct_pkShadowReceiver$[ebp]
  000bf	89 45 b0	 mov	 DWORD PTR _kGetShadowReceiverFromCollisionData$[ebp+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  000c2	8d 45 ac	 lea	 eax, DWORD PTR _kGetShadowReceiverFromCollisionData$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 168  : 	FGetShadowReceiverFromCollisionData(CDynamicSphereInstance * pdsi, std::vector<CGraphicObjectInstance *>* pkVct_pkShadowReceiver) : m_pdsi(pdsi), m_bCollide(false)

  000c5	c6 45 ac 00	 mov	 BYTE PTR _kGetShadowReceiverFromCollisionData$[ebp], 0

; 171  : 		m_pkVct_pkShadowReceiver->clear();

  000c9	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _kVct_pkShadowReceiver$[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 16   : 	{}

  000d0	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _r$2[ebp], OFFSET ??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@

; 15   : 		: f(fn), dist(distance)

  000d7	89 45 a4	 mov	 DWORD PTR _r$2[ebp+4], eax
  000da	c7 45 a8 00 00
	80 bf		 mov	 DWORD PTR _r$2[ebp+8], -1082130432 ; bf800000H

; 114  : 		m_Factory->RangeTest(p, radius, &r/*this*/);

  000e1	8d 45 a0	 lea	 eax, DWORD PTR _r$2[ebp]
  000e4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000e8	50		 push	 eax
  000e9	51		 push	 ecx
  000ea	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000ed	8d 45 e4	 lea	 eax, DWORD PTR _aVector3d$[ebp]
  000f0	c7 04 24 00 00
	c8 42		 mov	 DWORD PTR [esp], 1120403456 ; 42c80000H
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 691  : 	if (!kGetShadowReceiverFromCollisionData.m_bCollide)

  000fd	80 7d ac 00	 cmp	 BYTE PTR _kGetShadowReceiverFromCollisionData$[ebp], 0
  00101	8b 75 bc	 mov	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 115  : 	}

  00104	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 691  : 	if (!kGetShadowReceiverFromCollisionData.m_bCollide)

  00108	74 51		 je	 SHORT $LN3@CollectCol

; 695  : 	for ( i = kVct_pkShadowReceiver.begin(); i != kVct_pkShadowReceiver.end(); ++i)

  0010a	3b 75 c0	 cmp	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp+4]
  0010d	74 4c		 je	 SHORT $LN3@CollectCol
  0010f	90		 npad	 1
$LL4@CollectCol:

; 696  : 	{
; 697  : 		CGraphicObjectInstance * pObjInstEach = *i;

  00110	8b 3e		 mov	 edi, DWORD PTR [esi]

; 698  : 		if (!__IsInPCBlockerList(pObjInstEach))

  00112	8b cb		 mov	 ecx, ebx
  00114	57		 push	 edi
  00115	89 7d b8	 mov	 DWORD PTR _pObjInstEach$3[ebp], edi
  00118	e8 00 00 00 00	 call	 ?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInPCBlockerList
  0011d	84 c0		 test	 al, al
  0011f	75 2f		 jne	 SHORT $LN2@CollectCol

; 699  : 			if (!__IsInShadowReceiverList(pObjInstEach))

  00121	57		 push	 edi
  00122	8b cb		 mov	 ecx, ebx
  00124	e8 00 00 00 00	 call	 ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
  00129	84 c0		 test	 al, al
  0012b	75 23		 jne	 SHORT $LN2@CollectCol
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0012d	8b 83 10 0a 00
	00		 mov	 eax, DWORD PTR [ebx+2576]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 700  : 				m_ShadowReceiverVector.push_back(pObjInstEach);

  00133	8d 8b 0c 0a 00
	00		 lea	 ecx, DWORD PTR [ebx+2572]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00139	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0013c	74 08		 je	 SHORT $LN70@CollectCol

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0013e	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00140	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00144	eb 0a		 jmp	 SHORT $LN2@CollectCol
$LN70@CollectCol:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00146	8d 55 b8	 lea	 edx, DWORD PTR _pObjInstEach$3[ebp]
  00149	52		 push	 edx
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
$LN2@CollectCol:

; 75   :         ++_Ptr;

  00150	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00153	3b 75 c0	 cmp	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 695  : 	for ( i = kVct_pkShadowReceiver.begin(); i != kVct_pkShadowReceiver.end(); ++i)

  00156	75 b8		 jne	 SHORT $LL4@CollectCol
  00158	8b 75 bc	 mov	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp]
$LN3@CollectCol:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0015b	85 f6		 test	 esi, esi
  0015d	74 12		 je	 SHORT $LN77@CollectCol

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0015f	8b 45 c4	 mov	 eax, DWORD PTR _kVct_pkShadowReceiver$[ebp+8]
  00162	2b c6		 sub	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00164	83 e0 fc	 and	 eax, -4			; fffffffcH
  00167	50		 push	 eax
  00168	56		 push	 esi
  00169	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0016e	83 c4 08	 add	 esp, 8
$LN77@CollectCol:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 702  : }

  00171	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00174	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017b	59		 pop	 ecx
  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00182	33 cd		 xor	 ecx, ebp
  00184	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00189	8b e5		 mov	 esp, ebp
  0018b	5d		 pop	 ebp
  0018c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR _kVct_pkShadowReceiver$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$1:
  00008	8d 4d a0	 lea	 ecx, DWORD PTR _r$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ENDP ; CMapOutdoor::__CollectCollisionShadowReceiver
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
_TEXT	SEGMENT
_kPCBlockerList$ = -2296				; size = 2084
tv1418 = -208						; size = 16
_m_v3View$3 = -204					; size = 12
_v3Eye$GSCopy$1$ = -184					; size = 4
_pObjInstEach$4 = -180					; size = 4
_kPCBlockerRangeTester$ = -176				; size = 12
$T5 = -176						; size = 12
$T6 = -176						; size = 12
_i$1$ = -164						; size = 4
_aDynamicSphereInstanceVector$ = -160			; size = 112
_v3dRayStart$ = -44					; size = 12
__Pred$ = -32						; size = 12
_m_v3Target$7 = -32					; size = 12
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_v3Eye$ = 8						; size = 4
_v3Target$ = 12						; size = 4
_fDistance$ = 16					; size = 4
?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z PROC ; CMapOutdoor::__CollectCollisionPCBlocker, COMDAT
; _this$ = ecx

; 584  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec e8 08 00
	00		 sub	 esp, 2280		; 000008e8H
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	56		 push	 esi
  00036	57		 push	 edi
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	8b f9		 mov	 edi, ecx
  00043	8b 4b 08	 mov	 ecx, DWORD PTR _v3Eye$[ebx]
  00046	8b 53 0c	 mov	 edx, DWORD PTR _v3Target$[ebx]

; 598  : 		pkDSI->fRadius = fDistance * 0.5f;

  00049	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00051	f3 0f 10 7b 10	 movss	 xmm7, DWORD PTR _fDistance$[ebx]

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  00056	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  0005a	f3 0f 10 11	 movss	 xmm2, DWORD PTR [ecx]
  0005e	f3 0f 10 59 04	 movss	 xmm3, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00063	f3 0f 10 72 04	 movss	 xmm6, DWORD PTR [edx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 590  : 	v3dRayStart.Set(v3Eye.x, v3Eye.y, v3Eye.z);

  00068	f3 0f 10 61 08	 movss	 xmm4, DWORD PTR [ecx+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0006d	f3 0f 5c f3	 subss	 xmm6, xmm3
  00071	f3 0f 10 6a 08	 movss	 xmm5, DWORD PTR [edx+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  00076	66 0f d6 85 6c
	ff ff ff	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007e	f3 0f 5c ec	 subss	 xmm5, xmm4
  00082	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  00086	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00089	f3 0f 5c c2	 subss	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 621  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();

  0008d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00093	f3 0f 59 f1	 mulss	 xmm6, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  00097	89 85 74 ff ff
	ff		 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+20], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  0009d	f3 0f 59 e9	 mulss	 xmm5, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 584  : {

  000a1	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _v3Eye$GSCopy$1$[ebp], ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000a7	f3 0f 59 c1	 mulss	 xmm0, xmm1

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000ab	f3 0f 58 f3	 addss	 xmm6, xmm3
  000af	f3 0f 58 ec	 addss	 xmm5, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 598  : 		pkDSI->fRadius = fDistance * 0.5f;

  000b3	f3 0f 59 f9	 mulss	 xmm7, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000b7	f3 0f 58 c2	 addss	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  000bb	f3 0f 11 55 d4	 movss	 DWORD PTR _v3dRayStart$[ebp], xmm2

; 108  : 		y = b;

  000c0	f3 0f 11 5d d8	 movss	 DWORD PTR _v3dRayStart$[ebp+4], xmm3

; 109  : 		z = c;

  000c5	f3 0f 11 65 dc	 movss	 DWORD PTR _v3dRayStart$[ebp+8], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000ca	f3 0f 11 ad 58
	ff ff ff	 movss	 DWORD PTR $T6[ebp+8], xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 604  : 		pkDSI->v3LastPosition = v3Eye + 0.5f * (v3Target - v3Eye);

  000d2	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T6[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000d8	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR tv1418[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 600  : 		pkDSI->v3Position = v3Eye + 0.5f * (v3Target - v3Eye);

  000df	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp], xmm0

; 604  : 		pkDSI->v3LastPosition = v3Eye + 0.5f * (v3Target - v3Eye);

  000e7	0f 14 c6	 unpcklps xmm0, xmm6
  000ea	66 0f d6 45 88	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+40], xmm0

; 605  : 		pkDSI->v3Position = v3Target;

  000ef	f3 0f 7e 02	 movq	 xmm0, QWORD PTR [edx]
  000f3	66 0f d6 85 7c
	ff ff ff	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+28], xmm0

; 609  : 		pkDSI->v3LastPosition = v3Target;

  000fb	f3 0f 7e c0	 movq	 xmm0, xmm0
  000ff	66 0f d6 45 a4	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+68], xmm0

; 610  : 		pkDSI->v3Position = v3Eye + 0.5f * (v3Target - v3Eye);

  00104	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR tv1418[ebp]
  0010b	89 45 90	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+48], eax
  0010e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00111	f3 0f 11 45 98	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+56], xmm0
  00116	89 45 84	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+36], eax
  00119	89 45 ac	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+76], eax

; 614  : 		pkDSI->v3LastPosition = v3Eye + 0.5f * (v3Target - v3Eye);

  0011c	0f 14 c6	 unpcklps xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0011f	f3 0f 11 ad 58
	ff ff ff	 movss	 DWORD PTR $T5[ebp+8], xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 614  : 		pkDSI->v3LastPosition = v3Eye + 0.5f * (v3Target - v3Eye);

  00127	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T5[ebp+8]
  0012d	66 0f d6 45 c0	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+96], xmm0

; 615  : 		pkDSI->v3Position = v3Eye;

  00132	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  00136	89 45 c8	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+104], eax
  00139	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 464  : 		m_pCamera = CCameraManager::Instance().GetCurrentCamera();

  0013c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton

; 598  : 		pkDSI->fRadius = fDistance * 0.5f;

  00142	f3 0f 11 bd 78
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+24], xmm7

; 600  : 		pkDSI->v3Position = v3Eye + 0.5f * (v3Target - v3Eye);

  0014a	f3 0f 11 b5 64
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+4], xmm6
  00152	f3 0f 11 ad 68
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+8], xmm5

; 601  : 		++pkDSI;
; 602  : 
; 603  : 		pkDSI->fRadius = fDistance * 0.5f;

  0015a	f3 0f 11 7d 94	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+52], xmm7

; 606  : 		++pkDSI;
; 607  : 
; 608  : 		pkDSI->fRadius = fDistance * 0.5f;

  0015f	f3 0f 11 7d b0	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+80], xmm7

; 610  : 		pkDSI->v3Position = v3Eye + 0.5f * (v3Target - v3Eye);

  00164	f3 0f 11 75 9c	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+60], xmm6
  00169	f3 0f 11 6d a0	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+64], xmm5

; 611  : 		++pkDSI;
; 612  : 
; 613  : 		pkDSI->fRadius = fDistance * 0.5f;

  0016e	f3 0f 11 7d cc	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+108], xmm7

; 615  : 		pkDSI->v3Position = v3Eye;

  00173	66 0f d6 45 b4	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+84], xmm0
  00178	89 45 bc	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+92], eax

; 464  : 		m_pCamera = CCameraManager::Instance().GetCurrentCamera();

  0017b	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  00180	89 85 18 ff ff
	ff		 mov	 DWORD PTR _kPCBlockerList$[ebp+2064], eax

; 465  : 		if (!m_pCamera)

  00186	85 c0		 test	 eax, eax
  00188	0f 84 84 00 00
	00		 je	 $LN62@CollectCol

; 466  : 			return;
; 467  : 
; 468  : 		D3DXVECTOR3 m_v3View = m_pCamera->GetView();

  0018e	f3 0f 7e 40 54	 movq	 xmm0, QWORD PTR [eax+84]
  00193	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  00196	66 0f d6 85 34
	ff ff ff	 movq	 QWORD PTR _m_v3View$3[ebp], xmm0

; 469  : 		D3DXVECTOR3 m_v3Target = m_pCamera->GetTarget();

  0019e	f3 0f 7e 40 3c	 movq	 xmm0, QWORD PTR [eax+60]
  001a3	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  001a6	66 0f d6 45 e0	 movq	 QWORD PTR _m_v3Target$7[ebp], xmm0

; 470  : 
; 471  : 		m_v2View.x = m_v3View.x;

  001ab	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _m_v3View$3[ebp]
  001b3	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2068], xmm0

; 472  : 		m_v2View.y = m_v3View.y;

  001bb	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _m_v3View$3[ebp+4]
  001c3	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2072], xmm0

; 473  : 
; 474  : 		m_v2Target.x = m_v3Target.x;

  001cb	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _m_v3Target$7[ebp]
  001d0	89 45 e8	 mov	 DWORD PTR _m_v3Target$7[ebp+8], eax

; 475  : 		m_v2Target.y = m_v3Target.y;
; 476  : 
; 477  : 		m_pkDSIVector=pkDSIVector;

  001d3	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _aDynamicSphereInstanceVector$[ebp]
  001d9	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2076], xmm0
  001e1	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _m_v3Target$7[ebp+4]
  001e6	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2080], xmm0
  001ee	89 85 14 ff ff
	ff		 mov	 DWORD PTR _kPCBlockerList$[ebp+2060], eax

; 478  : 		m_dwBlockerCount=0;

  001f4	c7 85 0c f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerList$[ebp+4], 0

; 479  : 		m_dwBlockerOverCount=0;

  001fe	c7 85 10 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerList$[ebp+8], 0

; 480  : 		m_dwInstCount=0;

  00208	c7 85 08 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerList$[ebp], 0
$LN62@CollectCol:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  00212	8d 85 08 f7 ff
	ff		 lea	 eax, DWORD PTR _kPCBlockerList$[ebp]
  00218	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerRangeTester$[ebp], OFFSET ??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@
  00222	89 85 54 ff ff
	ff		 mov	 DWORD PTR _kPCBlockerRangeTester$[ebp+4], eax
  00228	c7 85 58 ff ff
	ff 00 00 80 bf	 mov	 DWORD PTR _kPCBlockerRangeTester$[ebp+8], -1082130432 ; bf800000H

; 95   : 		m_Factory->RangeTest(p, radius, callback);

  00232	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR _fDistance$[ebx]
  00237	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _kPCBlockerRangeTester$[ebp]
  0023d	50		 push	 eax
  0023e	51		 push	 ecx
  0023f	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00242	8d 45 d4	 lea	 eax, DWORD PTR _v3dRayStart$[ebp]
  00245	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024a	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 624  : 	RangeTester<PCBlocker_SInstanceList> kPCBlockerRangeTester(&kPCBlockerList);

  0024b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 95   : 		m_Factory->RangeTest(p, radius, callback);

  00252	e8 00 00 00 00	 call	 ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 514  : 		if (m_dwBlockerCount>0)

  00257	8b 85 0c f7 ff
	ff		 mov	 eax, DWORD PTR _kPCBlockerList$[ebp+4]
  0025d	85 c0		 test	 eax, eax
  0025f	0f 84 a2 00 00
	00		 je	 $LN3@CollectCol

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  00265	8d b5 14 f7 ff
	ff		 lea	 esi, DWORD PTR _kPCBlockerList$[ebp+12]

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  0026b	8b ce		 mov	 ecx, esi

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  0026d	89 b5 5c ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  00273	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  00276	3b c8		 cmp	 ecx, eax
  00278	0f 84 89 00 00
	00		 je	 $LN3@CollectCol
  0027e	66 90		 npad	 2
$LL4@CollectCol:

; 635  : 		{
; 636  : 			CGraphicObjectInstance * pObjInstEach = *i;

  00280	8b 36		 mov	 esi, DWORD PTR [esi]
  00282	89 b5 4c ff ff
	ff		 mov	 DWORD PTR _pObjInstEach$4[ebp], esi
  00288	85 f6		 test	 esi, esi

; 637  : 
; 638  : 			if (!pObjInstEach)

  0028a	74 57		 je	 SHORT $LN2@CollectCol

; 639  : 				continue;
; 640  : 
; 641  : 			if (TREE_OBJECT == pObjInstEach->GetType() && !m_bTransparentTree)

  0028c	8b 06		 mov	 eax, DWORD PTR [esi]
  0028e	8b ce		 mov	 ecx, esi
  00290	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00293	ff d0		 call	 eax
  00295	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  0029a	75 09		 jne	 SHORT $LN7@CollectCol
  0029c	80 bf b5 0e 00
	00 00		 cmp	 BYTE PTR [edi+3765], 0
  002a3	74 3e		 je	 SHORT $LN2@CollectCol
$LN7@CollectCol:

; 642  : 				continue;
; 643  : 
; 644  : 			if (!__IsInShadowReceiverList(pObjInstEach))

  002a5	56		 push	 esi
  002a6	8b cf		 mov	 ecx, edi
  002a8	e8 00 00 00 00	 call	 ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
  002ad	84 c0		 test	 al, al
  002af	75 32		 jne	 SHORT $LN2@CollectCol

; 645  : 				if (!__IsInPCBlockerList(pObjInstEach))

  002b1	56		 push	 esi
  002b2	8b cf		 mov	 ecx, edi
  002b4	e8 00 00 00 00	 call	 ?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInPCBlockerList
  002b9	84 c0		 test	 al, al
  002bb	75 26		 jne	 SHORT $LN2@CollectCol
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002bd	8b 87 1c 0a 00
	00		 mov	 eax, DWORD PTR [edi+2588]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 646  : 					m_PCBlockerVector.push_back(pObjInstEach);

  002c3	8d 8f 18 0a 00
	00		 lea	 ecx, DWORD PTR [edi+2584]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002c9	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  002cc	74 08		 je	 SHORT $LN79@CollectCol

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002ce	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  002d0	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002d4	eb 0d		 jmp	 SHORT $LN2@CollectCol
$LN79@CollectCol:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002d6	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _pObjInstEach$4[ebp]
  002dc	52		 push	 edx
  002dd	50		 push	 eax
  002de	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
$LN2@CollectCol:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  002e3	8b 85 0c f7 ff
	ff		 mov	 eax, DWORD PTR _kPCBlockerList$[ebp+4]

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  002e9	8b b5 5c ff ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
  002ef	83 c6 04	 add	 esi, 4
  002f2	89 b5 5c ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  002f8	8d 84 85 14 f7
	ff ff		 lea	 eax, DWORD PTR _kPCBlockerList$[ebp+eax*4+12]

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  002ff	3b f0		 cmp	 esi, eax
  00301	0f 85 79 ff ff
	ff		 jne	 $LL4@CollectCol
$LN3@CollectCol:

; 652  : 	std::sort(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), FPCBlockerDistanceSort(v3Eye));

  00307	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _v3Eye$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0030d	8b 8f 1c 0a 00
	00		 mov	 ecx, DWORD PTR [edi+2588]
  00313	8b 97 18 0a 00
	00		 mov	 edx, DWORD PTR [edi+2584]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 652  : 	std::sort(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), FPCBlockerDistanceSort(v3Eye));

  00319	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0031d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00320	89 45 e8	 mov	 DWORD PTR __Pred$[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00323	8d 45 e0	 lea	 eax, DWORD PTR __Pred$[ebp]
  00326	50		 push	 eax
  00327	8b c1		 mov	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 652  : 	std::sort(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), FPCBlockerDistanceSort(v3Eye));

  00329	66 0f d6 45 e0	 movq	 QWORD PTR __Pred$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  0032e	2b c2		 sub	 eax, edx
  00330	c1 f8 02	 sar	 eax, 2
  00333	50		 push	 eax
  00334	51		 push	 ecx
  00335	52		 push	 edx
  00336	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
  0033b	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 674  : }

  0033e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00341	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00348	59		 pop	 ecx
  00349	5f		 pop	 edi
  0034a	5e		 pop	 esi
  0034b	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0034e	33 cd		 xor	 ecx, ebp
  00350	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00355	8b e5		 mov	 esp, ebp
  00357	5d		 pop	 ebp
  00358	8b e3		 mov	 esp, ebx
  0035a	5b		 pop	 ebx
  0035b	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z$0:
  00000	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _kPCBlockerRangeTester$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 f7 ff
	ff		 mov	 ecx, DWORD PTR [edx-2296]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z ENDP ; CMapOutdoor::__CollectCollisionPCBlocker
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_kGetShadowReceiverFromHeightData$ = -484		; size = 436
_r$2 = -48						; size = 12
_pObjInstEach$3 = -36					; size = 4
_this$GSCopy$1$ = -32					; size = 4
_aVector3d$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_v3Target$ = 8						; size = 4
_v3Light$ = 12						; size = 4
?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z PROC ; CMapOutdoor::__CollectShadowReceiver, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 01 00
	00		 sub	 esp, 472		; 000001d8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d e0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00031	8b 45 0c	 mov	 eax, DWORD PTR _v3Light$[ebp]
  00034	8b 55 08	 mov	 edx, DWORD PTR _v3Target$[ebp]

; 390  : 	CDynamicSphereInstance s;
; 391  : 	s.v3LastPosition = v3Target + v3Light;
; 392  : 	s.v3Position = s.v3LastPosition + v3Light;
; 393  : 	s.fRadius = 50.0f;
; 394  : 
; 395  : 	Vector3d aVector3d;
; 396  : 	aVector3d.Set(v3Target.x, v3Target.y, v3Target.z);
; 397  : 
; 398  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton

; 343  : 	m_fFromX(fFromX), m_fFromY(fFromY), m_fToX(fToX), m_fToY(fToY), m_bReceiverFound(false)

  0003d	c6 85 28 fe ff
	ff 00		 mov	 BYTE PTR _kGetShadowReceiverFromHeightData$[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00044	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  00048	f3 0f 10 2a	 movss	 xmm5, DWORD PTR [edx]
  0004c	f3 0f 10 62 04	 movss	 xmm4, DWORD PTR [edx+4]
  00051	f3 0f 58 dd	 addss	 xmm3, xmm5
  00055	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 109  : 		z = c;

  0005a	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0005f	f3 0f 58 d4	 addss	 xmm2, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 107  : 		x = a;

  00063	f3 0f 11 6d e4	 movss	 DWORD PTR _aVector3d$[ebp], xmm5

; 108  : 		y = b;

  00068	f3 0f 11 65 e8	 movss	 DWORD PTR _aVector3d$[ebp+4], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0006d	f3 0f 58 18	 addss	 xmm3, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 109  : 		z = c;

  00071	f3 0f 11 45 ec	 movss	 DWORD PTR _aVector3d$[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00076	f3 0f 58 50 04	 addss	 xmm2, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  0007b	8d 85 1c fe ff
	ff		 lea	 eax, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 343  : 	m_fFromX(fFromX), m_fFromY(fFromY), m_fToX(fToX), m_fToY(fToY), m_bReceiverFound(false)

  00081	f3 0f 11 ad 2c
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+16], xmm5
  00089	f3 0f 11 a5 30
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+20], xmm4
  00091	f3 0f 11 9d 34
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+24], xmm3

; 344  : 	{
; 345  : 		m_dwCheckCount=0;

  00099	c7 85 24 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+8], 0
  000a3	f3 0f 11 95 38
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+28], xmm2

; 346  : 		m_dwCollectOverCount=0;

  000ab	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp], 0

; 347  : 		m_dwCollectCount=0;

  000b5	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 16   : 	{}

  000bf	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _r$2[ebp], OFFSET ??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@

; 15   : 		: f(fn), dist(distance)

  000c6	89 45 d4	 mov	 DWORD PTR _r$2[ebp+4], eax
  000c9	c7 45 d8 00 00
	80 bf		 mov	 DWORD PTR _r$2[ebp+8], -1082130432 ; bf800000H

; 114  : 		m_Factory->RangeTest(p, radius, &r/*this*/);

  000d0	8d 45 d0	 lea	 eax, DWORD PTR _r$2[ebp]
  000d3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000df	8d 45 e4	 lea	 eax, DWORD PTR _aVector3d$[ebp]
  000e2	c7 04 24 00 00
	20 41		 mov	 DWORD PTR [esp], 1092616192 ; 41200000H
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 411  : 	if (kGetShadowReceiverFromHeightData.m_bReceiverFound)

  000ef	80 bd 28 fe ff
	ff 00		 cmp	 BYTE PTR _kGetShadowReceiverFromHeightData$[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\CullingManager.h

; 115  : 	}

  000f6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 411  : 	if (kGetShadowReceiverFromHeightData.m_bReceiverFound)

  000fd	74 59		 je	 SHORT $LN3@CollectSha

; 413  : 		for (UINT i=0; i<kGetShadowReceiverFromHeightData.GetCollectCount(); ++i)

  000ff	8b 9d 20 fe ff
	ff		 mov	 ebx, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+4]
  00105	33 f6		 xor	 esi, esi
  00107	85 db		 test	 ebx, ebx
  00109	74 4d		 je	 SHORT $LN3@CollectSha

; 352  : 		if (uIndex>=m_dwCollectCount)

  0010b	3b f3		 cmp	 esi, ebx
  0010d	72 04		 jb	 SHORT $LN28@CollectSha

; 353  : 			return NULL;

  0010f	33 ff		 xor	 edi, edi
  00111	eb 07		 jmp	 SHORT $LN27@CollectSha
$LN28@CollectSha:

; 354  : 
; 355  : 		return m_apkShadowReceiver[uIndex];

  00113	8b bc b5 40 fe
	ff ff		 mov	 edi, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+esi*4+36]
$LN27@CollectSha:

; 414  : 		{
; 415  : 			CGraphicObjectInstance * pObjInstEach = kGetShadowReceiverFromHeightData.GetCollectItem(i);
; 416  : 			if (!__IsInShadowReceiverList(pObjInstEach))

  0011a	8b 4d e0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0011d	57		 push	 edi
  0011e	89 7d dc	 mov	 DWORD PTR _pObjInstEach$3[ebp], edi
  00121	e8 00 00 00 00	 call	 ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
  00126	84 c0		 test	 al, al
  00128	75 29		 jne	 SHORT $LN2@CollectSha

; 417  : 				m_ShadowReceiverVector.push_back(pObjInstEach);

  0012a	8b 4d e0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0012d	81 c1 0c 0a 00
	00		 add	 ecx, 2572		; 00000a0cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00133	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00136	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00139	74 08		 je	 SHORT $LN33@CollectSha

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0013b	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0013d	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00141	eb 0a		 jmp	 SHORT $LN42@CollectSha
$LN33@CollectSha:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00143	8d 55 dc	 lea	 edx, DWORD PTR _pObjInstEach$3[ebp]
  00146	52		 push	 edx
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
$LN42@CollectSha:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 413  : 		for (UINT i=0; i<kGetShadowReceiverFromHeightData.GetCollectCount(); ++i)

  0014d	8b 9d 20 fe ff
	ff		 mov	 ebx, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+4]
$LN2@CollectSha:
  00153	46		 inc	 esi
  00154	3b f3		 cmp	 esi, ebx
  00156	72 bb		 jb	 SHORT $LN28@CollectSha
$LN3@CollectSha:

; 418  : 		}
; 419  : 	}
; 420  : 
; 421  : #ifdef __PERFORMANCE_CHECKER__
; 422  : 	static FILE* fp=fopen("perf_shadow_collect.txt", "w");
; 423  : 	DWORD t3=ELTimer_GetMSec();
; 424  : 
; 425  : 	if (t3-t1>5)
; 426  : 	{
; 427  : 		fprintf(fp, "SC.Total %d (Time %f)\n", t3-t1, ELTimer_GetMSec()/1000.0f);
; 428  : 		fprintf(fp, "SC.Find %d\n", t2-t1);
; 429  : 		fprintf(fp, "SC.Push %d\n", t3-t2);
; 430  : 		fprintf(fp, "SC.Count (Collect %d, Over %d, Check %d)\n",
; 431  : 			kGetShadowReceiverFromHeightData.m_dwCollectCount,
; 432  : 			kGetShadowReceiverFromHeightData.m_dwCollectOverCount,
; 433  : 			kGetShadowReceiverFromHeightData.m_dwCheckCount);
; 434  : 		fflush(fp);
; 435  : 	}
; 436  : #endif
; 437  : }

  00158	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00162	59		 pop	 ecx
  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00169	33 cd		 xor	 ecx, ebp
  0016b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _r$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 8a 18 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-488]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00026	33 c8		 xor	 ecx, eax
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ENDP ; CMapOutdoor::__CollectShadowReceiver
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_fDistance$1$ = -28					; size = 4
_v3Light$ = -24						; size = 12
_v3Eye$ = -12						; size = 12
_v3Player$ = 8						; size = 4
?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z PROC ; CMapOutdoor::__Game_UpdateArea, COMDAT
; _this$ = ecx

; 221  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 222  : #ifdef __PERFORMANCE_CHECKER__
; 223  : 	DWORD t1=timeGetTime();
; 224  : #endif
; 225  : 	m_PCBlockerVector.clear();

  0000d	8b 87 18 0a 00
	00		 mov	 eax, DWORD PTR [edi+2584]
  00013	89 87 1c 0a 00
	00		 mov	 DWORD PTR [edi+2588], eax

; 226  : 	m_ShadowReceiverVector.clear();

  00019	8b 87 0c 0a 00
	00		 mov	 eax, DWORD PTR [edi+2572]
  0001f	89 87 10 0a 00
	00		 mov	 DWORD PTR [edi+2576], eax

; 227  : #ifdef __PERFORMANCE_CHECKER__
; 228  : 	DWORD t2=timeGetTime();
; 229  : #endif
; 230  : 	CCameraManager& rCmrMgr=CCameraManager::Instance();
; 231  : 	CCamera * pCamera = rCmrMgr.GetCurrentCamera();

  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0002b	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 232  : 	if (!pCamera)

  00030	85 c0		 test	 eax, eax
  00032	0f 84 ae 00 00
	00		 je	 $LN1@Game_Updat

; 233  : 		return;
; 234  : 
; 235  : 	float fDistance = pCamera->GetDistance();

  00038	f3 0f 10 80 34
	01 00 00	 movss	 xmm0, DWORD PTR [eax+308]
  00040	0f 57 c9	 xorps	 xmm1, xmm1
  00043	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _fDistance$1$[esp+40], xmm0

; 239  : 	D3DXVECTOR3 v3Eye= pCamera->GetEye();

  00049	f3 0f 7e 40 30	 movq	 xmm0, QWORD PTR [eax+48]
  0004e	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00051	66 0f d6 44 24
	1c		 movq	 QWORD PTR _v3Eye$[esp+40], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00057	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@402fff8cc0000000
  0005f	66 0f 2e c8	 ucomisd xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 239  : 	D3DXVECTOR3 v3Eye= pCamera->GetEye();

  00063	89 44 24 24	 mov	 DWORD PTR _v3Eye$[esp+48], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00067	77 06		 ja	 SHORT $LN12@Game_Updat
  00069	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0006d	eb 05		 jmp	 SHORT $LN13@Game_Updat
$LN12@Game_Updat:
  0006f	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN13@Game_Updat:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 242  : 	v3Light *= 50.0f / D3DXVec3Length(&v3Light);

  00074	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42480000

; 257  : 	__CollectShadowReceiver(v3Player, v3Light);

  0007c	8d 44 24 10	 lea	 eax, DWORD PTR _v3Light$[esp+40]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00080	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 257  : 	__CollectShadowReceiver(v3Player, v3Light);

  00084	8b 75 08	 mov	 esi, DWORD PTR _v3Player$[ebp]
  00087	8b cf		 mov	 ecx, edi
  00089	50		 push	 eax
  0008a	56		 push	 esi
  0008b	f3 0f 5e c8	 divss	 xmm1, xmm0
  0008f	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 223  :     y *= f;

  00092	f3 0f 11 4c 24
	1c		 movss	 DWORD PTR _v3Light$[esp+52], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 242  : 	v3Light *= 50.0f / D3DXVec3Length(&v3Light);

  00098	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3fddb22d
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 223  :     y *= f;

  000a0	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@c05db22d
  000a8	f3 0f 11 44 24
	18		 movss	 DWORD PTR _v3Light$[esp+48], xmm0

; 224  :     z *= f;

  000ae	f3 0f 11 4c 24
	20		 movss	 DWORD PTR _v3Light$[esp+56], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 257  : 	__CollectShadowReceiver(v3Player, v3Light);

  000b4	e8 00 00 00 00	 call	 ?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectShadowReceiver

; 258  : #ifdef __PERFORMANCE_CHECKER__
; 259  : 	DWORD t4=timeGetTime();
; 260  : #endif
; 261  : 	__CollectCollisionPCBlocker(v3Eye, v3Player, fDistance);

  000b9	f3 0f 10 44 24
	0c		 movss	 xmm0, DWORD PTR _fDistance$1$[esp+40]
  000bf	8d 44 24 1c	 lea	 eax, DWORD PTR _v3Eye$[esp+40]
  000c3	51		 push	 ecx
  000c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c9	8b cf		 mov	 ecx, edi
  000cb	56		 push	 esi
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z ; CMapOutdoor::__CollectCollisionPCBlocker

; 262  : #ifdef __PERFORMANCE_CHECKER__
; 263  : 	DWORD t5=timeGetTime();
; 264  : #endif
; 265  : 	__CollectCollisionShadowReceiver(v3Player, v3Light);

  000d2	8d 44 24 10	 lea	 eax, DWORD PTR _v3Light$[esp+40]
  000d6	8b cf		 mov	 ecx, edi
  000d8	50		 push	 eax
  000d9	56		 push	 esi
  000da	e8 00 00 00 00	 call	 ?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectCollisionShadowReceiver

; 266  : #ifdef __PERFORMANCE_CHECKER__
; 267  : 	DWORD t6=timeGetTime();
; 268  : #endif
; 269  : 	__UpdateAroundAreaList();

  000df	8b cf		 mov	 ecx, edi
  000e1	e8 00 00 00 00	 call	 ?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__UpdateAroundAreaList
$LN1@Game_Updat:

; 270  : 
; 271  : #ifdef __PERFORMANCE_CHECKER__
; 272  : 	DWORD t7=timeGetTime();
; 273  : 	{
; 274  : 		static FILE* fp=fopen("perf_area_update.txt", "w");
; 275  : 
; 276  : 		if (t7-t1>5)
; 277  : 		{
; 278  : 			fprintf(fp, "UA.Total %d (Time %f)\n", t3-t1, ELTimer_GetMSec()/1000.0f);
; 279  : 			fprintf(fp, "UA.Clear %d\n", t2-t1);
; 280  : 			fprintf(fp, "UA.Vector %d\n", t3-t2);
; 281  : 			fprintf(fp, "UA.Shadow %d\n", t4-t3);
; 282  : 			fprintf(fp, "UA.Blocker %d\n", t5-t4);
; 283  : 			fprintf(fp, "UA.ColliShadow %d\n", t6-t5);
; 284  : 			fprintf(fp, "UA.Area %d\n", t7-t6);
; 285  : 			fflush(fp);
; 286  : 		}
; 287  : 	}
; 288  : #endif
; 289  : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	8b e5		 mov	 esp, ebp
  000ea	5d		 pop	 ebp
  000eb	c2 04 00	 ret	 4
?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ENDP ; CMapOutdoor::__Game_UpdateArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_v3Player$ = 8						; size = 4
?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z PROC	; CMapOutdoor::__UpdateArea, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 217  : #endif
; 218  : }

  00003	5d		 pop	 ebp

; 213  : #ifdef WORLD_EDITOR
; 214  : 	__NEW_WorldEditor_UpdateArea();
; 215  : #else
; 216  : 	__Game_UpdateArea(v3Player);

  00004	e9 00 00 00 00	 jmp	 ?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__Game_UpdateArea
?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ENDP	; CMapOutdoor::__UpdateArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z
_TEXT	SEGMENT
tv264 = 8						; size = 4
_lPatchNum$ = 8						; size = 4
_byPatchNumX$ = 12					; size = 1
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_byPatchNumY$ = 20					; size = 1
$T1 = 20						; size = 1
_x1$ = 20						; size = 4
_pTerrain$ = 24						; size = 4
_y1$ = 24						; size = 4
?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z PROC		; CMapOutdoor::AssignPatch, COMDAT
; _this$ = ecx

; 984  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 985  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::AssignPatch");
; 986  : 
; 987  : 	CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[lPatchNum];

  00003	8b 45 08	 mov	 eax, DWORD PTR _lPatchNum$[ebp]
  00006	53		 push	 ebx

; 988  : 
; 989  : 	if (y0 < 0 && y1 <= 0)

  00007	8b 5d 10	 mov	 ebx, DWORD PTR _y0$[ebp]
  0000a	56		 push	 esi
  0000b	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00012	2b d0		 sub	 edx, eax
  00014	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  00017	57		 push	 edi
  00018	8d 3c 90	 lea	 edi, DWORD PTR [eax+edx*4]
  0001b	85 db		 test	 ebx, ebx
  0001d	79 61		 jns	 SHORT $LN2@AssignPatc
  0001f	83 7d 18 00	 cmp	 DWORD PTR _y1$[ebp], 0
  00023	0f 8f b6 00 00
	00		 jg	 $LN8@AssignPatc

; 990  : 	{
; 991  : 		if (x0 < 0 && x1 <= 0)

  00029	8b 75 0c	 mov	 esi, DWORD PTR _x0$[ebp]
  0002c	85 f6		 test	 esi, esi
  0002e	79 1a		 jns	 SHORT $LN4@AssignPatc
  00030	83 7d 14 00	 cmp	 DWORD PTR _x1$[ebp], 0
  00034	7f 39		 jg	 SHORT $LN6@AssignPatc

; 992  : 		{
; 993  : 			pTerrainPatchProxy->SetTerrainNum(0);
; 994  : 			x0 += CTerrainImpl::XSIZE;

  00036	32 c0		 xor	 al, al
  00038	c6 47 08 00	 mov	 BYTE PTR [edi+8], 0
  0003c	83 ee 80	 sub	 esi, -128		; ffffff80H

; 1005 : 
; 1006 : 		y0 += CTerrainImpl::YSIZE;

  0003f	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  00042	83 eb 80	 sub	 ebx, -128		; ffffff80H

; 1007 : 		y1 += CTerrainImpl::YSIZE;
; 1008 : 	}

  00045	e9 d5 00 00 00	 jmp	 $LN17@AssignPatc
$LN4@AssignPatc:

; 995  : 			x1 += CTerrainImpl::XSIZE;
; 996  : 		}
; 997  : 		else if (x0 >= CTerrainImpl::XSIZE && x1 > CTerrainImpl::XSIZE)

  0004a	81 fe 80 00 00
	00		 cmp	 esi, 128		; 00000080H
  00050	7c 1d		 jl	 SHORT $LN6@AssignPatc
  00052	81 7d 14 80 00
	00 00		 cmp	 DWORD PTR _x1$[ebp], 128 ; 00000080H
  00059	7e 14		 jle	 SHORT $LN6@AssignPatc

; 998  : 		{
; 999  : 			pTerrainPatchProxy->SetTerrainNum(2);
; 1000 : 			x0 -= CTerrainImpl::XSIZE;

  0005b	b0 02		 mov	 al, 2
  0005d	c6 47 08 02	 mov	 BYTE PTR [edi+8], 2
  00061	83 c6 80	 add	 esi, -128		; ffffff80H

; 1005 : 
; 1006 : 		y0 += CTerrainImpl::YSIZE;

  00064	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  00067	83 eb 80	 sub	 ebx, -128		; ffffff80H

; 1007 : 		y1 += CTerrainImpl::YSIZE;
; 1008 : 	}

  0006a	e9 b0 00 00 00	 jmp	 $LN17@AssignPatc
$LN6@AssignPatc:

; 1001 : 			x1 -= CTerrainImpl::XSIZE;
; 1002 : 		}
; 1003 : 		else
; 1004 : 			pTerrainPatchProxy->SetTerrainNum(1);

  0006f	b0 01		 mov	 al, 1
  00071	c6 47 08 01	 mov	 BYTE PTR [edi+8], 1

; 1005 : 
; 1006 : 		y0 += CTerrainImpl::YSIZE;

  00075	83 eb 80	 sub	 ebx, -128		; ffffff80H
  00078	88 45 14	 mov	 BYTE PTR $T1[ebp], al

; 1007 : 		y1 += CTerrainImpl::YSIZE;
; 1008 : 	}

  0007b	e9 9f 00 00 00	 jmp	 $LN17@AssignPatc
$LN2@AssignPatc:

; 1009 : 	else if (y0 >= CTerrainImpl::YSIZE && y1 > CTerrainImpl::YSIZE)

  00080	81 fb 80 00 00
	00		 cmp	 ebx, 128		; 00000080H
  00086	7c 57		 jl	 SHORT $LN8@AssignPatc
  00088	81 7d 18 80 00
	00 00		 cmp	 DWORD PTR _y1$[ebp], 128 ; 00000080H
  0008f	7e 4e		 jle	 SHORT $LN8@AssignPatc

; 1010 : 	{
; 1011 : 		if (x0 < 0 && x1 <= 0)

  00091	8b 75 0c	 mov	 esi, DWORD PTR _x0$[ebp]
  00094	85 f6		 test	 esi, esi
  00096	79 17		 jns	 SHORT $LN10@AssignPatc
  00098	83 7d 14 00	 cmp	 DWORD PTR _x1$[ebp], 0
  0009c	7f 33		 jg	 SHORT $LN12@AssignPatc

; 1012 : 		{
; 1013 : 			pTerrainPatchProxy->SetTerrainNum(6);
; 1014 : 			x0 += CTerrainImpl::XSIZE;

  0009e	b0 06		 mov	 al, 6
  000a0	c6 47 08 06	 mov	 BYTE PTR [edi+8], 6
  000a4	83 ee 80	 sub	 esi, -128		; ffffff80H

; 1025 : 
; 1026 : 		y0 -= CTerrainImpl::YSIZE;

  000a7	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  000aa	83 c3 80	 add	 ebx, -128		; ffffff80H

; 1027 : 		y1 -= CTerrainImpl::YSIZE;
; 1028 : 	}

  000ad	eb 70		 jmp	 SHORT $LN17@AssignPatc
$LN10@AssignPatc:

; 1015 : 			x1 += CTerrainImpl::XSIZE;
; 1016 : 		}
; 1017 : 		else if (x0 >= CTerrainImpl::XSIZE && x1 > CTerrainImpl::XSIZE)

  000af	81 fe 80 00 00
	00		 cmp	 esi, 128		; 00000080H
  000b5	7c 1a		 jl	 SHORT $LN12@AssignPatc
  000b7	81 7d 14 80 00
	00 00		 cmp	 DWORD PTR _x1$[ebp], 128 ; 00000080H
  000be	7e 11		 jle	 SHORT $LN12@AssignPatc

; 1018 : 		{
; 1019 : 			pTerrainPatchProxy->SetTerrainNum(8);
; 1020 : 			x0 -= CTerrainImpl::XSIZE;

  000c0	b0 08		 mov	 al, 8
  000c2	c6 47 08 08	 mov	 BYTE PTR [edi+8], 8
  000c6	83 c6 80	 add	 esi, -128		; ffffff80H

; 1025 : 
; 1026 : 		y0 -= CTerrainImpl::YSIZE;

  000c9	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  000cc	83 c3 80	 add	 ebx, -128		; ffffff80H

; 1027 : 		y1 -= CTerrainImpl::YSIZE;
; 1028 : 	}

  000cf	eb 4e		 jmp	 SHORT $LN17@AssignPatc
$LN12@AssignPatc:

; 1021 : 			x1 -= CTerrainImpl::XSIZE;
; 1022 : 		}
; 1023 : 		else
; 1024 : 			pTerrainPatchProxy->SetTerrainNum(7);

  000d1	b0 07		 mov	 al, 7
  000d3	c6 47 08 07	 mov	 BYTE PTR [edi+8], 7

; 1025 : 
; 1026 : 		y0 -= CTerrainImpl::YSIZE;

  000d7	83 c3 80	 add	 ebx, -128		; ffffff80H
  000da	88 45 14	 mov	 BYTE PTR $T1[ebp], al

; 1027 : 		y1 -= CTerrainImpl::YSIZE;
; 1028 : 	}

  000dd	eb 40		 jmp	 SHORT $LN17@AssignPatc
$LN8@AssignPatc:

; 1029 : 	else
; 1030 : 	{
; 1031 : 		if (x0 < 0 && x1 <= 0)

  000df	8b 75 0c	 mov	 esi, DWORD PTR _x0$[ebp]
  000e2	85 f6		 test	 esi, esi
  000e4	79 13		 jns	 SHORT $LN14@AssignPatc
  000e6	83 7d 14 00	 cmp	 DWORD PTR _x1$[ebp], 0
  000ea	7f 2b		 jg	 SHORT $LN16@AssignPatc

; 1032 : 		{
; 1033 : 			pTerrainPatchProxy->SetTerrainNum(3);

  000ec	c6 47 08 03	 mov	 BYTE PTR [edi+8], 3

; 1034 : 			x0 += CTerrainImpl::XSIZE;

  000f0	83 ee 80	 sub	 esi, -128		; ffffff80H
  000f3	c6 45 14 03	 mov	 BYTE PTR $T1[ebp], 3

; 1035 : 			x1 += CTerrainImpl::XSIZE;
; 1036 : 		}

  000f7	eb 26		 jmp	 SHORT $LN17@AssignPatc
$LN14@AssignPatc:

; 1037 : 		else if (x0 >= CTerrainImpl::XSIZE && x1 > CTerrainImpl::XSIZE)

  000f9	81 fe 80 00 00
	00		 cmp	 esi, 128		; 00000080H
  000ff	7c 16		 jl	 SHORT $LN16@AssignPatc
  00101	81 7d 14 80 00
	00 00		 cmp	 DWORD PTR _x1$[ebp], 128 ; 00000080H
  00108	7e 0d		 jle	 SHORT $LN16@AssignPatc

; 1038 : 		{
; 1039 : 			pTerrainPatchProxy->SetTerrainNum(5);

  0010a	c6 47 08 05	 mov	 BYTE PTR [edi+8], 5

; 1040 : 			x0 -= CTerrainImpl::XSIZE;

  0010e	83 c6 80	 add	 esi, -128		; ffffff80H
  00111	c6 45 14 05	 mov	 BYTE PTR $T1[ebp], 5

; 1041 : 			x1 -= CTerrainImpl::XSIZE;
; 1042 : 		}

  00115	eb 08		 jmp	 SHORT $LN17@AssignPatc
$LN16@AssignPatc:

; 1043 : 		else
; 1044 : 			pTerrainPatchProxy->SetTerrainNum(4);

  00117	c6 47 08 04	 mov	 BYTE PTR [edi+8], 4
  0011b	c6 45 14 04	 mov	 BYTE PTR $T1[ebp], 4
$LN17@AssignPatc:

; 1045 : 	}
; 1046 : 
; 1047 : 	CTerrain * pTerrain;
; 1048 : 	if (!GetTerrainPointer(pTerrainPatchProxy->GetTerrainNum(), &pTerrain))

  0011f	8d 45 18	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00122	50		 push	 eax
  00123	ff 75 14	 push	 DWORD PTR $T1[ebp]
  00126	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  0012b	85 c0		 test	 eax, eax
  0012d	74 4f		 je	 SHORT $LN1@AssignPatc

; 1049 : 		return;
; 1050 : 
; 1051 : 	BYTE byPatchNumX, byPatchNumY;
; 1052 : 	byPatchNumX = x0 / CTerrainImpl::PATCH_XSIZE;
; 1053 : 	byPatchNumY = y0 / CTerrainImpl::PATCH_YSIZE;
; 1054 : 
; 1055 : 	CTerrainPatch * pTerrainPatch = pTerrain->GetTerrainPatchPtr(byPatchNumX, byPatchNumY);

  0012f	8b 4d 18	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  00132	8b c6		 mov	 eax, esi
  00134	99		 cdq
  00135	83 e2 0f	 and	 edx, 15			; 0000000fH
  00138	03 c2		 add	 eax, edx
  0013a	c1 f8 04	 sar	 eax, 4
  0013d	88 45 0c	 mov	 BYTE PTR _byPatchNumX$[ebp], al
  00140	89 45 08	 mov	 DWORD PTR tv264[ebp], eax
  00143	8b c3		 mov	 eax, ebx
  00145	99		 cdq
  00146	83 e2 0f	 and	 edx, 15			; 0000000fH
  00149	8d 1c 02	 lea	 ebx, DWORD PTR [edx+eax]
  0014c	c1 fb 04	 sar	 ebx, 4
  0014f	88 5d 14	 mov	 BYTE PTR _byPatchNumY$[ebp], bl
  00152	ff 75 14	 push	 DWORD PTR _byPatchNumY$[ebp]
  00155	ff 75 0c	 push	 DWORD PTR _byPatchNumX$[ebp]
  00158	e8 00 00 00 00	 call	 ?GetTerrainPatchPtr@CTerrain@@QAEPAVCTerrainPatch@@EE@Z ; CTerrain::GetTerrainPatchPtr
  0015d	8b f0		 mov	 esi, eax

; 1056 : 	if (!pTerrainPatch)

  0015f	85 f6		 test	 esi, esi
  00161	74 1b		 je	 SHORT $LN1@AssignPatc

; 1057 : 		return;
; 1058 : 
; 1059 : 	pTerrainPatchProxy->SetPatchNum(byPatchNumY * CTerrainImpl::PATCH_XCOUNT + byPatchNumX);

  00163	8b 45 08	 mov	 eax, DWORD PTR tv264[ebp]
  00166	0f b6 d3	 movzx	 edx, bl
  00169	66 c1 e2 03	 shl	 dx, 3
  0016d	0f b6 c8	 movzx	 ecx, al
  00170	66 03 d1	 add	 dx, cx

; 1060 : 	pTerrainPatchProxy->SetTerrainPatch(pTerrainPatch);

  00173	89 77 0c	 mov	 DWORD PTR [edi+12], esi
  00176	66 89 57 06	 mov	 WORD PTR [edi+6], dx

; 1061 : 	pTerrainPatchProxy->SetUsed(true);

  0017a	c6 47 04 01	 mov	 BYTE PTR [edi+4], 1
$LN1@AssignPatc:

; 1062 : }

  0017e	5f		 pop	 edi
  0017f	5e		 pop	 esi
  00180	5b		 pop	 ebx
  00181	5d		 pop	 ebp
  00182	c2 14 00	 ret	 20			; 00000014H
?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z ENDP		; CMapOutdoor::AssignPatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z
_TEXT	SEGMENT
_yw$1$ = -24						; size = 4
tv377 = -20						; size = 4
tv376 = -16						; size = 4
tv371 = -12						; size = 4
_xw$1$ = -8						; size = 4
_yp$1$ = -4						; size = 4
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z PROC		; CMapOutdoor::ConvertTerrainToTnL, COMDAT
; _this$ = ecx

; 941  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 942  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::ConvertTerrainToTnL");
; 943  : 
; 944  : 	for (long i = 0; i < m_wPatchCount * m_wPatchCount; i++)

  00006	33 d2		 xor	 edx, edx
  00008	53		 push	 ebx
  00009	8b d9		 mov	 ebx, ecx
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	0f b7 83 8c 00
	00 00		 movzx	 eax, WORD PTR [ebx+140]
  00014	0f af c0	 imul	 eax, eax
  00017	85 c0		 test	 eax, eax
  00019	7e 1f		 jle	 SHORT $LN3@ConvertTer
  0001b	33 c9		 xor	 ecx, ecx
  0001d	0f 1f 00	 npad	 3
$LL4@ConvertTer:

; 945  : 		m_pTerrainPatchProxyList[i].SetUsed(false);

  00020	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  00023	8d 49 1c	 lea	 ecx, DWORD PTR [ecx+28]
  00026	42		 inc	 edx
  00027	c6 44 08 e8 00	 mov	 BYTE PTR [eax+ecx-24], 0
  0002c	0f b7 83 8c 00
	00 00		 movzx	 eax, WORD PTR [ebx+140]
  00033	0f af c0	 imul	 eax, eax
  00036	3b d0		 cmp	 edx, eax
  00038	7c e6		 jl	 SHORT $LL4@ConvertTer
$LN3@ConvertTer:

; 946  : 
; 947  : 	lx -= m_lViewRadius;          /* Move to the top left corner of the */

  0003a	8b 43 68	 mov	 eax, DWORD PTR [ebx+104]
  0003d	8b 55 08	 mov	 edx, DWORD PTR _lx$[ebp]

; 948  : 	ly -= m_lViewRadius;          /* input rectangle */

  00040	8b 75 0c	 mov	 esi, DWORD PTR _ly$[ebp]
  00043	2b d0		 sub	 edx, eax
  00045	2b f0		 sub	 esi, eax
  00047	89 55 08	 mov	 DWORD PTR _lx$[ebp], edx

; 949  : 
; 950  : 	long diameter = m_lViewRadius * 2;

  0004a	8d 0c 00	 lea	 ecx, DWORD PTR [eax+eax]
  0004d	89 75 0c	 mov	 DWORD PTR _ly$[ebp], esi
  00050	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00053	89 45 ec	 mov	 DWORD PTR tv377[ebp], eax

; 951  : 
; 952  : 	long x0 = lx / TERRAIN_PATCHSIZE;

  00056	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00059	03 c1		 add	 eax, ecx

; 953  : 	long y0 = ly / TERRAIN_PATCHSIZE;
; 954  : 	long x1 = ( lx + diameter - 1 ) / TERRAIN_PATCHSIZE;

  0005b	99		 cdq
  0005c	83 e2 0f	 and	 edx, 15			; 0000000fH
  0005f	8d 3c 02	 lea	 edi, DWORD PTR [edx+eax]
  00062	8b 45 08	 mov	 eax, DWORD PTR _lx$[ebp]
  00065	99		 cdq
  00066	83 e2 0f	 and	 edx, 15			; 0000000fH
  00069	c1 ff 04	 sar	 edi, 4
  0006c	03 c2		 add	 eax, edx
  0006e	c1 f8 04	 sar	 eax, 4
  00071	2b f8		 sub	 edi, eax

; 955  : 	long y1 = ( ly + diameter - 1 ) / TERRAIN_PATCHSIZE;
; 956  : 
; 957  : 	long xw = x1 - x0 + 1;     /* Figure out how many patches are needed */

  00073	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00076	89 45 f0	 mov	 DWORD PTR tv376[ebp], eax
  00079	47		 inc	 edi
  0007a	48		 dec	 eax
  0007b	89 7d f8	 mov	 DWORD PTR _xw$1$[ebp], edi
  0007e	99		 cdq
  0007f	33 ff		 xor	 edi, edi
  00081	83 e2 0f	 and	 edx, 15			; 0000000fH
  00084	89 7d fc	 mov	 DWORD PTR _yp$1$[ebp], edi
  00087	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  0008a	8b c6		 mov	 eax, esi
  0008c	99		 cdq
  0008d	83 e2 0f	 and	 edx, 15			; 0000000fH
  00090	c1 f9 04	 sar	 ecx, 4
  00093	03 c2		 add	 eax, edx
  00095	c1 f8 04	 sar	 eax, 4
  00098	2b c8		 sub	 ecx, eax

; 958  : 	long yw = y1 - y0 + 1;

  0009a	41		 inc	 ecx
  0009b	89 4d e8	 mov	 DWORD PTR _yw$1$[ebp], ecx

; 959  : 
; 960  : 	long ex = lx + diameter;
; 961  : 	long ey = ly + diameter;
; 962  : 
; 963  : 	y0 = ly;
; 964  : 	for (long yp = 0; yp < yw; yp++)

  0009e	85 c9		 test	 ecx, ecx
  000a0	7e 74		 jle	 SHORT $LN6@ConvertTer
$LL7@ConvertTer:

; 965  :     {
; 966  : 		x0 = lx;

  000a2	8b 4d 08	 mov	 ecx, DWORD PTR _lx$[ebp]

; 967  : 		y1 = (y0 / TERRAIN_PATCHSIZE + 1) * TERRAIN_PATCHSIZE;

  000a5	8b c6		 mov	 eax, esi
  000a7	99		 cdq
  000a8	83 e2 0f	 and	 edx, 15			; 0000000fH
  000ab	03 c2		 add	 eax, edx

; 968  : 		if (y1 > ey)
; 969  : 			y1 = ey;
; 970  : 		for (long xp = 0; xp < xw; xp++)

  000ad	8b 55 f0	 mov	 edx, DWORD PTR tv376[ebp]
  000b0	c1 f8 04	 sar	 eax, 4
  000b3	40		 inc	 eax
  000b4	c1 e0 04	 shl	 eax, 4
  000b7	3b c2		 cmp	 eax, edx
  000b9	0f 4e d0	 cmovle	 edx, eax
  000bc	33 f6		 xor	 esi, esi
  000be	89 55 f4	 mov	 DWORD PTR tv371[ebp], edx
  000c1	39 75 f8	 cmp	 DWORD PTR _xw$1$[ebp], esi
  000c4	7e 42		 jle	 SHORT $LN9@ConvertTer
$LL10@ConvertTer:

; 971  : 		{
; 972  : 			x1 = (x0 / TERRAIN_PATCHSIZE + 1) * TERRAIN_PATCHSIZE;
; 973  : 			if (x1 > ex)
; 974  : 				x1 = ex;
; 975  :  			AssignPatch(yp * m_wPatchCount + xp, x0, y0, x1, y1);

  000c6	8b 7d ec	 mov	 edi, DWORD PTR tv377[ebp]
  000c9	8b c1		 mov	 eax, ecx
  000cb	ff 75 f4	 push	 DWORD PTR tv371[ebp]
  000ce	99		 cdq
  000cf	83 e2 0f	 and	 edx, 15			; 0000000fH
  000d2	03 c2		 add	 eax, edx
  000d4	c1 f8 04	 sar	 eax, 4
  000d7	40		 inc	 eax
  000d8	c1 e0 04	 shl	 eax, 4
  000db	3b c7		 cmp	 eax, edi
  000dd	0f 4e f8	 cmovle	 edi, eax
  000e0	0f b7 83 8c 00
	00 00		 movzx	 eax, WORD PTR [ebx+140]
  000e7	0f af 45 fc	 imul	 eax, DWORD PTR _yp$1$[ebp]
  000eb	57		 push	 edi
  000ec	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  000ef	51		 push	 ecx
  000f0	03 c6		 add	 eax, esi
  000f2	8b cb		 mov	 ecx, ebx
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z ; CMapOutdoor::AssignPatch
  000fa	46		 inc	 esi

; 976  : 			x0 = x1;

  000fb	8b cf		 mov	 ecx, edi
  000fd	3b 75 f8	 cmp	 esi, DWORD PTR _xw$1$[ebp]
  00100	7c c4		 jl	 SHORT $LL10@ConvertTer
  00102	8b 55 f4	 mov	 edx, DWORD PTR tv371[ebp]
  00105	8b 7d fc	 mov	 edi, DWORD PTR _yp$1$[ebp]
$LN9@ConvertTer:

; 959  : 
; 960  : 	long ex = lx + diameter;
; 961  : 	long ey = ly + diameter;
; 962  : 
; 963  : 	y0 = ly;
; 964  : 	for (long yp = 0; yp < yw; yp++)

  00108	47		 inc	 edi

; 977  : 		}
; 978  : 		y0 = y1;

  00109	8b f2		 mov	 esi, edx
  0010b	89 75 0c	 mov	 DWORD PTR _ly$[ebp], esi
  0010e	89 7d fc	 mov	 DWORD PTR _yp$1$[ebp], edi
  00111	3b 7d e8	 cmp	 edi, DWORD PTR _yw$1$[ebp]
  00114	7c 8c		 jl	 SHORT $LL7@ConvertTer
$LN6@ConvertTer:

; 979  :     }
; 980  : 	UpdateQuadTreeHeights(m_pRootNode);

  00116	ff b3 14 01 00
	00		 push	 DWORD PTR [ebx+276]
  0011c	8b cb		 mov	 ecx, ebx
  0011e	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 981  : }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z ENDP		; CMapOutdoor::ConvertTerrainToTnL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateTerrain@CMapOutdoor@@IAEXMM@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_fX$ = 8						; size = 4
tv210 = 12						; size = 4
_fY$ = 12						; size = 4
?UpdateTerrain@CMapOutdoor@@IAEXMM@Z PROC		; CMapOutdoor::UpdateTerrain, COMDAT
; _this$ = ecx

; 722  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 723  : 	if (fY < 0)

  00004	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$[ebp]
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	0f 2f c1	 comiss	 xmm0, xmm1
  0000f	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  00012	76 07		 jbe	 SHORT $LN2@UpdateTerr

; 724  : 		fY = -fY;

  00014	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
$LN2@UpdateTerr:

; 725  : 
; 726  : 	int sx, sy;
; 727  : 	PR_FLOAT_TO_INT(fX, sx);

  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00020	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00028	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0002e	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00034	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0003a	66 0f 6e c2	 movd	 xmm0, edx
  0003e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00041	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00048	76 01		 jbe	 SHORT $LN6@UpdateTerr
  0004a	4a		 dec	 edx
$LN6@UpdateTerr:
  0004b	56		 push	 esi
  0004c	57		 push	 edi

; 728  : 	PR_FLOAT_TO_INT(fY, sy);

  0004d	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm1
  00055	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0005b	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00061	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00067	66 0f 6e c6	 movd	 xmm0, esi
  0006b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00075	76 01		 jbe	 SHORT $LN8@UpdateTerr
  00077	4e		 dec	 esi
$LN8@UpdateTerr:

; 729  : 
; 730  : 	long lDivider = (CTerrainImpl::CELLSCALE * TERRAIN_PATCHSIZE);
; 731  : 
; 732  : 	m_lCenterX = (sx - m_lCurCoordStartX) / lDivider;

  00078	2b 51 78	 sub	 edx, DWORD PTR [ecx+120]
  0007b	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH

; 733  : 	m_lCenterY = (sy - m_lCurCoordStartY) / lDivider;

  00080	2b 71 7c	 sub	 esi, DWORD PTR [ecx+124]
  00083	f7 ea		 imul	 edx
  00085	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0008a	c1 fa 0a	 sar	 edx, 10			; 0000000aH
  0008d	8b fa		 mov	 edi, edx
  0008f	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00092	03 fa		 add	 edi, edx
  00094	f7 ee		 imul	 esi
  00096	89 7d 0c	 mov	 DWORD PTR tv210[ebp], edi
  00099	c1 fa 0a	 sar	 edx, 10			; 0000000aH
  0009c	8b c2		 mov	 eax, edx
  0009e	89 b9 04 01 00
	00		 mov	 DWORD PTR [ecx+260], edi
  000a4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a7	03 c2		 add	 eax, edx
  000a9	89 81 08 01 00
	00		 mov	 DWORD PTR [ecx+264], eax

; 734  : 
; 735  : 	if ((m_lCenterX != m_lOldReadX) || (m_lCenterY != m_lOldReadY))

  000af	3b b9 0c 01 00
	00		 cmp	 edi, DWORD PTR [ecx+268]
  000b5	75 08		 jne	 SHORT $LN4@UpdateTerr
  000b7	3b 81 10 01 00
	00		 cmp	 eax, DWORD PTR [ecx+272]
  000bd	74 28		 je	 SHORT $LN3@UpdateTerr
$LN4@UpdateTerr:

; 736  : 	{
; 737  : 		long lRealCenterX = m_lCenterX * TERRAIN_PATCHSIZE;
; 738  : 		long lRealCenterY = m_lCenterY * TERRAIN_PATCHSIZE;
; 739  : 		m_lOldReadX = m_lCenterX;

  000bf	8b 55 0c	 mov	 edx, DWORD PTR tv210[ebp]
  000c2	8b f0		 mov	 esi, eax
  000c4	c1 e6 04	 shl	 esi, 4

; 740  : 		m_lOldReadY = m_lCenterY;
; 741  : 
; 742  : 		ConvertTerrainToTnL(lRealCenterX, lRealCenterY);

  000c7	56		 push	 esi
  000c8	c1 e7 04	 shl	 edi, 4
  000cb	57		 push	 edi
  000cc	89 91 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], edx
  000d2	89 81 10 01 00
	00		 mov	 DWORD PTR [ecx+272], eax
  000d8	e8 00 00 00 00	 call	 ?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z ; CMapOutdoor::ConvertTerrainToTnL

; 743  : 		UpdateAreaList(lRealCenterX, lRealCenterY);

  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000e0	56		 push	 esi
  000e1	57		 push	 edi
  000e2	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e4	ff 50 4c	 call	 DWORD PTR [eax+76]
$LN3@UpdateTerr:

; 744  : 		//	m_AreaVector.size(), m_TerrainVector.size(), m_AreaDeleteVector.size(), m_TerrainDeleteVector.size());
; 745  : 	}
; 746  : }

  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
?UpdateTerrain@CMapOutdoor@@IAEXMM@Z ENDP		; CMapOutdoor::UpdateTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
_TEXT	SEGMENT
_$S14$ = -116						; size = 24
_$S13$ = -92						; size = 24
$T2 = -68						; size = 24
$T3 = -44						; size = 24
$T4 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv2230 = 8						; size = 4
_lCenterX$ = 8						; size = 4
$T6 = 11						; size = 1
$T7 = 11						; size = 1
$T8 = 12						; size = 4
$T9 = 12						; size = 4
tv2229 = 12						; size = 4
_lCenterY$ = 12						; size = 4
?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z PROC		; CMapOutdoor::UpdateAreaList, COMDAT
; _this$ = ecx

; 876  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 68	 sub	 esp, 104		; 00000068H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002a	8b 87 1c 09 00
	00		 mov	 eax, DWORD PTR [edi+2332]
  00030	2b 87 18 09 00
	00		 sub	 eax, DWORD PTR [edi+2328]
  00036	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 877  : 	if (m_TerrainVector.size() <= AROUND_AREA_NUM && m_AreaVector.size() <= AROUND_AREA_NUM)

  00039	83 f8 09	 cmp	 eax, 9
  0003c	77 18		 ja	 SHORT $LN341@UpdateArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003e	8b 87 50 09 00
	00		 mov	 eax, DWORD PTR [edi+2384]
  00044	2b 87 4c 09 00
	00		 sub	 eax, DWORD PTR [edi+2380]
  0004a	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 877  : 	if (m_TerrainVector.size() <= AROUND_AREA_NUM && m_AreaVector.size() <= AROUND_AREA_NUM)

  0004d	83 f8 09	 cmp	 eax, 9
  00050	0f 86 ce 02 00
	00		 jbe	 $LN312@UpdateArea
$LN341@UpdateArea:

; 878  : 		return;
; 879  : 
; 880  : 	__ClearGarvage();

  00056	8b 07		 mov	 eax, DWORD PTR [edi]
  00058	ff 50 3c	 call	 DWORD PTR [eax+60]

; 888  : 	if (lCenterY > CTerrainImpl::YSIZE / 2)

  0005b	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0005d	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 888  : 	if (lCenterY > CTerrainImpl::YSIZE / 2)

  00064	83 7d 08 40	 cmp	 DWORD PTR _lCenterX$[ebp], 64 ; 00000040H
  00068	0f 9e c1	 setle	 cl

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  0006b	33 c0		 xor	 eax, eax
  0006d	83 7d 0c 40	 cmp	 DWORD PTR _lCenterY$[ebp], 64 ; 00000040H
  00071	89 4d 08	 mov	 DWORD PTR tv2230[ebp], ecx
  00074	0f 9e c0	 setle	 al
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 510  : 				m_eLRDeleteDir = eLRDeleteDir;

  00077	89 4d bc	 mov	 DWORD PTR $T2[ebp], ecx

; 512  : 				m_CurCoordinate = CurCoord;

  0007a	8b 4f 74	 mov	 ecx, DWORD PTR [edi+116]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0007d	33 d2		 xor	 edx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  0007f	83 c0 02	 add	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 512  : 				m_CurCoordinate = CurCoord;

  00082	89 4d c4	 mov	 DWORD PTR $T2[ebp+8], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  00085	89 45 0c	 mov	 DWORD PTR tv2229[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 511  : 				m_eTBDeleteDir = eTBDeleteDir;

  00088	89 45 c0	 mov	 DWORD PTR $T2[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0008b	89 55 ec	 mov	 DWORD PTR $T4[ebp], edx
  0008e	89 55 d0	 mov	 DWORD PTR $T2[ebp+20], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 523  : 				m_ReturnTerrainVector.clear();

  00091	89 55 cc	 mov	 DWORD PTR $T2[ebp+16], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00094	8b 9f 1c 09 00
	00		 mov	 ebx, DWORD PTR [edi+2332]

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009a	8b c1		 mov	 eax, ecx
  0009c	8b b7 18 09 00
	00		 mov	 esi, DWORD PTR [edi+2328]
  000a2	89 55 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edx
  000a5	3b f3		 cmp	 esi, ebx
  000a7	74 24		 je	 SHORT $LN56@UpdateArea
  000a9	0f 1f 80 00 00
	00 00		 npad	 7
$LL57@UpdateArea:

; 236  :         _Func(*_UFirst);

  000b0	ff 36		 push	 DWORD PTR [esi]
  000b2	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  000b5	e8 00 00 00 00	 call	 ??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z ; CMapOutdoor::FPushTerrainToDeleteVector::operator()
  000ba	83 c6 04	 add	 esi, 4
  000bd	3b f3		 cmp	 esi, ebx
  000bf	75 ef		 jne	 SHORT $LL57@UpdateArea
  000c1	8b 55 d0	 mov	 edx, DWORD PTR $T2[ebp+20]
  000c4	8b 47 74	 mov	 eax, DWORD PTR [edi+116]
  000c7	8b 4d c4	 mov	 ecx, DWORD PTR $T2[ebp+8]
  000ca	89 55 ec	 mov	 DWORD PTR $T4[ebp], edx
$LN56@UpdateArea:
  000cd	f3 0f 7e 45 bc	 movq	 xmm0, QWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 386  :         _Myfirst = _Right._Myfirst;

  000d2	8b 5d c8	 mov	 ebx, DWORD PTR $T2[ebp+12]
  000d5	89 4d ac	 mov	 DWORD PTR _$S13$[ebp+8], ecx

; 387  :         _Mylast  = _Right._Mylast;

  000d8	8b 4d cc	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000db	66 0f d6 45 a4	 movq	 QWORD PTR _$S13$[ebp], xmm0

; 386  :         _Myfirst = _Right._Myfirst;

  000e0	89 5d b0	 mov	 DWORD PTR _$S13$[ebp+12], ebx

; 387  :         _Mylast  = _Right._Mylast;

  000e3	89 4d b4	 mov	 DWORD PTR _$S13$[ebp+16], ecx

; 388  :         _Myend   = _Right._Myend;

  000e6	89 55 b8	 mov	 DWORD PTR _$S13$[ebp+20], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 510  : 				m_eLRDeleteDir = eLRDeleteDir;

  000e9	8b 4d 08	 mov	 ecx, DWORD PTR tv2230[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000ec	33 d2		 xor	 edx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 510  : 				m_eLRDeleteDir = eLRDeleteDir;

  000ee	89 4d d4	 mov	 DWORD PTR $T3[ebp], ecx

; 511  : 				m_eTBDeleteDir = eTBDeleteDir;

  000f1	8b 4d 0c	 mov	 ecx, DWORD PTR tv2229[ebp]
  000f4	89 4d d8	 mov	 DWORD PTR $T3[ebp+4], ecx

; 536  : 				m_ReturnAreaVector.clear();

  000f7	33 c9		 xor	 ecx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  000f9	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 512  : 				m_CurCoordinate = CurCoord;

  00100	89 45 dc	 mov	 DWORD PTR $T3[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00103	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+12], 0
  0010a	89 55 f0	 mov	 DWORD PTR $T5[ebp], edx
  0010d	89 55 e8	 mov	 DWORD PTR $T3[ebp+20], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 536  : 				m_ReturnAreaVector.clear();

  00110	89 4d e4	 mov	 DWORD PTR $T3[ebp+16], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00113	8b 9f 50 09 00
	00		 mov	 ebx, DWORD PTR [edi+2384]

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00119	8b b7 4c 09 00
	00		 mov	 esi, DWORD PTR [edi+2380]
  0011f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00123	3b f3		 cmp	 esi, ebx
  00125	74 26		 je	 SHORT $LN109@UpdateArea
  00127	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL110@UpdateArea:

; 236  :         _Func(*_UFirst);

  00130	ff 36		 push	 DWORD PTR [esi]
  00132	8d 4d d4	 lea	 ecx, DWORD PTR $T3[ebp]
  00135	e8 00 00 00 00	 call	 ??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z ; CMapOutdoor::FPushAreaToDeleteVector::operator()
  0013a	83 c6 04	 add	 esi, 4
  0013d	3b f3		 cmp	 esi, ebx
  0013f	75 ef		 jne	 SHORT $LL110@UpdateArea
  00141	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp+20]
  00144	8b 45 dc	 mov	 eax, DWORD PTR $T3[ebp+8]
  00147	8b 4d e4	 mov	 ecx, DWORD PTR $T3[ebp+16]
  0014a	89 55 f0	 mov	 DWORD PTR $T5[ebp], edx
$LN109@UpdateArea:
  0014d	f3 0f 7e 45 d4	 movq	 xmm0, QWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 386  :         _Myfirst = _Right._Myfirst;

  00152	8b 75 e0	 mov	 esi, DWORD PTR $T3[ebp+12]
  00155	66 0f d6 45 8c	 movq	 QWORD PTR _$S14$[ebp], xmm0
  0015a	89 45 94	 mov	 DWORD PTR _$S14$[ebp+8], eax
  0015d	89 75 98	 mov	 DWORD PTR _$S14$[ebp+12], esi

; 387  :         _Mylast  = _Right._Mylast;

  00160	89 4d 9c	 mov	 DWORD PTR _$S14$[ebp+16], ecx

; 388  :         _Myend   = _Right._Myend;

  00163	89 55 a0	 mov	 DWORD PTR _$S14$[ebp+20], edx

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00166	8b 5d cc	 mov	 ebx, DWORD PTR $T2[ebp+16]
  00169	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 895  : 	FPushAreaToDeleteVector &rPushAreaToDeleteVector = std::for_each(m_AreaVector.begin(), m_AreaVector.end(),

  0016c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00170	3b c3		 cmp	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 898  : 	if (!rPushTerrainToDeleteVector.m_ReturnTerrainVector.empty())

  00172	0f 84 c2 00 00
	00		 je	 $LN3@UpdateArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00178	8b 8f 28 09 00
	00		 mov	 ecx, DWORD PTR [edi+2344]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 900  : 		m_TerrainDeleteVector.resize(rPushTerrainToDeleteVector.m_ReturnTerrainVector.size());

  0017e	8d b7 24 09 00
	00		 lea	 esi, DWORD PTR [edi+2340]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00184	8b d3		 mov	 edx, ebx
  00186	2b d0		 sub	 edx, eax

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00188	8b 06		 mov	 eax, DWORD PTR [esi]
  0018a	2b c8		 sub	 ecx, eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0018c	c1 fa 02	 sar	 edx, 2

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0018f	c1 f9 02	 sar	 ecx, 2

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00192	89 55 0c	 mov	 DWORD PTR $T9[ebp], edx

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00195	3b d1		 cmp	 edx, ecx
  00197	73 05		 jae	 SHORT $LN145@UpdateArea

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00199	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]

; 1218 :             _Orphan_range(_Newlast, _Mylast);
; 1219 :             _Destroy(_Newlast, _Mylast);
; 1220 :             _Mylast = _Newlast;
; 1221 :             return;

  0019c	eb 2d		 jmp	 SHORT $LN344@UpdateArea
$LN145@UpdateArea:

; 1222 :         }
; 1223 : 
; 1224 :         if (_Newsize > _Oldsize) { // append

  0019e	76 2e		 jbe	 SHORT $LN146@UpdateArea

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  001a0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001a3	2b 06		 sub	 eax, DWORD PTR [esi]
  001a5	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  001a8	3b d0		 cmp	 edx, eax
  001aa	76 0e		 jbe	 SHORT $LN147@UpdateArea

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  001ac	8d 45 0b	 lea	 eax, DWORD PTR $T7[ebp]
  001af	8b ce		 mov	 ecx, esi
  001b1	50		 push	 eax
  001b2	52		 push	 edx
  001b3	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  001b8	eb 14		 jmp	 SHORT $LN146@UpdateArea
$LN147@UpdateArea:

; 1229 :             }
; 1230 : 
; 1231 :             const pointer _Oldlast = _Mylast;
; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  001ba	8b c2		 mov	 eax, edx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  001bc	56		 push	 esi

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  001bd	2b c1		 sub	 eax, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  001bf	50		 push	 eax
  001c0	ff 76 04	 push	 DWORD PTR [esi+4]
  001c3	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAVCTerrain@@@std@@@std@@YAPAPAVCTerrain@@PAPAV1@IAAV?$allocator@PAVCTerrain@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CTerrain *> >
  001c8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN344@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4137 :             return _Copy_memmove(_First, _Last, _Dest);

  001cb	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN146@UpdateArea:
  001ce	ff 36		 push	 DWORD PTR [esi]
  001d0	53		 push	 ebx
  001d1	8b 5d c8	 mov	 ebx, DWORD PTR $T2[ebp+12]
  001d4	53		 push	 ebx
  001d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 903  : 		for (DWORD dwIndex = 0; dwIndex < rPushTerrainToDeleteVector.m_ReturnTerrainVector.size(); ++dwIndex)

  001da	8b 45 0c	 mov	 eax, DWORD PTR $T9[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4137 :             return _Copy_memmove(_First, _Last, _Dest);

  001dd	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 903  : 		for (DWORD dwIndex = 0; dwIndex < rPushTerrainToDeleteVector.m_ReturnTerrainVector.size(); ++dwIndex)

  001e0	85 c0		 test	 eax, eax
  001e2	74 53		 je	 SHORT $LN342@UpdateArea
  001e4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL4@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001f0	8b b7 18 09 00
	00		 mov	 esi, DWORD PTR [edi+2328]
  001f6	8b 8f 1c 09 00
	00		 mov	 ecx, DWORD PTR [edi+2332]
  001fc	3b f1		 cmp	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 907  : 			while(aTerrainPtrItertor != m_TerrainVector.end())

  001fe	74 2c		 je	 SHORT $LN2@UpdateArea
$LL5@UpdateArea:

; 908  : 			{
; 909  : 				CTerrain * pTerrain = *aTerrainPtrItertor;
; 910  : 				if (pTerrain == rPushTerrainToDeleteVector.m_ReturnTerrainVector[dwIndex])

  00200	8b 06		 mov	 eax, DWORD PTR [esi]
  00202	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  00205	3b 03		 cmp	 eax, DWORD PTR [ebx]
  00207	75 1a		 jne	 SHORT $LN18@UpdateArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00209	56		 push	 esi
  0020a	51		 push	 ecx
  0020b	52		 push	 edx
  0020c	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
  00211	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  00214	83 87 1c 09 00
	00 fc		 add	 DWORD PTR [edi+2332], -4 ; fffffffcH
  0021b	8b 8f 1c 09 00
	00		 mov	 ecx, DWORD PTR [edi+2332]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 914  : 				}

  00221	eb 02		 jmp	 SHORT $LN19@UpdateArea
$LN18@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00223	8b f2		 mov	 esi, edx
$LN19@UpdateArea:

; 149  :         return _Ptr == _Right._Ptr;

  00225	3b f1		 cmp	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 907  : 			while(aTerrainPtrItertor != m_TerrainVector.end())

  00227	75 d7		 jne	 SHORT $LL5@UpdateArea
  00229	8b 45 0c	 mov	 eax, DWORD PTR $T9[ebp]
$LN2@UpdateArea:

; 903  : 		for (DWORD dwIndex = 0; dwIndex < rPushTerrainToDeleteVector.m_ReturnTerrainVector.size(); ++dwIndex)

  0022c	83 c3 04	 add	 ebx, 4
  0022f	83 e8 01	 sub	 eax, 1
  00232	89 45 0c	 mov	 DWORD PTR $T9[ebp], eax
  00235	75 b9		 jne	 SHORT $LL4@UpdateArea
$LN342@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00237	8b 4d e4	 mov	 ecx, DWORD PTR $T3[ebp+16]
$LN3@UpdateArea:
  0023a	8b 55 e0	 mov	 edx, DWORD PTR $T3[ebp+12]
  0023d	3b d1		 cmp	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 920  : 	if (!rPushAreaToDeleteVector.m_ReturnAreaVector.empty())

  0023f	0f 84 ad 00 00
	00		 je	 $LN8@UpdateArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00245	8b d9		 mov	 ebx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 922  : 		m_AreaDeleteVector.resize(rPushAreaToDeleteVector.m_ReturnAreaVector.size());

  00247	8d b7 58 09 00
	00		 lea	 esi, DWORD PTR [edi+2392]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0024d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00250	2b da		 sub	 ebx, edx

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00252	8b 16		 mov	 edx, DWORD PTR [esi]
  00254	2b ca		 sub	 ecx, edx

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00256	c1 fb 02	 sar	 ebx, 2

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00259	c1 f9 02	 sar	 ecx, 2

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0025c	89 5d 0c	 mov	 DWORD PTR $T8[ebp], ebx

; 1216 :         if (_Newsize < _Oldsize) { // trim

  0025f	3b d9		 cmp	 ebx, ecx
  00261	73 05		 jae	 SHORT $LN224@UpdateArea

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00263	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]

; 1218 :             _Orphan_range(_Newlast, _Mylast);
; 1219 :             _Destroy(_Newlast, _Mylast);
; 1220 :             _Mylast = _Newlast;
; 1221 :             return;

  00266	eb 2d		 jmp	 SHORT $LN345@UpdateArea
$LN224@UpdateArea:

; 1222 :         }
; 1223 : 
; 1224 :         if (_Newsize > _Oldsize) { // append

  00268	76 2e		 jbe	 SHORT $LN225@UpdateArea

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0026a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0026d	2b c2		 sub	 eax, edx
  0026f	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00272	3b d8		 cmp	 ebx, eax
  00274	76 0e		 jbe	 SHORT $LN226@UpdateArea

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00276	8d 45 0b	 lea	 eax, DWORD PTR $T6[ebp]
  00279	8b ce		 mov	 ecx, esi
  0027b	50		 push	 eax
  0027c	53		 push	 ebx
  0027d	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  00282	eb 14		 jmp	 SHORT $LN225@UpdateArea
$LN226@UpdateArea:

; 1229 :             }
; 1230 : 
; 1231 :             const pointer _Oldlast = _Mylast;
; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00284	8b c3		 mov	 eax, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00286	56		 push	 esi

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00287	2b c1		 sub	 eax, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00289	50		 push	 eax
  0028a	ff 76 04	 push	 DWORD PTR [esi+4]
  0028d	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@PAPAV1@IAAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CArea *> >
  00292	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN345@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4137 :             return _Copy_memmove(_First, _Last, _Dest);

  00295	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN225@UpdateArea:
  00298	ff 36		 push	 DWORD PTR [esi]
  0029a	8b 75 e0	 mov	 esi, DWORD PTR $T3[ebp+12]
  0029d	ff 75 e4	 push	 DWORD PTR $T3[ebp+16]
  002a0	56		 push	 esi
  002a1	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
  002a6	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 925  : 		for (DWORD dwIndex = 0; dwIndex < rPushAreaToDeleteVector.m_ReturnAreaVector.size(); ++dwIndex)

  002a9	85 db		 test	 ebx, ebx
  002ab	74 45		 je	 SHORT $LN8@UpdateArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  002ad	8b de		 mov	 ebx, esi
  002af	90		 npad	 1
$LL9@UpdateArea:

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002b0	8b b7 4c 09 00
	00		 mov	 esi, DWORD PTR [edi+2380]
  002b6	8b 87 50 09 00
	00		 mov	 eax, DWORD PTR [edi+2384]
  002bc	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 928  : 			while(aAreaPtrItertor != m_AreaVector.end())

  002be	74 29		 je	 SHORT $LN7@UpdateArea
$LL10@UpdateArea:

; 929  : 			{
; 930  : 				CArea * pArea = *aAreaPtrItertor;
; 931  : 				if (pArea == rPushAreaToDeleteVector.m_ReturnAreaVector[dwIndex])

  002c0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002c2	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  002c5	3b 0b		 cmp	 ecx, DWORD PTR [ebx]
  002c7	75 1a		 jne	 SHORT $LN21@UpdateArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  002c9	56		 push	 esi
  002ca	50		 push	 eax
  002cb	52		 push	 edx
  002cc	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
  002d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  002d4	83 87 50 09 00
	00 fc		 add	 DWORD PTR [edi+2384], -4 ; fffffffcH
  002db	8b 87 50 09 00
	00		 mov	 eax, DWORD PTR [edi+2384]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 932  : 					aAreaPtrItertor = m_AreaVector.erase(aAreaPtrItertor);

  002e1	eb 02		 jmp	 SHORT $LN22@UpdateArea
$LN21@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  002e3	8b f2		 mov	 esi, edx
$LN22@UpdateArea:

; 149  :         return _Ptr == _Right._Ptr;

  002e5	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 928  : 			while(aAreaPtrItertor != m_AreaVector.end())

  002e7	75 d7		 jne	 SHORT $LL10@UpdateArea
$LN7@UpdateArea:

; 925  : 		for (DWORD dwIndex = 0; dwIndex < rPushAreaToDeleteVector.m_ReturnAreaVector.size(); ++dwIndex)

  002e9	83 c3 04	 add	 ebx, 4
  002ec	83 6d 0c 01	 sub	 DWORD PTR $T8[ebp], 1
  002f0	75 be		 jne	 SHORT $LL9@UpdateArea
$LN8@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  002f2	8b 4d e0	 mov	 ecx, DWORD PTR $T3[ebp+12]
  002f5	85 c9		 test	 ecx, ecx
  002f7	74 12		 je	 SHORT $LN302@UpdateArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002f9	8b 45 f0	 mov	 eax, DWORD PTR $T5[ebp]
  002fc	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002fe	83 e0 fc	 and	 eax, -4			; fffffffcH
  00301	50		 push	 eax
  00302	51		 push	 ecx
  00303	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00308	83 c4 08	 add	 esp, 8
$LN302@UpdateArea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0030b	8b 4d c8	 mov	 ecx, DWORD PTR $T2[ebp+12]
  0030e	85 c9		 test	 ecx, ecx
  00310	74 12		 je	 SHORT $LN312@UpdateArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00312	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp]
  00315	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00317	83 e0 fc	 and	 eax, -4			; fffffffcH
  0031a	50		 push	 eax
  0031b	51		 push	 ecx
  0031c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00321	83 c4 08	 add	 esp, 8
$LN312@UpdateArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 938  : }

  00324	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00327	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0032e	59		 pop	 ecx
  0032f	5f		 pop	 edi
  00330	5e		 pop	 esi
  00331	5b		 pop	 ebx
  00332	8b e5		 mov	 esp, ebp
  00334	5d		 pop	 ebp
  00335	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$4:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$1:
  00008	8d 4d a4	 lea	 ecx, DWORD PTR _$S13$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$8:
  00010	8d 4d d4	 lea	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$3:
  00018	8d 4d 8c	 lea	 ecx, DWORD PTR _$S14$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z ENDP		; CMapOutdoor::UpdateAreaList
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__UpdateGarvage@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?__UpdateGarvage@CMapOutdoor@@MAEXXZ PROC		; CMapOutdoor::__UpdateGarvage, COMDAT
; _this$ = ecx

; 841  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__UpdateGarvage@CMapOutdoor@@MAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 842  : 	const DWORD dwTerrainEraseInterval = 1000 * 60;
; 843  : 	static DWORD dwEraseTime = ELTimer_GetMSec();

  00026	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  00032	8b 14 90	 mov	 edx, DWORD PTR [eax+edx*4]
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  0003a	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  00040	0f 8f c0 00 00
	00		 jg	 $LN50@UpdateGarv
$LN2@UpdateGarv:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00046	8b 87 24 09 00
	00		 mov	 eax, DWORD PTR [edi+2340]
  0004c	3b 87 28 09 00
	00		 cmp	 eax, DWORD PTR [edi+2344]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 845  : 	if (!m_TerrainDeleteVector.empty())

  00052	74 46		 je	 SHORT $LN3@UpdateGarv

; 846  : 	{
; 847  : 		if (ELTimer_GetMSec() - dwEraseTime <= dwTerrainEraseInterval)

  00054	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  00059	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA
  0005f	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  00064	0f 86 8b 00 00
	00		 jbe	 $LN5@UpdateGarv
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006a	8b b7 24 09 00
	00		 mov	 esi, DWORD PTR [edi+2340]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 851  : 		CTerrain::Delete(pTerrain);

  00070	ff 36		 push	 DWORD PTR [esi]
  00072	e8 00 00 00 00	 call	 ?Delete@CTerrain@@SAXPAV1@@Z ; CTerrain::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00077	56		 push	 esi
  00078	ff b7 28 09 00
	00		 push	 DWORD PTR [edi+2344]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1353 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  0007e	83 c6 04	 add	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00081	56		 push	 esi
  00082	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  00087	83 87 28 09 00
	00 fc		 add	 DWORD PTR [edi+2344], -4 ; fffffffcH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 854  : 		dwEraseTime = ELTimer_GetMSec();

  0008e	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 855  : 		Trace("Delete Terrain \n");

  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@

; 856  : 		return;

  00098	eb 4e		 jmp	 SHORT $LN48@UpdateGarv
$LN3@UpdateGarv:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  0009a	8b 87 58 09 00
	00		 mov	 eax, DWORD PTR [edi+2392]
  000a0	3b 87 5c 09 00
	00		 cmp	 eax, DWORD PTR [edi+2396]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 859  : 	if (!m_AreaDeleteVector.empty())

  000a6	74 4d		 je	 SHORT $LN5@UpdateGarv

; 860  : 	{
; 861  : 		if (ELTimer_GetMSec() - dwEraseTime <= dwTerrainEraseInterval)

  000a8	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  000ad	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA
  000b3	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  000b8	76 3b		 jbe	 SHORT $LN5@UpdateGarv
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ba	8b b7 58 09 00
	00		 mov	 esi, DWORD PTR [edi+2392]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 866  : 		CArea::Delete(pArea);

  000c0	ff 36		 push	 DWORD PTR [esi]
  000c2	e8 00 00 00 00	 call	 ?Delete@CArea@@SAXPAV1@@Z ; CArea::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  000c7	56		 push	 esi
  000c8	ff b7 5c 09 00
	00		 push	 DWORD PTR [edi+2396]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1353 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  000ce	83 c6 04	 add	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  000d1	56		 push	 esi
  000d2	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  000d7	83 87 5c 09 00
	00 fc		 add	 DWORD PTR [edi+2396], -4 ; fffffffcH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 869  : 		dwEraseTime = ELTimer_GetMSec();

  000de	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 870  : 		Trace("Delete Area \n");

  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MNAKBLAF@Delete?5Area?5?6@
$LN48@UpdateGarv:

; 871  : 		return;
; 872  : 	}
; 873  : }

  000e8	a3 00 00 00 00	 mov	 DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA, eax
  000ed	e8 00 00 00 00	 call	 ?Trace@@YAXPBD@Z	; Trace
  000f2	83 c4 14	 add	 esp, 20			; 00000014H
$LN5@UpdateGarv:
  000f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ff	59		 pop	 ecx
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN50@UpdateGarv:

; 842  : 	const DWORD dwTerrainEraseInterval = 1000 * 60;
; 843  : 	static DWORD dwEraseTime = ELTimer_GetMSec();

  00106	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  0010b	e8 00 00 00 00	 call	 __Init_thread_header
  00110	83 c4 04	 add	 esp, 4
  00113	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA, -1
  0011a	0f 85 26 ff ff
	ff		 jne	 $LN2@UpdateGarv
  00120	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00127	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  0012c	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  00131	a3 00 00 00 00	 mov	 DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA, eax
  00136	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0013d	e8 00 00 00 00	 call	 __Init_thread_footer
  00142	83 c4 04	 add	 esp, 4
  00145	e9 fc fe ff ff	 jmp	 $LN2@UpdateGarv
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__UpdateGarvage@CMapOutdoor@@MAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?__UpdateGarvage@CMapOutdoor@@MAEXXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__UpdateGarvage@CMapOutdoor@@MAEXXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__UpdateGarvage@CMapOutdoor@@MAEXXZ ENDP		; CMapOutdoor::__UpdateGarvage
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__ClearGarvage@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?__ClearGarvage@CMapOutdoor@@MAEXXZ PROC		; CMapOutdoor::__ClearGarvage, COMDAT
; _this$ = ecx

; 832  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00005	8b 9f 28 09 00
	00		 mov	 ebx, DWORD PTR [edi+2344]
  0000b	8b b7 24 09 00
	00		 mov	 esi, DWORD PTR [edi+2340]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 17		 je	 SHORT $LN17@ClearGarva
$LL18@ClearGarva:

; 236  :         _Func(*_UFirst);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ?Delete@CTerrain@@SAXPAV1@@Z ; CTerrain::Delete
  0001c	83 c6 04	 add	 esi, 4
  0001f	83 c4 04	 add	 esp, 4
  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL18@ClearGarva
  00026	8b b7 24 09 00
	00		 mov	 esi, DWORD PTR [edi+2340]
$LN17@ClearGarva:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 834  : 	m_TerrainDeleteVector.clear();

  0002c	89 b7 28 09 00
	00		 mov	 DWORD PTR [edi+2344], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00032	8b 9f 5c 09 00
	00		 mov	 ebx, DWORD PTR [edi+2396]
  00038	8b b7 58 09 00
	00		 mov	 esi, DWORD PTR [edi+2392]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	3b f3		 cmp	 esi, ebx
  00040	74 21		 je	 SHORT $LN45@ClearGarva
$LL35@ClearGarva:

; 236  :         _Func(*_UFirst);

  00042	ff 36		 push	 DWORD PTR [esi]
  00044	e8 00 00 00 00	 call	 ?Delete@CArea@@SAXPAV1@@Z ; CArea::Delete
  00049	83 c6 04	 add	 esi, 4
  0004c	83 c4 04	 add	 esp, 4
  0004f	3b f3		 cmp	 esi, ebx
  00051	75 ef		 jne	 SHORT $LL35@ClearGarva
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 837  : 	m_AreaDeleteVector.clear();

  00053	8b 87 58 09 00
	00		 mov	 eax, DWORD PTR [edi+2392]
  00059	89 87 5c 09 00
	00		 mov	 DWORD PTR [edi+2396], eax
  0005f	5f		 pop	 edi

; 838  : }

  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	c3		 ret	 0
$LN45@ClearGarva:

; 837  : 	m_AreaDeleteVector.clear();

  00063	89 b7 5c 09 00
	00		 mov	 DWORD PTR [edi+2396], esi
  00069	5f		 pop	 edi

; 838  : }

  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	c3		 ret	 0
?__ClearGarvage@CMapOutdoor@@MAEXXZ ENDP		; CMapOutdoor::__ClearGarvage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateSky@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?UpdateSky@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::UpdateSky, COMDAT
; _this$ = ecx

; 160  : 	m_SkyBox.Update();

  00000	8b 81 38 03 00
	00		 mov	 eax, DWORD PTR [ecx+824]
  00006	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0000c	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?UpdateSky@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::UpdateSky
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_fZ$ = 16						; size = 4
?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z PROC	; CMapOutdoor::UpdateAroundAmbience, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 203  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00008	33 f6		 xor	 esi, esi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@UpdateArou:

; 204  : 	{
; 205  : 		CArea * pArea;
; 206  : 		if (GetAreaPointer(i, &pArea))

  00010	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0001c	85 c0		 test	 eax, eax
  0001e	74 2b		 je	 SHORT $LN2@UpdateArou

; 207  : 			pArea->UpdateAroundAmbience(fX, fY, fZ);

  00020	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fZ$[ebp]
  00025	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  0002b	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00031	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00036	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0003c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00041	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?UpdateAroundAmbience@CArea@@QAEXMMM@Z ; CArea::UpdateAroundAmbience
$LN2@UpdateArou:

; 203  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0004b	46		 inc	 esi
  0004c	83 fe 09	 cmp	 esi, 9
  0004f	7c bf		 jl	 SHORT $LL4@UpdateArou

; 208  : 	}
; 209  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 0c 00	 ret	 12			; 0000000cH
?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z ENDP	; CMapOutdoor::UpdateAroundAmbience
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?Update@CMapOutdoor@@UAE_NMMM@Z
_TEXT	SEGMENT
_v3Player$ = -40					; size = 12
_t1$1$ = -28						; size = 4
tv723 = -24						; size = 4
tv714 = -24						; size = 4
tv712 = -24						; size = 4
$T1 = -20						; size = 4
tv731 = -20						; size = 4
_wCellCoordX$1$ = -16					; size = 4
tv733 = -16						; size = 4
_sCoordY$1$ = -12					; size = 4
tv726 = -12						; size = 4
_iy$1$ = -8						; size = 4
tv716 = -8						; size = 4
_this$1$ = -4						; size = 4
_usY$1$ = 8						; size = 4
_sCoordX$1$ = 8						; size = 4
_fX$ = 8						; size = 4
_fY$1$ = 12						; size = 4
_fY$ = 12						; size = 4
_wCellCoordY$1$ = 16					; size = 4
_ix$1$ = 16						; size = 4
_fZ$ = 16						; size = 4
?Update@CMapOutdoor@@UAE_NMMM@Z PROC			; CMapOutdoor::Update, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00006	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$[ebp]
  0000b	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _fX$[ebp]

; 182  :     z = fz;

  00010	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fZ$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 46   : {

  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00019	f3 0f 11 55 d8	 movss	 DWORD PTR _v3Player$[ebp], xmm2

; 181  :     y = fy;

  0001e	f3 0f 11 4d dc	 movss	 DWORD PTR _v3Player$[ebp+4], xmm1

; 182  :     z = fz;

  00023	f3 0f 11 45 e0	 movss	 DWORD PTR _v3Player$[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 46   : {

  00028	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi

; 49   : 	m_v3Player=v3Player;

  0002b	f3 0f 11 97 a8
	0e 00 00	 movss	 DWORD PTR [edi+3752], xmm2
  00033	f3 0f 11 8f ac
	0e 00 00	 movss	 DWORD PTR [edi+3756], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0003b	f3 0f 11 4d 0c	 movss	 DWORD PTR _fY$1$[ebp], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp

; 49   : 	m_v3Player=v3Player;

  00040	f3 0f 11 87 b0
	0e 00 00	 movss	 DWORD PTR [edi+3760], xmm0

; 50   : 
; 51   : 
; 52   : 	DWORD t1=ELTimer_GetMSec();

  00048	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 53   : 
; 54   : 	int ix, iy;
; 55   : 	PR_FLOAT_TO_INT(fX, ix);

  0004d	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _v3Player$[ebp]
  00052	89 45 e4	 mov	 DWORD PTR _t1$1$[ebp], eax
  00055	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  0005d	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00063	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0006f	89 4d 10	 mov	 DWORD PTR _ix$1$[ebp], ecx
  00072	66 0f 6e c1	 movd	 xmm0, ecx
  00076	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00079	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00080	76 04		 jbe	 SHORT $LN14@Update
  00082	49		 dec	 ecx
  00083	89 4d 10	 mov	 DWORD PTR _ix$1$[ebp], ecx
$LN14@Update:

; 56   : 	if ( fY < 0 )

  00086	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$1$[ebp]
  0008b	0f 57 c0	 xorps	 xmm0, xmm0
  0008e	0f 2f c1	 comiss	 xmm0, xmm1
  00091	76 0c		 jbe	 SHORT $LN8@Update

; 57   : 		fY = -fY;

  00093	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  0009a	f3 0f 11 4d 0c	 movss	 DWORD PTR _fY$1$[ebp], xmm1
$LN8@Update:

; 58   : 	PR_FLOAT_TO_INT(fY, iy);

  0009f	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm1
  000a7	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  000ad	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  000b3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000b9	89 75 f8	 mov	 DWORD PTR _iy$1$[ebp], esi
  000bc	66 0f 6e c6	 movd	 xmm0, esi
  000c0	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  000ca	76 04		 jbe	 SHORT $LN16@Update
  000cc	4e		 dec	 esi
  000cd	89 75 f8	 mov	 DWORD PTR _iy$1$[ebp], esi
$LN16@Update:

; 59   : 
; 60   : 	short sCoordX = MINMAX(0, ix / CTerrainImpl::TERRAIN_XSIZE, m_sTerrainCountX - 1);

  000d0	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000d5	f7 e9		 imul	 ecx
  000d7	0f bf 47 70	 movsx	 eax, WORD PTR [edi+112]
  000db	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  000de	48		 dec	 eax
  000df	8b ca		 mov	 ecx, edx
  000e1	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000e4	03 ca		 add	 ecx, edx
  000e6	50		 push	 eax
  000e7	51		 push	 ecx
  000e8	6a 00		 push	 0
  000ea	89 4d f0	 mov	 DWORD PTR tv733[ebp], ecx
  000ed	e8 00 00 00 00	 call	 ?MINMAX@@YAHHHH@Z	; MINMAX
  000f2	0f b7 c0	 movzx	 eax, ax
  000f5	89 45 08	 mov	 DWORD PTR _sCoordX$1$[ebp], eax
  000f8	0f b7 c0	 movzx	 eax, ax
  000fb	89 45 e8	 mov	 DWORD PTR tv712[ebp], eax

; 61   : 	short sCoordY = MINMAX(0, iy / CTerrainImpl::TERRAIN_YSIZE, m_sTerrainCountY - 1);

  000fe	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00103	f7 ee		 imul	 esi
  00105	0f bf 47 72	 movsx	 eax, WORD PTR [edi+114]
  00109	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  0010c	48		 dec	 eax
  0010d	8b ca		 mov	 ecx, edx
  0010f	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00112	03 ca		 add	 ecx, edx
  00114	50		 push	 eax
  00115	51		 push	 ecx
  00116	6a 00		 push	 0
  00118	89 4d ec	 mov	 DWORD PTR tv731[ebp], ecx
  0011b	e8 00 00 00 00	 call	 ?MINMAX@@YAHHHH@Z	; MINMAX
  00120	83 c4 18	 add	 esp, 24			; 00000018H
  00123	0f b7 d0	 movzx	 edx, ax

; 62   : #ifdef __PERFORMANCE_CHECKER__
; 63   : 	DWORD t2=ELTimer_GetMSec();
; 64   : #endif
; 65   : 
; 66   : 	bool bNeedInit = (m_PrevCoordinate.m_sTerrainCoordX == -1 || m_PrevCoordinate.m_sTerrainCoordY == -1);

  00126	66 83 bf 80 00
	00 00 ff	 cmp	 WORD PTR [edi+128], -1
  0012e	89 55 f4	 mov	 DWORD PTR _sCoordY$1$[ebp], edx
  00131	74 21		 je	 SHORT $LN18@Update
  00133	66 83 bf 82 00
	00 00 ff	 cmp	 WORD PTR [edi+130], -1
  0013b	74 17		 je	 SHORT $LN18@Update

; 67   : 
; 68   : 	if ( bNeedInit ||
; 69   : 		(m_CurCoordinate.m_sTerrainCoordX/LOAD_SIZE_WIDTH) != (sCoordX/LOAD_SIZE_WIDTH) ||

  0013d	8b 45 08	 mov	 eax, DWORD PTR _sCoordX$1$[ebp]
  00140	32 c9		 xor	 cl, cl
  00142	66 39 47 74	 cmp	 WORD PTR [edi+116], ax
  00146	75 11		 jne	 SHORT $LN10@Update
  00148	66 39 57 76	 cmp	 WORD PTR [edi+118], dx
  0014c	0f 84 9a 01 00
	00		 je	 $LN9@Update
  00152	eb 05		 jmp	 SHORT $LN10@Update
$LN18@Update:
  00154	8b 45 08	 mov	 eax, DWORD PTR _sCoordX$1$[ebp]

; 62   : #ifdef __PERFORMANCE_CHECKER__
; 63   : 	DWORD t2=ELTimer_GetMSec();
; 64   : #endif
; 65   : 
; 66   : 	bool bNeedInit = (m_PrevCoordinate.m_sTerrainCoordX == -1 || m_PrevCoordinate.m_sTerrainCoordY == -1);

  00157	b1 01		 mov	 cl, 1
$LN10@Update:

; 70   : 		(m_CurCoordinate.m_sTerrainCoordY/LOAD_SIZE_WIDTH) != (sCoordY/LOAD_SIZE_WIDTH) )
; 71   : 	{
; 72   : 		if (bNeedInit)

  00159	84 c9		 test	 cl, cl
  0015b	74 08		 je	 SHORT $LN11@Update

; 73   : 		{
; 74   : 			m_PrevCoordinate.m_sTerrainCoordX = sCoordX;
; 75   : 			m_PrevCoordinate.m_sTerrainCoordY = sCoordY;

  0015d	0f b7 ca	 movzx	 ecx, dx
  00160	0f b7 f0	 movzx	 esi, ax

; 76   : 		}

  00163	eb 08		 jmp	 SHORT $LN12@Update
$LN11@Update:

; 77   : 		else
; 78   : 		{
; 79   : 			m_PrevCoordinate.m_sTerrainCoordX = m_CurCoordinate.m_sTerrainCoordX;
; 80   : 			m_PrevCoordinate.m_sTerrainCoordY = m_CurCoordinate.m_sTerrainCoordY;

  00165	0f b7 4f 76	 movzx	 ecx, WORD PTR [edi+118]
  00169	0f b7 77 74	 movzx	 esi, WORD PTR [edi+116]
$LN12@Update:

; 81   : 		}
; 82   : 
; 83   : 		m_CurCoordinate.m_sTerrainCoordX = sCoordX;

  0016d	66 89 b7 80 00
	00 00		 mov	 WORD PTR [edi+128], si

; 84   : 		m_CurCoordinate.m_sTerrainCoordY = sCoordY;
; 85   : 		m_lCurCoordStartX = sCoordX * CTerrainImpl::TERRAIN_XSIZE;

  00174	0f bf f0	 movsx	 esi, ax
  00177	66 89 8f 82 00
	00 00		 mov	 WORD PTR [edi+130], cx
  0017e	66 89 47 74	 mov	 WORD PTR [edi+116], ax

; 86   : 		m_lCurCoordStartY = sCoordY * CTerrainImpl::TERRAIN_YSIZE;
; 87   : 
; 88   : 		WORD wCellCoordX = (ix % CTerrainImpl::TERRAIN_XSIZE) / CTerrainImpl::CELLSCALE;

  00182	8b 4d 10	 mov	 ecx, DWORD PTR _ix$1$[ebp]
  00185	69 c6 00 64 00
	00		 imul	 eax, esi, 25600
  0018b	66 89 57 76	 mov	 WORD PTR [edi+118], dx
  0018f	89 47 78	 mov	 DWORD PTR [edi+120], eax
  00192	0f bf c2	 movsx	 eax, dx
  00195	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0019b	89 47 7c	 mov	 DWORD PTR [edi+124], eax
  0019e	69 45 f0 00 64
	00 00		 imul	 eax, DWORD PTR tv733[ebp], 25600
  001a5	2b c8		 sub	 ecx, eax
  001a7	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  001ac	f7 e9		 imul	 ecx
  001ae	c1 fa 06	 sar	 edx, 6
  001b1	8b ca		 mov	 ecx, edx
  001b3	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  001b6	03 ca		 add	 ecx, edx

; 89   : 		WORD wCellCoordY = (iy % CTerrainImpl::TERRAIN_YSIZE) / CTerrainImpl::CELLSCALE;

  001b8	8b 55 f8	 mov	 edx, DWORD PTR _iy$1$[ebp]
  001bb	0f b7 c1	 movzx	 eax, cx
  001be	69 4d ec 00 64
	00 00		 imul	 ecx, DWORD PTR tv731[ebp], 25600
  001c5	89 45 f0	 mov	 DWORD PTR _wCellCoordX$1$[ebp], eax
  001c8	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  001cd	2b d1		 sub	 edx, ecx

; 90   : 
; 91   : 		short sReferenceCoordMinX, sReferenceCoordMaxX, sReferenceCoordMinY, sReferenceCoordMaxY;
; 92   : 		sReferenceCoordMinX = max(m_CurCoordinate.m_sTerrainCoordX - LOAD_SIZE_WIDTH, 0);
; 93   : 		sReferenceCoordMaxX = min(m_CurCoordinate.m_sTerrainCoordX + LOAD_SIZE_WIDTH, m_sTerrainCountX - 1);

  001cf	33 c9		 xor	 ecx, ecx
  001d1	f7 ea		 imul	 edx
  001d3	c1 fa 06	 sar	 edx, 6
  001d6	8b c2		 mov	 eax, edx
  001d8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001db	03 c2		 add	 eax, edx
  001dd	0f b7 c0	 movzx	 eax, ax
  001e0	89 45 10	 mov	 DWORD PTR _wCellCoordY$1$[ebp], eax
  001e3	8b 45 e8	 mov	 eax, DWORD PTR tv712[ebp]
  001e6	48		 dec	 eax
  001e7	83 fe 01	 cmp	 esi, 1
  001ea	0f b7 c0	 movzx	 eax, ax
  001ed	0f 4e c1	 cmovle	 eax, ecx
  001f0	0f b7 4f 70	 movzx	 ecx, WORD PTR [edi+112]
  001f4	0f b7 c0	 movzx	 eax, ax
  001f7	46		 inc	 esi
  001f8	89 45 f8	 mov	 DWORD PTR tv716[ebp], eax

; 94   : 		sReferenceCoordMinY = max(m_CurCoordinate.m_sTerrainCoordY - LOAD_SIZE_WIDTH, 0);

  001fb	8b 45 08	 mov	 eax, DWORD PTR _sCoordX$1$[ebp]
  001fe	40		 inc	 eax
  001ff	0f bf f9	 movsx	 edi, cx
  00202	0f b7 d0	 movzx	 edx, ax
  00205	4f		 dec	 edi
  00206	49		 dec	 ecx
  00207	3b f7		 cmp	 esi, edi
  00209	0f b7 c1	 movzx	 eax, cx
  0020c	0f 4d d0	 cmovge	 edx, eax

; 95   : 		sReferenceCoordMaxY = min(m_CurCoordinate.m_sTerrainCoordY + LOAD_SIZE_WIDTH, m_sTerrainCountY - 1);

  0020f	33 ff		 xor	 edi, edi
  00211	0f b7 c2	 movzx	 eax, dx
  00214	8b 55 f4	 mov	 edx, DWORD PTR _sCoordY$1$[ebp]
  00217	89 45 e8	 mov	 DWORD PTR tv714[ebp], eax
  0021a	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  0021d	0f bf f2	 movsx	 esi, dx
  00220	83 fe 01	 cmp	 esi, 1
  00223	0f b7 48 72	 movzx	 ecx, WORD PTR [eax+114]
  00227	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  0022a	0f b7 c0	 movzx	 eax, ax
  0022d	0f 4e c7	 cmovle	 eax, edi
  00230	0f bf f9	 movsx	 edi, cx

; 96   : 
; 97   : 		for (WORD usY = sReferenceCoordMinY; usY <=sReferenceCoordMaxY; ++usY)

  00233	0f b7 d0	 movzx	 edx, ax
  00236	49		 dec	 ecx
  00237	8b 45 f4	 mov	 eax, DWORD PTR _sCoordY$1$[ebp]
  0023a	4f		 dec	 edi
  0023b	40		 inc	 eax
  0023c	89 55 08	 mov	 DWORD PTR _usY$1$[ebp], edx
  0023f	46		 inc	 esi
  00240	0f b7 d0	 movzx	 edx, ax
  00243	0f b7 c1	 movzx	 eax, cx
  00246	3b f7		 cmp	 esi, edi
  00248	8b 4d 08	 mov	 ecx, DWORD PTR _usY$1$[ebp]
  0024b	0f 4d d0	 cmovge	 edx, eax
  0024e	0f b7 c1	 movzx	 eax, cx
  00251	0f bf d2	 movsx	 edx, dx
  00254	89 55 ec	 mov	 DWORD PTR $T1[ebp], edx
  00257	3b c2		 cmp	 eax, edx
  00259	7f 67		 jg	 SHORT $LN3@Update
  0025b	8b 45 e8	 mov	 eax, DWORD PTR tv714[ebp]
  0025e	8b 55 f8	 mov	 edx, DWORD PTR tv716[ebp]
  00261	98		 cwde
  00262	0f b7 fa	 movzx	 edi, dx
  00265	89 45 f4	 mov	 DWORD PTR tv726[ebp], eax
  00268	89 7d e8	 mov	 DWORD PTR tv723[ebp], edi
  0026b	0f 1f 44 00 00	 npad	 5
$LL4@Update:

; 98   : 		{
; 99   : 			for (WORD usX = sReferenceCoordMinX; usX <= sReferenceCoordMaxX; ++usX)

  00270	0f b7 f2	 movzx	 esi, dx
  00273	3b f8		 cmp	 edi, eax
  00275	7f 3c		 jg	 SHORT $LN2@Update
  00277	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  0027a	66 0f 1f 44 00
	00		 npad	 6
$LL7@Update:

; 100  : 			{
; 101  : 				LoadTerrain(usX, usY, wCellCoordX, wCellCoordY);

  00280	ff 75 10	 push	 DWORD PTR _wCellCoordY$1$[ebp]
  00283	8b 07		 mov	 eax, DWORD PTR [edi]
  00285	ff 75 f0	 push	 DWORD PTR _wCellCoordX$1$[ebp]
  00288	51		 push	 ecx
  00289	56		 push	 esi
  0028a	8b cf		 mov	 ecx, edi
  0028c	ff 50 44	 call	 DWORD PTR [eax+68]

; 102  :   				LoadArea(usX, usY, wCellCoordX, wCellCoordY);

  0028f	ff 75 10	 push	 DWORD PTR _wCellCoordY$1$[ebp]
  00292	8b 55 08	 mov	 edx, DWORD PTR _usY$1$[ebp]
  00295	8b cf		 mov	 ecx, edi
  00297	ff 75 f0	 push	 DWORD PTR _wCellCoordX$1$[ebp]
  0029a	8b 07		 mov	 eax, DWORD PTR [edi]
  0029c	52		 push	 edx
  0029d	56		 push	 esi
  0029e	ff 50 48	 call	 DWORD PTR [eax+72]
  002a1	8b 4d 08	 mov	 ecx, DWORD PTR _usY$1$[ebp]
  002a4	46		 inc	 esi
  002a5	0f b7 c6	 movzx	 eax, si
  002a8	3b 45 f4	 cmp	 eax, DWORD PTR tv726[ebp]
  002ab	7e d3		 jle	 SHORT $LL7@Update
  002ad	8b 55 f8	 mov	 edx, DWORD PTR tv716[ebp]
  002b0	8b 7d e8	 mov	 edi, DWORD PTR tv723[ebp]
$LN2@Update:

; 96   : 
; 97   : 		for (WORD usY = sReferenceCoordMinY; usY <=sReferenceCoordMaxY; ++usY)

  002b3	41		 inc	 ecx
  002b4	0f b7 c1	 movzx	 eax, cx
  002b7	3b 45 ec	 cmp	 eax, DWORD PTR $T1[ebp]
  002ba	8b 45 f4	 mov	 eax, DWORD PTR tv726[ebp]
  002bd	89 4d 08	 mov	 DWORD PTR _usY$1$[ebp], ecx
  002c0	7e ae		 jle	 SHORT $LL4@Update
$LN3@Update:

; 103  : 			}
; 104  : 		}
; 105  : 
; 106  : 		AssignTerrainPtr();

  002c2	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  002c5	8b cf		 mov	 ecx, edi
  002c7	e8 00 00 00 00	 call	 ?AssignTerrainPtr@CMapOutdoor@@IAEXXZ ; CMapOutdoor::AssignTerrainPtr

; 107  : 		m_lOldReadX = -1;

  002cc	c7 87 0c 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [edi+268], -1

; 108  : 
; 109  : 		Tracenf("Update::Load spent %d ms\n", ELTimer_GetMSec() - t1);

  002d6	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  002db	2b 45 e4	 sub	 eax, DWORD PTR _t1$1$[ebp]
  002de	50		 push	 eax
  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@
  002e4	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  002e9	83 c4 08	 add	 esp, 8
$LN9@Update:

; 110  : 	}
; 111  : #ifdef __PERFORMANCE_CHECKER__
; 112  : 	DWORD t3=ELTimer_GetMSec();
; 113  : #endif
; 114  : 	CSpeedTreeForestDirectX8::Instance().UpdateSystem(CTimer::Instance().GetCurrentSecond());

  002ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  002f2	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  002f7	51		 push	 ecx
  002f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  002fe	d9 1c 24	 fstp	 DWORD PTR [esp]
  00301	e8 00 00 00 00	 call	 ?UpdateSystem@CSpeedTreeForest@@QAEXM@Z ; CSpeedTreeForest::UpdateSystem

; 115  : #ifdef __PERFORMANCE_CHECKER__
; 116  : 	DWORD t4=ELTimer_GetMSec();
; 117  : #endif
; 118  : 	__UpdateGarvage();

  00306	8b 07		 mov	 eax, DWORD PTR [edi]
  00308	8b cf		 mov	 ecx, edi
  0030a	ff 50 40	 call	 DWORD PTR [eax+64]

; 119  : #ifdef __PERFORMANCE_CHECKER__
; 120  : 	DWORD t5=ELTimer_GetMSec();
; 121  : #endif
; 122  : 	UpdateTerrain(fX, fY);

  0030d	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$1$[ebp]
  00312	83 ec 08	 sub	 esp, 8
  00315	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _v3Player$[ebp]
  0031a	8b cf		 mov	 ecx, edi
  0031c	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00322	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00327	e8 00 00 00 00	 call	 ?UpdateTerrain@CMapOutdoor@@IAEXMM@Z ; CMapOutdoor::UpdateTerrain

; 123  : #ifdef __PERFORMANCE_CHECKER__
; 124  : 	DWORD t6=ELTimer_GetMSec();
; 125  : #endif
; 126  : 	__UpdateArea(v3Player);

  0032c	8d 45 d8	 lea	 eax, DWORD PTR _v3Player$[ebp]
  0032f	8b cf		 mov	 ecx, edi
  00331	50		 push	 eax
  00332	e8 00 00 00 00	 call	 ?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__UpdateArea

; 127  : #ifdef __PERFORMANCE_CHECKER__
; 128  : 	DWORD t7=ELTimer_GetMSec();
; 129  : #endif
; 130  : 	UpdateSky();

  00337	8b cf		 mov	 ecx, edi
  00339	e8 00 00 00 00	 call	 ?UpdateSky@CMapOutdoor@@QAEXXZ ; CMapOutdoor::UpdateSky

; 131  : #ifdef __PERFORMANCE_CHECKER__
; 132  : 	DWORD t8=ELTimer_GetMSec();
; 133  : #endif
; 134  : 	__HeightCache_Update();

  0033e	8b cf		 mov	 ecx, edi
  00340	e8 00 00 00 00	 call	 ?__HeightCache_Update@CMapOutdoor@@AAEXXZ ; CMapOutdoor::__HeightCache_Update

; 135  : 
; 136  : #ifdef __PERFORMANCE_CHECKER__
; 137  : 	{
; 138  : 		static FILE* fp=fopen("perf_outdoor_update.txt", "w");
; 139  : 
; 140  : 		if (t8-t1>5)
; 141  : 		{
; 142  : 			fprintf(fp, "OD.Total %d (Time %f)\n", t3-t1, ELTimer_GetMSec()/1000.0f);
; 143  : 			fprintf(fp, "OD.INIT %d\n", t2-t1);
; 144  : 			fprintf(fp, "OD.LOAD %d\n", t3-t2);
; 145  : 			fprintf(fp, "OD.TREE %d\n", t4-t3);
; 146  : 			fprintf(fp, "OD.GVG %d\n", t5-t4);
; 147  : 			fprintf(fp, "OD.TRN %d\n", t6-t5);
; 148  : 			fprintf(fp, "OD.AREA %d\n", t7-t6);
; 149  : 			fprintf(fp, "OD.SKY %d\n", t8-t7);
; 150  : 			fflush(fp);
; 151  : 		}
; 152  : 	}
; 153  : #endif
; 154  : 
; 155  : 	return true;

  00345	5f		 pop	 edi
  00346	b0 01		 mov	 al, 1
  00348	5e		 pop	 esi

; 156  : }

  00349	8b e5		 mov	 esp, ebp
  0034b	5d		 pop	 ebp
  0034c	c2 0c 00	 ret	 12			; 0000000cH
?Update@CMapOutdoor@@UAE_NMMM@Z ENDP			; CMapOutdoor::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back, COMDAT
; _this$ = ecx

; 716  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 704  :         if (_Mylast != _My_data._Myend) {

  00003	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00006	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00009	74 0f		 je	 SHORT $LN4@push_back

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 02		 mov	 DWORD PTR [edx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00012	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 717  :         emplace_back(_Val);
; 718  :     }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@push_back:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0001a	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>

; 717  :         emplace_back(_Val);
; 718  :     }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSpherePackCallback@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSpherePackCallback@@UAEPAXI@Z PROC			; SpherePackCallback::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSpherePackCallback@@UAEPAXI@Z ENDP			; SpherePackCallback::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_searchpos$ = 8						; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::PointTest2dCallback, COMDAT
; _this$ = ecx

; 79   : 	{};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_searchpos$ = 8						; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::RangeTestCallback, COMDAT
; _this$ = ecx

; 74   : 	{};

  00000	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; SpherePackCallback::RayTraceCallback, COMDAT
; _this$ = ecx

; 68   : 	{};

  00000	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; SpherePackCallback::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::VisibilityCallback, COMDAT
; _this$ = ecx

; 61   : 	{};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\spherepack.h
;	COMDAT ??1SpherePackCallback@@UAE@XZ
_TEXT	SEGMENT
??1SpherePackCallback@@UAE@XZ PROC			; SpherePackCallback::~SpherePackCallback, COMDAT
; _this$ = ecx

; 56   : 	virtual ~SpherePackCallback() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1SpherePackCallback@@UAE@XZ ENDP			; SpherePackCallback::~SpherePackCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CDynamicSphereInstance@@QAE@XZ
_TEXT	SEGMENT
??0CDynamicSphereInstance@@QAE@XZ PROC			; CDynamicSphereInstance::CDynamicSphereInstance, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CDynamicSphereInstance@@QAE@XZ ENDP			; CDynamicSphereInstance::CDynamicSphereInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
