; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0CSnowEnvironment@@QAE@XZ			; CSnowEnvironment::CSnowEnvironment
PUBLIC	??1CSnowEnvironment@@UAE@XZ			; CSnowEnvironment::~CSnowEnvironment
PUBLIC	?Create@CSnowEnvironment@@QAE_NXZ		; CSnowEnvironment::Create
PUBLIC	?Destroy@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Destroy
PUBLIC	?Enable@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Enable
PUBLIC	?Disable@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Disable
PUBLIC	?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z ; CSnowEnvironment::Update
PUBLIC	?Deform@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Deform
PUBLIC	?Render@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Render
PUBLIC	?__Initialize@CSnowEnvironment@@IAEXXZ		; CSnowEnvironment::__Initialize
PUBLIC	?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ	; CSnowEnvironment::__CreateBlurTexture
PUBLIC	?__CreateGeometry@CSnowEnvironment@@IAE_NXZ	; CSnowEnvironment::__CreateGeometry
PUBLIC	?__BeginBlur@CSnowEnvironment@@IAEXXZ		; CSnowEnvironment::__BeginBlur
PUBLIC	?__ApplyBlur@CSnowEnvironment@@IAEXXZ		; CSnowEnvironment::__ApplyBlur
PUBLIC	??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >
PUBLIC	?_Reallocate_exactly@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXI@Z ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
PUBLIC	??_GCSnowEnvironment@@UAEPAXI@Z			; CSnowEnvironment::`scalar deleting destructor'
PUBLIC	??1BlurVertex@@QAE@XZ				; BlurVertex::~BlurVertex
PUBLIC	??$_Emplace_reallocate@ABQAVCSnowParticle@@@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAEPAPAVCSnowParticle@@QAPAV2@ABQAV2@@Z ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Emplace_reallocate<CSnowParticle * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAXPAPAVCSnowParticle@@QAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ; std::_Destroy_range<std::allocator<CSnowParticle *> >
PUBLIC	??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ; std::_Uninitialized_move<CSnowParticle * *,std::allocator<CSnowParticle *> >
PUBLIC	??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CSnowEnvironment@@6B@			; CSnowEnvironment::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CSnowEnvironment@@6B@			; CSnowEnvironment::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSnowEnvironment@@@8			; CSnowEnvironment `RTTI Type Descriptor'
PUBLIC	??_R3CSnowEnvironment@@8			; CSnowEnvironment::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSnowEnvironment@@8			; CSnowEnvironment::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSnowEnvironment@@8		; CSnowEnvironment::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@447a0000
PUBLIC	__real@455ac000
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?GetCurrentMillisecond@CTimer@@QAEKXZ:PROC	; CTimer::GetCurrentMillisecond
EXTRN	??0CScreen@@QAE@XZ:PROC				; CScreen::CScreen
EXTRN	??1CScreen@@UAE@XZ:PROC				; CScreen::~CScreen
EXTRN	?SetTextureStage@CGraphicTexture@@QBEXH@Z:PROC	; CGraphicTexture::SetTextureStage
EXTRN	?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTextureReference
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ:PROC ; CGraphicImageInstance::GetGraphicImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??_ECSnowEnvironment@@UAEPAXI@Z:PROC		; CSnowEnvironment::`vector deleting destructor'
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z:PROC ; CStateManager::SetIndices
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	??1CSnowParticle@@QAE@XZ:PROC			; CSnowParticle::~CSnowParticle
EXTRN	?New@CSnowParticle@@SAPAV1@XZ:PROC		; CSnowParticle::New
EXTRN	?Delete@CSnowParticle@@SAXPAV1@@Z:PROC		; CSnowParticle::Delete
EXTRN	?DestroyPool@CSnowParticle@@SAXXZ:PROC		; CSnowParticle::DestroyPool
EXTRN	?Init@CSnowParticle@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CSnowParticle::Init
EXTRN	?SetCameraVertex@CSnowParticle@@QAEXABUD3DXVECTOR3@@0@Z:PROC ; CSnowParticle::SetCameraVertex
EXTRN	?IsActivate@CSnowParticle@@QAE_NXZ:PROC		; CSnowParticle::IsActivate
EXTRN	?Update@CSnowParticle@@QAEXMABUD3DXVECTOR3@@@Z:PROC ; CSnowParticle::Update
EXTRN	?GetVerticies@CSnowParticle@@QAEXAAUSParticleVertex@@000@Z:PROC ; CSnowParticle::GetVerticies
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA
_BSS	SEGMENT
?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA DD 01H DUP (?) ; `CSnowEnvironment::Deform'::`2'::s_lLastTime
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA DD 01H DUP (?) ; `CSnowEnvironment::Deform'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __real@455ac000
CONST	SEGMENT
__real@455ac000 DD 0455ac000r			; 3500
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CScreen@@8
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
data$r	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSnowEnvironment@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSnowEnvironment@@8 DD FLAT:??_R0?AVCSnowEnvironment@@@8 ; CSnowEnvironment::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSnowEnvironment@@8
rdata$r	ENDS
;	COMDAT ??_R2CSnowEnvironment@@8
rdata$r	SEGMENT
??_R2CSnowEnvironment@@8 DD FLAT:??_R1A@?0A@EA@CSnowEnvironment@@8 ; CSnowEnvironment::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSnowEnvironment@@8
rdata$r	SEGMENT
??_R3CSnowEnvironment@@8 DD 00H				; CSnowEnvironment::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CSnowEnvironment@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSnowEnvironment@@@8
data$r	SEGMENT
??_R0?AVCSnowEnvironment@@@8 DD FLAT:??_7type_info@@6B@	; CSnowEnvironment `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSnowEnvironment@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSnowEnvironment@@6B@
rdata$r	SEGMENT
??_R4CSnowEnvironment@@6B@ DD 00H			; CSnowEnvironment::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSnowEnvironment@@@8
	DD	FLAT:??_R3CSnowEnvironment@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@
CONST	SEGMENT
??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@ DB 'd:/ymir work/'
	DB	'special/snow.dds', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSnowEnvironment@@6B@
CONST	SEGMENT
??_7CSnowEnvironment@@6B@ DD FLAT:??_R4CSnowEnvironment@@6B@ ; CSnowEnvironment::`vftable'
	DD	FLAT:??_ECSnowEnvironment@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__ApplyBlur@CSnowEnvironment@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__ApplyBlur@CSnowEnvironment@@IAEXXZ$0
__ehfuncinfo$?__ApplyBlur@CSnowEnvironment@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__ApplyBlur@CSnowEnvironment@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Deform@CSnowEnvironment@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Deform@CSnowEnvironment@@QAEXXZ$0
__ehfuncinfo$?Deform@CSnowEnvironment@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Deform@CSnowEnvironment@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSnowEnvironment@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSnowEnvironment@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$1
__ehfuncinfo$??0CSnowEnvironment@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSnowEnvironment@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z PROC ; std::_Uninitialized_move<CSnowParticle * *,std::allocator<CSnowParticle *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ENDP ; std::_Uninitialized_move<CSnowParticle * *,std::allocator<CSnowParticle *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAXPAPAVCSnowParticle@@QAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAXPAPAVCSnowParticle@@QAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CSnowParticle *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAXPAPAVCSnowParticle@@QAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CSnowParticle *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCSnowParticle@@@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAEPAPAVCSnowParticle@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCSnowParticle@@@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAEPAPAVCSnowParticle@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Emplace_reallocate<CSnowParticle * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ; std::_Uninitialized_move<CSnowParticle * *,std::allocator<CSnowParticle *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ; std::_Uninitialized_move<CSnowParticle * *,std::allocator<CSnowParticle *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCSnowParticle@@@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAEPAPAVCSnowParticle@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Emplace_reallocate<CSnowParticle * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowParticle.h
;	COMDAT ??1BlurVertex@@QAE@XZ
_TEXT	SEGMENT
??1BlurVertex@@QAE@XZ PROC				; BlurVertex::~BlurVertex, COMDAT
; _this$ = ecx

; 19   : 	~BlurVertex(){};

  00000	c2 00 00	 ret	 0
??1BlurVertex@@QAE@XZ ENDP				; BlurVertex::~BlurVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSnowEnvironment@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSnowEnvironment@@UAEPAXI@Z PROC			; CSnowEnvironment::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSnowEnvironment@@UAE@XZ ; CSnowEnvironment::~CSnowEnvironment
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 58		 push	 88			; 00000058H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCSnowEnvironment@@UAEPAXI@Z ENDP			; CSnowEnvironment::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXI@Z PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@YAPAPAVCSnowParticle@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSnowParticle@@@0@@Z ; std::_Uninitialized_move<CSnowParticle * *,std::allocator<CSnowParticle *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowParticle.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__ApplyBlur@CSnowEnvironment@@IAEXXZ
_TEXT	SEGMENT
tv376 = -168						; size = 4
tv375 = -164						; size = 4
_desc$2 = -160						; size = 32
_V$3 = -128						; size = 112
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?__ApplyBlur@CSnowEnvironment@@IAEXXZ PROC		; CSnowEnvironment::__ApplyBlur, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__ApplyBlur@CSnowEnvironment@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	8b f1		 mov	 esi, ecx

; 105  : 	if (!m_bBlurEnable)

  0002e	83 7e 50 00	 cmp	 DWORD PTR [esi+80], 0
  00032	0f 84 b4 01 00
	00		 je	 $LN1@ApplyBlur

; 106  : 		return;
; 107  : 
; 108  : //			{
; 109  : //				STATEMANAGER.SetRenderState( D3DRS_ALPHABLENDENABLE,   TRUE );
; 110  : //				STATEMANAGER.SetRenderState( D3DRS_SRCBLEND,  D3DBLEND_SRCALPHA );
; 111  : //				STATEMANAGER.SetRenderState( D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA );
; 112  : //				STATEMANAGER.SetRenderState( D3DRS_COLORVERTEX ,TRUE);
; 113  : //				STATEMANAGER.SetRenderState( D3DRS_DIFFUSEMATERIALSOURCE , D3DMCS_COLOR1 );
; 114  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE);
; 115  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);
; 116  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);
; 117  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_MODULATE);
; 118  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);
; 119  : //				STATEMANAGER.SetTextureStageState(0,  D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);
; 120  : //				DWORD	alphaColor = 0xFFFFFF | ((DWORD)(0.6f*255.0f) << 24);
; 121  : //
; 122  : //				BlurVertex V[4] = { BlurVertex(D3DXVECTOR3(0.0f,0.0f,0.0f),1.0f,		alphaColor, 0,0) ,
; 123  : //									BlurVertex(D3DXVECTOR3(wTextureSize,0.0f,0.0f),1.0f,		alphaColor, 1,0) ,
; 124  : //									BlurVertex(D3DXVECTOR3(0.0f,wTextureSize,0.0f),1.0f,		alphaColor, 0,1) ,
; 125  : //									BlurVertex(D3DXVECTOR3(wTextureSize,wTextureSize,0.0f),1.0f,	alphaColor, 1,1) };
; 126  : //				STATEMANAGER.SetTexture(0,m_lpAccumTexture);
; 127  : //				STATEMANAGER.SetVertexShader( D3DFVF_XYZRHW | D3DFVF_DIFFUSE|D3DFVF_TEX1 );
; 128  : //				STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,2,V,sizeof(BlurVertex));
; 129  : //			}
; 130  : //
; 131  : //			{
; 132  : //				STATEMANAGER.SetRenderTarget(m_lpAccumRenderTargetSurface, m_lpAccumDepthSurface);
; 133  : //
; 134  : //				BlurVertex V[4] = { BlurVertex(D3DXVECTOR3(0.0f,0.0f,0.0f),1.0f,		0xFFFFFF, 0,0) ,
; 135  : //									BlurVertex(D3DXVECTOR3(wTextureSize,0.0f,0.0f),1.0f,		0xFFFFFF, 1,0) ,
; 136  : //									BlurVertex(D3DXVECTOR3(0.0f,wTextureSize,0.0f),1.0f,		0xFFFFFF, 0,1) ,
; 137  : //									BlurVertex(D3DXVECTOR3(wTextureSize,wTextureSize,0.0f),1.0f,	0xFFFFFF, 1,1) };
; 138  : //
; 139  : //				STATEMANAGER.SetTexture(0,m_lpSnowTexture);
; 140  : //				STATEMANAGER.SetRenderState( D3DRS_ALPHABLENDENABLE,   FALSE);
; 141  : //				STATEMANAGER.SetVertexShader( D3DFVF_XYZRHW | D3DFVF_DIFFUSE|D3DFVF_TEX1 );
; 142  : //				STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,2,V,sizeof(BlurVertex));
; 143  : //			}
; 144  : 
; 145  : 	///////////////
; 146  : 	{
; 147  : 		ms_lpd3dDevice->SetRenderTarget(m_lpOldSurface, m_lpOldDepthStencilSurface);

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0003d	ff 76 08	 push	 DWORD PTR [esi+8]
  00040	ff 76 04	 push	 DWORD PTR [esi+4]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	50		 push	 eax
  00046	ff 51 7c	 call	 DWORD PTR [ecx+124]

; 148  : 
; 149  : 		STATEMANAGER.SetTexture(0,m_lpSnowTexture);

  00049	ff 76 0c	 push	 DWORD PTR [esi+12]
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00052	6a 00		 push	 0
  00054	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 150  : 		STATEMANAGER.SetRenderState( D3DRS_ALPHABLENDENABLE,   TRUE);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	6a 01		 push	 1
  00061	6a 1b		 push	 27			; 0000001bH
  00063	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 151  : 
; 152  : 		D3DSURFACE_DESC	desc;
; 153  : 		m_lpOldSurface->GetDesc(&desc);

  00068	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006b	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _desc$2[ebp]
  00071	52		 push	 edx
  00072	50		 push	 eax
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	ff 51 20	 call	 DWORD PTR [ecx+32]

; 154  : 		float sx = (float)desc.Width ;

  00078	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _desc$2[ebp+24]

; 155  : 		float sy = (float)desc.Height;
; 156  : 		SAFE_RELEASE( m_lpOldSurface );

  0007e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00081	66 0f 6e c0	 movd	 xmm0, eax
  00085	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00089	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0008c	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00095	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _desc$2[ebp+28]
  0009b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0009f	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR tv375[ebp], xmm0
  000a7	66 0f 6e c0	 movd	 xmm0, eax
  000ab	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000af	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000b2	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000bb	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000bf	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR tv376[ebp], xmm0
  000c7	85 c9		 test	 ecx, ecx
  000c9	74 0d		 je	 SHORT $LN3@ApplyBlur
  000cb	8b 01		 mov	 eax, DWORD PTR [ecx]
  000cd	51		 push	 ecx
  000ce	ff 50 08	 call	 DWORD PTR [eax+8]
  000d1	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN3@ApplyBlur:

; 157  : 		SAFE_RELEASE( m_lpOldDepthStencilSurface );

  000d8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000db	85 c9		 test	 ecx, ecx
  000dd	74 0d		 je	 SHORT $LN4@ApplyBlur
  000df	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e1	51		 push	 ecx
  000e2	ff 50 08	 call	 DWORD PTR [eax+8]
  000e5	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@ApplyBlur:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowParticle.h

; 18   : 	BlurVertex(D3DXVECTOR3 p, float w,DWORD c,float u,float v):pos(p),rhw(w),color(c),tu(u),tv(v) {}

  000ec	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
  000f3	f3 0f 10 8d 5c
	ff ff ff	 movss	 xmm1, DWORD PTR tv375[ebp]
  000fb	0f 11 45 80	 movups	 XMMWORD PTR _V$3[ebp], xmm0
  000ff	c7 45 90 ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+16], 16777215 ; 00ffffffH
  00106	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR tv376[ebp]
  0010e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+20], 0
  00115	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+24], 0
  0011c	f3 0f 11 4d 9c	 movss	 DWORD PTR _V$3[ebp+28], xmm1
  00121	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+32], 0
  00128	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+36], 0
  0012f	c7 45 a8 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+40], 1065353216 ; 3f800000H
  00136	c7 45 ac ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+44], 16777215 ; 00ffffffH
  0013d	c7 45 b0 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+48], 1065353216 ; 3f800000H
  00144	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+52], 0
  0014b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+56], 0
  00152	f3 0f 11 45 bc	 movss	 DWORD PTR _V$3[ebp+60], xmm0
  00157	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+64], 0
  0015e	c7 45 c4 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+68], 1065353216 ; 3f800000H
  00165	c7 45 c8 ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+72], 16777215 ; 00ffffffH
  0016c	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+76], 0
  00173	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+80], 1065353216 ; 3f800000H
  0017a	f3 0f 11 4d d4	 movss	 DWORD PTR _V$3[ebp+84], xmm1
  0017f	f3 0f 11 45 d8	 movss	 DWORD PTR _V$3[ebp+88], xmm0
  00184	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+92], 0
  0018b	c7 45 e0 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+96], 1065353216 ; 3f800000H
  00192	c7 45 e4 ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+100], 16777215 ; 00ffffffH
  00199	c7 45 e8 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+104], 1065353216 ; 3f800000H
  001a0	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+108], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 164  : 		STATEMANAGER.SetVertexShader( D3DFVF_XYZRHW | D3DFVF_DIFFUSE|D3DFVF_TEX1 );

  001a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ad	68 44 01 00 00	 push	 324			; 00000144H
  001b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001b9	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 165  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,2,V,sizeof(BlurVertex));

  001be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c4	8d 45 80	 lea	 eax, DWORD PTR _V$3[ebp]
  001c7	6a 1c		 push	 28			; 0000001cH
  001c9	50		 push	 eax
  001ca	6a 02		 push	 2
  001cc	6a 05		 push	 5
  001ce	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP

; 166  : 	}

  001d3	68 00 00 00 00	 push	 OFFSET ??1BlurVertex@@QAE@XZ ; BlurVertex::~BlurVertex
  001d8	6a 04		 push	 4
  001da	6a 1c		 push	 28			; 0000001cH
  001dc	8d 45 80	 lea	 eax, DWORD PTR _V$3[ebp]
  001df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
$LN1@ApplyBlur:

; 167  : }

  001ec	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ef	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f6	59		 pop	 ecx
  001f7	5e		 pop	 esi
  001f8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fb	33 cd		 xor	 ecx, ebp
  001fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00202	8b e5		 mov	 esp, ebp
  00204	5d		 pop	 ebp
  00205	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__ApplyBlur@CSnowEnvironment@@IAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1BlurVertex@@QAE@XZ ; BlurVertex::~BlurVertex
  00005	6a 04		 push	 4
  00007	6a 1c		 push	 28			; 0000001cH
  00009	8d 45 80	 lea	 eax, DWORD PTR _V$3[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00012	c3		 ret	 0
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$?__ApplyBlur@CSnowEnvironment@@IAEXXZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 8a 5c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-164]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__ApplyBlur@CSnowEnvironment@@IAEXXZ
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__ApplyBlur@CSnowEnvironment@@IAEXXZ ENDP		; CSnowEnvironment::__ApplyBlur
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__BeginBlur@CSnowEnvironment@@IAEXXZ
_TEXT	SEGMENT
?__BeginBlur@CSnowEnvironment@@IAEXXZ PROC		; CSnowEnvironment::__BeginBlur, COMDAT
; _this$ = ecx

; 89   : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 90   : 	if (!m_bBlurEnable)

  00003	83 7f 50 00	 cmp	 DWORD PTR [edi+80], 0
  00007	0f 84 86 00 00
	00		 je	 $LN1@BeginBlur

; 91   : 		return;
; 92   : 
; 93   : 	ms_lpd3dDevice->GetRenderTarget(&m_lpOldSurface);

  0000d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00013	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00016	56		 push	 esi
  00017	50		 push	 eax
  00018	52		 push	 edx
  00019	8b 32		 mov	 esi, DWORD PTR [edx]
  0001b	ff 96 80 00 00
	00		 call	 DWORD PTR [esi+128]

; 94   : 	ms_lpd3dDevice->GetDepthStencilSurface(&m_lpOldDepthStencilSurface);

  00021	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00027	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  0002a	50		 push	 eax
  0002b	51		 push	 ecx
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	ff 92 84 00 00
	00		 call	 DWORD PTR [edx+132]

; 95   : 	ms_lpd3dDevice->SetRenderTarget(m_lpSnowRenderTargetSurface, m_lpSnowDepthSurface);

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00039	ff 77 14	 push	 DWORD PTR [edi+20]
  0003c	ff 77 10	 push	 DWORD PTR [edi+16]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	50		 push	 eax
  00042	ff 51 7c	 call	 DWORD PTR [ecx+124]

; 96   : 	ms_lpd3dDevice->Clear(0L, NULL, D3DCLEAR_TARGET|D3DCLEAR_ZBUFFER, 0x00000000, 1.0f, 0L);

  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0004a	6a 00		 push	 0
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	51		 push	 ecx
  0004f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00056	6a 00		 push	 0
  00058	6a 03		 push	 3
  0005a	6a 00		 push	 0
  0005c	6a 00		 push	 0
  0005e	50		 push	 eax
  0005f	ff 91 90 00 00
	00		 call	 DWORD PTR [ecx+144]

; 97   : 
; 98   : 	STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006b	6a 01		 push	 1
  0006d	6a 1b		 push	 27			; 0000001bH
  0006f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 99   : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007a	6a 05		 push	 5
  0007c	6a 13		 push	 19			; 00000013H
  0007e	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 100  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, D3DBLEND_DESTALPHA);

  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00089	6a 07		 push	 7
  0008b	6a 14		 push	 20			; 00000014H
  0008d	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
  00092	5e		 pop	 esi
$LN1@BeginBlur:

; 101  : }

  00093	5f		 pop	 edi
  00094	c3		 ret	 0
?__BeginBlur@CSnowEnvironment@@IAEXXZ ENDP		; CSnowEnvironment::__BeginBlur
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__CreateGeometry@CSnowEnvironment@@IAE_NXZ
_TEXT	SEGMENT
tv616 = -12						; size = 4
_i$1$ = -8						; size = 4
_dstIndices$ = -4					; size = 4
?__CreateGeometry@CSnowEnvironment@@IAE_NXZ PROC	; CSnowEnvironment::__CreateGeometry, COMDAT
; _this$ = ecx

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  : 	if (FAILED(ms_lpd3dDevice->CreateVertexBuffer(sizeof(SParticleVertex)*m_dwParticleMaxNum*4,

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00009	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	8b 32		 mov	 esi, DWORD PTR [edx]
  00010	8b d9		 mov	 ebx, ecx
  00012	8d 43 24	 lea	 eax, DWORD PTR [ebx+36]
  00015	50		 push	 eax
  00016	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  00019	6a 02		 push	 2
  0001b	68 02 01 00 00	 push	 258			; 00000102H
  00020	68 08 02 00 00	 push	 520			; 00000208H
  00025	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00028	c1 e0 04	 shl	 eax, 4
  0002b	50		 push	 eax
  0002c	52		 push	 edx
  0002d	ff 56 5c	 call	 DWORD PTR [esi+92]
  00030	85 c0		 test	 eax, eax
  00032	0f 88 bc 00 00
	00		 js	 $LN26@CreateGeom

; 255  : 											D3DUSAGE_DYNAMIC|D3DUSAGE_WRITEONLY,
; 256  : 											D3DFVF_XYZ | D3DFVF_TEX1,
; 257  : 											D3DPOOL_SYSTEMMEM,
; 258  : 											&m_pVB)))
; 259  : 		return false;
; 260  : 
; 261  : 	if (FAILED(ms_lpd3dDevice->CreateIndexBuffer(sizeof(WORD)*m_dwParticleMaxNum*6,

  00038	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0003b	8d 73 28	 lea	 esi, DWORD PTR [ebx+40]
  0003e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00044	56		 push	 esi
  00045	6a 01		 push	 1
  00047	6a 65		 push	 101			; 00000065H
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0004e	6a 08		 push	 8
  00050	c1 e0 02	 shl	 eax, 2
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	89 75 f4	 mov	 DWORD PTR tv616[ebp], esi
  00058	ff 52 60	 call	 DWORD PTR [edx+96]
  0005b	85 c0		 test	 eax, eax
  0005d	0f 88 91 00 00
	00		 js	 $LN26@CreateGeom

; 262  : 										   D3DUSAGE_WRITEONLY,
; 263  : 										   D3DFMT_INDEX16,
; 264  : 										   D3DPOOL_MANAGED,
; 265  : 										   &m_pIB)))
; 266  : 		return false;
; 267  : 
; 268  : 	WORD* dstIndices;
; 269  : 	if (FAILED(m_pIB->Lock(0, sizeof(WORD)*m_dwParticleMaxNum*6, (BYTE**)&dstIndices, 0)))

  00063	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00065	8d 45 fc	 lea	 eax, DWORD PTR _dstIndices$[ebp]
  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00073	c1 e0 02	 shl	 eax, 2
  00076	50		 push	 eax
  00077	6a 00		 push	 0
  00079	51		 push	 ecx
  0007a	ff 52 2c	 call	 DWORD PTR [edx+44]
  0007d	85 c0		 test	 eax, eax
  0007f	78 73		 js	 SHORT $LN26@CreateGeom

; 271  : 
; 272  : 	const WORD c_awFillRectIndices[6] = { 0, 2, 1, 2, 3, 1, };
; 273  : 	for (int i = 0; i < m_dwParticleMaxNum; ++i)

  00081	33 c0		 xor	 eax, eax
  00083	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  00086	39 43 4c	 cmp	 DWORD PTR [ebx+76], eax
  00089	76 59		 jbe	 SHORT $LN3@CreateGeom
  0008b	57		 push	 edi
  0008c	bf 06 00 00 00	 mov	 edi, 6
$LL4@CreateGeom:

; 274  : 	{
; 275  : 		for (int j = 0; j < 6; ++j)
; 276  : 		{
; 277  : 			dstIndices[i*6 + j] = i*4 + c_awFillRectIndices[j];

  00091	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00098	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  0009b	8d 4e 02	 lea	 ecx, DWORD PTR [esi+2]
  0009e	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
  000a1	8d 7f 0c	 lea	 edi, DWORD PTR [edi+12]
  000a4	66 89 74 07 ee	 mov	 WORD PTR [edi+eax-18], si
  000a9	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000ac	66 89 4c 07 f0	 mov	 WORD PTR [edi+eax-16], cx
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000b4	66 89 54 07 f2	 mov	 WORD PTR [edi+eax-14], dx
  000b9	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000bc	66 89 4c 07 f4	 mov	 WORD PTR [edi+eax-12], cx
  000c1	8d 4e 03	 lea	 ecx, DWORD PTR [esi+3]
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000c7	66 89 4c 07 f6	 mov	 WORD PTR [edi+eax-10], cx
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000cf	66 89 54 07 f8	 mov	 WORD PTR [edi+eax-8], dx
  000d4	8b 45 f8	 mov	 eax, DWORD PTR _i$1$[ebp]
  000d7	40		 inc	 eax
  000d8	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  000db	3b 43 4c	 cmp	 eax, DWORD PTR [ebx+76]
  000de	72 b1		 jb	 SHORT $LL4@CreateGeom
  000e0	8b 75 f4	 mov	 esi, DWORD PTR tv616[ebp]
  000e3	5f		 pop	 edi
$LN3@CreateGeom:

; 278  : 		}
; 279  : 	}
; 280  : 
; 281  : 	m_pIB->Unlock();

  000e4	8b 06		 mov	 eax, DWORD PTR [esi]
  000e6	50		 push	 eax
  000e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e9	ff 51 30	 call	 DWORD PTR [ecx+48]
  000ec	5e		 pop	 esi

; 282  : 	return true;

  000ed	b0 01		 mov	 al, 1

; 283  : }

  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
$LN26@CreateGeom:
  000f4	5e		 pop	 esi

; 270  : 		return false;

  000f5	32 c0		 xor	 al, al

; 283  : }

  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
?__CreateGeometry@CSnowEnvironment@@IAE_NXZ ENDP	; CSnowEnvironment::__CreateGeometry
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ
_TEXT	SEGMENT
?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ PROC	; CSnowEnvironment::__CreateBlurTexture, COMDAT
; _this$ = ecx

; 231  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 232  : 	if (!m_bBlurEnable)

  00005	83 7f 50 00	 cmp	 DWORD PTR [edi+80], 0
  00009	0f 84 ae 00 00
	00		 je	 $LN8@CreateBlur

; 233  : 		return true;
; 234  : 
; 235  : 	if (FAILED(ms_lpd3dDevice->CreateTexture(m_wBlurTextureSize, m_wBlurTextureSize, 1, D3DUSAGE_RENDERTARGET, D3DFMT_X8R8G8B8, D3DPOOL_DEFAULT, &m_lpSnowTexture)))

  0000f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	8d 5f 0c	 lea	 ebx, DWORD PTR [edi+12]
  00018	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  0001c	53		 push	 ebx
  0001d	6a 00		 push	 0
  0001f	8b 32		 mov	 esi, DWORD PTR [edx]
  00021	6a 16		 push	 22			; 00000016H
  00023	6a 01		 push	 1
  00025	6a 01		 push	 1
  00027	50		 push	 eax
  00028	50		 push	 eax
  00029	52		 push	 edx
  0002a	ff 56 50	 call	 DWORD PTR [esi+80]
  0002d	85 c0		 test	 eax, eax
  0002f	0f 88 82 00 00
	00		 js	 $LN10@CreateBlur

; 236  : 		return false;
; 237  : 	if (FAILED(m_lpSnowTexture->GetSurfaceLevel(0, &m_lpSnowRenderTargetSurface)))

  00035	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00037	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0003a	50		 push	 eax
  0003b	6a 00		 push	 0
  0003d	51		 push	 ecx
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	ff 52 3c	 call	 DWORD PTR [edx+60]
  00043	85 c0		 test	 eax, eax
  00045	78 70		 js	 SHORT $LN10@CreateBlur

; 238  : 		return false;
; 239  : 	if (FAILED(ms_lpd3dDevice->CreateDepthStencilSurface(m_wBlurTextureSize, m_wBlurTextureSize, D3DFMT_D16, D3DMULTISAMPLE_NONE, &m_lpSnowDepthSurface)))

  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0004d	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  00050	0f b7 4f 38	 movzx	 ecx, WORD PTR [edi+56]
  00054	50		 push	 eax
  00055	6a 00		 push	 0
  00057	8b 32		 mov	 esi, DWORD PTR [edx]
  00059	6a 50		 push	 80			; 00000050H
  0005b	51		 push	 ecx
  0005c	51		 push	 ecx
  0005d	52		 push	 edx
  0005e	ff 56 68	 call	 DWORD PTR [esi+104]
  00061	85 c0		 test	 eax, eax
  00063	78 52		 js	 SHORT $LN10@CreateBlur

; 240  : 		return false;
; 241  : 
; 242  : 	if (FAILED(ms_lpd3dDevice->CreateTexture(m_wBlurTextureSize, m_wBlurTextureSize, 1, D3DUSAGE_RENDERTARGET, D3DFMT_X8R8G8B8, D3DPOOL_DEFAULT, &m_lpAccumTexture)))

  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0006b	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  0006e	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  00072	56		 push	 esi
  00073	6a 00		 push	 0
  00075	8b 11		 mov	 edx, DWORD PTR [ecx]
  00077	6a 16		 push	 22			; 00000016H
  00079	6a 01		 push	 1
  0007b	6a 01		 push	 1
  0007d	50		 push	 eax
  0007e	50		 push	 eax
  0007f	51		 push	 ecx
  00080	ff 52 50	 call	 DWORD PTR [edx+80]
  00083	85 c0		 test	 eax, eax
  00085	78 30		 js	 SHORT $LN10@CreateBlur

; 243  : 		return false;
; 244  : 	if (FAILED(m_lpAccumTexture->GetSurfaceLevel(0, &m_lpAccumRenderTargetSurface)))

  00087	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00089	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  0008c	50		 push	 eax
  0008d	6a 00		 push	 0
  0008f	51		 push	 ecx
  00090	8b 11		 mov	 edx, DWORD PTR [ecx]
  00092	ff 52 3c	 call	 DWORD PTR [edx+60]
  00095	85 c0		 test	 eax, eax
  00097	78 1e		 js	 SHORT $LN10@CreateBlur

; 245  : 		return false;
; 246  : 	if (FAILED(ms_lpd3dDevice->CreateDepthStencilSurface(m_wBlurTextureSize, m_wBlurTextureSize, D3DFMT_D16, D3DMULTISAMPLE_NONE, &m_lpAccumDepthSurface)))

  00099	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0009f	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  000a2	0f b7 4f 38	 movzx	 ecx, WORD PTR [edi+56]
  000a6	50		 push	 eax
  000a7	6a 00		 push	 0
  000a9	8b 32		 mov	 esi, DWORD PTR [edx]
  000ab	6a 50		 push	 80			; 00000050H
  000ad	51		 push	 ecx
  000ae	51		 push	 ecx
  000af	52		 push	 edx
  000b0	ff 56 68	 call	 DWORD PTR [esi+104]
  000b3	85 c0		 test	 eax, eax
  000b5	79 06		 jns	 SHORT $LN8@CreateBlur
$LN10@CreateBlur:
  000b7	5f		 pop	 edi

; 247  : 		return false;
; 248  : 
; 249  : 	return true;
; 250  : }

  000b8	5e		 pop	 esi
  000b9	32 c0		 xor	 al, al
  000bb	5b		 pop	 ebx
  000bc	c3		 ret	 0
$LN8@CreateBlur:
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	b0 01		 mov	 al, 1
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ ENDP	; CSnowEnvironment::__CreateBlurTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__Initialize@CSnowEnvironment@@IAEXXZ
_TEXT	SEGMENT
?__Initialize@CSnowEnvironment@@IAEXXZ PROC		; CSnowEnvironment::__Initialize, COMDAT
; _this$ = ecx

; 327  : 	m_bSnowEnable = FALSE;
; 328  : 	m_lpSnowTexture = NULL;
; 329  : 	m_lpSnowRenderTargetSurface = NULL;
; 330  : 	m_lpSnowDepthSurface = NULL;
; 331  : 	m_lpAccumTexture = NULL;
; 332  : 	m_lpAccumRenderTargetSurface = NULL;
; 333  : 	m_lpAccumDepthSurface = NULL;
; 334  : 	m_pVB = NULL;
; 335  : 	m_pIB = NULL;
; 336  : 	m_pImageInstance = NULL;
; 337  : 
; 338  : 	m_kVct_pkParticleSnow.reserve(m_dwParticleMaxNum);

  00000	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00003	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0
  0000a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00011	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00018	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  0001f	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00026	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  0002d	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00034	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
  0003b	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0
  00042	c7 41 3c 00 00
	00 00		 mov	 DWORD PTR [ecx+60], 0
  00049	83 c1 40	 add	 ecx, 64			; 00000040H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004c	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004f	2b 01		 sub	 eax, DWORD PTR [ecx]
  00051	c1 f8 02	 sar	 eax, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00054	3b d0		 cmp	 edx, eax
  00056	76 12		 jbe	 SHORT $LN4@Initialize

; 1307 :             if (_Newcapacity > max_size()) {

  00058	81 fa ff ff ff
	3f		 cmp	 edx, 1073741823		; 3fffffffH
  0005e	0f 87 00 00 00
	00		 ja	 ?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength

; 1308 :                 _Xlength();
; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXI@Z ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Reallocate_exactly
$LN4@Initialize:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 339  : }

  0006a	c3		 ret	 0
?__Initialize@CSnowEnvironment@@IAEXXZ ENDP		; CSnowEnvironment::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Render@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
_dwParticleCount$1$ = -20				; size = 4
_pv3Verticies$ = -16					; size = 4
_pCamera$1$ = -12					; size = 4
_i$1$ = -8						; size = 4
tv520 = -4						; size = 4
?Render@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Render, COMDAT
; _this$ = ecx

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 171  : 	if (!m_bSnowEnable)

  00009	83 7f 54 00	 cmp	 DWORD PTR [edi+84], 0
  0000d	75 0c		 jne	 SHORT $LN43@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  0000f	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00012	3b 47 44	 cmp	 eax, DWORD PTR [edi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 173  : 		if (m_kVct_pkParticleSnow.empty())

  00015	0f 84 0e 02 00
	00		 je	 $LN1@Render
$LN43@Render:
  0001b	53		 push	 ebx

; 174  : 			return;
; 175  : 	}
; 176  : 
; 177  : 	__BeginBlur();

  0001c	e8 00 00 00 00	 call	 ?__BeginBlur@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__BeginBlur
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00021	8b 5f 44	 mov	 ebx, DWORD PTR [edi+68]
  00024	2b 5f 40	 sub	 ebx, DWORD PTR [edi+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 181  : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002d	c1 fb 02	 sar	 ebx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 179  : 	DWORD dwParticleCount = min(m_dwParticleMaxNum, m_kVct_pkParticleSnow.size());

  00030	39 5f 4c	 cmp	 DWORD PTR [edi+76], ebx
  00033	0f 42 5f 4c	 cmovb	 ebx, DWORD PTR [edi+76]
  00037	89 5d ec	 mov	 DWORD PTR _dwParticleCount$1$[ebp], ebx

; 181  : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  0003a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  0003f	8b c8		 mov	 ecx, eax
  00041	89 4d f4	 mov	 DWORD PTR _pCamera$1$[ebp], ecx

; 182  : 	if (!pCamera)

  00044	85 c9		 test	 ecx, ecx
  00046	0f 84 dc 01 00
	00		 je	 $LN45@Render

; 183  : 		return;
; 184  : 
; 185  : 	const D3DXVECTOR3 & c_rv3Up = pCamera->GetUp();
; 186  : 	const D3DXVECTOR3 & c_rv3Cross = pCamera->GetCross();
; 187  : 
; 188  : 	SParticleVertex * pv3Verticies;
; 189  : 	if (SUCCEEDED(m_pVB->Lock(0, sizeof(SParticleVertex)*dwParticleCount*4, (BYTE **) &pv3Verticies, D3DLOCK_DISCARD)))

  0004c	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0004f	8d 45 f0	 lea	 eax, DWORD PTR _pv3Verticies$[ebp]
  00052	68 00 20 00 00	 push	 8192			; 00002000H
  00057	50		 push	 eax
  00058	8d 04 9b	 lea	 eax, DWORD PTR [ebx+ebx*4]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	c1 e0 04	 shl	 eax, 4
  00060	50		 push	 eax
  00061	6a 00		 push	 0
  00063	51		 push	 ecx
  00064	ff 52 2c	 call	 DWORD PTR [edx+44]
  00067	85 c0		 test	 eax, eax
  00069	78 68		 js	 SHORT $LN8@Render

; 190  : 	{
; 191  : 		int i = 0;

  0006b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
  00072	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00073	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 193  : 		for (; i < dwParticleCount && itor != m_kVct_pkParticleSnow.end(); ++i, ++itor)

  00076	85 db		 test	 ebx, ebx
  00078	74 4f		 je	 SHORT $LN44@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0007a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv520[ebp], 0
$LL4@Render:

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00081	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 193  : 		for (; i < dwParticleCount && itor != m_kVct_pkParticleSnow.end(); ++i, ++itor)

  00084	74 43		 je	 SHORT $LN44@Render

; 194  : 		{
; 195  : 			CSnowParticle * pSnow = *itor;
; 196  : 			pSnow->SetCameraVertex(c_rv3Up, c_rv3Cross);

  00086	8b 4d f4	 mov	 ecx, DWORD PTR _pCamera$1$[ebp]
  00089	8b 1e		 mov	 ebx, DWORD PTR [esi]
  0008b	8d 41 60	 lea	 eax, DWORD PTR [ecx+96]
  0008e	50		 push	 eax
  0008f	8d 41 48	 lea	 eax, DWORD PTR [ecx+72]
  00092	8b cb		 mov	 ecx, ebx
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?SetCameraVertex@CSnowParticle@@QAEXABUD3DXVECTOR3@@0@Z ; CSnowParticle::SetCameraVertex

; 197  : 			pSnow->GetVerticies(pv3Verticies[i*4+0],

  0009a	8b 55 fc	 mov	 edx, DWORD PTR tv520[ebp]
  0009d	8b cb		 mov	 ecx, ebx
  0009f	03 55 f0	 add	 edx, DWORD PTR _pv3Verticies$[ebp]
  000a2	8d 42 3c	 lea	 eax, DWORD PTR [edx+60]
  000a5	50		 push	 eax
  000a6	8d 42 28	 lea	 eax, DWORD PTR [edx+40]
  000a9	50		 push	 eax
  000aa	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  000ad	50		 push	 eax
  000ae	52		 push	 edx
  000af	e8 00 00 00 00	 call	 ?GetVerticies@CSnowParticle@@QAEXAAUSParticleVertex@@000@Z ; CSnowParticle::GetVerticies
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _i$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  000b7	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 193  : 		for (; i < dwParticleCount && itor != m_kVct_pkParticleSnow.end(); ++i, ++itor)

  000ba	83 45 fc 50	 add	 DWORD PTR tv520[ebp], 80 ; 00000050H
  000be	40		 inc	 eax
  000bf	8b 5d ec	 mov	 ebx, DWORD PTR _dwParticleCount$1$[ebp]
  000c2	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  000c5	3b c3		 cmp	 eax, ebx
  000c7	72 b8		 jb	 SHORT $LL4@Render
$LN44@Render:

; 198  : 								pv3Verticies[i*4+1],
; 199  : 								pv3Verticies[i*4+2],
; 200  : 								pv3Verticies[i*4+3]);
; 201  : 		}
; 202  : 		m_pVB->Unlock();

  000c9	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  000cc	50		 push	 eax
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	ff 51 30	 call	 DWORD PTR [ecx+48]
  000d2	5e		 pop	 esi
$LN8@Render:

; 203  : 	}
; 204  : 
; 205  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, FALSE);

  000d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d9	6a 00		 push	 0
  000db	6a 0e		 push	 14			; 0000000eH
  000dd	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 206  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e8	6a 01		 push	 1
  000ea	6a 1b		 push	 27			; 0000001bH
  000ec	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 207  : 	STATEMANAGER.SaveRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

  000f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f7	6a 01		 push	 1
  000f9	6a 16		 push	 22			; 00000016H
  000fb	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 208  : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND,  D3DBLEND_SRCALPHA);

  00100	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00106	6a 05		 push	 5
  00108	6a 13		 push	 19			; 00000013H
  0010a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 209  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00115	6a 06		 push	 6
  00117	6a 14		 push	 20			; 00000014H
  00119	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 210  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0011e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00124	6a 02		 push	 2
  00126	6a 02		 push	 2
  00128	6a 00		 push	 0
  0012a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 211  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  0012f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00135	6a 02		 push	 2
  00137	6a 01		 push	 1
  00139	6a 00		 push	 0
  0013b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 212  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00140	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00146	6a 02		 push	 2
  00148	6a 05		 push	 5
  0014a	6a 00		 push	 0
  0014c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 213  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  00151	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00157	6a 02		 push	 2
  00159	6a 04		 push	 4
  0015b	6a 00		 push	 0
  0015d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 214  : 	STATEMANAGER.SetTexture(1, NULL);

  00162	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00168	6a 00		 push	 0
  0016a	6a 01		 push	 1
  0016c	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 215  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00171	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00177	6a 01		 push	 1
  00179	6a 01		 push	 1
  0017b	6a 01		 push	 1
  0017d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 216  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00182	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00188	6a 01		 push	 1
  0018a	6a 04		 push	 4
  0018c	6a 01		 push	 1
  0018e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 217  : 
; 218  : 	m_pImageInstance->GetGraphicImagePointer()->GetTextureReference().SetTextureStage(0);

  00193	8b 4f 3c	 mov	 ecx, DWORD PTR [edi+60]
  00196	6a 00		 push	 0
  00198	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
  0019d	8b c8		 mov	 ecx, eax
  0019f	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ ; CGraphicImage::GetTextureReference
  001a4	8b c8		 mov	 ecx, eax
  001a6	e8 00 00 00 00	 call	 ?SetTextureStage@CGraphicTexture@@QBEXH@Z ; CGraphicTexture::SetTextureStage

; 219  : 	STATEMANAGER.SetIndices(m_pIB, 0);

  001ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b1	6a 00		 push	 0
  001b3	ff 77 28	 push	 DWORD PTR [edi+40]
  001b6	e8 00 00 00 00	 call	 ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices

; 220  : 	STATEMANAGER.SetStreamSource(0, m_pVB, sizeof(SParticleVertex));

  001bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c1	6a 14		 push	 20			; 00000014H
  001c3	ff 77 24	 push	 DWORD PTR [edi+36]
  001c6	6a 00		 push	 0
  001c8	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 221  : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZ | D3DFVF_TEX1);

  001cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001d3	68 02 01 00 00	 push	 258			; 00000102H
  001d8	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 222  : 	STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, dwParticleCount*4, 0, dwParticleCount*2);

  001dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001e3	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]
  001e6	50		 push	 eax
  001e7	6a 00		 push	 0
  001e9	8d 04 9d 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*4]
  001f0	50		 push	 eax
  001f1	6a 00		 push	 0
  001f3	6a 04		 push	 4
  001f5	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 223  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  001fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00200	6a 1b		 push	 27			; 0000001bH
  00202	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 224  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  00207	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0020d	6a 0e		 push	 14			; 0000000eH
  0020f	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 225  : 	STATEMANAGER.RestoreRenderState(D3DRS_CULLMODE);

  00214	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0021a	6a 16		 push	 22			; 00000016H
  0021c	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 226  : 
; 227  : 	__ApplyBlur();

  00221	8b cf		 mov	 ecx, edi
  00223	e8 00 00 00 00	 call	 ?__ApplyBlur@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__ApplyBlur
$LN45@Render:
  00228	5b		 pop	 ebx
$LN1@Render:
  00229	5f		 pop	 edi

; 228  : }

  0022a	8b e5		 mov	 esp, ebp
  0022c	5d		 pop	 ebp
  0022d	c3		 ret	 0
?Render@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Deform@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
_fElapsedTime$1$ = -40					; size = 4
_pSnow$1$ = -36						; size = 4
tv714 = -32						; size = 4
_pSnowParticle$2 = -32					; size = 4
_v3ChangedPos$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Deform@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Deform, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Deform@CSnowEnvironment@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 37   : 	if (!m_bSnowEnable)

  0002d	83 7b 54 00	 cmp	 DWORD PTR [ebx+84], 0
  00031	75 0c		 jne	 SHORT $LN78@Deform

; 38   : 	{
; 39   : 		if (m_kVct_pkParticleSnow.empty())

  00033	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00036	3b 43 44	 cmp	 eax, DWORD PTR [ebx+68]
  00039	0f 84 50 01 00
	00		 je	 $LN79@Deform
$LN78@Deform:

; 40   : 			return;
; 41   : 	}
; 42   : 
; 43   : 	const D3DXVECTOR3 & c_rv3Pos=m_v3Center;
; 44   : 
; 45   : 	static long s_lLastTime = CTimer::Instance().GetCurrentMillisecond();

  0003f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00045	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0004b	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  00053	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00059	0f 8f 4c 01 00
	00		 jg	 $LN84@Deform
$LN2@Deform:

; 46   : 	long lcurTime = CTimer::Instance().GetCurrentMillisecond();

  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond

; 47   : 	float fElapsedTime = float(lcurTime - s_lLastTime) / 1000.0f;

  0006a	8b c8		 mov	 ecx, eax
  0006c	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA

; 48   : 	s_lLastTime = lcurTime;

  00072	a3 00 00 00 00	 mov	 DWORD PTR ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA, eax
  00077	66 0f 6e c1	 movd	 xmm0, ecx
  0007b	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 49   : 
; 50   : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  00084	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@447a0000
  0008c	f3 0f 11 45 d8	 movss	 DWORD PTR _fElapsedTime$1$[ebp], xmm0
  00091	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 51   : 	if (!pCamera)

  00096	85 c0		 test	 eax, eax
  00098	0f 84 f1 00 00
	00		 je	 $LN79@Deform
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0009e	f3 0f 10 40 54	 movss	 xmm0, DWORD PTR [eax+84]
  000a3	f3 0f 10 50 58	 movss	 xmm2, DWORD PTR [eax+88]
  000a8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@455ac000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000b0	8b 73 40	 mov	 esi, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000b3	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@455ac000

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000bb	f3 0f 58 43 2c	 addss	 xmm0, DWORD PTR [ebx+44]
  000c0	f3 0f 58 53 30	 addss	 xmm2, DWORD PTR [ebx+48]

; 180  :     x = fx;

  000c5	f3 0f 11 45 e4	 movss	 DWORD PTR _v3ChangedPos$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 57   : 	v3ChangedPos.z = c_rv3Pos.z;

  000ca	f3 0f 10 43 34	 movss	 xmm0, DWORD PTR [ebx+52]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000cf	f3 0f 11 55 e8	 movss	 DWORD PTR _v3ChangedPos$[ebp+4], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 57   : 	v3ChangedPos.z = c_rv3Pos.z;

  000d4	f3 0f 11 45 ec	 movss	 DWORD PTR _v3ChangedPos$[ebp+8], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000d9	3b 73 44	 cmp	 esi, DWORD PTR [ebx+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 60   : 	for (; itor != m_kVct_pkParticleSnow.end();)

  000dc	74 56		 je	 SHORT $LN4@Deform
  000de	66 90		 npad	 2
$LL3@Deform:

; 61   : 	{
; 62   : 		CSnowParticle * pSnow = *itor;

  000e0	8b 06		 mov	 eax, DWORD PTR [esi]

; 63   : 		pSnow->Update(fElapsedTime, v3ChangedPos);

  000e2	8d 4d e4	 lea	 ecx, DWORD PTR _v3ChangedPos$[ebp]
  000e5	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _fElapsedTime$1$[ebp]
  000ea	51		 push	 ecx
  000eb	51		 push	 ecx
  000ec	8b c8		 mov	 ecx, eax
  000ee	89 45 dc	 mov	 DWORD PTR _pSnow$1$[ebp], eax
  000f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f6	e8 00 00 00 00	 call	 ?Update@CSnowParticle@@QAEXMABUD3DXVECTOR3@@@Z ; CSnowParticle::Update

; 64   : 
; 65   : 		if (!pSnow->IsActivate())

  000fb	8b 4d dc	 mov	 ecx, DWORD PTR _pSnow$1$[ebp]
  000fe	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00101	89 45 e0	 mov	 DWORD PTR tv714[ebp], eax
  00104	e8 00 00 00 00	 call	 ?IsActivate@CSnowParticle@@QAE_NXZ ; CSnowParticle::IsActivate
  00109	84 c0		 test	 al, al
  0010b	75 1d		 jne	 SHORT $LN12@Deform

; 66   : 		{
; 67   : 			CSnowParticle::Delete(pSnow);

  0010d	ff 75 dc	 push	 DWORD PTR _pSnow$1$[ebp]
  00110	e8 00 00 00 00	 call	 ?Delete@CSnowParticle@@SAXPAV1@@Z ; CSnowParticle::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00115	56		 push	 esi
  00116	ff 73 44	 push	 DWORD PTR [ebx+68]
  00119	ff 75 e0	 push	 DWORD PTR tv714[ebp]
  0011c	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
  00121	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  00124	83 43 44 fc	 add	 DWORD PTR [ebx+68], -4	; fffffffcH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 70   : 		}

  00128	eb 03		 jmp	 SHORT $LN81@Deform
$LN12@Deform:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0012a	8b 75 e0	 mov	 esi, DWORD PTR tv714[ebp]
$LN81@Deform:

; 149  :         return _Ptr == _Right._Ptr;

  0012d	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00130	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 60   : 	for (; itor != m_kVct_pkParticleSnow.end();)

  00132	75 ac		 jne	 SHORT $LL3@Deform
$LN4@Deform:

; 71   : 		else
; 72   : 		{
; 73   : 			++itor;
; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	if (m_bSnowEnable)

  00134	83 7b 54 00	 cmp	 DWORD PTR [ebx+84], 0
  00138	74 55		 je	 SHORT $LN79@Deform

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0013a	33 f6		 xor	 esi, esi
$LN82@Deform:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0013c	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  0013f	ba 0a 00 00 00	 mov	 edx, 10			; 0000000aH
  00144	2b 43 40	 sub	 eax, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  00147	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0014a	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0014d	2b c8		 sub	 ecx, eax
  0014f	3b ca		 cmp	 ecx, edx
  00151	0f 47 ca	 cmova	 ecx, edx
  00154	3b f1		 cmp	 esi, ecx
  00156	73 37		 jae	 SHORT $LN79@Deform

; 80   : 		{
; 81   : 			CSnowParticle * pSnowParticle = CSnowParticle::New();

  00158	e8 00 00 00 00	 call	 ?New@CSnowParticle@@SAPAV1@XZ ; CSnowParticle::New

; 82   : 			pSnowParticle->Init(v3ChangedPos);

  0015d	8d 4d e4	 lea	 ecx, DWORD PTR _v3ChangedPos$[ebp]
  00160	89 45 e0	 mov	 DWORD PTR _pSnowParticle$2[ebp], eax
  00163	51		 push	 ecx
  00164	8b c8		 mov	 ecx, eax
  00166	e8 00 00 00 00	 call	 ?Init@CSnowParticle@@QAEXABUD3DXVECTOR3@@@Z ; CSnowParticle::Init
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0016b	8b 4b 44	 mov	 ecx, DWORD PTR [ebx+68]
  0016e	3b 4b 48	 cmp	 ecx, DWORD PTR [ebx+72]
  00171	74 0c		 je	 SHORT $LN67@Deform

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00173	8b 45 e0	 mov	 eax, DWORD PTR _pSnowParticle$2[ebp]
  00176	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00178	83 43 44 04	 add	 DWORD PTR [ebx+68], 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0017c	46		 inc	 esi
  0017d	eb bd		 jmp	 SHORT $LN82@Deform
$LN67@Deform:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0017f	8d 45 e0	 lea	 eax, DWORD PTR _pSnowParticle$2[ebp]
  00182	50		 push	 eax
  00183	51		 push	 ecx
  00184	8d 4b 40	 lea	 ecx, DWORD PTR [ebx+64]
  00187	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCSnowParticle@@@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAEPAPAVCSnowParticle@@QAPAV2@ABQAV2@@Z ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Emplace_reallocate<CSnowParticle * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0018c	46		 inc	 esi
  0018d	eb ad		 jmp	 SHORT $LN82@Deform
$LN79@Deform:

; 83   : 			m_kVct_pkParticleSnow.push_back(pSnowParticle);
; 84   : 		}
; 85   : 	}
; 86   : }

  0018f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00192	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00199	59		 pop	 ecx
  0019a	5f		 pop	 edi
  0019b	5e		 pop	 esi
  0019c	5b		 pop	 ebx
  0019d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a0	33 cd		 xor	 ecx, ebp
  001a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
$LN84@Deform:

; 40   : 			return;
; 41   : 	}
; 42   : 
; 43   : 	const D3DXVECTOR3 & c_rv3Pos=m_v3Center;
; 44   : 
; 45   : 	static long s_lLastTime = CTimer::Instance().GetCurrentMillisecond();

  001ab	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  001b0	e8 00 00 00 00	 call	 __Init_thread_header
  001b5	83 c4 04	 add	 esp, 4
  001b8	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA, -1
  001bf	0f 85 9a fe ff
	ff		 jne	 $LN2@Deform
  001c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  001cb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001d2	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  001d7	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  001dc	a3 00 00 00 00	 mov	 DWORD PTR ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA, eax
  001e1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e8	e8 00 00 00 00	 call	 __Init_thread_footer
  001ed	83 c4 04	 add	 esp, 4
  001f0	e9 6a fe ff ff	 jmp	 $LN2@Deform
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Deform@CSnowEnvironment@@QAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Deform@CSnowEnvironment@@QAEXXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Deform@CSnowEnvironment@@QAEXXZ
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Deform@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Deform
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_c_rv3Pos$ = 8						; size = 4
?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z PROC	; CSnowEnvironment::Update, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 26   : 	if (!m_bSnowEnable)

  00003	83 79 54 00	 cmp	 DWORD PTR [ecx+84], 0
  00007	75 08		 jne	 SHORT $LN3@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00009	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  0000c	3b 41 44	 cmp	 eax, DWORD PTR [ecx+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 28   : 		if (m_kVct_pkParticleSnow.empty())

  0000f	74 12		 je	 SHORT $LN1@Update
$LN3@Update:

; 29   : 			return;
; 30   : 	}
; 31   : 
; 32   : 	m_v3Center=c_rv3Pos;

  00011	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Pos$[ebp]
  00014	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00018	66 0f d6 41 2c	 movq	 QWORD PTR [ecx+44], xmm0
  0001d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00020	89 41 34	 mov	 DWORD PTR [ecx+52], eax
$LN1@Update:

; 33   : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z ENDP	; CSnowEnvironment::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Disable@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
?Disable@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Disable, COMDAT
; _this$ = ecx

; 21   : 	m_bSnowEnable = FALSE;

  00000	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0

; 22   : }

  00007	c3		 ret	 0
?Disable@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Disable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Enable@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
?Enable@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Enable, COMDAT
; _this$ = ecx

; 10   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 11   : 	if (!m_bSnowEnable)

  00003	83 7e 54 00	 cmp	 DWORD PTR [esi+84], 0
  00007	75 05		 jne	 SHORT $LN4@Enable

; 12   : 	{
; 13   : 		Create();

  00009	e8 00 00 00 00	 call	 ?Create@CSnowEnvironment@@QAE_NXZ ; CSnowEnvironment::Create
$LN4@Enable:

; 14   : 	}
; 15   : 
; 16   : 	m_bSnowEnable = TRUE;
; 17   : }

  0000e	c7 46 54 01 00
	00 00		 mov	 DWORD PTR [esi+84], 1
  00015	5e		 pop	 esi
  00016	c3		 ret	 0
?Enable@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Destroy@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Destroy, COMDAT
; _this$ = ecx

; 303  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 304  : 	SAFE_RELEASE(m_lpSnowTexture);

  00003	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0d		 je	 SHORT $LN2@Destroy
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	51		 push	 ecx
  0000d	ff 50 08	 call	 DWORD PTR [eax+8]
  00010	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN2@Destroy:

; 305  : 	SAFE_RELEASE(m_lpSnowRenderTargetSurface);

  00017	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 0d		 je	 SHORT $LN3@Destroy
  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	51		 push	 ecx
  00021	ff 50 08	 call	 DWORD PTR [eax+8]
  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN3@Destroy:

; 306  : 	SAFE_RELEASE(m_lpSnowDepthSurface);

  0002b	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 0d		 je	 SHORT $LN4@Destroy
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	51		 push	 ecx
  00035	ff 50 08	 call	 DWORD PTR [eax+8]
  00038	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN4@Destroy:

; 307  : 	SAFE_RELEASE(m_lpAccumTexture);

  0003f	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00042	85 c9		 test	 ecx, ecx
  00044	74 0d		 je	 SHORT $LN5@Destroy
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	51		 push	 ecx
  00049	ff 50 08	 call	 DWORD PTR [eax+8]
  0004c	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN5@Destroy:

; 308  : 	SAFE_RELEASE(m_lpAccumRenderTargetSurface);

  00053	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00056	85 c9		 test	 ecx, ecx
  00058	74 0d		 je	 SHORT $LN6@Destroy
  0005a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005c	51		 push	 ecx
  0005d	ff 50 08	 call	 DWORD PTR [eax+8]
  00060	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
$LN6@Destroy:

; 309  : 	SAFE_RELEASE(m_lpAccumDepthSurface);

  00067	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0006a	85 c9		 test	 ecx, ecx
  0006c	74 0d		 je	 SHORT $LN7@Destroy
  0006e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00070	51		 push	 ecx
  00071	ff 50 08	 call	 DWORD PTR [eax+8]
  00074	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN7@Destroy:

; 310  : 	SAFE_RELEASE(m_pVB);

  0007b	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0007e	85 c9		 test	 ecx, ecx
  00080	74 0d		 je	 SHORT $LN8@Destroy
  00082	8b 01		 mov	 eax, DWORD PTR [ecx]
  00084	51		 push	 ecx
  00085	ff 50 08	 call	 DWORD PTR [eax+8]
  00088	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN8@Destroy:

; 311  : 	SAFE_RELEASE(m_pIB);

  0008f	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00092	85 c9		 test	 ecx, ecx
  00094	74 0d		 je	 SHORT $LN9@Destroy
  00096	8b 01		 mov	 eax, DWORD PTR [ecx]
  00098	51		 push	 ecx
  00099	ff 50 08	 call	 DWORD PTR [eax+8]
  0009c	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
$LN9@Destroy:
  000a3	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000a4	8b 7e 40	 mov	 edi, DWORD PTR [esi+64]
  000a7	3b 7e 44	 cmp	 edi, DWORD PTR [esi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  000aa	74 2e		 je	 SHORT $LN14@Destroy
  000ac	53		 push	 ebx
  000ad	0f 1f 00	 npad	 3
$LL15@Destroy:

; 96   : 	{
; 97   : 		delete *i;

  000b0	8b 1f		 mov	 ebx, DWORD PTR [edi]
  000b2	85 db		 test	 ebx, ebx
  000b4	74 12		 je	 SHORT $LN40@Destroy
  000b6	8b cb		 mov	 ecx, ebx
  000b8	e8 00 00 00 00	 call	 ??1CSnowParticle@@QAE@XZ ; CSnowParticle::~CSnowParticle
  000bd	6a 48		 push	 72			; 00000048H
  000bf	53		 push	 ebx
  000c0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c5	83 c4 08	 add	 esp, 8
$LN40@Destroy:

; 98   : 		*i = NULL;

  000c8	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  000ce	83 c7 04	 add	 edi, 4

; 149  :         return _Ptr == _Right._Ptr;

  000d1	3b 7e 44	 cmp	 edi, DWORD PTR [esi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  000d4	75 da		 jne	 SHORT $LL15@Destroy
  000d6	8b 7e 40	 mov	 edi, DWORD PTR [esi+64]
  000d9	5b		 pop	 ebx
$LN14@Destroy:

; 99   : 	}
; 100  : 
; 101  : 	container.clear();

  000da	89 7e 44	 mov	 DWORD PTR [esi+68], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 314  : 	CSnowParticle::DestroyPool();

  000dd	e8 00 00 00 00	 call	 ?DestroyPool@CSnowParticle@@SAXXZ ; CSnowParticle::DestroyPool

; 315  : 
; 316  : 	if (m_pImageInstance)

  000e2	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000e5	5f		 pop	 edi
  000e6	85 c0		 test	 eax, eax
  000e8	74 10		 je	 SHORT $LN10@Destroy

; 317  : 	{
; 318  : 		CGraphicImageInstance::Delete(m_pImageInstance);

  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  000f0	83 c4 04	 add	 esp, 4

; 319  : 		m_pImageInstance = NULL;

  000f3	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
$LN10@Destroy:

; 320  : 	}
; 321  : 
; 322  : 	__Initialize();

  000fa	8b ce		 mov	 ecx, esi
  000fc	5e		 pop	 esi
  000fd	e9 00 00 00 00	 jmp	 ?__Initialize@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__Initialize
?Destroy@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Create@CSnowEnvironment@@QAE_NXZ
_TEXT	SEGMENT
?Create@CSnowEnvironment@@QAE_NXZ PROC			; CSnowEnvironment::Create, COMDAT
; _this$ = ecx

; 286  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 287  : 	Destroy();

  00003	e8 00 00 00 00	 call	 ?Destroy@CSnowEnvironment@@QAEXXZ ; CSnowEnvironment::Destroy

; 288  : 
; 289  : 	if (!__CreateBlurTexture())

  00008	8b cf		 mov	 ecx, edi
  0000a	e8 00 00 00 00	 call	 ?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ ; CSnowEnvironment::__CreateBlurTexture
  0000f	84 c0		 test	 al, al
  00011	74 33		 je	 SHORT $LN5@Create

; 290  : 		return false;
; 291  : 
; 292  : 	if (!__CreateGeometry())

  00013	8b cf		 mov	 ecx, edi
  00015	e8 00 00 00 00	 call	 ?__CreateGeometry@CSnowEnvironment@@IAE_NXZ ; CSnowEnvironment::__CreateGeometry
  0001a	84 c0		 test	 al, al
  0001c	74 28		 je	 SHORT $LN5@Create

; 294  : 
; 295  : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer("d:/ymir work/special/snow.dds");

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00024	56		 push	 esi
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@
  0002a	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0002f	8b f0		 mov	 esi, eax

; 296  : 	m_pImageInstance = CGraphicImageInstance::New();

  00031	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 297  : 	m_pImageInstance->SetImagePointer(pImage);

  00036	56		 push	 esi
  00037	8b c8		 mov	 ecx, eax
  00039	89 47 3c	 mov	 DWORD PTR [edi+60], eax
  0003c	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 298  : 
; 299  : 	return true;

  00041	5e		 pop	 esi
  00042	b0 01		 mov	 al, 1
  00044	5f		 pop	 edi

; 300  : }

  00045	c3		 ret	 0
$LN5@Create:

; 293  : 		return false;

  00046	32 c0		 xor	 al, al
  00048	5f		 pop	 edi

; 300  : }

  00049	c3		 ret	 0
?Create@CSnowEnvironment@@QAE_NXZ ENDP			; CSnowEnvironment::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ??1CSnowEnvironment@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSnowEnvironment@@UAE@XZ PROC			; CSnowEnvironment::~CSnowEnvironment, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSnowEnvironment@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSnowEnvironment@@6B@

; 351  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CSnowEnvironment@@QAEXXZ ; CSnowEnvironment::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00033	85 c9		 test	 ecx, ecx
  00035	74 27		 je	 SHORT $LN6@CSnowEnvir

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00037	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0003a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00046	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00050	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0

; 1699 :             _Myend   = pointer();

  00057	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
$LN6@CSnowEnvir:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 352  : }

  0005e	8b ce		 mov	 ecx, esi
  00060	e8 00 00 00 00	 call	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  00065	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006f	59		 pop	 ecx
  00070	5e		 pop	 esi
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
  00075	cc		 int	 3
  00076	cc		 int	 3
  00077	cc		 int	 3
  00078	cc		 int	 3
  00079	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSnowEnvironment@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSnowEnvironment@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSnowEnvironment@@UAE@XZ ENDP			; CSnowEnvironment::~CSnowEnvironment
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ??0CSnowEnvironment@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSnowEnvironment@@QAE@XZ PROC			; CSnowEnvironment::CSnowEnvironment, COMDAT
; _this$ = ecx

; 342  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSnowEnvironment@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CScreen@@QAE@XZ	; CScreen::CScreen
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSnowEnvironment@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  00042	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00049	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\SnowEnvironment.cpp

; 345  : 	m_wBlurTextureSize = 512;

  00050	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 346  : 
; 347  : 	__Initialize();

  00059	8b ce		 mov	 ecx, esi
  0005b	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  00062	c7 46 4c b8 0b
	00 00		 mov	 DWORD PTR [esi+76], 3000 ; 00000bb8H
  00069	66 89 46 38	 mov	 WORD PTR [esi+56], ax
  0006d	e8 00 00 00 00	 call	 ?__Initialize@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__Initialize

; 348  : }

  00072	8b c6		 mov	 eax, esi
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	5e		 pop	 esi
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 40	 add	 ecx, 64			; 00000040H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CSnowEnvironment@@QAE@XZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSnowEnvironment@@QAE@XZ
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSnowEnvironment@@QAE@XZ ENDP			; CSnowEnvironment::CSnowEnvironment
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
