; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnRender@CMapOutdoor@@MAEXXZ			; CMapOutdoor::OnRender
PUBLIC	?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices
PUBLIC	?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z		; CMapOutdoor::SetVisiblePart
PUBLIC	?SetSplatLimit@CMapOutdoor@@QAEXH@Z		; CMapOutdoor::SetSplatLimit
PUBLIC	?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z ; CMapOutdoor::GetRenderedSplatNum
PUBLIC	?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z ; CMapOutdoor::GetRenderedGraphicThingInstanceNum
PUBLIC	?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z	; CMapOutdoor::ApplyLight
PUBLIC	?RenderMarkedArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderMarkedArea
PUBLIC	?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
PUBLIC	?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z		; CMapOutdoor::DrawPatchAttr
PUBLIC	?RenderCollision@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderCollision
PUBLIC	?RenderSky@CMapOutdoor@@QAEXXZ			; CMapOutdoor::RenderSky
PUBLIC	?RenderCloud@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderCloud
PUBLIC	?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RenderBeforeLensFlare
PUBLIC	?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RenderAfterLensFlare
PUBLIC	?RenderScreenFiltering@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RenderScreenFiltering
PUBLIC	?RenderTerrain@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderTerrain
PUBLIC	?RenderArea@CMapOutdoor@@QAEX_N@Z		; CMapOutdoor::RenderArea
PUBLIC	?RenderBlendArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderBlendArea
PUBLIC	?RenderDungeon@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderDungeon
PUBLIC	?RenderEffect@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderEffect
PUBLIC	?RenderPCBlocker@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderPCBlocker
PUBLIC	?RenderTree@CMapOutdoor@@QAEXXZ			; CMapOutdoor::RenderTree
PUBLIC	?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength
PUBLIC	?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength
PUBLIC	?SetPatchDrawVector@CMapOutdoor@@IAEXXZ		; CMapOutdoor::SetPatchDrawVector
PUBLIC	?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::NEW_DrawWireFrame
PUBLIC	?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::DrawWireFrame
PUBLIC	?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer
PUBLIC	?InitializeVisibleParts@CMapOutdoor@@IAEXXZ	; CMapOutdoor::InitializeVisibleParts
PUBLIC	?IsVisiblePart@CMapOutdoor@@IAE_NH@Z		; CMapOutdoor::IsVisiblePart
PUBLIC	?__GetNoFogDistance@CMapOutdoor@@IAEMXZ		; CMapOutdoor::__GetNoFogDistance
PUBLIC	?__GetFogDistance@CMapOutdoor@@IAEMXZ		; CMapOutdoor::__GetFogDistance
PUBLIC	?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
PUBLIC	?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
PUBLIC	?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z ; CMapOutdoor::__RenderTerrain_AppendPatch
PUBLIC	??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>
PUBLIC	??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >
PUBLIC	??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
PUBLIC	??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ; std::_Destroy_range<std::allocator<CMapOutdoor::TPatchDrawStruct> >
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<float,long> > >
PUBLIC	??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea::SCRCWithNumber> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPAEQAEAAV?$allocator@E@0@@Z ; std::_Destroy_range<std::allocator<unsigned char> >
PUBLIC	??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$_Uninitialized_move@PAUTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0PAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ; std::_Uninitialized_move<CMapOutdoor::TPatchDrawStruct *,std::allocator<CMapOutdoor::TPatchDrawStruct> >
PUBLIC	??$_Uninitialized_move@PAU?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@YAPAU?$pair@MJ@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ; std::_Uninitialized_move<std::pair<float,long> *,std::allocator<std::pair<float,long> > >
PUBLIC	??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >
PUBLIC	??$_Uninitialized_move@PAEV?$allocator@E@std@@@std@@YAPAEQAE0PAEAAV?$allocator@E@0@@Z ; std::_Uninitialized_move<unsigned char *,std::allocator<unsigned char> >
PUBLIC	??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >
PUBLIC	??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
PUBLIC	??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z	; std::_Copy_memmove<unsigned char *,unsigned char *>
PUBLIC	??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z ; std::_Refancy<CArea::SCRCWithNumber *,0>
PUBLIC	??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z		; std::_Refancy<unsigned char *,0>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >
PUBLIC	??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>
PUBLIC	??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Uninitialized_chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Destroy_range@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@@Z ; std::_Destroy_range<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >
PUBLIC	??$_Guess_median_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Guess_median_unchecked<std::pair<float,long> *,std::less<void> >
PUBLIC	??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
PUBLIC	??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
PUBLIC	??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z	; std::swap<float,long,0>
PUBLIC	??$lower_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::lower_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$upper_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@0ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::upper_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Construct_in_place@UTPatchDrawStruct@CMapOutdoor@@U12@@std@@YAXAAUTPatchDrawStruct@CMapOutdoor@@$$QAU12@@Z ; std::_Construct_in_place<CMapOutdoor::TPatchDrawStruct,CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
PUBLIC	?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A ; m_dwRenderedCRCWithNumberVector
PUBLIC	??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@ ; `string'
PUBLIC	??_R0?AVCGraphicObjectInstance@@@8		; CGraphicObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R0?AVCGraphicThingInstance@@@8		; CGraphicThingInstance `RTTI Type Descriptor'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f400000
PUBLIC	__real@3f800000
PUBLIC	__real@42000000
PUBLIC	__real@437f0000
PUBLIC	__real@449c4000
PUBLIC	__real@45075000
PUBLIC	__real@453b8000
PUBLIC	__real@45875000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?fMAX@@YAMMM@Z:PROC				; fMAX
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixScaling@16:PROC
EXTRN	_D3DXMatrixLookAtRH@16:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?SetBlendOperation@CScreen@@QAEXXZ:PROC		; CScreen::SetBlendOperation
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?GetD3DIndexBuffer@CGraphicIndexBuffer@@QBEPAUIDirect3DIndexBuffer8@@XZ:PROC ; CGraphicIndexBuffer::GetD3DIndexBuffer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	?RenderCloud@CSkyBox@@QAEXXZ:PROC		; CSkyBox::RenderCloud
EXTRN	?Compute@CLensFlare@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CLensFlare::Compute
EXTRN	?DrawBeforeFlare@CLensFlare@@QAEXXZ:PROC	; CLensFlare::DrawBeforeFlare
EXTRN	?DrawFlare@CLensFlare@@QAEXXZ:PROC		; CLensFlare::DrawFlare
EXTRN	?AdjustBrightness@CLensFlare@@QAEXXZ:PROC	; CLensFlare::AdjustBrightness
EXTRN	?Render@CScreenFilter@@QAEXXZ:PROC		; CScreenFilter::Render
EXTRN	?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicObjectInstance::GetPosition
EXTRN	?Render@CGraphicObjectInstance@@QAE_NXZ:PROC	; CGraphicObjectInstance::Render
EXTRN	?BlendRender@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::BlendRender
EXTRN	?RenderShadow@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::RenderShadow
EXTRN	?RenderPCBlocker@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::RenderPCBlocker
EXTRN	?Show@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Show
EXTRN	?Hide@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Hide
EXTRN	?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ:PROC ; CGraphicThingInstance::HaveBlendThing
EXTRN	?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z:PROC ; CArea::CollectRenderingObject
EXTRN	?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z:PROC ; CArea::CollectBlendRenderingObject
EXTRN	?RenderEffect@CArea@@QAEXXZ:PROC		; CArea::RenderEffect
EXTRN	?RenderCollision@CArea@@QAEXXZ:PROC		; CArea::RenderCollision
EXTRN	?RenderDungeon@CArea@@QAEXXZ:PROC		; CArea::RenderDungeon
EXTRN	?SetCenterPosition@CTerrainPatchProxy@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CTerrainPatchProxy::SetCenterPosition
EXTRN	?HardwareTransformPatch_GetVertexBufferPtr@CTerrainPatchProxy@@QAEPAVCGraphicVertexBuffer@@XZ:PROC ; CTerrainPatchProxy::HardwareTransformPatch_GetVertexBufferPtr
EXTRN	?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z:PROC ; CMapOutdoor::GetTerrainPointer
EXTRN	?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z:PROC ; CMapOutdoor::GetAreaPointer
EXTRN	?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z:PROC ; CMapOutdoor::BuildViewFrustum
EXTRN	?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch
EXTRN	?__RenderTerrain_RenderHardwareTransformPatch@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::__RenderTerrain_RenderHardwareTransformPatch
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z:PROC ; CStateManager::SetLight
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SaveTransform
EXTRN	?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z:PROC ; CStateManager::RestoreTransform
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z:PROC ; CStateManager::SetIndices
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::GetRenderState
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__chkstk:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memchr:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A:BYTE	; CGraphicBase::ms_matView
EXTRN	?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A:BYTE	; CGraphicBase::ms_matProj
EXTRN	?SOFTWARE_TRANSFORM_PATCH_ENABLE@CTerrainPatch@@2_NA:BYTE ; CTerrainPatch::SOFTWARE_TRANSFORM_PATCH_ENABLE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A DD 01H DUP (?) ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A DB 0cH DUP (?) ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A DB 0cH DUP (?) ; m_dwRenderedCRCWithNumberVector
_BSS	ENDS
;	COMDAT ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
_BSS	SEGMENT
?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A DB 0cH DUP (?) ; `CMapOutdoor::RenderArea'::`33'::s_kVct_pkOpaqueThingInstSort
_BSS	ENDS
;	COMDAT ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
_BSS	SEGMENT
?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA DD 01H DUP (?) ; `CMapOutdoor::RenderArea'::`33'::$TSS0
_BSS	ENDS
;	COMDAT ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
_BSS	SEGMENT
?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A DB 0cH DUP (?) ; `CMapOutdoor::RenderBlendArea'::`2'::s_kVct_pkBlendThingInstSort
_BSS	ENDS
;	COMDAT ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA DD 01H DUP (?) ; `CMapOutdoor::RenderBlendArea'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA
_BSS	SEGMENT
?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA DD 01H DUP (?) ; `CMapOutdoor::RenderMarkedArea'::`2'::lStartTime
_BSS	ENDS
;	COMDAT ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA DD 01H DUP (?) ; `CMapOutdoor::RenderMarkedArea'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
?m_dwRenderedCRCWithNumberVector$initializer$@@3P6AXXZA DD FLAT:??__Em_dwRenderedCRCWithNumberVector@@YAXXZ ; m_dwRenderedCRCWithNumberVector$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@45875000
CONST	SEGMENT
__real@45875000 DD 045875000r			; 4330
CONST	ENDS
;	COMDAT __real@453b8000
CONST	SEGMENT
__real@453b8000 DD 0453b8000r			; 3000
CONST	ENDS
;	COMDAT __real@45075000
CONST	SEGMENT
__real@45075000 DD 045075000r			; 2165
CONST	ENDS
;	COMDAT __real@449c4000
CONST	SEGMENT
__real@449c4000 DD 0449c4000r			; 1250
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AVCGraphicThingInstance@@@8
data$r	SEGMENT
??_R0?AVCGraphicThingInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicThingInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicThingInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVCGraphicObjectInstance@@@8
data$r	SEGMENT
??_R0?AVCGraphicObjectInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicObjectInstance@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@
CONST	SEGMENT
??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@ DB 'CMapOutdoor::Re'
	DB	'nderBeforeLensFlare mc_pEnvironmentData is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z$0
__ehfuncinfo$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
??m_TerrainNumVector$initializer$@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ; ??m_TerrainNumVector$initializer$@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z PROC ; std::reverse<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 5398 : _CONSTEXPR20 void reverse(const _BidIt _First, const _BidIt _Last) { // reverse elements in [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5399 :     _Adl_verify_range(_First, _Last);
; 5400 :     auto _UFirst = _Get_unwrapped(_First);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 5401 :     auto _ULast  = _Get_unwrapped(_Last);

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]

; 5442 :     for (; _UFirst != _ULast && _UFirst != --_ULast; ++_UFirst) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	74 1d		 je	 SHORT $LN3@reverse
  0000d	0f 1f 00	 npad	 3
$LL4@reverse:
  00010	83 e8 10	 sub	 eax, 16			; 00000010H
  00013	3b c8		 cmp	 ecx, eax
  00015	74 13		 je	 SHORT $LN3@reverse
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00017	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0001a	0f 10 09	 movups	 xmm1, XMMWORD PTR [ecx]
  0001d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5442 :     for (; _UFirst != _ULast && _UFirst != --_ULast; ++_UFirst) {

  00020	83 c1 10	 add	 ecx, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00023	0f 11 08	 movups	 XMMWORD PTR [eax], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5442 :     for (; _UFirst != _ULast && _UFirst != --_ULast; ++_UFirst) {

  00026	3b c8		 cmp	 ecx, eax
  00028	75 e6		 jne	 SHORT $LL4@reverse
$LN3@reverse:

; 5443 :         _STD iter_swap(_UFirst, _ULast);
; 5444 :     }
; 5445 : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ENDP ; std::reverse<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z PROC ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 3148 :     const ptrdiff_t _Capacity) { // rotate [_First, _Last) using temp buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3149 :                                  // precondition: _Count1 == distance(_First, _Mid)
; 3150 :                                  // precondition: _Count2 == distance(_Mid, _Last)
; 3151 :     if (_Count1 == 0) {

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 05		 jne	 SHORT $LN2@Buffered_r

; 3152 :         return _Last;

  0000a	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]

; 3176 : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
$LN2@Buffered_r:

; 3153 :     }
; 3154 : 
; 3155 :     if (_Count2 == 0) {

  0000f	8b 4d 18	 mov	 ecx, DWORD PTR __Count2$[ebp]
  00012	85 c9		 test	 ecx, ecx
  00014	75 05		 jne	 SHORT $LN3@Buffered_r

; 3156 :         return _First;

  00016	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 3176 : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN3@Buffered_r:

; 3157 :     }
; 3158 : 
; 3159 :     if (_Count1 <= _Count2 && _Count1 <= _Capacity) { // buffer left range, then copy parts

  0001b	8b 55 20	 mov	 edx, DWORD PTR __Capacity$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	3b c1		 cmp	 eax, ecx
  00023	7f 36		 jg	 SHORT $LN4@Buffered_r
  00025	3b c2		 cmp	 eax, edx
  00027	7f 32		 jg	 SHORT $LN4@Buffered_r

; 3160 :         _Uninitialized_backout<_Iter_value_t<_BidIt>*> _Backout{

  00029	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0002c	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
  0002f	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00032	53		 push	 ebx
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00039	56		 push	 esi
  0003a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1427 :     _Uninitialized_backout(_NoThrowFwdIt _First_, _NoThrowFwdIt _Last_) : _First(_First_), _Last(_Last_) {}

  0003d	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00045	8b f0		 mov	 esi, eax
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0004c	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00051	83 c4 24	 add	 esp, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3164 :         return _New_mid; // _Backout destroys elements in temporary buffer

  00054	8b c6		 mov	 eax, esi
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx

; 3176 : }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN4@Buffered_r:

; 3165 :     }
; 3166 : 
; 3167 :     if (_Count2 <= _Capacity) { // buffer right range, then copy parts

  0005b	3b ca		 cmp	 ecx, edx
  0005d	7f 2f		 jg	 SHORT $LN5@Buffered_r

; 3168 :         _Uninitialized_backout<_Iter_value_t<_BidIt>*> _Backout{

  0005f	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00062	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  00065	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  00068	57		 push	 edi
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0006f	57		 push	 edi
  00070	56		 push	 esi
  00071	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1427 :     _Uninitialized_backout(_NoThrowFwdIt _First_, _NoThrowFwdIt _Last_) : _First(_First_), _Last(_Last_) {}

  00074	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00076	56		 push	 esi
  00077	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  0007c	56		 push	 esi
  0007d	53		 push	 ebx
  0007e	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00086	83 c4 24	 add	 esp, 36			; 00000024H
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3176 : }

  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
$LN5@Buffered_r:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5539 :     if (_UFirst == _UMid) {

  0008e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00091	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
  00094	3b fb		 cmp	 edi, ebx
  00096	75 0a		 jne	 SHORT $LN31@Buffered_r

; 5540 :         return _Last;

  00098	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3175 :     return _STD rotate(_First, _Mid, _Last);

  0009b	8b c7		 mov	 eax, edi
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx

; 3176 : }

  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
$LN31@Buffered_r:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5543 :     if (_UMid == _ULast) {

  000a2	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  000a5	3b de		 cmp	 ebx, esi
  000a7	74 1f		 je	 SHORT $LN30@Buffered_r

; 5544 :         return _First;
; 5545 :     }
; 5546 : 
; 5547 :     if constexpr (_Is_random_iter_v<_FwdIt>) {
; 5548 :         _STD reverse(_UFirst, _UMid);

  000a9	53		 push	 ebx
  000aa	57		 push	 edi
  000ab	e8 00 00 00 00	 call	 ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>

; 5549 :         _STD reverse(_UMid, _ULast);

  000b0	56		 push	 esi
  000b1	53		 push	 ebx
  000b2	e8 00 00 00 00	 call	 ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>

; 5550 :         _STD reverse(_UFirst, _ULast);

  000b7	56		 push	 esi
  000b8	57		 push	 edi
  000b9	e8 00 00 00 00	 call	 ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>

; 5551 :         _Seek_wrapped(_First, _UFirst + (_ULast - _UMid));

  000be	2b f3		 sub	 esi, ebx
  000c0	83 c4 18	 add	 esp, 24			; 00000018H
  000c3	83 e6 f0	 and	 esi, -16		; fffffff0H
  000c6	03 fe		 add	 edi, esi
$LN30@Buffered_r:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3175 :     return _STD rotate(_First, _Mid, _Last);

  000c8	8b c7		 mov	 eax, edi
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx

; 3176 : }

  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z ENDP ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@UTPatchDrawStruct@CMapOutdoor@@U12@@std@@YAXAAUTPatchDrawStruct@CMapOutdoor@@$$QAU12@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@UTPatchDrawStruct@CMapOutdoor@@U12@@std@@YAXAAUTPatchDrawStruct@CMapOutdoor@@$$QAU12@@Z PROC ; std::_Construct_in_place<CMapOutdoor::TPatchDrawStruct,CMapOutdoor::TPatchDrawStruct>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000c	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Construct_in_place@UTPatchDrawStruct@CMapOutdoor@@U12@@std@@YAXAAUTPatchDrawStruct@CMapOutdoor@@$$QAU12@@Z ENDP ; std::_Construct_in_place<CMapOutdoor::TPatchDrawStruct,CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$upper_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@0ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv991 = -24						; size = 4
__Count2$1$ = -20					; size = 4
__Val$1$ = -16						; size = 4
__UMid$1$ = -12						; size = 4
tv1024 = -8						; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1025 = -1						; size = 1
tv1018 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$upper_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@0ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::upper_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3535 : _NODISCARD _CONSTEXPR20 _FwdIt upper_bound(_FwdIt _First, _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3535 : _NODISCARD _CONSTEXPR20 _FwdIt upper_bound(_FwdIt _First, _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00006	83 ec 18	 sub	 esp, 24			; 00000018H
  00009	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000d	2b d3		 sub	 edx, ebx
  0000f	c1 fa 04	 sar	 edx, 4
  00012	89 55 0c	 mov	 DWORD PTR __Last$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3541 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00015	85 d2		 test	 edx, edx
  00017	0f 8e 6f 01 00
	00		 jle	 $LN173@upper_boun
  0001d	56		 push	 esi
  0001e	8b 75 10	 mov	 esi, DWORD PTR __Val$[ebp]
  00021	83 c6 04	 add	 esi, 4
  00024	57		 push	 edi
  00025	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0002b	89 75 f0	 mov	 DWORD PTR __Val$1$[ebp], esi
  0002e	66 90		 npad	 2
$LL2@upper_boun:

; 3542 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00030	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00032	89 7d f8	 mov	 DWORD PTR tv1024[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3542 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00035	d1 e8		 shr	 eax, 1
  00037	89 45 ec	 mov	 DWORD PTR __Count2$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  0003a	c1 e0 04	 shl	 eax, 4
  0003d	03 c3		 add	 eax, ebx

; 5154 :     _First =

  0003f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A

; 1644 :         _Where += _Off;

  00045	89 45 f4	 mov	 DWORD PTR __UMid$1$[ebp], eax

; 5154 :     _First =

  00048	8b c7		 mov	 eax, edi
  0004a	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0004c	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0004d	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00050	50		 push	 eax
  00051	53		 push	 ebx
  00052	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00057	85 c0		 test	 eax, eax
  00059	8b cf		 mov	 ecx, edi
  0005b	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00064	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 363  : 				TTerrainNumVector::iterator rhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), rhs.byTerrainNum);

  00066	8b 45 f4	 mov	 eax, DWORD PTR __UMid$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00069	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0006c	8b c7		 mov	 eax, edi
  0006e	2b c3		 sub	 eax, ebx
  00070	88 4d ff	 mov	 BYTE PTR tv1025[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00073	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00074	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00077	50		 push	 eax
  00078	53		 push	 ebx
  00079	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0007e	85 c0		 test	 eax, eax
  00080	8b cf		 mov	 ecx, edi
  00082	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  0008b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00091	8b de		 mov	 ebx, esi
  00093	2b d9		 sub	 ebx, ecx
  00095	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv991[ebp], 0
  0009c	8b d7		 mov	 edx, edi

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0009e	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  000a1	3b f2		 cmp	 esi, edx
  000a3	0f 44 5d e8	 cmove	 ebx, DWORD PTR tv991[ebp]
  000a7	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000a9	74 04		 je	 SHORT $LN171@upper_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000ab	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000ad	eb 42		 jmp	 SHORT $LN175@upper_boun
$LN171@upper_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000af	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000b5	74 14		 je	 SHORT $LN110@upper_boun

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000b7	8a 45 ff	 mov	 al, BYTE PTR tv1025[ebp]
  000ba	88 02		 mov	 BYTE PTR [edx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000bc	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000c2	47		 inc	 edi
  000c3	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000c9	eb 1b		 jmp	 SHORT $LN109@upper_boun
$LN110@upper_boun:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000cb	8b 45 f4	 mov	 eax, DWORD PTR __UMid$1$[ebp]
  000ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000d3	83 c0 04	 add	 eax, 4
  000d6	50		 push	 eax
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000dd	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000e3	8b 55 f8	 mov	 edx, DWORD PTR tv1024[ebp]
$LN109@upper_boun:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ec	8b c7		 mov	 eax, edi
  000ee	2b c1		 sub	 eax, ecx
  000f0	48		 dec	 eax
$LN175@upper_boun:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000f1	3b f2		 cmp	 esi, edx
  000f3	89 45 f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  000f6	8b 75 f0	 mov	 esi, DWORD PTR __Val$1$[ebp]
  000f9	75 63		 jne	 SHORT $LN19@upper_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000fb	8b c7		 mov	 eax, edi
  000fd	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000ff	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00100	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00103	50		 push	 eax
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0010a	85 c0		 test	 eax, eax
  0010c	8b cf		 mov	 ecx, edi
  0010e	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00111	51		 push	 ecx
  00112	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00117	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00119	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  0011c	3b df		 cmp	 ebx, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  0011e	74 08		 je	 SHORT $LN172@upper_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  00120	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00126	eb 36		 jmp	 SHORT $LN19@upper_boun
$LN172@upper_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00128	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0012e	74 13		 je	 SHORT $LN162@upper_boun

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00130	8a 06		 mov	 al, BYTE PTR [esi]
  00132	88 07		 mov	 BYTE PTR [edi], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00134	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0013a	47		 inc	 edi
  0013b	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00141	eb 12		 jmp	 SHORT $LN161@upper_boun
$LN162@upper_boun:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00143	56		 push	 esi
  00144	57		 push	 edi
  00145	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0014a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0014f	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN161@upper_boun:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00155	8b df		 mov	 ebx, edi
  00157	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0015d	4b		 dec	 ebx
$LN19@upper_boun:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0015e	3b 5d f8	 cmp	 ebx, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3544 :         if (_Pred(_Val, *_UMid)) {

  00161	73 08		 jae	 SHORT $LN4@upper_boun

; 3545 :             _Count = _Count2;

  00163	8b 55 ec	 mov	 edx, DWORD PTR __Count2$1$[ebp]

; 3546 :         } else { // try top half

  00166	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00169	eb 14		 jmp	 SHORT $LN176@upper_boun
$LN4@upper_boun:

; 3547 :             _UFirst = _Next_iter(_UMid);

  0016b	8b 5d f4	 mov	 ebx, DWORD PTR __UMid$1$[ebp]

; 3548 :             _Count -= _Count2 + 1;

  0016e	83 c9 ff	 or	 ecx, -1
  00171	2b 4d ec	 sub	 ecx, DWORD PTR __Count2$1$[ebp]
  00174	83 c3 10	 add	 ebx, 16			; 00000010H
  00177	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0017a	89 5d 08	 mov	 DWORD PTR __First$[ebp], ebx
  0017d	03 d1		 add	 edx, ecx
$LN176@upper_boun:

; 3541 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  0017f	89 55 0c	 mov	 DWORD PTR __Last$[ebp], edx
  00182	85 d2		 test	 edx, edx
  00184	0f 8f a6 fe ff
	ff		 jg	 $LL2@upper_boun

; 3549 :         }
; 3550 :     }
; 3551 : 
; 3552 :     _Seek_wrapped(_First, _UFirst);
; 3553 :     return _First;

  0018a	5f		 pop	 edi
  0018b	5e		 pop	 esi
$LN173@upper_boun:

; 3554 : }

  0018c	8b c3		 mov	 eax, ebx
  0018e	5b		 pop	 ebx
  0018f	8b e5		 mov	 esp, ebp
  00191	5d		 pop	 ebp
  00192	c3		 ret	 0
??$upper_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@0ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::upper_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
__Firstn$ = 40						; size = 4
__Lastn$ = 44						; size = 4
__Count1n$ = 48						; size = 4
__Count2n$ = 52						; size = 4
??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z PROC ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3814 :     _BidIt _Firstn, _BidIt _Lastn, _Iter_diff_t<_BidIt> _Count1n, _Iter_diff_t<_BidIt> _Count2n) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3815 :     // common block of _Buffered_inplace_merge_divide_and_conquer, below
; 3816 :     using _Diff  = _Iter_diff_t<_BidIt>;
; 3817 :     _BidIt _Midn = _Buffered_rotate_unchecked(_Firstn, _Mid, _Lastn, static_cast<_Diff>(_Count1 - _Count1n), _Count2n,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00006	2b 45 30	 sub	 eax, DWORD PTR __Count1n$[ebp]
  00009	53		 push	 ebx
  0000a	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0000d	89 45 14	 mov	 DWORD PTR __Count1$[ebp], eax
  00010	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00013	ff 75 34	 push	 DWORD PTR __Count2n$[ebp]
  00016	50		 push	 eax
  00017	ff 75 2c	 push	 DWORD PTR __Lastn$[ebp]
  0001a	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0001d	ff 75 28	 push	 DWORD PTR __Firstn$[ebp]
  00020	e8 00 00 00 00	 call	 ??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>

; 3818 :         _Temp_ptr, _Capacity); // rearrange middle
; 3819 :     _Buffered_inplace_merge_unchecked(

  00025	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00028	8b d8		 mov	 ebx, eax
  0002a	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0002d	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00030	ff 75 34	 push	 DWORD PTR __Count2n$[ebp]
  00033	ff 75 30	 push	 DWORD PTR __Count1n$[ebp]
  00036	53		 push	 ebx
  00037	ff 75 28	 push	 DWORD PTR __Firstn$[ebp]
  0003a	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0003d	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 3820 :         _First, _Firstn, _Midn, _Count1n, _Count2n, _Temp_ptr, _Capacity, _Pred); // merge each new part
; 3821 :     _Buffered_inplace_merge_unchecked(_Midn, _Lastn, _Last, static_cast<_Diff>(_Count1 - _Count1n),

  00042	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00045	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00048	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0004b	2b 45 34	 sub	 eax, DWORD PTR __Count2n$[ebp]
  0004e	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00051	50		 push	 eax
  00052	ff 75 14	 push	 DWORD PTR __Count1$[ebp]
  00055	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00058	ff 75 2c	 push	 DWORD PTR __Lastn$[ebp]
  0005b	53		 push	 ebx
  0005c	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00061	83 c4 5c	 add	 esp, 92			; 0000005cH
  00064	5b		 pop	 ebx

; 3822 :         static_cast<_Diff>(_Count2 - _Count2n), _Temp_ptr, _Capacity, _Pred);
; 3823 : }

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ENDP ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$lower_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv991 = -24						; size = 4
__Count2$1$ = -20					; size = 4
__UMid$1$ = -16						; size = 4
__Val$1$ = -12						; size = 4
tv1023 = -8						; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1024 = -1						; size = 1
tv1017 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$lower_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::lower_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 5678 : _NODISCARD _CONSTEXPR20 _FwdIt lower_bound(_FwdIt _First, const _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]

; 5678 : _NODISCARD _CONSTEXPR20 _FwdIt lower_bound(_FwdIt _First, const _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00006	83 ec 18	 sub	 esp, 24			; 00000018H

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	2b ca		 sub	 ecx, edx
  0000e	c1 f9 04	 sar	 ecx, 4
  00011	89 4d 0c	 mov	 DWORD PTR __Last$[ebp], ecx

; 5679 :     // find first element not before _Val, using _Pred
; 5680 :     _Adl_verify_range(_First, _Last);
; 5681 :     auto _UFirst                = _Get_unwrapped(_First);
; 5682 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5683 : 
; 5684 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00014	85 c9		 test	 ecx, ecx
  00016	0f 8e 72 01 00
	00		 jle	 $LN173@lower_boun
  0001c	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	83 c0 04	 add	 eax, 4
  00024	57		 push	 edi
  00025	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0002b	89 45 f4	 mov	 DWORD PTR __Val$1$[ebp], eax
  0002e	66 90		 npad	 2
$LL2@lower_boun:

; 5154 :     _First =

  00030	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A

; 5685 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00036	8b c1		 mov	 eax, ecx
  00038	d1 e8		 shr	 eax, 1
  0003a	89 45 ec	 mov	 DWORD PTR __Count2$1$[ebp], eax

; 1644 :         _Where += _Off;

  0003d	c1 e0 04	 shl	 eax, 4
  00040	03 c2		 add	 eax, edx

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00042	89 7d f8	 mov	 DWORD PTR tv1023[ebp], edi

; 1644 :         _Where += _Off;

  00045	89 45 f0	 mov	 DWORD PTR __UMid$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 362  : 				TTerrainNumVector::iterator lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00048	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0004b	8b c7		 mov	 eax, edi
  0004d	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0004f	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00050	0f b6 01	 movzx	 eax, BYTE PTR [ecx]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00053	50		 push	 eax
  00054	53		 push	 ebx
  00055	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0005a	85 c0		 test	 eax, eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00067	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00069	8b 45 f4	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0006c	8a 08		 mov	 cl, BYTE PTR [eax]
  0006e	8b c7		 mov	 eax, edi
  00070	2b c3		 sub	 eax, ebx
  00072	88 4d ff	 mov	 BYTE PTR tv1024[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00075	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00076	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00079	50		 push	 eax
  0007a	53		 push	 ebx
  0007b	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00080	85 c0		 test	 eax, eax
  00082	8b cf		 mov	 ecx, edi
  00084	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  0008d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00093	8b de		 mov	 ebx, esi
  00095	2b d9		 sub	 ebx, ecx
  00097	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv991[ebp], 0
  0009e	8b d7		 mov	 edx, edi

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000a0	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  000a3	3b f2		 cmp	 esi, edx
  000a5	0f 44 5d e8	 cmove	 ebx, DWORD PTR tv991[ebp]
  000a9	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000ab	74 04		 je	 SHORT $LN171@lower_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000ad	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000af	eb 3e		 jmp	 SHORT $LN174@lower_boun
$LN171@lower_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000b1	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000b7	74 14		 je	 SHORT $LN110@lower_boun

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000b9	8a 45 ff	 mov	 al, BYTE PTR tv1024[ebp]
  000bc	88 02		 mov	 BYTE PTR [edx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000be	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000c4	47		 inc	 edi
  000c5	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000cb	eb 17		 jmp	 SHORT $LN109@lower_boun
$LN110@lower_boun:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000cd	ff 75 f4	 push	 DWORD PTR __Val$1$[ebp]
  000d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000db	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000e1	8b 55 f8	 mov	 edx, DWORD PTR tv1023[ebp]
$LN109@lower_boun:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ea	8b c7		 mov	 eax, edi
  000ec	2b c1		 sub	 eax, ecx
  000ee	48		 dec	 eax
$LN174@lower_boun:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000ef	89 45 f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  000f2	3b f2		 cmp	 esi, edx
  000f4	75 69		 jne	 SHORT $LN19@lower_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000f6	8b 75 f0	 mov	 esi, DWORD PTR __UMid$1$[ebp]
  000f9	8b c7		 mov	 eax, edi
  000fb	83 c6 04	 add	 esi, 4
  000fe	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00100	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00101	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00104	50		 push	 eax
  00105	51		 push	 ecx
  00106	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0010b	85 c0		 test	 eax, eax
  0010d	8b cf		 mov	 ecx, edi
  0010f	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00112	51		 push	 ecx
  00113	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00118	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0011a	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  0011d	3b df		 cmp	 ebx, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  0011f	74 08		 je	 SHORT $LN172@lower_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  00121	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00127	eb 36		 jmp	 SHORT $LN19@lower_boun
$LN172@lower_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00129	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0012f	74 13		 je	 SHORT $LN162@lower_boun

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00131	8a 06		 mov	 al, BYTE PTR [esi]
  00133	88 07		 mov	 BYTE PTR [edi], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00135	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0013b	47		 inc	 edi
  0013c	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00142	eb 12		 jmp	 SHORT $LN161@lower_boun
$LN162@lower_boun:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00144	56		 push	 esi
  00145	57		 push	 edi
  00146	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0014b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00150	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN161@lower_boun:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00156	8b df		 mov	 ebx, edi
  00158	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0015e	4b		 dec	 ebx
$LN19@lower_boun:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0015f	3b 5d f8	 cmp	 ebx, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5687 :         if (_Pred(*_UMid, _Val)) { // try top half

  00162	73 16		 jae	 SHORT $LN4@lower_boun

; 5688 :             _UFirst = _Next_iter(_UMid);

  00164	8b 55 f0	 mov	 edx, DWORD PTR __UMid$1$[ebp]

; 5689 :             _Count -= _Count2 + 1;

  00167	83 c8 ff	 or	 eax, -1
  0016a	2b 45 ec	 sub	 eax, DWORD PTR __Count2$1$[ebp]
  0016d	83 c2 10	 add	 edx, 16			; 00000010H
  00170	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00173	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
  00176	03 c8		 add	 ecx, eax

; 5690 :         } else {

  00178	eb 06		 jmp	 SHORT $LN175@lower_boun
$LN4@lower_boun:

; 5691 :             _Count = _Count2;

  0017a	8b 4d ec	 mov	 ecx, DWORD PTR __Count2$1$[ebp]
  0017d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
$LN175@lower_boun:

; 5679 :     // find first element not before _Val, using _Pred
; 5680 :     _Adl_verify_range(_First, _Last);
; 5681 :     auto _UFirst                = _Get_unwrapped(_First);
; 5682 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5683 : 
; 5684 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00180	89 4d 0c	 mov	 DWORD PTR __Last$[ebp], ecx
  00183	85 c9		 test	 ecx, ecx
  00185	0f 8f a5 fe ff
	ff		 jg	 $LL2@lower_boun

; 5692 :         }
; 5693 :     }
; 5694 : 
; 5695 :     _Seek_wrapped(_First, _UFirst);
; 5696 :     return _First;

  0018b	5f		 pop	 edi
  0018c	5e		 pop	 esi
  0018d	5b		 pop	 ebx
$LN173@lower_boun:

; 5697 : }

  0018e	8b c2		 mov	 eax, edx
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
??$lower_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::lower_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
;	COMDAT ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z PROC		; std::swap<float,long,0>, COMDAT

; 336  : void swap(pair<_Ty1, _Ty2>& _Left, pair<_Ty1, _Ty2>& _Right) noexcept(noexcept(_Left.swap(_Right))) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 320  :         if (this != _STD addressof(_Right)) {

  00003	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]

; 336  : void swap(pair<_Ty1, _Ty2>& _Left, pair<_Ty1, _Ty2>& _Right) noexcept(noexcept(_Left.swap(_Right))) {

  00006	56		 push	 esi

; 320  :         if (this != _STD addressof(_Right)) {

  00007	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000a	3b d6		 cmp	 edx, esi
  0000c	74 18		 je	 SHORT $LN13@swap

; 107  :     _Left    = _STD move(_Right);

  0000e	8b 06		 mov	 eax, DWORD PTR [esi]
  00010	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00014	89 02		 mov	 DWORD PTR [edx], eax
  00016	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 108  :     _Right   = _STD move(_Tmp);

  00019	f3 0f 11 06	 movss	 DWORD PTR [esi], xmm0

; 106  :     _Ty _Tmp = _STD move(_Left);

  0001d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 107  :     _Left    = _STD move(_Right);

  00020	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00023	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
$LN13@swap:
  00026	5e		 pop	 esi

; 337  :     _Left.swap(_Right);
; 338  : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ENDP		; std::swap<float,long,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3827 :     _Iter_diff_t<_BidIt> _Count2, _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3828 :     // merge sorted [_First, _Mid) with sorted [_Mid, _Last), using _Pred
; 3829 :     // usual invariants apply
; 3830 :     using _Diff = _Iter_diff_t<_BidIt>;
; 3831 :     if (_Count1 <= _Count2) {

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00006	8b 4d 18	 mov	 ecx, DWORD PTR __Count2$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  0000f	3b c1		 cmp	 eax, ecx
  00011	7f 49		 jg	 SHORT $LN2@Buffered_i

; 3834 :         const _BidIt _Lastn  = _STD lower_bound(_Mid, _Last, *_Firstn, _Pred);

  00013	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  00016	8b d8		 mov	 ebx, eax
  00018	d1 fb		 sar	 ebx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  0001a	8b f3		 mov	 esi, ebx
  0001c	c1 e6 04	 shl	 esi, 4
  0001f	03 75 08	 add	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3834 :         const _BidIt _Lastn  = _STD lower_bound(_Mid, _Last, *_Firstn, _Pred);

  00022	56		 push	 esi
  00023	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ??$lower_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::lower_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0002c	8b c8		 mov	 ecx, eax
  0002e	2b cf		 sub	 ecx, edi
  00030	c1 f9 04	 sar	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3835 :         _Buffered_inplace_merge_divide_and_conquer2(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred,

  00033	51		 push	 ecx
  00034	53		 push	 ebx
  00035	50		 push	 eax
  00036	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00039	56		 push	 esi
  0003a	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  0003d	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  00040	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00043	50		 push	 eax
  00044	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00047	50		 push	 eax
  00048	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0004b	57		 push	 edi
  0004c	ff 75 08	 push	 DWORD PTR __First$[ebp]

; 3842 :             _Firstn, _Lastn, _STD distance(_First, _Firstn), _Count2n);
; 3843 :     }
; 3844 : }

  0004f	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00054	83 c4 40	 add	 esp, 64			; 00000040H
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN2@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  0005c	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3838 :         const _Diff _Count2n = _Count2 >> 1; // shift for codegen

  0005f	8b f1		 mov	 esi, ecx

; 3840 :         const _BidIt _Firstn = _STD upper_bound(_First, _Mid, *_Lastn, _Pred);

  00061	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00064	d1 fe		 sar	 esi, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00066	8b fe		 mov	 edi, esi
  00068	c1 e7 04	 shl	 edi, 4
  0006b	03 f8		 add	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3840 :         const _BidIt _Firstn = _STD upper_bound(_First, _Mid, *_Lastn, _Pred);

  0006d	57		 push	 edi
  0006e	50		 push	 eax
  0006f	53		 push	 ebx
  00070	e8 00 00 00 00	 call	 ??$upper_bound@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@0ABU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::upper_bound<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 3841 :         _Buffered_inplace_merge_divide_and_conquer2(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred,

  00075	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00076	8b c8		 mov	 ecx, eax
  00078	2b cb		 sub	 ecx, ebx
  0007a	c1 f9 04	 sar	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3841 :         _Buffered_inplace_merge_divide_and_conquer2(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred,

  0007d	51		 push	 ecx
  0007e	57		 push	 edi
  0007f	50		 push	 eax
  00080	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00083	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00086	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  00089	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0008c	50		 push	 eax
  0008d	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00090	50		 push	 eax
  00091	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00094	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00097	53		 push	 ebx

; 3842 :             _Firstn, _Lastn, _STD distance(_First, _Firstn), _Count2n);
; 3843 :     }
; 3844 : }

  00098	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0009d	83 c4 40	 add	 esp, 64			; 00000040H
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv1086 = -24						; size = 4
tv1082 = -20						; size = 4
tv1061 = -16						; size = 4
_rhsTerrainNumOrder$1$ = -12				; size = 4
tv1096 = -12						; size = 4
__Right_last$1$ = -8					; size = 4
tv1085 = -1						; size = 1
tv1081 = -1						; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Pred$ = 24						; size = 1
??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3775 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 3776 :     // move the range [_Mid, _Last) to _Temp_ptr, and merge it with [_First, _Mid) to _Last, using _Pred
; 3777 :     // usual invariants apply
; 3778 :     using _Ptr_ty = _Iter_value_t<_BidIt>*;
; 3779 :     _Uninitialized_backout<_Ptr_ty> _Backout{_Temp_ptr, _Uninitialized_move_unchecked(_Mid, _Last, _Temp_ptr)};

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  00012	53		 push	 ebx
  00013	57		 push	 edi
  00014	e8 00 00 00 00	 call	 ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>

; 3780 :     *--_Last                   = _STD move(*--_Mid); // move the highest element into position

  00019	0f 10 47 f0	 movups	 xmm0, XMMWORD PTR [edi-16]
  0001d	83 eb 10	 sub	 ebx, 16			; 00000010H
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	89 5d 10	 mov	 DWORD PTR __Last$[ebp], ebx

; 3781 :     const _Ptr_ty _Right_first = _Temp_ptr;
; 3782 :     _Ptr_ty _Right_last        = _Backout._Last - 1;
; 3783 :     --_Mid;

  00026	83 ef 20	 sub	 edi, 32			; 00000020H
  00029	8d 48 f0	 lea	 ecx, DWORD PTR [eax-16]
  0002c	89 4d f8	 mov	 DWORD PTR __Right_last$1$[ebp], ecx
  0002f	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0
$LN186@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00032	89 7d 0c	 mov	 DWORD PTR __Mid$[ebp], edi
  00035	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL2@Inplace_me:
  00040	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5154 :     _First =

  00046	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  00049	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0004f	8b c3		 mov	 eax, ebx
  00051	2b c1		 sub	 eax, ecx

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00053	89 5d f4	 mov	 DWORD PTR tv1096[ebp], ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00056	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00057	0f b6 02	 movzx	 eax, BYTE PTR [edx]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0005a	50		 push	 eax
  0005b	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0005c	89 55 e8	 mov	 DWORD PTR tv1086[ebp], edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0005f	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00064	85 c0		 test	 eax, eax
  00066	8b cb		 mov	 ecx, ebx
  00068	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00071	8a 57 04	 mov	 dl, BYTE PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00074	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00076	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0007c	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0007f	89 45 ec	 mov	 DWORD PTR tv1082[ebp], eax
  00082	8b c3		 mov	 eax, ebx
  00084	2b c1		 sub	 eax, ecx
  00086	88 55 ff	 mov	 BYTE PTR tv1081[ebp], dl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00089	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0008a	0f b6 c2	 movzx	 eax, dl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0008d	50		 push	 eax
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00094	85 c0		 test	 eax, eax
  00096	8b cb		 mov	 ecx, ebx
  00098	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000a7	8b fe		 mov	 edi, esi
  000a9	2b f9		 sub	 edi, ecx
  000ab	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv1061[ebp], 0
  000b2	8b d3		 mov	 edx, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000b4	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  000b7	3b f2		 cmp	 esi, edx
  000b9	0f 44 7d f0	 cmove	 edi, DWORD PTR tv1061[ebp]
  000bd	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000bf	74 04		 je	 SHORT $LN183@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000c1	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000c3	eb 3e		 jmp	 SHORT $LN185@Inplace_me
$LN183@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000c5	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000cb	74 14		 je	 SHORT $LN111@Inplace_me

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000cd	8a 45 ff	 mov	 al, BYTE PTR tv1081[ebp]
  000d0	88 02		 mov	 BYTE PTR [edx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000d2	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000d8	43		 inc	 ebx
  000d9	89 1d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ebx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000df	eb 17		 jmp	 SHORT $LN110@Inplace_me
$LN111@Inplace_me:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000e1	ff 75 ec	 push	 DWORD PTR tv1082[ebp]
  000e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000e9	52		 push	 edx
  000ea	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000ef	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000f5	8b 55 f4	 mov	 edx, DWORD PTR tv1096[ebp]
$LN110@Inplace_me:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000fe	8b c3		 mov	 eax, ebx
  00100	2b c1		 sub	 eax, ecx
  00102	48		 dec	 eax
$LN185@Inplace_me:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  00103	89 45 f4	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  00106	3b f2		 cmp	 esi, edx
  00108	75 64		 jne	 SHORT $LN20@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0010a	8b 75 e8	 mov	 esi, DWORD PTR tv1086[ebp]
  0010d	8b c3		 mov	 eax, ebx
  0010f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00111	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00112	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00115	50		 push	 eax
  00116	51		 push	 ecx
  00117	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0011c	85 c0		 test	 eax, eax
  0011e	8b cb		 mov	 ecx, ebx
  00120	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00123	51		 push	 ecx
  00124	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00129	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0012b	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  0012e	3b fb		 cmp	 edi, ebx

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00130	74 08		 je	 SHORT $LN184@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  00132	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00138	eb 34		 jmp	 SHORT $LN20@Inplace_me
$LN184@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0013a	3b 1d 08 00 00
	00		 cmp	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00140	74 13		 je	 SHORT $LN163@Inplace_me

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00142	8a 06		 mov	 al, BYTE PTR [esi]
  00144	88 03		 mov	 BYTE PTR [ebx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00146	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0014c	47		 inc	 edi
  0014d	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00153	eb 12		 jmp	 SHORT $LN162@Inplace_me
$LN163@Inplace_me:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00155	56		 push	 esi
  00156	53		 push	 ebx
  00157	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0015c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00161	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN162@Inplace_me:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00167	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0016d	4f		 dec	 edi
$LN20@Inplace_me:

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0016e	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3785 :         if (_Pred(*_Right_last, *_Mid)) { // merge from the left partition

  00171	8b 4d f8	 mov	 ecx, DWORD PTR __Right_last$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00174	83 c0 f0	 add	 eax, -16		; fffffff0H
  00177	89 45 10	 mov	 DWORD PTR __Last$[ebp], eax
  0017a	3b 7d f4	 cmp	 edi, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3785 :         if (_Pred(*_Right_last, *_Mid)) { // merge from the left partition

  0017d	73 16		 jae	 SHORT $LN5@Inplace_me

; 3786 :             *--_Last = _STD move(*_Mid);

  0017f	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  00182	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  00185	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 3787 :             if (_First == _Mid) {

  00188	39 7d 08	 cmp	 DWORD PTR __First$[ebp], edi
  0018b	74 23		 je	 SHORT $LN179@Inplace_me

; 3789 :                 _Move_backward_unchecked(_Right_first, _Right_last, _Last); // move any head (and lowest element)
; 3790 :                 return;
; 3791 :             }
; 3792 : 
; 3793 :             --_Mid;

  0018d	83 ef 10	 sub	 edi, 16			; 00000010H

; 3794 :         } else { // merge from the right partition

  00190	e9 9d fe ff ff	 jmp	 $LN186@Inplace_me
$LN5@Inplace_me:

; 3795 :             *--_Last = _STD move(*_Right_last);

  00195	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]

; 3796 :             --_Right_last;
; 3797 :             if (_Right_first == _Right_last) { // we can't compare with *_Right_first, but we know it is lowest

  00198	8b 5d 14	 mov	 ebx, DWORD PTR __Temp_ptr$[ebp]
  0019b	83 e9 10	 sub	 ecx, 16			; 00000010H
  0019e	89 4d f8	 mov	 DWORD PTR __Right_last$1$[ebp], ecx
  001a1	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  001a4	3b d9		 cmp	 ebx, ecx
  001a6	74 25		 je	 SHORT $LN180@Inplace_me

; 3801 :                 return;
; 3802 :             }
; 3803 :         }
; 3804 :     }

  001a8	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  001ab	e9 90 fe ff ff	 jmp	 $LL2@Inplace_me
$LN179@Inplace_me:

; 3788 :                 *--_Last = _STD move(*_Right_last); // to make [_Right_first, _Right_last) a half-open range

  001b0	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  001b3	83 e8 10	 sub	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001b6	50		 push	 eax
  001b7	51		 push	 ecx
  001b8	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3788 :                 *--_Last = _STD move(*_Right_last); // to make [_Right_first, _Right_last) a half-open range

  001bb	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001be	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3805 : }

  001c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c6	5f		 pop	 edi
  001c7	5e		 pop	 esi
  001c8	5b		 pop	 ebx
  001c9	8b e5		 mov	 esp, ebp
  001cb	5d		 pop	 ebp
  001cc	c3		 ret	 0
$LN180@Inplace_me:

; 3798 :                 *--_Last = _STD move(*_Mid); // restore half-open range [_First, _Mid)

  001cd	8b 4d 0c	 mov	 ecx, DWORD PTR __Mid$[ebp]
  001d0	83 e8 10	 sub	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001d3	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  001d6	50		 push	 eax
  001d7	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3798 :                 *--_Last = _STD move(*_Mid); // restore half-open range [_First, _Mid)

  001d8	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001db	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3798 :                 *--_Last = _STD move(*_Mid); // restore half-open range [_First, _Mid)

  001dc	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001df	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3800 :                 *_First = _STD move(*_Right_first);

  001e4	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 3805 : }

  001e7	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ea	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  001ed	5f		 pop	 edi
  001ee	5e		 pop	 esi
  001ef	5b		 pop	 ebx
  001f0	8b e5		 mov	 esp, ebp
  001f2	5d		 pop	 ebp
  001f3	c3		 ret	 0
??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv1059 = -24						; size = 4
tv1055 = -20						; size = 4
tv1036 = -16						; size = 4
__Backout$$sroa$767$1$ = -12				; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1069 = -8						; size = 4
tv1058 = -1						; size = 1
tv1054 = -1						; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Pred$ = 24						; size = 1
??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3742 :     _Pr _Pred) { // move the range [_First, _Mid) to _Temp_ptr, and merge it with [_Mid, _Last) to _First, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 3743 :                  // usual invariants apply
; 3744 :     using _Ptr_ty = _Iter_value_t<_BidIt>*;
; 3745 :     _Uninitialized_backout<_Ptr_ty> _Backout{_Temp_ptr, _Uninitialized_move_unchecked(_First, _Mid, _Temp_ptr)};

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  0000b	57		 push	 edi
  0000c	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  0000f	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	e8 00 00 00 00	 call	 ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>

; 3748 :     *_First                  = _STD move(*_Mid); // the lowest element is now in position

  00019	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1427 :     _Uninitialized_backout(_NoThrowFwdIt _First_, _NoThrowFwdIt _Last_) : _First(_First_), _Last(_Last_) {}

  0001f	89 45 f4	 mov	 DWORD PTR __Backout$$sroa$767$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3748 :     *_First                  = _STD move(*_Mid); // the lowest element is now in position

  00022	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 3749 :     ++_First;

  00025	83 c7 10	 add	 edi, 16			; 00000010H

; 3750 :     ++_Mid;

  00028	83 c6 10	 add	 esi, 16			; 00000010H
  0002b	89 7d 08	 mov	 DWORD PTR __First$[ebp], edi
  0002e	89 75 0c	 mov	 DWORD PTR __Mid$[ebp], esi
$LL2@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00031	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5154 :     _First =

  00037	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00040	8b c3		 mov	 eax, ebx
  00042	2b c7		 sub	 eax, edi

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00044	89 5d f8	 mov	 DWORD PTR tv1069[ebp], ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00047	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00048	0f b6 01	 movzx	 eax, BYTE PTR [ecx]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0004b	50		 push	 eax
  0004c	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0004d	89 4d e8	 mov	 DWORD PTR tv1059[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00050	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00055	85 c0		 test	 eax, eax
  00057	8b cb		 mov	 ecx, ebx
  00059	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00062	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00064	8b 45 14	 mov	 eax, DWORD PTR __Temp_ptr$[ebp]
  00067	83 c0 04	 add	 eax, 4
  0006a	89 45 ec	 mov	 DWORD PTR tv1055[ebp], eax
  0006d	8a 08		 mov	 cl, BYTE PTR [eax]
  0006f	8b c3		 mov	 eax, ebx
  00071	2b c7		 sub	 eax, edi
  00073	88 4d ff	 mov	 BYTE PTR tv1054[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00076	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00077	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0007a	50		 push	 eax
  0007b	57		 push	 edi
  0007c	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00081	85 c0		 test	 eax, eax
  00083	8b cb		 mov	 ecx, ebx
  00085	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  0008e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00094	8b fe		 mov	 edi, esi
  00096	2b f9		 sub	 edi, ecx
  00098	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv1036[ebp], 0
  0009f	8b d3		 mov	 edx, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000a1	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  000a4	3b f2		 cmp	 esi, edx
  000a6	0f 44 7d f0	 cmove	 edi, DWORD PTR tv1036[ebp]
  000aa	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000ac	74 04		 je	 SHORT $LN185@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000ae	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000b0	eb 3e		 jmp	 SHORT $LN187@Inplace_me
$LN185@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000b2	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000b8	74 14		 je	 SHORT $LN111@Inplace_me

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000ba	8a 45 ff	 mov	 al, BYTE PTR tv1054[ebp]
  000bd	88 02		 mov	 BYTE PTR [edx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000bf	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000c5	43		 inc	 ebx
  000c6	89 1d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ebx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000cc	eb 17		 jmp	 SHORT $LN110@Inplace_me
$LN111@Inplace_me:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ce	ff 75 ec	 push	 DWORD PTR tv1055[ebp]
  000d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000d6	52		 push	 edx
  000d7	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000dc	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000e2	8b 55 f8	 mov	 edx, DWORD PTR tv1069[ebp]
$LN110@Inplace_me:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000eb	8b c3		 mov	 eax, ebx
  000ed	2b c1		 sub	 eax, ecx
  000ef	48		 dec	 eax
$LN187@Inplace_me:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000f0	89 45 f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  000f3	3b f2		 cmp	 esi, edx
  000f5	75 64		 jne	 SHORT $LN20@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000f7	8b 75 e8	 mov	 esi, DWORD PTR tv1059[ebp]
  000fa	8b c3		 mov	 eax, ebx
  000fc	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000fe	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000ff	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00102	50		 push	 eax
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00109	85 c0		 test	 eax, eax
  0010b	8b cb		 mov	 ecx, ebx
  0010d	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00110	51		 push	 ecx
  00111	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00116	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00118	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  0011b	3b fb		 cmp	 edi, ebx

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  0011d	74 08		 je	 SHORT $LN186@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0011f	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00125	eb 34		 jmp	 SHORT $LN20@Inplace_me
$LN186@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00127	3b 1d 08 00 00
	00		 cmp	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0012d	74 13		 je	 SHORT $LN163@Inplace_me

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0012f	8a 06		 mov	 al, BYTE PTR [esi]
  00131	88 03		 mov	 BYTE PTR [ebx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00133	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00139	47		 inc	 edi
  0013a	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00140	eb 12		 jmp	 SHORT $LN162@Inplace_me
$LN163@Inplace_me:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00142	56		 push	 esi
  00143	53		 push	 ebx
  00144	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00149	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0014e	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN162@Inplace_me:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00154	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0015a	4f		 dec	 edi
$LN20@Inplace_me:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0015b	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0015e	8d 50 10	 lea	 edx, DWORD PTR [eax+16]
  00161	3b 7d f8	 cmp	 edi, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3752 :         if (_Pred(*_Mid, *_Left_first)) { // take element from the right partition

  00164	73 2a		 jae	 SHORT $LN5@Inplace_me

; 3753 :             *_First = _STD move(*_Mid);

  00166	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  00169	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]

; 3754 :             ++_First;
; 3755 :             ++_Mid;

  0016c	83 c6 10	 add	 esi, 16			; 00000010H
  0016f	89 75 0c	 mov	 DWORD PTR __Mid$[ebp], esi
  00172	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 3756 :             if (_Mid == _Last) {

  00175	3b 75 10	 cmp	 esi, DWORD PTR __Last$[ebp]
  00178	75 32		 jne	 SHORT $LN8@Inplace_me
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  0017a	52		 push	 edx
  0017b	ff 75 f4	 push	 DWORD PTR __Backout$$sroa$767$1$[ebp]
  0017e	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  00181	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3771 : }

  00186	83 c4 0c	 add	 esp, 12			; 0000000cH
  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	5b		 pop	 ebx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
$LN5@Inplace_me:

; 3757 :                 _Move_unchecked(_Left_first, _Backout._Last, _First); // move any tail (and the highest element)
; 3758 :                 return;
; 3759 :             }
; 3760 :         } else { // take element from the left partition
; 3761 :             *_First = _STD move(*_Left_first);

  00190	8b 4d 14	 mov	 ecx, DWORD PTR __Temp_ptr$[ebp]

; 3762 :             ++_First;
; 3763 :             ++_Left_first;
; 3764 :             if (_Left_first == _Left_last) {

  00193	8b 5d f4	 mov	 ebx, DWORD PTR __Backout$$sroa$767$1$[ebp]
  00196	83 c3 f0	 add	 ebx, -16		; fffffff0H
  00199	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  0019c	83 c1 10	 add	 ecx, 16			; 00000010H
  0019f	89 4d 14	 mov	 DWORD PTR __Temp_ptr$[ebp], ecx
  001a2	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  001a5	3b cb		 cmp	 ecx, ebx
  001a7	74 0b		 je	 SHORT $LN182@Inplace_me
  001a9	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
$LN8@Inplace_me:

; 3767 :                 return;
; 3768 :             }
; 3769 :         }
; 3770 :     }

  001ac	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
  001af	e9 7d fe ff ff	 jmp	 $LL2@Inplace_me
$LN182@Inplace_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  001b4	52		 push	 edx
  001b5	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  001b8	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  001bb	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3766 :                 *_Move_unchecked(_Mid, _Last, _First) = _STD move(*_Left_last);

  001c0	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 3771 : }

  001c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c6	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c3		 ret	 0
??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv1054 = -24						; size = 4
tv1050 = -20						; size = 4
tv1032 = -16						; size = 4
__Next$1$ = -12						; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1064 = -8						; size = 4
tv1053 = -1						; size = 1
tv1049 = -1						; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4186 : _OutIt _Merge_move(_InIt _First, const _InIt _Mid, const _InIt _Last, _OutIt _Dest, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 4187 :     // move merging adjacent ranges [_First, _Mid) and [_Mid, _Last) to _Dest, both using _Pred
; 4188 :     // pre: _First != _Mid && _Mid != _Last
; 4189 :     _InIt _Next = _Mid;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	89 45 f4	 mov	 DWORD PTR __Next$1$[ebp], eax
  0000e	57		 push	 edi
  0000f	90		 npad	 1
$LL2@Merge_move:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00010	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5154 :     _First =

  00016	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0001f	8b c3		 mov	 eax, ebx
  00021	2b c7		 sub	 eax, edi

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00023	89 5d f8	 mov	 DWORD PTR tv1064[ebp], ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00026	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00027	0f b6 01	 movzx	 eax, BYTE PTR [ecx]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0002a	50		 push	 eax
  0002b	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0002c	89 4d e8	 mov	 DWORD PTR tv1054[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0002f	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00034	85 c0		 test	 eax, eax
  00036	8b cb		 mov	 ecx, ebx
  00038	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00041	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00043	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 45 ec	 mov	 DWORD PTR tv1050[ebp], eax
  0004c	8a 08		 mov	 cl, BYTE PTR [eax]
  0004e	8b c3		 mov	 eax, ebx
  00050	2b c7		 sub	 eax, edi
  00052	88 4d ff	 mov	 BYTE PTR tv1049[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00055	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00056	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00059	50		 push	 eax
  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00060	85 c0		 test	 eax, eax
  00062	8b cb		 mov	 ecx, ebx
  00064	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  0006d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00073	8b fe		 mov	 edi, esi
  00075	2b f9		 sub	 edi, ecx
  00077	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv1032[ebp], 0
  0007e	8b d3		 mov	 edx, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00080	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  00083	3b f2		 cmp	 esi, edx
  00085	0f 44 7d f0	 cmove	 edi, DWORD PTR tv1032[ebp]
  00089	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0008b	74 04		 je	 SHORT $LN181@Merge_move
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0008d	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  0008f	eb 3e		 jmp	 SHORT $LN183@Merge_move
$LN181@Merge_move:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00091	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00097	74 14		 je	 SHORT $LN107@Merge_move

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00099	8a 45 ff	 mov	 al, BYTE PTR tv1049[ebp]
  0009c	88 02		 mov	 BYTE PTR [edx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0009e	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000a4	43		 inc	 ebx
  000a5	89 1d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ebx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000ab	eb 17		 jmp	 SHORT $LN106@Merge_move
$LN107@Merge_move:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ad	ff 75 ec	 push	 DWORD PTR tv1050[ebp]
  000b0	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000b5	52		 push	 edx
  000b6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000bb	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000c1	8b 55 f8	 mov	 edx, DWORD PTR tv1064[ebp]
$LN106@Merge_move:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ca	8b c3		 mov	 eax, ebx
  000cc	2b c1		 sub	 eax, ecx
  000ce	48		 dec	 eax
$LN183@Merge_move:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000cf	89 45 f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  000d2	3b f2		 cmp	 esi, edx
  000d4	75 64		 jne	 SHORT $LN16@Merge_move
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000d6	8b 75 e8	 mov	 esi, DWORD PTR tv1054[ebp]
  000d9	8b c3		 mov	 eax, ebx
  000db	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000dd	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000de	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000e1	50		 push	 eax
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  000e8	85 c0		 test	 eax, eax
  000ea	8b cb		 mov	 ecx, ebx
  000ec	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000ef	51		 push	 ecx
  000f0	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  000f5	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000f7	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  000fa	3b fb		 cmp	 edi, ebx

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000fc	74 08		 je	 SHORT $LN182@Merge_move
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000fe	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00104	eb 34		 jmp	 SHORT $LN16@Merge_move
$LN182@Merge_move:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00106	3b 1d 08 00 00
	00		 cmp	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0010c	74 13		 je	 SHORT $LN159@Merge_move

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0010e	8a 06		 mov	 al, BYTE PTR [esi]
  00110	88 03		 mov	 BYTE PTR [ebx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00112	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00118	47		 inc	 edi
  00119	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0011f	eb 12		 jmp	 SHORT $LN158@Merge_move
$LN159@Merge_move:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00121	56		 push	 esi
  00122	53		 push	 ebx
  00123	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00128	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0012d	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN158@Merge_move:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00133	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00139	4f		 dec	 edi
$LN16@Merge_move:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0013a	8b 4d 14	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0013d	8d 51 10	 lea	 edx, DWORD PTR [ecx+16]
  00140	3b 7d f8	 cmp	 edi, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4191 :         if (_DEBUG_LT_PRED(_Pred, *_Next, *_First)) {

  00143	73 2a		 jae	 SHORT $LN5@Merge_move

; 4192 :             *_Dest = _STD move(*_Next);

  00145	8b 45 f4	 mov	 eax, DWORD PTR __Next$1$[ebp]
  00148	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 4193 :             ++_Dest;
; 4194 :             ++_Next;

  0014b	83 c0 10	 add	 eax, 16			; 00000010H
  0014e	89 45 f4	 mov	 DWORD PTR __Next$1$[ebp], eax
  00151	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 4195 : 
; 4196 :             if (_Next == _Last) {

  00154	3b 45 10	 cmp	 eax, DWORD PTR __Last$[ebp]
  00157	75 2d		 jne	 SHORT $LN8@Merge_move
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00159	52		 push	 edx
  0015a	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0015d	ff 75 08	 push	 DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4209 : }

  00160	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH
  00168	5f		 pop	 edi
  00169	5e		 pop	 esi
  0016a	5b		 pop	 ebx
  0016b	8b e5		 mov	 esp, ebp
  0016d	5d		 pop	 ebp
  0016e	c3		 ret	 0
$LN5@Merge_move:

; 4197 :                 return _Move_unchecked(_First, _Mid, _Dest);
; 4198 :             }
; 4199 :         } else {
; 4200 :             *_Dest = _STD move(*_First);

  0016f	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00172	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 4201 :             ++_Dest;
; 4202 :             ++_First;

  00175	83 c0 10	 add	 eax, 16			; 00000010H
  00178	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
  0017b	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 4203 : 
; 4204 :             if (_First == _Mid) {

  0017e	3b 45 0c	 cmp	 eax, DWORD PTR __Mid$[ebp]
  00181	74 0b		 je	 SHORT $LN178@Merge_move
  00183	8b 45 f4	 mov	 eax, DWORD PTR __Next$1$[ebp]
$LN8@Merge_move:

; 4205 :                 return _Move_unchecked(_Next, _Last, _Dest);
; 4206 :             }
; 4207 :         }
; 4208 :     }

  00186	89 55 14	 mov	 DWORD PTR __Dest$[ebp], edx
  00189	e9 82 fe ff ff	 jmp	 $LL2@Merge_move
$LN178@Merge_move:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  0018e	52		 push	 edx
  0018f	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00192	ff 75 f4	 push	 DWORD PTR __Next$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4209 : }

  00195	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  0019a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019d	5f		 pop	 edi
  0019e	5e		 pop	 esi
  0019f	5b		 pop	 ebx
  001a0	8b e5		 mov	 esp, ebp
  001a2	5d		 pop	 ebp
  001a3	c3		 ret	 0
??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z PROC ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 1451 : _NoThrowFwdIt _Uninitialized_move_unchecked(_InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1455 :     } else {
; 1456 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_Dest};
; 1457 :         for (; _First != _Last; ++_First) {
; 1458 :             _Backout._Emplace_back(_STD move(*_First));
; 1459 :         }
; 1460 : 
; 1461 :         return _Backout._Release();
; 1462 :     }
; 1463 : }

  00003	5d		 pop	 ebp

; 1452 :     // move [_First, _Last) to raw [_Dest, ...)
; 1453 :     if constexpr (_Ptr_move_cat<_InIt, _NoThrowFwdIt>::_Really_trivial) {
; 1454 :         return _Copy_memmove(_First, _Last, _Dest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ENDP ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv1051 = -24						; size = 4
tv1047 = -20						; size = 4
tv1031 = -16						; size = 4
__Next$1$ = -12						; size = 4
tv1065 = -8						; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1050 = -1						; size = 1
tv1046 = -1						; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
tv1057 = 20						; size = 4
__Dest$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4159 : _Ty* _Uninitialized_merge_move(_FwdIt _First, const _FwdIt _Mid, const _FwdIt _Last, _Ty* const _Dest, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 4160 :     // move merging ranges to uninitialized storage, both using _Pred
; 4161 :     // pre: _First != _Mid && _Mid != _Last
; 4162 :     _Uninitialized_backout<_Ty*> _Backout{_Dest};
; 4163 :     _FwdIt _Next = _Mid;

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  0000b	57		 push	 edi
  0000c	89 75 f4	 mov	 DWORD PTR __Next$1$[ebp], esi
  0000f	90		 npad	 1
$LL2@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00010	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5154 :     _First =

  00016	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0001f	8b c3		 mov	 eax, ebx
  00021	2b c7		 sub	 eax, edi

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00023	89 5d f8	 mov	 DWORD PTR tv1065[ebp], ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00026	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00027	0f b6 01	 movzx	 eax, BYTE PTR [ecx]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0002a	50		 push	 eax
  0002b	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0002c	89 4d e8	 mov	 DWORD PTR tv1051[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0002f	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00034	85 c0		 test	 eax, eax
  00036	8b cb		 mov	 ecx, ebx
  00038	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00041	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00043	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 45 ec	 mov	 DWORD PTR tv1047[ebp], eax
  0004c	8a 08		 mov	 cl, BYTE PTR [eax]
  0004e	8b c3		 mov	 eax, ebx
  00050	2b c7		 sub	 eax, edi
  00052	88 4d ff	 mov	 BYTE PTR tv1046[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00055	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00056	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00059	50		 push	 eax
  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00060	85 c0		 test	 eax, eax
  00062	8b cb		 mov	 ecx, ebx
  00064	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  0006d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00073	8b fe		 mov	 edi, esi
  00075	2b f9		 sub	 edi, ecx
  00077	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv1031[ebp], 0
  0007e	8b d3		 mov	 edx, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00080	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  00083	3b f2		 cmp	 esi, edx
  00085	0f 44 7d f0	 cmove	 edi, DWORD PTR tv1031[ebp]
  00089	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0008b	74 04		 je	 SHORT $LN182@Uninitiali
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0008d	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  0008f	eb 3e		 jmp	 SHORT $LN184@Uninitiali
$LN182@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00091	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00097	74 14		 je	 SHORT $LN110@Uninitiali

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00099	8a 45 ff	 mov	 al, BYTE PTR tv1046[ebp]
  0009c	88 02		 mov	 BYTE PTR [edx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0009e	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000a4	43		 inc	 ebx
  000a5	89 1d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ebx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000ab	eb 17		 jmp	 SHORT $LN109@Uninitiali
$LN110@Uninitiali:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ad	ff 75 ec	 push	 DWORD PTR tv1047[ebp]
  000b0	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000b5	52		 push	 edx
  000b6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000bb	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000c1	8b 55 f8	 mov	 edx, DWORD PTR tv1065[ebp]
$LN109@Uninitiali:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ca	8b c3		 mov	 eax, ebx
  000cc	2b c1		 sub	 eax, ecx
  000ce	48		 dec	 eax
$LN184@Uninitiali:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000cf	89 45 f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  000d2	3b f2		 cmp	 esi, edx
  000d4	75 64		 jne	 SHORT $LN19@Uninitiali
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000d6	8b 75 e8	 mov	 esi, DWORD PTR tv1051[ebp]
  000d9	8b c3		 mov	 eax, ebx
  000db	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000dd	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000de	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000e1	50		 push	 eax
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  000e8	85 c0		 test	 eax, eax
  000ea	8b cb		 mov	 ecx, ebx
  000ec	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000ef	51		 push	 ecx
  000f0	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  000f5	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000f7	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  000fa	3b fb		 cmp	 edi, ebx

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000fc	74 08		 je	 SHORT $LN183@Uninitiali
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000fe	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00104	eb 34		 jmp	 SHORT $LN19@Uninitiali
$LN183@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00106	3b 1d 08 00 00
	00		 cmp	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0010c	74 13		 je	 SHORT $LN162@Uninitiali

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0010e	8a 06		 mov	 al, BYTE PTR [esi]
  00110	88 03		 mov	 BYTE PTR [ebx], al

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00112	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00118	47		 inc	 edi
  00119	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0011f	eb 12		 jmp	 SHORT $LN161@Uninitiali
$LN162@Uninitiali:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00121	56		 push	 esi
  00122	53		 push	 ebx
  00123	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00128	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0012d	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN161@Uninitiali:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00133	2b 3d 00 00 00
	00		 sub	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00139	4f		 dec	 edi
$LN19@Uninitiali:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0013a	8b 45 14	 mov	 eax, DWORD PTR __Dest$[ebp]
  0013d	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  00140	89 4d 14	 mov	 DWORD PTR tv1057[ebp], ecx
  00143	3b 7d f8	 cmp	 edi, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4165 :         if (_DEBUG_LT_PRED(_Pred, *_Next, *_First)) {

  00146	73 1d		 jae	 SHORT $LN5@Uninitiali
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1438 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

  00148	8b 75 f4	 mov	 esi, DWORD PTR __Next$1$[ebp]
  0014b	56		 push	 esi
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ??$_Construct_in_place@UTPatchDrawStruct@CMapOutdoor@@U12@@std@@YAXAAUTPatchDrawStruct@CMapOutdoor@@$$QAU12@@Z ; std::_Construct_in_place<CMapOutdoor::TPatchDrawStruct,CMapOutdoor::TPatchDrawStruct>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4167 :             ++_Next;

  00152	83 c6 10	 add	 esi, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1438 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

  00155	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4167 :             ++_Next;

  00158	89 75 f4	 mov	 DWORD PTR __Next$1$[ebp], esi

; 4168 : 
; 4169 :             if (_Next == _Last) {

  0015b	3b 75 10	 cmp	 esi, DWORD PTR __Last$[ebp]
  0015e	75 20		 jne	 SHORT $LN8@Uninitiali
  00160	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00163	eb 2f		 jmp	 SHORT $LN10@Uninitiali
$LN5@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1438 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

  00165	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00168	53		 push	 ebx
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ??$_Construct_in_place@UTPatchDrawStruct@CMapOutdoor@@U12@@std@@YAXAAUTPatchDrawStruct@CMapOutdoor@@$$QAU12@@Z ; std::_Construct_in_place<CMapOutdoor::TPatchDrawStruct,CMapOutdoor::TPatchDrawStruct>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4175 :             ++_First;

  0016f	83 c3 10	 add	 ebx, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1438 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

  00172	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4175 :             ++_First;

  00175	89 5d 08	 mov	 DWORD PTR __First$[ebp], ebx

; 4176 : 
; 4177 :             if (_First == _Mid) {

  00178	3b 5d 0c	 cmp	 ebx, DWORD PTR __Mid$[ebp]
  0017b	74 0e		 je	 SHORT $LN179@Uninitiali
  0017d	8b 75 f4	 mov	 esi, DWORD PTR __Next$1$[ebp]
$LN8@Uninitiali:

; 4180 :             }
; 4181 :         }
; 4182 :     }

  00180	8b 4d 14	 mov	 ecx, DWORD PTR tv1057[ebp]
  00183	89 4d 14	 mov	 DWORD PTR __Dest$[ebp], ecx
  00186	e9 85 fe ff ff	 jmp	 $LL2@Uninitiali
$LN179@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1444 :         return _Last;

  0018b	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  0018e	8b 45 f4	 mov	 eax, DWORD PTR __Next$1$[ebp]
  00191	89 4d 0c	 mov	 DWORD PTR __Mid$[ebp], ecx
$LN10@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4179 :                 return _Backout._Release();

  00194	8b 4d 14	 mov	 ecx, DWORD PTR tv1057[ebp]
  00197	51		 push	 ecx
  00198	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5f		 pop	 edi
  001a5	5e		 pop	 esi
  001a6	5b		 pop	 ebx

; 4183 : }

  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00012	8b 36		 mov	 esi, DWORD PTR [esi]
  00014	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00016	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0001b	8b ce		 mov	 ecx, esi
  0001d	8b d8		 mov	 ebx, eax
  0001f	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00024	8b cf		 mov	 ecx, edi
  00026	8b f0		 mov	 esi, eax
  00028	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0002d	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00032	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00037	0f 28 cd	 movaps	 xmm1, xmm5
  0003a	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0003e	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00042	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00047	0f 28 dc	 movaps	 xmm3, xmm4
  0004a	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0004f	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00054	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00057	0f 28 c2	 movaps	 xmm0, xmm2
  0005a	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0005f	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00064	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00068	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0006c	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00070	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00074	f3 0f 58 d9	 addss	 xmm3, xmm1
  00078	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0007c	f3 0f 58 e5	 addss	 xmm4, xmm5
  00080	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00084	f3 0f 58 d8	 addss	 xmm3, xmm0
  00088	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0008c	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0008f	76 0b		 jbe	 SHORT $LN61@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00091	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00094	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00096	8b 03		 mov	 eax, DWORD PTR [ebx]
  00098	89 02		 mov	 DWORD PTR [edx], eax

; 108  :     _Right   = _STD move(_Tmp);

  0009a	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN61@Med3_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0009c	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000a5	8b 3a		 mov	 edi, DWORD PTR [edx]
  000a7	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000a9	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  000ae	8b ce		 mov	 ecx, esi
  000b0	8b d8		 mov	 ebx, eax
  000b2	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  000b7	8b cf		 mov	 ecx, edi
  000b9	8b f0		 mov	 esi, eax
  000bb	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000c0	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  000c5	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  000ca	0f 28 cd	 movaps	 xmm1, xmm5
  000cd	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  000d1	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  000d5	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  000da	0f 28 dc	 movaps	 xmm3, xmm4
  000dd	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  000e2	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  000e7	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ea	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000ee	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  000f3	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  000f8	f3 0f 59 db	 mulss	 xmm3, xmm3

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000fc	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00100	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00104	f3 0f 58 d9	 addss	 xmm3, xmm1
  00108	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0010c	f3 0f 58 e5	 addss	 xmm4, xmm5
  00110	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00114	f3 0f 58 d8	 addss	 xmm3, xmm0
  00118	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0011c	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0011f	0f 86 9f 00 00
	00		 jbe	 $LN59@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00125	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]

; 107  :     _Left    = _STD move(_Right);

  00128	8b 4d 0c	 mov	 ecx, DWORD PTR __Mid$[ebp]
  0012b	8b 3a		 mov	 edi, DWORD PTR [edx]
  0012d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0012f	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00131	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00134	89 39		 mov	 DWORD PTR [ecx], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00136	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0013c	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0013e	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00143	8b cf		 mov	 ecx, edi
  00145	8b d8		 mov	 ebx, eax
  00147	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0014c	8b ce		 mov	 ecx, esi
  0014e	8b f8		 mov	 edi, eax
  00150	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00155	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  0015a	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0015f	0f 28 cd	 movaps	 xmm1, xmm5
  00162	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00166	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0016a	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0016f	0f 28 dc	 movaps	 xmm3, xmm4
  00172	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00177	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0017c	0f 28 c2	 movaps	 xmm0, xmm2

; 182  :     z = fz;

  0017f	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00183	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00188	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0018d	f3 0f 59 db	 mulss	 xmm3, xmm3
  00191	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00195	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00199	f3 0f 58 d9	 addss	 xmm3, xmm1
  0019d	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001a1	f3 0f 58 e5	 addss	 xmm4, xmm5
  001a5	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001a9	f3 0f 58 d8	 addss	 xmm3, xmm0
  001ad	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001b1	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  001b4	76 0e		 jbe	 SHORT $LN59@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  001b6	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]

; 107  :     _Left    = _STD move(_Right);

  001b9	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  001bc	8b 0a		 mov	 ecx, DWORD PTR [edx]
  001be	8b 03		 mov	 eax, DWORD PTR [ebx]
  001c0	89 02		 mov	 DWORD PTR [edx], eax

; 108  :     _Right   = _STD move(_Tmp);

  001c2	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN59@Med3_unche:
  001c4	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4016 : }

  001c5	5e		 pop	 esi
  001c6	5b		 pop	 ebx
  001c7	5d		 pop	 ebp
  001c8	c3		 ret	 0
??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z PROC ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ENDP ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z PROC ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00007	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  0000b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0000e	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00011	76 16		 jbe	 SHORT $LN25@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00013	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00015	8b d0		 mov	 edx, eax

; 107  :     _Left    = _STD move(_Right);

  00017	8b 06		 mov	 eax, DWORD PTR [esi]
  00019	89 07		 mov	 DWORD PTR [edi], eax
  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00021	89 0e		 mov	 DWORD PTR [esi], ecx
  00023	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
$LN25@Med3_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00029	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002c	39 41 04	 cmp	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0002f	76 2a		 jbe	 SHORT $LN23@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00031	8b 07		 mov	 eax, DWORD PTR [edi]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	53		 push	 ebx
  00037	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00039	89 01		 mov	 DWORD PTR [ecx], eax
  0003b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00041	89 1f		 mov	 DWORD PTR [edi], ebx
  00043	89 57 04	 mov	 DWORD PTR [edi+4], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00046	3b 56 04	 cmp	 edx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00049	76 0f		 jbe	 SHORT $LN26@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0004b	8b 06		 mov	 eax, DWORD PTR [esi]
  0004d	89 07		 mov	 DWORD PTR [edi], eax
  0004f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00052	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00055	89 1e		 mov	 DWORD PTR [esi], ebx
  00057	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN26@Med3_unche:
  0005a	5b		 pop	 ebx
$LN23@Med3_unche:
  0005b	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4016 : }

  0005c	5e		 pop	 esi
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ENDP ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z PROC ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ENDP ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Guess_median_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z
_TEXT	SEGMENT
tv844 = -8						; size = 4
__Last$1$ = -4						; size = 4
__First$1$ = 8						; size = 4
tv847 = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Guess_median_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z PROC ; std::_Guess_median_unchecked<std::pair<float,long> *,std::less<void> >, COMDAT

; 4019 : _CONSTEXPR20 void _Guess_median_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 4020 :     // sort median element to middle
; 4021 :     using _Diff        = _Iter_diff_t<_RanIt>;
; 4022 :     const _Diff _Count = _Last - _First;

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	2b c6		 sub	 eax, esi
  00012	c1 f8 03	 sar	 eax, 3
  00015	57		 push	 edi

; 4023 :     if (40 < _Count) { // Tukey's ninther

  00016	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  0001a	83 f8 28	 cmp	 eax, 40			; 00000028H
  0001d	0f 8e 01 02 00
	00		 jle	 $LN2@Guess_medi

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  00023	40		 inc	 eax
  00024	c1 f8 03	 sar	 eax, 3

; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00027	8b c8		 mov	 ecx, eax
  00029	c1 e0 03	 shl	 eax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0002c	f3 0f 10 04 30	 movss	 xmm0, DWORD PTR [eax+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00031	8d 1c 30	 lea	 ebx, DWORD PTR [eax+esi]
  00034	c1 e1 04	 shl	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00037	0f 2f c8	 comiss	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0003a	89 4d f8	 mov	 DWORD PTR tv844[ebp], ecx
  0003d	89 45 08	 mov	 DWORD PTR tv847[ebp], eax
  00040	8d 3c 31	 lea	 edi, DWORD PTR [ecx+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00043	77 0d		 ja	 SHORT $LN194@Guess_medi
  00045	0f 2f c1	 comiss	 xmm0, xmm1
  00048	77 16		 ja	 SHORT $LN6@Guess_medi
  0004a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0004d	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00050	7d 0e		 jge	 SHORT $LN6@Guess_medi
$LN194@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00052	56		 push	 esi
  00053	53		 push	 ebx
  00054	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  00059	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  0005d	83 c4 08	 add	 esp, 8
$LN6@Guess_medi:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00060	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  00064	0f 2f c1	 comiss	 xmm0, xmm1
  00067	77 0d		 ja	 SHORT $LN195@Guess_medi
  00069	0f 2f c8	 comiss	 xmm1, xmm0
  0006c	77 36		 ja	 SHORT $LN8@Guess_medi
  0006e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00071	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
  00074	7d 2e		 jge	 SHORT $LN8@Guess_medi
$LN195@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00076	53		 push	 ebx
  00077	57		 push	 edi
  00078	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0007d	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]

; 83   :     swap(*_Left, *_Right);

  00081	83 c4 08	 add	 esp, 8

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00084	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00088	0f 2f c1	 comiss	 xmm0, xmm1
  0008b	77 0d		 ja	 SHORT $LN33@Guess_medi
  0008d	0f 2f c8	 comiss	 xmm1, xmm0
  00090	77 12		 ja	 SHORT $LN8@Guess_medi
  00092	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00095	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00098	7d 0a		 jge	 SHORT $LN8@Guess_medi
$LN33@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  0009a	56		 push	 esi
  0009b	53		 push	 ebx
  0009c	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  000a1	83 c4 08	 add	 esp, 8
$LN8@Guess_medi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  000a4	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  000a7	8b fe		 mov	 edi, esi
  000a9	8b 45 08	 mov	 eax, DWORD PTR tv847[ebp]
  000ac	2b f8		 sub	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000ae	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000b2	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  000b6	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000b9	0f 2f c8	 comiss	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  000bc	89 4d fc	 mov	 DWORD PTR __Last$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000bf	77 0d		 ja	 SHORT $LN197@Guess_medi
  000c1	0f 2f c1	 comiss	 xmm0, xmm1
  000c4	77 19		 ja	 SHORT $LN38@Guess_medi
  000c6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000c9	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000cc	7d 11		 jge	 SHORT $LN38@Guess_medi
$LN197@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  000ce	57		 push	 edi
  000cf	56		 push	 esi
  000d0	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  000d5	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000d9	83 c4 08	 add	 esp, 8
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __Last$1$[ebp]
$LN38@Guess_medi:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000df	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  000e3	0f 2f c1	 comiss	 xmm0, xmm1
  000e6	77 0d		 ja	 SHORT $LN198@Guess_medi
  000e8	0f 2f c8	 comiss	 xmm1, xmm0
  000eb	77 36		 ja	 SHORT $LN40@Guess_medi
  000ed	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000f0	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000f3	7d 2e		 jge	 SHORT $LN40@Guess_medi
$LN198@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  000f5	56		 push	 esi
  000f6	51		 push	 ecx
  000f7	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000fc	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]

; 83   :     swap(*_Left, *_Right);

  00100	83 c4 08	 add	 esp, 8

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00103	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00107	0f 2f c1	 comiss	 xmm0, xmm1
  0010a	77 0d		 ja	 SHORT $LN202@Guess_medi
  0010c	0f 2f c8	 comiss	 xmm1, xmm0
  0010f	77 12		 ja	 SHORT $LN40@Guess_medi
  00111	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00114	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  00117	7d 0a		 jge	 SHORT $LN40@Guess_medi
$LN202@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00119	57		 push	 edi
  0011a	56		 push	 esi
  0011b	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  00120	83 c4 08	 add	 esp, 8
$LN40@Guess_medi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00123	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00126	8b f9		 mov	 edi, ecx
  00128	2b 7d 08	 sub	 edi, DWORD PTR tv847[ebp]
  0012b	8b d1		 mov	 edx, ecx
  0012d	2b 55 f8	 sub	 edx, DWORD PTR tv844[ebp]
  00130	89 55 08	 mov	 DWORD PTR __First$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00133	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00137	f3 0f 10 0a	 movss	 xmm1, DWORD PTR [edx]
  0013b	0f 2f c8	 comiss	 xmm1, xmm0
  0013e	77 0d		 ja	 SHORT $LN200@Guess_medi
  00140	0f 2f c1	 comiss	 xmm0, xmm1
  00143	77 19		 ja	 SHORT $LN70@Guess_medi
  00145	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00148	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0014b	7d 11		 jge	 SHORT $LN70@Guess_medi
$LN200@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  0014d	52		 push	 edx
  0014e	57		 push	 edi
  0014f	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  00154	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00158	83 c4 08	 add	 esp, 8
  0015b	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
$LN70@Guess_medi:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0015e	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  00162	0f 2f c1	 comiss	 xmm0, xmm1
  00165	77 0d		 ja	 SHORT $LN201@Guess_medi
  00167	0f 2f c8	 comiss	 xmm1, xmm0
  0016a	77 39		 ja	 SHORT $LN72@Guess_medi
  0016c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0016f	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  00172	7d 31		 jge	 SHORT $LN72@Guess_medi
$LN201@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00174	57		 push	 edi
  00175	51		 push	 ecx
  00176	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0017b	8b 4d 08	 mov	 ecx, DWORD PTR __First$1$[ebp]

; 83   :     swap(*_Left, *_Right);

  0017e	83 c4 08	 add	 esp, 8

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00181	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  00185	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00189	0f 2f c1	 comiss	 xmm0, xmm1
  0018c	77 0d		 ja	 SHORT $LN175@Guess_medi
  0018e	0f 2f c8	 comiss	 xmm1, xmm0
  00191	77 12		 ja	 SHORT $LN72@Guess_medi
  00193	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00196	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00199	7d 0a		 jge	 SHORT $LN72@Guess_medi
$LN175@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  0019b	51		 push	 ecx
  0019c	57		 push	 edi
  0019d	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  001a2	83 c4 08	 add	 esp, 8
$LN72@Guess_medi:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001a5	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  001a9	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
  001ad	0f 2f c8	 comiss	 xmm1, xmm0
  001b0	77 0d		 ja	 SHORT $LN206@Guess_medi
  001b2	0f 2f c1	 comiss	 xmm0, xmm1
  001b5	77 16		 ja	 SHORT $LN102@Guess_medi
  001b7	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001ba	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
  001bd	7d 0e		 jge	 SHORT $LN102@Guess_medi
$LN206@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  001bf	53		 push	 ebx
  001c0	56		 push	 esi
  001c1	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  001c6	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  001ca	83 c4 08	 add	 esp, 8
$LN102@Guess_medi:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001cd	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  001d1	0f 2f c1	 comiss	 xmm0, xmm1
  001d4	77 15		 ja	 SHORT $LN207@Guess_medi
  001d6	0f 2f c8	 comiss	 xmm1, xmm0
  001d9	0f 87 b0 00 00
	00		 ja	 $LN136@Guess_medi
  001df	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001e2	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  001e5	0f 8d a4 00 00
	00		 jge	 $LN136@Guess_medi
$LN207@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  001eb	56		 push	 esi
  001ec	57		 push	 edi
  001ed	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001f2	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]

; 83   :     swap(*_Left, *_Right);

  001f6	83 c4 08	 add	 esp, 8

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001f9	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  001fd	0f 2f c1	 comiss	 xmm0, xmm1
  00200	77 11		 ja	 SHORT $LN129@Guess_medi
  00202	0f 2f c8	 comiss	 xmm1, xmm0
  00205	0f 87 84 00 00
	00		 ja	 $LN136@Guess_medi
  0020b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0020e	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
  00211	7d 7c		 jge	 SHORT $LN136@Guess_medi
$LN129@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00213	53		 push	 ebx
  00214	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4033 : }

  00215	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  0021a	83 c4 08	 add	 esp, 8
  0021d	5f		 pop	 edi
  0021e	5e		 pop	 esi
  0021f	5b		 pop	 ebx
  00220	8b e5		 mov	 esp, ebp
  00222	5d		 pop	 ebp
  00223	c3		 ret	 0
$LN2@Guess_medi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00224	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  00227	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  0022b	0f 2f c8	 comiss	 xmm1, xmm0
  0022e	77 0d		 ja	 SHORT $LN209@Guess_medi
  00230	0f 2f c1	 comiss	 xmm0, xmm1
  00233	77 16		 ja	 SHORT $LN134@Guess_medi
  00235	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00238	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0023b	7d 0e		 jge	 SHORT $LN134@Guess_medi
$LN209@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  0023d	56		 push	 esi
  0023e	57		 push	 edi
  0023f	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  00244	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00248	83 c4 08	 add	 esp, 8
$LN134@Guess_medi:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0024b	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
  0024f	0f 2f c1	 comiss	 xmm0, xmm1
  00252	77 0d		 ja	 SHORT $LN210@Guess_medi
  00254	0f 2f c8	 comiss	 xmm1, xmm0
  00257	77 36		 ja	 SHORT $LN136@Guess_medi
  00259	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0025c	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  0025f	7d 2e		 jge	 SHORT $LN136@Guess_medi
$LN210@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00261	57		 push	 edi
  00262	53		 push	 ebx
  00263	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00268	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]

; 83   :     swap(*_Left, *_Right);

  0026c	83 c4 08	 add	 esp, 8

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0026f	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00273	0f 2f c1	 comiss	 xmm0, xmm1
  00276	77 0d		 ja	 SHORT $LN161@Guess_medi
  00278	0f 2f c8	 comiss	 xmm1, xmm0
  0027b	77 12		 ja	 SHORT $LN136@Guess_medi
  0027d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00280	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00283	7d 0a		 jge	 SHORT $LN136@Guess_medi
$LN161@Guess_medi:

; 83   :     swap(*_Left, *_Right);

  00285	56		 push	 esi
  00286	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4033 : }

  00287	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  0028c	83 c4 08	 add	 esp, 8
$LN136@Guess_medi:
  0028f	5f		 pop	 edi
  00290	5e		 pop	 esi
  00291	5b		 pop	 ebx
  00292	8b e5		 mov	 esp, ebp
  00294	5d		 pop	 ebp
  00295	c3		 ret	 0
??$_Guess_median_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ENDP ; std::_Guess_median_unchecked<std::pair<float,long> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z PROC ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;
; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Bottom$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Hole$[ebp]
  0000e	8b d6		 mov	 edx, esi
  00010	57		 push	 edi
  00011	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00014	89 75 0c	 mov	 DWORD PTR __Top$1$[ebp], esi
  00017	d1 ff		 sar	 edi, 1
  00019	3b f7		 cmp	 esi, edi
  0001b	7d 47		 jge	 SHORT $LN3@Pop_heap_h
  0001d	0f 1f 00	 npad	 3
$LL2@Pop_heap_h:

; 3365 :         _Idx = 2 * _Idx + 2;

  00020	03 d2		 add	 edx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00022	f3 0f 10 4c d1
	10		 movss	 xmm1, DWORD PTR [ecx+edx*8+16]
  00028	f3 0f 10 44 d1
	08		 movss	 xmm0, DWORD PTR [ecx+edx*8+8]
  0002e	0f 2f c1	 comiss	 xmm0, xmm1
  00031	77 16		 ja	 SHORT $LN40@Pop_heap_h
  00033	0f 2f c8	 comiss	 xmm1, xmm0
  00036	77 0a		 ja	 SHORT $LN11@Pop_heap_h
  00038	8b 44 d1 14	 mov	 eax, DWORD PTR [ecx+edx*8+20]
  0003c	3b 44 d1 0c	 cmp	 eax, DWORD PTR [ecx+edx*8+12]
  00040	7c 07		 jl	 SHORT $LN40@Pop_heap_h
$LN11@Pop_heap_h:
  00042	b8 02 00 00 00	 mov	 eax, 2
  00047	eb 05		 jmp	 SHORT $LN13@Pop_heap_h
$LN40@Pop_heap_h:
  00049	b8 01 00 00 00	 mov	 eax, 1
$LN13@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0004e	03 d0		 add	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00050	8b 04 d1	 mov	 eax, DWORD PTR [ecx+edx*8]
  00053	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00056	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  0005a	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3370 :         _Hole             = _Idx;

  0005e	8b f2		 mov	 esi, edx
  00060	3b d7		 cmp	 edx, edi
  00062	7c bc		 jl	 SHORT $LL2@Pop_heap_h
$LN3@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00064	3b d7		 cmp	 edx, edi
  00066	75 17		 jne	 SHORT $LN5@Pop_heap_h
  00068	f6 c3 01	 test	 bl, 1
  0006b	75 12		 jne	 SHORT $LN5@Pop_heap_h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  0006d	8b 44 d9 f8	 mov	 eax, DWORD PTR [ecx+ebx*8-8]
  00071	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00074	8b 44 d9 fc	 mov	 eax, DWORD PTR [ecx+ebx*8-4]
  00078	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3375 :         _Hole             = _Bottom - 1;

  0007c	8d 73 ff	 lea	 esi, DWORD PTR [ebx-1]
$LN5@Pop_heap_h:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0007f	8b 5d 0c	 mov	 ebx, DWORD PTR __Top$1$[ebp]
  00082	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  00085	3b de		 cmp	 ebx, esi
  00087	7d 3b		 jge	 SHORT $LN47@Pop_heap_h
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL21@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00090	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00094	8d 56 ff	 lea	 edx, DWORD PTR [esi-1]
  00097	d1 fa		 sar	 edx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00099	f3 0f 10 04 d1	 movss	 xmm0, DWORD PTR [ecx+edx*8]
  0009e	0f 2f c8	 comiss	 xmm1, xmm0
  000a1	77 0e		 ja	 SHORT $LN46@Pop_heap_h
  000a3	0f 2f c1	 comiss	 xmm0, xmm1
  000a6	77 1c		 ja	 SHORT $LN47@Pop_heap_h
  000a8	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  000ac	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000af	7d 13		 jge	 SHORT $LN47@Pop_heap_h
$LN46@Pop_heap_h:

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  000b1	f3 0f 11 04 f1	 movss	 DWORD PTR [ecx+esi*8], xmm0

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  000b6	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  000ba	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3325 :         _Hole             = _Idx;

  000be	8b f2		 mov	 esi, edx
  000c0	3b da		 cmp	 ebx, edx
  000c2	7c cc		 jl	 SHORT $LL21@Pop_heap_h
$LN47@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  000c4	8b 07		 mov	 eax, DWORD PTR [edi]
  000c6	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  000c9	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000cc	5f		 pop	 edi
  000cd	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3379 : }

  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z ENDP ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@@Z PROC ; std::_Destroy_range<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 969  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 970  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 971  :         for (; _First != _Last; ++_First) {
; 972  :             _Destroy_in_place(*_First);
; 973  :         }
; 974  :     }
; 975  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@@Z ENDP ; std::_Destroy_range<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3848 :     _Iter_diff_t<_BidIt> _Count2, _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3849 :     // merge sorted [_First, _Mid) with sorted [_Mid, _Last), using _Pred
; 3850 :     // usual invariants apply
; 3851 :     if (_Count1 <= _Count2 && _Count1 <= _Capacity) {

  00003	8b 4d 14	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00006	8b 55 18	 mov	 edx, DWORD PTR __Count2$[ebp]
  00009	8b 45 20	 mov	 eax, DWORD PTR __Capacity$[ebp]
  0000c	3b ca		 cmp	 ecx, edx
  0000e	7f 1d		 jg	 SHORT $LN2@Buffered_i
  00010	3b c8		 cmp	 ecx, eax
  00012	7f 19		 jg	 SHORT $LN2@Buffered_i

; 3852 :         _Inplace_merge_buffer_left(_First, _Mid, _Last, _Temp_ptr, _Pred);

  00014	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00017	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0001a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0001d	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00020	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00023	e8 00 00 00 00	 call	 ??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00028	83 c4 14	 add	 esp, 20			; 00000014H

; 3857 :     }
; 3858 : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN2@Buffered_i:

; 3853 :     } else if (_Count2 <= _Capacity) {

  0002d	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00030	3b d0		 cmp	 edx, eax
  00032	7f 16		 jg	 SHORT $LN4@Buffered_i

; 3854 :         _Inplace_merge_buffer_right(_First, _Mid, _Last, _Temp_ptr, _Pred);

  00034	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00037	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0003a	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00040	e8 00 00 00 00	 call	 ??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00045	83 c4 14	 add	 esp, 20			; 00000014H

; 3857 :     }
; 3858 : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN4@Buffered_i:

; 3855 :     } else {
; 3856 :         _Buffered_inplace_merge_divide_and_conquer(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred);

  0004a	50		 push	 eax
  0004b	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0004e	52		 push	 edx
  0004f	51		 push	 ecx
  00050	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00053	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00056	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00059	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0005e	83 c4 20	 add	 esp, 32			; 00000020H

; 3857 :     }
; 3858 : }

  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z
_TEXT	SEGMENT
__Temp$1$ = -16						; size = 16
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z PROC ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 3733 : void _Rotate_one_left(_BidIt _First, _BidIt _Mid, _BidIt _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 3736 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_First));

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00009	50		 push	 eax
  0000a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3736 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_First));

  0000d	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00010	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3736 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_First));

  00013	0f 11 45 f0	 movups	 XMMWORD PTR __Temp$1$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00017	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3737 :     *_Move_unchecked(_Mid, _Last, _First) = _STD move(_Temp);

  0001c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR __Temp$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3737 :     *_Move_unchecked(_Mid, _Last, _First) = _STD move(_Temp);

  00023	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 3738 : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ENDP ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z
_TEXT	SEGMENT
__Temp$1$ = -16						; size = 16
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z PROC ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 3724 : void _Rotate_one_right(_BidIt _First, _BidIt _Mid, _BidIt _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 3727 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_Mid));

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0000a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3727 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_Mid));

  00010	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00013	50		 push	 eax
  00014	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3727 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_Mid));

  00015	0f 11 45 f0	 movups	 XMMWORD PTR __Temp$1$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00019	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3729 :     *_First = _STD move(_Temp);

  0001e	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR __Temp$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3729 :     *_First = _STD move(_Temp);

  00025	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00028	5e		 pop	 esi

; 3730 : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ENDP ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
tv187 = 20						; size = 4
__Chunk$ = 20						; size = 4
__Count$ = 24						; size = 4
__Pred$ = 28						; size = 1
??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4234 :     _Iter_diff_t<_BidIt> _Count, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4235 :     // move merging adjacent chunks of distance _Chunk, using _Pred
; 4236 :     // pre: _Count == distance(_First, _Last)
; 4237 :     // pre: _Chunk > 0
; 4238 :     while (_Chunk < _Count) {

  00003	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 14	 mov	 ebx, DWORD PTR __Chunk$[ebp]
  0000d	57		 push	 edi
  0000e	8b 7d 18	 mov	 edi, DWORD PTR __Count$[ebp]
  00011	3b df		 cmp	 ebx, edi
  00013	7d 38		 jge	 SHORT $LN3@Chunked_me
  00015	8b c3		 mov	 eax, ebx
  00017	c1 e0 04	 shl	 eax, 4
  0001a	89 45 14	 mov	 DWORD PTR tv187[ebp], eax
  0001d	56		 push	 esi
  0001e	66 90		 npad	 2
$LL2@Chunked_me:

; 4244 :         _Dest              = _Merge_move(_First, _Mid1, _Mid2, _Dest, _Pred);

  00020	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  00023	2b fb		 sub	 edi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00025	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00027	3b fb		 cmp	 edi, ebx
  00029	8b f3		 mov	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4244 :         _Dest              = _Merge_move(_First, _Mid1, _Mid2, _Dest, _Pred);

  0002b	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0002c	0f 4c f7	 cmovl	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4241 :         const auto _Chunk2 = (_STD min)(_Chunk, _Count);

  0002f	2b fe		 sub	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00031	c1 e6 04	 shl	 esi, 4
  00034	03 f0		 add	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4244 :         _Dest              = _Merge_move(_First, _Mid1, _Mid2, _Dest, _Pred);

  00036	56		 push	 esi
  00037	50		 push	 eax
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
  00041	8b d0		 mov	 edx, eax
  00043	8b 45 14	 mov	 eax, DWORD PTR tv187[ebp]

; 4245 :         _First             = _Mid2;

  00046	8b ce		 mov	 ecx, esi
  00048	3b df		 cmp	 ebx, edi
  0004a	7c d4		 jl	 SHORT $LL2@Chunked_me

; 4235 :     // move merging adjacent chunks of distance _Chunk, using _Pred
; 4236 :     // pre: _Count == distance(_First, _Last)
; 4237 :     // pre: _Chunk > 0
; 4238 :     while (_Chunk < _Count) {

  0004c	5e		 pop	 esi
$LN3@Chunked_me:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4372 :             return _Copy_memmove(_First, _Last, _Dest);

  0004d	52		 push	 edx
  0004e	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	5f		 pop	 edi
  0005b	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4249 : }

  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Uninitialized_chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv188 = 16						; size = 4
__Dest$ = 16						; size = 4
__Chunk$ = 20						; size = 4
__Count$ = 24						; size = 4
__Pred$ = 28						; size = 1
??$_Uninitialized_chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Uninitialized_chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4213 :     const _Iter_diff_t<_BidIt> _Chunk, _Iter_diff_t<_BidIt> _Count, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1425 :     explicit _Uninitialized_backout(_NoThrowFwdIt _Dest) : _First(_Dest), _Last(_Dest) {}

  00003	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4218 :     while (_Chunk < _Count) {

  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 14	 mov	 ebx, DWORD PTR __Chunk$[ebp]
  0000d	57		 push	 edi
  0000e	8b 7d 18	 mov	 edi, DWORD PTR __Count$[ebp]
  00011	3b df		 cmp	 ebx, edi
  00013	7d 38		 jge	 SHORT $LN3@Uninitiali
  00015	8b c3		 mov	 eax, ebx
  00017	c1 e0 04	 shl	 eax, 4
  0001a	89 45 10	 mov	 DWORD PTR tv188[ebp], eax
  0001d	56		 push	 esi
  0001e	66 90		 npad	 2
$LL2@Uninitiali:

; 4224 :         _Backout._Last     = _Uninitialized_merge_move(_First, _Mid1, _Mid2, _Backout._Last, _Pred);

  00020	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  00023	2b fb		 sub	 edi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00025	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00027	3b fb		 cmp	 edi, ebx
  00029	8b f3		 mov	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4224 :         _Backout._Last     = _Uninitialized_merge_move(_First, _Mid1, _Mid2, _Backout._Last, _Pred);

  0002b	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0002c	0f 4c f7	 cmovl	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4221 :         const auto _Chunk2 = (_STD min)(_Chunk, _Count);

  0002f	2b fe		 sub	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00031	c1 e6 04	 shl	 esi, 4
  00034	03 f0		 add	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4224 :         _Backout._Last     = _Uninitialized_merge_move(_First, _Mid1, _Mid2, _Backout._Last, _Pred);

  00036	56		 push	 esi
  00037	50		 push	 eax
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
  00041	8b d0		 mov	 edx, eax
  00043	8b 45 10	 mov	 eax, DWORD PTR tv188[ebp]

; 4225 :         _First             = _Mid2;

  00046	8b ce		 mov	 ecx, esi
  00048	3b df		 cmp	 ebx, edi
  0004a	7c d4		 jl	 SHORT $LL2@Uninitiali

; 4218 :     while (_Chunk < _Count) {

  0004c	5e		 pop	 esi
$LN3@Uninitiali:

; 4226 :     }
; 4227 : 
; 4228 :     _Uninitialized_move_unchecked(_First, _Last, _Backout._Last); // copy partial last chunk

  0004d	52		 push	 edx
  0004e	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ??$_Uninitialized_move_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@0@Z ; std::_Uninitialized_move_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	5f		 pop	 edi
  0005b	5b		 pop	 ebx

; 4229 :     _Backout._Release();
; 4230 : }

  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??$_Uninitialized_chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Uninitialized_chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__Val$2$ = -76						; size = 16
__Val$1 = -60						; size = 16
tv1918 = -44						; size = 4
tv1884 = -40						; size = 4
tv1919 = -36						; size = 4
__First$1$ = -32					; size = 4
tv1955 = -28						; size = 4
__Val$1$ = -24						; size = 4
__Next1$1$ = -20					; size = 4
__Next$1$ = -16						; size = 4
tv1901 = -12						; size = 4
tv1866 = -12						; size = 4
_lhsTerrainNumOrder$1$ = -12				; size = 4
tv1917 = -8						; size = 4
tv1941 = -4						; size = 4
tv1927 = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
_rhsTerrainNumOrder$1$ = 16				; size = 4
_rhsTerrainNumOrder$1$ = 16				; size = 4
__Count$ = 16						; size = 4
tv1928 = 19						; size = 1
tv1900 = 19						; size = 1
__Pred$ = 20						; size = 1
??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4252 : void _Insertion_sort_isort_max_chunks(_BidIt _First, const _BidIt _Last, _Iter_diff_t<_BidIt> _Count, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4253 :     // insertion sort every chunk of distance _ISORT_MAX in [_First, _Last)
; 4254 :     // pre: _Count == distance(_First, _Last)
; 4255 :     for (; _ISORT_MAX < _Count; _Count -= _ISORT_MAX) { // sort chunks

  00003	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00009	83 f8 20	 cmp	 eax, 32			; 00000020H
  0000c	0f 8e 38 03 00
	00		 jle	 $LN349@Insertion_
  00012	8d 50 df	 lea	 edx, DWORD PTR [eax-33]
  00015	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00018	53		 push	 ebx
  00019	c1 ea 05	 shr	 edx, 5
  0001c	42		 inc	 edx
  0001d	89 45 e0	 mov	 DWORD PTR __First$1$[ebp], eax
  00020	56		 push	 esi
  00021	89 55 dc	 mov	 DWORD PTR tv1919[ebp], edx
  00024	57		 push	 edi
$LL4@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00025	8d 88 00 02 00
	00		 lea	 ecx, DWORD PTR [eax+512]
  0002b	89 4d d4	 mov	 DWORD PTR tv1918[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3981 :     if (_First != _Last) {

  0002e	3b c1		 cmp	 eax, ecx
  00030	0f 84 ed 02 00
	00		 je	 $LN12@Insertion_

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00036	8d 58 10	 lea	 ebx, DWORD PTR [eax+16]
  00039	89 5d f0	 mov	 DWORD PTR __Next$1$[ebp], ebx
  0003c	3b d9		 cmp	 ebx, ecx
  0003e	0f 84 df 02 00
	00		 je	 $LN12@Insertion_
  00044	83 c0 04	 add	 eax, 4
  00047	89 45 e8	 mov	 DWORD PTR __Val$1$[ebp], eax
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL11@Insertion_:

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00050	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00053	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3983 :             _BidIt _Next1              = _Next;

  00059	89 5d ec	 mov	 DWORD PTR __Next1$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0005c	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00062	0f 11 45 b4	 movups	 XMMWORD PTR __Val$2$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00066	89 7d fc	 mov	 DWORD PTR tv1927[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00069	0f 11 45 c4	 movups	 XMMWORD PTR __Val$1[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0006d	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00072	66 0f 7e c0	 movd	 eax, xmm0
  00076	0f b6 c8	 movzx	 ecx, al
  00079	89 45 e4	 mov	 DWORD PTR tv1955[ebp], eax
  0007c	8b c7		 mov	 eax, edi
  0007e	2b c3		 sub	 eax, ebx
  00080	89 4d f8	 mov	 DWORD PTR tv1917[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00083	50		 push	 eax
  00084	51		 push	 ecx
  00085	53		 push	 ebx
  00086	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0008b	85 c0		 test	 eax, eax
  0008d	8b cf		 mov	 ecx, edi
  0008f	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00092	51		 push	 ecx
  00093	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00098	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0009a	8b 45 e8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0009d	8a 08		 mov	 cl, BYTE PTR [eax]
  0009f	8b c7		 mov	 eax, edi
  000a1	2b c3		 sub	 eax, ebx
  000a3	88 4d 13	 mov	 BYTE PTR tv1928[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000a6	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000a7	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000aa	50		 push	 eax
  000ab	53		 push	 ebx
  000ac	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  000b1	85 c0		 test	 eax, eax
  000b3	8b cf		 mov	 ecx, edi
  000b5	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000b8	51		 push	 ecx
  000b9	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5174 :     return _First;

  000be	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  000c0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv1866[ebp], 0
  000c7	8b c6		 mov	 eax, esi
  000c9	8b d7		 mov	 edx, edi
  000cb	2b c3		 sub	 eax, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000cd	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  000d0	3b f2		 cmp	 esi, edx
  000d2	0f 44 45 f4	 cmove	 eax, DWORD PTR tv1866[ebp]
  000d6	89 45 f4	 mov	 DWORD PTR _lhsTerrainNumOrder$1$[ebp], eax
  000d9	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000db	74 04		 je	 SHORT $LN345@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000dd	2b cb		 sub	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000df	eb 3e		 jmp	 SHORT $LN352@Insertion_
$LN345@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000e1	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000e7	74 14		 je	 SHORT $LN118@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000e9	8a 45 13	 mov	 al, BYTE PTR tv1928[ebp]
  000ec	88 02		 mov	 BYTE PTR [edx], al

; 690  :         ++_Mylast;

  000ee	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000f4	47		 inc	 edi
  000f5	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000fb	eb 17		 jmp	 SHORT $LN117@Insertion_
$LN118@Insertion_:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000fd	ff 75 e8	 push	 DWORD PTR __Val$1$[ebp]
  00100	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00105	52		 push	 edx
  00106	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0010b	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00111	8b 55 fc	 mov	 edx, DWORD PTR tv1927[ebp]
$LN117@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00114	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0011a	8b cf		 mov	 ecx, edi
  0011c	2b cb		 sub	 ecx, ebx
  0011e	49		 dec	 ecx
$LN352@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  0011f	3b f2		 cmp	 esi, edx
  00121	89 4d 10	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], ecx
  00124	8b 75 f8	 mov	 esi, DWORD PTR tv1917[ebp]
  00127	75 6d		 jne	 SHORT $LN350@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00129	8b c7		 mov	 eax, edi
  0012b	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0012d	50		 push	 eax
  0012e	56		 push	 esi
  0012f	53		 push	 ebx
  00130	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00135	85 c0		 test	 eax, eax
  00137	8b cf		 mov	 ecx, edi
  00139	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0013c	51		 push	 ecx
  0013d	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00142	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00145	3b c7		 cmp	 eax, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00147	74 04		 je	 SHORT $LN346@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  00149	2b c3		 sub	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0014b	eb 4c		 jmp	 SHORT $LN27@Insertion_
$LN346@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0014d	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00153	74 1f		 je	 SHORT $LN170@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00155	8b 45 e4	 mov	 eax, DWORD PTR tv1955[ebp]
  00158	88 07		 mov	 BYTE PTR [edi], al

; 690  :         ++_Mylast;

  0015a	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00160	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00166	47		 inc	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00167	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00169	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0016f	2b c3		 sub	 eax, ebx
  00171	48		 dec	 eax
  00172	eb 25		 jmp	 SHORT $LN27@Insertion_
$LN170@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00174	8d 45 c8	 lea	 eax, DWORD PTR __Val$1[ebp+4]
  00177	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0017c	50		 push	 eax
  0017d	57		 push	 edi
  0017e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00183	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00189	8b c7		 mov	 eax, edi
  0018b	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00191	2b c3		 sub	 eax, ebx
  00193	48		 dec	 eax
  00194	eb 03		 jmp	 SHORT $LN27@Insertion_
$LN350@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  00196	8b 45 f4	 mov	 eax, DWORD PTR _lhsTerrainNumOrder$1$[ebp]
$LN27@Insertion_:

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00199	3b 45 10	 cmp	 eax, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  0019c	73 20		 jae	 SHORT $LN18@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0019e	8b 5d f0	 mov	 ebx, DWORD PTR __Next$1$[ebp]
  001a1	8b 75 e0	 mov	 esi, DWORD PTR __First$1$[ebp]
  001a4	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  001a7	50		 push	 eax
  001a8	53		 push	 ebx
  001a9	56		 push	 esi
  001aa	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  001af	0f 10 45 b4	 movups	 xmm0, XMMWORD PTR __Val$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001b3	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  001b6	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 3989 :             } else { // look for insertion point after first

  001b9	e9 51 01 00 00	 jmp	 $LN19@Insertion_
$LN18@Insertion_:

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001be	8b 45 f0	 mov	 eax, DWORD PTR __Next$1$[ebp]
  001c1	83 c0 04	 add	 eax, 4
$LL16@Insertion_:
  001c4	83 e8 10	 sub	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  001c7	89 7d fc	 mov	 DWORD PTR tv1941[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001ca	89 45 f4	 mov	 DWORD PTR tv1901[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001cd	8b c7		 mov	 eax, edi
  001cf	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001d1	50		 push	 eax
  001d2	56		 push	 esi
  001d3	53		 push	 ebx
  001d4	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  001d9	85 c0		 test	 eax, eax
  001db	8b cf		 mov	 ecx, edi
  001dd	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  001e6	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001e8	8b 45 f4	 mov	 eax, DWORD PTR tv1901[ebp]
  001eb	8a 08		 mov	 cl, BYTE PTR [eax]
  001ed	8b c7		 mov	 eax, edi
  001ef	2b c3		 sub	 eax, ebx
  001f1	88 4d 13	 mov	 BYTE PTR tv1900[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001f4	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001f5	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001f8	50		 push	 eax
  001f9	53		 push	 ebx
  001fa	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  001ff	85 c0		 test	 eax, eax
  00201	8b cf		 mov	 ecx, edi
  00203	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00206	51		 push	 ecx
  00207	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  0020c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00212	8b de		 mov	 ebx, esi
  00214	2b d9		 sub	 ebx, ecx
  00216	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv1884[ebp], 0
  0021d	8b d7		 mov	 edx, edi

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0021f	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  00222	3b f2		 cmp	 esi, edx
  00224	0f 44 5d d8	 cmove	 ebx, DWORD PTR tv1884[ebp]
  00228	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0022a	74 04		 je	 SHORT $LN347@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0022c	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  0022e	eb 3e		 jmp	 SHORT $LN353@Insertion_
$LN347@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00230	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00236	74 14		 je	 SHORT $LN277@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00238	8a 45 13	 mov	 al, BYTE PTR tv1900[ebp]
  0023b	88 02		 mov	 BYTE PTR [edx], al

; 690  :         ++_Mylast;

  0023d	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00243	47		 inc	 edi
  00244	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0024a	eb 17		 jmp	 SHORT $LN276@Insertion_
$LN277@Insertion_:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0024c	ff 75 f4	 push	 DWORD PTR tv1901[ebp]
  0024f	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00254	52		 push	 edx
  00255	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0025a	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00260	8b 55 fc	 mov	 edx, DWORD PTR tv1941[ebp]
$LN276@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00263	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00269	8b c7		 mov	 eax, edi
  0026b	2b c1		 sub	 eax, ecx
  0026d	48		 dec	 eax
$LN353@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  0026e	3b f2		 cmp	 esi, edx
  00270	89 45 10	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  00273	8b 75 f8	 mov	 esi, DWORD PTR tv1917[ebp]
  00276	75 62		 jne	 SHORT $LN186@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00278	8b c7		 mov	 eax, edi
  0027a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0027c	50		 push	 eax
  0027d	56		 push	 esi
  0027e	51		 push	 ecx
  0027f	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00284	85 c0		 test	 eax, eax
  00286	8b cf		 mov	 ecx, edi
  00288	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0028b	51		 push	 ecx
  0028c	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00291	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00293	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00296	3b df		 cmp	 ebx, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00298	74 08		 je	 SHORT $LN348@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0029a	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  002a0	eb 38		 jmp	 SHORT $LN186@Insertion_
$LN348@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002a2	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  002a8	74 14		 je	 SHORT $LN329@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002aa	8b 45 e4	 mov	 eax, DWORD PTR tv1955[ebp]
  002ad	88 07		 mov	 BYTE PTR [edi], al

; 690  :         ++_Mylast;

  002af	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  002b5	43		 inc	 ebx
  002b6	89 1d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ebx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002bc	eb 15		 jmp	 SHORT $LN328@Insertion_
$LN329@Insertion_:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002be	8d 45 c8	 lea	 eax, DWORD PTR __Val$1[ebp+4]
  002c1	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  002c6	50		 push	 eax
  002c7	57		 push	 edi
  002c8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  002cd	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN328@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  002d3	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  002d9	4b		 dec	 ebx
$LN186@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  002da	8b 4d ec	 mov	 ecx, DWORD PTR __Next1$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  002dd	3b 5d 10	 cmp	 ebx, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  002e0	73 23		 jae	 SHORT $LN15@Insertion_

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  002e2	8b 45 f4	 mov	 eax, DWORD PTR tv1901[ebp]
  002e5	83 c0 fc	 add	 eax, -4			; fffffffcH
  002e8	89 45 ec	 mov	 DWORD PTR __Next1$1$[ebp], eax
  002eb	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  002ee	8b 45 f4	 mov	 eax, DWORD PTR tv1901[ebp]
  002f1	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  002f4	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  002fa	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00300	e9 bf fe ff ff	 jmp	 $LL16@Insertion_
$LN15@Insertion_:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  00305	0f 10 45 b4	 movups	 xmm0, XMMWORD PTR __Val$2$[ebp]
  00309	8b 5d f0	 mov	 ebx, DWORD PTR __Next$1$[ebp]
  0030c	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
$LN19@Insertion_:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  0030f	8b 4d d4	 mov	 ecx, DWORD PTR tv1918[ebp]
  00312	83 c3 10	 add	 ebx, 16			; 00000010H
  00315	89 5d f0	 mov	 DWORD PTR __Next$1$[ebp], ebx
  00318	3b d9		 cmp	 ebx, ecx
  0031a	0f 85 30 fd ff
	ff		 jne	 $LL11@Insertion_
  00320	8b 55 dc	 mov	 edx, DWORD PTR tv1919[ebp]
$LN12@Insertion_:

; 4256 :         _First = _Insertion_sort_unchecked(_First, _STD next(_First, _ISORT_MAX), _Pred);

  00323	8b c1		 mov	 eax, ecx
  00325	83 ea 01	 sub	 edx, 1
  00328	89 45 e0	 mov	 DWORD PTR __First$1$[ebp], eax
  0032b	89 55 dc	 mov	 DWORD PTR tv1919[ebp], edx
  0032e	0f 85 f1 fc ff
	ff		 jne	 $LL4@Insertion_

; 4253 :     // insertion sort every chunk of distance _ISORT_MAX in [_First, _Last)
; 4254 :     // pre: _Count == distance(_First, _Last)
; 4255 :     for (; _ISORT_MAX < _Count; _Count -= _ISORT_MAX) { // sort chunks

  00334	5f		 pop	 edi
  00335	5e		 pop	 esi
  00336	5b		 pop	 ebx

; 4257 :     }
; 4258 : 
; 4259 :     _Insertion_sort_unchecked(_First, _Last, _Pred); // sort partial last chunk

  00337	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0033a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0033d	50		 push	 eax
  0033e	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00343	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4260 : }

  00346	8b e5		 mov	 esp, ebp
  00348	5d		 pop	 ebp
  00349	c3		 ret	 0
$LN349@Insertion_:

; 4257 :     }
; 4258 : 
; 4259 :     _Insertion_sort_unchecked(_First, _Last, _Pred); // sort partial last chunk

  0034a	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0034d	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00350	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00353	50		 push	 eax
  00354	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00359	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4260 : }

  0035c	8b e5		 mov	 esp, ebp
  0035e	5d		 pop	 ebp
  0035f	c3		 ret	 0
??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z PROC ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ENDP ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
tv947 = -16						; size = 4
__Max_sequence_non_leaf$1$ = -12			; size = 4
tv944 = -8						; size = 4
__Top$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Idx$1$ = 16						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]

; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7d 10	 mov	 edi, DWORD PTR __Bottom$[ebp]
  00012	8b f1		 mov	 esi, ecx
  00014	4f		 dec	 edi
  00015	89 75 fc	 mov	 DWORD PTR __Top$1$[ebp], esi
  00018	8b c7		 mov	 eax, edi
  0001a	89 7d f0	 mov	 DWORD PTR tv947[ebp], edi
  0001d	d1 f8		 sar	 eax, 1
  0001f	8b d9		 mov	 ebx, ecx
  00021	89 45 f4	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  00024	3b c8		 cmp	 ecx, eax
  00026	0f 8d b9 00 00
	00		 jge	 $LN3@Pop_heap_h
  0002c	0f 1f 40 00	 npad	 4
$LL2@Pop_heap_h:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3365 :         _Idx = 2 * _Idx + 2;

  00036	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00039	8b 7c 82 04	 mov	 edi, DWORD PTR [edx+eax*4+4]
  0003d	8b 74 82 08	 mov	 esi, DWORD PTR [edx+eax*4+8]
  00041	89 45 f8	 mov	 DWORD PTR tv944[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00044	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00049	8b ce		 mov	 ecx, esi
  0004b	8b d8		 mov	 ebx, eax
  0004d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00052	8b cf		 mov	 ecx, edi
  00054	8b f0		 mov	 esi, eax
  00056	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0005b	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00060	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00065	0f 28 cd	 movaps	 xmm1, xmm5
  00068	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0006d	0f 28 dc	 movaps	 xmm3, xmm4
  00070	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00075	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0007a	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0007e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00082	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00085	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00088	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
  0008d	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00092	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00096	33 db		 xor	 ebx, ebx
  00098	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0009b	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 182  :     z = fz;

  0009f	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  000a3	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000a7	f3 0f 58 d9	 addss	 xmm3, xmm1
  000ab	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000af	f3 0f 58 e5	 addss	 xmm4, xmm5
  000b3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000b7	f3 0f 58 d8	 addss	 xmm3, xmm0
  000bb	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000bf	0f 2f e3	 comiss	 xmm4, xmm3
  000c2	0f 96 c3	 setbe	 bl
  000c5	43		 inc	 ebx
  000c6	03 5d f8	 add	 ebx, DWORD PTR tv944[ebp]
  000c9	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  000cc	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3370 :         _Hole             = _Idx;

  000cf	8b cb		 mov	 ecx, ebx
  000d1	8b 45 f4	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  000d4	89 4d 0c	 mov	 DWORD PTR __Hole$[ebp], ecx
  000d7	3b d8		 cmp	 ebx, eax
  000d9	0f 8c 51 ff ff
	ff		 jl	 $LL2@Pop_heap_h

; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  000df	8b 75 fc	 mov	 esi, DWORD PTR __Top$1$[ebp]
  000e2	8b 7d f0	 mov	 edi, DWORD PTR tv947[ebp]
$LN3@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  000e5	3b d8		 cmp	 ebx, eax
  000e7	75 13		 jne	 SHORT $LN5@Pop_heap_h
  000e9	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  000ec	a8 01		 test	 al, 1
  000ee	75 0c		 jne	 SHORT $LN5@Pop_heap_h

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  000f0	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  000f4	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3375 :         _Hole             = _Bottom - 1;

  000f7	8b cf		 mov	 ecx, edi
  000f9	89 4d 0c	 mov	 DWORD PTR __Hole$[ebp], ecx
$LN5@Pop_heap_h:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000fc	3b f1		 cmp	 esi, ecx
  000fe	0f 8d ab 00 00
	00		 jge	 $LN48@Pop_heap_h
$LL24@Pop_heap_h:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00104	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00107	8b 4d 14	 mov	 ecx, DWORD PTR __Val$[ebp]
  0010a	d1 f8		 sar	 eax, 1
  0010c	89 45 10	 mov	 DWORD PTR __Idx$1$[ebp], eax
  0010f	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00111	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00117	8b 34 82	 mov	 esi, DWORD PTR [edx+eax*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0011a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0011f	8b ce		 mov	 ecx, esi
  00121	8b d8		 mov	 ebx, eax
  00123	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00128	8b cf		 mov	 ecx, edi
  0012a	8b f0		 mov	 esi, eax
  0012c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00131	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00136	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0013b	0f 28 cd	 movaps	 xmm1, xmm5
  0013e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00142	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00146	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0014b	0f 28 dc	 movaps	 xmm3, xmm4
  0014e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00153	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00158	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0015b	0f 28 c2	 movaps	 xmm0, xmm2
  0015e	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00163	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00168	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0016b	f3 0f 59 db	 mulss	 xmm3, xmm3
  0016f	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 182  :     z = fz;

  00173	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00177	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0017b	f3 0f 58 d9	 addss	 xmm3, xmm1
  0017f	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00183	f3 0f 58 e5	 addss	 xmm4, xmm5
  00187	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0018b	f3 0f 58 d8	 addss	 xmm3, xmm0
  0018f	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00193	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00196	76 17		 jbe	 SHORT $LN48@Pop_heap_h

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00198	8b 75 10	 mov	 esi, DWORD PTR __Idx$1$[ebp]
  0019b	8b 04 b2	 mov	 eax, DWORD PTR [edx+esi*4]
  0019e	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3325 :         _Hole             = _Idx;

  001a1	8b ce		 mov	 ecx, esi
  001a3	89 4d 0c	 mov	 DWORD PTR __Hole$[ebp], ecx
  001a6	39 75 fc	 cmp	 DWORD PTR __Top$1$[ebp], esi
  001a9	0f 8c 55 ff ff
	ff		 jl	 $LL24@Pop_heap_h
$LN48@Pop_heap_h:

; 3376 :     }
; 3377 : 
; 3378 :     _Push_heap_by_index(_First, _Hole, _Top, _STD move(_Val), _Pred);
; 3379 : }

  001af	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	5b		 pop	 ebx
  001b5	8b 00		 mov	 eax, DWORD PTR [eax]
  001b7	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z PROC ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Hole$[ebp]

; 3359 :     _Diff _Idx       = _Hole;

  00006	8b d0		 mov	 edx, eax
  00008	53		 push	 ebx

; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00009	8b 5d 10	 mov	 ebx, DWORD PTR __Bottom$[ebp]
  0000c	56		 push	 esi

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	57		 push	 edi
  00011	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00014	89 45 0c	 mov	 DWORD PTR __Top$1$[ebp], eax
  00017	d1 ff		 sar	 edi, 1
  00019	3b c7		 cmp	 eax, edi
  0001b	7d 28		 jge	 SHORT $LN3@Pop_heap_h
  0001d	0f 1f 00	 npad	 3
$LL2@Pop_heap_h:

; 3365 :         _Idx = 2 * _Idx + 2;

  00020	03 d2		 add	 edx, edx

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 3367 :             --_Idx;
; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00022	8b 4c d6 14	 mov	 ecx, DWORD PTR [esi+edx*8+20]
  00026	39 4c d6 0c	 cmp	 DWORD PTR [esi+edx*8+12], ecx
  0002a	1b c9		 sbb	 ecx, ecx
  0002c	83 c1 02	 add	 ecx, 2
  0002f	03 d1		 add	 edx, ecx
  00031	8b 0c d6	 mov	 ecx, DWORD PTR [esi+edx*8]
  00034	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00037	8b 4c d6 04	 mov	 ecx, DWORD PTR [esi+edx*8+4]
  0003b	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 3370 :         _Hole             = _Idx;

  0003f	8b c2		 mov	 eax, edx
  00041	3b d7		 cmp	 edx, edi
  00043	7c db		 jl	 SHORT $LL2@Pop_heap_h
$LN3@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00045	3b d7		 cmp	 edx, edi
  00047	75 17		 jne	 SHORT $LN5@Pop_heap_h
  00049	f6 c3 01	 test	 bl, 1
  0004c	75 12		 jne	 SHORT $LN5@Pop_heap_h

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  0004e	8b 4c de f8	 mov	 ecx, DWORD PTR [esi+ebx*8-8]
  00052	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00055	8b 4c de fc	 mov	 ecx, DWORD PTR [esi+ebx*8-4]
  00059	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 3375 :         _Hole             = _Bottom - 1;

  0005d	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
$LN5@Pop_heap_h:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00060	8b 5d 0c	 mov	 ebx, DWORD PTR __Top$1$[ebp]
  00063	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  00066	3b d8		 cmp	 ebx, eax
  00068	7d 28		 jge	 SHORT $LN24@Pop_heap_h
  0006a	66 0f 1f 44 00
	00		 npad	 6
$LL12@Pop_heap_h:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00070	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  00073	d1 fa		 sar	 edx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00075	8b 4c d6 04	 mov	 ecx, DWORD PTR [esi+edx*8+4]
  00079	3b 4f 04	 cmp	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0007c	76 14		 jbe	 SHORT $LN24@Pop_heap_h

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0007e	8b 0c d6	 mov	 ecx, DWORD PTR [esi+edx*8]
  00081	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00084	8b 4c d6 04	 mov	 ecx, DWORD PTR [esi+edx*8+4]
  00088	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 3325 :         _Hole             = _Idx;

  0008c	8b c2		 mov	 eax, edx
  0008e	3b da		 cmp	 ebx, edx
  00090	7c de		 jl	 SHORT $LL12@Pop_heap_h
$LN24@Pop_heap_h:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  00092	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00094	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00097	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0009a	5f		 pop	 edi
  0009b	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx

; 3376 :     }
; 3377 : 
; 3378 :     _Push_heap_by_index(_First, _Hole, _Top, _STD move(_Val), _Pred);
; 3379 : }

  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ENDP ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
tv1072 = -12						; size = 4
__Gfirst$1$ = -8					; size = 4
__Glast$1$ = -4						; size = 4
tv1071 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00003	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00013	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00016	c1 f8 04	 sar	 eax, 4
  00019	8d 34 c7	 lea	 esi, DWORD PTR [edi+eax*8]
  0001c	8d 41 f8	 lea	 eax, DWORD PTR [ecx-8]
  0001f	50		 push	 eax
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	e8 00 00 00 00	 call	 ??$_Guess_median_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Guess_median_unchecked<std::pair<float,long> *,std::less<void> >
  00027	83 c4 10	 add	 esp, 16			; 00000010H

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0002a	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]

; 4042 : 
; 4043 :     while (_First < _Pfirst && !_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Pfirst), *_Pfirst)
; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  0002d	3b fe		 cmp	 edi, esi
  0002f	73 37		 jae	 SHORT $LN158@Partition_
  00031	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
$LL2@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00035	f3 0f 10 46 f8	 movss	 xmm0, DWORD PTR [esi-8]
  0003a	0f 2f c8	 comiss	 xmm1, xmm0
  0003d	77 29		 ja	 SHORT $LN158@Partition_
  0003f	0f 2f c1	 comiss	 xmm0, xmm1
  00042	77 24		 ja	 SHORT $LN158@Partition_
  00044	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  00047	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0004a	7c 1c		 jl	 SHORT $LN158@Partition_
  0004c	0f 2f c1	 comiss	 xmm0, xmm1
  0004f	77 17		 ja	 SHORT $LN158@Partition_
  00051	0f 2f c8	 comiss	 xmm1, xmm0
  00054	77 08		 ja	 SHORT $LN149@Partition_
  00056	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00059	3b 46 fc	 cmp	 eax, DWORD PTR [esi-4]
  0005c	7c 0a		 jl	 SHORT $LN158@Partition_
$LN149@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4045 :         --_Pfirst;

  0005e	83 c6 f8	 add	 esi, -8			; fffffff8H
  00061	0f 28 c8	 movaps	 xmm1, xmm0
  00064	3b fe		 cmp	 edi, esi
  00066	72 cd		 jb	 SHORT $LL2@Partition_
$LN158@Partition_:

; 4046 :     }
; 4047 : 
; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00068	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  0006b	3b da		 cmp	 ebx, edx
  0006d	73 33		 jae	 SHORT $LN159@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0006f	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
$LL4@Partition_:
  00073	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00077	0f 2f c8	 comiss	 xmm1, xmm0
  0007a	77 26		 ja	 SHORT $LN159@Partition_
  0007c	0f 2f c1	 comiss	 xmm0, xmm1
  0007f	77 21		 ja	 SHORT $LN159@Partition_
  00081	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00084	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00087	7c 19		 jl	 SHORT $LN159@Partition_
  00089	0f 2f c1	 comiss	 xmm0, xmm1
  0008c	77 14		 ja	 SHORT $LN159@Partition_
  0008e	0f 2f c8	 comiss	 xmm1, xmm0
  00091	77 08		 ja	 SHORT $LN151@Partition_
  00093	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00096	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
  00099	7c 07		 jl	 SHORT $LN159@Partition_
$LN151@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4049 :         ++_Plast;

  0009b	83 c3 08	 add	 ebx, 8
  0009e	3b da		 cmp	 ebx, edx
  000a0	72 d1		 jb	 SHORT $LL4@Partition_
$LN159@Partition_:

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;

  000a2	8b fb		 mov	 edi, ebx

; 4053 :     _RanIt _Glast  = _Pfirst;

  000a4	8b ce		 mov	 ecx, esi
  000a6	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
  000a9	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  000ac	0f 1f 40 00	 npad	 4
$LL6@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000b0	3b fa		 cmp	 edi, edx
  000b2	73 57		 jae	 SHORT $LN74@Partition_
$LL11@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000b4	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000b8	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  000bc	0f 2f c8	 comiss	 xmm1, xmm0
  000bf	77 3d		 ja	 SHORT $LN9@Partition_
  000c1	0f 2f c1	 comiss	 xmm0, xmm1
  000c4	77 3f		 ja	 SHORT $LN160@Partition_
  000c6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000c9	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000cc	7c 30		 jl	 SHORT $LN9@Partition_
  000ce	0f 2f c1	 comiss	 xmm0, xmm1
  000d1	77 32		 ja	 SHORT $LN160@Partition_
  000d3	0f 2f c8	 comiss	 xmm1, xmm0
  000d6	77 08		 ja	 SHORT $LN73@Partition_
  000d8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000db	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000de	7c 25		 jl	 SHORT $LN160@Partition_
$LN73@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4060 :             } else if (_Plast != _Gfirst) {

  000e0	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  000e3	89 45 f4	 mov	 DWORD PTR tv1072[ebp], eax
  000e6	3b df		 cmp	 ebx, edi
  000e8	74 12		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 83   :     swap(*_Left, *_Right);

  000ea	57		 push	 edi
  000eb	53		 push	 ebx
  000ec	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4062 :                 ++_Plast;

  000f1	8b 5d f4	 mov	 ebx, DWORD PTR tv1072[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 83   :     swap(*_Left, *_Right);

  000f4	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  000f7	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  000fa	eb 02		 jmp	 SHORT $LN9@Partition_
$LN19@Partition_:

; 4064 :                 ++_Plast;

  000fc	8b d8		 mov	 ebx, eax
$LN9@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000fe	83 c7 08	 add	 edi, 8
  00101	3b fa		 cmp	 edi, edx
  00103	72 af		 jb	 SHORT $LL11@Partition_
$LN160@Partition_:
  00105	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00108	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
$LN74@Partition_:

; 4068 :         for (; _First < _Glast; --_Glast) {

  0010b	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0010e	8b d7		 mov	 edx, edi
  00110	89 55 f4	 mov	 DWORD PTR $T2[ebp], edx
  00113	3b c1		 cmp	 eax, ecx
  00115	73 62		 jae	 SHORT $LN90@Partition_
  00117	8b f8		 mov	 edi, eax
  00119	0f 1f 80 00 00
	00 00		 npad	 7
$LL14@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00120	f3 0f 10 41 f8	 movss	 xmm0, DWORD PTR [ecx-8]
  00125	8d 51 f8	 lea	 edx, DWORD PTR [ecx-8]
  00128	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  0012c	0f 2f c8	 comiss	 xmm1, xmm0
  0012f	89 55 fc	 mov	 DWORD PTR tv1071[ebp], edx
  00132	77 33		 ja	 SHORT $LN12@Partition_
  00134	0f 2f c1	 comiss	 xmm0, xmm1
  00137	77 34		 ja	 SHORT $LN161@Partition_
  00139	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  0013c	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0013f	7c 26		 jl	 SHORT $LN12@Partition_
  00141	0f 2f c1	 comiss	 xmm0, xmm1
  00144	77 27		 ja	 SHORT $LN161@Partition_
  00146	0f 2f c8	 comiss	 xmm1, xmm0
  00149	77 08		 ja	 SHORT $LN89@Partition_
  0014b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0014e	3b 41 fc	 cmp	 eax, DWORD PTR [ecx-4]
  00151	7c 1a		 jl	 SHORT $LN161@Partition_
$LN89@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  00153	83 ee 08	 sub	 esi, 8
  00156	3b f2		 cmp	 esi, edx
  00158	74 0d		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 83   :     swap(*_Left, *_Right);

  0015a	52		 push	 edx
  0015b	56		 push	 esi
  0015c	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  00161	8b 55 fc	 mov	 edx, DWORD PTR tv1071[ebp]
  00164	83 c4 08	 add	 esp, 8
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4068 :         for (; _First < _Glast; --_Glast) {

  00167	8b ca		 mov	 ecx, edx
  00169	3b f9		 cmp	 edi, ecx
  0016b	72 b3		 jb	 SHORT $LL14@Partition_
$LN161@Partition_:
  0016d	8b 7d f8	 mov	 edi, DWORD PTR __Gfirst$1$[ebp]
  00170	8b 55 f4	 mov	 edx, DWORD PTR $T2[ebp]
  00173	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00176	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
$LN90@Partition_:

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  00179	89 75 f0	 mov	 DWORD PTR $T1[ebp], esi
  0017c	3b c8		 cmp	 ecx, eax
  0017e	75 21		 jne	 SHORT $LN27@Partition_
  00180	3b 7d 10	 cmp	 edi, DWORD PTR __Last$[ebp]
  00183	74 63		 je	 SHORT $LN114@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  00185	3b df		 cmp	 ebx, edi
  00187	74 0a		 je	 SHORT $LN29@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 83   :     swap(*_Left, *_Right);

  00189	53		 push	 ebx
  0018a	56		 push	 esi
  0018b	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  00190	83 c4 08	 add	 esp, 8
$LN29@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  00193	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  00196	83 c3 08	 add	 ebx, 8
  00199	8b 55 f4	 mov	 edx, DWORD PTR $T2[ebp]
  0019c	83 c6 08	 add	 esi, 8
  0019f	eb 2c		 jmp	 SHORT $LN166@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  001a1	83 c1 f8	 add	 ecx, -8			; fffffff8H
  001a4	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  001a7	3b 7d 10	 cmp	 edi, DWORD PTR __Last$[ebp]
  001aa	75 1a		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  001ac	83 ee 08	 sub	 esi, 8
  001af	3b ce		 cmp	 ecx, esi
  001b1	74 0a		 je	 SHORT $LN32@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 83   :     swap(*_Left, *_Right);

  001b3	56		 push	 esi
  001b4	51		 push	 ecx
  001b5	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  001ba	83 c4 08	 add	 esp, 8
$LN32@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  001bd	83 eb 08	 sub	 ebx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 83   :     swap(*_Left, *_Right);

  001c0	8b c6		 mov	 eax, esi
  001c2	8b d3		 mov	 edx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  001c4	eb 0d		 jmp	 SHORT $LN31@Partition_
$LN30@Partition_:

; 4097 :             _STD iter_swap(_Gfirst, --_Glast);
; 4098 :             ++_Gfirst;

  001c6	8b c2		 mov	 eax, edx
  001c8	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  001cb	8b d1		 mov	 edx, ecx
$LN166@Partition_:

; 4099 :         }
; 4100 :     }

  001cd	83 c7 08	 add	 edi, 8
  001d0	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
$LN31@Partition_:
  001d3	52		 push	 edx
  001d4	50		 push	 eax
  001d5	e8 00 00 00 00	 call	 ??$swap@MJ$0A@@std@@YAXAAU?$pair@MJ@0@0@Z ; std::swap<float,long,0>
  001da	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  001dd	83 c4 08	 add	 esp, 8
  001e0	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  001e3	e9 c8 fe ff ff	 jmp	 $LL6@Partition_
$LN114@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001e8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  001eb	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001ec	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  001ee	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001ef	89 58 04	 mov	 DWORD PTR [eax+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  001f2	5b		 pop	 ebx

; 4101 : }

  001f3	8b e5		 mov	 esp, ebp
  001f5	5d		 pop	 ebp
  001f6	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z PROC		; std::_Refancy<unsigned char *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ENDP		; std::_Refancy<unsigned char *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z PROC ; std::_Refancy<CArea::SCRCWithNumber *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z ENDP ; std::_Refancy<CArea::SCRCWithNumber *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z PROC		; std::_Copy_memmove<unsigned char *,unsigned char *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ENDP		; std::_Copy_memmove<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z PROC ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ENDP ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z PROC ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ENDP ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv1946 = -28						; size = 4
tv1924 = -24						; size = 4
tv1937 = -20						; size = 4
tv1906 = -20						; size = 4
_lhsTerrainNumOrder$1$ = -20				; size = 4
tv1886 = -16						; size = 4
_lhsTerrainNumOrder$1$ = -16				; size = 4
__Last$2$ = -16						; size = 4
tv1921 = -12						; size = 4
__Val$1$ = -12						; size = 4
tv1962 = -8						; size = 4
tv1949 = -8						; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1954 = -1						; size = 1
tv1936 = -1						; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
tv1923 = 19						; size = 1
tv1920 = 19						; size = 1
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3862 :     _Iter_diff_t<_BidIt> _Count2, _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3863 :     // merge sorted [_First, _Mid) with sorted [_Mid, _Last), using _Pred
; 3864 :     // usual invariants *do not* apply; only sortedness applies
; 3865 :     // establish the usual invariants (explained in inplace_merge)
; 3866 :     if (_Mid == _Last) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	3b 45 10	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000c	0f 84 15 03 00
	00		 je	 $LN1@Buffered_i

; 3867 :         return;
; 3868 :     }
; 3869 : 
; 3870 :     for (;;) {
; 3871 :         if (_First == _Mid) {

  00012	39 45 08	 cmp	 DWORD PTR __First$[ebp], eax
  00015	0f 84 0c 03 00
	00		 je	 $LN1@Buffered_i
  0001b	53		 push	 ebx
  0001c	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00022	56		 push	 esi
  00023	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  00026	57		 push	 edi
  00027	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0002d	89 75 f4	 mov	 DWORD PTR __Val$1$[ebp], esi
$LL2@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00030	8b c7		 mov	 eax, edi

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00032	89 7d f8	 mov	 DWORD PTR tv1949[ebp], edi

; 5154 :     _First =

  00035	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00037	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00038	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0003b	50		 push	 eax
  0003c	53		 push	 ebx
  0003d	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00042	85 c0		 test	 eax, eax
  00044	8b cf		 mov	 ecx, edi
  00046	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  0004f	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00051	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00054	83 c0 04	 add	 eax, 4
  00057	89 45 ec	 mov	 DWORD PTR tv1937[ebp], eax
  0005a	8a 08		 mov	 cl, BYTE PTR [eax]
  0005c	8b c7		 mov	 eax, edi
  0005e	2b c3		 sub	 eax, ebx
  00060	88 4d ff	 mov	 BYTE PTR tv1936[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00063	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00064	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00067	50		 push	 eax
  00068	53		 push	 ebx
  00069	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0006e	85 c0		 test	 eax, eax
  00070	8b cf		 mov	 ecx, edi
  00072	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5174 :     return _First;

  0007b	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0007d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv1886[ebp], 0
  00084	8b c6		 mov	 eax, esi
  00086	8b d7		 mov	 edx, edi
  00088	2b c3		 sub	 eax, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0008a	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  0008d	3b f2		 cmp	 esi, edx
  0008f	0f 44 45 f0	 cmove	 eax, DWORD PTR tv1886[ebp]
  00093	89 45 f0	 mov	 DWORD PTR _lhsTerrainNumOrder$1$[ebp], eax
  00096	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  00098	74 04		 je	 SHORT $LN336@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0009a	2b cb		 sub	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  0009c	eb 3e		 jmp	 SHORT $LN346@Buffered_i
$LN336@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0009e	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000a4	74 14		 je	 SHORT $LN111@Buffered_i

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000a6	8a 45 ff	 mov	 al, BYTE PTR tv1936[ebp]
  000a9	88 02		 mov	 BYTE PTR [edx], al

; 690  :         ++_Mylast;

  000ab	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000b1	47		 inc	 edi
  000b2	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000b8	eb 17		 jmp	 SHORT $LN110@Buffered_i
$LN111@Buffered_i:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ba	ff 75 ec	 push	 DWORD PTR tv1937[ebp]
  000bd	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000c2	52		 push	 edx
  000c3	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000c8	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000ce	8b 55 f8	 mov	 edx, DWORD PTR tv1949[ebp]
$LN110@Buffered_i:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000d1	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000d7	8b cf		 mov	 ecx, edi
  000d9	2b cb		 sub	 ecx, ebx
  000db	49		 dec	 ecx
$LN346@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000dc	3b f2		 cmp	 esi, edx
  000de	89 4d f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], ecx
  000e1	8b 75 f4	 mov	 esi, DWORD PTR __Val$1$[ebp]
  000e4	75 6c		 jne	 SHORT $LN341@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000e6	8b c7		 mov	 eax, edi
  000e8	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000ea	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  000eb	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  000ee	50		 push	 eax
  000ef	53		 push	 ebx
  000f0	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  000f5	85 c0		 test	 eax, eax
  000f7	8b cf		 mov	 ecx, edi
  000f9	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00102	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00105	3b c7		 cmp	 eax, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00107	74 04		 je	 SHORT $LN337@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  00109	2b c3		 sub	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0010b	eb 48		 jmp	 SHORT $LN20@Buffered_i
$LN337@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0010d	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00113	74 1e		 je	 SHORT $LN163@Buffered_i

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00115	8a 06		 mov	 al, BYTE PTR [esi]
  00117	88 07		 mov	 BYTE PTR [edi], al

; 690  :         ++_Mylast;

  00119	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0011f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00125	47		 inc	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00126	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00128	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0012e	2b c3		 sub	 eax, ebx
  00130	48		 dec	 eax
  00131	eb 22		 jmp	 SHORT $LN20@Buffered_i
$LN163@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00133	56		 push	 esi
  00134	57		 push	 edi
  00135	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0013a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0013f	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00145	8b c7		 mov	 eax, edi
  00147	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0014d	2b c3		 sub	 eax, ebx
  0014f	48		 dec	 eax
  00150	eb 03		 jmp	 SHORT $LN20@Buffered_i
$LN341@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  00152	8b 45 f0	 mov	 eax, DWORD PTR _lhsTerrainNumOrder$1$[ebp]
$LN20@Buffered_i:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00155	3b 45 f8	 cmp	 eax, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3875 :         if (_Pred(*_Mid, *_First)) {

  00158	72 1c		 jb	 SHORT $LN340@Buffered_i

; 3876 :             break;
; 3877 :         }
; 3878 : 
; 3879 :         ++_First;

  0015a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 3880 :         --_Count1;

  0015d	ff 4d 14	 dec	 DWORD PTR __Count1$[ebp]
  00160	83 c0 10	 add	 eax, 16			; 00000010H
  00163	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
  00166	3b 45 0c	 cmp	 eax, DWORD PTR __Mid$[ebp]
  00169	0f 85 c1 fe ff
	ff		 jne	 $LL2@Buffered_i
  0016f	5f		 pop	 edi
  00170	5e		 pop	 esi
  00171	5b		 pop	 ebx

; 3902 : }

  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
$LN340@Buffered_i:
  00176	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  00179	83 c6 04	 add	 esi, 4
  0017c	0f 1f 40 00	 npad	 4
$LL7@Buffered_i:

; 3881 :     }
; 3882 : 
; 3883 :     const auto _Highest = _Prev_iter(_Mid);
; 3884 :     do {
; 3885 :         --_Last;

  00180	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00183	8d 56 fc	 lea	 edx, DWORD PTR [esi-4]

; 3886 :         --_Count2;
; 3887 :         if (_Mid == _Last) {

  00186	8b 4d 0c	 mov	 ecx, DWORD PTR __Mid$[ebp]
  00189	83 ee 10	 sub	 esi, 16			; 00000010H
  0018c	89 45 e4	 mov	 DWORD PTR tv1946[ebp], eax
  0018f	48		 dec	 eax
  00190	89 45 18	 mov	 DWORD PTR __Count2$[ebp], eax
  00193	89 55 f0	 mov	 DWORD PTR __Last$2$[ebp], edx
  00196	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  00199	89 75 f4	 mov	 DWORD PTR tv1921[ebp], esi
  0019c	3b c8		 cmp	 ecx, eax
  0019e	0f 84 73 01 00
	00		 je	 $LN329@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001a4	8b c7		 mov	 eax, edi

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  001a6	89 7d f8	 mov	 DWORD PTR tv1962[ebp], edi

; 5154 :     _First =

  001a9	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001ab	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001ac	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001af	50		 push	 eax
  001b0	53		 push	 ebx
  001b1	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  001b6	85 c0		 test	 eax, eax
  001b8	8b cf		 mov	 ecx, edi
  001ba	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001bd	51		 push	 ecx
  001be	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  001c3	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 363  : 				TTerrainNumVector::iterator rhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), rhs.byTerrainNum);

  001c5	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  001c8	83 c0 f4	 add	 eax, -12		; fffffff4H
  001cb	89 45 e8	 mov	 DWORD PTR tv1924[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001ce	8a 08		 mov	 cl, BYTE PTR [eax]
  001d0	8b c7		 mov	 eax, edi
  001d2	2b c3		 sub	 eax, ebx
  001d4	88 4d 13	 mov	 BYTE PTR tv1923[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001d7	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001d8	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001db	50		 push	 eax
  001dc	53		 push	 ebx
  001dd	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  001e2	85 c0		 test	 eax, eax
  001e4	8b cf		 mov	 ecx, edi
  001e6	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001e9	51		 push	 ecx
  001ea	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5174 :     return _First;

  001ef	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  001f1	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv1906[ebp], 0
  001f8	8b c6		 mov	 eax, esi
  001fa	8b d7		 mov	 edx, edi
  001fc	2b c3		 sub	 eax, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001fe	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  00201	3b f2		 cmp	 esi, edx
  00203	0f 44 45 ec	 cmove	 eax, DWORD PTR tv1906[ebp]
  00207	89 45 ec	 mov	 DWORD PTR _lhsTerrainNumOrder$1$[ebp], eax
  0020a	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0020c	74 04		 je	 SHORT $LN338@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0020e	2b cb		 sub	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00210	eb 3e		 jmp	 SHORT $LN347@Buffered_i
$LN338@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00212	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00218	74 14		 je	 SHORT $LN266@Buffered_i

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0021a	8a 45 13	 mov	 al, BYTE PTR tv1923[ebp]
  0021d	88 02		 mov	 BYTE PTR [edx], al

; 690  :         ++_Mylast;

  0021f	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00225	47		 inc	 edi
  00226	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0022c	eb 17		 jmp	 SHORT $LN265@Buffered_i
$LN266@Buffered_i:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0022e	ff 75 e8	 push	 DWORD PTR tv1924[ebp]
  00231	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00236	52		 push	 edx
  00237	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0023c	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00242	8b 55 f8	 mov	 edx, DWORD PTR tv1962[ebp]
$LN265@Buffered_i:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00245	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0024b	8b cf		 mov	 ecx, edi
  0024d	2b cb		 sub	 ecx, ebx
  0024f	49		 dec	 ecx
$LN347@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  00250	3b f2		 cmp	 esi, edx
  00252	89 4d f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], ecx
  00255	8b 75 f4	 mov	 esi, DWORD PTR tv1921[ebp]
  00258	75 6c		 jne	 SHORT $LN342@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0025a	8b c7		 mov	 eax, edi
  0025c	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0025e	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0025f	0f b6 06	 movzx	 eax, BYTE PTR [esi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00262	50		 push	 eax
  00263	53		 push	 ebx
  00264	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00269	85 c0		 test	 eax, eax
  0026b	8b cf		 mov	 ecx, edi
  0026d	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00270	51		 push	 ecx
  00271	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00276	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00279	3b c7		 cmp	 eax, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  0027b	74 04		 je	 SHORT $LN339@Buffered_i
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0027d	2b c3		 sub	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0027f	eb 48		 jmp	 SHORT $LN175@Buffered_i
$LN339@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00281	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00287	74 1e		 je	 SHORT $LN318@Buffered_i

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00289	8a 06		 mov	 al, BYTE PTR [esi]
  0028b	88 07		 mov	 BYTE PTR [edi], al

; 690  :         ++_Mylast;

  0028d	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00293	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00299	47		 inc	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0029a	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  0029c	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  002a2	2b c3		 sub	 eax, ebx
  002a4	48		 dec	 eax
  002a5	eb 22		 jmp	 SHORT $LN175@Buffered_i
$LN318@Buffered_i:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002a7	56		 push	 esi
  002a8	57		 push	 edi
  002a9	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  002ae	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  002b3	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  002b9	8b c7		 mov	 eax, edi
  002bb	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  002c1	2b c3		 sub	 eax, ebx
  002c3	48		 dec	 eax
  002c4	eb 03		 jmp	 SHORT $LN175@Buffered_i
$LN342@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  002c6	8b 45 ec	 mov	 eax, DWORD PTR _lhsTerrainNumOrder$1$[ebp]
$LN175@Buffered_i:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  002c9	3b 45 f8	 cmp	 eax, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3891 :     } while (!_Pred(*_Last, *_Highest));

  002cc	0f 83 ae fe ff
	ff		 jae	 $LL7@Buffered_i

; 3892 : 
; 3893 :     ++_Last;
; 3894 :     ++_Count2;
; 3895 : 
; 3896 :     if (_Count1 == 1) {

  002d2	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  002d5	83 f8 01	 cmp	 eax, 1
  002d8	75 18		 jne	 SHORT $LN12@Buffered_i

; 3897 :         _Rotate_one_left(_First, _Mid, _Last);

  002da	ff 75 f0	 push	 DWORD PTR __Last$2$[ebp]
  002dd	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  002e0	ff 75 08	 push	 DWORD PTR __First$[ebp]
  002e3	e8 00 00 00 00	 call	 ??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>
  002e8	83 c4 0c	 add	 esp, 12			; 0000000cH
  002eb	5f		 pop	 edi
  002ec	5e		 pop	 esi
  002ed	5b		 pop	 ebx

; 3902 : }

  002ee	8b e5		 mov	 esp, ebp
  002f0	5d		 pop	 ebp
  002f1	c3		 ret	 0
$LN12@Buffered_i:

; 3898 :         return;
; 3899 :     }
; 3900 : 
; 3901 :     _Buffered_inplace_merge_unchecked_impl(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred);

  002f2	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  002f5	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  002f8	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  002fb	ff 75 e4	 push	 DWORD PTR tv1946[ebp]
  002fe	50		 push	 eax
  002ff	ff 75 f0	 push	 DWORD PTR __Last$2$[ebp]
  00302	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00305	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00308	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0030d	83 c4 20	 add	 esp, 32			; 00000020H
  00310	5f		 pop	 edi
  00311	5e		 pop	 esi
  00312	5b		 pop	 ebx

; 3902 : }

  00313	8b e5		 mov	 esp, ebp
  00315	5d		 pop	 ebp
  00316	c3		 ret	 0
$LN329@Buffered_i:

; 3888 :             _Rotate_one_right(_First, _Mid, ++_Last);

  00317	52		 push	 edx
  00318	51		 push	 ecx
  00319	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0031c	e8 00 00 00 00	 call	 ??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>
  00321	83 c4 0c	 add	 esp, 12			; 0000000cH
  00324	5f		 pop	 edi
  00325	5e		 pop	 esi
  00326	5b		 pop	 ebx
$LN1@Buffered_i:

; 3902 : }

  00327	8b e5		 mov	 esp, ebp
  00329	5d		 pop	 ebp
  0032a	c3		 ret	 0
??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv165 = 16						; size = 4
__Count$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Pred$ = 24						; size = 1
??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4264 :     _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 4265 :     // sort using temp buffer for merges, using _Pred
; 4266 :     // pre: _Last - _First == _Count
; 4267 :     // pre: _Count <= capacity of buffer at _Temp_ptr; also allows safe narrowing to ptrdiff_t
; 4268 :     _Insertion_sort_isort_max_chunks(_First, _Last, _Count, _Pred);

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Count$[ebp]
  0000e	57		 push	 edi
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	53		 push	 ebx
  00013	e8 00 00 00 00	 call	 ??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00018	83 c4 10	 add	 esp, 16			; 00000010H

; 4269 :     // merge adjacent pairs of chunks to and from temp buffer
; 4270 :     auto _Chunk = static_cast<_Iter_diff_t<_BidIt>>(_ISORT_MAX);
; 4271 :     if (_Count <= _Chunk) {

  0001b	83 ff 20	 cmp	 edi, 32			; 00000020H
  0001e	7e 66		 jle	 SHORT $LN13@Buffered_m

; 4272 :         return;
; 4273 :     }
; 4274 : 
; 4275 :     // do the first merge, constructing elements in the temporary buffer
; 4276 :     _Uninitialized_chunked_merge_unchecked(_First, _Last, _Temp_ptr, _Chunk, _Count, _Pred);

  00020	56		 push	 esi
  00021	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00024	8b 75 14	 mov	 esi, DWORD PTR __Temp_ptr$[ebp]
  00027	57		 push	 edi
  00028	6a 20		 push	 32			; 00000020H
  0002a	56		 push	 esi
  0002b	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 4277 :     _Uninitialized_backout<_Iter_value_t<_BidIt>*> _Backout{_Temp_ptr, _Temp_ptr + _Count};
; 4278 :     for (;;) {
; 4279 :         // unconditionally merge elements back into the source buffer
; 4280 :         _Chunk <<= 1;
; 4281 :         _Chunked_merge_unchecked(_Temp_ptr, _Temp_ptr + _Count, _First, static_cast<ptrdiff_t>(_Chunk),

  00034	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00037	8b c7		 mov	 eax, edi
  00039	57		 push	 edi
  0003a	6a 40		 push	 64			; 00000040H
  0003c	c1 e0 04	 shl	 eax, 4
  0003f	03 c6		 add	 eax, esi
  00041	53		 push	 ebx
  00042	50		 push	 eax
  00043	56		 push	 esi
  00044	89 45 10	 mov	 DWORD PTR tv165[ebp], eax
  00047	e8 00 00 00 00	 call	 ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 4282 :             static_cast<ptrdiff_t>(_Count), _Pred);
; 4283 :         _Chunk <<= 1;

  0004c	be 80 00 00 00	 mov	 esi, 128		; 00000080H
  00051	83 c4 30	 add	 esp, 48			; 00000030H

; 4284 :         if (_Count <= _Chunk) { // if the input would be a single chunk, it's already sorted and we're done

  00054	3b fe		 cmp	 edi, esi
  00056	7e 2d		 jle	 SHORT $LN17@Buffered_m
$LL2@Buffered_m:

; 4285 :             return;
; 4286 :         }
; 4287 : 
; 4288 :         // more merges necessary; merge to temporary buffer
; 4289 :         _Chunked_merge_unchecked(_First, _Last, _Temp_ptr, _Chunk, _Count, _Pred);

  00058	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  0005b	57		 push	 edi
  0005c	56		 push	 esi
  0005d	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  00060	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00063	53		 push	 ebx
  00064	e8 00 00 00 00	 call	 ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00069	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  0006c	03 f6		 add	 esi, esi
  0006e	57		 push	 edi
  0006f	56		 push	 esi
  00070	53		 push	 ebx
  00071	ff 75 10	 push	 DWORD PTR tv165[ebp]
  00074	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  00077	e8 00 00 00 00	 call	 ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0007c	03 f6		 add	 esi, esi
  0007e	83 c4 30	 add	 esp, 48			; 00000030H
  00081	3b fe		 cmp	 edi, esi
  00083	7f d3		 jg	 SHORT $LL2@Buffered_m
$LN17@Buffered_m:
  00085	5e		 pop	 esi
$LN13@Buffered_m:
  00086	5f		 pop	 edi

; 4290 :     }
; 4291 : }

  00087	5b		 pop	 ebx
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Count$ = 12						; size = 4
??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z PROC ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>, COMDAT

; 1383 : pair<_Ty*, ptrdiff_t> _Get_temporary_buffer(ptrdiff_t _Count) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1384 :     if (static_cast<size_t>(_Count) <= static_cast<size_t>(-1) / sizeof(_Ty)) {

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Count$[ebp]
  00007	81 fe ff ff ff
	0f		 cmp	 esi, 268435455		; 0fffffffH
  0000d	77 21		 ja	 SHORT $LN3@Get_tempor

; 1385 :         for (; 0 < _Count; _Count /= 2) {

  0000f	85 f6		 test	 esi, esi
  00011	7e 1d		 jle	 SHORT $LN3@Get_tempor
$LL4@Get_tempor:

; 1386 :             const auto _Size = static_cast<size_t>(_Count) * sizeof(_Ty);

  00013	8b c6		 mov	 eax, esi
  00015	c1 e0 04	 shl	 eax, 4

; 1387 :             void* _Pbuf;
; 1388 : #ifdef __cpp_aligned_new
; 1389 :             if constexpr (alignof(_Ty) > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 1390 :                 _Pbuf = ::operator new (_Size, align_val_t{alignof(_Ty)}, nothrow);
; 1391 :             } else
; 1392 : #endif // __cpp_aligned_new
; 1393 :             {
; 1394 :                 _Pbuf = ::operator new(_Size, nothrow);

  00018	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00023	8b c8		 mov	 ecx, eax
  00025	83 c4 08	 add	 esp, 8

; 1395 :             }
; 1396 : 
; 1397 :             if (_Pbuf) {

  00028	85 c9		 test	 ecx, ecx
  0002a	75 17		 jne	 SHORT $LN13@Get_tempor

; 1385 :         for (; 0 < _Count; _Count /= 2) {

  0002c	d1 ee		 shr	 esi, 1
  0002e	75 e3		 jne	 SHORT $LL4@Get_tempor
$LN3@Get_tempor:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00030	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00033	5e		 pop	 esi
  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0003a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1404 : }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN13@Get_tempor:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00043	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00046	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00049	89 08		 mov	 DWORD PTR [eax], ecx
  0004b	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1404 : }

  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z ENDP ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
tv3220 = -16						; size = 4
tv3148 = -16						; size = 4
__Last$1$ = -16						; size = 4
tv3217 = -12						; size = 4
__Glast$1$ = -12					; size = 4
__Gfirst$1$ = -8					; size = 4
__Pfirst$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Plast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  0000e	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00011	2b c2		 sub	 eax, edx
  00013	89 4d f0	 mov	 DWORD PTR __Last$1$[ebp], ecx
  00016	c1 f8 03	 sar	 eax, 3
  00019	53		 push	 ebx
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8d 34 82	 lea	 esi, DWORD PTR [edx+eax*4]

; 4022 :     const _Diff _Count = _Last - _First;

  0001f	8b c1		 mov	 eax, ecx
  00021	2b c2		 sub	 eax, edx

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00023	89 75 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], esi

; 4022 :     const _Diff _Count = _Last - _First;

  00026	c1 f8 02	 sar	 eax, 2

; 4023 :     if (40 < _Count) { // Tukey's ninther

  00029	83 f8 28	 cmp	 eax, 40			; 00000028H
  0002c	7e 63		 jle	 SHORT $LN35@Partition_

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller
; 4025 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002e	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00031	40		 inc	 eax
  00032	c1 f8 03	 sar	 eax, 3
  00035	53		 push	 ebx
  00036	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0003d	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00044	89 4d f4	 mov	 DWORD PTR tv3217[ebp], ecx
  00047	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0004a	03 d7		 add	 edx, edi
  0004c	03 c1		 add	 eax, ecx
  0004e	50		 push	 eax
  0004f	52		 push	 edx
  00050	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  00053	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00058	53		 push	 ebx
  00059	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0005c	50		 push	 eax
  0005d	8b c6		 mov	 eax, esi
  0005f	2b c7		 sub	 eax, edi
  00061	56		 push	 esi
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00068	8b 45 f0	 mov	 eax, DWORD PTR __Last$1$[ebp]
  0006b	8b f0		 mov	 esi, eax
  0006d	53		 push	 ebx
  0006e	50		 push	 eax
  0006f	2b 45 f4	 sub	 eax, DWORD PTR tv3217[ebp]
  00072	2b f7		 sub	 esi, edi
  00074	56		 push	 esi
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 4029 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007b	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0007e	53		 push	 ebx
  0007f	56		 push	 esi
  00080	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]
  00083	03 c7		 add	 eax, edi
  00085	56		 push	 esi
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
  0008c	83 c4 40	 add	 esp, 64			; 00000040H

; 4030 :     } else {

  0008f	eb 0e		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 4031 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00091	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00094	51		 push	 ecx
  00095	56		 push	 esi
  00096	52		 push	 edx
  00097	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
  0009c	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009f	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  000a2	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a5	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  000a8	0f 83 2d 01 00
	00		 jae	 $LN182@Partition_
  000ae	66 90		 npad	 2
$LL2@Partition_:
  000b0	8b 3e		 mov	 edi, DWORD PTR [esi]
  000b2	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000bb	8b 30		 mov	 esi, DWORD PTR [eax]
  000bd	89 45 f0	 mov	 DWORD PTR tv3220[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000c0	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  000c5	8b ce		 mov	 ecx, esi
  000c7	8b d8		 mov	 ebx, eax
  000c9	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  000ce	8b cf		 mov	 ecx, edi
  000d0	8b f0		 mov	 esi, eax
  000d2	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000d7	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  000dc	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  000e1	0f 28 cd	 movaps	 xmm1, xmm5
  000e4	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  000e8	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  000ec	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  000f1	0f 28 dc	 movaps	 xmm3, xmm4
  000f4	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  000f9	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  000fe	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00101	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00105	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0010a	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  0010f	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00113	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00117	f3 0f 59 ed	 mulss	 xmm5, xmm5
  0011b	f3 0f 58 d9	 addss	 xmm3, xmm1
  0011f	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00123	f3 0f 58 e5	 addss	 xmm4, xmm5
  00127	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0012b	f3 0f 58 d8	 addss	 xmm3, xmm0
  0012f	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00133	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00136	0f 87 99 00 00
	00		 ja	 $LN212@Partition_
  0013c	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  0013f	8b 7d f0	 mov	 edi, DWORD PTR tv3220[ebp]
  00142	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00144	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  0014a	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0014c	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00151	8b ce		 mov	 ecx, esi
  00153	8b d8		 mov	 ebx, eax
  00155	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0015a	8b cf		 mov	 ecx, edi
  0015c	8b f0		 mov	 esi, eax
  0015e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00163	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00168	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0016d	0f 28 cd	 movaps	 xmm1, xmm5
  00170	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00174	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00178	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0017d	0f 28 dc	 movaps	 xmm3, xmm4
  00180	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00185	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0018a	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0018d	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00191	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00196	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  0019b	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0019f	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001a3	f3 0f 59 ed	 mulss	 xmm5, xmm5
  001a7	f3 0f 58 d9	 addss	 xmm3, xmm1
  001ab	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001af	f3 0f 58 e5	 addss	 xmm4, xmm5
  001b3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001b7	f3 0f 58 d8	 addss	 xmm3, xmm0
  001bb	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001bf	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001c2	77 11		 ja	 SHORT $LN212@Partition_

; 4045 :         --_Pfirst;

  001c4	8b 75 f0	 mov	 esi, DWORD PTR tv3220[ebp]
  001c7	89 75 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], esi
  001ca	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  001cd	0f 82 dd fe ff
	ff		 jb	 $LL2@Partition_

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001d3	eb 03		 jmp	 SHORT $LN207@Partition_
$LN212@Partition_:
  001d5	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]
$LN207@Partition_:
  001d8	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
$LN182@Partition_:

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  001db	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  001de	3b f8		 cmp	 edi, eax
  001e0	0f 83 30 01 00
	00		 jae	 $LN208@Partition_
$LL4@Partition_:
  001e6	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  001e9	8b 3e		 mov	 edi, DWORD PTR [esi]
  001eb	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  001f3	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  001f8	8b ce		 mov	 ecx, esi
  001fa	8b d8		 mov	 ebx, eax
  001fc	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00201	8b cf		 mov	 ecx, edi
  00203	8b f0		 mov	 esi, eax
  00205	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0020a	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  0020f	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00214	0f 28 cd	 movaps	 xmm1, xmm5
  00217	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0021b	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0021f	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00224	0f 28 dc	 movaps	 xmm3, xmm4
  00227	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0022c	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00231	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00234	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00238	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0023d	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00242	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00246	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0024a	f3 0f 59 ed	 mulss	 xmm5, xmm5
  0024e	f3 0f 58 d9	 addss	 xmm3, xmm1
  00252	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00256	f3 0f 58 e5	 addss	 xmm4, xmm5
  0025a	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0025e	f3 0f 58 d8	 addss	 xmm3, xmm0
  00262	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00266	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00269	0f 87 a1 00 00
	00		 ja	 $LN217@Partition_
  0026f	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  00272	8b 45 14	 mov	 eax, DWORD PTR __Plast$1$[ebp]
  00275	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00277	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0027d	8b 38		 mov	 edi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0027f	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00284	8b ce		 mov	 ecx, esi
  00286	8b d8		 mov	 ebx, eax
  00288	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0028d	8b cf		 mov	 ecx, edi
  0028f	8b f0		 mov	 esi, eax
  00291	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00296	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  0029b	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  002a0	0f 28 cd	 movaps	 xmm1, xmm5
  002a3	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  002a7	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  002ab	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  002b0	0f 28 dc	 movaps	 xmm3, xmm4
  002b3	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  002b8	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002bd	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002c0	0f 28 c2	 movaps	 xmm0, xmm2
  002c3	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
  002c8	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002cd	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002d0	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  002d4	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  002d8	f3 0f 59 c9	 mulss	 xmm1, xmm1
  002dc	f3 0f 59 ed	 mulss	 xmm5, xmm5
  002e0	f3 0f 58 d9	 addss	 xmm3, xmm1
  002e4	f3 0f 59 c0	 mulss	 xmm0, xmm0
  002e8	f3 0f 58 e5	 addss	 xmm4, xmm5
  002ec	f3 0f 59 d2	 mulss	 xmm2, xmm2
  002f0	f3 0f 58 d8	 addss	 xmm3, xmm0
  002f4	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  002f8	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002fb	77 19		 ja	 SHORT $LN208@Partition_
  002fd	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]

; 4049 :         ++_Plast;

  00300	83 c7 04	 add	 edi, 4
  00303	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi
  00306	3b f8		 cmp	 edi, eax
  00308	0f 82 d8 fe ff
	ff		 jb	 $LL4@Partition_

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0030e	eb 06		 jmp	 SHORT $LN208@Partition_
$LN217@Partition_:
  00310	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  00313	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
$LN208@Partition_:

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;
; 4053 :     _RanIt _Glast  = _Pfirst;

  00316	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00319	8b df		 mov	 ebx, edi
  0031b	8b f2		 mov	 esi, edx
$LN221@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0031d	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
$LN220@Partition_:
  00320	89 5d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], ebx
$LL6@Partition_:
  00323	3b d8		 cmp	 ebx, eax
  00325	0f 83 48 01 00
	00		 jae	 $LN186@Partition_
  0032b	0f 1f 44 00 00	 npad	 5
$LL11@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00330	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  00336	8b 3b		 mov	 edi, DWORD PTR [ebx]
  00338	8b 32		 mov	 esi, DWORD PTR [edx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0033a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0033f	8b ce		 mov	 ecx, esi
  00341	8b d8		 mov	 ebx, eax
  00343	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00348	8b cf		 mov	 ecx, edi
  0034a	8b f0		 mov	 esi, eax
  0034c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00351	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00356	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0035b	0f 28 cd	 movaps	 xmm1, xmm5
  0035e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00362	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00366	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0036b	0f 28 dc	 movaps	 xmm3, xmm4
  0036e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00373	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00378	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0037b	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0037f	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00384	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00389	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0038d	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00391	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00395	f3 0f 58 d9	 addss	 xmm3, xmm1
  00399	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0039d	f3 0f 58 e5	 addss	 xmm4, xmm5
  003a1	f3 0f 59 d2	 mulss	 xmm2, xmm2
  003a5	f3 0f 58 d8	 addss	 xmm3, xmm0
  003a9	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  003ad	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  003b0	0f 87 a2 00 00
	00		 ja	 $LN215@Partition_

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  003b6	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  003b9	8b 75 f8	 mov	 esi, DWORD PTR __Gfirst$1$[ebp]
  003bc	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  003be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  003c4	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  003c6	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  003cb	8b ce		 mov	 ecx, esi
  003cd	8b d8		 mov	 ebx, eax
  003cf	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  003d4	8b cf		 mov	 ecx, edi
  003d6	8b f0		 mov	 esi, eax
  003d8	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003dd	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  003e2	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  003e7	0f 28 cd	 movaps	 xmm1, xmm5
  003ea	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  003ee	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  003f2	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  003f7	0f 28 dc	 movaps	 xmm3, xmm4
  003fa	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  003ff	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00404	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00407	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0040b	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00410	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00415	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00419	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0041d	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00421	f3 0f 58 d9	 addss	 xmm3, xmm1
  00425	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00429	f3 0f 58 e5	 addss	 xmm4, xmm5
  0042d	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00431	f3 0f 58 d8	 addss	 xmm3, xmm0
  00435	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00439	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  0043c	77 2f		 ja	 SHORT $LN209@Partition_

; 4059 :                 break;
; 4060 :             } else if (_Plast != _Gfirst) {

  0043e	8b 55 14	 mov	 edx, DWORD PTR __Plast$1$[ebp]
  00441	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
  00444	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00447	89 75 14	 mov	 DWORD PTR __Plast$1$[ebp], esi
  0044a	3b d3		 cmp	 edx, ebx
  0044c	74 0d		 je	 SHORT $LN9@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0044e	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  00450	8b 03		 mov	 eax, DWORD PTR [ebx]
  00452	89 02		 mov	 DWORD PTR [edx], eax

; 108  :     _Right   = _STD move(_Tmp);

  00454	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  00456	eb 03		 jmp	 SHORT $LN9@Partition_
$LN215@Partition_:

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  00458	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
$LN9@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0045b	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  0045e	83 c3 04	 add	 ebx, 4
  00461	89 5d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], ebx
  00464	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00467	0f 82 c3 fe ff
	ff		 jb	 $LL11@Partition_
$LN209@Partition_:
  0046d	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00470	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
$LN186@Partition_:

; 4064 :                 ++_Plast;
; 4065 :             }
; 4066 :         }
; 4067 : 
; 4068 :         for (; _First < _Glast; --_Glast) {

  00473	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00476	3b f0		 cmp	 esi, eax
  00478	0f 86 58 01 00
	00		 jbe	 $LN219@Partition_
  0047e	8d 5e fc	 lea	 ebx, DWORD PTR [esi-4]
  00481	89 5d f0	 mov	 DWORD PTR tv3148[ebp], ebx
$LL14@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00484	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  0048a	8b 3a		 mov	 edi, DWORD PTR [edx]
  0048c	8b 33		 mov	 esi, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0048e	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00493	8b ce		 mov	 ecx, esi
  00495	8b d8		 mov	 ebx, eax
  00497	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0049c	8b cf		 mov	 ecx, edi
  0049e	8b f0		 mov	 esi, eax
  004a0	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  004a5	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  004aa	f3 0f 10 5b 34	 movss	 xmm3, DWORD PTR [ebx+52]
  004af	0f 28 cd	 movaps	 xmm1, xmm5
  004b2	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  004b6	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  004ba	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  004bf	0f 28 e3	 movaps	 xmm4, xmm3
  004c2	f3 0f 5c 66 04	 subss	 xmm4, DWORD PTR [esi+4]
  004c7	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
  004cc	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  004cf	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  004d3	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  004d8	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  004dd	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  004e1	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  004e5	f3 0f 59 db	 mulss	 xmm3, xmm3
  004e9	f3 0f 58 e1	 addss	 xmm4, xmm1
  004ed	f3 0f 59 c0	 mulss	 xmm0, xmm0
  004f1	f3 0f 58 eb	 addss	 xmm5, xmm3
  004f5	f3 0f 59 d2	 mulss	 xmm2, xmm2
  004f9	f3 0f 58 e0	 addss	 xmm4, xmm0
  004fd	f3 0f 58 ea	 addss	 xmm5, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00501	0f 2f ec	 comiss	 xmm5, xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  00504	0f 87 a2 00 00
	00		 ja	 $LN214@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  0050a	8b 45 fc	 mov	 eax, DWORD PTR __Pfirst$1$[ebp]
  0050d	8b 7d f0	 mov	 edi, DWORD PTR tv3148[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00510	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00516	8b 30		 mov	 esi, DWORD PTR [eax]
  00518	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0051a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0051f	8b ce		 mov	 ecx, esi
  00521	8b d8		 mov	 ebx, eax
  00523	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00528	8b cf		 mov	 ecx, edi
  0052a	8b f0		 mov	 esi, eax
  0052c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00531	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00536	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0053b	0f 28 cd	 movaps	 xmm1, xmm5
  0053e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00542	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00546	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0054b	0f 28 dc	 movaps	 xmm3, xmm4
  0054e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00553	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00558	0f 28 c2	 movaps	 xmm0, xmm2

; 182  :     z = fz;

  0055b	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0055f	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00564	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00569	f3 0f 59 db	 mulss	 xmm3, xmm3
  0056d	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00571	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00575	f3 0f 58 d9	 addss	 xmm3, xmm1
  00579	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0057d	f3 0f 58 e5	 addss	 xmm4, xmm5
  00581	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00585	f3 0f 58 d8	 addss	 xmm3, xmm0
  00589	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0058d	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00590	77 3c		 ja	 SHORT $LN218@Partition_

; 4071 :                 break;
; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  00592	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00595	8b 5d f0	 mov	 ebx, DWORD PTR tv3148[ebp]
  00598	83 ea 04	 sub	 edx, 4
  0059b	89 55 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], edx
  0059e	3b d3		 cmp	 edx, ebx
  005a0	74 10		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  005a2	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  005a4	8b 03		 mov	 eax, DWORD PTR [ebx]
  005a6	89 02		 mov	 DWORD PTR [edx], eax

; 108  :     _Right   = _STD move(_Tmp);

  005a8	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  005aa	eb 06		 jmp	 SHORT $LN12@Partition_
$LN214@Partition_:
  005ac	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  005af	8b 5d f0	 mov	 ebx, DWORD PTR tv3148[ebp]
$LN12@Partition_:

; 4064 :                 ++_Plast;
; 4065 :             }
; 4066 :         }
; 4067 : 
; 4068 :         for (; _First < _Glast; --_Glast) {

  005b2	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  005b5	83 eb 04	 sub	 ebx, 4
  005b8	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  005bb	83 ee 04	 sub	 esi, 4
  005be	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
  005c1	89 5d f0	 mov	 DWORD PTR tv3148[ebp], ebx
  005c4	3b c6		 cmp	 eax, esi
  005c6	0f 82 b8 fe ff
	ff		 jb	 $LL14@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  005cc	eb 06		 jmp	 SHORT $LN210@Partition_
$LN218@Partition_:
  005ce	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  005d1	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN210@Partition_:

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  005d4	3b f0		 cmp	 esi, eax
$LN219@Partition_:
  005d6	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
  005d9	75 3a		 jne	 SHORT $LN27@Partition_
  005db	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  005de	0f 84 7f 00 00
	00		 je	 $LN188@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  005e4	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  005e7	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  005ea	3b fb		 cmp	 edi, ebx
  005ec	74 08		 je	 SHORT $LN163@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  005ee	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  005f0	8b 07		 mov	 eax, DWORD PTR [edi]
  005f2	89 02		 mov	 DWORD PTR [edx], eax

; 108  :     _Right   = _STD move(_Tmp);

  005f4	89 0f		 mov	 DWORD PTR [edi], ecx
$LN163@Partition_:

; 107  :     _Left    = _STD move(_Right);

  005f6	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4086 :             ++_Plast;

  005f8	83 c7 04	 add	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  005fb	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  005fd	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4088 :             ++_Pfirst;

  005ff	83 c2 04	 add	 edx, 4

; 4089 :             ++_Gfirst;

  00602	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00605	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  00607	83 c3 04	 add	 ebx, 4
  0060a	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi
  0060d	89 55 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], edx
  00610	e9 0b fd ff ff	 jmp	 $LN220@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00615	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00618	83 c6 fc	 add	 esi, -4			; fffffffcH
  0061b	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
  0061e	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00621	75 2d		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  00623	83 ea 04	 sub	 edx, 4
  00626	89 55 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], edx
  00629	3b f2		 cmp	 esi, edx
  0062b	74 0a		 je	 SHORT $LN198@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0062d	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  0062f	8b 02		 mov	 eax, DWORD PTR [edx]
  00631	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  00633	89 0a		 mov	 DWORD PTR [edx], ecx
  00635	eb 02		 jmp	 SHORT $LN171@Partition_
$LN198@Partition_:
  00637	8b 0a		 mov	 ecx, DWORD PTR [edx]
$LN171@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00639	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  0063c	83 ef 04	 sub	 edi, 4
  0063f	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00642	8b 07		 mov	 eax, DWORD PTR [edi]
  00644	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  00646	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00649	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  0064b	e9 d3 fc ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00650	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  00652	8b 06		 mov	 eax, DWORD PTR [esi]
  00654	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4098 :             ++_Gfirst;

  00656	83 c3 04	 add	 ebx, 4

; 4100 :     }

  00659	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0065c	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  0065e	e9 ba fc ff ff	 jmp	 $LN221@Partition_
$LN188@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00663	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00666	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00669	5f		 pop	 edi
  0066a	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0066b	89 08		 mov	 DWORD PTR [eax], ecx
  0066d	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  00670	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00673	5b		 pop	 ebx

; 4101 : }

  00674	8b e5		 mov	 esp, ebp
  00676	5d		 pop	 ebp
  00677	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
tv1013 = -24						; size = 4
tv1011 = -20						; size = 4
__Idx$1$ = -20						; size = 4
__Val$1$ = -16						; size = 4
__Max_sequence_non_leaf$1$ = -12			; size = 4
__Hole$1$ = -8						; size = 4
__Hole$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 3416 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3417 :     // make nontrivial [_First, _Last) into a heap, using _Pred
; 3418 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 3419 :     _Diff _Bottom = _Last - _First;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 18	 sub	 esp, 24			; 00000018H
  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	2b c2		 sub	 eax, edx
  0000e	c1 f8 02	 sar	 eax, 2
  00011	89 45 0c	 mov	 DWORD PTR __Last$[ebp], eax
  00014	53		 push	 ebx

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00015	8b d8		 mov	 ebx, eax
  00017	d1 fb		 sar	 ebx, 1
  00019	85 db		 test	 ebx, ebx
  0001b	0f 8e c0 01 00
	00		 jle	 $LN3@Make_heap_
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
  00026	8b f7		 mov	 esi, edi
  00028	89 7d e8	 mov	 DWORD PTR tv1013[ebp], edi
  0002b	d1 fe		 sar	 esi, 1
  0002d	89 75 f4	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], esi
$LL2@Make_heap_:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00030	8b 4c 9a fc	 mov	 ecx, DWORD PTR [edx+ebx*4-4]
  00034	4b		 dec	 ebx
  00035	89 4d f0	 mov	 DWORD PTR __Val$1$[ebp], ecx

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00038	8b cb		 mov	 ecx, ebx
  0003a	89 5d f8	 mov	 DWORD PTR __Hole$1$[ebp], ebx
  0003d	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 3359 :     _Diff _Idx       = _Hole;

  00040	89 5d ec	 mov	 DWORD PTR __Idx$1$[ebp], ebx

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00043	3b de		 cmp	 ebx, esi
  00045	0f 8d bd 00 00
	00		 jge	 $LN8@Make_heap_
  0004b	0f 1f 44 00 00	 npad	 5
$LL7@Make_heap_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3365 :         _Idx = 2 * _Idx + 2;

  00056	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00059	8b 7c 82 04	 mov	 edi, DWORD PTR [edx+eax*4+4]
  0005d	8b 74 82 08	 mov	 esi, DWORD PTR [edx+eax*4+8]
  00061	89 45 ec	 mov	 DWORD PTR tv1011[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00064	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00069	8b ce		 mov	 ecx, esi
  0006b	8b d8		 mov	 ebx, eax
  0006d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00072	8b cf		 mov	 ecx, edi
  00074	8b f0		 mov	 esi, eax
  00076	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007b	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00080	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00085	0f 28 cd	 movaps	 xmm1, xmm5
  00088	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0008d	0f 28 dc	 movaps	 xmm3, xmm4
  00090	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00095	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0009a	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0009e	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  000a2	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000a5	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000a8	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  000ad	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000b2	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000b6	33 db		 xor	 ebx, ebx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000bb	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  000bf	8b 75 f4	 mov	 esi, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000c2	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  000c6	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ca	f3 0f 58 d9	 addss	 xmm3, xmm1
  000ce	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000d2	f3 0f 58 e5	 addss	 xmm4, xmm5
  000d6	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000da	f3 0f 58 d8	 addss	 xmm3, xmm0
  000de	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000e2	0f 2f e3	 comiss	 xmm4, xmm3
  000e5	0f 96 c3	 setbe	 bl
  000e8	43		 inc	 ebx
  000e9	03 5d ec	 add	 ebx, DWORD PTR tv1011[ebp]
  000ec	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  000ef	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3370 :         _Hole             = _Idx;

  000f2	8b cb		 mov	 ecx, ebx
  000f4	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx
  000f7	3b de		 cmp	 ebx, esi
  000f9	0f 8c 51 ff ff
	ff		 jl	 $LL7@Make_heap_
  000ff	8b 5d f8	 mov	 ebx, DWORD PTR __Hole$1$[ebp]
  00102	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00105	8b 7d e8	 mov	 edi, DWORD PTR tv1013[ebp]
$LN8@Make_heap_:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00108	3b ce		 cmp	 ecx, esi
  0010a	75 10		 jne	 SHORT $LN10@Make_heap_
  0010c	a8 01		 test	 al, 1
  0010e	75 0c		 jne	 SHORT $LN10@Make_heap_

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00110	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  00114	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3375 :         _Hole             = _Bottom - 1;

  00117	8b cf		 mov	 ecx, edi
  00119	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx
$LN10@Make_heap_:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0011c	3b d9		 cmp	 ebx, ecx
  0011e	0f 8d a7 00 00
	00		 jge	 $LN28@Make_heap_
$LL29@Make_heap_:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00124	8d 59 ff	 lea	 ebx, DWORD PTR [ecx-1]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  0012d	d1 fb		 sar	 ebx, 1

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0012f	8b 34 9a	 mov	 esi, DWORD PTR [edx+ebx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00132	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00137	8b ce		 mov	 ecx, esi
  00139	8b f8		 mov	 edi, eax
  0013b	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00140	8b 4d f0	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  00143	8b f0		 mov	 esi, eax
  00145	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0014a	f3 0f 10 6f 30	 movss	 xmm5, DWORD PTR [edi+48]
  0014f	f3 0f 10 67 34	 movss	 xmm4, DWORD PTR [edi+52]
  00154	0f 28 cd	 movaps	 xmm1, xmm5
  00157	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0015b	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0015f	f3 0f 10 57 38	 movss	 xmm2, DWORD PTR [edi+56]
  00164	0f 28 dc	 movaps	 xmm3, xmm4
  00167	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0016c	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00171	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00174	0f 28 c2	 movaps	 xmm0, xmm2
  00177	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0017c	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00181	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00184	f3 0f 59 db	 mulss	 xmm3, xmm3
  00188	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 182  :     z = fz;

  0018c	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00190	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00194	f3 0f 58 d9	 addss	 xmm3, xmm1
  00198	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0019c	f3 0f 58 e5	 addss	 xmm4, xmm5
  001a0	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001a4	f3 0f 58 d8	 addss	 xmm3, xmm0
  001a8	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001ac	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001af	76 14		 jbe	 SHORT $LN57@Make_heap_

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001b1	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  001b4	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3325 :         _Hole             = _Idx;

  001b7	8b cb		 mov	 ecx, ebx
  001b9	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx
  001bc	39 5d f8	 cmp	 DWORD PTR __Hole$1$[ebp], ebx
  001bf	0f 8c 5f ff ff
	ff		 jl	 $LL29@Make_heap_
$LN57@Make_heap_:
  001c5	8b 5d f8	 mov	 ebx, DWORD PTR __Hole$1$[ebp]
  001c8	8b 75 f4	 mov	 esi, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN28@Make_heap_:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  001cb	8b 45 f0	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001ce	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  001d1	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  001d4	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
  001d7	85 db		 test	 ebx, ebx
  001d9	0f 8f 51 fe ff
	ff		 jg	 $LL2@Make_heap_
  001df	5f		 pop	 edi
  001e0	5e		 pop	 esi
$LN3@Make_heap_:
  001e1	5b		 pop	 ebx

; 3425 :     }
; 3426 : }

  001e2	8b e5		 mov	 esp, ebp
  001e4	5d		 pop	 ebp
  001e5	c3		 ret	 0
??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__First1$1$ = -16					; size = 4
__Next1$1$ = -12					; size = 4
__Next$1$ = -8						; size = 4
__Val$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 3979 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(_BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3980 :     // insertion sort [_First, _Last), using _Pred
; 3981 :     if (_First != _Last) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	56		 push	 esi
  0000a	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000d	3b f0		 cmp	 esi, eax
  0000f	0f 84 04 02 00
	00		 je	 $LN3@Insertion_

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00015	53		 push	 ebx
  00016	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00019	89 5d f8	 mov	 DWORD PTR __Next$1$[ebp], ebx
  0001c	3b d8		 cmp	 ebx, eax
  0001e	0f 84 f4 01 00
	00		 je	 $LN53@Insertion_
  00024	57		 push	 edi
$LL2@Insertion_:

; 3983 :             _BidIt _Next1              = _Next;
; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00025	8b 3b		 mov	 edi, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  0002d	8b 36		 mov	 esi, DWORD PTR [esi]
  0002f	89 5d f4	 mov	 DWORD PTR __Next1$1$[ebp], ebx
  00032	89 7d fc	 mov	 DWORD PTR __Val$1$[ebp], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00035	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0003a	8b cf		 mov	 ecx, edi
  0003c	8b d8		 mov	 ebx, eax
  0003e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00043	8b ce		 mov	 ecx, esi
  00045	8b f8		 mov	 edi, eax
  00047	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0004c	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00051	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00056	0f 28 cd	 movaps	 xmm1, xmm5
  00059	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0005d	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00061	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00066	0f 28 dc	 movaps	 xmm3, xmm4
  00069	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0006e	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00073	0f 28 c2	 movaps	 xmm0, xmm2

; 182  :     z = fz;

  00076	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007a	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0007f	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00084	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00088	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0008c	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00090	f3 0f 58 d9	 addss	 xmm3, xmm1
  00094	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00098	f3 0f 58 e5	 addss	 xmm4, xmm5
  0009c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000a0	f3 0f 58 d8	 addss	 xmm3, xmm0
  000a4	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  000a8	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000ab	76 1e		 jbe	 SHORT $LN9@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000ad	8b 5d f8	 mov	 ebx, DWORD PTR __Next$1$[ebp]
  000b0	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  000b3	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b6	50		 push	 eax
  000b7	53		 push	 ebx
  000b8	56		 push	 esi
  000b9	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000be	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000c4	89 0e		 mov	 DWORD PTR [esi], ecx

; 3989 :             } else { // look for insertion point after first

  000c6	e9 3b 01 00 00	 jmp	 $LN10@Insertion_
$LN9@Insertion_:

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000cb	8b 75 f8	 mov	 esi, DWORD PTR __Next$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000d4	83 c6 fc	 add	 esi, -4			; fffffffcH
  000d7	89 75 f0	 mov	 DWORD PTR __First1$1$[ebp], esi
  000da	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000dc	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  000e4	8b d8		 mov	 ebx, eax
  000e6	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  000eb	8b ce		 mov	 ecx, esi
  000ed	8b f8		 mov	 edi, eax
  000ef	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000f4	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  000f9	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  000fe	0f 28 cd	 movaps	 xmm1, xmm5
  00101	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00105	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00109	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0010e	0f 28 dc	 movaps	 xmm3, xmm4
  00111	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00116	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0011b	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0011e	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00122	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00127	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  0012c	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00130	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00134	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00138	f3 0f 58 d9	 addss	 xmm3, xmm1
  0013c	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00140	f3 0f 58 e5	 addss	 xmm4, xmm5
  00144	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00148	f3 0f 58 d8	 addss	 xmm3, xmm0
  0014c	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00150	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  00153	0f 86 9f 00 00
	00		 jbe	 $LN6@Insertion_
  00159	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@Insertion_:

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  00160	8b 4d f0	 mov	 ecx, DWORD PTR __First1$1$[ebp]
  00163	8b 55 f4	 mov	 edx, DWORD PTR __Next1$1$[ebp]
  00166	89 4d f4	 mov	 DWORD PTR __Next1$1$[ebp], ecx
  00169	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016b	83 e9 04	 sub	 ecx, 4
  0016e	89 02		 mov	 DWORD PTR [edx], eax
  00170	89 4d f0	 mov	 DWORD PTR __First1$1$[ebp], ecx
  00173	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00175	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0017b	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00180	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  00183	8b d8		 mov	 ebx, eax
  00185	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0018a	8b ce		 mov	 ecx, esi
  0018c	8b f8		 mov	 edi, eax
  0018e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00193	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00198	f3 0f 10 5b 34	 movss	 xmm3, DWORD PTR [ebx+52]
  0019d	0f 28 e5	 movaps	 xmm4, xmm5
  001a0	f3 0f 5c 27	 subss	 xmm4, DWORD PTR [edi]
  001a4	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  001a8	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  001ad	0f 28 cb	 movaps	 xmm1, xmm3
  001b0	f3 0f 5c 4f 04	 subss	 xmm1, DWORD PTR [edi+4]
  001b5	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
  001ba	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001bd	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001c1	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  001c6	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001cb	f3 0f 59 ed	 mulss	 xmm5, xmm5

; 182  :     z = fz;

  001cf	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001d3	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001d7	f3 0f 58 e1	 addss	 xmm4, xmm1
  001db	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001df	f3 0f 58 eb	 addss	 xmm5, xmm3
  001e3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001e7	f3 0f 58 e0	 addss	 xmm4, xmm0
  001eb	f3 0f 58 ea	 addss	 xmm5, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001ef	0f 2f ec	 comiss	 xmm5, xmm4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001f2	0f 87 68 ff ff
	ff		 ja	 $LL7@Insertion_
$LN6@Insertion_:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  001f8	8b 55 f4	 mov	 edx, DWORD PTR __Next1$1$[ebp]
  001fb	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001fe	8b 5d f8	 mov	 ebx, DWORD PTR __Next$1$[ebp]
  00201	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00204	89 02		 mov	 DWORD PTR [edx], eax
$LN10@Insertion_:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00206	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00209	83 c3 04	 add	 ebx, 4
  0020c	89 5d f8	 mov	 DWORD PTR __Next$1$[ebp], ebx
  0020f	3b d8		 cmp	 ebx, eax
  00211	0f 85 0e fe ff
	ff		 jne	 $LL2@Insertion_

; 3995 :             }
; 3996 :         }
; 3997 :     }
; 3998 : 
; 3999 :     return _Last;

  00217	5f		 pop	 edi
$LN53@Insertion_:
  00218	5b		 pop	 ebx
$LN3@Insertion_:
  00219	5e		 pop	 esi

; 4000 : }

  0021a	8b e5		 mov	 esp, ebp
  0021c	5d		 pop	 ebp
  0021d	c3		 ret	 0
??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv697 = -12						; size = 4
__Last$1$ = -12						; size = 4
tv692 = -8						; size = 4
__Gfirst$1$ = -8					; size = 4
$T2 = -4						; size = 4
tv691 = -4						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Glast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z PROC ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00011	83 c1 f8	 add	 ecx, -8			; fffffff8H
  00014	2b c7		 sub	 eax, edi
  00016	89 4d f4	 mov	 DWORD PTR __Last$1$[ebp], ecx
  00019	c1 f8 04	 sar	 eax, 4
  0001c	8d 34 c7	 lea	 esi, DWORD PTR [edi+eax*8]

; 4022 :     const _Diff _Count = _Last - _First;

  0001f	8b c1		 mov	 eax, ecx
  00021	2b c7		 sub	 eax, edi
  00023	c1 f8 03	 sar	 eax, 3

; 4023 :     if (40 < _Count) { // Tukey's ninther

  00026	83 f8 28	 cmp	 eax, 40			; 00000028H
  00029	7e 65		 jle	 SHORT $LN35@Partition_

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0002b	40		 inc	 eax
  0002c	c1 f8 03	 sar	 eax, 3

; 4025 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002f	8b c8		 mov	 ecx, eax
  00031	c1 e1 04	 shl	 ecx, 4
  00034	89 4d f8	 mov	 DWORD PTR tv692[ebp], ecx
  00037	8d 1c c5 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*8]
  0003e	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00041	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00044	03 c1		 add	 eax, ecx
  00046	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  00049	57		 push	 edi
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  0004f	89 55 fc	 mov	 DWORD PTR tv691[ebp], edx
  00052	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00057	57		 push	 edi
  00058	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  0005b	50		 push	 eax
  0005c	8b c6		 mov	 eax, esi
  0005e	2b c3		 sub	 eax, ebx
  00060	56		 push	 esi
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00067	8b 45 f4	 mov	 eax, DWORD PTR __Last$1$[ebp]
  0006a	8b f8		 mov	 edi, eax
  0006c	2b fb		 sub	 edi, ebx
  0006e	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00071	53		 push	 ebx
  00072	50		 push	 eax
  00073	2b 45 f8	 sub	 eax, DWORD PTR tv692[ebp]
  00076	57		 push	 edi
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4029 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007d	53		 push	 ebx
  0007e	57		 push	 edi
  0007f	56		 push	 esi
  00080	ff 75 fc	 push	 DWORD PTR tv691[ebp]
  00083	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4030 :     } else {

  00088	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  0008b	83 c4 40	 add	 esp, 64			; 00000040H
  0008e	eb 0e		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 4031 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00090	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00093	51		 push	 ecx
  00094	56		 push	 esi
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009e	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  000a1	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a4	3b fe		 cmp	 edi, esi
  000a6	73 11		 jae	 SHORT $LN111@Partition_
$LL2@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000a8	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  000ab	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000ae	77 09		 ja	 SHORT $LN111@Partition_
  000b0	72 07		 jb	 SHORT $LN111@Partition_

; 4045 :         --_Pfirst;

  000b2	83 ee 08	 sub	 esi, 8
  000b5	3b fe		 cmp	 edi, esi
  000b7	72 ef		 jb	 SHORT $LL2@Partition_
$LN111@Partition_:

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000b9	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  000bc	3b da		 cmp	 ebx, edx
  000be	73 14		 jae	 SHORT $LN5@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000c0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LL4@Partition_:
  000c3	39 4b 04	 cmp	 DWORD PTR [ebx+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000c6	77 09		 ja	 SHORT $LN112@Partition_
  000c8	72 07		 jb	 SHORT $LN112@Partition_

; 4049 :         ++_Plast;

  000ca	83 c3 08	 add	 ebx, 8
  000cd	3b da		 cmp	 ebx, edx
  000cf	72 f2		 jb	 SHORT $LL4@Partition_
$LN112@Partition_:
  000d1	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
$LN5@Partition_:

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;
; 4053 :     _RanIt _Glast  = _Pfirst;

  000d4	8b c6		 mov	 eax, esi
  000d6	8b fb		 mov	 edi, ebx
  000d8	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
$LN116@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000db	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
  000de	66 90		 npad	 2
$LL6@Partition_:
  000e0	3b fa		 cmp	 edi, edx
  000e2	73 42		 jae	 SHORT $LN90@Partition_
$LL11@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000e4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e7	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  000ea	77 2a		 ja	 SHORT $LN9@Partition_

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  000ec	72 2f		 jb	 SHORT $LN113@Partition_

; 4059 :                 break;
; 4060 :             } else if (_Plast != _Gfirst) {

  000ee	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  000f1	89 45 f4	 mov	 DWORD PTR tv697[ebp], eax
  000f4	3b df		 cmp	 ebx, edi
  000f6	74 1c		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  000f8	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  000fa	8b 07		 mov	 eax, DWORD PTR [edi]
  000fc	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  000ff	89 03		 mov	 DWORD PTR [ebx], eax
  00101	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00104	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4062 :                 ++_Plast;

  00107	8b 5d f4	 mov	 ebx, DWORD PTR tv697[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0010a	89 57 04	 mov	 DWORD PTR [edi+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  0010d	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00110	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  00112	eb 02		 jmp	 SHORT $LN9@Partition_
$LN19@Partition_:

; 4064 :                 ++_Plast;

  00114	8b d8		 mov	 ebx, eax
$LN9@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00116	83 c7 08	 add	 edi, 8
  00119	3b fa		 cmp	 edi, edx
  0011b	72 c7		 jb	 SHORT $LL11@Partition_
$LN113@Partition_:
  0011d	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00120	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  00123	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
$LN90@Partition_:

; 4068 :         for (; _First < _Glast; --_Glast) {

  00126	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00129	3b c1		 cmp	 eax, ecx
  0012b	76 48		 jbe	 SHORT $LN115@Partition_
  0012d	8d 78 f8	 lea	 edi, DWORD PTR [eax-8]
  00130	8b d9		 mov	 ebx, ecx
$LL14@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00132	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00135	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  00138	77 20		 ja	 SHORT $LN12@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  0013a	72 2b		 jb	 SHORT $LN114@Partition_

; 4071 :                 break;
; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  0013c	83 ee 08	 sub	 esi, 8
  0013f	3b f7		 cmp	 esi, edi
  00141	74 17		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00143	8b 07		 mov	 eax, DWORD PTR [edi]
  00145	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00147	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0014a	89 06		 mov	 DWORD PTR [esi], eax
  0014c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0014f	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00152	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]

; 108  :     _Right   = _STD move(_Tmp);

  00155	89 0f		 mov	 DWORD PTR [edi], ecx
  00157	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4068 :         for (; _First < _Glast; --_Glast) {

  0015a	83 e8 08	 sub	 eax, 8
  0015d	83 ef 08	 sub	 edi, 8
  00160	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
  00163	3b d8		 cmp	 ebx, eax
  00165	72 cb		 jb	 SHORT $LL14@Partition_
$LN114@Partition_:
  00167	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  0016a	3b c1		 cmp	 eax, ecx
  0016c	8b 7d f8	 mov	 edi, DWORD PTR __Gfirst$1$[ebp]
  0016f	8b 5d fc	 mov	 ebx, DWORD PTR __Plast$1$[ebp]
  00172	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
$LN115@Partition_:
  00175	75 4b		 jne	 SHORT $LN27@Partition_
  00177	3b fa		 cmp	 edi, edx
  00179	0f 84 d0 00 00
	00		 je	 $LN92@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  0017f	3b df		 cmp	 ebx, edi
  00181	74 14		 je	 SHORT $LN67@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00183	8b 03		 mov	 eax, DWORD PTR [ebx]
  00185	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00187	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0018a	89 06		 mov	 DWORD PTR [esi], eax
  0018c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0018f	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00192	89 0b		 mov	 DWORD PTR [ebx], ecx
  00194	89 53 04	 mov	 DWORD PTR [ebx+4], edx
$LN67@Partition_:

; 107  :     _Left    = _STD move(_Right);

  00197	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4086 :             ++_Plast;

  00199	83 c3 08	 add	 ebx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0019c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0019e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]

; 107  :     _Left    = _STD move(_Right);

  001a1	89 06		 mov	 DWORD PTR [esi], eax
  001a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001a6	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4088 :             ++_Pfirst;

  001a9	83 c6 08	 add	 esi, 8

; 4089 :             ++_Gfirst;

  001ac	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  001af	89 57 04	 mov	 DWORD PTR [edi+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  001b2	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  001b5	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  001b7	83 c7 08	 add	 edi, 8
  001ba	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  001bd	e9 19 ff ff ff	 jmp	 $LN116@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  001c2	83 c0 f8	 add	 eax, -8			; fffffff8H
  001c5	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
  001c8	3b fa		 cmp	 edi, edx
  001ca	75 5b		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  001cc	83 ee 08	 sub	 esi, 8
  001cf	3b c6		 cmp	 eax, esi
  001d1	74 25		 je	 SHORT $LN102@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  001d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001d8	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx

; 107  :     _Left    = _STD move(_Right);

  001db	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  001de	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  001e1	8b 06		 mov	 eax, DWORD PTR [esi]
  001e3	89 01		 mov	 DWORD PTR [ecx], eax
  001e5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001e8	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  001eb	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  001ee	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  001f1	89 0e		 mov	 DWORD PTR [esi], ecx
  001f3	89 46 04	 mov	 DWORD PTR [esi+4], eax
  001f6	eb 0e		 jmp	 SHORT $LN75@Partition_
$LN102@Partition_:
  001f8	8b 06		 mov	 eax, DWORD PTR [esi]
  001fa	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  001fd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00200	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  00203	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
$LN75@Partition_:

; 107  :     _Left    = _STD move(_Right);

  00206	8b 43 f8	 mov	 eax, DWORD PTR [ebx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00209	83 eb 08	 sub	 ebx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0020c	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  0020e	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00211	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00214	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00217	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  0021a	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  0021d	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00220	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  00222	e9 b9 fe ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00227	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00229	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4097 :             _STD iter_swap(_Gfirst, --_Glast);

  0022c	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0022f	8b 00		 mov	 eax, DWORD PTR [eax]
  00231	89 07		 mov	 DWORD PTR [edi], eax
  00233	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00236	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00239	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4098 :             ++_Gfirst;

  0023c	83 c7 08	 add	 edi, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0023f	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00242	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  00245	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00248	89 08		 mov	 DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  0024a	e9 8c fe ff ff	 jmp	 $LN116@Partition_
$LN92@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0024f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00252	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00253	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00255	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00256	89 58 04	 mov	 DWORD PTR [eax+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00259	5b		 pop	 ebx

; 4101 : }

  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z
_TEXT	SEGMENT
__Val$1 = -24						; size = 8
__Val$2 = -24						; size = 8
__Val$3 = -16						; size = 8
__Mid$4 = -16						; size = 8
tv1146 = -12						; size = 4
__Max_sequence_non_leaf$1$ = -8				; size = 4
__Bottom$1$ = -4					; size = 4
__Val$1$ = 8						; size = 4
__First$ = 8						; size = 4
tv1138 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z PROC ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 f8	 and	 eax, -8			; fffffff8H
  00016	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001b	7e 74		 jle	 SHORT $LN106@Sort_unche
  0001d	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  00020	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	85 f6		 test	 esi, esi
  00025	0f 8e d2 00 00
	00		 jle	 $LN107@Sort_unche

; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002b	52		 push	 edx
  0002c	53		 push	 ebx
  0002d	8d 45 f0	 lea	 eax, DWORD PTR __Mid$4[ebp]
  00030	57		 push	 edi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00037	8b 55 f0	 mov	 edx, DWORD PTR __Mid$4[ebp]
  0003a	8b c6		 mov	 eax, esi
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	8b cb		 mov	 ecx, ebx
  00041	8b 5d f4	 mov	 ebx, DWORD PTR __Mid$4[ebp+4]
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	d1 fe		 sar	 esi, 1
  00049	2b cb		 sub	 ecx, ebx
  0004b	03 f0		 add	 esi, eax
  0004d	83 e1 f8	 and	 ecx, -8			; fffffff8H
  00050	8b c2		 mov	 eax, edx
  00052	2b c7		 sub	 eax, edi
  00054	83 e0 f8	 and	 eax, -8			; fffffff8H
  00057	3b c1		 cmp	 eax, ecx
  00059	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005c	50		 push	 eax
  0005d	56		 push	 esi
  0005e	7d 0e		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  00060	52		 push	 edx
  00061	57		 push	 edi
  00062	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >

; 4125 :             _First = _Mid.second;

  00067	8b fb		 mov	 edi, ebx

; 4126 :         } else { // loop on first half

  00069	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0006c	eb 0f		 jmp	 SHORT $LN144@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0006e	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00071	53		 push	 ebx
  00072	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >

; 4128 :             _Last = _Mid.first;

  00077	8b 5d f0	 mov	 ebx, DWORD PTR __Mid$4[ebp]
  0007a	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
$LN144@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007d	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  00080	8b c3		 mov	 eax, ebx
  00082	2b c7		 sub	 eax, edi
  00084	83 c4 10	 add	 esp, 16			; 00000010H
  00087	83 e0 f8	 and	 eax, -8			; fffffff8H
  0008a	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0008f	7f 92		 jg	 SHORT $LL2@Sort_unche
$LN106@Sort_unche:

; 3981 :     if (_First != _Last) {

  00091	3b fb		 cmp	 edi, ebx
  00093	0f 84 ff 01 00
	00		 je	 $LN87@Sort_unche

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00099	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  0009c	3b f3		 cmp	 esi, ebx
  0009e	0f 84 f4 01 00
	00		 je	 $LN87@Sort_unche
$LL11@Sort_unche:

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000a4	8b 06		 mov	 eax, DWORD PTR [esi]
  000a6	8b d6		 mov	 edx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000a8	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000ac	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  000af	89 45 e8	 mov	 DWORD PTR __Val$2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000b2	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR __Val$2[ebp]
  000b7	0f 2f c1	 comiss	 xmm0, xmm1
  000ba	0f 87 a2 01 00
	00		 ja	 $LN122@Sort_unche
  000c0	0f 2f c8	 comiss	 xmm1, xmm0
  000c3	77 09		 ja	 SHORT $LN18@Sort_unche
  000c5	3b 5f 04	 cmp	 ebx, DWORD PTR [edi+4]
  000c8	0f 8c 94 01 00
	00		 jl	 $LN122@Sort_unche
$LN18@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000ce	8b ce		 mov	 ecx, esi
$LL16@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d0	f3 0f 10 41 f8	 movss	 xmm0, DWORD PTR [ecx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000d5	83 e9 08	 sub	 ecx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d8	0f 2f c1	 comiss	 xmm0, xmm1
  000db	77 12		 ja	 SHORT $LN140@Sort_unche
  000dd	0f 2f c8	 comiss	 xmm1, xmm0
  000e0	0f 87 73 01 00
	00		 ja	 $LN139@Sort_unche
  000e6	3b 59 04	 cmp	 ebx, DWORD PTR [ecx+4]
  000e9	0f 8d 6a 01 00
	00		 jge	 $LN139@Sort_unche
$LN140@Sort_unche:

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  000ef	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  000f3	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000f6	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  000f9	8b d1		 mov	 edx, ecx
  000fb	eb d3		 jmp	 SHORT $LL16@Sort_unche
$LN107@Sort_unche:

; 3419 :     _Diff _Bottom = _Last - _First;

  000fd	8b cb		 mov	 ecx, ebx
  000ff	2b cf		 sub	 ecx, edi
  00101	8b c1		 mov	 eax, ecx
  00103	89 4d f4	 mov	 DWORD PTR tv1146[ebp], ecx
  00106	c1 f8 03	 sar	 eax, 3

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00109	8b f0		 mov	 esi, eax
  0010b	89 45 fc	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  0010e	d1 fe		 sar	 esi, 1
  00110	85 f6		 test	 esi, esi
  00112	0f 8e e8 00 00
	00		 jle	 $LN49@Sort_unche
  00118	8d 58 ff	 lea	 ebx, DWORD PTR [eax-1]
  0011b	d1 fb		 sar	 ebx, 1
  0011d	89 5d f8	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ebx
$LL48@Sort_unche:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00120	8b 44 f7 f8	 mov	 eax, DWORD PTR [edi+esi*8-8]
  00124	4e		 dec	 esi
  00125	89 45 e8	 mov	 DWORD PTR __Val$1[ebp], eax

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00128	8b d6		 mov	 edx, esi

; 3359 :     _Diff _Idx       = _Hole;

  0012a	8b ce		 mov	 ecx, esi

; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  0012c	8b 44 f7 04	 mov	 eax, DWORD PTR [edi+esi*8+4]
  00130	89 45 08	 mov	 DWORD PTR __Val$1$[ebp], eax

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00133	3b f3		 cmp	 esi, ebx
  00135	7d 4d		 jge	 SHORT $LN54@Sort_unche
  00137	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL53@Sort_unche:

; 3365 :         _Idx = 2 * _Idx + 2;

  00140	03 c9		 add	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00142	f3 0f 10 4c cf
	10		 movss	 xmm1, DWORD PTR [edi+ecx*8+16]
  00148	f3 0f 10 44 cf
	08		 movss	 xmm0, DWORD PTR [edi+ecx*8+8]
  0014e	0f 2f c1	 comiss	 xmm0, xmm1
  00151	77 16		 ja	 SHORT $LN125@Sort_unche
  00153	0f 2f c8	 comiss	 xmm1, xmm0
  00156	77 0a		 ja	 SHORT $LN62@Sort_unche
  00158	8b 44 cf 14	 mov	 eax, DWORD PTR [edi+ecx*8+20]
  0015c	3b 44 cf 0c	 cmp	 eax, DWORD PTR [edi+ecx*8+12]
  00160	7c 07		 jl	 SHORT $LN125@Sort_unche
$LN62@Sort_unche:
  00162	b8 02 00 00 00	 mov	 eax, 2
  00167	eb 05		 jmp	 SHORT $LN64@Sort_unche
$LN125@Sort_unche:
  00169	b8 01 00 00 00	 mov	 eax, 1
$LN64@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0016e	03 c8		 add	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00170	8b 04 cf	 mov	 eax, DWORD PTR [edi+ecx*8]
  00173	89 04 d7	 mov	 DWORD PTR [edi+edx*8], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00176	8b 44 cf 04	 mov	 eax, DWORD PTR [edi+ecx*8+4]
  0017a	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3370 :         _Hole             = _Idx;

  0017e	8b d1		 mov	 edx, ecx
  00180	3b cb		 cmp	 ecx, ebx
  00182	7c bc		 jl	 SHORT $LL53@Sort_unche
$LN54@Sort_unche:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00184	3b d3		 cmp	 edx, ebx
  00186	75 1a		 jne	 SHORT $LN56@Sort_unche
  00188	8b 4d fc	 mov	 ecx, DWORD PTR __Bottom$1$[ebp]
  0018b	f6 c1 01	 test	 cl, 1
  0018e	75 12		 jne	 SHORT $LN56@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00190	8b 44 cf f8	 mov	 eax, DWORD PTR [edi+ecx*8-8]
  00194	89 04 d7	 mov	 DWORD PTR [edi+edx*8], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00197	8b 44 cf fc	 mov	 eax, DWORD PTR [edi+ecx*8-4]
  0019b	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3375 :         _Hole             = _Bottom - 1;

  0019f	8d 51 ff	 lea	 edx, DWORD PTR [ecx-1]
$LN56@Sort_unche:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001a2	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR __Val$1[ebp]
  001a7	3b f2		 cmp	 esi, edx
  001a9	7d 35		 jge	 SHORT $LN127@Sort_unche
  001ab	8b 5d 08	 mov	 ebx, DWORD PTR __Val$1$[ebp]
  001ae	66 90		 npad	 2
$LL72@Sort_unche:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  001b0	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  001b3	d1 f9		 sar	 ecx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001b5	f3 0f 10 04 cf	 movss	 xmm0, DWORD PTR [edi+ecx*8]
  001ba	0f 2f c8	 comiss	 xmm1, xmm0
  001bd	77 0b		 ja	 SHORT $LN141@Sort_unche
  001bf	0f 2f c1	 comiss	 xmm0, xmm1
  001c2	77 19		 ja	 SHORT $LN143@Sort_unche
  001c4	39 5c cf 04	 cmp	 DWORD PTR [edi+ecx*8+4], ebx
  001c8	7d 13		 jge	 SHORT $LN143@Sort_unche
$LN141@Sort_unche:

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  001ca	f3 0f 11 04 d7	 movss	 DWORD PTR [edi+edx*8], xmm0

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  001cf	8b 44 cf 04	 mov	 eax, DWORD PTR [edi+ecx*8+4]
  001d3	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3325 :         _Hole             = _Idx;

  001d7	8b d1		 mov	 edx, ecx
  001d9	3b f1		 cmp	 esi, ecx
  001db	7c d3		 jl	 SHORT $LL72@Sort_unche
$LN143@Sort_unche:
  001dd	8b 5d f8	 mov	 ebx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN127@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  001e0	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001e3	f3 0f 11 0c d7	 movss	 DWORD PTR [edi+edx*8], xmm1
  001e8	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  001ec	85 f6		 test	 esi, esi
  001ee	0f 8f 2c ff ff
	ff		 jg	 $LL48@Sort_unche
  001f4	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  001f7	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  001fa	8b 45 fc	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  001fd	8b 4d f4	 mov	 ecx, DWORD PTR tv1146[ebp]
$LN49@Sort_unche:

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  00200	83 f8 02	 cmp	 eax, 2
  00203	0f 8c 8f 00 00
	00		 jl	 $LN87@Sort_unche

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);

  00209	83 c3 f8	 add	 ebx, -8			; fffffff8H
  0020c	83 c1 f8	 add	 ecx, -8			; fffffff8H
  0020f	89 4d 0c	 mov	 DWORD PTR tv1138[ebp], ecx
$LL88@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00212	8b 03		 mov	 eax, DWORD PTR [ebx]

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  00214	8b f1		 mov	 esi, ecx

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00216	89 45 f0	 mov	 DWORD PTR __Val$3[ebp], eax
  00219	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0021c	89 45 f4	 mov	 DWORD PTR __Val$3[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  0021f	8b 07		 mov	 eax, DWORD PTR [edi]
  00221	89 03		 mov	 DWORD PTR [ebx], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00223	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  00226	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00227	89 44 0f 04	 mov	 DWORD PTR [edi+ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  0022b	8d 45 f0	 lea	 eax, DWORD PTR __Val$3[ebp]
  0022e	50		 push	 eax
  0022f	c1 fe 03	 sar	 esi, 3
  00232	56		 push	 esi
  00233	6a 00		 push	 0
  00235	57		 push	 edi
  00236	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  0023b	8b 4d 0c	 mov	 ecx, DWORD PTR tv1138[ebp]
  0023e	8d 5b f8	 lea	 ebx, DWORD PTR [ebx-8]
  00241	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  00244	83 e9 08	 sub	 ecx, 8

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  00247	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  0024a	89 4d 0c	 mov	 DWORD PTR tv1138[ebp], ecx
  0024d	83 fe 02	 cmp	 esi, 2
  00250	7d c0		 jge	 SHORT $LL88@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  00252	5f		 pop	 edi
  00253	5e		 pop	 esi
  00254	5b		 pop	 ebx
  00255	8b e5		 mov	 esp, ebp
  00257	5d		 pop	 ebp
  00258	c3		 ret	 0
$LN139@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00259	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  0025d	89 5a 04	 mov	 DWORD PTR [edx+4], ebx
  00260	eb 2a		 jmp	 SHORT $LN46@Sort_unche
$LN122@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4444 :     while (_First != _Last) {

  00262	3b f7		 cmp	 esi, edi
  00264	74 1f		 je	 SHORT $LN30@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3987 :                 _Move_backward_unchecked(_First, _Next, ++_Next1);

  00266	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00269	0f 1f 80 00 00
	00 00		 npad	 7
$LL113@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00270	8b 41 f4	 mov	 eax, DWORD PTR [ecx-12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4445 :         *--_Dest = _STD move(*--_Last);

  00273	8d 49 f8	 lea	 ecx, DWORD PTR [ecx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00276	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00279	8b 01		 mov	 eax, DWORD PTR [ecx]
  0027b	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4444 :     while (_First != _Last) {

  0027e	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00281	3b c7		 cmp	 eax, edi
  00283	75 eb		 jne	 SHORT $LL113@Sort_unche
$LN30@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 292  :         first  = _STD forward<_Ty1>(_Right.first);

  00285	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1

; 293  :         second = _STD forward<_Ty2>(_Right.second);

  00289	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
$LN46@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  0028c	83 c6 08	 add	 esi, 8
  0028f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00292	0f 85 0c fe ff
	ff		 jne	 $LL11@Sort_unche
$LN87@Sort_unche:
  00298	5f		 pop	 edi

; 4129 :         }
; 4130 :     }
; 4131 : }

  00299	5e		 pop	 esi
  0029a	5b		 pop	 ebx
  0029b	8b e5		 mov	 esp, ebp
  0029d	5d		 pop	 ebp
  0029e	c3		 ret	 0
??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ENDP ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAEV?$allocator@E@std@@@std@@YAPAEQAE0PAEAAV?$allocator@E@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAEV?$allocator@E@std@@@std@@YAPAEQAE0PAEAAV?$allocator@E@0@@Z PROC ; std::_Uninitialized_move<unsigned char *,std::allocator<unsigned char> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00007	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000a	57		 push	 edi
  0000b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_memmove<unsigned char *,unsigned char *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00013	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	03 7d 10	 add	 edi, DWORD PTR __Dest$[ebp]
  0001c	8b c7		 mov	 eax, edi
  0001e	5f		 pop	 edi

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??$_Uninitialized_move@PAEV?$allocator@E@std@@@std@@YAPAEQAE0PAEAAV?$allocator@E@0@@Z ENDP ; std::_Uninitialized_move<unsigned char *,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 03	 sar	 edi, 3
  0001e	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAU?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@YAPAU?$pair@MJ@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAU?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@YAPAU?$pair@MJ@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z PROC ; std::_Uninitialized_move<std::pair<float,long> *,std::allocator<std::pair<float,long> > >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	56		 push	 esi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000d	3b ce		 cmp	 ecx, esi
  0000f	74 14		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 1508 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00011	8b 11		 mov	 edx, DWORD PTR [ecx]
  00013	89 10		 mov	 DWORD PTR [eax], edx
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 1509 :         ++_Last;

  00018	83 c1 08	 add	 ecx, 8
  0001b	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001e	83 c0 08	 add	 eax, 8

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00021	3b ce		 cmp	 ecx, esi
  00023	75 ec		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  00025	5e		 pop	 esi

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Uninitialized_move@PAU?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@YAPAU?$pair@MJ@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::pair<float,long> *,std::allocator<std::pair<float,long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0PAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0PAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z PROC ; std::_Uninitialized_move<CMapOutdoor::TPatchDrawStruct *,std::allocator<CMapOutdoor::TPatchDrawStruct> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00007	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000a	57		 push	 edi
  0000b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00013	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	83 e7 f0	 and	 edi, -16		; fffffff0H
  0001c	03 7d 10	 add	 edi, DWORD PTR __Dest$[ebp]
  0001f	8b c7		 mov	 eax, edi
  00021	5f		 pop	 edi

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Uninitialized_move@PAUTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0PAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ENDP ; std::_Uninitialized_move<CMapOutdoor::TPatchDrawStruct *,std::allocator<CMapOutdoor::TPatchDrawStruct> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z
_TEXT	SEGMENT
__Pbuf$ = 8						; size = 4
??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z PROC ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>, COMDAT

; 1409 : #ifdef __cpp_aligned_new
; 1410 :     if constexpr (alignof(_Ty) > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 1411 :         ::operator delete (_Pbuf, align_val_t{alignof(_Ty)});
; 1412 :     } else
; 1413 : #endif // __cpp_aligned_new
; 1414 :     {
; 1415 :         ::operator delete(_Pbuf);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ENDP ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Half_count$1$ = 16					; size = 4
__Count$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Capacity$ = 24					; size = 4
__Pred$ = 28						; size = 1
??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4295 :     _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR __Count$[ebp]

; 4296 :     // sort preserving order of equivalents, using _Pred
; 4297 :     using _Diff = _Iter_diff_t<_BidIt>;
; 4298 :     if (_Count <= _ISORT_MAX) {

  00007	83 fe 20	 cmp	 esi, 32			; 00000020H
  0000a	7f 14		 jg	 SHORT $LN2@Stable_sor

; 4299 :         _Insertion_sort_unchecked(_First, _Last, _Pred); // small

  0000c	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	5e		 pop	 esi

; 4313 :             _First, _Mid, _Last, _Half_count_ceil, _Half_count, _Temp_ptr, _Capacity, _Pred); // merge halves
; 4314 :     }
; 4315 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN2@Stable_sor:

; 4304 :         if (_Half_count_ceil <= _Capacity) { // temp buffer big enough, sort each half using buffer

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00023	8b c6		 mov	 eax, esi
  00025	d1 e8		 shr	 eax, 1
  00027	53		 push	 ebx
  00028	8b 5d 14	 mov	 ebx, DWORD PTR __Temp_ptr$[ebp]
  0002b	2b f0		 sub	 esi, eax
  0002d	57		 push	 edi
  0002e	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00031	8b fe		 mov	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4301 :         const auto _Half_count      = static_cast<_Diff>(_Count / 2);

  00033	89 45 10	 mov	 DWORD PTR __Half_count$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00036	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00039	c1 e7 04	 shl	 edi, 4
  0003c	03 f8		 add	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4304 :         if (_Half_count_ceil <= _Capacity) { // temp buffer big enough, sort each half using buffer

  0003e	3b f1		 cmp	 esi, ecx
  00040	7f 1e		 jg	 SHORT $LN4@Stable_sor

; 4305 :             _Buffered_merge_sort_unchecked(_First, _Mid, _Half_count_ceil, _Temp_ptr, _Pred);

  00042	53		 push	 ebx
  00043	56		 push	 esi
  00044	57		 push	 edi
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 4306 :             _Buffered_merge_sort_unchecked(_Mid, _Last, _Half_count, _Temp_ptr, _Pred);

  0004b	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  0004e	53		 push	 ebx
  0004f	ff 75 10	 push	 DWORD PTR __Half_count$1$[ebp]
  00052	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00055	57		 push	 edi
  00056	e8 00 00 00 00	 call	 ??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0005b	83 c4 28	 add	 esp, 40			; 00000028H

; 4307 :         } else { // temp buffer not big enough, divide and conquer

  0005e	eb 20		 jmp	 SHORT $LN5@Stable_sor
$LN4@Stable_sor:

; 4308 :             _Stable_sort_unchecked(_First, _Mid, _Half_count_ceil, _Temp_ptr, _Capacity, _Pred);

  00060	51		 push	 ecx
  00061	53		 push	 ebx
  00062	56		 push	 esi
  00063	57		 push	 edi
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 4309 :             _Stable_sort_unchecked(_Mid, _Last, _Half_count, _Temp_ptr, _Capacity, _Pred);

  0006a	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  0006d	ff 75 18	 push	 DWORD PTR __Capacity$[ebp]
  00070	53		 push	 ebx
  00071	ff 75 10	 push	 DWORD PTR __Half_count$1$[ebp]
  00074	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00077	57		 push	 edi
  00078	e8 00 00 00 00	 call	 ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0007d	83 c4 30	 add	 esp, 48			; 00000030H
$LN5@Stable_sor:

; 4310 :         }
; 4311 : 
; 4312 :         _Buffered_inplace_merge_unchecked(

  00080	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  00083	ff 75 18	 push	 DWORD PTR __Capacity$[ebp]
  00086	53		 push	 ebx
  00087	ff 75 10	 push	 DWORD PTR __Half_count$1$[ebp]
  0008a	56		 push	 esi
  0008b	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0008e	57		 push	 edi
  0008f	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00092	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00097	83 c4 20	 add	 esp, 32			; 00000020H
  0009a	5f		 pop	 edi
  0009b	5b		 pop	 ebx
  0009c	5e		 pop	 esi

; 4313 :             _First, _Mid, _Last, _Half_count_ceil, _Half_count, _Temp_ptr, _Capacity, _Pred); // merge halves
; 4314 :     }
; 4315 : }

  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ PROC ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>, COMDAT
; _this$ = ecx

; 65   :         if (static_cast<size_t>(_Capacity) > _Optimistic_count) {

  00000	81 79 04 00 01
	00 00		 cmp	 DWORD PTR [ecx+4], 256	; 00000100H
  00007	76 08		 jbe	 SHORT $LN2@Optimistic

; 66   :             _Return_temporary_buffer(_Data);

  00009	ff 31		 push	 DWORD PTR [ecx]
  0000b	e8 00 00 00 00	 call	 ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  00010	59		 pop	 ecx
$LN2@Optimistic:

; 67   :         }
; 68   :     }

  00011	c3		 ret	 0
??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ ENDP ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__Val$1$ = -68						; size = 16
__Val$1 = -52						; size = 16
tv1866 = -36						; size = 4
_lhsTerrainNumOrder$1$ = -36				; size = 4
tv1931 = -32						; size = 4
__Val$1$ = -28						; size = 4
__Next1$1$ = -24					; size = 4
__Next$1$ = -20						; size = 4
tv1880 = -16						; size = 4
tv1848 = -16						; size = 4
_rhsTerrainNumOrder$1$ = -16				; size = 4
tv1897 = -12						; size = 4
tv1918 = -8						; size = 4
tv1905 = -8						; size = 4
_rhsTerrainNumOrder$1$ = -8				; size = 4
tv1906 = -1						; size = 1
tv1879 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 3979 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(_BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3980 :     // insertion sort [_First, _Last), using _Pred
; 3981 :     if (_First != _Last) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00006	83 ec 44	 sub	 esp, 68			; 00000044H
  00009	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000c	3b c1		 cmp	 eax, ecx
  0000e	0f 84 fa 02 00
	00		 je	 $LN336@Insertion_

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00014	53		 push	 ebx
  00015	8d 58 10	 lea	 ebx, DWORD PTR [eax+16]
  00018	89 5d ec	 mov	 DWORD PTR __Next$1$[ebp], ebx
  0001b	3b d9		 cmp	 ebx, ecx
  0001d	0f 84 e4 02 00
	00		 je	 $LN337@Insertion_
  00023	83 c0 04	 add	 eax, 4
  00026	56		 push	 esi
  00027	89 45 e4	 mov	 DWORD PTR __Val$1$[ebp], eax
  0002a	57		 push	 edi
  0002b	0f 1f 44 00 00	 npad	 5
$LL2@Insertion_:

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00030	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00033	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3983 :             _BidIt _Next1              = _Next;

  00039	89 5d e8	 mov	 DWORD PTR __Next1$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0003c	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00042	0f 11 45 bc	 movups	 XMMWORD PTR __Val$1$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  00046	89 7d f8	 mov	 DWORD PTR tv1905[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  00049	0f 11 45 cc	 movups	 XMMWORD PTR __Val$1[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0004d	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00052	66 0f 7e c0	 movd	 eax, xmm0
  00056	0f b6 c8	 movzx	 ecx, al
  00059	89 45 e0	 mov	 DWORD PTR tv1931[ebp], eax
  0005c	8b c7		 mov	 eax, edi
  0005e	2b c3		 sub	 eax, ebx
  00060	89 4d f4	 mov	 DWORD PTR tv1897[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	53		 push	 ebx
  00066	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  0006b	85 c0		 test	 eax, eax
  0006d	8b cf		 mov	 ecx, edi
  0006f	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00078	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  0007a	8b 45 e4	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0007d	8a 08		 mov	 cl, BYTE PTR [eax]
  0007f	8b c7		 mov	 eax, edi
  00081	2b c3		 sub	 eax, ebx
  00083	88 4d ff	 mov	 BYTE PTR tv1906[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  00086	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00087	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0008a	50		 push	 eax
  0008b	53		 push	 ebx
  0008c	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00091	85 c0		 test	 eax, eax
  00093	8b cf		 mov	 ecx, edi
  00095	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5174 :     return _First;

  0009e	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  000a0	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv1848[ebp], 0
  000a7	8b c6		 mov	 eax, esi
  000a9	8b d7		 mov	 edx, edi
  000ab	2b c3		 sub	 eax, ebx

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000ad	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  000b0	3b f2		 cmp	 esi, edx
  000b2	0f 44 45 f0	 cmove	 eax, DWORD PTR tv1848[ebp]
  000b6	89 45 dc	 mov	 DWORD PTR _lhsTerrainNumOrder$1$[ebp], eax
  000b9	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000bb	74 04		 je	 SHORT $LN332@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  000bd	2b cb		 sub	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000bf	eb 3e		 jmp	 SHORT $LN341@Insertion_
$LN332@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000c1	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000c7	74 14		 je	 SHORT $LN109@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000c9	8a 45 ff	 mov	 al, BYTE PTR tv1906[ebp]
  000cc	88 02		 mov	 BYTE PTR [edx], al

; 690  :         ++_Mylast;

  000ce	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000d4	47		 inc	 edi
  000d5	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000db	eb 17		 jmp	 SHORT $LN108@Insertion_
$LN109@Insertion_:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000dd	ff 75 e4	 push	 DWORD PTR __Val$1$[ebp]
  000e0	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000e5	52		 push	 edx
  000e6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000eb	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000f1	8b 55 f8	 mov	 edx, DWORD PTR tv1905[ebp]
$LN108@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000f4	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000fa	8b cf		 mov	 ecx, edi
  000fc	2b cb		 sub	 ecx, ebx
  000fe	49		 dec	 ecx
$LN341@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000ff	3b f2		 cmp	 esi, edx
  00101	89 4d f0	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], ecx
  00104	8b 75 f4	 mov	 esi, DWORD PTR tv1897[ebp]
  00107	75 6d		 jne	 SHORT $LN338@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00109	8b c7		 mov	 eax, edi
  0010b	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0010d	50		 push	 eax
  0010e	56		 push	 esi
  0010f	53		 push	 ebx
  00110	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00115	85 c0		 test	 eax, eax
  00117	8b cf		 mov	 ecx, edi
  00119	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0011c	51		 push	 ecx
  0011d	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  00122	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00125	3b c7		 cmp	 eax, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00127	74 04		 je	 SHORT $LN333@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  00129	2b c3		 sub	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0012b	eb 4c		 jmp	 SHORT $LN18@Insertion_
$LN333@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0012d	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00133	74 1f		 je	 SHORT $LN161@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00135	8b 45 e0	 mov	 eax, DWORD PTR tv1931[ebp]
  00138	88 07		 mov	 BYTE PTR [edi], al

; 690  :         ++_Mylast;

  0013a	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00140	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00146	47		 inc	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00147	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00149	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0014f	2b c3		 sub	 eax, ebx
  00151	48		 dec	 eax
  00152	eb 25		 jmp	 SHORT $LN18@Insertion_
$LN161@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00154	8d 45 d0	 lea	 eax, DWORD PTR __Val$1[ebp+4]
  00157	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0015c	50		 push	 eax
  0015d	57		 push	 edi
  0015e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00163	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00169	8b c7		 mov	 eax, edi
  0016b	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00171	2b c3		 sub	 eax, ebx
  00173	48		 dec	 eax
  00174	eb 03		 jmp	 SHORT $LN18@Insertion_
$LN338@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  00176	8b 45 dc	 mov	 eax, DWORD PTR _lhsTerrainNumOrder$1$[ebp]
$LN18@Insertion_:

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00179	3b 45 f0	 cmp	 eax, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  0017c	73 20		 jae	 SHORT $LN9@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0017e	8b 5d ec	 mov	 ebx, DWORD PTR __Next$1$[ebp]
  00181	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00184	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  00187	50		 push	 eax
  00188	53		 push	 ebx
  00189	56		 push	 esi
  0018a	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  0018f	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR __Val$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00193	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  00196	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 3989 :             } else { // look for insertion point after first

  00199	e9 51 01 00 00	 jmp	 $LN10@Insertion_
$LN9@Insertion_:

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  0019e	8b 45 ec	 mov	 eax, DWORD PTR __Next$1$[ebp]
  001a1	83 c0 04	 add	 eax, 4
$LL7@Insertion_:
  001a4	83 e8 10	 sub	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5173 :     _Seek_wrapped(_First, _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

  001a7	89 7d f8	 mov	 DWORD PTR tv1918[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001aa	89 45 f0	 mov	 DWORD PTR tv1880[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001ad	8b c7		 mov	 eax, edi
  001af	2b c3		 sub	 eax, ebx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001b1	50		 push	 eax
  001b2	56		 push	 esi
  001b3	53		 push	 ebx
  001b4	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  001b9	85 c0		 test	 eax, eax
  001bb	8b cf		 mov	 ecx, edi
  001bd	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001c0	51		 push	 ecx
  001c1	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
  001c6	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001c8	8b 45 f0	 mov	 eax, DWORD PTR tv1880[ebp]
  001cb	8a 08		 mov	 cl, BYTE PTR [eax]
  001cd	8b c7		 mov	 eax, edi
  001cf	2b c3		 sub	 eax, ebx
  001d1	88 4d ff	 mov	 BYTE PTR tv1879[ebp], cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001d4	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  001d5	0f b6 c1	 movzx	 eax, cl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  001d8	50		 push	 eax
  001d9	53		 push	 ebx
  001da	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  001df	85 c0		 test	 eax, eax
  001e1	8b cf		 mov	 ecx, edi
  001e3	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001e6	51		 push	 ecx
  001e7	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>

; 149  :         return _Ptr == _Right._Ptr;

  001ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  001f2	8b de		 mov	 ebx, esi
  001f4	2b d9		 sub	 ebx, ecx
  001f6	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv1866[ebp], 0
  001fd	8b d7		 mov	 edx, edi

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  001ff	83 c4 20	 add	 esp, 32			; 00000020H

; 149  :         return _Ptr == _Right._Ptr;

  00202	3b f2		 cmp	 esi, edx
  00204	0f 44 5d dc	 cmove	 ebx, DWORD PTR tv1866[ebp]
  00208	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0020a	74 04		 je	 SHORT $LN334@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0020c	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  0020e	eb 3e		 jmp	 SHORT $LN342@Insertion_
$LN334@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00210	3b 15 08 00 00
	00		 cmp	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00216	74 14		 je	 SHORT $LN268@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00218	8a 45 ff	 mov	 al, BYTE PTR tv1879[ebp]
  0021b	88 02		 mov	 BYTE PTR [edx], al

; 690  :         ++_Mylast;

  0021d	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00223	47		 inc	 edi
  00224	89 3d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, edi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0022a	eb 17		 jmp	 SHORT $LN267@Insertion_
$LN268@Insertion_:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0022c	ff 75 f0	 push	 DWORD PTR tv1880[ebp]
  0022f	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0023a	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00240	8b 55 f8	 mov	 edx, DWORD PTR tv1918[ebp]
$LN267@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00243	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00249	8b c7		 mov	 eax, edi
  0024b	2b c1		 sub	 eax, ecx
  0024d	48		 dec	 eax
$LN342@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  0024e	3b f2		 cmp	 esi, edx
  00250	89 45 f8	 mov	 DWORD PTR _rhsTerrainNumOrder$1$[ebp], eax
  00253	8b 75 f4	 mov	 esi, DWORD PTR tv1897[ebp]
  00256	75 62		 jne	 SHORT $LN177@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5154 :     _First =

  00258	8b c7		 mov	 eax, edi
  0025a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memory.h

; 107  :         return const_cast<void*>(memchr(_Pvc, _C, _N));

  0025c	50		 push	 eax
  0025d	56		 push	 esi
  0025e	51		 push	 ecx
  0025f	e8 00 00 00 00	 call	 _memchr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5156 :     return _First ? _First : _Last;

  00264	85 c0		 test	 eax, eax
  00266	8b cf		 mov	 ecx, edi
  00268	0f 45 c8	 cmovne	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0026b	51		 push	 ecx
  0026c	e8 00 00 00 00	 call	 ??$_Refancy@PAE$0A@@std@@YAPAEPAE@Z ; std::_Refancy<unsigned char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00271	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00273	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 382  : 					lhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), lhs.byTerrainNum);

  00276	3b df		 cmp	 ebx, edi

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00278	74 08		 je	 SHORT $LN335@Insertion_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 140  :         return _Ptr - _Right._Ptr;

  0027a	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00280	eb 38		 jmp	 SHORT $LN177@Insertion_
$LN335@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00282	3b 3d 08 00 00
	00		 cmp	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00288	74 14		 je	 SHORT $LN320@Insertion_

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0028a	8b 45 e0	 mov	 eax, DWORD PTR tv1931[ebp]
  0028d	88 07		 mov	 BYTE PTR [edi], al

; 690  :         ++_Mylast;

  0028f	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00295	43		 inc	 ebx
  00296	89 1d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ebx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0029c	eb 15		 jmp	 SHORT $LN319@Insertion_
$LN320@Insertion_:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0029e	8d 45 d0	 lea	 eax, DWORD PTR __Val$1[ebp+4]
  002a1	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  002a6	50		 push	 eax
  002a7	57		 push	 edi
  002a8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  002ad	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN319@Insertion_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  002b3	2b 1d 00 00 00
	00		 sub	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  002b9	4b		 dec	 ebx
$LN177@Insertion_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  002ba	8b 4d e8	 mov	 ecx, DWORD PTR __Next1$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  002bd	3b 5d f8	 cmp	 ebx, DWORD PTR _rhsTerrainNumOrder$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  002c0	73 23		 jae	 SHORT $LN6@Insertion_

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  002c2	8b 45 f0	 mov	 eax, DWORD PTR tv1880[ebp]
  002c5	83 c0 fc	 add	 eax, -4			; fffffffcH
  002c8	89 45 e8	 mov	 DWORD PTR __Next1$1$[ebp], eax
  002cb	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  002ce	8b 45 f0	 mov	 eax, DWORD PTR tv1880[ebp]
  002d1	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  002d4	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  002da	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  002e0	e9 bf fe ff ff	 jmp	 $LL7@Insertion_
$LN6@Insertion_:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  002e5	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR __Val$1$[ebp]
  002e9	8b 5d ec	 mov	 ebx, DWORD PTR __Next$1$[ebp]
  002ec	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
$LN10@Insertion_:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  002ef	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  002f2	83 c3 10	 add	 ebx, 16			; 00000010H
  002f5	89 5d ec	 mov	 DWORD PTR __Next$1$[ebp], ebx
  002f8	3b d8		 cmp	 ebx, eax
  002fa	0f 85 30 fd ff
	ff		 jne	 $LL2@Insertion_

; 3995 :             }
; 3996 :         }
; 3997 :     }
; 3998 : 
; 3999 :     return _Last;

  00300	5f		 pop	 edi
  00301	5e		 pop	 esi
  00302	5b		 pop	 ebx

; 4000 : }

  00303	8b e5		 mov	 esp, ebp
  00305	5d		 pop	 ebp
  00306	c3		 ret	 0
$LN337@Insertion_:

; 3995 :             }
; 3996 :         }
; 3997 :     }
; 3998 : 
; 3999 :     return _Last;

  00307	8b c1		 mov	 eax, ecx
  00309	5b		 pop	 ebx

; 4000 : }

  0030a	8b e5		 mov	 esp, ebp
  0030c	5d		 pop	 ebp
  0030d	c3		 ret	 0
$LN336@Insertion_:

; 3995 :             }
; 3996 :         }
; 3997 :     }
; 3998 : 
; 3999 :     return _Last;

  0030e	8b c1		 mov	 eax, ecx

; 4000 : }

  00310	8b e5		 mov	 esp, ebp
  00312	5d		 pop	 ebp
  00313	c3		 ret	 0
??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Mid$1 = -8						; size = 8
__First$ = 8						; size = 4
__Val$2 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000b	8b c6		 mov	 eax, esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 fc	 and	 eax, -4			; fffffffcH
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0001e	7e 67		 jle	 SHORT $LN23@Sort_unche
  00020	8b 5d 10	 mov	 ebx, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	50		 push	 eax
  00024	56		 push	 esi
  00025	57		 push	 edi
  00026	85 db		 test	 ebx, ebx
  00028	7e 6f		 jle	 SHORT $LN24@Sort_unche

; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002a	8d 45 f8	 lea	 eax, DWORD PTR __Mid$1[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00033	8b 55 fc	 mov	 edx, DWORD PTR __Mid$1[ebp+4]
  00036	8b c3		 mov	 eax, ebx
  00038	c1 f8 02	 sar	 eax, 2
  0003b	8b ce		 mov	 ecx, esi
  0003d	d1 fb		 sar	 ebx, 1
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	03 d8		 add	 ebx, eax
  00044	2b ca		 sub	 ecx, edx
  00046	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  00049	83 e1 fc	 and	 ecx, -4			; fffffffcH
  0004c	2b c7		 sub	 eax, edi
  0004e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00051	3b c1		 cmp	 eax, ecx
  00053	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00056	50		 push	 eax
  00057	53		 push	 ebx
  00058	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005a	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  0005d	50		 push	 eax
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 4125 :             _First = _Mid.second;

  00064	8b 7d fc	 mov	 edi, DWORD PTR __Mid$1[ebp+4]

; 4126 :         } else { // loop on first half

  00067	eb 0a		 jmp	 SHORT $LN32@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00069	56		 push	 esi
  0006a	52		 push	 edx
  0006b	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 4128 :             _Last = _Mid.first;

  00070	8b 75 f8	 mov	 esi, DWORD PTR __Mid$1[ebp]
$LN32@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00073	8b c6		 mov	 eax, esi
  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	2b c7		 sub	 eax, edi
  0007a	83 e0 fc	 and	 eax, -4			; fffffffcH
  0007d	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  00082	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00085	7f 9c		 jg	 SHORT $LL2@Sort_unche
$LN23@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);

  00087	50		 push	 eax
  00088	56		 push	 esi
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@Sort_unche:

; 4129 :         }
; 4130 :     }
; 4131 : }

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
$LN24@Sort_unche:

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00099	e8 00 00 00 00	 call	 ??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  0009e	2b f7		 sub	 esi, edi

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  000a3	8b c6		 mov	 eax, esi
  000a5	83 e0 fc	 and	 eax, -4			; fffffffcH
  000a8	83 f8 08	 cmp	 eax, 8
  000ab	7c e5		 jl	 SHORT $LN12@Sort_unche
  000ad	0f 1f 00	 npad	 3
$LL13@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  000b0	8b 44 3e fc	 mov	 eax, DWORD PTR [esi+edi-4]

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  000b4	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  000b7	89 45 0c	 mov	 DWORD PTR __Val$2[ebp], eax

; 3386 :     *_Dest      = _STD move(*_First);

  000ba	8b 07		 mov	 eax, DWORD PTR [edi]
  000bc	89 44 3e fc	 mov	 DWORD PTR [esi+edi-4], eax

; 3387 :     using _Diff = _Iter_diff_t<_RanIt>;
; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  000c0	8d 45 0c	 lea	 eax, DWORD PTR __Val$2[ebp]
  000c3	50		 push	 eax
  000c4	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  000c7	c1 f8 02	 sar	 eax, 2
  000ca	50		 push	 eax
  000cb	6a 00		 push	 0
  000cd	57		 push	 edi
  000ce	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  000d3	83 ee 04	 sub	 esi, 4

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  000d6	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  000d9	8b c6		 mov	 eax, esi
  000db	83 e0 fc	 and	 eax, -4			; fffffffcH
  000de	83 f8 08	 cmp	 eax, 8
  000e1	7d cd		 jge	 SHORT $LL13@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z
_TEXT	SEGMENT
__Val$1 = -16						; size = 8
__Mid$2 = -16						; size = 8
__Val$2$ = -12						; size = 4
__Val$2$ = -8						; size = 4
__Val$1$ = -8						; size = 4
__Max_sequence_non_leaf$1$ = -4				; size = 4
__Bottom$1$ = 8						; size = 4
__Val$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z PROC ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	2b c6		 sub	 eax, esi
  00012	83 e0 f8	 and	 eax, -8			; fffffff8H
  00015	57		 push	 edi
  00016	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001b	7e 71		 jle	 SHORT $LN67@Sort_unche
  0001d	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00020	8b 7d 10	 mov	 edi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	85 ff		 test	 edi, edi
  00025	0f 8e aa 00 00
	00		 jle	 $LN68@Sort_unche

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002b	51		 push	 ecx
  0002c	53		 push	 ebx
  0002d	8d 45 f0	 lea	 eax, DWORD PTR __Mid$2[ebp]
  00030	56		 push	 esi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00037	8b 55 f4	 mov	 edx, DWORD PTR __Mid$2[ebp+4]
  0003a	8b c7		 mov	 eax, edi
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	8b cb		 mov	 ecx, ebx
  00041	d1 ff		 sar	 edi, 1
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	03 f8		 add	 edi, eax
  00048	2b ca		 sub	 ecx, edx
  0004a	8b 45 f0	 mov	 eax, DWORD PTR __Mid$2[ebp]
  0004d	83 e1 f8	 and	 ecx, -8			; fffffff8H
  00050	2b c6		 sub	 eax, esi
  00052	83 e0 f8	 and	 eax, -8			; fffffff8H
  00055	3b c1		 cmp	 eax, ecx
  00057	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005a	50		 push	 eax
  0005b	57		 push	 edi
  0005c	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005e	8b 45 f0	 mov	 eax, DWORD PTR __Mid$2[ebp]
  00061	50		 push	 eax
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4125 :             _First = _Mid.second;

  00068	8b 75 f4	 mov	 esi, DWORD PTR __Mid$2[ebp+4]

; 4126 :         } else { // loop on first half

  0006b	eb 0d		 jmp	 SHORT $LN91@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0006d	53		 push	 ebx
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4128 :             _Last = _Mid.first;

  00074	8b 5d f0	 mov	 ebx, DWORD PTR __Mid$2[ebp]
  00077	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
$LN91@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007a	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  0007d	8b c3		 mov	 eax, ebx
  0007f	2b c6		 sub	 eax, esi
  00081	83 c4 10	 add	 esp, 16			; 00000010H
  00084	83 e0 f8	 and	 eax, -8			; fffffff8H
  00087	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0008c	7f 95		 jg	 SHORT $LL2@Sort_unche
$LN67@Sort_unche:

; 3981 :     if (_First != _Last) {

  0008e	3b f3		 cmp	 esi, ebx
  00090	0f 84 9b 01 00
	00		 je	 $LN51@Sort_unche

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00096	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  00099	3b fb		 cmp	 edi, ebx
  0009b	0f 84 90 01 00
	00		 je	 $LN51@Sort_unche
$LL11@Sort_unche:

; 3983 :             _BidIt _Next1              = _Next;
; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000a1	8b 07		 mov	 eax, DWORD PTR [edi]
  000a3	8b d7		 mov	 edx, edi
  000a5	89 45 f8	 mov	 DWORD PTR __Val$2$[ebp], eax
  000a8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ab	89 45 08	 mov	 DWORD PTR __Val$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000ae	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000b1	0f 86 42 01 00
	00		 jbe	 $LN18@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000b7	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000ba	50		 push	 eax
  000bb	57		 push	 edi
  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000c2	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000c8	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
  000cb	89 0e		 mov	 DWORD PTR [esi], ecx
  000cd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 3989 :             } else { // look for insertion point after first

  000d0	e9 51 01 00 00	 jmp	 $LN19@Sort_unche
$LN68@Sort_unche:

; 3419 :     _Diff _Bottom = _Last - _First;

  000d5	2b de		 sub	 ebx, esi
  000d7	8b c3		 mov	 eax, ebx
  000d9	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
  000dc	c1 f8 03	 sar	 eax, 3

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  000df	8b f8		 mov	 edi, eax
  000e1	89 45 08	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  000e4	d1 ff		 sar	 edi, 1
  000e6	85 ff		 test	 edi, edi
  000e8	0f 8e b3 00 00
	00		 jle	 $LN31@Sort_unche
  000ee	8b d8		 mov	 ebx, eax
  000f0	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  000f3	d1 f8		 sar	 eax, 1
  000f5	89 45 fc	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
$LL30@Sort_unche:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  000f8	8b 44 fe f8	 mov	 eax, DWORD PTR [esi+edi*8-8]
  000fc	4f		 dec	 edi
  000fd	89 45 f4	 mov	 DWORD PTR __Val$2$[ebp], eax

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00100	8b d7		 mov	 edx, edi

; 3359 :     _Diff _Idx       = _Hole;

  00102	8b cf		 mov	 ecx, edi

; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00104	8b 44 fe 04	 mov	 eax, DWORD PTR [esi+edi*8+4]
  00108	89 45 f8	 mov	 DWORD PTR __Val$1$[ebp], eax

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0010b	8b 45 fc	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  0010e	3b f8		 cmp	 edi, eax
  00110	7d 2d		 jge	 SHORT $LN36@Sort_unche
  00112	8b d8		 mov	 ebx, eax
$LL35@Sort_unche:

; 3365 :         _Idx = 2 * _Idx + 2;

  00114	03 c9		 add	 ecx, ecx

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 3367 :             --_Idx;
; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00116	8b 44 ce 14	 mov	 eax, DWORD PTR [esi+ecx*8+20]
  0011a	39 44 ce 0c	 cmp	 DWORD PTR [esi+ecx*8+12], eax
  0011e	1b c0		 sbb	 eax, eax
  00120	83 c0 02	 add	 eax, 2
  00123	03 c8		 add	 ecx, eax
  00125	8b 04 ce	 mov	 eax, DWORD PTR [esi+ecx*8]
  00128	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  0012b	8b 44 ce 04	 mov	 eax, DWORD PTR [esi+ecx*8+4]
  0012f	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3370 :         _Hole             = _Idx;

  00133	8b d1		 mov	 edx, ecx
  00135	3b cb		 cmp	 ecx, ebx
  00137	7c db		 jl	 SHORT $LL35@Sort_unche
  00139	8b 5d 08	 mov	 ebx, DWORD PTR __Bottom$1$[ebp]
  0013c	8b 45 fc	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN36@Sort_unche:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0013f	3b d0		 cmp	 edx, eax
  00141	75 17		 jne	 SHORT $LN38@Sort_unche
  00143	f6 c3 01	 test	 bl, 1
  00146	75 12		 jne	 SHORT $LN38@Sort_unche

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00148	8b 44 de f8	 mov	 eax, DWORD PTR [esi+ebx*8-8]
  0014c	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  0014f	8b 44 de fc	 mov	 eax, DWORD PTR [esi+ebx*8-4]
  00153	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3375 :         _Hole             = _Bottom - 1;

  00157	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
$LN38@Sort_unche:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0015a	3b fa		 cmp	 edi, edx
  0015c	7d 25		 jge	 SHORT $LN44@Sort_unche
  0015e	8b 5d f8	 mov	 ebx, DWORD PTR __Val$1$[ebp]
$LL45@Sort_unche:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00161	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  00164	d1 f9		 sar	 ecx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00166	39 5c ce 04	 cmp	 DWORD PTR [esi+ecx*8+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0016a	76 14		 jbe	 SHORT $LN90@Sort_unche

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0016c	8b 04 ce	 mov	 eax, DWORD PTR [esi+ecx*8]
  0016f	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  00172	8b 44 ce 04	 mov	 eax, DWORD PTR [esi+ecx*8+4]
  00176	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3325 :         _Hole             = _Idx;

  0017a	8b d1		 mov	 edx, ecx
  0017c	3b f9		 cmp	 edi, ecx
  0017e	7c e1		 jl	 SHORT $LL45@Sort_unche
$LN90@Sort_unche:
  00180	8b 5d 08	 mov	 ebx, DWORD PTR __Bottom$1$[ebp]
$LN44@Sort_unche:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  00183	8b 45 f4	 mov	 eax, DWORD PTR __Val$2$[ebp]
  00186	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  00189	8b 45 f8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0018c	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00190	85 ff		 test	 edi, edi
  00192	0f 8f 60 ff ff
	ff		 jg	 $LL30@Sort_unche
  00198	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0019b	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  0019e	8b 45 08	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
$LN31@Sort_unche:

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001a1	83 f8 02	 cmp	 eax, 2
  001a4	0f 8c 87 00 00
	00		 jl	 $LN51@Sort_unche
  001aa	66 0f 1f 44 00
	00		 npad	 6
$LL52@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001b0	8b 44 1e f8	 mov	 eax, DWORD PTR [esi+ebx-8]
  001b4	89 45 f0	 mov	 DWORD PTR __Val$1[ebp], eax
  001b7	8b 44 1e fc	 mov	 eax, DWORD PTR [esi+ebx-4]
  001bb	89 45 f4	 mov	 DWORD PTR __Val$1[ebp+4], eax

; 3386 :     *_Dest      = _STD move(*_First);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	89 44 1e f8	 mov	 DWORD PTR [esi+ebx-8], eax
  001c4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001c7	89 44 1e fc	 mov	 DWORD PTR [esi+ebx-4], eax

; 3387 :     using _Diff = _Iter_diff_t<_RanIt>;
; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  001cb	8d 45 f0	 lea	 eax, DWORD PTR __Val$1[ebp]
  001ce	51		 push	 ecx
  001cf	50		 push	 eax
  001d0	8d 43 f8	 lea	 eax, DWORD PTR [ebx-8]
  001d3	c1 f8 03	 sar	 eax, 3
  001d6	50		 push	 eax
  001d7	6a 00		 push	 0
  001d9	56		 push	 esi
  001da	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001df	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  001e2	83 eb 08	 sub	 ebx, 8
  001e5	8b c3		 mov	 eax, ebx

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  001e7	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001ea	83 e0 f8	 and	 eax, -8			; fffffff8H
  001ed	83 f8 10	 cmp	 eax, 16			; 00000010H
  001f0	7d be		 jge	 SHORT $LL52@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
  001f5	8b e5		 mov	 esp, ebp
  001f7	5d		 pop	 ebp
  001f8	c3		 ret	 0
$LN18@Sort_unche:

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001f9	8d 4f f8	 lea	 ecx, DWORD PTR [edi-8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  001fc	3b 47 fc	 cmp	 eax, DWORD PTR [edi-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001ff	76 1d		 jbe	 SHORT $LN15@Sort_unche
  00201	8b 5d 08	 mov	 ebx, DWORD PTR __Val$1$[ebp]
$LL16@Sort_unche:

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  00204	8b 01		 mov	 eax, DWORD PTR [ecx]
  00206	89 02		 mov	 DWORD PTR [edx], eax
  00208	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0020b	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0020e	8b d1		 mov	 edx, ecx
  00210	83 e9 08	 sub	 ecx, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00213	3b 59 04	 cmp	 ebx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  00216	77 ec		 ja	 SHORT $LL16@Sort_unche
  00218	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0021b	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
$LN15@Sort_unche:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  0021e	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
  00221	89 0a		 mov	 DWORD PTR [edx], ecx
  00223	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN19@Sort_unche:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00226	83 c7 08	 add	 edi, 8
  00229	3b fb		 cmp	 edi, ebx
  0022b	0f 85 70 fe ff
	ff		 jne	 $LL11@Sort_unche
$LN51@Sort_unche:
  00231	5f		 pop	 edi

; 4129 :         }
; 4130 :     }
; 4131 : }

  00232	5e		 pop	 esi
  00233	5b		 pop	 ebx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c3		 ret	 0
??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ENDP ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPAEQAEAAV?$allocator@E@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPAEQAEAAV?$allocator@E@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned char> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPAEQAEAAV?$allocator@E@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicThingInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicThingInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea::SCRCWithNumber> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea::SCRCWithNumber> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<float,long> > >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@MJ@std@@@std@@@std@@YAXPAU?$pair@MJ@0@QAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<float,long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CMapOutdoor::TPatchDrawStruct> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMapOutdoor::TPatchDrawStruct> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv399 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	2b c1		 sub	 eax, ecx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001a	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  0001f	0f 84 a3 00 00
	00		 je	 $LN34@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00025	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00028	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	2b d1		 sub	 edx, ecx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002d	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00030	8b ca		 mov	 ecx, edx
  00032	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00037	d1 e9		 shr	 ecx, 1
  00039	2b c1		 sub	 eax, ecx
  0003b	3b d0		 cmp	 edx, eax
  0003d	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  0003f	8b df		 mov	 ebx, edi
  00041	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00043	8d 1c 11	 lea	 ebx, DWORD PTR [ecx+edx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00046	3b df		 cmp	 ebx, edi
  00048	0f 42 df	 cmovb	 ebx, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004b	53		 push	 ebx
  0004c	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00051	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  00054	8b f8		 mov	 edi, eax
  00056	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00059	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005c	03 c7		 add	 eax, edi
  0005e	89 45 fc	 mov	 DWORD PTR tv399[ebp], eax
  00061	8a 09		 mov	 cl, BYTE PTR [ecx]
  00063	88 08		 mov	 BYTE PTR [eax], cl

; 750  :         _Constructed_first = _Newvec + _Whereoff;
; 751  : 
; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00065	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00068	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b c2		 cmp	 eax, edx
  0006f	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00071	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00073	eb 16		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00075	56		 push	 esi
  00076	57		 push	 edi
  00077	50		 push	 eax
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAEV?$allocator@E@std@@@std@@YAPAEQAE0PAEAAV?$allocator@E@0@@Z ; std::_Uninitialized_move<unsigned char *,std::allocator<unsigned char> >

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0007e	8b 45 fc	 mov	 eax, DWORD PTR tv399[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00081	83 c4 10	 add	 esp, 16			; 00000010H
  00084	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00087	40		 inc	 eax

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00088	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0008b	56		 push	 esi
  0008c	50		 push	 eax
  0008d	52		 push	 edx
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAEV?$allocator@E@std@@@std@@YAPAEQAE0PAEAAV?$allocator@E@0@@Z ; std::_Uninitialized_move<unsigned char *,std::allocator<unsigned char> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00094	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00096	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00099	85 c9		 test	 ecx, ecx
  0009b	74 0f		 je	 SHORT $LN28@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0009d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a0	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a2	50		 push	 eax
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a9	83 c4 08	 add	 esp, 8
$LN28@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000ac	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000af	8b 45 fc	 mov	 eax, DWORD PTR tv399[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000b2	03 cf		 add	 ecx, edi
  000b4	89 3e		 mov	 DWORD PTR [esi], edi
  000b6	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000b9	8d 0c 1f	 lea	 ecx, DWORD PTR [edi+ebx]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000bc	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000bd	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx

; 767  :     }

  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 08 00	 ret	 8
$LN34@Emplace_re:

; 738  :             _Xlength();

  000c8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
$LN32@Emplace_re:
  000cd	cc		 int	 3
??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@QAEPAEQAEABE@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z PROC ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 03	 sar	 ebx, 3
  0001a	c1 f8 03	 sar	 eax, 3

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00022	0f 84 c4 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 03	 sar	 ecx, 3

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00056	0f 87 95 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 55 0c	 mov	 edx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 df	 lea	 eax, DWORD PTR [edi+ebx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00080	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00083	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00086	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00088	3b da		 cmp	 ebx, edx
  0008a	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008c	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008f	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00091	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00093	56		 push	 esi
  00094	57		 push	 edi
  00095	53		 push	 ebx
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@YAPAU?$pair@MJ@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ; std::_Uninitialized_move<std::pair<float,long> *,std::allocator<std::pair<float,long> > >
  0009c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009f	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a4	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a7	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
$LN5@Emplace_re:
  000aa	56		 push	 esi
  000ab	50		 push	 eax
  000ac	52		 push	 edx
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@YAPAU?$pair@MJ@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MJ@std@@@0@@Z ; std::_Uninitialized_move<std::pair<float,long> *,std::allocator<std::pair<float,long> > >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000b5	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	85 c9		 test	 ecx, ecx
  000ba	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	83 e0 f8	 and	 eax, -8			; fffffff8H
  000c4	50		 push	 eax
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000ce	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d1	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000d3	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000d5	8d 0c cf	 lea	 ecx, DWORD PTR [edi+ecx*8]
  000d8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000de	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e0	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000e1	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 767  :     }

  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000ec	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f1	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f6	cc		 int	 3
??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z ENDP ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z
_TEXT	SEGMENT
__Newvec$1$ = -8					; size = 4
tv431 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z PROC ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b c2		 sub	 eax, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00015	2b fa		 sub	 edi, edx
  00017	c1 f8 04	 sar	 eax, 4
  0001a	c1 ff 04	 sar	 edi, 4
  0001d	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  00020	81 ff ff ff ff
	0f		 cmp	 edi, 268435455		; 0fffffffH
  00026	0f 84 b7 00 00
	00		 je	 $LN41@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00034	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00036	47		 inc	 edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00037	c1 f9 04	 sar	 ecx, 4

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0003a	8b d1		 mov	 edx, ecx
  0003c	d1 ea		 shr	 edx, 1
  0003e	2b c2		 sub	 eax, edx
  00040	3b c8		 cmp	 ecx, eax
  00042	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00044	8b df		 mov	 ebx, edi
  00046	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00048	8d 1c 0a	 lea	 ebx, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004b	3b df		 cmp	 ebx, edi
  0004d	0f 42 df	 cmovb	 ebx, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00050	81 fb ff ff ff
	0f		 cmp	 ebx, 268435455		; 0fffffffH
  00056	0f 87 8c 00 00
	00		 ja	 $LN42@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e3 04	 shl	 ebx, 4

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	53		 push	 ebx
  00060	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00065	8b 55 fc	 mov	 edx, DWORD PTR __Whereoff$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00068	83 c4 04	 add	 esp, 4

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0006b	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006e	c1 e2 04	 shl	 edx, 4
  00071	03 d0		 add	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00073	89 45 f8	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00076	89 55 fc	 mov	 DWORD PTR tv431[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00079	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0007f	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00082	8b 16		 mov	 edx, DWORD PTR [esi]
  00084	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  00087	74 15		 je	 SHORT $LN5@Emplace_re

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	56		 push	 esi
  0008a	50		 push	 eax
  0008b	51		 push	 ecx
  0008c	52		 push	 edx
  0008d	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0PAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ; std::_Uninitialized_move<CMapOutdoor::TPatchDrawStruct *,std::allocator<CMapOutdoor::TPatchDrawStruct> >

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee
; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00092	8b 45 fc	 mov	 eax, DWORD PTR tv431[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee
; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	83 c0 10	 add	 eax, 16			; 00000010H
$LN5@Emplace_re:
  0009e	56		 push	 esi
  0009f	50		 push	 eax
  000a0	ff 76 04	 push	 DWORD PTR [esi+4]
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0PAU12@AAV?$allocator@UTPatchDrawStruct@CMapOutdoor@@@0@@Z ; std::_Uninitialized_move<CMapOutdoor::TPatchDrawStruct *,std::allocator<CMapOutdoor::TPatchDrawStruct> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000a9	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee
; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000ab	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ae	85 c9		 test	 ecx, ecx
  000b0	74 12		 je	 SHORT $LN35@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b2	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b5	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b7	83 e0 f0	 and	 eax, -16		; fffffff0H
  000ba	50		 push	 eax
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c1	83 c4 08	 add	 esp, 8
$LN35@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1680 :         _Myfirst = _Newvec;

  000c4	8b 45 f8	 mov	 eax, DWORD PTR __Newvec$1$[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c7	c1 e7 04	 shl	 edi, 4
  000ca	89 06		 mov	 DWORD PTR [esi], eax
  000cc	03 f8		 add	 edi, eax
  000ce	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d1	8d 0c 03	 lea	 ecx, DWORD PTR [ebx+eax]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d4	8b 45 fc	 mov	 eax, DWORD PTR tv431[ebp]
  000d7	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d8	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx

; 767  :     }

  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c2 08 00	 ret	 8
$LN41@Emplace_re:

; 738  :             _Xlength();

  000e3	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength
$LN42@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000e8	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN39@Emplace_re:
  000ed	cc		 int	 3
??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z ENDP ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
_TEXT	SEGMENT
__Raw$2 = -4128						; size = 8
$T3 = -4124						; size = 1
$T4 = -4124						; size = 1
__Temp_buf$ = -4120					; size = 4104
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z PROC ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 4318 : void stable_sort(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 14 10 00 00	 mov	 eax, 4116		; 00001014H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 4322 :     const auto _ULast  = _Get_unwrapped(_Last);

  00032	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00035	8b f3		 mov	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4321 :     const auto _UFirst = _Get_unwrapped(_First);

  00037	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0003a	2b f7		 sub	 esi, edi
  0003c	c1 fe 04	 sar	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4324 :     if (_Count <= _ISORT_MAX) {

  0003f	83 fe 20	 cmp	 esi, 32			; 00000020H
  00042	7f 15		 jg	 SHORT $LN2@stable_sor

; 4325 :         _Insertion_sort_unchecked(_UFirst, _ULast, _Pass_fn(_Pred));

  00044	ff b5 e4 ef ff
	ff		 push	 DWORD PTR $T4[ebp]
  0004a	53		 push	 ebx
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4326 :         return;

  00054	e9 9c 00 00 00	 jmp	 $LN16@stable_sor
$LN2@stable_sor:

; 4327 :     }
; 4328 : 
; 4329 :     _Optimistic_temporary_buffer<_Iter_value_t<_BidIt>> _Temp_buf{_Count - _Count / 2};

  00059	8b c6		 mov	 eax, esi
  0005b	8b ce		 mov	 ecx, esi
  0005d	99		 cdq
  0005e	2b c2		 sub	 eax, edx
  00060	d1 f8		 sar	 eax, 1
  00062	2b c8		 sub	 ecx, eax

; 29   :     return static_cast<ptrdiff_t>((_STD min)(static_cast<_CT>(PTRDIFF_MAX), static_cast<_CT>(_Value)));

  00064	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00069	3b c8		 cmp	 ecx, eax
  0006b	0f 4c c1	 cmovl	 eax, ecx

; 42   :         if (static_cast<size_t>(_Requested_size) <= _Optimistic_count) { // unconditionally engage stack space

  0006e	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  00074	76 39		 jbe	 SHORT $LN19@stable_sor

; 43   :             _Data     = reinterpret_cast<_Ty*>(&_Stack_space[0]);
; 44   :             _Capacity = static_cast<ptrdiff_t>(_Requested_size); // in bounds due to if condition
; 45   :             return;
; 46   :         }
; 47   : 
; 48   :         const pair<_Ty*, ptrdiff_t> _Raw = _Get_temporary_buffer<_Ty>(_Attempt);

  00076	50		 push	 eax
  00077	8d 85 e0 ef ff
	ff		 lea	 eax, DWORD PTR __Raw$2[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>

; 49   :         if (static_cast<size_t>(_Raw.second) > _Optimistic_count) { // engage heap space

  00083	8b 8d e4 ef ff
	ff		 mov	 ecx, DWORD PTR __Raw$2[ebp+4]
  00089	83 c4 08	 add	 esp, 8
  0008c	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  00092	76 08		 jbe	 SHORT $LN9@stable_sor

; 50   :             _Data     = _Raw.first;

  00094	8b 85 e0 ef ff
	ff		 mov	 eax, DWORD PTR __Raw$2[ebp]

; 51   :             _Capacity = _Raw.second;
; 52   :             return;

  0009a	eb 19		 jmp	 SHORT $LN20@stable_sor
$LN9@stable_sor:

; 53   :         }
; 54   : 
; 55   :         // less heap space than stack space, give up and use stack instead
; 56   :         _Return_temporary_buffer(_Raw.first);

  0009c	ff b5 e0 ef ff
	ff		 push	 DWORD PTR __Raw$2[ebp]
  000a2	e8 00 00 00 00	 call	 ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  000a7	83 c4 04	 add	 esp, 4

; 57   :         _Data     = reinterpret_cast<_Ty*>(&_Stack_space[0]);
; 58   :         _Capacity = _Optimistic_count;

  000aa	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
$LN19@stable_sor:

; 4327 :     }
; 4328 : 
; 4329 :     _Optimistic_temporary_buffer<_Iter_value_t<_BidIt>> _Temp_buf{_Count - _Count / 2};

  000af	8d 85 f0 ef ff
	ff		 lea	 eax, DWORD PTR __Temp_buf$[ebp+8]
$LN20@stable_sor:
  000b5	89 85 e8 ef ff
	ff		 mov	 DWORD PTR __Temp_buf$[ebp], eax
  000bb	89 8d ec ef ff
	ff		 mov	 DWORD PTR __Temp_buf$[ebp+4], ecx

; 4330 :     _Stable_sort_unchecked(_UFirst, _ULast, _Count, _Temp_buf._Data, _Temp_buf._Capacity, _Pass_fn(_Pred));

  000c1	ff b5 e4 ef ff
	ff		 push	 DWORD PTR $T3[ebp]
  000c7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ce	51		 push	 ecx
  000cf	50		 push	 eax
  000d0	56		 push	 esi
  000d1	53		 push	 ebx
  000d2	57		 push	 edi
  000d3	e8 00 00 00 00	 call	 ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  000d8	83 c4 18	 add	 esp, 24			; 00000018H

; 65   :         if (static_cast<size_t>(_Capacity) > _Optimistic_count) {

  000db	81 bd ec ef ff
	ff 00 01 00 00	 cmp	 DWORD PTR __Temp_buf$[ebp+4], 256 ; 00000100H
  000e5	76 0e		 jbe	 SHORT $LN16@stable_sor

; 66   :             _Return_temporary_buffer(_Data);

  000e7	ff b5 e8 ef ff
	ff		 push	 DWORD PTR __Temp_buf$[ebp]
  000ed	e8 00 00 00 00	 call	 ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  000f2	83 c4 04	 add	 esp, 4
$LN16@stable_sor:

; 4331 : }

  000f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ff	59		 pop	 ecx
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00106	33 cd		 xor	 ecx, ebp
  00108	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010d	8b e5		 mov	 esp, ebp
  0010f	5d		 pop	 ebp
  00110	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z$0:
  00000	8d 8d e8 ef ff
	ff		 lea	 ecx, DWORD PTR __Temp_buf$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a dc ef ff
	ff		 mov	 ecx, DWORD PTR [edx-4132]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z ENDP ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ
text$yd	SEGMENT
??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ PROC ; `CMapOutdoor::RenderBlendArea'::`2'::`dynamic atexit destructor for 's_kVct_pkBlendThingInstSort'', COMDAT

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00006	85 c9		 test	 ecx, ecx
  00008	74 32		 je	 SHORT $LN6@dynamic

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8
  0000f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e0 fc	 and	 eax, -4			; fffffffcH
  00014	50		 push	 eax
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A, 0

; 1698 :             _Mylast  = pointer();

  00028	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, 0

; 1699 :             _Myend   = pointer();

  00032	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8, 0
$LN6@dynamic:
  0003c	c3		 ret	 0
??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ ENDP ; `CMapOutdoor::RenderBlendArea'::`2'::`dynamic atexit destructor for 's_kVct_pkBlendThingInstSort''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ
text$yd	SEGMENT
??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ PROC ; `CMapOutdoor::RenderArea'::`33'::`dynamic atexit destructor for 's_kVct_pkOpaqueThingInstSort'', COMDAT

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00006	85 c9		 test	 ecx, ecx
  00008	74 32		 je	 SHORT $LN6@dynamic

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8
  0000f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e0 fc	 and	 eax, -4			; fffffffcH
  00014	50		 push	 eax
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A, 0

; 1698 :             _Mylast  = pointer();

  00028	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, 0

; 1699 :             _Myend   = pointer();

  00032	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8, 0
$LN6@dynamic:
  0003c	c3		 ret	 0
??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ ENDP ; `CMapOutdoor::RenderArea'::`33'::`dynamic atexit destructor for 's_kVct_pkOpaqueThingInstSort''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector'', COMDAT

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00006	85 c9		 test	 ecx, ecx
  00008	74 2f		 je	 SHORT $LN6@m_TerrainN

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0000f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00018	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A, 0

; 1698 :             _Mylast  = pointer();

  00025	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, 0

; 1699 :             _Myend   = pointer();

  0002f	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8, 0
$LN6@m_TerrainN:
  00039	c3		 ret	 0
??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ
text$di	SEGMENT
??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector'', COMDAT

; 15   : CMapOutdoor::TTerrainNumVector CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ
text$yd	SEGMENT
??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ PROC	; `dynamic atexit destructor for 'm_dwRenderedCRCWithNumberVector'', COMDAT

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A
  00006	85 c9		 test	 ecx, ecx
  00008	74 32		 je	 SHORT $LN6@dynamic

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+8
  0000f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e0 f8	 and	 eax, -8			; fffffff8H
  00014	50		 push	 eax
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A, 0

; 1698 :             _Mylast  = pointer();

  00028	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+4, 0

; 1699 :             _Myend   = pointer();

  00032	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+8, 0
$LN6@dynamic:
  0003c	c3		 ret	 0
??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ ENDP	; `dynamic atexit destructor for 'm_dwRenderedCRCWithNumberVector''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ??__Em_dwRenderedCRCWithNumberVector@@YAXXZ
text$di	SEGMENT
??__Em_dwRenderedCRCWithNumberVector@@YAXXZ PROC	; `dynamic initializer for 'm_dwRenderedCRCWithNumberVector'', COMDAT

; 13   : CArea::TCRCWithNumberVector m_dwRenderedCRCWithNumberVector;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ ; `dynamic atexit destructor for 'm_dwRenderedCRCWithNumberVector''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Em_dwRenderedCRCWithNumberVector@@YAXXZ ENDP	; `dynamic initializer for 'm_dwRenderedCRCWithNumberVector''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_c_rv3Center$ = 8					; size = 4
_fDistance$ = 12					; size = 4
_lPatchNum$ = 16					; size = 4
?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z PROC ; CMapOutdoor::__RenderTerrain_AppendPatch, COMDAT
; _this$ = ecx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 120  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::__RenderTerrain_AppendPatch");
; 121  : 	if (!m_pTerrainPatchProxyList[lPatchNum].isUsed())

  00007	8b 75 10	 mov	 esi, DWORD PTR _lPatchNum$[ebp]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8d 14 f5 00 00
	00 00		 lea	 edx, DWORD PTR [esi*8]
  00014	2b d6		 sub	 edx, esi
  00016	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  00019	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  0001e	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]
  00021	74 41		 je	 SHORT $LN10@RenderTerr

; 122  : 		return;
; 123  : 
; 124  : 	m_pTerrainPatchProxyList[lPatchNum].SetCenterPosition(c_rv3Center);

  00023	ff 75 08	 push	 DWORD PTR _c_rv3Center$[ebp]
  00026	e8 00 00 00 00	 call	 ?SetCenterPosition@CTerrainPatchProxy@@QAEXABUD3DXVECTOR3@@@Z ; CTerrainPatchProxy::SetCenterPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fDistance$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 125  : 	m_PatchVector.push_back(std::make_pair(fDistance, lPatchNum));

  00030	8d 8f 18 01 00
	00		 lea	 ecx, DWORD PTR [edi+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00036	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00039	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp], xmm0
  0003e	89 75 fc	 mov	 DWORD PTR $T1[ebp+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00041	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00044	74 14		 je	 SHORT $LN11@RenderTerr

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00046	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00049	89 02		 mov	 DWORD PTR [edx], eax
  0004b	89 72 04	 mov	 DWORD PTR [edx+4], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0004e	83 41 04 08	 add	 DWORD PTR [ecx+4], 8
  00052	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 126  : }

  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 0c 00	 ret	 12			; 0000000cH
$LN11@RenderTerr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005a	8d 45 f8	 lea	 eax, DWORD PTR $T1[ebp]
  0005d	50		 push	 eax
  0005e	52		 push	 edx
  0005f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@QAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >
$LN10@RenderTerr:
  00064	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 126  : }

  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 0c 00	 ret	 12			; 0000000cH
?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z ENDP ; CMapOutdoor::__RenderTerrain_AppendPatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z
_TEXT	SEGMENT
_distance$ = -28					; size = 24
_center$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_c_v3Center$ = 8					; size = 4
_c_fRadius$ = 12					; size = 4
?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z PROC ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 94   : 	const int count = 6;
; 95   : 
; 96   : 	D3DXVECTOR3 center = c_v3Center;

  00010	8b 45 08	 mov	 eax, DWORD PTR _c_v3Center$[ebp]

; 97   : 	center.y = -center.y;
; 98   : 
; 99   : 	int i;
; 100  : 
; 101  : 	float distance[count];
; 102  : 	for(i = 0; i < count; ++i)

  00013	33 d2		 xor	 edx, edx
  00015	81 c1 24 02 00
	00		 add	 ecx, 548		; 00000224H
  0001b	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00022	89 45 f8	 mov	 DWORD PTR _center$[ebp+8], eax

; 105  : 		if (distance[i] <= -c_fRadius)

  00025	8b 45 0c	 mov	 eax, DWORD PTR _c_fRadius$[ebp]
  00028	f3 0f 10 6d f8	 movss	 xmm5, DWORD PTR _center$[ebp+8]
  0002d	66 0f d6 45 f0	 movq	 QWORD PTR _center$[ebp], xmm0
  00032	f3 0f 10 5d f4	 movss	 xmm3, DWORD PTR _center$[ebp+4]
  00037	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  0003b	0f 57 1d 00 00
	00 00		 xorps	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  00042	0f 28 e2	 movaps	 xmm4, xmm2
  00045	0f 57 25 00 00
	00 00		 xorps	 xmm4, DWORD PTR __xmm@80000000800000008000000080000000
  0004c	f3 0f 10 75 f0	 movss	 xmm6, DWORD PTR _center$[ebp]
$LL4@RenderTerr:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00051	f3 0f 10 41 fc	 movss	 xmm0, DWORD PTR [ecx-4]
  00056	f3 0f 10 49 f8	 movss	 xmm1, DWORD PTR [ecx-8]
  0005b	f3 0f 59 ce	 mulss	 xmm1, xmm6
  0005f	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00063	f3 0f 58 c8	 addss	 xmm1, xmm0
  00067	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0006b	f3 0f 59 c5	 mulss	 xmm0, xmm5
  0006f	f3 0f 58 c8	 addss	 xmm1, xmm0
  00073	f3 0f 58 49 04	 addss	 xmm1, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 105  : 		if (distance[i] <= -c_fRadius)

  00078	0f 2f e1	 comiss	 xmm4, xmm1
  0007b	f3 0f 11 4c 95
	e4		 movss	 DWORD PTR _distance$[ebp+edx*4], xmm1
  00081	73 44		 jae	 SHORT $LN15@RenderTerr

; 97   : 	center.y = -center.y;
; 98   : 
; 99   : 	int i;
; 100  : 
; 101  : 	float distance[count];
; 102  : 	for(i = 0; i < count; ++i)

  00083	42		 inc	 edx
  00084	83 c1 10	 add	 ecx, 16			; 00000010H
  00087	83 fa 06	 cmp	 edx, 6
  0008a	7c c5		 jl	 SHORT $LL4@RenderTerr

; 106  : 			return VIEW_NONE;
; 107  : 	}
; 108  : 
; 109  : 	for(i = 0; i < count;++i)

  0008c	33 c0		 xor	 eax, eax
  0008e	66 90		 npad	 2
$LL7@RenderTerr:

; 110  : 	{
; 111  : 		if (distance[i] <= c_fRadius)

  00090	0f 2f 54 85 e4	 comiss	 xmm2, DWORD PTR _distance$[ebp+eax*4]
  00095	73 1b		 jae	 SHORT $LN16@RenderTerr

; 106  : 			return VIEW_NONE;
; 107  : 	}
; 108  : 
; 109  : 	for(i = 0; i < count;++i)

  00097	40		 inc	 eax
  00098	83 f8 06	 cmp	 eax, 6
  0009b	7c f3		 jl	 SHORT $LL7@RenderTerr

; 113  : 	}
; 114  : 
; 115  : 	return VIEW_ALL;

  0009d	b8 02 00 00 00	 mov	 eax, 2

; 116  : }

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	33 cd		 xor	 ecx, ebp
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
$LN16@RenderTerr:

; 112  : 			return VIEW_PART;

  000b2	b8 01 00 00 00	 mov	 eax, 1

; 116  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
$LN15@RenderTerr:
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	33 c0		 xor	 eax, eax
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 08 00	 ret	 8
?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ENDP ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z
_TEXT	SEGMENT
_fDistance$1 = -24					; size = 4
_this$GSCopy$1$ = -20					; size = 4
_v3Center$2 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_Node$ = 8						; size = 4
_bCullCheckNeed$ = 12					; size = 1
?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z PROC ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _Node$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _bCullCheckNeed$[ebp]
  00018	89 4d ec	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0001b	0f 1f 44 00 00	 npad	 5
$LL23@RenderTerr:

; 55   : 	if (bCullCheckNeed)

  00020	80 7d 0c 00	 cmp	 BYTE PTR _bCullCheckNeed$[ebp], 0
  00024	74 25		 je	 SHORT $LN2@RenderTerr

; 56   : 	{
; 57   : 		switch (__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle(Node->center, Node->radius))

  00026	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00029	50		 push	 eax
  0002a	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
  00033	83 e8 00	 sub	 eax, 0
  00036	0f 84 bc 00 00
	00		 je	 $LN13@RenderTerr
  0003c	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0003f	83 e8 02	 sub	 eax, 2
  00042	75 07		 jne	 SHORT $LN2@RenderTerr

; 58   : 		{
; 59   : 			case VIEW_ALL:
; 60   : 				// all child nodes need not cull check
; 61   : 				bCullCheckNeed = false;

  00044	c6 45 0c 00	 mov	 BYTE PTR _bCullCheckNeed$[ebp], 0
  00048	8b 7d 0c	 mov	 edi, DWORD PTR _bCullCheckNeed$[ebp]
$LN2@RenderTerr:

; 62   : 				break;
; 63   : 			case VIEW_PART:
; 64   : 				break;
; 65   : 			case VIEW_NONE:
; 66   : 				// no need to render
; 67   : 				return;
; 68   : 		}
; 69   : 		// if no need cull check more
; 70   : 		// -> bCullCheckNeed = false;
; 71   : 	}
; 72   : 
; 73   : 	if (Node->Size == 1)

  0004b	83 7e 24 01	 cmp	 DWORD PTR [esi+36], 1
  0004f	74 3c		 je	 SHORT $LN25@RenderTerr

; 78   : 	}
; 79   : 	else
; 80   : 	{
; 81   : 		if (Node->NW_Node != NULL)

  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	85 c0		 test	 eax, eax
  00056	74 07		 je	 SHORT $LN10@RenderTerr

; 82   : 			__RenderTerrain_RecurseRenderQuadTree(Node->NW_Node, bCullCheckNeed);

  00058	57		 push	 edi
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
$LN10@RenderTerr:

; 83   : 		if (Node->NE_Node != NULL)

  0005f	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00062	85 c0		 test	 eax, eax
  00064	74 0a		 je	 SHORT $LN11@RenderTerr

; 84   : 			__RenderTerrain_RecurseRenderQuadTree(Node->NE_Node, bCullCheckNeed);

  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00069	57		 push	 edi
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
$LN11@RenderTerr:

; 85   : 		if (Node->SW_Node != NULL)

  00070	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00073	85 c0		 test	 eax, eax
  00075	74 0a		 je	 SHORT $LN12@RenderTerr

; 86   : 			__RenderTerrain_RecurseRenderQuadTree(Node->SW_Node, bCullCheckNeed);

  00077	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0007a	57		 push	 edi
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
$LN12@RenderTerr:

; 87   : 		if (Node->SE_Node != NULL)

  00081	8b 76 20	 mov	 esi, DWORD PTR [esi+32]
  00084	85 f6		 test	 esi, esi
  00086	74 70		 je	 SHORT $LN13@RenderTerr

; 88   : 			__RenderTerrain_RecurseRenderQuadTree(Node->SE_Node, bCullCheckNeed);

  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0008b	eb 93		 jmp	 SHORT $LL23@RenderTerr
$LN25@RenderTerr:

; 74   : 	{
; 75   : 		D3DXVECTOR3 v3Center = Node->center;

  0008d	f3 0f 7e 46 2c	 movq	 xmm0, QWORD PTR [esi+44]

; 76   : 		float fDistance = fMAX(fabs(v3Center.x + m_fXforDistanceCaculation), fabs(-v3Center.y + m_fYforDistanceCaculation));

  00092	83 ec 08	 sub	 esp, 8
  00095	f3 0f 10 91 14
	09 00 00	 movss	 xmm2, DWORD PTR [ecx+2324]
  0009d	f3 0f 10 89 10
	09 00 00	 movss	 xmm1, DWORD PTR [ecx+2320]
  000a5	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000a8	66 0f d6 45 f0	 movq	 QWORD PTR _v3Center$2[ebp], xmm0
  000ad	f3 0f 5c 55 f4	 subss	 xmm2, DWORD PTR _v3Center$2[ebp+4]
  000b2	f3 0f 58 4d f0	 addss	 xmm1, DWORD PTR _v3Center$2[ebp]
  000b7	89 45 f8	 mov	 DWORD PTR _v3Center$2[ebp+8], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  000ba	0f 54 15 00 00
	00 00		 andps	 xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
  000c1	0f 54 0d 00 00
	00 00		 andps	 xmm1, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 76   : 		float fDistance = fMAX(fabs(v3Center.x + m_fXforDistanceCaculation), fabs(-v3Center.y + m_fYforDistanceCaculation));

  000c8	f3 0f 11 54 24
	04		 movss	 DWORD PTR [esp+4], xmm2
  000ce	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000d3	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX
  000d8	83 c4 08	 add	 esp, 8

; 77   : 		__RenderTerrain_AppendPatch(v3Center, fDistance, Node->PatchNum);

  000db	8d 45 f0	 lea	 eax, DWORD PTR _v3Center$2[ebp]
  000de	d9 5d e8	 fstp	 DWORD PTR _fDistance$1[ebp]
  000e1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fDistance$1[ebp]
  000e6	ff 76 28	 push	 DWORD PTR [esi+40]
  000e9	51		 push	 ecx
  000ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z ; CMapOutdoor::__RenderTerrain_AppendPatch
$LN13@RenderTerr:

; 89   : 	}
; 90   : }

  000f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fb	5f		 pop	 edi
  000fc	33 cd		 xor	 ecx, ebp
  000fe	5e		 pop	 esi
  000ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 08 00	 ret	 8
?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ENDP ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__GetFogDistance@CMapOutdoor@@IAEMXZ
_TEXT	SEGMENT
tv132 = -4						; size = 4
?__GetFogDistance@CMapOutdoor@@IAEMXZ PROC		; CMapOutdoor::__GetFogDistance, COMDAT
; _this$ = ecx

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 734  : 	return (float)(CTerrainImpl::CELLSCALE * m_lViewRadius) * 0.75f;

  00004	69 41 68 c8 00
	00 00		 imul	 eax, DWORD PTR [ecx+104], 200
  0000b	66 0f 6e c0	 movd	 xmm0, eax
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f400000
  0001a	f3 0f 11 45 fc	 movss	 DWORD PTR tv132[ebp], xmm0
  0001f	d9 45 fc	 fld	 DWORD PTR tv132[ebp]

; 735  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?__GetFogDistance@CMapOutdoor@@IAEMXZ ENDP		; CMapOutdoor::__GetFogDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__GetNoFogDistance@CMapOutdoor@@IAEMXZ
_TEXT	SEGMENT
tv132 = -4						; size = 4
?__GetNoFogDistance@CMapOutdoor@@IAEMXZ PROC		; CMapOutdoor::__GetNoFogDistance, COMDAT
; _this$ = ecx

; 728  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 729  : 	return (float)(CTerrainImpl::CELLSCALE * m_lViewRadius) * 0.5f;

  00004	69 41 68 c8 00
	00 00		 imul	 eax, DWORD PTR [ecx+104], 200
  0000b	66 0f 6e c0	 movd	 xmm0, eax
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0001a	f3 0f 11 45 fc	 movss	 DWORD PTR tv132[ebp], xmm0
  0001f	d9 45 fc	 fld	 DWORD PTR tv132[ebp]

; 730  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?__GetNoFogDistance@CMapOutdoor@@IAEMXZ ENDP		; CMapOutdoor::__GetNoFogDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
?IsVisiblePart@CMapOutdoor@@IAE_NH@Z PROC		; CMapOutdoor::IsVisiblePart, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx

; 155  : 	DWORD dwMask=(1<<ePart);

  00005	b8 01 00 00 00	 mov	 eax, 1
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _ePart$[ebp]
  0000d	d3 e0		 shl	 eax, cl

; 156  : 	if (dwMask & m_dwVisiblePartFlags)

  0000f	85 82 80 09 00
	00		 test	 eax, DWORD PTR [edx+2432]
  00015	0f 95 c0	 setne	 al

; 157  : 		return true;
; 158  : 
; 159  : 	return false;
; 160  : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ENDP		; CMapOutdoor::IsVisiblePart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?InitializeVisibleParts@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?InitializeVisibleParts@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::InitializeVisibleParts, COMDAT
; _this$ = ecx

; 136  : 	m_dwVisiblePartFlags=0xffffffff;

  00000	c7 81 80 09 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+2432], -1

; 137  : }

  0000a	c3		 ret	 0
?InitializeVisibleParts@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::InitializeVisibleParts
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_byLODLevel$ = 8					; size = 1
_pwPrimitiveCount$ = 12					; size = 4
_pePrimitiveType$ = 16					; size = 4
?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::SelectIndexBuffer, COMDAT
; _this$ = ecx

; 650  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8a 45 08	 mov	 al, BYTE PTR _byLODLevel$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	0f b6 f0	 movzx	 esi, al
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	0f b7 94 77 d8
	00 00 00	 movzx	 edx, WORD PTR [edi+esi*2+216]

; 651  : #ifdef WORLD_EDITOR
; 652  : 	*pwPrimitiveCount = m_wNumIndices - 2;
; 653  : 	*pePrimitiveType = D3DPT_TRIANGLESTRIP;
; 654  : 	STATEMANAGER.SetIndices(m_IndexBuffer.GetD3DIndexBuffer(), 0);
; 655  : #else
; 656  : 	if (0 == byLODLevel)

  00016	84 c0		 test	 al, al
  00018	75 0d		 jne	 SHORT $LN2@SelectInde

; 657  : 	{
; 658  : 		*pwPrimitiveCount = m_wNumIndices[byLODLevel] - 2;

  0001a	8d 42 fe	 lea	 eax, DWORD PTR [edx-2]

; 659  : 		*pePrimitiveType = D3DPT_TRIANGLESTRIP;

  0001d	bb 05 00 00 00	 mov	 ebx, 5
  00022	0f b7 c8	 movzx	 ecx, ax

; 660  : 	}

  00025	eb 13		 jmp	 SHORT $LN3@SelectInde
$LN2@SelectInde:

; 661  : 	else
; 662  : 	{
; 663  : 		*pwPrimitiveCount =  m_wNumIndices[byLODLevel]/3;
; 664  : 		*pePrimitiveType = D3DPT_TRIANGLELIST;

  00027	8b ca		 mov	 ecx, edx
  00029	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0002e	f7 e1		 mul	 ecx
  00030	bb 04 00 00 00	 mov	 ebx, 4
  00035	d1 ea		 shr	 edx, 1
  00037	0f b7 ca	 movzx	 ecx, dx
$LN3@SelectInde:

; 665  : 	}
; 666  : 	STATEMANAGER.SetIndices(m_IndexBuffer[byLODLevel].GetD3DIndexBuffer(), 0);

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _pwPrimitiveCount$[ebp]
  0003d	6a 00		 push	 0
  0003f	66 89 08	 mov	 WORD PTR [eax], cx
  00042	8b 45 10	 mov	 eax, DWORD PTR _pePrimitiveType$[ebp]
  00045	89 18		 mov	 DWORD PTR [eax], ebx
  00047	8d 04 b5 27 00
	00 00		 lea	 eax, DWORD PTR [esi*4+39]
  0004e	03 c6		 add	 eax, esi
  00050	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  00053	e8 00 00 00 00	 call	 ?GetD3DIndexBuffer@CGraphicIndexBuffer@@QBEPAUIDirect3DIndexBuffer8@@XZ ; CGraphicIndexBuffer::GetD3DIndexBuffer
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx

; 667  : #endif
; 668  : }

  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::SelectIndexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_patchnum$ = 8						; size = 4
_wPrimitiveCount$ = 12					; size = 2
_ePrimitiveType$ = 16					; size = 4
?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::DrawWireFrame, COMDAT
; _this$ = ecx

; 773  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 774  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::DrawWireFrame");
; 775  : 
; 776  : 	CTerrainPatchProxy * pTerrainPatchProxy= &m_pTerrainPatchProxyList[patchnum];

  00003	8b 45 08	 mov	 eax, DWORD PTR _patchnum$[ebp]
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00010	2b d0		 sub	 edx, eax
  00012	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 777  : 
; 778  : 	if (!pTerrainPatchProxy->isUsed())

  00015	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  0001a	0f 84 03 01 00
	00		 je	 $LN1@DrawWireFr

; 779  : 		return;
; 780  : 
; 781  : 	long sPatchNum = pTerrainPatchProxy->GetPatchNum();
; 782  : 	if (sPatchNum < 0)

  00020	66 83 7c 90 06
	00		 cmp	 WORD PTR [eax+edx*4+6], 0
  00026	0f 8c f7 00 00
	00		 jl	 $LN1@DrawWireFr

; 783  : 		return;
; 784  : 	BYTE ucTerrainNum = pTerrainPatchProxy->GetTerrainNum();
; 785  : 	if (0xFF == ucTerrainNum)

  0002c	80 7c 90 08 ff	 cmp	 BYTE PTR [eax+edx*4+8], 255 ; 000000ffH
  00031	0f 84 ec 00 00
	00		 je	 $LN1@DrawWireFr

; 786  : 		return;
; 787  : 
; 788  : 	DWORD dwFillMode = STATEMANAGER.GetRenderState(D3DRS_FILLMODE);

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003d	56		 push	 esi
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 789  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, D3DFILL_WIREFRAME);

  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004c	8b f8		 mov	 edi, eax
  0004e	6a 02		 push	 2
  00050	6a 08		 push	 8
  00052	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 790  : 
; 791  : 	DWORD dwFogEnable = STATEMANAGER.GetRenderState(D3DRS_FOGENABLE);

  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005d	6a 1c		 push	 28			; 0000001cH
  0005f	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 792  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006a	8b f0		 mov	 esi, eax
  0006c	6a 00		 push	 0
  0006e	6a 1c		 push	 28			; 0000001cH
  00070	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 793  : 
; 794  : 	STATEMANAGER.SetTexture(0, NULL);

  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007b	6a 00		 push	 0
  0007d	6a 00		 push	 0
  0007f	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 795  : 	STATEMANAGER.SetTexture(1, NULL);

  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008a	6a 00		 push	 0
  0008c	6a 01		 push	 1
  0008e	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 796  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00093	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00099	6a 01		 push	 1
  0009b	6a 01		 push	 1
  0009d	6a 00		 push	 0
  0009f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 797  : 
; 798  : 	STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  000a4	0f b7 45 0c	 movzx	 eax, WORD PTR _wPrimitiveCount$[ebp]
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ae	50		 push	 eax
  000af	6a 00		 push	 0
  000b1	ff b3 a0 09 00
	00		 push	 DWORD PTR [ebx+2464]
  000b7	6a 00		 push	 0
  000b9	ff 75 10	 push	 DWORD PTR _ePrimitiveType$[ebp]
  000bc	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 799  : 
; 800  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, dwFillMode);

  000c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c7	57		 push	 edi
  000c8	6a 08		 push	 8
  000ca	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 801  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, dwFogEnable);

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d5	56		 push	 esi
  000d6	6a 1c		 push	 28			; 0000001cH
  000d8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 802  : 
; 803  :  	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e3	6a 02		 push	 2
  000e5	6a 02		 push	 2
  000e7	6a 00		 push	 0
  000e9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 804  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_CURRENT);

  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f4	6a 01		 push	 1
  000f6	6a 03		 push	 3
  000f8	6a 00		 push	 0
  000fa	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 805  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	c7 45 10 04 00
	00 00		 mov	 DWORD PTR _ePrimitiveType$[ebp], 4
  00109	c7 45 0c 01 00
	00 00		 mov	 DWORD PTR _wPrimitiveCount$[ebp], 1
  00110	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _patchnum$[ebp], 0
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 806  : }

  0011d	5d		 pop	 ebp

; 805  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  0011e	e9 00 00 00 00	 jmp	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
$LN1@DrawWireFr:
  00123	5b		 pop	 ebx

; 806  : }

  00124	5d		 pop	 ebp
  00125	c2 0c 00	 ret	 12			; 0000000cH
?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::DrawWireFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_pTerrainPatchProxy$ = 8				; size = 4
_wPrimitiveCount$ = 12					; size = 2
_ePrimitiveType$ = 16					; size = 4
?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::NEW_DrawWireFrame, COMDAT
; _this$ = ecx

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 752  : 	DWORD dwFillMode = STATEMANAGER.GetRenderState(D3DRS_FILLMODE);

  00008	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000e	6a 08		 push	 8
  00010	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 753  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, D3DFILL_WIREFRAME);

  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0001b	8b d8		 mov	 ebx, eax
  0001d	6a 02		 push	 2
  0001f	6a 08		 push	 8
  00021	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 754  : 
; 755  : 	DWORD dwFogEnable = STATEMANAGER.GetRenderState(D3DRS_FOGENABLE);

  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002c	6a 1c		 push	 28			; 0000001cH
  0002e	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 756  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00039	8b f0		 mov	 esi, eax
  0003b	6a 00		 push	 0
  0003d	6a 1c		 push	 28			; 0000001cH
  0003f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 757  : 
; 758  : 	STATEMANAGER.SetTexture(0, NULL);

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 759  : 	STATEMANAGER.SetTexture(1, NULL);

  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00059	6a 00		 push	 0
  0005b	6a 01		 push	 1
  0005d	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 760  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00068	6a 01		 push	 1
  0006a	6a 01		 push	 1
  0006c	6a 00		 push	 0
  0006e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 761  : 
; 762  : 	STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  00073	0f b7 45 0c	 movzx	 eax, WORD PTR _wPrimitiveCount$[ebp]
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007d	50		 push	 eax
  0007e	6a 00		 push	 0
  00080	ff b7 a0 09 00
	00		 push	 DWORD PTR [edi+2464]
  00086	6a 00		 push	 0
  00088	ff 75 10	 push	 DWORD PTR _ePrimitiveType$[ebp]
  0008b	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 763  : 
; 764  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, dwFillMode);

  00090	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00096	53		 push	 ebx
  00097	6a 08		 push	 8
  00099	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 765  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, dwFogEnable);

  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a4	56		 push	 esi
  000a5	6a 1c		 push	 28			; 0000001cH
  000a7	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 766  : 
; 767  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b2	6a 02		 push	 2
  000b4	6a 02		 push	 2
  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 768  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_CURRENT);

  000bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c3	6a 01		 push	 1
  000c5	6a 03		 push	 3
  000c7	6a 00		 push	 0
  000c9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 769  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	c7 45 10 04 00
	00 00		 mov	 DWORD PTR _ePrimitiveType$[ebp], 4
  000d8	c7 45 0c 01 00
	00 00		 mov	 DWORD PTR _wPrimitiveCount$[ebp], 1
  000df	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pTerrainPatchProxy$[ebp], 0
  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 770  : }

  000ec	5d		 pop	 ebp

; 769  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  000ed	e9 00 00 00 00	 jmp	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::NEW_DrawWireFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetPatchDrawVector@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
_aPatchDrawStruct$ = -44				; size = 16
_adistancePatchPair$1 = -28				; size = 8
$T2 = -20						; size = 1
_pTerrain$3 = -20					; size = 4
_pTerrainPatchProxy$1$ = -16				; size = 4
_lPatchNum$1$ = -12					; size = 4
_byTerrainNum$4 = -8					; size = 1
_this$1$ = -4						; size = 4
?SetPatchDrawVector@CMapOutdoor@@IAEXXZ PROC		; CMapOutdoor::SetPatchDrawVector, COMDAT
; _this$ = ecx

; 671  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	8b d1		 mov	 edx, ecx

; 672  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::__SetPatchDrawVector");
; 673  : 
; 674  : 	m_PatchDrawStructVector.clear();

  00008	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8d ba 24 01 00
	00		 lea	 edi, DWORD PTR [edx+292]
  00016	89 55 fc	 mov	 DWORD PTR _this$1$[ebp], edx
  00019	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001c	8b b2 18 01 00
	00		 mov	 esi, DWORD PTR [edx+280]
  00022	3b b2 1c 01 00
	00		 cmp	 esi, DWORD PTR [edx+284]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 681  : 	while(aDistancePatchVectorIterator != m_PatchVector.end())

  00028	0f 84 98 00 00
	00		 je	 $LN3@SetPatchDr
  0002e	53		 push	 ebx
  0002f	90		 npad	 1
$LL2@SetPatchDr:

; 682  : 	{
; 683  : 		std::pair<float, long> adistancePatchPair = *aDistancePatchVectorIterator;

  00030	8b 06		 mov	 eax, DWORD PTR [esi]
  00032	89 45 e4	 mov	 DWORD PTR _adistancePatchPair$1[ebp], eax
  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 684  : 
; 685  : 		CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[adistancePatchPair.second];

  00038	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0003f	2b c8		 sub	 ecx, eax
  00041	8b 42 64	 mov	 eax, DWORD PTR [edx+100]

; 686  : 
; 687  : 		if (!pTerrainPatchProxy->isUsed())

  00044	80 7c 88 04 00	 cmp	 BYTE PTR [eax+ecx*4+4], 0
  00049	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0004c	89 45 f0	 mov	 DWORD PTR _pTerrainPatchProxy$1$[ebp], eax
  0004f	74 65		 je	 SHORT $LN47@SetPatchDr

; 688  : 		{
; 689  : 			++aDistancePatchVectorIterator;
; 690  : 			continue;
; 691  : 		}
; 692  : 
; 693  : 		long lPatchNum = pTerrainPatchProxy->GetPatchNum();

  00051	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  00055	89 4d f4	 mov	 DWORD PTR _lPatchNum$1$[ebp], ecx

; 694  : 		if (lPatchNum < 0)

  00058	85 c9		 test	 ecx, ecx
  0005a	78 5a		 js	 SHORT $LN47@SetPatchDr

; 695  : 		{
; 696  : 			++aDistancePatchVectorIterator;
; 697  : 			continue;
; 698  : 		}
; 699  : 
; 700  : 		BYTE byTerrainNum = pTerrainPatchProxy->GetTerrainNum();

  0005c	8a 58 08	 mov	 bl, BYTE PTR [eax+8]
  0005f	88 5d f8	 mov	 BYTE PTR _byTerrainNum$4[ebp], bl

; 701  : 		if (0xFF == byTerrainNum)

  00062	80 fb ff	 cmp	 bl, 255			; 000000ffH
  00065	74 4f		 je	 SHORT $LN47@SetPatchDr

; 702  : 		{
; 703  : 			++aDistancePatchVectorIterator;
; 704  : 			continue;
; 705  : 		}
; 706  : 
; 707  : 		CTerrain * pTerrain;
; 708  : 		if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  00067	8d 45 ec	 lea	 eax, DWORD PTR _pTerrain$3[ebp]
  0006a	8b ca		 mov	 ecx, edx
  0006c	50		 push	 eax
  0006d	ff 75 f8	 push	 DWORD PTR _byTerrainNum$4[ebp]
  00070	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00075	85 c0		 test	 eax, eax
  00077	74 3a		 je	 SHORT $LN80@SetPatchDr

; 716  : 		aPatchDrawStruct.lPatchNum				= lPatchNum;

  00079	8b 45 f4	 mov	 eax, DWORD PTR _lPatchNum$1$[ebp]
  0007c	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _adistancePatchPair$1[ebp]
  00081	89 45 dc	 mov	 DWORD PTR _aPatchDrawStruct$[ebp+8], eax

; 717  : 		aPatchDrawStruct.pTerrainPatchProxy		= pTerrainPatchProxy;

  00084	8b 45 f0	 mov	 eax, DWORD PTR _pTerrainPatchProxy$1$[ebp]
  00087	89 45 e0	 mov	 DWORD PTR _aPatchDrawStruct$[ebp+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0008a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 714  : 		aPatchDrawStruct.fDistance				= adistancePatchPair.first;

  0008d	f3 0f 11 45 d4	 movss	 DWORD PTR _aPatchDrawStruct$[ebp], xmm0

; 715  : 		aPatchDrawStruct.byTerrainNum			= byTerrainNum;

  00092	88 5d d8	 mov	 BYTE PTR _aPatchDrawStruct$[ebp+4], bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00095	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00098	74 0d		 je	 SHORT $LN48@SetPatchDr
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0009a	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _aPatchDrawStruct$[ebp]
  0009e	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  000a1	83 47 04 10	 add	 DWORD PTR [edi+4], 16	; 00000010H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000a5	eb 0c		 jmp	 SHORT $LN80@SetPatchDr
$LN48@SetPatchDr:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000a7	8d 4d d4	 lea	 ecx, DWORD PTR _aPatchDrawStruct$[ebp]
  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	8b cf		 mov	 ecx, edi
  000ae	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@QAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>
$LN80@SetPatchDr:

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  000b3	8b 55 fc	 mov	 edx, DWORD PTR _this$1$[ebp]
$LN47@SetPatchDr:
  000b6	83 c6 08	 add	 esi, 8

; 149  :         return _Ptr == _Right._Ptr;

  000b9	3b b2 1c 01 00
	00		 cmp	 esi, DWORD PTR [edx+284]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 681  : 	while(aDistancePatchVectorIterator != m_PatchVector.end())

  000bf	0f 85 6b ff ff
	ff		 jne	 $LL2@SetPatchDr
  000c5	5b		 pop	 ebx
$LN3@SetPatchDr:

; 724  : 	std::stable_sort(m_PatchDrawStructVector.begin(), m_PatchDrawStructVector.end(), FSortPatchDrawStructWithTerrainNum());

  000c6	ff 75 ec	 push	 DWORD PTR $T2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoor.h

; 353  : 				m_TerrainNumVector.clear();

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ce	a3 04 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 724  : 	std::stable_sort(m_PatchDrawStructVector.begin(), m_PatchDrawStructVector.end(), FSortPatchDrawStructWithTerrainNum());

  000d3	ff b2 28 01 00
	00		 push	 DWORD PTR [edx+296]
  000d9	ff 37		 push	 DWORD PTR [edi]
  000db	e8 00 00 00 00	 call	 ??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi

; 725  : }

  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
?SetPatchDrawVector@CMapOutdoor@@IAEXXZ ENDP		; CMapOutdoor::SetPatchDrawVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ PROC ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ ENDP ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderTree@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderTree@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderTree, COMDAT
; _this$ = ecx

; 232  : 	if (IsVisiblePart(PART_TREE))

  00000	6a 04		 push	 4
  00002	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  00007	84 c0		 test	 al, al
  00009	74 0d		 je	 SHORT $LN2@RenderTree

; 233  : 		CSpeedTreeForestDirectX8::Instance().Render();

  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  00011	6a 0f		 push	 15			; 0000000fH
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@RenderTree:

; 234  : }

  00018	c3		 ret	 0
?RenderTree@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderPCBlocker@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
tv422 = -4						; size = 4
?RenderPCBlocker@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderPCBlocker, COMDAT
; _this$ = ecx

; 604  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00007	8b 86 1c 0a 00
	00		 mov	 eax, DWORD PTR [esi+2588]
  0000d	2b 86 18 0a 00
	00		 sub	 eax, DWORD PTR [esi+2584]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 607  : 	if (m_PCBlockerVector.size() != 0)

  00013	a9 fc ff ff ff	 test	 eax, -4			; fffffffcH
  00018	0f 84 7f 02 00
	00		 je	 $LN2@RenderPCBl

; 608  : 	{
; 609  : 		STATEMANAGER.SetTexture(0, NULL);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 610  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1,	D3DTA_TEXTURE);

  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00033	6a 02		 push	 2
  00035	6a 02		 push	 2
  00037	6a 00		 push	 0
  00039	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 611  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2,	D3DTA_CURRENT);

  0003e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00044	6a 01		 push	 1
  00046	6a 03		 push	 3
  00048	6a 00		 push	 0
  0004a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 612  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,	D3DTOP_MODULATE);

  0004f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00055	6a 04		 push	 4
  00057	6a 01		 push	 1
  00059	6a 00		 push	 0
  0005b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 613  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1,	D3DTA_TEXTURE);

  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00066	6a 02		 push	 2
  00068	6a 05		 push	 5
  0006a	6a 00		 push	 0
  0006c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 614  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,	D3DTOP_SELECTARG1);

  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00077	6a 02		 push	 2
  00079	6a 04		 push	 4
  0007b	6a 00		 push	 0
  0007d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 615  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,	D3DTOP_SELECTARG1);

  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00088	6a 02		 push	 2
  0008a	6a 01		 push	 1
  0008c	6a 01		 push	 1
  0008e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 616  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,	D3DTOP_DISABLE);

  00093	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00099	6a 01		 push	 1
  0009b	6a 04		 push	 4
  0009d	6a 01		 push	 1
  0009f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 617  : 
; 618  : 		STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000aa	6a 01		 push	 1
  000ac	6a 1b		 push	 27			; 0000001bH
  000ae	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 619  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b9	68 00 00 02 00	 push	 131072			; 00020000H
  000be	6a 0b		 push	 11			; 0000000bH
  000c0	6a 01		 push	 1
  000c2	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 620  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  000c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000cd	6a 02		 push	 2
  000cf	6a 18		 push	 24			; 00000018H
  000d1	6a 01		 push	 1
  000d3	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 621  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  000d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000de	6a 01		 push	 1
  000e0	6a 02		 push	 2
  000e2	6a 01		 push	 1
  000e4	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 622  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ef	6a 02		 push	 2
  000f1	6a 01		 push	 1
  000f3	6a 01		 push	 1
  000f5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 623  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00100	6a 02		 push	 2
  00102	6a 05		 push	 5
  00104	6a 01		 push	 1
  00106	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 624  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00111	6a 02		 push	 2
  00113	6a 04		 push	 4
  00115	6a 01		 push	 1
  00117	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 625  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  0011c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00122	6a 03		 push	 3
  00124	6a 0d		 push	 13			; 0000000dH
  00126	6a 01		 push	 1
  00128	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 626  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  0012d	6a 03		 push	 3
  0012f	6a 0e		 push	 14			; 0000000eH
  00131	6a 01		 push	 1
  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00139	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 627  : 
; 628  : 		STATEMANAGER.SaveTransform(D3DTS_TEXTURE1, &m_matBuildingTransparent);

  0013e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00144	8d 86 2c 0e 00
	00		 lea	 eax, DWORD PTR [esi+3628]
  0014a	50		 push	 eax
  0014b	6a 11		 push	 17			; 00000011H
  0014d	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 629  : 		STATEMANAGER.SetTexture(1, m_BuildingTransparentImageInstance.GetTexturePointer()->GetD3DTexture());

  00152	8d 8e 0c 0e 00
	00		 lea	 ecx, DWORD PTR [esi+3596]
  00158	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  0015d	8b c8		 mov	 ecx, eax
  0015f	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00164	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0016a	50		 push	 eax
  0016b	6a 01		 push	 1
  0016d	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00172	8b 86 1c 0a 00
	00		 mov	 eax, DWORD PTR [esi+2588]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00178	8b b6 18 0a 00
	00		 mov	 esi, DWORD PTR [esi+2584]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0017e	89 45 fc	 mov	 DWORD PTR tv422[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00181	3b f0		 cmp	 esi, eax
  00183	74 6f		 je	 SHORT $LN20@RenderPCBl
  00185	53		 push	 ebx
  00186	57		 push	 edi
$LL21@RenderPCBl:

; 236  :         _Func(*_UFirst);

  00187	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 315  : 		pInstance->Show();

  00189	8b cb		 mov	 ecx, ebx
  0018b	e8 00 00 00 00	 call	 ?Show@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Show

; 316  : 		CGraphicThingInstance* pThingInstance = dynamic_cast <CGraphicThingInstance*> (pInstance);

  00190	6a 00		 push	 0
  00192	68 00 00 00 00	 push	 OFFSET ??_R0?AVCGraphicThingInstance@@@8
  00197	68 00 00 00 00	 push	 OFFSET ??_R0?AVCGraphicObjectInstance@@@8
  0019c	6a 00		 push	 0
  0019e	53		 push	 ebx
  0019f	e8 00 00 00 00	 call	 ___RTDynamicCast
  001a4	8b f8		 mov	 edi, eax
  001a6	83 c4 14	 add	 esp, 20			; 00000014H

; 317  : 		if (pThingInstance != NULL)

  001a9	85 ff		 test	 edi, edi
  001ab	74 25		 je	 SHORT $LN25@RenderPCBl

; 318  : 		{
; 319  : 			if (pThingInstance->HaveBlendThing())

  001ad	8b cf		 mov	 ecx, edi
  001af	e8 00 00 00 00	 call	 ?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ ; CGraphicThingInstance::HaveBlendThing
  001b4	84 c0		 test	 al, al
  001b6	74 1a		 je	 SHORT $LN25@RenderPCBl

; 320  : 			{
; 321  : 				STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  001b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001be	6a 01		 push	 1
  001c0	6a 04		 push	 4
  001c2	6a 01		 push	 1
  001c4	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 322  : 				pThingInstance->BlendRender();

  001c9	8b cf		 mov	 ecx, edi
  001cb	e8 00 00 00 00	 call	 ?BlendRender@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::BlendRender

; 323  : 				return;

  001d0	eb 18		 jmp	 SHORT $LN19@RenderPCBl
$LN25@RenderPCBl:

; 324  : 			}
; 325  : 		}
; 326  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  001d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001d8	6a 02		 push	 2
  001da	6a 04		 push	 4
  001dc	6a 01		 push	 1
  001de	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 327  : 
; 328  : 		pInstance->RenderPCBlocker();

  001e3	8b cb		 mov	 ecx, ebx
  001e5	e8 00 00 00 00	 call	 ?RenderPCBlocker@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::RenderPCBlocker
$LN19@RenderPCBl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  001ea	83 c6 04	 add	 esi, 4
  001ed	3b 75 fc	 cmp	 esi, DWORD PTR tv422[ebp]
  001f0	75 95		 jne	 SHORT $LL21@RenderPCBl
  001f2	5f		 pop	 edi
  001f3	5b		 pop	 ebx
$LN20@RenderPCBl:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 633  : 		STATEMANAGER.SetTexture(1, NULL);

  001f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001fa	6a 00		 push	 0
  001fc	6a 01		 push	 1
  001fe	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 634  : 		STATEMANAGER.RestoreTransform(D3DTS_TEXTURE1);

  00203	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00209	6a 11		 push	 17			; 00000011H
  0020b	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 635  : 
; 636  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  00210	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00216	6a 0b		 push	 11			; 0000000bH
  00218	6a 01		 push	 1
  0021a	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 637  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  0021f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00225	6a 18		 push	 24			; 00000018H
  00227	6a 01		 push	 1
  00229	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 638  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0022e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00234	6a 02		 push	 2
  00236	6a 02		 push	 2
  00238	6a 01		 push	 1
  0023a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 639  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  0023f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00245	6a 01		 push	 1
  00247	6a 01		 push	 1
  00249	6a 01		 push	 1
  0024b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 640  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00250	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00256	6a 02		 push	 2
  00258	6a 05		 push	 5
  0025a	6a 01		 push	 1
  0025c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 641  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00261	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00267	6a 01		 push	 1
  00269	6a 04		 push	 4
  0026b	6a 01		 push	 1
  0026d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 642  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  00272	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00278	6a 0d		 push	 13			; 0000000dH
  0027a	6a 01		 push	 1
  0027c	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 643  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  00281	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00287	6a 0e		 push	 14			; 0000000eH
  00289	6a 01		 push	 1
  0028b	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 644  : 		STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  00290	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00296	6a 1b		 push	 27			; 0000001bH
  00298	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN2@RenderPCBl:
  0029d	5e		 pop	 esi

; 645  : 	}
; 646  : #endif
; 647  : }

  0029e	8b e5		 mov	 esp, ebp
  002a0	5d		 pop	 ebp
  002a1	c3		 ret	 0
?RenderPCBlocker@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderPCBlocker
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderEffect@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
?RenderEffect@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderEffect, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 334  : 	if (!IsVisiblePart(PART_OBJECT))

  00005	6a 01		 push	 1
  00007	8b f9		 mov	 edi, ecx
  00009	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000e	84 c0		 test	 al, al
  00010	74 22		 je	 SHORT $LN3@RenderEffe

; 335  : 		return;
; 336  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00012	56		 push	 esi
  00013	33 f6		 xor	 esi, esi
$LL4@RenderEffe:

; 337  : 	{
; 338  : 		CArea * pArea;
; 339  : 		if (GetAreaPointer(i, &pArea))

  00015	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00018	8b cf		 mov	 ecx, edi
  0001a	50		 push	 eax
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  00021	85 c0		 test	 eax, eax
  00023	74 08		 je	 SHORT $LN2@RenderEffe

; 340  : 		{
; 341  : 			pArea->RenderEffect();

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00028	e8 00 00 00 00	 call	 ?RenderEffect@CArea@@QAEXXZ ; CArea::RenderEffect
$LN2@RenderEffe:

; 335  : 		return;
; 336  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0002d	46		 inc	 esi
  0002e	83 fe 09	 cmp	 esi, 9
  00031	7c e2		 jl	 SHORT $LL4@RenderEffe
  00033	5e		 pop	 esi
$LN3@RenderEffe:
  00034	5f		 pop	 edi

; 342  : 		}
; 343  : 	}
; 344  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?RenderEffect@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderDungeon@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
?RenderDungeon@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderDungeon, COMDAT
; _this$ = ecx

; 593  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 594  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00008	33 f6		 xor	 esi, esi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@RenderDung:

; 595  : 	{
; 596  : 		CArea * pArea;
; 597  : 		if (!GetAreaPointer(i, &pArea))

  00010	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0001c	85 c0		 test	 eax, eax
  0001e	74 08		 je	 SHORT $LN2@RenderDung

; 598  : 			continue;
; 599  : 		pArea->RenderDungeon();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00023	e8 00 00 00 00	 call	 ?RenderDungeon@CArea@@QAEXXZ ; CArea::RenderDungeon
$LN2@RenderDung:

; 594  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00028	46		 inc	 esi
  00029	83 fe 09	 cmp	 esi, 9
  0002c	7c e2		 jl	 SHORT $LL4@RenderDung

; 600  : 	}
; 601  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?RenderDungeon@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderDungeon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderBlendArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 1
_pArea$2 = -4						; size = 4
?RenderBlendArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderBlendArea, COMDAT
; _this$ = ecx

; 519  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 520  : 	if (!IsVisiblePart(PART_OBJECT))

  00005	6a 01		 push	 1
  00007	8b f9		 mov	 edi, ecx
  00009	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000e	84 c0		 test	 al, al
  00010	0f 84 90 01 00
	00		 je	 $LN8@RenderBlen

; 521  : 		return;
; 522  : 
; 523  : 	static std::vector<CGraphicThingInstance*> s_kVct_pkBlendThingInstSort;

  00016	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  0001c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  00022	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
  0002a	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00030	0f 8f 75 01 00
	00		 jg	 $LN61@RenderBlen
$LN2@RenderBlen:

; 524  : 	s_kVct_pkBlendThingInstSort.clear();

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  0003b	56		 push	 esi
  0003c	a3 04 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, eax

; 525  : 
; 526  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00041	33 f6		 xor	 esi, esi
$LL5@RenderBlen:

; 527  : 	{
; 528  : 		CArea * pArea;
; 529  : 		if (GetAreaPointer(i, &pArea))

  00043	8d 45 fc	 lea	 eax, DWORD PTR _pArea$2[ebp]
  00046	8b cf		 mov	 ecx, edi
  00048	50		 push	 eax
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0004f	85 c0		 test	 eax, eax
  00051	74 0d		 je	 SHORT $LN3@RenderBlen

; 530  : 		{
; 531  : 			pArea->CollectBlendRenderingObject(s_kVct_pkBlendThingInstSort);

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$2[ebp]
  00056	68 00 00 00 00	 push	 OFFSET ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  0005b	e8 00 00 00 00	 call	 ?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ; CArea::CollectBlendRenderingObject
$LN3@RenderBlen:

; 525  : 
; 526  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00060	46		 inc	 esi
  00061	83 fe 09	 cmp	 esi, 9
  00064	7c dd		 jl	 SHORT $LL5@RenderBlen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00066	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  0006c	8b c1		 mov	 eax, ecx
  0006e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00074	2b c2		 sub	 eax, edx
  00076	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 535  : 	if (s_kVct_pkBlendThingInstSort.size() != 0)

  00079	85 c0		 test	 eax, eax
  0007b	0f 84 24 01 00
	00		 je	 $LN59@RenderBlen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00081	ff 75 fc	 push	 DWORD PTR $T1[ebp]
  00084	50		 push	 eax
  00085	51		 push	 ecx
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 571  : 		STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, TRUE);

  0008c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00092	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 571  : 		STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, TRUE);

  00095	6a 01		 push	 1
  00097	6a 0e		 push	 14			; 0000000eH
  00099	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 572  : 		STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a4	6a 01		 push	 1
  000a6	6a 1b		 push	 27			; 0000001bH
  000a8	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 573  : 		STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  000ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b3	6a 05		 push	 5
  000b5	6a 13		 push	 19			; 00000013H
  000b7	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 574  : 		STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c2	6a 06		 push	 6
  000c4	6a 14		 push	 20			; 00000014H
  000c6	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 575  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d1	6a 02		 push	 2
  000d3	6a 05		 push	 5
  000d5	6a 00		 push	 0
  000d7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 576  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e2	6a 02		 push	 2
  000e4	6a 04		 push	 4
  000e6	6a 00		 push	 0
  000e8	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 577  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f3	6a 02		 push	 2
  000f5	6a 02		 push	 2
  000f7	6a 00		 push	 0
  000f9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 578  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00104	6a 00		 push	 0
  00106	6a 03		 push	 3
  00108	6a 00		 push	 0
  0010a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 579  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00115	6a 02		 push	 2
  00117	6a 02		 push	 2
  00119	6a 01		 push	 1
  0011b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 580  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_CURRENT);

  00120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00126	6a 01		 push	 1
  00128	6a 03		 push	 3
  0012a	6a 01		 push	 1
  0012c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 581  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00131	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00137	6a 02		 push	 2
  00139	6a 01		 push	 1
  0013b	6a 01		 push	 1
  0013d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 582  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  00142	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00148	6a 01		 push	 1
  0014a	6a 04		 push	 4
  0014c	6a 01		 push	 1
  0014e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00153	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00159	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  0015f	3b f7		 cmp	 esi, edi
  00161	74 0e		 je	 SHORT $LN46@RenderBlen
$LL47@RenderBlen:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 370  : 		pkThingInst->BlendRender();

  00163	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00165	e8 00 00 00 00	 call	 ?BlendRender@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::BlendRender
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0016a	83 c6 04	 add	 esi, 4
  0016d	3b f7		 cmp	 esi, edi
  0016f	75 f2		 jne	 SHORT $LL47@RenderBlen
$LN46@RenderBlen:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 586  : 		STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  00171	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00177	6a 1b		 push	 27			; 0000001bH
  00179	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 587  : 		STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  0017e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00184	6a 13		 push	 19			; 00000013H
  00186	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 588  : 		STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  0018b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00191	6a 14		 push	 20			; 00000014H
  00193	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 589  : 		STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0019e	6a 0e		 push	 14			; 0000000eH
  001a0	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN59@RenderBlen:
  001a5	5e		 pop	 esi
$LN8@RenderBlen:
  001a6	5f		 pop	 edi

; 590  : 	}
; 591  : }

  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
$LN61@RenderBlen:

; 521  : 		return;
; 522  : 
; 523  : 	static std::vector<CGraphicThingInstance*> s_kVct_pkBlendThingInstSort;

  001ab	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
  001b0	e8 00 00 00 00	 call	 __Init_thread_header
  001b5	83 c4 04	 add	 esp, 4
  001b8	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA, -1
  001bf	0f 85 71 fe ff
	ff		 jne	 $LN2@RenderBlen
  001c5	68 00 00 00 00	 push	 OFFSET ??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ ; `CMapOutdoor::RenderBlendArea'::`2'::`dynamic atexit destructor for 's_kVct_pkBlendThingInstSort''
  001ca	e8 00 00 00 00	 call	 _atexit
  001cf	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
  001d4	e8 00 00 00 00	 call	 __Init_thread_footer
  001d9	83 c4 08	 add	 esp, 8
  001dc	e9 55 fe ff ff	 jmp	 $LN2@RenderBlen
?RenderBlendArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderBlendArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderArea@CMapOutdoor@@QAEX_N@Z
_TEXT	SEGMENT
_dwG$1$ = -8						; size = 4
$T1 = -8						; size = 1
tv1596 = -8						; size = 4
_pArea$2 = -8						; size = 4
_pArea$3 = -8						; size = 4
_dwR$1$ = -4						; size = 4
_this$1$ = -4						; size = 4
_bRenderAmbience$ = 8					; size = 1
?RenderArea@CMapOutdoor@@QAEX_N@Z PROC			; CMapOutdoor::RenderArea, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 376  : 	if (!IsVisiblePart(PART_OBJECT))

  00009	6a 01		 push	 1
  0000b	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  0000e	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  00013	84 c0		 test	 al, al
  00015	0f 84 35 04 00
	00		 je	 $LN216@RenderArea

; 377  : 		return;
; 378  : 
; 379  : 	m_dwRenderedCRCNum = 0;

  0001b	c7 87 b0 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2480], 0

; 380  : 	m_dwRenderedGraphicThingInstanceNum = 0;

  00025	c7 87 b4 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2484], 0

; 381  : 	m_dwRenderedCRCWithNumberVector.clear();

  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A
  00034	56		 push	 esi
  00035	a3 04 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+4, eax

; 382  : 
; 383  : 	for (int j = 0; j < AROUND_AREA_NUM; ++j)

  0003a	33 f6		 xor	 esi, esi
  0003c	0f 1f 40 00	 npad	 4
$LL4@RenderArea:

; 384  : 	{
; 385  : 		CArea * pArea;
; 386  : 		if (GetAreaPointer(j, &pArea))

  00040	8d 45 f8	 lea	 eax, DWORD PTR _pArea$3[ebp]
  00043	8b cf		 mov	 ecx, edi
  00045	50		 push	 eax
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0004c	85 c0		 test	 eax, eax
  0004e	74 08		 je	 SHORT $LN2@RenderArea

; 387  : 		{
; 388  : 			pArea->RenderDungeon();

  00050	8b 4d f8	 mov	 ecx, DWORD PTR _pArea$3[ebp]
  00053	e8 00 00 00 00	 call	 ?RenderDungeon@CArea@@QAEXXZ ; CArea::RenderDungeon
$LN2@RenderArea:

; 382  : 
; 383  : 	for (int j = 0; j < AROUND_AREA_NUM; ++j)

  00058	46		 inc	 esi
  00059	83 fe 09	 cmp	 esi, 9
  0005c	7c e2		 jl	 SHORT $LL4@RenderArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005e	8b b7 18 0a 00
	00		 mov	 esi, DWORD PTR [edi+2584]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00064	53		 push	 ebx
  00065	8b 9f 1c 0a 00
	00		 mov	 ebx, DWORD PTR [edi+2588]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0006b	3b f3		 cmp	 esi, ebx
  0006d	74 0f		 je	 SHORT $LN41@RenderArea
  0006f	90		 npad	 1
$LL42@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 307  : 		pInstance->Hide();

  00070	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00072	e8 00 00 00 00	 call	 ?Hide@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Hide
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00077	83 c6 04	 add	 esi, 4
  0007a	3b f3		 cmp	 esi, ebx
  0007c	75 f2		 jne	 SHORT $LL42@RenderArea
$LN41@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 397  : 	if (m_bDrawShadow && m_bDrawChrShadow)

  0007e	80 bf 31 01 00
	00 00		 cmp	 BYTE PTR [edi+305], 0
  00085	0f 84 e1 02 00
	00		 je	 $LN18@RenderArea
  0008b	80 bf 32 01 00
	00 00		 cmp	 BYTE PTR [edi+306], 0
  00092	0f 84 d4 02 00
	00		 je	 $LN18@RenderArea

; 398  : 	{
; 399  : 		if (mc_pEnvironmentData != NULL)

  00098	83 7f 3c 00	 cmp	 DWORD PTR [edi+60], 0
  0009c	74 0f		 je	 SHORT $LN17@RenderArea

; 400  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, 0xFFFFFFFF);

  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a4	6a ff		 push	 -1
  000a6	6a 22		 push	 34			; 00000022H
  000a8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
$LN17@RenderArea:

; 401  : 
; 402  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b3	6a 02		 push	 2
  000b5	6a 02		 push	 2
  000b7	6a 00		 push	 0
  000b9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 403  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  000be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c4	6a 00		 push	 0
  000c6	6a 03		 push	 3
  000c8	6a 00		 push	 0
  000ca	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 404  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE);

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d5	6a 04		 push	 4
  000d7	6a 01		 push	 1
  000d9	6a 00		 push	 0
  000db	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 405  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  000e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e6	6a 01		 push	 1
  000e8	6a 04		 push	 4
  000ea	6a 00		 push	 0
  000ec	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 406  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  000f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f7	68 00 00 02 00	 push	 131072			; 00020000H
  000fc	6a 0b		 push	 11			; 0000000bH
  000fe	6a 01		 push	 1
  00100	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 407  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  00105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0010b	6a 02		 push	 2
  0010d	6a 18		 push	 24			; 00000018H
  0010f	6a 01		 push	 1
  00111	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 408  : 
; 409  : 		// Transform
; 410  : 		STATEMANAGER.SaveTransform(D3DTS_TEXTURE1, &m_matDynamicShadow);

  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0011c	8d 87 48 08 00
	00		 lea	 eax, DWORD PTR [edi+2120]
  00122	50		 push	 eax
  00123	6a 11		 push	 17			; 00000011H
  00125	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 411  : 		STATEMANAGER.SetTexture(1, m_lpCharacterShadowMapTexture);

  0012a	ff b7 d4 01 00
	00		 push	 DWORD PTR [edi+468]
  00130	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00136	6a 01		 push	 1
  00138	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 412  : 
; 413  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0013d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00143	6a 02		 push	 2
  00145	6a 02		 push	 2
  00147	6a 01		 push	 1
  00149	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 414  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_CURRENT);

  0014e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00154	6a 01		 push	 1
  00156	6a 03		 push	 3
  00158	6a 01		 push	 1
  0015a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 415  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00165	6a 04		 push	 4
  00167	6a 01		 push	 1
  00169	6a 01		 push	 1
  0016b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 416  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  00170	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00176	6a 01		 push	 1
  00178	6a 04		 push	 4
  0017a	6a 01		 push	 1
  0017c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 417  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU, D3DTADDRESS_BORDER);

  00181	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00187	6a 04		 push	 4
  00189	6a 0d		 push	 13			; 0000000dH
  0018b	6a 01		 push	 1
  0018d	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 418  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV, D3DTADDRESS_BORDER);

  00192	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00198	6a 04		 push	 4
  0019a	6a 0e		 push	 14			; 0000000eH
  0019c	6a 01		 push	 1
  0019e	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 419  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_BORDERCOLOR, 0xFFFFFFFF);

  001a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001a9	6a ff		 push	 -1
  001ab	6a 0f		 push	 15			; 0000000fH
  001ad	6a 01		 push	 1
  001af	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 87 10 0a 00
	00		 mov	 eax, DWORD PTR [edi+2576]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  001ba	8b 9f 0c 0a 00
	00		 mov	 ebx, DWORD PTR [edi+2572]
  001c0	3b d8		 cmp	 ebx, eax
  001c2	74 1c		 je	 SHORT $LN60@RenderArea
  001c4	8b f8		 mov	 edi, eax
$LL61@RenderArea:

; 236  :         _Func(*_UFirst);

  001c6	8b 33		 mov	 esi, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 298  : 		pInstance->RenderShadow();

  001c8	8b ce		 mov	 ecx, esi
  001ca	e8 00 00 00 00	 call	 ?RenderShadow@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::RenderShadow

; 299  : 		pInstance->Hide();

  001cf	8b ce		 mov	 ecx, esi
  001d1	e8 00 00 00 00	 call	 ?Hide@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Hide
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  001d6	83 c3 04	 add	 ebx, 4
  001d9	3b df		 cmp	 ebx, edi
  001db	75 e9		 jne	 SHORT $LL61@RenderArea
  001dd	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN60@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 423  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  001e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001e6	6a 0b		 push	 11			; 0000000bH
  001e8	6a 01		 push	 1
  001ea	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 424  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  001ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001f5	6a 18		 push	 24			; 00000018H
  001f7	6a 01		 push	 1
  001f9	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 425  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  001fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00204	6a 0d		 push	 13			; 0000000dH
  00206	6a 01		 push	 1
  00208	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 426  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  0020d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00213	6a 0e		 push	 14			; 0000000eH
  00215	6a 01		 push	 1
  00217	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 427  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_BORDERCOLOR);

  0021c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00222	6a 0f		 push	 15			; 0000000fH
  00224	6a 01		 push	 1
  00226	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 428  : 
; 429  : 		STATEMANAGER.RestoreTransform(D3DTS_TEXTURE1);

  0022b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00231	6a 11		 push	 17			; 00000011H
  00233	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 430  : 
; 431  : 		if (mc_pEnvironmentData != NULL)

  00238	8b 77 3c	 mov	 esi, DWORD PTR [edi+60]
  0023b	85 f6		 test	 esi, esi
  0023d	0f 84 29 01 00
	00		 je	 $LN18@RenderArea
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00243	f3 0f 10 86 2c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+300]
  0024b	0f 57 c9	 xorps	 xmm1, xmm1
  0024e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00255	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  0025d	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  00265	72 09		 jb	 SHORT $LN69@RenderArea
  00267	c7 45 fc ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  0026e	eb 31		 jmp	 SHORT $LN68@RenderArea
$LN69@RenderArea:
  00270	0f 2f c8	 comiss	 xmm1, xmm0
  00273	72 09		 jb	 SHORT $LN67@RenderArea
  00275	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  0027c	eb 23		 jmp	 SHORT $LN68@RenderArea
$LN67@RenderArea:
  0027e	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00282	f3 0f 58 c4	 addss	 xmm0, xmm4
  00286	e8 00 00 00 00	 call	 __ftoui3
  0028b	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00293	0f 57 c9	 xorps	 xmm1, xmm1
  00296	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  0029e	89 45 fc	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN68@RenderArea:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  002a1	f3 0f 10 86 30
	01 00 00	 movss	 xmm0, DWORD PTR [esi+304]
  002a9	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002b0	72 09		 jb	 SHORT $LN73@RenderArea
  002b2	c7 45 f8 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  002b9	eb 1e		 jmp	 SHORT $LN72@RenderArea
$LN73@RenderArea:
  002bb	0f 2f c8	 comiss	 xmm1, xmm0
  002be	72 09		 jb	 SHORT $LN71@RenderArea
  002c0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  002c7	eb 10		 jmp	 SHORT $LN72@RenderArea
$LN71@RenderArea:
  002c9	f3 0f 59 c3	 mulss	 xmm0, xmm3
  002cd	f3 0f 58 c4	 addss	 xmm0, xmm4
  002d1	e8 00 00 00 00	 call	 __ftoui3
  002d6	89 45 f8	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN72@RenderArea:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  002d9	f3 0f 10 86 34
	01 00 00	 movss	 xmm0, DWORD PTR [esi+308]
  002e1	0f 57 c9	 xorps	 xmm1, xmm1
  002e4	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002eb	72 07		 jb	 SHORT $LN77@RenderArea
  002ed	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  002f2	eb 23		 jmp	 SHORT $LN76@RenderArea
$LN77@RenderArea:
  002f4	0f 2f c8	 comiss	 xmm1, xmm0
  002f7	72 04		 jb	 SHORT $LN75@RenderArea
  002f9	33 db		 xor	 ebx, ebx
  002fb	eb 1a		 jmp	 SHORT $LN76@RenderArea
$LN75@RenderArea:
  002fd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00305	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0030d	e8 00 00 00 00	 call	 __ftoui3
  00312	8b d8		 mov	 ebx, eax
  00314	0f 57 c9	 xorps	 xmm1, xmm1
$LN76@RenderArea:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00317	f3 0f 10 86 38
	01 00 00	 movss	 xmm0, DWORD PTR [esi+312]
  0031f	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00326	72 07		 jb	 SHORT $LN81@RenderArea
  00328	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0032d	eb 1e		 jmp	 SHORT $LN80@RenderArea
$LN81@RenderArea:
  0032f	0f 2f c8	 comiss	 xmm1, xmm0
  00332	72 04		 jb	 SHORT $LN79@RenderArea
  00334	33 c0		 xor	 eax, eax
  00336	eb 15		 jmp	 SHORT $LN80@RenderArea
$LN79@RenderArea:
  00338	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00340	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00348	e8 00 00 00 00	 call	 __ftoui3
$LN80@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 432  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, mc_pEnvironmentData->FogColor);

  0034d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00353	c1 e0 08	 shl	 eax, 8
  00356	0b 45 fc	 or	 eax, DWORD PTR _dwR$1$[ebp]
  00359	c1 e0 08	 shl	 eax, 8
  0035c	0b 45 f8	 or	 eax, DWORD PTR _dwG$1$[ebp]
  0035f	c1 e0 08	 shl	 eax, 8
  00362	0b c3		 or	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 432  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, mc_pEnvironmentData->FogColor);

  00364	50		 push	 eax
  00365	6a 22		 push	 34			; 00000022H
  00367	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
$LN18@RenderArea:

; 433  : 	}
; 434  : #endif
; 435  : 
; 436  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, TRUE);

  0036c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00372	6a 01		 push	 1
  00374	6a 0e		 push	 14			; 0000000eH
  00376	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 437  : 
; 438  : 	bool m_isDisableSortRendering=false;
; 439  : 
; 440  : 	if (m_isDisableSortRendering)
; 441  : 	{
; 442  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)
; 443  : 		{
; 444  : 			CArea * pArea;
; 445  : 			if (GetAreaPointer(i, &pArea))
; 446  : 			{
; 447  : 				pArea->Render();
; 448  : 
; 449  : 				m_dwRenderedCRCNum += pArea->DEBUG_GetRenderedCRCNum();
; 450  : 				m_dwRenderedGraphicThingInstanceNum += pArea->DEBUG_GetRenderedGrapphicThingInstanceNum();
; 451  : 
; 452  : 				CArea::TCRCWithNumberVector & rCRCWithNumberVector = pArea->DEBUG_GetRenderedCRCWithNumVector();
; 453  : 
; 454  : 				CArea::TCRCWithNumberVector::iterator aIterator = rCRCWithNumberVector.begin();
; 455  : 				while (aIterator != rCRCWithNumberVector.end())
; 456  : 				{
; 457  : 					DWORD dwCRC = (*aIterator++).dwCRC;
; 458  : 
; 459  : 					CArea::TCRCWithNumberVector::iterator aCRCWithNumberVectorIterator =
; 460  : 						std::find_if(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::FFindIfCRC(dwCRC));
; 461  : 
; 462  : 					if ( m_dwRenderedCRCWithNumberVector.end() == aCRCWithNumberVectorIterator)
; 463  : 					{
; 464  : 						CArea::TCRCWithNumber aCRCWithNumber;
; 465  : 						aCRCWithNumber.dwCRC = dwCRC;
; 466  : 						aCRCWithNumber.dwNumber = 1;
; 467  : 						m_dwRenderedCRCWithNumberVector.push_back(aCRCWithNumber);
; 468  : 					}
; 469  : 					else
; 470  : 					{
; 471  : 						CArea::TCRCWithNumber & rCRCWithNumber = *aCRCWithNumberVectorIterator;
; 472  : 						rCRCWithNumber.dwNumber += 1;
; 473  : 					}
; 474  : 				}
; 475  : 	#ifdef WORLD_EDITOR
; 476  : 				if (bRenderAmbience)
; 477  : 					pArea->RenderAmbience();
; 478  : 	#endif
; 479  : 			}
; 480  : 		}
; 481  : 
; 482  : 		std::sort(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::CRCNumComp());
; 483  : 	}
; 484  : 	else
; 485  : 	{
; 486  : 		static std::vector<CGraphicThingInstance*> s_kVct_pkOpaqueThingInstSort;

  0037b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00381	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00387	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
  0038f	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00395	0f 8f bc 00 00
	00		 jg	 $LN260@RenderArea
$LN10@RenderArea:

; 487  : 		s_kVct_pkOpaqueThingInstSort.clear();

  0039b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A

; 488  : 
; 489  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)

  003a0	33 f6		 xor	 esi, esi
  003a2	a3 04 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, eax
$LL13@RenderArea:

; 490  : 		{
; 491  : 			CArea * pArea;
; 492  : 			if (GetAreaPointer(i, &pArea))

  003a7	8d 45 f8	 lea	 eax, DWORD PTR _pArea$2[ebp]
  003aa	8b cf		 mov	 ecx, edi
  003ac	50		 push	 eax
  003ad	56		 push	 esi
  003ae	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  003b3	85 c0		 test	 eax, eax
  003b5	74 0d		 je	 SHORT $LN11@RenderArea

; 493  : 			{
; 494  : 				pArea->CollectRenderingObject(s_kVct_pkOpaqueThingInstSort);

  003b7	8b 4d f8	 mov	 ecx, DWORD PTR _pArea$2[ebp]
  003ba	68 00 00 00 00	 push	 OFFSET ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  003bf	e8 00 00 00 00	 call	 ?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ; CArea::CollectRenderingObject
$LN11@RenderArea:

; 488  : 
; 489  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)

  003c4	46		 inc	 esi
  003c5	83 fe 09	 cmp	 esi, 9
  003c8	7c dd		 jl	 SHORT $LL13@RenderArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003ca	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  003d0	8b c2		 mov	 eax, edx
  003d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  003d8	2b c1		 sub	 eax, ecx
  003da	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  003dd	c1 f8 02	 sar	 eax, 2
  003e0	50		 push	 eax
  003e1	52		 push	 edx
  003e2	51		 push	 ecx
  003e3	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  003e8	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003ee	83 c4 10	 add	 esp, 16			; 00000010H

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  003f1	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  003f7	3b f3		 cmp	 esi, ebx
  003f9	74 13		 je	 SHORT $LN193@RenderArea
  003fb	0f 1f 44 00 00	 npad	 5
$LL194@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 363  : 		pkThingInst->Render();

  00400	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00402	e8 00 00 00 00	 call	 ?Render@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00407	83 c6 04	 add	 esi, 4
  0040a	3b f3		 cmp	 esi, ebx
  0040c	75 f2		 jne	 SHORT $LL194@RenderArea
$LN193@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 507  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  0040e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00414	6a 0e		 push	 14			; 0000000eH
  00416	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 508  : 
; 509  : #ifndef WORLD_EDITOR
; 510  : 	// Shadow Receiver
; 511  : 	if (m_bDrawShadow && m_bDrawChrShadow)

  0041b	80 bf 31 01 00
	00 00		 cmp	 BYTE PTR [edi+305], 0
  00422	74 2a		 je	 SHORT $LN258@RenderArea
  00424	80 bf 32 01 00
	00 00		 cmp	 BYTE PTR [edi+306], 0
  0042b	74 21		 je	 SHORT $LN258@RenderArea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0042d	8b 9f 10 0a 00
	00		 mov	 ebx, DWORD PTR [edi+2576]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00433	8b b7 0c 0a 00
	00		 mov	 esi, DWORD PTR [edi+2572]
  00439	3b f3		 cmp	 esi, ebx
  0043b	74 11		 je	 SHORT $LN258@RenderArea
  0043d	0f 1f 00	 npad	 3
$LL217@RenderArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  00440	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00442	e8 00 00 00 00	 call	 ?Show@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Show
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00447	83 c6 04	 add	 esi, 4
  0044a	3b f3		 cmp	 esi, ebx
  0044c	75 f2		 jne	 SHORT $LL217@RenderArea
$LN258@RenderArea:
  0044e	5b		 pop	 ebx
  0044f	5e		 pop	 esi
$LN216@RenderArea:
  00450	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 516  : }

  00451	8b e5		 mov	 esp, ebp
  00453	5d		 pop	 ebp
  00454	c2 04 00	 ret	 4
$LN260@RenderArea:

; 437  : 
; 438  : 	bool m_isDisableSortRendering=false;
; 439  : 
; 440  : 	if (m_isDisableSortRendering)
; 441  : 	{
; 442  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)
; 443  : 		{
; 444  : 			CArea * pArea;
; 445  : 			if (GetAreaPointer(i, &pArea))
; 446  : 			{
; 447  : 				pArea->Render();
; 448  : 
; 449  : 				m_dwRenderedCRCNum += pArea->DEBUG_GetRenderedCRCNum();
; 450  : 				m_dwRenderedGraphicThingInstanceNum += pArea->DEBUG_GetRenderedGrapphicThingInstanceNum();
; 451  : 
; 452  : 				CArea::TCRCWithNumberVector & rCRCWithNumberVector = pArea->DEBUG_GetRenderedCRCWithNumVector();
; 453  : 
; 454  : 				CArea::TCRCWithNumberVector::iterator aIterator = rCRCWithNumberVector.begin();
; 455  : 				while (aIterator != rCRCWithNumberVector.end())
; 456  : 				{
; 457  : 					DWORD dwCRC = (*aIterator++).dwCRC;
; 458  : 
; 459  : 					CArea::TCRCWithNumberVector::iterator aCRCWithNumberVectorIterator =
; 460  : 						std::find_if(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::FFindIfCRC(dwCRC));
; 461  : 
; 462  : 					if ( m_dwRenderedCRCWithNumberVector.end() == aCRCWithNumberVectorIterator)
; 463  : 					{
; 464  : 						CArea::TCRCWithNumber aCRCWithNumber;
; 465  : 						aCRCWithNumber.dwCRC = dwCRC;
; 466  : 						aCRCWithNumber.dwNumber = 1;
; 467  : 						m_dwRenderedCRCWithNumberVector.push_back(aCRCWithNumber);
; 468  : 					}
; 469  : 					else
; 470  : 					{
; 471  : 						CArea::TCRCWithNumber & rCRCWithNumber = *aCRCWithNumberVectorIterator;
; 472  : 						rCRCWithNumber.dwNumber += 1;
; 473  : 					}
; 474  : 				}
; 475  : 	#ifdef WORLD_EDITOR
; 476  : 				if (bRenderAmbience)
; 477  : 					pArea->RenderAmbience();
; 478  : 	#endif
; 479  : 			}
; 480  : 		}
; 481  : 
; 482  : 		std::sort(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::CRCNumComp());
; 483  : 	}
; 484  : 	else
; 485  : 	{
; 486  : 		static std::vector<CGraphicThingInstance*> s_kVct_pkOpaqueThingInstSort;

  00457	68 00 00 00 00	 push	 OFFSET ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
  0045c	e8 00 00 00 00	 call	 __Init_thread_header
  00461	83 c4 04	 add	 esp, 4
  00464	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA, -1
  0046b	0f 85 2a ff ff
	ff		 jne	 $LN10@RenderArea
  00471	68 00 00 00 00	 push	 OFFSET ??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ ; `CMapOutdoor::RenderArea'::`33'::`dynamic atexit destructor for 's_kVct_pkOpaqueThingInstSort''
  00476	e8 00 00 00 00	 call	 _atexit
  0047b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
  00480	e8 00 00 00 00	 call	 __Init_thread_footer
  00485	83 c4 08	 add	 esp, 8
  00488	e9 0e ff ff ff	 jmp	 $LN10@RenderArea
?RenderArea@CMapOutdoor@@QAEX_N@Z ENDP			; CMapOutdoor::RenderArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderTerrain@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -84						; size = 1
_v3Eye$ = -80						; size = 12
$T2 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?RenderTerrain@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderTerrain, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi

; 19   : 	if (!IsVisiblePart(PART_TERRAIN))

  00011	6a 00		 push	 0
  00013	8b f9		 mov	 edi, ecx
  00015	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0001a	84 c0		 test	 al, al
  0001c	0f 84 df 00 00
	00		 je	 $LN7@RenderTerr

; 20   : 		return;
; 21   : 
; 22   : 	if (!m_bSettingTerrainVisible)

  00022	80 bf ac 13 00
	00 00		 cmp	 BYTE PTR [edi+5036], 0
  00029	0f 84 d2 00 00
	00		 je	 $LN7@RenderTerr

; 23   : 		return;
; 24   : 
; 25   : 	// Inserted by levites
; 26   : 	if (!m_pTerrainPatchProxyList)

  0002f	83 7f 64 00	 cmp	 DWORD PTR [edi+100], 0
  00033	0f 84 c8 00 00
	00		 je	 $LN7@RenderTerr

; 27   : 		return;
; 28   : 
; 29   : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  00045	8b f0		 mov	 esi, eax

; 30   : 	if (!pCamera)

  00047	85 f6		 test	 esi, esi
  00049	0f 84 b1 00 00
	00		 je	 $LN27@RenderTerr
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  0004f	68 00 00 00 00	 push	 OFFSET ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A ; CGraphicBase::ms_matProj
  00054	68 00 00 00 00	 push	 OFFSET ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A ; CGraphicBase::ms_matView
  00059	8d 45 bc	 lea	 eax, DWORD PTR $T2[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 33   : 	BuildViewFrustum(ms_matView * ms_matProj);

  00062	8d 45 bc	 lea	 eax, DWORD PTR $T2[ebp]
  00065	8b cf		 mov	 ecx, edi
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z ; CMapOutdoor::BuildViewFrustum

; 34   : 
; 35   : 	D3DXVECTOR3 v3Eye = pCamera->GetEye();

  0006d	f3 0f 7e 46 30	 movq	 xmm0, QWORD PTR [esi+48]

; 36   : 	m_fXforDistanceCaculation = -v3Eye.x;
; 37   : 	m_fYforDistanceCaculation = -v3Eye.y;
; 38   : 
; 39   : 	//////////////////////////////////////////////////////////////////////////
; 40   : 	// Push
; 41   : 	m_PatchVector.clear();
; 42   : 
; 43   : 	__RenderTerrain_RecurseRenderQuadTree(m_pRootNode);

  00072	8b cf		 mov	 ecx, edi
  00074	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  0007a	66 0f d6 45 b0	 movq	 QWORD PTR _v3Eye$[ebp], xmm0
  0007f	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _v3Eye$[ebp]
  00084	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0008b	f3 0f 11 87 10
	09 00 00	 movss	 DWORD PTR [edi+2320], xmm0
  00093	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _v3Eye$[ebp+4]
  00098	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0009f	6a 01		 push	 1
  000a1	ff b7 14 01 00
	00		 push	 DWORD PTR [edi+276]
  000a7	f3 0f 11 87 14
	09 00 00	 movss	 DWORD PTR [edi+2324], xmm0
  000af	89 87 1c 01 00
	00		 mov	 DWORD PTR [edi+284], eax
  000b5	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ba	8b 97 1c 01 00
	00		 mov	 edx, DWORD PTR [edi+284]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000c0	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c2	8b b7 18 01 00
	00		 mov	 esi, DWORD PTR [edi+280]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000c8	2b c6		 sub	 eax, esi
  000ca	ff 75 ac	 push	 DWORD PTR $T1[ebp]
  000cd	c1 f8 03	 sar	 eax, 3
  000d0	50		 push	 eax
  000d1	52		 push	 edx
  000d2	56		 push	 esi
  000d3	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >
  000d8	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 47   : 	if (CTerrainPatch::SOFTWARE_TRANSFORM_PATCH_ENABLE)

  000db	8b cf		 mov	 ecx, edi
  000dd	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?SOFTWARE_TRANSFORM_PATCH_ENABLE@CTerrainPatch@@2_NA, 0 ; CTerrainPatch::SOFTWARE_TRANSFORM_PATCH_ENABLE
  000e4	74 15		 je	 SHORT $LN6@RenderTerr

; 48   : 		__RenderTerrain_RenderSoftwareTransformPatch();

  000e6	e8 00 00 00 00	 call	 ?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch
  000eb	5e		 pop	 esi
  000ec	5f		 pop	 edi

; 51   : }

  000ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f0	33 cd		 xor	 ecx, ebp
  000f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c3		 ret	 0
$LN6@RenderTerr:

; 49   : 	else
; 50   : 		__RenderTerrain_RenderHardwareTransformPatch();

  000fb	e8 00 00 00 00	 call	 ?__RenderTerrain_RenderHardwareTransformPatch@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__RenderTerrain_RenderHardwareTransformPatch
$LN27@RenderTerr:
  00100	5e		 pop	 esi
$LN7@RenderTerr:

; 51   : }

  00101	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	5f		 pop	 edi
  00107	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
?RenderTerrain@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderScreenFiltering@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderScreenFiltering@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderScreenFiltering, COMDAT
; _this$ = ecx

; 215  : 	m_ScreenFilter.Render();

  00000	81 c1 2c 07 00
	00		 add	 ecx, 1836		; 0000072cH
  00006	e9 00 00 00 00	 jmp	 ?Render@CScreenFilter@@QAEXXZ ; CScreenFilter::Render
?RenderScreenFiltering@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderScreenFiltering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderAfterLensFlare, COMDAT
; _this$ = ecx

; 198  : {

  00000	56		 push	 esi

; 199  : 	m_LensFlare.AdjustBrightness();

  00001	8d b1 b8 06 00
	00		 lea	 esi, DWORD PTR [ecx+1720]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?AdjustBrightness@CLensFlare@@QAEXXZ ; CLensFlare::AdjustBrightness

; 200  : 	m_LensFlare.DrawFlare();

  0000e	8b ce		 mov	 ecx, esi
  00010	5e		 pop	 esi
  00011	e9 00 00 00 00	 jmp	 ?DrawFlare@CLensFlare@@QAEXXZ ; CLensFlare::DrawFlare
?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderAfterLensFlare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderBeforeLensFlare, COMDAT
; _this$ = ecx

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx
  00013	57		 push	 edi

; 186  : 	m_LensFlare.DrawBeforeFlare();

  00014	8d 8e b8 06 00
	00		 lea	 ecx, DWORD PTR [esi+1720]
  0001a	e8 00 00 00 00	 call	 ?DrawBeforeFlare@CLensFlare@@QAEXXZ ; CLensFlare::DrawBeforeFlare

; 187  : 
; 188  : 	if (!mc_pEnvironmentData)

  0001f	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00022	85 c0		 test	 eax, eax
  00024	75 1d		 jne	 SHORT $LN2@RenderBefo

; 189  : 	{
; 190  : 		TraceError("CMapOutdoor::RenderBeforeLensFlare mc_pEnvironmentData is NULL");

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@
  0002b	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00030	83 c4 04	 add	 esp, 4
  00033	5f		 pop	 edi

; 195  : }

  00034	5e		 pop	 esi
  00035	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00038	33 cd		 xor	 ecx, ebp
  0003a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN2@RenderBefo:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 172  :     x = v.x;

  00043	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 194  : 	m_LensFlare.Compute(mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_BACKGROUND].Direction);

  00048	8d 8e b8 06 00
	00		 lea	 ecx, DWORD PTR [esi+1720]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 172  :     x = v.x;

  0004e	f3 0f 11 45 f0	 movss	 DWORD PTR $T1[ebp], xmm0

; 173  :     y = v.y;

  00053	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  00058	f3 0f 11 45 f4	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 174  :     z = v.z;

  0005d	f3 0f 10 40 50	 movss	 xmm0, DWORD PTR [eax+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 194  : 	m_LensFlare.Compute(mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_BACKGROUND].Direction);

  00062	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  00065	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 174  :     z = v.z;

  00066	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 194  : 	m_LensFlare.Compute(mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_BACKGROUND].Direction);

  0006b	e8 00 00 00 00	 call	 ?Compute@CLensFlare@@QAEXABUD3DXVECTOR3@@@Z ; CLensFlare::Compute

; 195  : }

  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	5f		 pop	 edi
  00074	33 cd		 xor	 ecx, ebp
  00076	5e		 pop	 esi
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderBeforeLensFlare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderCloud@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderCloud@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderCloud, COMDAT
; _this$ = ecx

; 225  : {

  00000	56		 push	 esi

; 226  : 	if (IsVisiblePart(PART_CLOUD))

  00001	6a 02		 push	 2
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000a	84 c0		 test	 al, al
  0000c	74 0c		 je	 SHORT $LN2@RenderClou

; 227  : 		m_SkyBox.RenderCloud();

  0000e	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ?RenderCloud@CSkyBox@@QAEXXZ ; CSkyBox::RenderCloud
$LN2@RenderClou:
  0001a	5e		 pop	 esi

; 228  : }

  0001b	c3		 ret	 0
?RenderCloud@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderCloud
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderSky@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderSky@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderSky, COMDAT
; _this$ = ecx

; 219  : {

  00000	56		 push	 esi

; 220  : 	if (IsVisiblePart(PART_SKY))

  00001	6a 05		 push	 5
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000a	84 c0		 test	 al, al
  0000c	74 10		 je	 SHORT $LN2@RenderSky

; 221  : 		m_SkyBox.Render();

  0000e	8b 86 38 03 00
	00		 mov	 eax, DWORD PTR [esi+824]
  00014	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  0001a	5e		 pop	 esi
  0001b	ff 60 08	 jmp	 DWORD PTR [eax+8]
$LN2@RenderSky:
  0001e	5e		 pop	 esi

; 222  : }

  0001f	c3		 ret	 0
?RenderSky@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderSky
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderCollision@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
?RenderCollision@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderCollision, COMDAT
; _this$ = ecx

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 205  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00008	33 f6		 xor	 esi, esi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@RenderColl:

; 206  : 	{
; 207  : 		CArea * pArea;
; 208  : 		if (GetAreaPointer(i, &pArea))

  00010	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0001c	85 c0		 test	 eax, eax
  0001e	74 08		 je	 SHORT $LN2@RenderColl

; 209  : 			pArea->RenderCollision();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00023	e8 00 00 00 00	 call	 ?RenderCollision@CArea@@QAEXXZ ; CArea::RenderCollision
$LN2@RenderColl:

; 205  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00028	46		 inc	 esi
  00029	83 fe 09	 cmp	 esi, 9
  0002c	7c e2		 jl	 SHORT $LL4@RenderColl

; 210  : 	}
; 211  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?RenderCollision@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderCollision
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\AreaTerrain.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z
_TEXT	SEGMENT
_ucTerrainNum$ = -76					; size = 1
_pTerrain$ = -72					; size = 4
_matTexTransform$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_patchnum$ = 8						; size = 4
?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z PROC		; CMapOutdoor::DrawPatchAttr, COMDAT
; _this$ = ecx

; 909  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _patchnum$[ebp]
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	8b f9		 mov	 edi, ecx

; 910  : 	CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[patchnum];

  00017	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0001e	2b d0		 sub	 edx, eax
  00020	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 911  : 	if (!pTerrainPatchProxy->isUsed())

  00023	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  00028	8d 34 90	 lea	 esi, DWORD PTR [eax+edx*4]
  0002b	0f 84 13 01 00
	00		 je	 $LN1@DrawPatchA

; 912  : 		return;
; 913  : 
; 914  : 	long sPatchNum = pTerrainPatchProxy->GetPatchNum();
; 915  : 	if (sPatchNum < 0)

  00031	66 83 7e 06 00	 cmp	 WORD PTR [esi+6], 0
  00036	0f 8c 08 01 00
	00		 jl	 $LN1@DrawPatchA

; 916  : 		return;
; 917  : 
; 918  : 	BYTE ucTerrainNum = pTerrainPatchProxy->GetTerrainNum();

  0003c	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  0003f	88 45 b4	 mov	 BYTE PTR _ucTerrainNum$[ebp], al

; 919  : 	if (0xFF == ucTerrainNum)

  00042	3c ff		 cmp	 al, 255			; 000000ffH
  00044	0f 84 fa 00 00
	00		 je	 $LN1@DrawPatchA

; 920  : 		return;
; 921  : 
; 922  : 	// Deal with this material buffer
; 923  : 	CTerrain * pTerrain;
; 924  : 	if (!GetTerrainPointer(ucTerrainNum, &pTerrain))

  0004a	8d 45 b8	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  0004d	50		 push	 eax
  0004e	ff 75 b4	 push	 DWORD PTR _ucTerrainNum$[ebp]
  00051	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00056	85 c0		 test	 eax, eax
  00058	0f 84 e6 00 00
	00		 je	 $LN1@DrawPatchA

; 925  : 		return;
; 926  : 
; 927  : 	if (!pTerrain->IsMarked())

  0005e	8b 45 b8	 mov	 eax, DWORD PTR _pTerrain$[ebp]
  00061	83 b8 d8 c1 06
	00 00		 cmp	 DWORD PTR [eax+442840], 0
  00068	0f 84 d6 00 00
	00		 je	 $LN1@DrawPatchA
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\AreaTerrain.h

; 93   : 			*usCoordY = m_wY;

  0006e	0f b7 88 6e a5
	06 00		 movzx	 ecx, WORD PTR [eax+435566]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 933  : 	m_matWorldForCommonUse._41 = -(float) (wCoordX * CTerrainImpl::XSIZE * CTerrainImpl::CELLSCALE);

  00075	0f b7 80 6c a5
	06 00		 movzx	 eax, WORD PTR [eax+435564]
  0007c	69 c0 00 9c ff
	ff		 imul	 eax, eax, -25600
  00082	66 0f 6e c0	 movd	 xmm0, eax

; 934  : 	m_matWorldForCommonUse._42 = (float) (wCoordY * CTerrainImpl::YSIZE * CTerrainImpl::CELLSCALE);

  00086	8b c1		 mov	 eax, ecx
  00088	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0008e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00091	f3 0f 11 87 78
	07 00 00	 movss	 DWORD PTR [edi+1912], xmm0
  00099	66 0f 6e c0	 movd	 xmm0, eax

; 935  : 
; 936  : 	D3DXMATRIX matTexTransform, matTexTransformTemp;
; 937  : 	D3DXMatrixMultiply(&matTexTransform, &m_matViewInverse, &m_matWorldForCommonUse);

  0009d	8d 87 48 07 00
	00		 lea	 eax, DWORD PTR [edi+1864]
  000a3	50		 push	 eax
  000a4	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a7	8d 87 88 07 00
	00		 lea	 eax, DWORD PTR [edi+1928]
  000ad	50		 push	 eax
  000ae	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000b1	50		 push	 eax
  000b2	f3 0f 11 87 7c
	07 00 00	 movss	 DWORD PTR [edi+1916], xmm0
  000ba	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 938  : 	D3DXMatrixMultiply(&matTexTransform, &matTexTransform, &m_matStaticShadow);

  000bf	8d 87 08 08 00
	00		 lea	 eax, DWORD PTR [edi+2056]
  000c5	50		 push	 eax
  000c6	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000c9	50		 push	 eax
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 939  : 	STATEMANAGER.SetTransform(D3DTS_TEXTURE1, &matTexTransform);

  000d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d6	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000d9	50		 push	 eax
  000da	6a 11		 push	 17			; 00000011H
  000dc	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 940  : 
; 941  : 	TTerrainSplatPatch & rAttrSplatPatch = pTerrain->GetMarkedSplatPatch();
; 942  :  	STATEMANAGER.SetTexture(1, rAttrSplatPatch.Splats[0].pd3dTexture);

  000e1	8b 45 b8	 mov	 eax, DWORD PTR _pTerrain$[ebp]
  000e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ea	ff b0 e4 c5 07
	00		 push	 DWORD PTR [eax+509412]
  000f0	6a 01		 push	 1
  000f2	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 943  : 
; 944  : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZ | D3DFVF_NORMAL);

  000f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000fd	6a 12		 push	 18			; 00000012H
  000ff	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 945  : 	STATEMANAGER.SetStreamSource(0, pTerrainPatchProxy->HardwareTransformPatch_GetVertexBufferPtr()->GetD3DVertexBuffer(), m_iPatchTerrainVertexSize);

  00104	ff b7 a8 09 00
	00		 push	 DWORD PTR [edi+2472]
  0010a	8b ce		 mov	 ecx, esi
  0010c	e8 00 00 00 00	 call	 ?HardwareTransformPatch_GetVertexBufferPtr@CTerrainPatchProxy@@QAEPAVCGraphicVertexBuffer@@XZ ; CTerrainPatchProxy::HardwareTransformPatch_GetVertexBufferPtr
  00111	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00117	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0011a	50		 push	 eax
  0011b	6a 00		 push	 0
  0011d	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 946  : 
; 947  : #ifdef WORLD_EDITOR
; 948  : 	STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLESTRIP, 0, m_iPatchTerrainVertexCount, 0, m_wNumIndices - 2);
; 949  : #else
; 950  : 	STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLESTRIP, 0, m_iPatchTerrainVertexCount, 0, m_wNumIndices[0] - 2);

  00122	0f b7 87 d8 00
	00 00		 movzx	 eax, WORD PTR [edi+216]
  00129	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0012f	83 e8 02	 sub	 eax, 2
  00132	50		 push	 eax
  00133	6a 00		 push	 0
  00135	ff b7 a0 09 00
	00		 push	 DWORD PTR [edi+2464]
  0013b	6a 00		 push	 0
  0013d	6a 05		 push	 5
  0013f	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN1@DrawPatchA:

; 951  : #endif
; 952  : }

  00144	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00147	5f		 pop	 edi
  00148	33 cd		 xor	 ecx, ebp
  0014a	5e		 pop	 esi
  0014b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00150	8b e5		 mov	 esp, ebp
  00152	5d		 pop	 ebp
  00153	c2 04 00	 ret	 4
?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z ENDP		; CMapOutdoor::DrawPatchAttr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z
_TEXT	SEGMENT
_Node$ = 8						; size = 4
_bCullEnable$ = 12					; size = 1
?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z PROC ; CMapOutdoor::RecurseRenderAttr, COMDAT
; _this$ = ecx

; 882  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _bCullEnable$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _Node$[ebp]
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	66 90		 npad	 2
$LL11@RecurseRen:

; 883  : 	if (bCullEnable)

  00010	84 db		 test	 bl, bl
  00012	74 13		 je	 SHORT $LN3@RecurseRen

; 884  : 	{
; 885  : 		if (__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle(Node->center, Node->radius)==VIEW_NONE)

  00014	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00017	8b cf		 mov	 ecx, edi
  00019	50		 push	 eax
  0001a	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
  00023	85 c0		 test	 eax, eax
  00025	74 4e		 je	 SHORT $LN9@RecurseRen
$LN3@RecurseRen:

; 886  : 			return;
; 887  : 	}
; 888  : 
; 889  : 	{
; 890  : 		if (Node->Size == 1)

  00027	83 7e 24 01	 cmp	 DWORD PTR [esi+36], 1
  0002b	74 3e		 je	 SHORT $LN14@RecurseRen

; 893  : 		}
; 894  : 		else
; 895  : 		{
; 896  : 			if (Node->NW_Node != NULL)

  0002d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00030	85 c0		 test	 eax, eax
  00032	74 09		 je	 SHORT $LN6@RecurseRen

; 897  : 				RecurseRenderAttr(Node->NW_Node, bCullEnable);

  00034	53		 push	 ebx
  00035	50		 push	 eax
  00036	8b cf		 mov	 ecx, edi
  00038	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
$LN6@RecurseRen:

; 898  : 			if (Node->NE_Node != NULL)

  0003d	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00040	85 c0		 test	 eax, eax
  00042	74 09		 je	 SHORT $LN7@RecurseRen

; 899  : 				RecurseRenderAttr(Node->NE_Node, bCullEnable);

  00044	53		 push	 ebx
  00045	50		 push	 eax
  00046	8b cf		 mov	 ecx, edi
  00048	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
$LN7@RecurseRen:

; 900  : 			if (Node->SW_Node != NULL)

  0004d	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00050	85 c0		 test	 eax, eax
  00052	74 09		 je	 SHORT $LN8@RecurseRen

; 901  : 				RecurseRenderAttr(Node->SW_Node, bCullEnable);

  00054	53		 push	 ebx
  00055	50		 push	 eax
  00056	8b cf		 mov	 ecx, edi
  00058	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
$LN8@RecurseRen:

; 902  : 			if (Node->SE_Node != NULL)

  0005d	8b 76 20	 mov	 esi, DWORD PTR [esi+32]
  00060	85 f6		 test	 esi, esi
  00062	75 ac		 jne	 SHORT $LL11@RecurseRen

; 903  : 				RecurseRenderAttr(Node->SE_Node, bCullEnable);
; 904  : 		}
; 905  :  	}
; 906  : }

  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
$LN14@RecurseRen:

; 891  : 		{
; 892  : 			DrawPatchAttr(Node->PatchNum);

  0006b	ff 76 28	 push	 DWORD PTR [esi+40]
  0006e	8b cf		 mov	 ecx, edi
  00070	e8 00 00 00 00	 call	 ?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z ; CMapOutdoor::DrawPatchAttr
$LN9@RecurseRen:

; 903  : 				RecurseRenderAttr(Node->SE_Node, bCullEnable);
; 904  : 		}
; 905  :  	}
; 906  : }

  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ENDP ; CMapOutdoor::RecurseRenderAttr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderMarkedArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_eType$ = -76						; size = 4
_wPrimitiveCount$ = -72					; size = 2
_matTexTransform$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?RenderMarkedArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderMarkedArea, COMDAT
; _this$ = ecx

; 810  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 811  : 	if (!m_pTerrainPatchProxyList)

  00013	83 7e 64 00	 cmp	 DWORD PTR [esi+100], 0
  00017	0f 84 e7 03 00
	00		 je	 $LN1@RenderMark

; 812  : 		return;
; 813  : 
; 814  : 	m_matWorldForCommonUse._41 = 0.0f;
; 815  : 	m_matWorldForCommonUse._42 = 0.0f;
; 816  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorldForCommonUse);

  0001d	8d 86 48 07 00
	00		 lea	 eax, DWORD PTR [esi+1864]
  00023	c7 86 78 07 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+1912], 0
  0002d	50		 push	 eax
  0002e	c7 86 7c 07 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+1916], 0
  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003e	68 00 01 00 00	 push	 256			; 00000100H
  00043	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 817  : 
; 818  : 	WORD wPrimitiveCount;
; 819  : 	D3DPRIMITIVETYPE eType;
; 820  : 	SelectIndexBuffer(0, &wPrimitiveCount, &eType);

  00048	8d 45 b4	 lea	 eax, DWORD PTR _eType$[ebp]
  0004b	8b ce		 mov	 ecx, esi
  0004d	50		 push	 eax
  0004e	8d 45 b8	 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  00051	50		 push	 eax
  00052	6a 00		 push	 0
  00054	e8 00 00 00 00	 call	 ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer

; 821  : 
; 822  : 	D3DXMATRIX matTexTransform, matTexTransformTemp;
; 823  : 
; 824  : 	D3DXMatrixScaling(&matTexTransform, m_fTerrainTexCoordBase * 32.0f, -m_fTerrainTexCoordBase * 32.0f, 0.0f);

  00059	f3 0f 10 96 08
	09 00 00	 movss	 xmm2, DWORD PTR [esi+2312]
  00061	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  00064	0f 28 c2	 movaps	 xmm0, xmm2
  00067	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0006a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00071	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42000000
  00079	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42000000
  00081	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00089	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0008f	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 _D3DXMatrixScaling@16

; 825  : 	D3DXMatrixMultiply(&matTexTransform, &m_matViewInverse, &matTexTransform);

  0009a	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  0009d	50		 push	 eax
  0009e	8d 86 88 07 00
	00		 lea	 eax, DWORD PTR [esi+1928]
  000a4	50		 push	 eax
  000a5	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 826  : 	STATEMANAGER.SaveTransform(D3DTS_TEXTURE0, &matTexTransform);

  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b4	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000b7	50		 push	 eax
  000b8	6a 10		 push	 16			; 00000010H
  000ba	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 827  : 	STATEMANAGER.SaveTransform(D3DTS_TEXTURE1, &matTexTransform);

  000bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c5	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000c8	50		 push	 eax
  000c9	6a 11		 push	 17			; 00000011H
  000cb	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 828  : 
; 829  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d6	6a 01		 push	 1
  000d8	6a 1b		 push	 27			; 0000001bH
  000da	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 830  : 	STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  000df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e5	6a 05		 push	 5
  000e7	6a 13		 push	 19			; 00000013H
  000e9	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 831  : 	STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f4	6a 06		 push	 6
  000f6	6a 14		 push	 20			; 00000014H
  000f8	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 832  : 
; 833  : 	static long lStartTime = timeGetTime();

  000fd	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00109	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
  00111	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00117	0f 8f f6 02 00
	00		 jg	 $LN31@RenderMark
$LN2@RenderMark:

; 834  : 	float fTime = float((timeGetTime() - lStartTime)%3000) / 3000.0f;

  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00123	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA
  00129	33 d2		 xor	 edx, edx
  0012b	b9 b8 0b 00 00	 mov	 ecx, 3000		; 00000bb8H

; 835  : 	float fAlpha = fabs(fTime - 0.5f) / 2.0f + 0.1f;

  00130	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00138	f7 f1		 div	 ecx
  0013a	0f 57 c0	 xorps	 xmm0, xmm0
  0013d	f2 0f 2a c2	 cvtsi2sd xmm0, edx
  00141	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00144	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0014d	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00151	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@453b8000
  00159	f3 0f 5c c1	 subss	 xmm0, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  0015d	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 835  : 	float fAlpha = fabs(fTime - 0.5f) / 2.0f + 0.1f;

  00164	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00168	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3dcccccd
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00170	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00177	72 07		 jb	 SHORT $LN27@RenderMark
  00179	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0017e	eb 1d		 jmp	 SHORT $LN26@RenderMark
$LN27@RenderMark:
  00180	0f 57 d2	 xorps	 xmm2, xmm2
  00183	0f 2f d0	 comiss	 xmm2, xmm0
  00186	72 04		 jb	 SHORT $LN25@RenderMark
  00188	33 c0		 xor	 eax, eax
  0018a	eb 11		 jmp	 SHORT $LN26@RenderMark
$LN25@RenderMark:
  0018c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00194	f3 0f 58 c1	 addss	 xmm0, xmm1
  00198	e8 00 00 00 00	 call	 __ftoui3
$LN26@RenderMark:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 836  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(1.0f, 1.0f, 1.0f, fAlpha));

  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  001a3	c1 e0 18	 shl	 eax, 24			; 00000018H
  001a6	0d ff ff ff 00	 or	 eax, 16777215		; 00ffffffH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 836  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(1.0f, 1.0f, 1.0f, fAlpha));

  001ab	50		 push	 eax
  001ac	6a 3c		 push	 60			; 0000003cH
  001ae	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 837  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  001b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b9	6a 02		 push	 2
  001bb	6a 02		 push	 2
  001bd	6a 00		 push	 0
  001bf	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 838  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_TFACTOR);

  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ca	6a 03		 push	 3
  001cc	6a 03		 push	 3
  001ce	6a 00		 push	 0
  001d0	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 839  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG2);

  001d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001db	6a 03		 push	 3
  001dd	6a 01		 push	 1
  001df	6a 00		 push	 0
  001e1	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 840  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  001e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ec	6a 02		 push	 2
  001ee	6a 05		 push	 5
  001f0	6a 00		 push	 0
  001f2	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 841  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG2, D3DTA_TFACTOR);

  001f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001fd	6a 03		 push	 3
  001ff	6a 06		 push	 6
  00201	6a 00		 push	 0
  00203	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 842  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG2);

  00208	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0020e	6a 03		 push	 3
  00210	6a 04		 push	 4
  00212	6a 00		 push	 0
  00214	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 843  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  00219	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0021f	68 00 00 02 00	 push	 131072			; 00020000H
  00224	6a 0b		 push	 11			; 0000000bH
  00226	6a 00		 push	 0
  00228	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 844  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  0022d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00233	6a 02		 push	 2
  00235	6a 18		 push	 24			; 00000018H
  00237	6a 00		 push	 0
  00239	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 845  : 
; 846  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  0023e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00244	6a 01		 push	 1
  00246	6a 02		 push	 2
  00248	6a 01		 push	 1
  0024a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 847  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  0024f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00255	6a 02		 push	 2
  00257	6a 01		 push	 1
  00259	6a 01		 push	 1
  0025b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 848  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00260	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00266	6a 02		 push	 2
  00268	6a 05		 push	 5
  0026a	6a 01		 push	 1
  0026c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 849  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG2, D3DTA_CURRENT);

  00271	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00277	6a 01		 push	 1
  00279	6a 06		 push	 6
  0027b	6a 01		 push	 1
  0027d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 850  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_MODULATE);

  00282	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00288	6a 04		 push	 4
  0028a	6a 04		 push	 4
  0028c	6a 01		 push	 1
  0028e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 851  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  00293	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00299	68 00 00 02 00	 push	 131072			; 00020000H
  0029e	6a 0b		 push	 11			; 0000000bH
  002a0	6a 01		 push	 1
  002a2	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 852  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  002a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002ad	6a 02		 push	 2
  002af	6a 18		 push	 24			; 00000018H
  002b1	6a 01		 push	 1
  002b3	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 853  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_MINFILTER,	D3DTEXF_POINT);

  002b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002be	6a 01		 push	 1
  002c0	6a 11		 push	 17			; 00000011H
  002c2	6a 01		 push	 1
  002c4	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 854  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_MAGFILTER,	D3DTEXF_POINT);

  002c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002cf	6a 01		 push	 1
  002d1	6a 10		 push	 16			; 00000010H
  002d3	6a 01		 push	 1
  002d5	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 855  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_MIPFILTER,	D3DTEXF_POINT);

  002da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002e0	6a 01		 push	 1
  002e2	6a 12		 push	 18			; 00000012H
  002e4	6a 01		 push	 1
  002e6	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 856  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  002eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002f1	6a 03		 push	 3
  002f3	6a 0d		 push	 13			; 0000000dH
  002f5	6a 01		 push	 1
  002f7	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 857  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  002fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00302	6a 03		 push	 3
  00304	6a 0e		 push	 14			; 0000000eH
  00306	6a 01		 push	 1
  00308	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 858  : 
; 859  : 	STATEMANAGER.SetTexture(0, m_attrImageInstance.GetTexturePointer()->GetD3DTexture());

  0030d	8d 8e ec 0d 00
	00		 lea	 ecx, DWORD PTR [esi+3564]
  00313	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  00318	8b c8		 mov	 ecx, eax
  0031a	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  0031f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00325	50		 push	 eax
  00326	6a 00		 push	 0
  00328	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 860  : 
; 861  : 	RecurseRenderAttr(m_pRootNode);

  0032d	6a 01		 push	 1
  0032f	ff b6 14 01 00
	00		 push	 DWORD PTR [esi+276]
  00335	8b ce		 mov	 ecx, esi
  00337	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr

; 862  : 
; 863  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_TEXCOORDINDEX);

  0033c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00342	6a 0b		 push	 11			; 0000000bH
  00344	6a 00		 push	 0
  00346	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 864  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS);

  0034b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00351	6a 18		 push	 24			; 00000018H
  00353	6a 00		 push	 0
  00355	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 865  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  0035a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00360	6a 0b		 push	 11			; 0000000bH
  00362	6a 01		 push	 1
  00364	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 866  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  00369	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0036f	6a 18		 push	 24			; 00000018H
  00371	6a 01		 push	 1
  00373	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 867  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_MINFILTER);

  00378	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0037e	6a 11		 push	 17			; 00000011H
  00380	6a 01		 push	 1
  00382	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 868  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_MAGFILTER);

  00387	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0038d	6a 10		 push	 16			; 00000010H
  0038f	6a 01		 push	 1
  00391	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 869  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_MIPFILTER);

  00396	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0039c	6a 12		 push	 18			; 00000012H
  0039e	6a 01		 push	 1
  003a0	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 870  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  003a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003ab	6a 0d		 push	 13			; 0000000dH
  003ad	6a 01		 push	 1
  003af	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 871  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  003b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003ba	6a 0e		 push	 14			; 0000000eH
  003bc	6a 01		 push	 1
  003be	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 872  : 
; 873  : 	STATEMANAGER.RestoreTransform(D3DTS_TEXTURE0);

  003c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003c9	6a 10		 push	 16			; 00000010H
  003cb	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 874  : 	STATEMANAGER.RestoreTransform(D3DTS_TEXTURE1);

  003d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003d6	6a 11		 push	 17			; 00000011H
  003d8	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 875  : 
; 876  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  003dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003e3	6a 1b		 push	 27			; 0000001bH
  003e5	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 877  : 	STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  003ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003f0	6a 13		 push	 19			; 00000013H
  003f2	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 878  : 	STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  003f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003fd	6a 14		 push	 20			; 00000014H
  003ff	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN1@RenderMark:

; 879  : }

  00404	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00407	33 cd		 xor	 ecx, ebp
  00409	5e		 pop	 esi
  0040a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0040f	8b e5		 mov	 esp, ebp
  00411	5d		 pop	 ebp
  00412	c3		 ret	 0
$LN31@RenderMark:

; 832  : 
; 833  : 	static long lStartTime = timeGetTime();

  00413	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
  00418	e8 00 00 00 00	 call	 __Init_thread_header
  0041d	83 c4 04	 add	 esp, 4
  00420	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA, -1
  00427	0f 85 f0 fc ff
	ff		 jne	 $LN2@RenderMark
  0042d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00433	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
  00438	a3 00 00 00 00	 mov	 DWORD PTR ?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA, eax
  0043d	e8 00 00 00 00	 call	 __Init_thread_footer
  00442	83 c4 04	 add	 esp, 4
  00445	e9 d3 fc ff ff	 jmp	 $LN2@RenderMark
?RenderMarkedArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderMarkedArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
_c_rkLight$ = 12					; size = 4
?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z PROC	; CMapOutdoor::ApplyLight, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 130  : 	m_kSTPD.m_dwLightVersion=dwVersion;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwVersion$[ebp]
  00006	89 81 08 0a 00
	00		 mov	 DWORD PTR [ecx+2568], eax

; 131  : 	STATEMANAGER.SetLight(0, &c_rkLight);

  0000c	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _dwVersion$[ebp], 0
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 132  : }

  00019	5d		 pop	 ebp

; 131  : 	STATEMANAGER.SetLight(0, &c_rkLight);

  0001a	e9 00 00 00 00	 jmp	 ?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z ; CStateManager::SetLight
?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z ENDP	; CMapOutdoor::ApplyLight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z
_TEXT	SEGMENT
_pdwGraphicThingInstanceNum$ = 8			; size = 4
_pdwCRCNum$ = 12					; size = 4
?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z PROC ; CMapOutdoor::GetRenderedGraphicThingInstanceNum, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 178  : 	*pdwGraphicThingInstanceNum = m_dwRenderedGraphicThingInstanceNum;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pdwGraphicThingInstanceNum$[ebp]
  00006	8b 91 b4 09 00
	00		 mov	 edx, DWORD PTR [ecx+2484]
  0000c	89 10		 mov	 DWORD PTR [eax], edx

; 179  : 	*pdwCRCNum = m_dwRenderedCRCNum;

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pdwCRCNum$[ebp]
  00011	8b 89 b0 09 00
	00		 mov	 ecx, DWORD PTR [ecx+2480]
  00017	89 08		 mov	 DWORD PTR [eax], ecx

; 180  : 
; 181  : 	return m_dwRenderedCRCWithNumberVector;

  00019	b8 00 00 00 00	 mov	 eax, OFFSET ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A ; m_dwRenderedCRCWithNumberVector

; 182  : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z ENDP ; CMapOutdoor::GetRenderedGraphicThingInstanceNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z
_TEXT	SEGMENT
_piPatch$ = 8						; size = 4
_piSplat$ = 12						; size = 4
_pfSplatRatio$ = 16					; size = 4
?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z PROC ; CMapOutdoor::GetRenderedSplatNum, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  : 	*piPatch = m_iRenderedPatchNum;

  00003	8b 45 08	 mov	 eax, DWORD PTR _piPatch$[ebp]
  00006	8b 91 8c 09 00
	00		 mov	 edx, DWORD PTR [ecx+2444]
  0000c	89 10		 mov	 DWORD PTR [eax], edx

; 170  : 	*piSplat = m_iRenderedSplatNum;

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _piSplat$[ebp]
  00011	8b 91 88 09 00
	00		 mov	 edx, DWORD PTR [ecx+2440]
  00017	89 10		 mov	 DWORD PTR [eax], edx
  00019	66 0f 6e 89 84
	09 00 00	 movd	 xmm1, DWORD PTR [ecx+2436]
  00021	66 0f 6e 81 8c
	09 00 00	 movd	 xmm0, DWORD PTR [ecx+2444]

; 171  : 	*pfSplatRatio = m_iRenderedSplatNumSqSum/float(m_iRenderedPatchNum);

  00029	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0002c	8b 45 10	 mov	 eax, DWORD PTR _pfSplatRatio$[ebp]
  0002f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00032	f3 0f 5e c8	 divss	 xmm1, xmm0
  00036	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 172  : 
; 173  : 	return m_RenderedTextureNumVector;

  0003a	8d 81 90 09 00
	00		 lea	 eax, DWORD PTR [ecx+2448]

; 174  : }

  00040	5d		 pop	 ebp
  00041	c2 0c 00	 ret	 12			; 0000000cH
?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z ENDP ; CMapOutdoor::GetRenderedSplatNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetSplatLimit@CMapOutdoor@@QAEXH@Z
_TEXT	SEGMENT
_iSplatNum$ = 8						; size = 4
?SetSplatLimit@CMapOutdoor@@QAEXH@Z PROC		; CMapOutdoor::SetSplatLimit, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 164  : 	m_iSplatLimit = iSplatNum;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iSplatNum$[ebp]
  00006	89 81 9c 09 00
	00		 mov	 DWORD PTR [ecx+2460], eax

; 165  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetSplatLimit@CMapOutdoor@@QAEXH@Z ENDP		; CMapOutdoor::SetSplatLimit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
_isVisible$ = 12					; size = 1
?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z PROC		; CMapOutdoor::SetVisiblePart, COMDAT
; _this$ = ecx

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 141  : 	DWORD dwMask=(1<<ePart);

  00006	b8 01 00 00 00	 mov	 eax, 1
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _ePart$[ebp]
  0000e	d3 e0		 shl	 eax, cl

; 142  : 	if (isVisible)

  00010	80 7d 0c 00	 cmp	 BYTE PTR _isVisible$[ebp], 0
  00014	8b 96 80 09 00
	00		 mov	 edx, DWORD PTR [esi+2432]
  0001a	74 0d		 je	 SHORT $LN2@SetVisible

; 143  : 	{
; 144  : 		m_dwVisiblePartFlags|=dwMask;

  0001c	0b d0		 or	 edx, eax

; 150  : 	}
; 151  : }

  0001e	89 96 80 09 00
	00		 mov	 DWORD PTR [esi+2432], edx
  00024	5e		 pop	 esi
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
$LN2@SetVisible:

; 145  : 	}
; 146  : 	else
; 147  : 	{
; 148  : 		DWORD dwReverseMask=~dwMask;

  00029	f7 d0		 not	 eax

; 149  : 		m_dwVisiblePartFlags&=dwReverseMask;

  0002b	23 c2		 and	 eax, edx

; 150  : 	}
; 151  : }

  0002d	89 86 80 09 00
	00		 mov	 DWORD PTR [esi+2432], eax
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z ENDP		; CMapOutdoor::SetVisiblePart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -168						; size = 64
$T2 = -104						; size = 64
_v3LightEye$ = -40					; size = 12
$T3 = -28						; size = 12
_v3Target$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ PROC ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 238  : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0001c	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 239  : 
; 240  : 	if (!pCamera)

  00021	85 c0		 test	 eax, eax
  00023	0f 84 fd 00 00
	00		 je	 $LN1@SetInverse

; 243  : 	m_matViewInverse = pCamera->GetInverseViewMatrix();

  00029	0f 10 80 ac 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+172]
  00030	56		 push	 esi
  00031	57		 push	 edi
  00032	0f 11 83 88 07
	00 00		 movups	 XMMWORD PTR [ebx+1928], xmm0
  00039	8d bb 88 07 00
	00		 lea	 edi, DWORD PTR [ebx+1928]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0003f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 243  : 	m_matViewInverse = pCamera->GetInverseViewMatrix();

  00046	0f 10 80 bc 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+188]

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  0004d	8d b3 c8 08 00
	00		 lea	 esi, DWORD PTR [ebx+2248]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00053	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+4], 0

; 182  :     z = fz;

  0005a	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR $T3[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 243  : 	m_matViewInverse = pCamera->GetInverseViewMatrix();

  00061	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
  00065	0f 10 80 cc 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+204]
  0006c	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0
  00070	0f 10 80 dc 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+220]
  00077	0f 11 47 30	 movups	 XMMWORD PTR [edi+48], xmm0

; 244  : 
; 245  : 	D3DXVECTOR3 v3Target = pCamera->GetTarget();

  0007b	f3 0f 7e 40 3c	 movq	 xmm0, QWORD PTR [eax+60]
  00080	66 0f d6 45 f0	 movq	 QWORD PTR _v3Target$[ebp], xmm0

; 247  : 	D3DXVECTOR3 v3LightEye(v3Target.x - 1.732f * 1250.0f,

  00085	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Target$[ebp]
  0008a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@45075000
  00092	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  00095	89 45 f8	 mov	 DWORD PTR _v3Target$[ebp+8], eax

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  00098	8d 45 e4	 lea	 eax, DWORD PTR $T3[ebp]
  0009b	50		 push	 eax
  0009c	8d 45 f0	 lea	 eax, DWORD PTR _v3Target$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0009f	f3 0f 11 45 d8	 movss	 DWORD PTR _v3LightEye$[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 247  : 	D3DXVECTOR3 v3LightEye(v3Target.x - 1.732f * 1250.0f,

  000a4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _v3Target$[ebp+4]
  000a9	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@449c4000

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  000b1	50		 push	 eax
  000b2	8d 45 d8	 lea	 eax, DWORD PTR _v3LightEye$[ebp]
  000b5	50		 push	 eax
  000b6	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000b7	f3 0f 11 45 dc	 movss	 DWORD PTR _v3LightEye$[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 247  : 	D3DXVECTOR3 v3LightEye(v3Target.x - 1.732f * 1250.0f,

  000bc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _v3Target$[ebp+8]
  000c1	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45875000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000c9	f3 0f 11 45 e0	 movss	 DWORD PTR _v3LightEye$[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  000ce	e8 00 00 00 00	 call	 _D3DXMatrixLookAtRH@16
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  000d3	56		 push	 esi
  000d4	57		 push	 edi
  000d5	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 252  : 	m_matDynamicShadow = m_matViewInverse * m_matLightView * m_matDynamicShadowScale;

  000e1	8d 83 88 08 00
	00		 lea	 eax, DWORD PTR [ebx+2184]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  000e7	50		 push	 eax
  000e8	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000ee	50		 push	 eax
  000ef	8d 45 98	 lea	 eax, DWORD PTR $T2[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp

; 252  : 	m_matDynamicShadow = m_matViewInverse * m_matLightView * m_matDynamicShadowScale;

  000f8	0f 10 45 98	 movups	 xmm0, XMMWORD PTR $T2[ebp]
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	0f 11 83 48 08
	00 00		 movups	 XMMWORD PTR [ebx+2120], xmm0
  00105	0f 10 45 a8	 movups	 xmm0, XMMWORD PTR $T2[ebp+16]
  00109	0f 11 83 58 08
	00 00		 movups	 XMMWORD PTR [ebx+2136], xmm0
  00110	0f 10 45 b8	 movups	 xmm0, XMMWORD PTR $T2[ebp+32]
  00114	0f 11 83 68 08
	00 00		 movups	 XMMWORD PTR [ebx+2152], xmm0
  0011b	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR $T2[ebp+48]
  0011f	0f 11 83 78 08
	00 00		 movups	 XMMWORD PTR [ebx+2168], xmm0
$LN1@SetInverse:

; 253  : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	33 cd		 xor	 ecx, ebp
  0012b	5b		 pop	 ebx
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ ENDP ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?OnRender@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CMapOutdoor@@MAEXXZ PROC			; CMapOutdoor::OnRender, COMDAT
; _this$ = ecx

; 256  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 257  : #ifdef __PERFORMANCE_CHECKER__
; 258  : 	DWORD t1=ELTimer_GetMSec();
; 259  : 	SetInverseViewAndDynamicShaodwMatrices();
; 260  : 
; 261  : 	SetBlendOperation();
; 262  : 	DWORD t2=ELTimer_GetMSec();
; 263  : 	RenderArea();
; 264  : 	DWORD t3=ELTimer_GetMSec();
; 265  : 	if (!m_bEnableTerrainOnlyForHeight)
; 266  : 		RenderTerrain();
; 267  : 	DWORD t4=ELTimer_GetMSec();
; 268  : 	RenderTree();
; 269  : 	DWORD t5=ELTimer_GetMSec();
; 270  : 	DWORD tEnd=ELTimer_GetMSec();
; 271  : 
; 272  : 	if (tEnd-t1<7)
; 273  : 		return;
; 274  : 
; 275  : 	static FILE* fp=fopen("perf_map_render.txt", "w");
; 276  :  	fprintf(fp, "MAP.Total %d (Time %d)\n", tEnd-t1, ELTimer_GetMSec());
; 277  : 	fprintf(fp, "MAP.ENV %d\n", t2-t1);
; 278  : 	fprintf(fp, "MAP.OBJ %d\n", t3-t2);
; 279  : 	fprintf(fp, "MAP.TRN %d\n", t4-t3);
; 280  : 	fprintf(fp, "MAP.TRE %d\n", t5-t4);
; 281  : 
; 282  : #else
; 283  : 	SetInverseViewAndDynamicShaodwMatrices();

  00003	e8 00 00 00 00	 call	 ?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices

; 284  : 
; 285  : 	SetBlendOperation();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?SetBlendOperation@CScreen@@QAEXXZ ; CScreen::SetBlendOperation

; 286  : 	RenderArea();

  0000f	6a 01		 push	 1
  00011	8b ce		 mov	 ecx, esi
  00013	e8 00 00 00 00	 call	 ?RenderArea@CMapOutdoor@@QAEX_N@Z ; CMapOutdoor::RenderArea

; 287  : 	RenderTree();

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?RenderTree@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RenderTree

; 288  : 	if (!m_bEnableTerrainOnlyForHeight)

  0001f	80 be b6 0e 00
	00 00		 cmp	 BYTE PTR [esi+3766], 0
  00026	75 07		 jne	 SHORT $LN2@OnRender

; 289  : 		RenderTerrain();

  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?RenderTerrain@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RenderTerrain
$LN2@OnRender:

; 290  : 	RenderBlendArea();

  0002f	8b ce		 mov	 ecx, esi
  00031	5e		 pop	 esi
  00032	e9 00 00 00 00	 jmp	 ?RenderBlendArea@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RenderBlendArea
?OnRender@CMapOutdoor@@MAEXXZ ENDP			; CMapOutdoor::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
