; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCDungeonBlock@@@@6B@	; CDynamicPool<CDungeonBlock>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCDungeonBlock@@@@UAEPAXI@Z	; CDynamicPool<CDungeonBlock>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@VCArea@@@@6B@		; CDynamicPool<CArea>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCArea@@@@UAEPAXI@Z		; CDynamicPool<CArea>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USObjectInstance@CArea@@@@6B@ ; CDynamicPool<CArea::SObjectInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@USObjectInstance@CArea@@@@UAEPAXI@Z ; CDynamicPool<CArea::SObjectInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCAttributeInstance@@@@6B@	; CDynamicPool<CAttributeInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCAttributeInstance@@@@@8 ; CDynamicPool<CAttributeInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCAttributeInstance@@@@8	; CDynamicPool<CAttributeInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCAttributeInstance@@@@8	; CDynamicPool<CAttributeInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCAttributeInstance@@@@8 ; CDynamicPool<CAttributeInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USObjectInstance@CArea@@@@6B@ ; CDynamicPool<CArea::SObjectInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USObjectInstance@CArea@@@@@8 ; CDynamicPool<CArea::SObjectInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USObjectInstance@CArea@@@@8	; CDynamicPool<CArea::SObjectInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USObjectInstance@CArea@@@@8	; CDynamicPool<CArea::SObjectInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USObjectInstance@CArea@@@@8 ; CDynamicPool<CArea::SObjectInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@ ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USAmbienceInstance@CArea@@@@@8 ; CDynamicPool<CArea::SAmbienceInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USAmbienceInstance@CArea@@@@8 ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USAmbienceInstance@CArea@@@@8 ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USAmbienceInstance@CArea@@@@8 ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@VCDungeonBlock@@@@6B@	; CDynamicPool<CDungeonBlock>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCDungeonBlock@@@@@8	; CDynamicPool<CDungeonBlock> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCDungeonBlock@@@@8		; CDynamicPool<CDungeonBlock>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCDungeonBlock@@@@8		; CDynamicPool<CDungeonBlock>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCDungeonBlock@@@@8 ; CDynamicPool<CDungeonBlock>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@VCArea@@@@6B@		; CDynamicPool<CArea>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCArea@@@@@8		; CDynamicPool<CArea> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCArea@@@@8			; CDynamicPool<CArea>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCArea@@@@8			; CDynamicPool<CArea>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCArea@@@@8	; CDynamicPool<CArea>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPool@VCAttributeInstance@@@@6B@	; CDynamicPool<CAttributeInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCAttributeInstance@@@@UAEPAXI@Z ; CDynamicPool<CAttributeInstance>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@ ; CDynamicPool<CArea::SAmbienceInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@USAmbienceInstance@CArea@@@@UAEPAXI@Z ; CDynamicPool<CArea::SAmbienceInstance>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPool@VCDungeonBlock@@@@UAEPAXI@Z:PROC ; CDynamicPool<CDungeonBlock>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@VCArea@@@@UAEPAXI@Z:PROC	; CDynamicPool<CArea>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@USObjectInstance@CArea@@@@UAEPAXI@Z:PROC ; CDynamicPool<CArea::SObjectInstance>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@VCAttributeInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CAttributeInstance>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@USAmbienceInstance@CArea@@@@UAEPAXI@Z:PROC ; CDynamicPool<CArea::SAmbienceInstance>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@ ; CDynamicPool<CArea::SAmbienceInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USAmbienceInstance@CArea@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCAttributeInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCAttributeInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCAttributeInstance@@@@6B@ ; CDynamicPool<CAttributeInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCAttributeInstance@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCArea@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCArea@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCArea@@@@@8 ; CDynamicPool<CArea>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCArea@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCArea@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCArea@@@@8 ; CDynamicPool<CArea>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCArea@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCArea@@@@8 DD 00H			; CDynamicPool<CArea>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCArea@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCArea@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CArea> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCArea@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCArea@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCArea@@@@6B@ DD 00H		; CDynamicPool<CArea>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCArea@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCDungeonBlock@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCDungeonBlock@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCDungeonBlock@@@@@8 ; CDynamicPool<CDungeonBlock>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCDungeonBlock@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCDungeonBlock@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCDungeonBlock@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCDungeonBlock@@@@8 ; CDynamicPool<CDungeonBlock>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCDungeonBlock@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCDungeonBlock@@@@8 DD 00H		; CDynamicPool<CDungeonBlock>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCDungeonBlock@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCDungeonBlock@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCDungeonBlock@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CDungeonBlock> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCDungeonBlock@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCDungeonBlock@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCDungeonBlock@@@@6B@ DD 00H	; CDynamicPool<CDungeonBlock>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCDungeonBlock@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCDungeonBlock@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USAmbienceInstance@CArea@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USAmbienceInstance@CArea@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USAmbienceInstance@CArea@@@@@8 ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USAmbienceInstance@CArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USAmbienceInstance@CArea@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USAmbienceInstance@CArea@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USAmbienceInstance@CArea@@@@8 ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USAmbienceInstance@CArea@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USAmbienceInstance@CArea@@@@8 DD 00H ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USAmbienceInstance@CArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USAmbienceInstance@CArea@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USAmbienceInstance@CArea@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CArea::SAmbienceInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USAmbienceInstance@CArea@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@ DD 00H ; CDynamicPool<CArea::SAmbienceInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USAmbienceInstance@CArea@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USAmbienceInstance@CArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USObjectInstance@CArea@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USObjectInstance@CArea@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USObjectInstance@CArea@@@@@8 ; CDynamicPool<CArea::SObjectInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USObjectInstance@CArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USObjectInstance@CArea@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USObjectInstance@CArea@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USObjectInstance@CArea@@@@8 ; CDynamicPool<CArea::SObjectInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USObjectInstance@CArea@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USObjectInstance@CArea@@@@8 DD 00H	; CDynamicPool<CArea::SObjectInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USObjectInstance@CArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USObjectInstance@CArea@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USObjectInstance@CArea@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CArea::SObjectInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USObjectInstance@CArea@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USObjectInstance@CArea@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USObjectInstance@CArea@@@@6B@ DD 00H ; CDynamicPool<CArea::SObjectInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USObjectInstance@CArea@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USObjectInstance@CArea@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCAttributeInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCAttributeInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCAttributeInstance@@@@@8 ; CDynamicPool<CAttributeInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCAttributeInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCAttributeInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCAttributeInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCAttributeInstance@@@@8 ; CDynamicPool<CAttributeInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCAttributeInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCAttributeInstance@@@@8 DD 00H	; CDynamicPool<CAttributeInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCAttributeInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCAttributeInstance@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCAttributeInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CAttributeInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCAttributeInstance@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCAttributeInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCAttributeInstance@@@@6B@ DD 00H	; CDynamicPool<CAttributeInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCAttributeInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCAttributeInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@USObjectInstance@CArea@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USObjectInstance@CArea@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USObjectInstance@CArea@@@@6B@ ; CDynamicPool<CArea::SObjectInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USObjectInstance@CArea@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCArea@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCArea@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCArea@@@@6B@ ; CDynamicPool<CArea>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCArea@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCDungeonBlock@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCDungeonBlock@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCDungeonBlock@@@@6B@ ; CDynamicPool<CDungeonBlock>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCDungeonBlock@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??0bad_cast@std@@QAE@XZ				; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UAE@XZ				; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QAE@ABV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UAEPAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	??1_Facet_base@std@@UAE@XZ			; std::_Facet_base::~_Facet_base
PUBLIC	??_G_Facet_base@std@@UAEPAXI@Z			; std::_Facet_base::`scalar deleting destructor'
PUBLIC	??1?$_Yarn@D@std@@QAE@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	??1?$_Yarn@_W@std@@QAE@XZ			; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
PUBLIC	?_Incref@facet@locale@std@@UAEXXZ		; std::locale::facet::_Incref
PUBLIC	?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ ; std::locale::facet::_Decref
PUBLIC	??1facet@locale@std@@MAE@XZ			; std::locale::facet::~facet
PUBLIC	??_Gfacet@locale@std@@MAEPAXI@Z			; std::locale::facet::`scalar deleting destructor'
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	??_Gctype_base@std@@UAEPAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??1?$ctype@D@std@@MAE@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	?do_tolower@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_narrow@?$ctype@D@std@@MBEDDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z	; std::ctype<char>::do_narrow
PUBLIC	??_G?$ctype@D@std@@MAEPAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??1TPropertyBuilding@prt@@QAE@XZ		; prt::TPropertyBuilding::~TPropertyBuilding
PUBLIC	??1TPropertyEffect@prt@@QAE@XZ			; prt::TPropertyEffect::~TPropertyEffect
PUBLIC	??1TPropertyAmbience@prt@@QAE@XZ		; prt::TPropertyAmbience::~TPropertyAmbience
PUBLIC	??1TPropertyDungeonBlock@prt@@QAE@XZ		; prt::TPropertyDungeonBlock::~TPropertyDungeonBlock
PUBLIC	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Rrotate
PUBLIC	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Extract
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Insert_node
PUBLIC	??1?$map@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> > >::~map<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> > >
PUBLIC	??1?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAE@XZ ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::~vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >
PUBLIC	?_Xlength@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@CAXXZ ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Xlength
PUBLIC	?InitializeRotation@SObjectData@CArea@@QAEXXZ	; CArea::SObjectData::InitializeRotation
PUBLIC	??1?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::~vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >
PUBLIC	?_Xlength@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Xlength
PUBLIC	??0SAmbienceInstance@CArea@@QAE@XZ		; CArea::SAmbienceInstance::SAmbienceInstance
PUBLIC	??1SAmbienceInstance@CArea@@UAE@XZ		; CArea::SAmbienceInstance::~SAmbienceInstance
PUBLIC	?__Update@SAmbienceInstance@CArea@@QAEXMMM@Z	; CArea::SAmbienceInstance::__Update
PUBLIC	?UpdateOnceSound@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::UpdateOnceSound
PUBLIC	?UpdateStepSound@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::UpdateStepSound
PUBLIC	?UpdateLoopSound@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::UpdateLoopSound
PUBLIC	?Render@SAmbienceInstance@CArea@@QAEXXZ		; CArea::SAmbienceInstance::Render
PUBLIC	?Picking@SAmbienceInstance@CArea@@QAE_NXZ	; CArea::SAmbienceInstance::Picking
PUBLIC	?__GetVolumeFromDistance@SAmbienceInstance@CArea@@QAEMM@Z ; CArea::SAmbienceInstance::__GetVolumeFromDistance
PUBLIC	??_GSAmbienceInstance@CArea@@UAEPAXI@Z		; CArea::SAmbienceInstance::`scalar deleting destructor'
PUBLIC	?SetTree@SObjectInstance@CArea@@QAEXMMMKPBD@Z	; CArea::SObjectInstance::SetTree
PUBLIC	??1SObjectInstance@CArea@@UAE@XZ		; CArea::SObjectInstance::~SObjectInstance
PUBLIC	??_GSObjectInstance@CArea@@UAEPAXI@Z		; CArea::SObjectInstance::`scalar deleting destructor'
PUBLIC	??0CArea@@QAE@XZ				; CArea::CArea
PUBLIC	??1CArea@@UAE@XZ				; CArea::~CArea
PUBLIC	?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ; CArea::CollectRenderingObject
PUBLIC	?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ; CArea::CollectBlendRenderingObject
PUBLIC	?SetMapOutDoor@CArea@@QAEXPAVCMapOutdoor@@@Z	; CArea::SetMapOutDoor
PUBLIC	?Clear@CArea@@QAEXXZ				; CArea::Clear
PUBLIC	?Load@CArea@@QAE_NPBD@Z				; CArea::Load
PUBLIC	?GetObjectDataCount@CArea@@QAEKXZ		; CArea::GetObjectDataCount
PUBLIC	?GetObjectDataPointer@CArea@@QBE_NKPAPBUSObjectData@1@@Z ; CArea::GetObjectDataPointer
PUBLIC	?GetObjectInstanceCount@CArea@@QBE?BKXZ		; CArea::GetObjectInstanceCount
PUBLIC	?GetObjectInstancePointer@CArea@@QBE?B_NABKPAPBUSObjectInstance@1@@Z ; CArea::GetObjectInstancePointer
PUBLIC	?EnablePortal@CArea@@QAEXH@Z			; CArea::EnablePortal
PUBLIC	?ClearPortal@CArea@@QAEXXZ			; CArea::ClearPortal
PUBLIC	?AddShowingPortalID@CArea@@QAEXH@Z		; CArea::AddShowingPortalID
PUBLIC	?RefreshPortal@CArea@@QAEXXZ			; CArea::RefreshPortal
PUBLIC	?Update@CArea@@QAEXXZ				; CArea::Update
PUBLIC	?UpdateAroundAmbience@CArea@@QAEXMMM@Z		; CArea::UpdateAroundAmbience
PUBLIC	?Render@CArea@@QAEXXZ				; CArea::Render
PUBLIC	?RenderEffect@CArea@@QAEXXZ			; CArea::RenderEffect
PUBLIC	?RenderCollision@CArea@@QAEXXZ			; CArea::RenderCollision
PUBLIC	?RenderAmbience@CArea@@QAEXXZ			; CArea::RenderAmbience
PUBLIC	?RenderDungeon@CArea@@QAEXXZ			; CArea::RenderDungeon
PUBLIC	?Refresh@CArea@@QAEXXZ				; CArea::Refresh
PUBLIC	?SetCoordinate@CArea@@QAEXABG0@Z		; CArea::SetCoordinate
PUBLIC	?GetCoordinate@CArea@@QAEXPAG0@Z		; CArea::GetCoordinate
PUBLIC	?DEBUG_GetRenderedCRCNum@CArea@@QAEKXZ		; CArea::DEBUG_GetRenderedCRCNum
PUBLIC	?DEBUG_GetRenderedCRCWithNumVector@CArea@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@XZ ; CArea::DEBUG_GetRenderedCRCWithNumVector
PUBLIC	?DEBUG_GetRenderedGrapphicThingInstanceNum@CArea@@QAEKXZ ; CArea::DEBUG_GetRenderedGrapphicThingInstanceNum
PUBLIC	?CheckObjectIndex@CArea@@IBE_NK@Z		; CArea::CheckObjectIndex
PUBLIC	?__Load_LoadObject@CArea@@IAE_NPBD@Z		; CArea::__Load_LoadObject
PUBLIC	?__Load_LoadAmbience@CArea@@IAE_NPBD@Z		; CArea::__Load_LoadAmbience
PUBLIC	?__Load_BuildObjectInstances@CArea@@IAEXXZ	; CArea::__Load_BuildObjectInstances
PUBLIC	?__UpdateAniThingList@CArea@@IAEXXZ		; CArea::__UpdateAniThingList
PUBLIC	?__UpdateEffectList@CArea@@IAEXXZ		; CArea::__UpdateEffectList
PUBLIC	?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z ; CArea::__LoadAttribute
PUBLIC	?__Clear_DestroyObjectInstance@CArea@@IAEXPAUSObjectInstance@1@@Z ; CArea::__Clear_DestroyObjectInstance
PUBLIC	?__SetObjectInstance@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@@Z ; CArea::__SetObjectInstance
PUBLIC	?__SetObjectInstance_SetTree@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetTree
PUBLIC	?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetBuilding
PUBLIC	?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetEffect
PUBLIC	?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetAmbience
PUBLIC	?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetDungeonBlock
PUBLIC	??1?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::~vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >
PUBLIC	?_Xlength@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Xlength
PUBLIC	??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
PUBLIC	??1?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAE@XZ ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::~vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >
PUBLIC	?_Xlength@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@CAXXZ ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Xlength
PUBLIC	??1?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::~vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >
PUBLIC	?_Xlength@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Xlength
PUBLIC	??1?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::clear
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Insert_node
PUBLIC	??1?$map@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@@std@@QAE@XZ ; std::map<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> > >::~map<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> > >
PUBLIC	??1?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::~vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >
PUBLIC	?_Xlength@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Xlength
PUBLIC	??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEPAU?$_Tree_node@HPAX@2@U?$_Tree_id@PAU?$_Tree_node@HPAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node
PUBLIC	?DestroySystem@CArea@@SAXXZ			; CArea::DestroySystem
PUBLIC	?New@CArea@@SAPAV1@XZ				; CArea::New
PUBLIC	?Delete@CArea@@SAXPAV1@@Z			; CArea::Delete
PUBLIC	??_GCArea@@UAEPAXI@Z				; CArea::`scalar deleting destructor'
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	??1?$CDynamicPool@USObjectInstance@CArea@@@@UAE@XZ ; CDynamicPool<CArea::SObjectInstance>::~CDynamicPool<CArea::SObjectInstance>
PUBLIC	?Delete@?$CDynamicPool@USObjectInstance@CArea@@@@KAXPAUSObjectInstance@CArea@@@Z ; CDynamicPool<CArea::SObjectInstance>::Delete
PUBLIC	??1?$CDynamicPool@VCAttributeInstance@@@@UAE@XZ	; CDynamicPool<CAttributeInstance>::~CDynamicPool<CAttributeInstance>
PUBLIC	?Delete@?$CDynamicPool@VCAttributeInstance@@@@KAXPAVCAttributeInstance@@@Z ; CDynamicPool<CAttributeInstance>::Delete
PUBLIC	?_Xlength@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@CAXXZ ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Xlength
PUBLIC	??1?$CDynamicPool@USAmbienceInstance@CArea@@@@UAE@XZ ; CDynamicPool<CArea::SAmbienceInstance>::~CDynamicPool<CArea::SAmbienceInstance>
PUBLIC	?Delete@?$CDynamicPool@USAmbienceInstance@CArea@@@@KAXPAUSAmbienceInstance@CArea@@@Z ; CDynamicPool<CArea::SAmbienceInstance>::Delete
PUBLIC	??1?$CDynamicPool@VCDungeonBlock@@@@UAE@XZ	; CDynamicPool<CDungeonBlock>::~CDynamicPool<CDungeonBlock>
PUBLIC	?Delete@?$CDynamicPool@VCDungeonBlock@@@@KAXPAVCDungeonBlock@@@Z ; CDynamicPool<CDungeonBlock>::Delete
PUBLIC	??1?$CDynamicPool@VCArea@@@@UAE@XZ		; CDynamicPool<CArea>::~CDynamicPool<CArea>
PUBLIC	?Delete@?$CDynamicPool@VCArea@@@@KAXPAVCArea@@@Z ; CDynamicPool<CArea>::Delete
PUBLIC	?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++
PUBLIC	?_Xlength@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Xlength
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::~_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Insert_node
PUBLIC	??1?$set@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@@std@@QAE@XZ ; std::set<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *> >::~set<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *> >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Erase_tree<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
PUBLIC	??$_Emplace_reallocate@ABQAVCEffectInstance@@@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@QAEPAPAVCEffectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Emplace_reallocate<CEffectInstance * const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$_Emplace_reallocate@ABUSCRCWithNumber@CArea@@@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAEPAUSCRCWithNumber@CArea@@QAU23@ABU23@@Z ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Emplace_reallocate<CArea::SCRCWithNumber const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
PUBLIC	??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Emplace_reallocate<CArea::SAmbienceInstance * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
PUBLIC	??$_Emplace_reallocate@ABUSObjectData@CArea@@@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAEPAUSObjectData@CArea@@QAU23@ABU23@@Z ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Emplace_reallocate<CArea::SObjectData const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCSpeedTreeWrapper@@@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAEPAPAVCSpeedTreeWrapper@@QAPAV2@ABQAV2@@Z ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Emplace_reallocate<CSpeedTreeWrapper * const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Destroy_range@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAXPAPAVCEffectInstance@@QAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectInstance *> >
PUBLIC	??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Emplace_reallocate<CAttributeInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea::SCRCWithNumber> >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAXPAPAUSAmbienceInstance@CArea@@QAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea::SAmbienceInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAXPAPAVCDungeonBlock@@QAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonBlock *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAXPAPAUSObjectInstance@CArea@@QAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea::SObjectInstance *> >
PUBLIC	??$_Emplace_reallocate@ABQAUSObjectInstance@CArea@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAPAUSObjectInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Emplace_reallocate<CArea::SObjectInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@USObjectData@CArea@@@std@@@std@@YAXPAUSObjectData@CArea@@QAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea::SObjectData> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAXPAPAVCSpeedTreeWrapper@@QAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z ; std::_Destroy_range<std::allocator<CSpeedTreeWrapper *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Destroy_range<std::allocator<CArea *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAXPAPAVCAttributeInstance@@QAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CAttributeInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
PUBLIC	??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z ; std::_Sort_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
PUBLIC	??$transform_range@V?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@U?$to_lowerF@D@012@@Z ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >,boost::algorithm::detail::to_lowerF<char> >
PUBLIC	??$_Find_lower_bound@PAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@ABQAUSObjectInstance@CArea@@@Z ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::_Find_lower_bound<CArea::SObjectInstance *>
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@HPAX@std@@@1@ABH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
PUBLIC	??$_Find_lower_bound@PAVCGraphicThingInstance@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@ABQAVCGraphicThingInstance@@@Z ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::_Find_lower_bound<CGraphicThingInstance *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
PUBLIC	??$_Uninitialized_move@PAPAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAPAPAVCEffectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z ; std::_Uninitialized_move<CEffectInstance * *,std::allocator<CEffectInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >
PUBLIC	??$_Uninitialized_move@PAPAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAPAPAVCAttributeInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z ; std::_Uninitialized_move<CAttributeInstance * *,std::allocator<CAttributeInstance *> >
PUBLIC	??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >
PUBLIC	??$_Uninitialized_move@PAPAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAPAPAUSAmbienceInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SAmbienceInstance * *,std::allocator<CArea::SAmbienceInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAPAPAVCDungeonBlock@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z ; std::_Uninitialized_move<CDungeonBlock * *,std::allocator<CDungeonBlock *> >
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicThingInstance * *,std::allocator<CGraphicThingInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectInstance * *,std::allocator<CArea::SObjectInstance *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@IAAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CArea::SObjectInstance *> >
PUBLIC	??$_Uninitialized_move@PAUSObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@YAPAUSObjectData@CArea@@QAU12@0PAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectData *,std::allocator<CArea::SObjectData> >
PUBLIC	??$_Uninitialized_move@PAPAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAPAPAVCSpeedTreeWrapper@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z ; std::_Uninitialized_move<CSpeedTreeWrapper * *,std::allocator<CSpeedTreeWrapper *> >
PUBLIC	??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z		; std::_Refancy<char const *,0>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCEffectInstance@@PAPAV1@@0@PAPAVCEffectInstance@@0UCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Partition_by_median_guess_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Make_heap_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0UObjectDataComp@2@@Z ; std::_Make_heap_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YA?AU?$pair@PAUSObjectData@CArea@@PAU12@@0@PAUSObjectData@CArea@@0UObjectDataComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *>
PUBLIC	??$_Copy_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectInstance * *,CEffectInstance * *>
PUBLIC	??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
PUBLIC	??$_Copy_memmove@PAPAVCAttributeInstance@@PAPAV1@@std@@YAPAPAVCAttributeInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CAttributeInstance * *,CAttributeInstance * *>
PUBLIC	??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
PUBLIC	??$_Copy_memmove@PAPAUSAmbienceInstance@CArea@@PAPAU12@@std@@YAPAPAUSAmbienceInstance@CArea@@PAPAU12@00@Z ; std::_Copy_memmove<CArea::SAmbienceInstance * *,CArea::SAmbienceInstance * *>
PUBLIC	??$_Copy_memmove@PAPAVCDungeonBlock@@PAPAV1@@std@@YAPAPAVCDungeonBlock@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonBlock * *,CDungeonBlock * *>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
PUBLIC	??$_Copy_memmove@PAPAUSObjectInstance@CArea@@PAPAU12@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@00@Z ; std::_Copy_memmove<CArea::SObjectInstance * *,CArea::SObjectInstance * *>
PUBLIC	??$_Zero_range@PAPAUSObjectInstance@CArea@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0@Z ; std::_Zero_range<CArea::SObjectInstance * *>
PUBLIC	??$_Copy_memmove@PAPAVCSpeedTreeWrapper@@PAPAV1@@std@@YAPAPAVCSpeedTreeWrapper@@PAPAV1@00@Z ; std::_Copy_memmove<CSpeedTreeWrapper * *,CSpeedTreeWrapper * *>
PUBLIC	??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z ; std::_Refancy<CArea::SCRCWithNumber *,0>
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Pop_heap_hole_by_index@PAPAVCEffectInstance@@PAV1@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@HH$$QAPAV1@UCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Pop_heap_hole_by_index<CEffectInstance * *,CEffectInstance *,CArea_LessEffectInstancePtrRenderOrder>
PUBLIC	??$_Guess_median_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@00UCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Guess_median_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
PUBLIC	??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>
PUBLIC	??$_Pop_heap_hole_by_index@PAUSObjectData@CArea@@U12@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@HH$$QAU12@UObjectDataComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SObjectData *,CArea::SObjectData,CArea::ObjectDataComp>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * &>
PUBLIC	??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
PUBLIC	??$tolower@D@std@@YADDABVlocale@0@@Z		; std::tolower<char>
PUBLIC	??$_Copy_backward_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CEffectInstance * *,CEffectInstance * *>
PUBLIC	??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
PUBLIC	??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Copy_backward_memmove@PAUSObjectData@CArea@@PAU12@@std@@YAPAUSObjectData@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SObjectData *,CArea::SObjectData *>
PUBLIC	??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
PUBLIC	??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>
PUBLIC	??$_Refancy@PAD$0A@@std@@YAPADPAD@Z		; std::_Refancy<char *,0>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7_Facet_base@std@@6B@			; std::_Facet_base::`vftable'
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name@		; `string'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Facet_base@std@@6B@			; std::_Facet_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
PUBLIC	??_7SAmbienceInstance@CArea@@6B@		; CArea::SAmbienceInstance::`vftable'
PUBLIC	??_7SObjectInstance@CArea@@6B@			; CArea::SObjectInstance::`vftable'
PUBLIC	?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A ; CArea::ms_ObjectInstancePool
PUBLIC	?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A ; CArea::ms_AttributeInstancePool
PUBLIC	?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A ; CArea::ms_AmbienceInstancePool
PUBLIC	?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A ; CArea::ms_DungeonBlockInstancePool
PUBLIC	?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A	; CArea::ms_kPool
PUBLIC	??_7CArea@@6B@					; CArea::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCPropertyManager@@@@0PAVCPropertyManager@@A ; CSingleton<CPropertyManager>::ms_singleton
PUBLIC	??_C@_0N@FPEBPNJJ@PropertyType@			; `string'
PUBLIC	??_C@_0CL@BOJNBGJP@CArea?3?3SetEffect?5effect?5registe@ ; `string'
PUBLIC	??_C@_08JBFACIKL@TreeFile@			; `string'
PUBLIC	??_C@_0O@NDEAKJNP@_lod_?$CF?42d?4gr2@		; `string'
PUBLIC	??_C@_04GHGHGAKN@ONCE@				; `string'
PUBLIC	??_C@_04MOOLDHHD@STEP@				; `string'
PUBLIC	??_C@_04KGNEGCGI@LOOP@				; `string'
PUBLIC	??_C@_09OLKGEJPN@?1dungeon?1@			; `string'
PUBLIC	??_C@_09PCMKFNFD@?2dungeon?2@			; `string'
PUBLIC	??_C@_0BC@NJPKAPFJ@DummyCollisionOBB@		; `string'
PUBLIC	??_C@_0N@IIOKECFB@AreaData?4txt@		; `string'
PUBLIC	??_C@_0BF@EMGBEFOB@AreaAmbienceData?4txt@	; `string'
PUBLIC	??_C@_0CA@NNOAMPKE@?5CArea?3?3Load?5File?5Load?5?$CFs?5ERROR@ ; `string'
PUBLIC	??_C@_0N@DLGDDPHB@areadatafile@			; `string'
PUBLIC	??_C@_0CM@CJHDNGEF@?5CArea?3?3__LoadObject?5File?5Forma@ ; `string'
PUBLIC	??_C@_0M@IANPHBDM@objectcount@			; `string'
PUBLIC	??_C@_0CM@CFOIFIG@?5CArea?3?3__LoadObject?5File?5Forma@ ; `string'
PUBLIC	??_C@_0L@CHFLOJFF@object?$CF03d@		; `string'
PUBLIC	??_C@_0CL@HHDKLHOE@?5CArea?3?3LoadObject?5Property?$CI?$CFu?$CJ@ ; `string'
PUBLIC	??_C@_0BF@PFPNGEBG@areaambiencedatafile@	; `string'
PUBLIC	??_C@_0CO@ECPJGBAI@?5CArea?3?3__LoadAmbience?5File?5For@ ; `string'
PUBLIC	??_C@_0CO@GJNEDCML@?5CArea?3?3__LoadAmbience?5File?5For@ ; `string'
PUBLIC	??_C@_0CN@BAHENMHD@?5CArea?3?3LoadAmbience?5Property?$CI?$CF@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CArea@@6B@					; CArea::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCArea@@@8				; CArea `RTTI Type Descriptor'
PUBLIC	??_R3CArea@@8					; CArea::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CArea@@8					; CArea::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CArea@@8				; CArea::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SAmbienceInstance@CArea@@6B@		; CArea::SAmbienceInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSAmbienceInstance@CArea@@@8		; CArea::SAmbienceInstance `RTTI Type Descriptor'
PUBLIC	??_R3SAmbienceInstance@CArea@@8			; CArea::SAmbienceInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SAmbienceInstance@CArea@@8			; CArea::SAmbienceInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SAmbienceInstance@CArea@@8	; CArea::SAmbienceInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	??_R4SObjectInstance@CArea@@6B@			; CArea::SObjectInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSObjectInstance@CArea@@@8		; CArea::SObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R3SObjectInstance@CArea@@8			; CArea::SObjectInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SObjectInstance@CArea@@8			; CArea::SObjectInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SObjectInstance@CArea@@8		; CArea::SObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3c8efa35
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@40490fdb
PUBLIC	__real@41200000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_free:PROC
EXTRN	_atof:PROC
EXTRN	__atoi64:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?_Xruntime_error@std@@YAXPBD@Z:PROC		; std::_Xruntime_error
EXTRN	?GetCaseCRC32@@YAKPBDI@Z:PROC			; GetCaseCRC32
EXTRN	?frandom@@YAMMM@Z:PROC				; frandom
EXTRN	_D3DXMatrixRotationYawPitchRoll@16:PROC
EXTRN	_D3DXQuaternionRotationYawPitchRoll@16:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	??_Ebad_cast@std@@UAEPAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	??_E_Facet_base@std@@UAEPAXI@Z:PROC		; std::_Facet_base::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__Getctype:PROC
EXTRN	__Tolower:PROC
EXTRN	__Toupper:PROC
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	??_Efacet@locale@std@@MAEPAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	?_Init@locale@std@@CAPAV_Locimp@12@_N@Z:PROC	; std::locale::_Init
EXTRN	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??_Ectype_base@std@@UAEPAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_E?$ctype@D@std@@MAEPAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	?LoadMultipleTextData@@YA_NPBDAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@@Z:PROC ; LoadMultipleTextData
EXTRN	?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z:PROC ; CGraphicCollisionObject::IntersectSphere
EXTRN	??0CScreen@@QAE@XZ:PROC				; CScreen::CScreen
EXTRN	??1CScreen@@UAE@XZ:PROC				; CScreen::~CScreen
EXTRN	?Clear@CScreen@@QAEXXZ:PROC			; CScreen::Clear
EXTRN	?RenderLine2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderLine2d
EXTRN	?RenderCircle2d@CScreen@@QAEXMMMMH@Z:PROC	; CScreen::RenderCircle2d
EXTRN	?RenderCube@CScreen@@QAEXMMMMMM@Z:PROC		; CScreen::RenderCube
EXTRN	?RenderSphere@CScreen@@QAEXPBUD3DXMATRIX@@MMMMW4_D3DFILLMODE@@@Z:PROC ; CScreen::RenderSphere
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?IsEmpty@CResource@@QBE_NXZ:PROC		; CResource::IsEmpty
EXTRN	?StopSound3D@CSoundManager@@QAEXH@Z:PROC	; CSoundManager::StopSound3D
EXTRN	?PlayAmbienceSound3D@CSoundManager@@QAEHMMMPBDH@Z:PROC ; CSoundManager::PlayAmbienceSound3D
EXTRN	?SetSoundVolume3D@CSoundManager@@QAEXHM@Z:PROC	; CSoundManager::SetSoundVolume3D
EXTRN	?GetPropertyType@prt@@YAKPBD@Z:PROC		; prt::GetPropertyType
EXTRN	?PropertyBuildingStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyBuilding@1@@Z:PROC ; prt::PropertyBuildingStringToData
EXTRN	?PropertyEffectStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyEffect@1@@Z:PROC ; prt::PropertyEffectStringToData
EXTRN	?PropertyAmbienceStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyAmbience@1@@Z:PROC ; prt::PropertyAmbienceStringToData
EXTRN	?PropertyDungeonBlockStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyDungeonBlock@1@@Z:PROC ; prt::PropertyDungeonBlockStringToData
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z:PROC ; CStateManager::GetTextureStageState
EXTRN	?GetCollisionDataVector@CAttributeData@@QBEABV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@XZ:PROC ; CAttributeData::GetCollisionDataVector
EXTRN	?AddCollisionData@CAttributeData@@QAEIABVCStaticCollisionData@@@Z:PROC ; CAttributeData::AddCollisionData
EXTRN	??0CAttributeInstance@@QAE@XZ:PROC		; CAttributeInstance::CAttributeInstance
EXTRN	?Clear@CAttributeInstance@@QAEXXZ:PROC		; CAttributeInstance::Clear
EXTRN	?SetObjectPointer@CAttributeInstance@@QAEXPAVCAttributeData@@@Z:PROC ; CAttributeInstance::SetObjectPointer
EXTRN	?RefreshObject@CAttributeInstance@@QAEXABUD3DXMATRIX@@@Z:PROC ; CAttributeInstance::RefreshObject
EXTRN	?GetObjectPointer@CAttributeInstance@@QBEPAVCAttributeData@@XZ:PROC ; CAttributeInstance::GetObjectPointer
EXTRN	?GetYaw@CGraphicObjectInstance@@QAEMXZ:PROC	; CGraphicObjectInstance::GetYaw
EXTRN	?GetPitch@CGraphicObjectInstance@@QAEMXZ:PROC	; CGraphicObjectInstance::GetPitch
EXTRN	?GetRoll@CGraphicObjectInstance@@QAEMXZ:PROC	; CGraphicObjectInstance::GetRoll
EXTRN	?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z:PROC ; CGraphicObjectInstance::SetPosition
EXTRN	?SetRotation@CGraphicObjectInstance@@QAEXMMM@Z:PROC ; CGraphicObjectInstance::SetRotation
EXTRN	?Clear@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Clear
EXTRN	?Update@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Update
EXTRN	?Render@CGraphicObjectInstance@@QAE_NXZ:PROC	; CGraphicObjectInstance::Render
EXTRN	?Deform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Deform
EXTRN	?Transform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Transform
EXTRN	?Show@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Show
EXTRN	?isShow@CGraphicObjectInstance@@QAE_NXZ:PROC	; CGraphicObjectInstance::isShow
EXTRN	?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ:PROC ; CGraphicObjectInstance::GetTransform
EXTRN	?SetPortal@CGraphicObjectInstance@@QAEXKH@Z:PROC ; CGraphicObjectInstance::SetPortal
EXTRN	?Initialize@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Initialize
EXTRN	?UpdateBoundingSphere@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::UpdateBoundingSphere
EXTRN	?RegisterBoundingSphere@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::RegisterBoundingSphere
EXTRN	?UpdateCollisionData@CGraphicObjectInstance@@QAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z:PROC ; CGraphicObjectInstance::UpdateCollisionData
EXTRN	?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ:PROC ; CGraphicObjectInstance::GetCollisionInstanceCount
EXTRN	?GetCollisionInstanceData@CGraphicObjectInstance@@QAEPAVCBaseCollisionInstance@@K@Z:PROC ; CGraphicObjectInstance::GetCollisionInstanceData
EXTRN	?UpdateHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z:PROC ; CGraphicObjectInstance::UpdateHeightInstance
EXTRN	?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z:PROC ; CEffectInstance::LessRenderOrder
EXTRN	?isAlive@CEffectInstance@@QAEHXZ:PROC		; CEffectInstance::isAlive
EXTRN	?SetGlobalMatrix@CEffectInstance@@QAEXABUD3DXMATRIX@@@Z:PROC ; CEffectInstance::SetGlobalMatrix
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	?GetEffectData@CEffectManager@@QAE_NKPAPAVCEffectData@@@Z:PROC ; CEffectManager::GetEffectData
EXTRN	?CreateUnsafeEffectInstance@CEffectManager@@QAEXKPAPAVCEffectInstance@@@Z:PROC ; CEffectManager::CreateUnsafeEffectInstance
EXTRN	?DestroyUnsafeEffectInstance@CEffectManager@@QAE_NPAVCEffectInstance@@@Z:PROC ; CEffectManager::DestroyUnsafeEffectInstance
EXTRN	?GetPosition@CSpeedTreeWrapper@@QAEPBMXZ:PROC	; CSpeedTreeWrapper::GetPosition
EXTRN	?CreateInstance@CSpeedTreeForest@@QAEPAVCSpeedTreeWrapper@@MMMKPBD@Z:PROC ; CSpeedTreeForest::CreateInstance
EXTRN	?DeleteInstance@CSpeedTreeForest@@QAEXPAVCSpeedTreeWrapper@@@Z:PROC ; CSpeedTreeForest::DeleteInstance
EXTRN	?GetModelCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetModelCount
EXTRN	?GetMotionCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetMotionCount
EXTRN	?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ:PROC ; CGraphicThingInstance::UpdateLODLevel
EXTRN	?DeformAll@CGraphicThingInstance@@QAEXXZ:PROC	; CGraphicThingInstance::DeformAll
EXTRN	?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z:PROC ; CGraphicThingInstance::ReserveModelInstance
EXTRN	?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z:PROC ; CGraphicThingInstance::ReserveModelThing
EXTRN	?IsMotionThing@CGraphicThingInstance@@QAE_NXZ:PROC ; CGraphicThingInstance::IsMotionThing
EXTRN	?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::RegisterModelThing
EXTRN	?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::RegisterLODThing
EXTRN	?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::RegisterMotionThing
EXTRN	?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z:PROC ; CGraphicThingInstance::SetModelInstance
EXTRN	?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z:PROC ; CGraphicThingInstance::SetMotion
EXTRN	?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ:PROC ; CGraphicThingInstance::BuildBoundingSphere
EXTRN	?New@CGraphicThingInstance@@SAPAV1@XZ:PROC	; CGraphicThingInstance::New
EXTRN	?Delete@CGraphicThingInstance@@SAXPAV1@@Z:PROC	; CGraphicThingInstance::Delete
EXTRN	?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ:PROC ; CGraphicThingInstance::HaveBlendThing
EXTRN	??0CDungeonBlock@@QAE@XZ:PROC			; CDungeonBlock::CDungeonBlock
EXTRN	?BuildBoundingSphere@CDungeonBlock@@QAEXXZ:PROC	; CDungeonBlock::BuildBoundingSphere
EXTRN	?Load@CDungeonBlock@@QAE_NPBD@Z:PROC		; CDungeonBlock::Load
EXTRN	?Update@CDungeonBlock@@QAEXXZ:PROC		; CDungeonBlock::Update
EXTRN	?Render@CDungeonBlock@@QAEXXZ:PROC		; CDungeonBlock::Render
EXTRN	??_ESAmbienceInstance@CArea@@UAEPAXI@Z:PROC	; CArea::SAmbienceInstance::`vector deleting destructor'
EXTRN	??_ESObjectInstance@CArea@@UAEPAXI@Z:PROC	; CArea::SObjectInstance::`vector deleting destructor'
EXTRN	??_ECArea@@UAEPAXI@Z:PROC			; CArea::`vector deleting destructor'
EXTRN	?Get@CPropertyManager@@QAE_NKPAPAVCProperty@@@Z:PROC ; CPropertyManager::Get
EXTRN	?GetString@CProperty@@QAE_NPBDPAPBD@Z:PROC	; CProperty::GetString
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	__ltod3:PROC
EXTRN	_memchr:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:DWORD		; std::ctype<char>::id
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A DD 01H DUP (?) ; CSingleton<CSoundManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A DD 01H DUP (?) ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPropertyManager@@@@0PAVCPropertyManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPropertyManager@@@@0PAVCPropertyManager@@A DD 01H DUP (?) ; CSingleton<CPropertyManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A
_BSS	SEGMENT
?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A DB 0cH DUP (?) ; `CArea::RenderEffect'::`9'::s_kVct_pkEftInstSort
_BSS	ENDS
;	COMDAT ?$TSS0@?8??RenderEffect@CArea@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?8??RenderEffect@CArea@@QAEXXZ@4HA DD 01H DUP (?) ; `CArea::RenderEffect'::`9'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_ObjectInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ ; ??ms_ObjectInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@SObjectInstance@CArea@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SObjectInstance@CArea@@8 DD FLAT:??_R0?AUSObjectInstance@CArea@@@8 ; CArea::SObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SObjectInstance@CArea@@8
rdata$r	ENDS
;	COMDAT ??_R2SObjectInstance@CArea@@8
rdata$r	SEGMENT
??_R2SObjectInstance@CArea@@8 DD FLAT:??_R1A@?0A@EA@SObjectInstance@CArea@@8 ; CArea::SObjectInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SObjectInstance@CArea@@8
rdata$r	SEGMENT
??_R3SObjectInstance@CArea@@8 DD 00H			; CArea::SObjectInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SObjectInstance@CArea@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSObjectInstance@CArea@@@8
data$r	SEGMENT
??_R0?AUSObjectInstance@CArea@@@8 DD FLAT:??_7type_info@@6B@ ; CArea::SObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSObjectInstance@CArea@@', 00H
data$r	ENDS
;	COMDAT ??_R4SObjectInstance@CArea@@6B@
rdata$r	SEGMENT
??_R4SObjectInstance@CArea@@6B@ DD 00H			; CArea::SObjectInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSObjectInstance@CArea@@@8
	DD	FLAT:??_R3SObjectInstance@CArea@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CScreen@@8
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
data$r	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SAmbienceInstance@CArea@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SAmbienceInstance@CArea@@8 DD FLAT:??_R0?AUSAmbienceInstance@CArea@@@8 ; CArea::SAmbienceInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SAmbienceInstance@CArea@@8
rdata$r	ENDS
;	COMDAT ??_R2SAmbienceInstance@CArea@@8
rdata$r	SEGMENT
??_R2SAmbienceInstance@CArea@@8 DD FLAT:??_R1A@?0A@EA@SAmbienceInstance@CArea@@8 ; CArea::SAmbienceInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3SAmbienceInstance@CArea@@8
rdata$r	SEGMENT
??_R3SAmbienceInstance@CArea@@8 DD 00H			; CArea::SAmbienceInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SAmbienceInstance@CArea@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSAmbienceInstance@CArea@@@8
data$r	SEGMENT
??_R0?AUSAmbienceInstance@CArea@@@8 DD FLAT:??_7type_info@@6B@ ; CArea::SAmbienceInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSAmbienceInstance@CArea@@', 00H
data$r	ENDS
;	COMDAT ??_R4SAmbienceInstance@CArea@@6B@
rdata$r	SEGMENT
??_R4SAmbienceInstance@CArea@@6B@ DD 00H		; CArea::SAmbienceInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSAmbienceInstance@CArea@@@8
	DD	FLAT:??_R3SAmbienceInstance@CArea@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CArea@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CArea@@8 DD FLAT:??_R0?AVCArea@@@8	; CArea::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CArea@@8
rdata$r	ENDS
;	COMDAT ??_R2CArea@@8
rdata$r	SEGMENT
??_R2CArea@@8 DD FLAT:??_R1A@?0A@EA@CArea@@8		; CArea::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CArea@@8
rdata$r	SEGMENT
??_R3CArea@@8 DD 00H					; CArea::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CArea@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCArea@@@8
data$r	SEGMENT
??_R0?AVCArea@@@8 DD FLAT:??_7type_info@@6B@		; CArea `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCArea@@', 00H
data$r	ENDS
;	COMDAT ??_R4CArea@@6B@
rdata$r	SEGMENT
??_R4CArea@@6B@ DD 00H					; CArea::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCArea@@@8
	DD	FLAT:??_R3CArea@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BAHENMHD@?5CArea?3?3LoadAmbience?5Property?$CI?$CF@
CONST	SEGMENT
??_C@_0CN@BAHENMHD@?5CArea?3?3LoadAmbience?5Property?$CI?$CF@ DB ' CArea:'
	DB	':LoadAmbience Property(%d) Load ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GJNEDCML@?5CArea?3?3__LoadAmbience?5File?5For@
CONST	SEGMENT
??_C@_0CO@GJNEDCML@?5CArea?3?3__LoadAmbience?5File?5For@ DB ' CArea::__Lo'
	DB	'adAmbience File Format %s ERROR 2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@ECPJGBAI@?5CArea?3?3__LoadAmbience?5File?5For@
CONST	SEGMENT
??_C@_0CO@ECPJGBAI@?5CArea?3?3__LoadAmbience?5File?5For@ DB ' CArea::__Lo'
	DB	'adAmbience File Format %s ERROR 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PFPNGEBG@areaambiencedatafile@
CONST	SEGMENT
??_C@_0BF@PFPNGEBG@areaambiencedatafile@ DB 'areaambiencedatafile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HHDKLHOE@?5CArea?3?3LoadObject?5Property?$CI?$CFu?$CJ@
CONST	SEGMENT
??_C@_0CL@HHDKLHOE@?5CArea?3?3LoadObject?5Property?$CI?$CFu?$CJ@ DB ' CAr'
	DB	'ea::LoadObject Property(%u) Load ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CHFLOJFF@object?$CF03d@
CONST	SEGMENT
??_C@_0L@CHFLOJFF@object?$CF03d@ DB 'object%03d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CFOIFIG@?5CArea?3?3__LoadObject?5File?5Forma@
CONST	SEGMENT
??_C@_0CM@CFOIFIG@?5CArea?3?3__LoadObject?5File?5Forma@ DB ' CArea::__Loa'
	DB	'dObject File Format %s ERROR 2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IANPHBDM@objectcount@
CONST	SEGMENT
??_C@_0M@IANPHBDM@objectcount@ DB 'objectcount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CJHDNGEF@?5CArea?3?3__LoadObject?5File?5Forma@
CONST	SEGMENT
??_C@_0CM@CJHDNGEF@?5CArea?3?3__LoadObject?5File?5Forma@ DB ' CArea::__Lo'
	DB	'adObject File Format %s ERROR 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLGDDPHB@areadatafile@
CONST	SEGMENT
??_C@_0N@DLGDDPHB@areadatafile@ DB 'areadatafile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NNOAMPKE@?5CArea?3?3Load?5File?5Load?5?$CFs?5ERROR@
CONST	SEGMENT
??_C@_0CA@NNOAMPKE@?5CArea?3?3Load?5File?5Load?5?$CFs?5ERROR@ DB ' CArea:'
	DB	':Load File Load %s ERROR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EMGBEFOB@AreaAmbienceData?4txt@
CONST	SEGMENT
??_C@_0BF@EMGBEFOB@AreaAmbienceData?4txt@ DB 'AreaAmbienceData.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IIOKECFB@AreaData?4txt@
CONST	SEGMENT
??_C@_0N@IIOKECFB@AreaData?4txt@ DB 'AreaData.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NJPKAPFJ@DummyCollisionOBB@
CONST	SEGMENT
??_C@_0BC@NJPKAPFJ@DummyCollisionOBB@ DB 'DummyCollisionOBB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PCMKFNFD@?2dungeon?2@
CONST	SEGMENT
??_C@_09PCMKFNFD@?2dungeon?2@ DB '\dungeon\', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OLKGEJPN@?1dungeon?1@
CONST	SEGMENT
??_C@_09OLKGEJPN@?1dungeon?1@ DB '/dungeon/', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KGNEGCGI@LOOP@
CONST	SEGMENT
??_C@_04KGNEGCGI@LOOP@ DB 'LOOP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MOOLDHHD@STEP@
CONST	SEGMENT
??_C@_04MOOLDHHD@STEP@ DB 'STEP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHGHGAKN@ONCE@
CONST	SEGMENT
??_C@_04GHGHGAKN@ONCE@ DB 'ONCE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDEAKJNP@_lod_?$CF?42d?4gr2@
CONST	SEGMENT
??_C@_0O@NDEAKJNP@_lod_?$CF?42d?4gr2@ DB '_lod_%.2d.gr2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JBFACIKL@TreeFile@
CONST	SEGMENT
??_C@_08JBFACIKL@TreeFile@ DB 'TreeFile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BOJNBGJP@CArea?3?3SetEffect?5effect?5registe@
CONST	SEGMENT
??_C@_0CL@BOJNBGJP@CArea?3?3SetEffect?5effect?5registe@ DB 'CArea::SetEff'
	DB	'ect effect register error %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPEBPNJJ@PropertyType@
CONST	SEGMENT
??_C@_0N@FPEBPNJJ@PropertyType@ DB 'PropertyType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CArea@@6B@
CONST	SEGMENT
??_7CArea@@6B@ DD FLAT:??_R4CArea@@6B@			; CArea::`vftable'
	DD	FLAT:??_ECArea@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A DD FLAT:??_7?$CDynamicPool@USObjectInstance@CArea@@@@6B@ ; CArea::ms_ObjectInstancePool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCAttributeInstance@@@@6B@ ; CArea::ms_AttributeInstancePool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A DD FLAT:??_7?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@ ; CArea::ms_AmbienceInstancePool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A DD FLAT:??_7?$CDynamicPool@VCDungeonBlock@@@@6B@ ; CArea::ms_DungeonBlockInstancePool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A DD FLAT:??_7?$CDynamicPool@VCArea@@@@6B@ ; CArea::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SObjectInstance@CArea@@6B@
CONST	SEGMENT
??_7SObjectInstance@CArea@@6B@ DD FLAT:??_R4SObjectInstance@CArea@@6B@ ; CArea::SObjectInstance::`vftable'
	DD	FLAT:??_ESObjectInstance@CArea@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SAmbienceInstance@CArea@@6B@
CONST	SEGMENT
??_7SAmbienceInstance@CArea@@6B@ DD FLAT:??_R4SAmbienceInstance@CArea@@6B@ ; CArea::SAmbienceInstance::`vftable'
	DD	FLAT:??_ESAmbienceInstance@CArea@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD FLAT:??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD FLAT:??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ctype_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
	DD	FLAT:??_R1A@?0A@EA@_Facet_base@std@@8
	DD	FLAT:??_R13?0A@EA@_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
data$r	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ctype@D@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 00H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ctype@D@std@@@8
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD FLAT:??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD FLAT:??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
	DD	FLAT:??_R1A@?0A@EA@_Facet_base@std@@8
	DD	FLAT:??_R13?0A@EA@_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
data$r	SEGMENT
??_R0?AUctype_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUctype_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 00H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUctype_base@std@@@8
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 00H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfacet@locale@std@@@8
	DD	FLAT:??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD FLAT:??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD FLAT:??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$r	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R13?0A@EA@_Crt_new_delete@std@@8 DD FLAT:??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD FLAT:??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Facet_base@std@@8
	DD	FLAT:??_R13?0A@EA@_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$r	SEGMENT
??_R0?AVfacet@locale@std@@@8 DD FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfacet@locale@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD FLAT:??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD FLAT:??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD FLAT:??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$r	SEGMENT
??_R0?AV_Facet_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Facet_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Facet_base@std@@6B@
rdata$r	SEGMENT
??_R4_Facet_base@std@@6B@ DD 00H			; std::_Facet_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Facet_base@std@@@8
	DD	FLAT:??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD FLAT:??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD FLAT:??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 00H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	FLAT:??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DD FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DD	FLAT:??_E?$ctype@D@std@@MAEPAXI@Z
	DD	FLAT:?_Incref@facet@locale@std@@UAEXXZ
	DD	FLAT:?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEDDD@Z
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DD FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DD	FLAT:??_Ectype_base@std@@UAEPAXI@Z
	DD	FLAT:?_Incref@facet@locale@std@@UAEXXZ
	DD	FLAT:?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DD FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DD	FLAT:??_Efacet@locale@std@@MAEPAXI@Z
	DD	FLAT:?_Incref@facet@locale@std@@UAEXXZ
	DD	FLAT:?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7_Facet_base@std@@6B@
CONST	SEGMENT
??_7_Facet_base@std@@6B@ DD FLAT:??_R4_Facet_base@std@@6B@ ; std::_Facet_base::`vftable'
	DD	FLAT:??_E_Facet_base@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DD FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DD	FLAT:??_Ebad_cast@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAUSObjectInstance@CArea@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@ABQAUSObjectInstance@CArea@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAUSObjectInstance@CArea@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@ABQAUSObjectInstance@CArea@@@Z$1
__ehfuncinfo$??$?0ABQAUSObjectInstance@CArea@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@ABQAUSObjectInstance@CArea@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAUSObjectInstance@CArea@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@ABQAUSObjectInstance@CArea@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABH@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@ABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABH@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@ABH@Z$1
__ehfuncinfo$??$?0ABH@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@ABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABH@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@ABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@HPAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z$1
__ehfuncinfo$??$?0U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z$2
__ehfuncinfo$??$_Emplace@ABQAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABH@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@HPAX@std@@_N@1@ABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABH@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@HPAX@std@@_N@1@ABH@Z$2
__ehfuncinfo$??$_Emplace@ABH@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@HPAX@std@@_N@1@ABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABH@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@HPAX@std@@_N@1@ABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCEffectInstance@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@QAVCGraphicThingInstance@@K@std@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
__ehfuncinfo$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@_N@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@@std@@_N@1@ABQAUSObjectInstance@CArea@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@ABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@ABH@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@ABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@ABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCEffectInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@QAVCGraphicThingInstance@@K@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCArea@@@@QAEPAVCArea@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCArea@@@@QAEPAVCArea@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCArea@@@@QAEPAVCArea@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCArea@@@@QAEPAVCArea@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCDungeonBlock@@@@QAEPAVCDungeonBlock@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCDungeonBlock@@@@QAEPAVCDungeonBlock@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCDungeonBlock@@@@QAEPAVCDungeonBlock@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCDungeonBlock@@@@QAEPAVCDungeonBlock@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@USAmbienceInstance@CArea@@@@QAEPAUSAmbienceInstance@CArea@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@USAmbienceInstance@CArea@@@@QAEPAUSAmbienceInstance@CArea@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@USAmbienceInstance@CArea@@@@QAEPAUSAmbienceInstance@CArea@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@USAmbienceInstance@CArea@@@@QAEPAUSAmbienceInstance@CArea@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCAttributeInstance@@@@QAEPAVCAttributeInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCAttributeInstance@@@@QAEPAVCAttributeInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCAttributeInstance@@@@QAEPAVCAttributeInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCAttributeInstance@@@@QAEPAVCAttributeInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
__ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CArea@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CArea@@SAPAV1@XZ$0
__ehfuncinfo$?New@CArea@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CArea@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$5
__ehfuncinfo$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0
__ehfuncinfo$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$6
__ehfuncinfo$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$3
__ehfuncinfo$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z$0
	DD	01H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:__unwindfunclet$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z$1
__ehfuncinfo$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__Load_BuildObjectInstances@CArea@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__Load_BuildObjectInstances@CArea@@IAEXXZ$3
__ehfuncinfo$?__Load_BuildObjectInstances@CArea@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__Load_BuildObjectInstances@CArea@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$24
	DD	00H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$9
	DD	08H
	DD	FLAT:__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$10
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__Load_LoadObject@CArea@@IAE_NPBD@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?__Load_LoadObject@CArea@@IAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?__Load_LoadObject@CArea@@IAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$25
	DD	00H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RefreshPortal@CArea@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RefreshPortal@CArea@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RefreshPortal@CArea@@QAEXXZ$4
__ehfuncinfo$?RefreshPortal@CArea@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RefreshPortal@CArea@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddShowingPortalID@CArea@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddShowingPortalID@CArea@@QAEXH@Z$2
__ehfuncinfo$?AddShowingPortalID@CArea@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddShowingPortalID@CArea@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Load@CArea@@QAE_NPBD@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Load@CArea@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Load@CArea@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CArea@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CArea@@QAE@XZ DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$??0CArea@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CArea@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0CArea@@QAE@XZ$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$1
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$8
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0locale@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Locinfo@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0_Locinfo@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0_Locinfo@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$6
xdata$x	ENDS
CRT$XCU	SEGMENT
??ms_AttributeInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ ; ??ms_AttributeInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
CRT$XCU	SEGMENT
??ms_AmbienceInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ ; ??ms_AmbienceInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
CRT$XCU	SEGMENT
??ms_DungeonBlockInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ ; ??ms_DungeonBlockInstancePool$initializer$@CArea@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CArea@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CArea@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAD$0A@@std@@YAPADPAD@Z PROC		; std::_Refancy<char *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ENDP		; std::_Refancy<char *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000c	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00013	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0001a	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0001d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00020	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00025	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002a	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00031	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  0003b	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003d	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00044	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  0004b	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z PROC ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>, COMDAT

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00009	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  0000a	8b 72 0c	 mov	 esi, DWORD PTR [edx+12]
  0000d	3b 71 0c	 cmp	 esi, DWORD PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00010	73 2f		 jae	 SHORT $LN11@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00012	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00015	0f 10 0a	 movups	 xmm1, XMMWORD PTR [edx]
  00018	0f 10 52 10	 movups	 xmm2, XMMWORD PTR [edx+16]
  0001c	0f 10 5a 20	 movups	 xmm3, XMMWORD PTR [edx+32]
  00020	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00023	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00027	0f 11 42 10	 movups	 XMMWORD PTR [edx+16], xmm0
  0002b	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  0002f	0f 11 42 20	 movups	 XMMWORD PTR [edx+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  00033	0f 11 09	 movups	 XMMWORD PTR [ecx], xmm1
  00036	0f 11 51 10	 movups	 XMMWORD PTR [ecx+16], xmm2
  0003a	0f 11 59 20	 movups	 XMMWORD PTR [ecx+32], xmm3
  0003e	8b 72 0c	 mov	 esi, DWORD PTR [edx+12]
$LN11@Med3_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  00041	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00044	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00047	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00048	73 55		 jae	 SHORT $LN23@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0004a	0f 10 02	 movups	 xmm0, XMMWORD PTR [edx]
  0004d	0f 10 08	 movups	 xmm1, XMMWORD PTR [eax]
  00050	0f 10 50 10	 movups	 xmm2, XMMWORD PTR [eax+16]
  00054	0f 10 58 20	 movups	 xmm3, XMMWORD PTR [eax+32]
  00058	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0005b	0f 10 42 10	 movups	 xmm0, XMMWORD PTR [edx+16]
  0005f	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  00063	0f 10 42 20	 movups	 xmm0, XMMWORD PTR [edx+32]
  00067	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  0006b	0f 11 0a	 movups	 XMMWORD PTR [edx], xmm1
  0006e	0f 11 52 10	 movups	 XMMWORD PTR [edx+16], xmm2
  00072	0f 11 5a 20	 movups	 XMMWORD PTR [edx+32], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  00076	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00079	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0007c	73 21		 jae	 SHORT $LN23@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0007e	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00081	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00084	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00088	0f 11 42 10	 movups	 XMMWORD PTR [edx+16], xmm0
  0008c	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  00090	0f 11 42 20	 movups	 XMMWORD PTR [edx+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  00094	0f 11 09	 movups	 XMMWORD PTR [ecx], xmm1
  00097	0f 11 51 10	 movups	 XMMWORD PTR [ecx+16], xmm2
  0009b	0f 11 59 20	 movups	 XMMWORD PTR [ecx+32], xmm3
$LN23@Med3_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4016 : }

  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ENDP ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUSObjectData@CArea@@PAU12@@std@@YAPAUSObjectData@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUSObjectData@CArea@@PAU12@@std@@YAPAUSObjectData@CArea@@PAU12@00@Z PROC ; std::_Copy_backward_memmove<CArea::SObjectData *,CArea::SObjectData *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUSObjectData@CArea@@PAU12@@std@@YAPAUSObjectData@CArea@@PAU12@00@Z ENDP ; std::_Copy_backward_memmove<CArea::SObjectData *,CArea::SObjectData *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z PROC ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4003 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00007	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  0000b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0000e	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00011	76 16		 jbe	 SHORT $LN25@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00013	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00015	8b d0		 mov	 edx, eax

; 107  :     _Left    = _STD move(_Right);

  00017	8b 06		 mov	 eax, DWORD PTR [esi]
  00019	89 07		 mov	 DWORD PTR [edi], eax
  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00021	89 0e		 mov	 DWORD PTR [esi], ecx
  00023	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
$LN25@Med3_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00029	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002c	39 41 04	 cmp	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0002f	76 2a		 jbe	 SHORT $LN23@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00031	8b 07		 mov	 eax, DWORD PTR [edi]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	53		 push	 ebx
  00037	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00039	89 01		 mov	 DWORD PTR [ecx], eax
  0003b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00041	89 1f		 mov	 DWORD PTR [edi], ebx
  00043	89 57 04	 mov	 DWORD PTR [edi+4], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00046	3b 56 04	 cmp	 edx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00049	76 0f		 jbe	 SHORT $LN26@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0004b	8b 06		 mov	 eax, DWORD PTR [esi]
  0004d	89 07		 mov	 DWORD PTR [edi], eax
  0004f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00052	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00055	89 1e		 mov	 DWORD PTR [esi], ebx
  00057	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN26@Med3_unche:
  0005a	5b		 pop	 ebx
$LN23@Med3_unche:
  0005b	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4016 : }

  0005c	5e		 pop	 esi
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ENDP ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z PROC ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ENDP ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z PROC ; std::_Copy_backward_memmove<CEffectInstance * *,CEffectInstance * *>, COMDAT

; 4284 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4285 :     // implement copy_backward-like function as memmove
; 4286 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4287 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4288 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4289 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4290 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4291 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z ENDP ; std::_Copy_backward_memmove<CEffectInstance * *,CEffectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\locale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\locale
;	COMDAT ??$tolower@D@std@@YADDABVlocale@0@@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
__Loc$ = 12						; size = 4
??$tolower@D@std@@YADDABVlocale@0@@Z PROC		; std::tolower<char>, COMDAT

; 243  : _Elem(tolower)(_Elem _Ch, const locale& _Loc) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 244  :     return _STD use_facet<ctype<_Elem>>(_Loc).tolower(_Ch);

  00003	ff 75 0c	 push	 DWORD PTR __Loc$[ebp]
  00006	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  0000b	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 2691 :         return do_tolower(_Ch);

  0000e	8b c8		 mov	 ecx, eax
  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	ff 75 08	 push	 DWORD PTR __Ch$[ebp]
  00015	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00018	ff d0		 call	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\locale

; 245  : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$tolower@D@std@@YADDABVlocale@0@@Z ENDP		; std::tolower<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
_this$ = -8						; size = 4
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000c	89 75 f8	 mov	 DWORD PTR _this$[ebp], esi
  0000f	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  00013	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00016	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  0001a	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$?0V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@AAV?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>,std::tuple<>,0>
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAUSObjectData@CArea@@U12@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@HH$$QAU12@UObjectDataComp@2@@Z
_TEXT	SEGMENT
tv341 = -4						; size = 4
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAUSObjectData@CArea@@U12@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@HH$$QAU12@UObjectDataComp@2@@Z PROC ; std::_Pop_heap_hole_by_index<CArea::SObjectData *,CArea::SObjectData,CArea::ObjectDataComp>, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;
; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00004	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b 75 0c	 mov	 esi, DWORD PTR __Hole$[ebp]
  0000c	8b d6		 mov	 edx, esi
  0000e	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  00011	89 75 0c	 mov	 DWORD PTR __Top$1$[ebp], esi
  00014	8b d9		 mov	 ebx, ecx
  00016	89 4d fc	 mov	 DWORD PTR tv341[ebp], ecx
  00019	d1 fb		 sar	 ebx, 1
  0001b	57		 push	 edi

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0001c	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0001f	3b f3		 cmp	 esi, ebx
  00021	7d 45		 jge	 SHORT $LN3@Pop_heap_h
$LL2@Pop_heap_h:

; 3365 :         _Idx = 2 * _Idx + 2;

  00023	03 d2		 add	 edx, edx

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00025	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00028	03 c9		 add	 ecx, ecx

; 3367 :             --_Idx;
; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0002a	8b 44 cf 6c	 mov	 eax, DWORD PTR [edi+ecx*8+108]
  0002e	3b 44 cf 3c	 cmp	 eax, DWORD PTR [edi+ecx*8+60]
  00032	1b c0		 sbb	 eax, eax
  00034	83 c0 02	 add	 eax, 2
  00037	03 d0		 add	 edx, eax
  00039	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  0003c	03 c0		 add	 eax, eax

; 3370 :         _Hole             = _Idx;

  0003e	8b f2		 mov	 esi, edx
  00040	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00043	03 c9		 add	 ecx, ecx
  00045	0f 10 04 cf	 movups	 xmm0, XMMWORD PTR [edi+ecx*8]
  00049	0f 11 04 c7	 movups	 XMMWORD PTR [edi+eax*8], xmm0
  0004d	0f 10 44 cf 10	 movups	 xmm0, XMMWORD PTR [edi+ecx*8+16]
  00052	0f 11 44 c7 10	 movups	 XMMWORD PTR [edi+eax*8+16], xmm0
  00057	0f 10 44 cf 20	 movups	 xmm0, XMMWORD PTR [edi+ecx*8+32]
  0005c	0f 11 44 c7 20	 movups	 XMMWORD PTR [edi+eax*8+32], xmm0
  00061	3b d3		 cmp	 edx, ebx
  00063	7c be		 jl	 SHORT $LL2@Pop_heap_h
  00065	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
$LN3@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00068	3b d3		 cmp	 edx, ebx
  0006a	75 2e		 jne	 SHORT $LN5@Pop_heap_h
  0006c	a8 01		 test	 al, 1
  0006e	75 2a		 jne	 SHORT $LN5@Pop_heap_h

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00070	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00073	03 c9		 add	 ecx, ecx
  00075	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]

; 3375 :         _Hole             = _Bottom - 1;

  00078	8b 75 fc	 mov	 esi, DWORD PTR tv341[ebp]
  0007b	03 c0		 add	 eax, eax
  0007d	0f 10 44 cf d0	 movups	 xmm0, XMMWORD PTR [edi+ecx*8-48]
  00082	0f 11 04 c7	 movups	 XMMWORD PTR [edi+eax*8], xmm0
  00086	0f 10 44 cf e0	 movups	 xmm0, XMMWORD PTR [edi+ecx*8-32]
  0008b	0f 11 44 c7 10	 movups	 XMMWORD PTR [edi+eax*8+16], xmm0
  00090	0f 10 44 cf f0	 movups	 xmm0, XMMWORD PTR [edi+ecx*8-16]
  00095	0f 11 44 c7 20	 movups	 XMMWORD PTR [edi+eax*8+32], xmm0
$LN5@Pop_heap_h:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0009a	8b 5d 14	 mov	 ebx, DWORD PTR __Val$[ebp]
  0009d	39 75 0c	 cmp	 DWORD PTR __Top$1$[ebp], esi
  000a0	7d 3a		 jge	 SHORT $LN24@Pop_heap_h
$LL12@Pop_heap_h:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  000a2	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  000a5	d1 f8		 sar	 eax, 1

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000a7	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  000aa	c1 e2 04	 shl	 edx, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000ad	03 d7		 add	 edx, edi
  000af	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  000b2	3b 4b 0c	 cmp	 ecx, DWORD PTR [ebx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000b5	73 25		 jae	 SHORT $LN24@Pop_heap_h

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000b7	0f 10 02	 movups	 xmm0, XMMWORD PTR [edx]
  000ba	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]

; 3325 :         _Hole             = _Idx;

  000bd	8b f0		 mov	 esi, eax
  000bf	03 c9		 add	 ecx, ecx
  000c1	0f 11 04 cf	 movups	 XMMWORD PTR [edi+ecx*8], xmm0
  000c5	0f 10 42 10	 movups	 xmm0, XMMWORD PTR [edx+16]
  000c9	0f 11 44 cf 10	 movups	 XMMWORD PTR [edi+ecx*8+16], xmm0
  000ce	0f 10 42 20	 movups	 xmm0, XMMWORD PTR [edx+32]
  000d2	0f 11 44 cf 20	 movups	 XMMWORD PTR [edi+ecx*8+32], xmm0
  000d7	39 45 0c	 cmp	 DWORD PTR __Top$1$[ebp], eax
  000da	7c c6		 jl	 SHORT $LL12@Pop_heap_h
$LN24@Pop_heap_h:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  000dc	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
  000df	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  000e2	03 c0		 add	 eax, eax
  000e4	0f 11 04 c7	 movups	 XMMWORD PTR [edi+eax*8], xmm0
  000e8	0f 10 43 10	 movups	 xmm0, XMMWORD PTR [ebx+16]
  000ec	0f 11 44 c7 10	 movups	 XMMWORD PTR [edi+eax*8+16], xmm0
  000f1	0f 10 43 20	 movups	 xmm0, XMMWORD PTR [ebx+32]
  000f5	0f 11 44 c7 20	 movups	 XMMWORD PTR [edi+eax*8+32], xmm0
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx

; 3376 :     }
; 3377 : 
; 3378 :     _Push_heap_by_index(_First, _Hole, _Top, _STD move(_Val), _Pred);
; 3379 : }

  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAUSObjectData@CArea@@U12@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@HH$$QAU12@UObjectDataComp@2@@Z ENDP ; std::_Pop_heap_hole_by_index<CArea::SObjectData *,CArea::SObjectData,CArea::ObjectDataComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z PROC ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Hole$[ebp]

; 3359 :     _Diff _Idx       = _Hole;

  00006	8b d0		 mov	 edx, eax
  00008	53		 push	 ebx

; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00009	8b 5d 10	 mov	 ebx, DWORD PTR __Bottom$[ebp]
  0000c	56		 push	 esi

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	57		 push	 edi
  00011	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00014	89 45 0c	 mov	 DWORD PTR __Top$1$[ebp], eax
  00017	d1 ff		 sar	 edi, 1
  00019	3b c7		 cmp	 eax, edi
  0001b	7d 28		 jge	 SHORT $LN3@Pop_heap_h
  0001d	0f 1f 00	 npad	 3
$LL2@Pop_heap_h:

; 3365 :         _Idx = 2 * _Idx + 2;

  00020	03 d2		 add	 edx, edx

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 3367 :             --_Idx;
; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00022	8b 4c d6 14	 mov	 ecx, DWORD PTR [esi+edx*8+20]
  00026	39 4c d6 0c	 cmp	 DWORD PTR [esi+edx*8+12], ecx
  0002a	1b c9		 sbb	 ecx, ecx
  0002c	83 c1 02	 add	 ecx, 2
  0002f	03 d1		 add	 edx, ecx
  00031	8b 0c d6	 mov	 ecx, DWORD PTR [esi+edx*8]
  00034	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00037	8b 4c d6 04	 mov	 ecx, DWORD PTR [esi+edx*8+4]
  0003b	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 3370 :         _Hole             = _Idx;

  0003f	8b c2		 mov	 eax, edx
  00041	3b d7		 cmp	 edx, edi
  00043	7c db		 jl	 SHORT $LL2@Pop_heap_h
$LN3@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00045	3b d7		 cmp	 edx, edi
  00047	75 17		 jne	 SHORT $LN5@Pop_heap_h
  00049	f6 c3 01	 test	 bl, 1
  0004c	75 12		 jne	 SHORT $LN5@Pop_heap_h

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  0004e	8b 4c de f8	 mov	 ecx, DWORD PTR [esi+ebx*8-8]
  00052	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00055	8b 4c de fc	 mov	 ecx, DWORD PTR [esi+ebx*8-4]
  00059	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 3375 :         _Hole             = _Bottom - 1;

  0005d	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
$LN5@Pop_heap_h:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00060	8b 5d 0c	 mov	 ebx, DWORD PTR __Top$1$[ebp]
  00063	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  00066	3b d8		 cmp	 ebx, eax
  00068	7d 28		 jge	 SHORT $LN24@Pop_heap_h
  0006a	66 0f 1f 44 00
	00		 npad	 6
$LL12@Pop_heap_h:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00070	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  00073	d1 fa		 sar	 edx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00075	8b 4c d6 04	 mov	 ecx, DWORD PTR [esi+edx*8+4]
  00079	3b 4f 04	 cmp	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0007c	76 14		 jbe	 SHORT $LN24@Pop_heap_h

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0007e	8b 0c d6	 mov	 ecx, DWORD PTR [esi+edx*8]
  00081	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00084	8b 4c d6 04	 mov	 ecx, DWORD PTR [esi+edx*8+4]
  00088	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx

; 3325 :         _Hole             = _Idx;

  0008c	8b c2		 mov	 eax, edx
  0008e	3b da		 cmp	 ebx, edx
  00090	7c de		 jl	 SHORT $LL12@Pop_heap_h
$LN24@Pop_heap_h:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  00092	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00094	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00097	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0009a	5f		 pop	 edi
  0009b	89 4c c6 04	 mov	 DWORD PTR [esi+eax*8+4], ecx
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx

; 3376 :     }
; 3377 : 
; 3378 :     _Push_heap_by_index(_First, _Hole, _Top, _STD move(_Val), _Pred);
; 3379 : }

  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ENDP ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Guess_median_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@00UCArea_LessEffectInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
tv492 = -8						; size = 4
__First$1$ = -4						; size = 4
tv496 = 8						; size = 4
__First$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Guess_median_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@00UCArea_LessEffectInstancePtrRenderOrder@@@Z PROC ; std::_Guess_median_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>, COMDAT

; 4019 : _CONSTEXPR20 void _Guess_median_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 4020 :     // sort median element to middle
; 4021 :     using _Diff        = _Iter_diff_t<_RanIt>;
; 4022 :     const _Diff _Count = _Last - _First;

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	2b c6		 sub	 eax, esi
  00012	c1 f8 02	 sar	 eax, 2
  00015	57		 push	 edi
  00016	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 4023 :     if (40 < _Count) { // Tukey's ninther

  00018	51		 push	 ecx
  00019	83 f8 28	 cmp	 eax, 40			; 00000028H
  0001c	0f 8e 52 01 00
	00		 jle	 $LN2@Guess_medi

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  00022	40		 inc	 eax
  00023	c1 f8 03	 sar	 eax, 3

; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00026	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0002d	c1 e0 02	 shl	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00030	8b 0c 30	 mov	 ecx, DWORD PTR [eax+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00033	8d 3c 30	 lea	 edi, DWORD PTR [eax+esi]
  00036	89 55 f8	 mov	 DWORD PTR tv492[ebp], edx
  00039	89 45 08	 mov	 DWORD PTR tv496[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0003c	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00041	84 c0		 test	 al, al
  00043	74 08		 je	 SHORT $LN125@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00045	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 107  :     _Left    = _STD move(_Right);

  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	89 07		 mov	 DWORD PTR [edi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0004b	89 0e		 mov	 DWORD PTR [esi], ecx
$LN125@Guess_medi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0004d	8b 45 f8	 mov	 eax, DWORD PTR tv492[ebp]
  00050	ff 37		 push	 DWORD PTR [edi]
  00052	8b 0c 30	 mov	 ecx, DWORD PTR [eax+esi]
  00055	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0005a	84 c0		 test	 al, al
  0005c	74 20		 je	 SHORT $LN27@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0005e	8b 55 f8	 mov	 edx, DWORD PTR tv492[ebp]

; 107  :     _Left    = _STD move(_Right);

  00061	8b 07		 mov	 eax, DWORD PTR [edi]
  00063	8b 0c 32	 mov	 ecx, DWORD PTR [edx+esi]
  00066	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  00069	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0006b	ff 36		 push	 DWORD PTR [esi]
  0006d	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00072	84 c0		 test	 al, al
  00074	74 08		 je	 SHORT $LN27@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00076	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 107  :     _Left    = _STD move(_Right);

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	89 07		 mov	 DWORD PTR [edi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0007c	89 0e		 mov	 DWORD PTR [esi], ecx
$LN27@Guess_medi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  0007e	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  00081	8b c6		 mov	 eax, esi
  00083	2b 45 08	 sub	 eax, DWORD PTR tv496[ebp]
  00086	89 45 fc	 mov	 DWORD PTR __First$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00089	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008b	ff 30		 push	 DWORD PTR [eax]
  0008d	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00092	84 c0		 test	 al, al
  00094	74 0b		 je	 SHORT $LN126@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00096	8b 55 fc	 mov	 edx, DWORD PTR __First$1$[ebp]
  00099	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0009f	89 0a		 mov	 DWORD PTR [edx], ecx
$LN126@Guess_medi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000a1	8b 45 08	 mov	 eax, DWORD PTR tv496[ebp]
  000a4	ff 36		 push	 DWORD PTR [esi]
  000a6	8b 0c 30	 mov	 ecx, DWORD PTR [eax+esi]
  000a9	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000ae	84 c0		 test	 al, al
  000b0	74 26		 je	 SHORT $LN50@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  000b2	8b 55 08	 mov	 edx, DWORD PTR tv496[ebp]

; 107  :     _Left    = _STD move(_Right);

  000b5	8b 06		 mov	 eax, DWORD PTR [esi]
  000b7	8b 0c 32	 mov	 ecx, DWORD PTR [edx+esi]
  000ba	89 04 32	 mov	 DWORD PTR [edx+esi], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000bd	8b 45 fc	 mov	 eax, DWORD PTR __First$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  000c0	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000c2	ff 30		 push	 DWORD PTR [eax]
  000c4	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000c9	84 c0		 test	 al, al
  000cb	74 0b		 je	 SHORT $LN50@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  000cd	8b 55 fc	 mov	 edx, DWORD PTR __First$1$[ebp]
  000d0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000d2	8b 02		 mov	 eax, DWORD PTR [edx]
  000d4	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  000d6	89 0a		 mov	 DWORD PTR [edx], ecx
$LN50@Guess_medi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  000d8	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  000db	2b 45 f8	 sub	 eax, DWORD PTR tv492[ebp]
  000de	2b 5d 08	 sub	 ebx, DWORD PTR tv496[ebp]
  000e1	89 45 08	 mov	 DWORD PTR __First$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000e4	ff 30		 push	 DWORD PTR [eax]
  000e6	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000e8	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000ed	84 c0		 test	 al, al
  000ef	74 0b		 je	 SHORT $LN127@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  000f1	8b 55 08	 mov	 edx, DWORD PTR __First$1$[ebp]
  000f4	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000f6	8b 02		 mov	 eax, DWORD PTR [edx]
  000f8	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  000fa	89 0a		 mov	 DWORD PTR [edx], ecx
$LN127@Guess_medi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000fc	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  000ff	ff 33		 push	 DWORD PTR [ebx]
  00101	8b 08		 mov	 ecx, DWORD PTR [eax]
  00103	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00108	84 c0		 test	 al, al
  0010a	74 24		 je	 SHORT $LN73@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0010c	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]

; 107  :     _Left    = _STD move(_Right);

  0010f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00111	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00113	89 02		 mov	 DWORD PTR [edx], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00115	8b 45 08	 mov	 eax, DWORD PTR __First$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00118	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0011a	ff 30		 push	 DWORD PTR [eax]
  0011c	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00121	84 c0		 test	 al, al
  00123	74 0b		 je	 SHORT $LN73@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00125	8b 55 08	 mov	 edx, DWORD PTR __First$1$[ebp]
  00128	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0012a	8b 02		 mov	 eax, DWORD PTR [edx]
  0012c	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  0012e	89 0a		 mov	 DWORD PTR [edx], ecx
$LN73@Guess_medi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00130	ff 37		 push	 DWORD PTR [edi]
  00132	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00134	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00139	84 c0		 test	 al, al
  0013b	74 08		 je	 SHORT $LN128@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0013d	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  0013f	8b 07		 mov	 eax, DWORD PTR [edi]
  00141	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  00143	89 0f		 mov	 DWORD PTR [edi], ecx
$LN128@Guess_medi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00145	ff 36		 push	 DWORD PTR [esi]
  00147	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00149	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0014e	84 c0		 test	 al, al
  00150	74 60		 je	 SHORT $LN119@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00152	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  00154	8b 06		 mov	 eax, DWORD PTR [esi]
  00156	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  00158	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0015a	ff 37		 push	 DWORD PTR [edi]
  0015c	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00161	84 c0		 test	 al, al
  00163	74 4d		 je	 SHORT $LN119@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00165	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  00167	8b 07		 mov	 eax, DWORD PTR [edi]
  00169	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0016b	89 0f		 mov	 DWORD PTR [edi], ecx
  0016d	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4033 : }

  0016e	5e		 pop	 esi
  0016f	5b		 pop	 ebx
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c3		 ret	 0
$LN2@Guess_medi:

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00174	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00177	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00179	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4005 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0017e	84 c0		 test	 al, al
  00180	74 08		 je	 SHORT $LN129@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00182	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 107  :     _Left    = _STD move(_Right);

  00184	8b 06		 mov	 eax, DWORD PTR [esi]
  00186	89 07		 mov	 DWORD PTR [edi], eax

; 108  :     _Right   = _STD move(_Tmp);

  00188	89 0e		 mov	 DWORD PTR [esi], ecx
$LN129@Guess_medi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0018a	ff 37		 push	 DWORD PTR [edi]
  0018c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0018e	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4009 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00193	84 c0		 test	 al, al
  00195	74 1b		 je	 SHORT $LN119@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00197	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  0019d	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0019f	ff 36		 push	 DWORD PTR [esi]
  001a1	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4012 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  001a6	84 c0		 test	 al, al
  001a8	74 08		 je	 SHORT $LN119@Guess_medi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  001aa	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 107  :     _Left    = _STD move(_Right);

  001ac	8b 06		 mov	 eax, DWORD PTR [esi]
  001ae	89 07		 mov	 DWORD PTR [edi], eax

; 108  :     _Right   = _STD move(_Tmp);

  001b0	89 0e		 mov	 DWORD PTR [esi], ecx
$LN119@Guess_medi:
  001b2	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4033 : }

  001b3	5e		 pop	 esi
  001b4	5b		 pop	 ebx
  001b5	8b e5		 mov	 esp, ebp
  001b7	5d		 pop	 ebp
  001b8	c3		 ret	 0
??$_Guess_median_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@00UCArea_LessEffectInstancePtrRenderOrder@@@Z ENDP ; std::_Guess_median_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAPAVCEffectInstance@@PAV1@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@HH$$QAPAV1@UCArea_LessEffectInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Max_sequence_non_leaf$1$ = -4				; size = 4
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAPAVCEffectInstance@@PAV1@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@HH$$QAPAV1@UCArea_LessEffectInstancePtrRenderOrder@@@Z PROC ; std::_Pop_heap_hole_by_index<CEffectInstance * *,CEffectInstance *,CArea_LessEffectInstancePtrRenderOrder>, COMDAT

; 3354 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 3355 :     // percolate _Hole to _Bottom, then push _Val, using _Pred
; 3356 :     _STL_INTERNAL_CHECK(_Bottom != 0);
; 3357 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 3358 :     const _Diff _Top = _Hole;
; 3359 :     _Diff _Idx       = _Hole;
; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00004	8b 55 10	 mov	 edx, DWORD PTR __Bottom$[ebp]
  00007	53		 push	 ebx

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00008	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Hole$[ebp]
  0000f	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00012	d1 f8		 sar	 eax, 1
  00014	8b ce		 mov	 ecx, esi
  00016	89 4d 0c	 mov	 DWORD PTR __Top$1$[ebp], ecx
  00019	89 45 fc	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  0001c	57		 push	 edi
  0001d	8b fe		 mov	 edi, esi
  0001f	3b f0		 cmp	 esi, eax
  00021	7d 3b		 jge	 SHORT $LN3@Pop_heap_h
  00023	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL2@Pop_heap_h:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00030	ff 74 fb 04	 push	 DWORD PTR [ebx+edi*8+4]
  00034	8b 4c fb 08	 mov	 ecx, DWORD PTR [ebx+edi*8+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3365 :         _Idx = 2 * _Idx + 2;

  00038	8d 3c 7d 02 00
	00 00		 lea	 edi, DWORD PTR [edi*2+2]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0003f	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00044	84 c0		 test	 al, al
  00046	74 01		 je	 SHORT $LN4@Pop_heap_h

; 3367 :             --_Idx;

  00048	4f		 dec	 edi
$LN4@Pop_heap_h:

; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00049	8b 04 bb	 mov	 eax, DWORD PTR [ebx+edi*4]
  0004c	89 04 b3	 mov	 DWORD PTR [ebx+esi*4], eax

; 3370 :         _Hole             = _Idx;

  0004f	8b f7		 mov	 esi, edi
  00051	8b 45 fc	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00054	3b f8		 cmp	 edi, eax
  00056	7c d8		 jl	 SHORT $LL2@Pop_heap_h
  00058	8b 4d 0c	 mov	 ecx, DWORD PTR __Top$1$[ebp]
  0005b	8b 55 10	 mov	 edx, DWORD PTR __Bottom$[ebp]
$LN3@Pop_heap_h:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0005e	3b f8		 cmp	 edi, eax
  00060	75 0f		 jne	 SHORT $LN5@Pop_heap_h
  00062	f6 c2 01	 test	 dl, 1
  00065	75 0a		 jne	 SHORT $LN5@Pop_heap_h

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00067	8b 44 93 fc	 mov	 eax, DWORD PTR [ebx+edx*4-4]
  0006b	89 04 b3	 mov	 DWORD PTR [ebx+esi*4], eax

; 3375 :         _Hole             = _Bottom - 1;

  0006e	8d 72 ff	 lea	 esi, DWORD PTR [edx-1]
$LN5@Pop_heap_h:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00071	3b ce		 cmp	 ecx, esi
  00073	7d 23		 jge	 SHORT $LN24@Pop_heap_h
$LL12@Pop_heap_h:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00075	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00078	8d 7e ff	 lea	 edi, DWORD PTR [esi-1]
  0007b	d1 ff		 sar	 edi, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0007d	ff 30		 push	 DWORD PTR [eax]
  0007f	8b 0c bb	 mov	 ecx, DWORD PTR [ebx+edi*4]
  00082	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00087	84 c0		 test	 al, al
  00089	74 0d		 je	 SHORT $LN24@Pop_heap_h

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0008b	8b 04 bb	 mov	 eax, DWORD PTR [ebx+edi*4]
  0008e	89 04 b3	 mov	 DWORD PTR [ebx+esi*4], eax

; 3325 :         _Hole             = _Idx;

  00091	8b f7		 mov	 esi, edi
  00093	39 7d 0c	 cmp	 DWORD PTR __Top$1$[ebp], edi
  00096	7c dd		 jl	 SHORT $LL12@Pop_heap_h
$LN24@Pop_heap_h:

; 3376 :     }
; 3377 : 
; 3378 :     _Push_heap_by_index(_First, _Hole, _Top, _STD move(_Val), _Pred);
; 3379 : }

  00098	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  0009b	5f		 pop	 edi
  0009c	8b 00		 mov	 eax, DWORD PTR [eax]
  0009e	89 04 b3	 mov	 DWORD PTR [ebx+esi*4], eax
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAPAVCEffectInstance@@PAV1@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@HH$$QAPAV1@UCArea_LessEffectInstancePtrRenderOrder@@@Z ENDP ; std::_Pop_heap_hole_by_index<CEffectInstance * *,CEffectInstance *,CArea_LessEffectInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4502 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b d0		 mov	 edx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0000e	8b 10		 mov	 edx, DWORD PTR [eax]
$LN6@operator:

; 2144 :         const value_type* _Result = _Bx._Buf;

  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00016	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0001a	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001c	8b 31		 mov	 esi, DWORD PTR [ecx]
$LN11@operator:

; 4129 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  0001e	ff 70 10	 push	 DWORD PTR [eax+16]
  00021	52		 push	 edx
  00022	ff 71 10	 push	 DWORD PTR [ecx+16]
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  0002b	83 c4 10	 add	 esp, 16			; 00000010H

; 4503 :     return _Left.compare(_Right) < 0;

  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	5e		 pop	 esi

; 4504 : }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z PROC ; std::_Refancy<CArea::SCRCWithNumber *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z ENDP ; std::_Refancy<CArea::SCRCWithNumber *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCSpeedTreeWrapper@@PAPAV1@@std@@YAPAPAVCSpeedTreeWrapper@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCSpeedTreeWrapper@@PAPAV1@@std@@YAPAPAVCSpeedTreeWrapper@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CSpeedTreeWrapper * *,CSpeedTreeWrapper * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCSpeedTreeWrapper@@PAPAV1@@std@@YAPAPAVCSpeedTreeWrapper@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CSpeedTreeWrapper * *,CSpeedTreeWrapper * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAUSObjectInstance@CArea@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAUSObjectInstance@CArea@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0@Z PROC ; std::_Zero_range<CArea::SObjectInstance * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAUSObjectInstance@CArea@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0@Z ENDP ; std::_Zero_range<CArea::SObjectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSObjectInstance@CArea@@PAPAU12@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSObjectInstance@CArea@@PAPAU12@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CArea::SObjectInstance * *,CArea::SObjectInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSObjectInstance@CArea@@PAPAU12@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CArea::SObjectInstance * *,CArea::SObjectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCDungeonBlock@@PAPAV1@@std@@YAPAPAVCDungeonBlock@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCDungeonBlock@@PAPAV1@@std@@YAPAPAVCDungeonBlock@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CDungeonBlock * *,CDungeonBlock * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCDungeonBlock@@PAPAV1@@std@@YAPAPAVCDungeonBlock@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CDungeonBlock * *,CDungeonBlock * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSAmbienceInstance@CArea@@PAPAU12@@std@@YAPAPAUSAmbienceInstance@CArea@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSAmbienceInstance@CArea@@PAPAU12@@std@@YAPAPAUSAmbienceInstance@CArea@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CArea::SAmbienceInstance * *,CArea::SAmbienceInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSAmbienceInstance@CArea@@PAPAU12@@std@@YAPAPAUSAmbienceInstance@CArea@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CArea::SAmbienceInstance * *,CArea::SAmbienceInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z PROC ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ENDP ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCAttributeInstance@@PAPAV1@@std@@YAPAPAVCAttributeInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCAttributeInstance@@PAPAV1@@std@@YAPAPAVCAttributeInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CAttributeInstance * *,CAttributeInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCAttributeInstance@@PAPAV1@@std@@YAPAPAVCAttributeInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CAttributeInstance * *,CAttributeInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CArea * *,CArea * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CArea * *,CArea * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CEffectInstance * *,CEffectInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CEffectInstance * *,CEffectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@HPAX@std@@@std@@YAXAAPAU?$_Tree_node@HPAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 14		 push	 20			; 00000014H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 14		 push	 20			; 00000014H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YA?AU?$pair@PAUSObjectData@CArea@@PAU12@@0@PAUSObjectData@CArea@@0UObjectDataComp@3@@Z
_TEXT	SEGMENT
tv597 = -12						; size = 4
tv599 = -8						; size = 4
__Last$1$ = -4						; size = 4
__Gfirst$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Glast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YA?AU?$pair@PAUSObjectData@CArea@@PAU12@@0@PAUSObjectData@CArea@@0UObjectDataComp@3@@Z PROC ; std::_Partition_by_median_guess_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  00014	8b cb		 mov	 ecx, ebx
  00016	2b cf		 sub	 ecx, edi
  00018	f7 e9		 imul	 ecx

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  0001a	8d 43 d0	 lea	 eax, DWORD PTR [ebx-48]
  0001d	c1 fa 03	 sar	 edx, 3
  00020	8b ca		 mov	 ecx, edx
  00022	89 45 fc	 mov	 DWORD PTR __Last$1$[ebp], eax
  00025	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00028	03 ca		 add	 ecx, edx
  0002a	d1 f9		 sar	 ecx, 1
  0002c	8d 34 49	 lea	 esi, DWORD PTR [ecx+ecx*2]

; 4022 :     const _Diff _Count = _Last - _First;

  0002f	8b c8		 mov	 ecx, eax
  00031	2b cf		 sub	 ecx, edi

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00033	c1 e6 04	 shl	 esi, 4

; 4022 :     const _Diff _Count = _Last - _First;

  00036	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  0003b	03 f7		 add	 esi, edi

; 4022 :     const _Diff _Count = _Last - _First;

  0003d	f7 e9		 imul	 ecx
  0003f	c1 fa 03	 sar	 edx, 3
  00042	8b c2		 mov	 eax, edx
  00044	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00047	03 c2		 add	 eax, edx

; 4023 :     if (40 < _Count) { // Tukey's ninther

  00049	83 f8 28	 cmp	 eax, 40			; 00000028H
  0004c	7e 68		 jle	 SHORT $LN35@Partition_

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0004e	40		 inc	 eax
  0004f	c1 f8 03	 sar	 eax, 3

; 4025 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00052	8d 1c 40	 lea	 ebx, DWORD PTR [eax+eax*2]
  00055	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00058	c1 e3 04	 shl	 ebx, 4
  0005b	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0005e	c1 e1 05	 shl	 ecx, 5
  00061	03 c1		 add	 eax, ecx
  00063	89 4d f8	 mov	 DWORD PTR tv599[ebp], ecx
  00066	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00069	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  0006c	57		 push	 edi
  0006d	50		 push	 eax
  0006e	52		 push	 edx
  0006f	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  00072	89 55 f4	 mov	 DWORD PTR tv597[ebp], edx
  00075	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  0007a	57		 push	 edi
  0007b	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  0007e	50		 push	 eax
  0007f	8b c6		 mov	 eax, esi
  00081	2b c3		 sub	 eax, ebx
  00083	56		 push	 esi
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  0008a	8b 45 fc	 mov	 eax, DWORD PTR __Last$1$[ebp]
  0008d	8b f8		 mov	 edi, eax
  0008f	2b fb		 sub	 edi, ebx
  00091	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00094	53		 push	 ebx
  00095	50		 push	 eax
  00096	2b 45 f8	 sub	 eax, DWORD PTR tv599[ebp]
  00099	57		 push	 edi
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4029 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  000a0	53		 push	 ebx
  000a1	57		 push	 edi
  000a2	56		 push	 esi
  000a3	ff 75 f4	 push	 DWORD PTR tv597[ebp]
  000a6	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4030 :     } else {

  000ab	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  000ae	83 c4 40	 add	 esp, 64			; 00000040H
  000b1	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  000b4	eb 11		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 4031 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  000b6	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000b9	8d 43 d0	 lea	 eax, DWORD PTR [ebx-48]
  000bc	50		 push	 eax
  000bd	56		 push	 esi
  000be	57		 push	 edi
  000bf	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@00UObjectDataComp@2@@Z ; std::_Med3_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
  000c4	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  000c7	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000ca	3b fe		 cmp	 edi, esi
  000cc	73 13		 jae	 SHORT $LN110@Partition_
  000ce	66 90		 npad	 2
$LL2@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000d0	8b 46 dc	 mov	 eax, DWORD PTR [esi-36]
  000d3	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000d6	72 09		 jb	 SHORT $LN110@Partition_
  000d8	77 07		 ja	 SHORT $LN110@Partition_

; 4045 :         --_Pfirst;

  000da	83 ee 30	 sub	 esi, 48			; 00000030H
  000dd	3b fe		 cmp	 edi, esi
  000df	72 ef		 jb	 SHORT $LL2@Partition_
$LN110@Partition_:

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000e1	3b cb		 cmp	 ecx, ebx
  000e3	73 11		 jae	 SHORT $LN111@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000e5	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
$LL4@Partition_:
  000e8	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000eb	72 09		 jb	 SHORT $LN111@Partition_
  000ed	77 07		 ja	 SHORT $LN111@Partition_

; 4049 :         ++_Plast;

  000ef	83 c1 30	 add	 ecx, 48			; 00000030H
  000f2	3b cb		 cmp	 ecx, ebx
  000f4	72 f2		 jb	 SHORT $LL4@Partition_
$LN111@Partition_:
  000f6	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;

  000f9	8b c1		 mov	 eax, ecx

; 4053 :     _RanIt _Glast  = _Pfirst;

  000fb	8b fe		 mov	 edi, esi
$LN116@Partition_:

; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000fd	89 7d 14	 mov	 DWORD PTR __Glast$1$[ebp], edi
$LN115@Partition_:
  00100	89 45 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], eax
$LL6@Partition_:
  00103	3b c3		 cmp	 eax, ebx
  00105	73 56		 jae	 SHORT $LN90@Partition_
  00107	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  0010a	66 0f 1f 44 00
	00		 npad	 6
$LL11@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  00110	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00113	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  00116	72 35		 jb	 SHORT $LN9@Partition_

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  00118	77 3a		 ja	 SHORT $LN112@Partition_

; 4059 :                 break;
; 4060 :             } else if (_Plast != _Gfirst) {

  0011a	3b c8		 cmp	 ecx, eax
  0011c	74 2c		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0011e	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00121	0f 10 09	 movups	 xmm1, XMMWORD PTR [ecx]
  00124	0f 10 51 10	 movups	 xmm2, XMMWORD PTR [ecx+16]
  00128	0f 10 59 20	 movups	 xmm3, XMMWORD PTR [ecx+32]
  0012c	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0012f	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00133	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00137	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  0013b	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  0013f	0f 11 08	 movups	 XMMWORD PTR [eax], xmm1
  00142	0f 11 50 10	 movups	 XMMWORD PTR [eax+16], xmm2
  00146	0f 11 58 20	 movups	 XMMWORD PTR [eax+32], xmm3
$LN19@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0014a	83 c1 30	 add	 ecx, 48			; 00000030H
$LN9@Partition_:
  0014d	83 c0 30	 add	 eax, 48			; 00000030H
  00150	3b c7		 cmp	 eax, edi
  00152	72 bc		 jb	 SHORT $LL11@Partition_
$LN112@Partition_:
  00154	8b 7d 14	 mov	 edi, DWORD PTR __Glast$1$[ebp]
  00157	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]
  0015a	89 45 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], eax
$LN90@Partition_:

; 4068 :         for (; _First < _Glast; --_Glast) {

  0015d	3b fa		 cmp	 edi, edx
  0015f	76 58		 jbe	 SHORT $LN114@Partition_
  00161	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00164	8d 57 d0	 lea	 edx, DWORD PTR [edi-48]
$LL14@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  00167	8b 5a 0c	 mov	 ebx, DWORD PTR [edx+12]
  0016a	3b 5e 0c	 cmp	 ebx, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  0016d	72 35		 jb	 SHORT $LN12@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  0016f	77 3d		 ja	 SHORT $LN113@Partition_

; 4071 :                 break;
; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  00171	83 ee 30	 sub	 esi, 48			; 00000030H
  00174	3b f2		 cmp	 esi, edx
  00176	74 2c		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00178	0f 10 02	 movups	 xmm0, XMMWORD PTR [edx]
  0017b	0f 10 0e	 movups	 xmm1, XMMWORD PTR [esi]
  0017e	0f 10 56 10	 movups	 xmm2, XMMWORD PTR [esi+16]
  00182	0f 10 5e 20	 movups	 xmm3, XMMWORD PTR [esi+32]
  00186	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00189	0f 10 42 10	 movups	 xmm0, XMMWORD PTR [edx+16]
  0018d	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  00191	0f 10 42 20	 movups	 xmm0, XMMWORD PTR [edx+32]
  00195	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  00199	0f 11 0a	 movups	 XMMWORD PTR [edx], xmm1
  0019c	0f 11 52 10	 movups	 XMMWORD PTR [edx+16], xmm2
  001a0	0f 11 5a 20	 movups	 XMMWORD PTR [edx+32], xmm3
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4068 :         for (; _First < _Glast; --_Glast) {

  001a4	83 ef 30	 sub	 edi, 48			; 00000030H
  001a7	83 ea 30	 sub	 edx, 48			; 00000030H
  001aa	3b c7		 cmp	 eax, edi
  001ac	72 b9		 jb	 SHORT $LL14@Partition_
$LN113@Partition_:
  001ae	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  001b1	3b fa		 cmp	 edi, edx
  001b3	8b 45 fc	 mov	 eax, DWORD PTR __Gfirst$1$[ebp]
  001b6	89 7d 14	 mov	 DWORD PTR __Glast$1$[ebp], edi
$LN114@Partition_:
  001b9	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  001bc	75 72		 jne	 SHORT $LN27@Partition_
  001be	3b c3		 cmp	 eax, ebx
  001c0	0f 84 10 01 00
	00		 je	 $LN92@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  001c6	3b c8		 cmp	 ecx, eax
  001c8	74 2c		 je	 SHORT $LN67@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  001ca	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  001cd	0f 10 0e	 movups	 xmm1, XMMWORD PTR [esi]
  001d0	0f 10 56 10	 movups	 xmm2, XMMWORD PTR [esi+16]
  001d4	0f 10 5e 20	 movups	 xmm3, XMMWORD PTR [esi+32]
  001d8	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  001db	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  001df	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  001e3	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  001e7	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  001eb	0f 11 09	 movups	 XMMWORD PTR [ecx], xmm1
  001ee	0f 11 51 10	 movups	 XMMWORD PTR [ecx+16], xmm2
  001f2	0f 11 59 20	 movups	 XMMWORD PTR [ecx+32], xmm3
$LN67@Partition_:

; 107  :     _Left    = _STD move(_Right);

  001f6	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4086 :             ++_Plast;

  001f9	83 c1 30	 add	 ecx, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  001fc	0f 10 0e	 movups	 xmm1, XMMWORD PTR [esi]
  001ff	0f 10 56 10	 movups	 xmm2, XMMWORD PTR [esi+16]
  00203	0f 10 5e 20	 movups	 xmm3, XMMWORD PTR [esi+32]

; 107  :     _Left    = _STD move(_Right);

  00207	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  0020a	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  0020e	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  00212	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  00216	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4088 :             ++_Pfirst;

  0021a	83 c6 30	 add	 esi, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0021d	0f 11 08	 movups	 XMMWORD PTR [eax], xmm1
  00220	0f 11 50 10	 movups	 XMMWORD PTR [eax+16], xmm2
  00224	0f 11 58 20	 movups	 XMMWORD PTR [eax+32], xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  00228	83 c0 30	 add	 eax, 48			; 00000030H
  0022b	e9 d0 fe ff ff	 jmp	 $LN115@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00230	83 c7 d0	 add	 edi, -48		; ffffffd0H
  00233	89 7d 14	 mov	 DWORD PTR __Glast$1$[ebp], edi
  00236	3b c3		 cmp	 eax, ebx
  00238	75 68		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  0023a	83 ee 30	 sub	 esi, 48			; 00000030H
  0023d	3b fe		 cmp	 edi, esi
  0023f	74 2c		 je	 SHORT $LN75@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00241	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00244	0f 10 0f	 movups	 xmm1, XMMWORD PTR [edi]
  00247	0f 10 57 10	 movups	 xmm2, XMMWORD PTR [edi+16]
  0024b	0f 10 5f 20	 movups	 xmm3, XMMWORD PTR [edi+32]
  0024f	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  00252	0f 10 46 10	 movups	 xmm0, XMMWORD PTR [esi+16]
  00256	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
  0025a	0f 10 46 20	 movups	 xmm0, XMMWORD PTR [esi+32]
  0025e	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  00262	0f 11 0e	 movups	 XMMWORD PTR [esi], xmm1
  00265	0f 11 56 10	 movups	 XMMWORD PTR [esi+16], xmm2
  00269	0f 11 5e 20	 movups	 XMMWORD PTR [esi+32], xmm3
$LN75@Partition_:

; 107  :     _Left    = _STD move(_Right);

  0026d	0f 10 41 d0	 movups	 xmm0, XMMWORD PTR [ecx-48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00271	83 e9 30	 sub	 ecx, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00274	0f 10 0e	 movups	 xmm1, XMMWORD PTR [esi]
  00277	0f 10 56 10	 movups	 xmm2, XMMWORD PTR [esi+16]
  0027b	0f 10 5e 20	 movups	 xmm3, XMMWORD PTR [esi+32]

; 107  :     _Left    = _STD move(_Right);

  0027f	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00282	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00286	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  0028a	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  0028e	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0

; 108  :     _Right   = _STD move(_Tmp);

  00292	0f 11 09	 movups	 XMMWORD PTR [ecx], xmm1
  00295	0f 11 51 10	 movups	 XMMWORD PTR [ecx+16], xmm2
  00299	0f 11 59 20	 movups	 XMMWORD PTR [ecx+32], xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  0029d	e9 61 fe ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  002a2	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  002a5	0f 10 08	 movups	 xmm1, XMMWORD PTR [eax]
  002a8	0f 10 50 10	 movups	 xmm2, XMMWORD PTR [eax+16]
  002ac	0f 10 58 20	 movups	 xmm3, XMMWORD PTR [eax+32]
  002b0	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  002b3	0f 10 47 10	 movups	 xmm0, XMMWORD PTR [edi+16]
  002b7	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  002bb	0f 10 47 20	 movups	 xmm0, XMMWORD PTR [edi+32]
  002bf	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4098 :             ++_Gfirst;

  002c3	83 c0 30	 add	 eax, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  002c6	0f 11 0f	 movups	 XMMWORD PTR [edi], xmm1
  002c9	0f 11 57 10	 movups	 XMMWORD PTR [edi+16], xmm2
  002cd	0f 11 5f 20	 movups	 XMMWORD PTR [edi+32], xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  002d1	e9 27 fe ff ff	 jmp	 $LN116@Partition_
$LN92@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002d6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  002d9	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002da	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  002dc	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002dd	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  002e0	5b		 pop	 ebx

; 4101 : }

  002e1	8b e5		 mov	 esp, ebp
  002e3	5d		 pop	 ebp
  002e4	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YA?AU?$pair@PAUSObjectData@CArea@@PAU12@@0@PAUSObjectData@CArea@@0UObjectDataComp@3@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0UObjectDataComp@2@@Z
_TEXT	SEGMENT
__Val$1 = -60						; size = 48
tv327 = -12						; size = 4
tv345 = -8						; size = 4
__Bottom$1$ = -4					; size = 4
__Hole$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Max_sequence_non_leaf$1$ = 12				; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Make_heap_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0UObjectDataComp@2@@Z PROC ; std::_Make_heap_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>, COMDAT

; 3416 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH

; 3417 :     // make nontrivial [_First, _Last) into a heap, using _Pred
; 3418 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 3419 :     _Diff _Bottom = _Last - _First;

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000e	53		 push	 ebx
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00013	2b cf		 sub	 ecx, edi
  00015	f7 e9		 imul	 ecx
  00017	c1 fa 03	 sar	 edx, 3
  0001a	8b c2		 mov	 eax, edx
  0001c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001f	03 c2		 add	 eax, edx

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00021	8b d8		 mov	 ebx, eax
  00023	89 45 fc	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  00026	d1 fb		 sar	 ebx, 1
  00028	85 db		 test	 ebx, ebx
  0002a	0f 8e 1c 01 00
	00		 jle	 $LN3@Make_heap_

; 3417 :     // make nontrivial [_First, _Last) into a heap, using _Pred
; 3418 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 3419 :     _Diff _Bottom = _Last - _First;

  00030	48		 dec	 eax
  00031	8b c8		 mov	 ecx, eax
  00033	89 45 f8	 mov	 DWORD PTR tv345[ebp], eax
  00036	8d 04 5b	 lea	 eax, DWORD PTR [ebx+ebx*2]
  00039	d1 f9		 sar	 ecx, 1
  0003b	c1 e0 04	 shl	 eax, 4
  0003e	89 4d 0c	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ecx
  00041	03 c7		 add	 eax, edi
  00043	56		 push	 esi
$LL2@Make_heap_:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00044	0f 10 48 d0	 movups	 xmm1, XMMWORD PTR [eax-48]
  00048	83 e8 30	 sub	 eax, 48			; 00000030H
  0004b	4b		 dec	 ebx
  0004c	89 5d 08	 mov	 DWORD PTR __Hole$1$[ebp], ebx

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  0004f	8b f3		 mov	 esi, ebx
  00051	89 45 f4	 mov	 DWORD PTR tv327[ebp], eax

; 3359 :     _Diff _Idx       = _Hole;

  00054	8b d3		 mov	 edx, ebx

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00056	0f 11 4d c4	 movups	 XMMWORD PTR __Val$1[ebp], xmm1
  0005a	0f 10 50 10	 movups	 xmm2, XMMWORD PTR [eax+16]
  0005e	0f 10 58 20	 movups	 xmm3, XMMWORD PTR [eax+32]

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00062	3b d9		 cmp	 ebx, ecx
  00064	7d 52		 jge	 SHORT $LN8@Make_heap_
  00066	8b 5d 0c	 mov	 ebx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00069	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@Make_heap_:

; 3365 :         _Idx = 2 * _Idx + 2;

  00070	03 d2		 add	 edx, edx

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00072	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00075	03 c9		 add	 ecx, ecx

; 3367 :             --_Idx;
; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00077	8b 44 cf 6c	 mov	 eax, DWORD PTR [edi+ecx*8+108]
  0007b	3b 44 cf 3c	 cmp	 eax, DWORD PTR [edi+ecx*8+60]
  0007f	1b c0		 sbb	 eax, eax
  00081	83 c0 02	 add	 eax, 2
  00084	03 d0		 add	 edx, eax
  00086	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00089	03 c0		 add	 eax, eax

; 3370 :         _Hole             = _Idx;

  0008b	8b f2		 mov	 esi, edx
  0008d	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00090	03 c9		 add	 ecx, ecx
  00092	0f 10 04 cf	 movups	 xmm0, XMMWORD PTR [edi+ecx*8]
  00096	0f 11 04 c7	 movups	 XMMWORD PTR [edi+eax*8], xmm0
  0009a	0f 10 44 cf 10	 movups	 xmm0, XMMWORD PTR [edi+ecx*8+16]
  0009f	0f 11 44 c7 10	 movups	 XMMWORD PTR [edi+eax*8+16], xmm0
  000a4	0f 10 44 cf 20	 movups	 xmm0, XMMWORD PTR [edi+ecx*8+32]
  000a9	0f 11 44 c7 20	 movups	 XMMWORD PTR [edi+eax*8+32], xmm0
  000ae	3b d3		 cmp	 edx, ebx
  000b0	7c be		 jl	 SHORT $LL7@Make_heap_
  000b2	8b 5d 08	 mov	 ebx, DWORD PTR __Hole$1$[ebp]
  000b5	8b 4d 0c	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN8@Make_heap_:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  000b8	3b f1		 cmp	 esi, ecx
  000ba	75 31		 jne	 SHORT $LN10@Make_heap_
  000bc	8b 45 fc	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  000bf	a8 01		 test	 al, 1
  000c1	75 2a		 jne	 SHORT $LN10@Make_heap_

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  000c3	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  000c6	03 c9		 add	 ecx, ecx
  000c8	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]

; 3375 :         _Hole             = _Bottom - 1;

  000cb	8b 75 f8	 mov	 esi, DWORD PTR tv345[ebp]
  000ce	03 c0		 add	 eax, eax
  000d0	0f 10 44 cf d0	 movups	 xmm0, XMMWORD PTR [edi+ecx*8-48]
  000d5	0f 11 04 c7	 movups	 XMMWORD PTR [edi+eax*8], xmm0
  000d9	0f 10 44 cf e0	 movups	 xmm0, XMMWORD PTR [edi+ecx*8-32]
  000de	0f 11 44 c7 10	 movups	 XMMWORD PTR [edi+eax*8+16], xmm0
  000e3	0f 10 44 cf f0	 movups	 xmm0, XMMWORD PTR [edi+ecx*8-16]
  000e8	0f 11 44 c7 20	 movups	 XMMWORD PTR [edi+eax*8+32], xmm0
$LN10@Make_heap_:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000ed	3b de		 cmp	 ebx, esi
  000ef	7d 39		 jge	 SHORT $LN33@Make_heap_
$LL17@Make_heap_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000f1	8b 4d d0	 mov	 ecx, DWORD PTR __Val$1[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  000f4	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  000f7	d1 f8		 sar	 eax, 1

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000f9	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  000fc	c1 e2 04	 shl	 edx, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000ff	03 d7		 add	 edx, edi
  00101	39 4a 0c	 cmp	 DWORD PTR [edx+12], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00104	73 24		 jae	 SHORT $LN33@Make_heap_

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00106	0f 10 02	 movups	 xmm0, XMMWORD PTR [edx]
  00109	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]

; 3325 :         _Hole             = _Idx;

  0010c	8b f0		 mov	 esi, eax
  0010e	03 c9		 add	 ecx, ecx
  00110	0f 11 04 cf	 movups	 XMMWORD PTR [edi+ecx*8], xmm0
  00114	0f 10 42 10	 movups	 xmm0, XMMWORD PTR [edx+16]
  00118	0f 11 44 cf 10	 movups	 XMMWORD PTR [edi+ecx*8+16], xmm0
  0011d	0f 10 42 20	 movups	 xmm0, XMMWORD PTR [edx+32]
  00121	0f 11 44 cf 20	 movups	 XMMWORD PTR [edi+ecx*8+32], xmm0
  00126	3b d8		 cmp	 ebx, eax
  00128	7c c7		 jl	 SHORT $LL17@Make_heap_
$LN33@Make_heap_:

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  0012a	8b 4d 0c	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]

; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  0012d	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00130	03 c0		 add	 eax, eax
  00132	0f 11 0c c7	 movups	 XMMWORD PTR [edi+eax*8], xmm1
  00136	0f 11 54 c7 10	 movups	 XMMWORD PTR [edi+eax*8+16], xmm2
  0013b	0f 11 5c c7 20	 movups	 XMMWORD PTR [edi+eax*8+32], xmm3

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00140	8b 45 f4	 mov	 eax, DWORD PTR tv327[ebp]
  00143	85 db		 test	 ebx, ebx
  00145	0f 8f f9 fe ff
	ff		 jg	 $LL2@Make_heap_
  0014b	5e		 pop	 esi
$LN3@Make_heap_:
  0014c	5f		 pop	 edi

; 3425 :     }
; 3426 : }

  0014d	5b		 pop	 ebx
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c3		 ret	 0
??$_Make_heap_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0UObjectDataComp@2@@Z ENDP ; std::_Make_heap_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv697 = -12						; size = 4
__Last$1$ = -12						; size = 4
tv692 = -8						; size = 4
__Gfirst$1$ = -8					; size = 4
$T2 = -4						; size = 4
tv691 = -4						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Glast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z PROC ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00011	83 c1 f8	 add	 ecx, -8			; fffffff8H
  00014	2b c7		 sub	 eax, edi
  00016	89 4d f4	 mov	 DWORD PTR __Last$1$[ebp], ecx
  00019	c1 f8 04	 sar	 eax, 4
  0001c	8d 34 c7	 lea	 esi, DWORD PTR [edi+eax*8]

; 4022 :     const _Diff _Count = _Last - _First;

  0001f	8b c1		 mov	 eax, ecx
  00021	2b c7		 sub	 eax, edi
  00023	c1 f8 03	 sar	 eax, 3

; 4023 :     if (40 < _Count) { // Tukey's ninther

  00026	83 f8 28	 cmp	 eax, 40			; 00000028H
  00029	7e 65		 jle	 SHORT $LN35@Partition_

; 4024 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0002b	40		 inc	 eax
  0002c	c1 f8 03	 sar	 eax, 3

; 4025 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 4026 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002f	8b c8		 mov	 ecx, eax
  00031	c1 e1 04	 shl	 ecx, 4
  00034	89 4d f8	 mov	 DWORD PTR tv692[ebp], ecx
  00037	8d 1c c5 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*8]
  0003e	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00041	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00044	03 c1		 add	 eax, ecx
  00046	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  00049	57		 push	 edi
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  0004f	89 55 fc	 mov	 DWORD PTR tv691[ebp], edx
  00052	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4027 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00057	57		 push	 edi
  00058	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  0005b	50		 push	 eax
  0005c	8b c6		 mov	 eax, esi
  0005e	2b c3		 sub	 eax, ebx
  00060	56		 push	 esi
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4028 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00067	8b 45 f4	 mov	 eax, DWORD PTR __Last$1$[ebp]
  0006a	8b f8		 mov	 edi, eax
  0006c	2b fb		 sub	 edi, ebx
  0006e	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00071	53		 push	 ebx
  00072	50		 push	 eax
  00073	2b 45 f8	 sub	 eax, DWORD PTR tv692[ebp]
  00076	57		 push	 edi
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4029 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007d	53		 push	 ebx
  0007e	57		 push	 edi
  0007f	56		 push	 esi
  00080	ff 75 fc	 push	 DWORD PTR tv691[ebp]
  00083	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4030 :     } else {

  00088	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  0008b	83 c4 40	 add	 esp, 64			; 00000040H
  0008e	eb 0e		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 4031 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00090	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00093	51		 push	 ecx
  00094	56		 push	 esi
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009e	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  000a1	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a4	3b fe		 cmp	 edi, esi
  000a6	73 11		 jae	 SHORT $LN111@Partition_
$LL2@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000a8	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  000ab	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000ae	77 09		 ja	 SHORT $LN111@Partition_
  000b0	72 07		 jb	 SHORT $LN111@Partition_

; 4045 :         --_Pfirst;

  000b2	83 ee 08	 sub	 esi, 8
  000b5	3b fe		 cmp	 edi, esi
  000b7	72 ef		 jb	 SHORT $LL2@Partition_
$LN111@Partition_:

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000b9	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  000bc	3b da		 cmp	 ebx, edx
  000be	73 14		 jae	 SHORT $LN5@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000c0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LL4@Partition_:
  000c3	39 4b 04	 cmp	 DWORD PTR [ebx+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000c6	77 09		 ja	 SHORT $LN112@Partition_
  000c8	72 07		 jb	 SHORT $LN112@Partition_

; 4049 :         ++_Plast;

  000ca	83 c3 08	 add	 ebx, 8
  000cd	3b da		 cmp	 ebx, edx
  000cf	72 f2		 jb	 SHORT $LL4@Partition_
$LN112@Partition_:
  000d1	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
$LN5@Partition_:

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;
; 4053 :     _RanIt _Glast  = _Pfirst;

  000d4	8b c6		 mov	 eax, esi
  000d6	8b fb		 mov	 edi, ebx
  000d8	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
$LN116@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000db	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
  000de	66 90		 npad	 2
$LL6@Partition_:
  000e0	3b fa		 cmp	 edi, edx
  000e2	73 42		 jae	 SHORT $LN90@Partition_
$LL11@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000e4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e7	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  000ea	77 2a		 ja	 SHORT $LN9@Partition_

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  000ec	72 2f		 jb	 SHORT $LN113@Partition_

; 4059 :                 break;
; 4060 :             } else if (_Plast != _Gfirst) {

  000ee	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  000f1	89 45 f4	 mov	 DWORD PTR tv697[ebp], eax
  000f4	3b df		 cmp	 ebx, edi
  000f6	74 1c		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  000f8	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  000fa	8b 07		 mov	 eax, DWORD PTR [edi]
  000fc	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  000ff	89 03		 mov	 DWORD PTR [ebx], eax
  00101	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00104	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4062 :                 ++_Plast;

  00107	8b 5d f4	 mov	 ebx, DWORD PTR tv697[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0010a	89 57 04	 mov	 DWORD PTR [edi+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  0010d	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00110	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4063 :             } else {

  00112	eb 02		 jmp	 SHORT $LN9@Partition_
$LN19@Partition_:

; 4064 :                 ++_Plast;

  00114	8b d8		 mov	 ebx, eax
$LN9@Partition_:

; 4054 : 
; 4055 :     for (;;) { // partition
; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00116	83 c7 08	 add	 edi, 8
  00119	3b fa		 cmp	 edi, edx
  0011b	72 c7		 jb	 SHORT $LL11@Partition_
$LN113@Partition_:
  0011d	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00120	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  00123	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
$LN90@Partition_:

; 4068 :         for (; _First < _Glast; --_Glast) {

  00126	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00129	3b c1		 cmp	 eax, ecx
  0012b	76 48		 jbe	 SHORT $LN115@Partition_
  0012d	8d 78 f8	 lea	 edi, DWORD PTR [eax-8]
  00130	8b d9		 mov	 ebx, ecx
$LL14@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00132	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00135	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  00138	77 20		 ja	 SHORT $LN12@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  0013a	72 2b		 jb	 SHORT $LN114@Partition_

; 4071 :                 break;
; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  0013c	83 ee 08	 sub	 esi, 8
  0013f	3b f7		 cmp	 esi, edi
  00141	74 17		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00143	8b 07		 mov	 eax, DWORD PTR [edi]
  00145	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00147	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0014a	89 06		 mov	 DWORD PTR [esi], eax
  0014c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0014f	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00152	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]

; 108  :     _Right   = _STD move(_Tmp);

  00155	89 0f		 mov	 DWORD PTR [edi], ecx
  00157	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4068 :         for (; _First < _Glast; --_Glast) {

  0015a	83 e8 08	 sub	 eax, 8
  0015d	83 ef 08	 sub	 edi, 8
  00160	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
  00163	3b d8		 cmp	 ebx, eax
  00165	72 cb		 jb	 SHORT $LL14@Partition_
$LN114@Partition_:
  00167	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  0016a	3b c1		 cmp	 eax, ecx
  0016c	8b 7d f8	 mov	 edi, DWORD PTR __Gfirst$1$[ebp]
  0016f	8b 5d fc	 mov	 ebx, DWORD PTR __Plast$1$[ebp]
  00172	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
$LN115@Partition_:
  00175	75 4b		 jne	 SHORT $LN27@Partition_
  00177	3b fa		 cmp	 edi, edx
  00179	0f 84 d0 00 00
	00		 je	 $LN92@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  0017f	3b df		 cmp	 ebx, edi
  00181	74 14		 je	 SHORT $LN67@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00183	8b 03		 mov	 eax, DWORD PTR [ebx]
  00185	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00187	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0018a	89 06		 mov	 DWORD PTR [esi], eax
  0018c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0018f	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00192	89 0b		 mov	 DWORD PTR [ebx], ecx
  00194	89 53 04	 mov	 DWORD PTR [ebx+4], edx
$LN67@Partition_:

; 107  :     _Left    = _STD move(_Right);

  00197	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4086 :             ++_Plast;

  00199	83 c3 08	 add	 ebx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0019c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0019e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]

; 107  :     _Left    = _STD move(_Right);

  001a1	89 06		 mov	 DWORD PTR [esi], eax
  001a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001a6	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4088 :             ++_Pfirst;

  001a9	83 c6 08	 add	 esi, 8

; 4089 :             ++_Gfirst;

  001ac	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  001af	89 57 04	 mov	 DWORD PTR [edi+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  001b2	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  001b5	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  001b7	83 c7 08	 add	 edi, 8
  001ba	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  001bd	e9 19 ff ff ff	 jmp	 $LN116@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  001c2	83 c0 f8	 add	 eax, -8			; fffffff8H
  001c5	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
  001c8	3b fa		 cmp	 edi, edx
  001ca	75 5b		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  001cc	83 ee 08	 sub	 esi, 8
  001cf	3b c6		 cmp	 eax, esi
  001d1	74 25		 je	 SHORT $LN102@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  001d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001d8	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx

; 107  :     _Left    = _STD move(_Right);

  001db	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  001de	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  001e1	8b 06		 mov	 eax, DWORD PTR [esi]
  001e3	89 01		 mov	 DWORD PTR [ecx], eax
  001e5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001e8	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  001eb	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  001ee	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  001f1	89 0e		 mov	 DWORD PTR [esi], ecx
  001f3	89 46 04	 mov	 DWORD PTR [esi+4], eax
  001f6	eb 0e		 jmp	 SHORT $LN75@Partition_
$LN102@Partition_:
  001f8	8b 06		 mov	 eax, DWORD PTR [esi]
  001fa	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  001fd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00200	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  00203	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
$LN75@Partition_:

; 107  :     _Left    = _STD move(_Right);

  00206	8b 43 f8	 mov	 eax, DWORD PTR [ebx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00209	83 eb 08	 sub	 ebx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0020c	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  0020e	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00211	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00214	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  00217	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  0021a	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  0021d	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00220	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  00222	e9 b9 fe ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00227	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00229	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4097 :             _STD iter_swap(_Gfirst, --_Glast);

  0022c	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  0022f	8b 00		 mov	 eax, DWORD PTR [eax]
  00231	89 07		 mov	 DWORD PTR [edi], eax
  00233	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00236	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00239	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4098 :             ++_Gfirst;

  0023c	83 c7 08	 add	 edi, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  0023f	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00242	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  00245	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00248	89 08		 mov	 DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  0024a	e9 8c fe ff ff	 jmp	 $LN116@Partition_
$LN92@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0024f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00252	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00253	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00255	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00256	89 58 04	 mov	 DWORD PTR [eax+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00259	5b		 pop	 ebx

; 4101 : }

  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCEffectInstance@@PAPAV1@@0@PAPAVCEffectInstance@@0UCArea_LessEffectInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Gfirst$1$ = -12					; size = 4
__Glast$1$ = -8						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCEffectInstance@@PAPAV1@@0@PAPAVCEffectInstance@@0UCArea_LessEffectInstancePtrRenderOrder@@@Z PROC ; std::_Partition_by_median_guess_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>, COMDAT

; 4036 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 4037 :     // partition [_First, _Last), using _Pred
; 4038 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  0000f	8b c7		 mov	 eax, edi

; 4039 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00011	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00014	2b c1		 sub	 eax, ecx
  00016	c1 f8 03	 sar	 eax, 3
  00019	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0001c	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  0001f	50		 push	 eax
  00020	56		 push	 esi
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??$_Guess_median_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@00UCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Guess_median_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
  00027	83 c4 10	 add	 esp, 16			; 00000010H

; 4040 :     _RanIt _Pfirst = _Mid;
; 4041 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0002a	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  0002d	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00030	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  00033	73 31		 jae	 SHORT $LN82@Partition_
  00035	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
  00038	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00040	ff 36		 push	 DWORD PTR [esi]
  00042	8b 4e fc	 mov	 ecx, DWORD PTR [esi-4]
  00045	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  0004a	84 c0		 test	 al, al
  0004c	75 15		 jne	 SHORT $LN107@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0004e	ff 76 fc	 push	 DWORD PTR [esi-4]
  00051	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00053	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4044 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00058	84 c0		 test	 al, al
  0005a	75 07		 jne	 SHORT $LN107@Partition_

; 4045 :         --_Pfirst;

  0005c	83 c6 fc	 add	 esi, -4			; fffffffcH
  0005f	3b de		 cmp	 ebx, esi
  00061	72 dd		 jb	 SHORT $LL2@Partition_
$LN107@Partition_:
  00063	8b 5d fc	 mov	 ebx, DWORD PTR __Plast$1$[ebp]
$LN82@Partition_:

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00066	3b df		 cmp	 ebx, edi
  00068	73 2a		 jae	 SHORT $LN5@Partition_
  0006a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00070	ff 36		 push	 DWORD PTR [esi]
  00072	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00074	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00079	84 c0		 test	 al, al
  0007b	75 14		 jne	 SHORT $LN108@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0007d	ff 33		 push	 DWORD PTR [ebx]
  0007f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00081	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4048 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00086	84 c0		 test	 al, al
  00088	75 07		 jne	 SHORT $LN108@Partition_

; 4049 :         ++_Plast;

  0008a	83 c3 04	 add	 ebx, 4
  0008d	3b df		 cmp	 ebx, edi
  0008f	72 df		 jb	 SHORT $LL4@Partition_
$LN108@Partition_:
  00091	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
$LN5@Partition_:

; 4050 :     }
; 4051 : 
; 4052 :     _RanIt _Gfirst = _Plast;

  00094	8b fb		 mov	 edi, ebx

; 4053 :     _RanIt _Glast  = _Pfirst;

  00096	8b d6		 mov	 edx, esi
$LN114@Partition_:

; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00098	89 55 f8	 mov	 DWORD PTR __Glast$1$[ebp], edx
$LN113@Partition_:
  0009b	89 7d f4	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
  0009e	66 90		 npad	 2
$LL6@Partition_:
  000a0	3b 7d 10	 cmp	 edi, DWORD PTR __Last$[ebp]
  000a3	73 3a		 jae	 SHORT $LN86@Partition_
$LL11@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000a5	ff 37		 push	 DWORD PTR [edi]
  000a7	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000a9	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4057 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  000ae	84 c0		 test	 al, al
  000b0	75 1c		 jne	 SHORT $LN9@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000b2	ff 36		 push	 DWORD PTR [esi]
  000b4	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000b6	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4058 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  000bb	84 c0		 test	 al, al
  000bd	75 17		 jne	 SHORT $LN109@Partition_

; 4059 :                 break;
; 4060 :             } else if (_Plast != _Gfirst) {

  000bf	3b df		 cmp	 ebx, edi
  000c1	74 08		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  000c3	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 107  :     _Left    = _STD move(_Right);

  000c5	8b 07		 mov	 eax, DWORD PTR [edi]
  000c7	89 03		 mov	 DWORD PTR [ebx], eax

; 108  :     _Right   = _STD move(_Tmp);

  000c9	89 0f		 mov	 DWORD PTR [edi], ecx
$LN19@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4056 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000cb	83 c3 04	 add	 ebx, 4
$LN9@Partition_:
  000ce	83 c7 04	 add	 edi, 4
  000d1	3b 7d 10	 cmp	 edi, DWORD PTR __Last$[ebp]
  000d4	72 cf		 jb	 SHORT $LL11@Partition_
$LN109@Partition_:
  000d6	8b 55 f8	 mov	 edx, DWORD PTR __Glast$1$[ebp]
  000d9	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  000dc	89 7d f4	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
$LN86@Partition_:

; 4068 :         for (; _First < _Glast; --_Glast) {

  000df	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  000e2	3b d0		 cmp	 edx, eax
  000e4	76 53		 jbe	 SHORT $LN112@Partition_
  000e6	8b 5d f8	 mov	 ebx, DWORD PTR __Glast$1$[ebp]
  000e9	8d 7b fc	 lea	 edi, DWORD PTR [ebx-4]
  000ec	0f 1f 40 00	 npad	 4
$LL14@Partition_:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000f0	ff 36		 push	 DWORD PTR [esi]
  000f2	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000f4	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4069 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  000f9	84 c0		 test	 al, al
  000fb	75 1c		 jne	 SHORT $LN12@Partition_
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000fd	ff 37		 push	 DWORD PTR [edi]
  000ff	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00101	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00106	84 c0		 test	 al, al
  00108	75 1e		 jne	 SHORT $LN111@Partition_

; 4071 :                 break;
; 4072 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  0010a	83 ee 04	 sub	 esi, 4
  0010d	3b f7		 cmp	 esi, edi
  0010f	74 08		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00111	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  00113	8b 07		 mov	 eax, DWORD PTR [edi]
  00115	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  00117	89 0f		 mov	 DWORD PTR [edi], ecx
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4068 :         for (; _First < _Glast; --_Glast) {

  00119	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0011c	83 eb 04	 sub	 ebx, 4
  0011f	83 ef 04	 sub	 edi, 4
  00122	3b c3		 cmp	 eax, ebx
  00124	72 ca		 jb	 SHORT $LL14@Partition_

; 4070 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  00126	eb 03		 jmp	 SHORT $LN110@Partition_
$LN111@Partition_:
  00128	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN110@Partition_:
  0012b	8b 7d f4	 mov	 edi, DWORD PTR __Gfirst$1$[ebp]
  0012e	89 5d f8	 mov	 DWORD PTR __Glast$1$[ebp], ebx
  00131	8b 55 f8	 mov	 edx, DWORD PTR __Glast$1$[ebp]

; 4073 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 4074 :             }
; 4075 :         }
; 4076 : 
; 4077 :         if (_Glast == _First && _Gfirst == _Last) {

  00134	3b d0		 cmp	 edx, eax
  00136	8b 5d fc	 mov	 ebx, DWORD PTR __Plast$1$[ebp]
$LN112@Partition_:
  00139	75 2a		 jne	 SHORT $LN27@Partition_
  0013b	3b 7d 10	 cmp	 edi, DWORD PTR __Last$[ebp]
  0013e	74 73		 je	 SHORT $LN88@Partition_

; 4079 :         }
; 4080 : 
; 4081 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 4082 :             if (_Plast != _Gfirst) {

  00140	3b df		 cmp	 ebx, edi
  00142	74 08		 je	 SHORT $LN63@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00144	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 107  :     _Left    = _STD move(_Right);

  00146	8b 03		 mov	 eax, DWORD PTR [ebx]
  00148	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0014a	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN63@Partition_:

; 106  :     _Ty _Tmp = _STD move(_Left);

  0014c	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4086 :             ++_Plast;

  0014e	83 c3 04	 add	 ebx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00151	8b 07		 mov	 eax, DWORD PTR [edi]
  00153	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4088 :             ++_Pfirst;

  00155	83 c6 04	 add	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00158	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4089 :             ++_Gfirst;

  0015a	83 c7 04	 add	 edi, 4
  0015d	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  00160	e9 36 ff ff ff	 jmp	 $LN113@Partition_
$LN27@Partition_:

; 4090 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00165	83 c2 fc	 add	 edx, -4			; fffffffcH
  00168	89 55 f8	 mov	 DWORD PTR __Glast$1$[ebp], edx
  0016b	3b 7d 10	 cmp	 edi, DWORD PTR __Last$[ebp]
  0016e	75 33		 jne	 SHORT $LN30@Partition_

; 4091 :             if (--_Glast != --_Pfirst) {

  00170	83 ee 04	 sub	 esi, 4
  00173	3b d6		 cmp	 edx, esi
  00175	74 19		 je	 SHORT $LN98@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00177	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00179	83 eb 04	 sub	 ebx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  0017c	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 107  :     _Left    = _STD move(_Right);

  0017e	89 02		 mov	 DWORD PTR [edx], eax

; 108  :     _Right   = _STD move(_Tmp);

  00180	89 0e		 mov	 DWORD PTR [esi], ecx

; 107  :     _Left    = _STD move(_Right);

  00182	8b 03		 mov	 eax, DWORD PTR [ebx]
  00184	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00186	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00189	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  0018b	e9 10 ff ff ff	 jmp	 $LL6@Partition_
$LN98@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  00190	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4095 :             _STD iter_swap(_Pfirst, --_Plast);

  00192	83 eb 04	 sub	 ebx, 4
  00195	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00198	8b 03		 mov	 eax, DWORD PTR [ebx]
  0019a	89 06		 mov	 DWORD PTR [esi], eax

; 108  :     _Right   = _STD move(_Tmp);

  0019c	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4096 :         } else {

  0019e	e9 fd fe ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  001a3	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 107  :     _Left    = _STD move(_Right);

  001a5	8b 02		 mov	 eax, DWORD PTR [edx]
  001a7	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4098 :             ++_Gfirst;

  001a9	83 c7 04	 add	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 108  :     _Right   = _STD move(_Tmp);

  001ac	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4100 :     }

  001ae	e9 e5 fe ff ff	 jmp	 $LN114@Partition_
$LN88@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001b3	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  001b6	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001b7	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  001b9	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001ba	89 58 04	 mov	 DWORD PTR [eax+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4078 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  001bd	5b		 pop	 ebx

; 4101 : }

  001be	8b e5		 mov	 esp, ebp
  001c0	5d		 pop	 ebp
  001c1	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCEffectInstance@@PAPAV1@@0@PAPAVCEffectInstance@@0UCArea_LessEffectInstancePtrRenderOrder@@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z PROC		; std::_Refancy<char const *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z ENDP		; std::_Refancy<char const *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAPAPAVCSpeedTreeWrapper@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAPAPAVCSpeedTreeWrapper@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z PROC ; std::_Uninitialized_move<CSpeedTreeWrapper * *,std::allocator<CSpeedTreeWrapper *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSpeedTreeWrapper@@PAPAV1@@std@@YAPAPAVCSpeedTreeWrapper@@PAPAV1@00@Z ; std::_Copy_memmove<CSpeedTreeWrapper * *,CSpeedTreeWrapper * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAPAPAVCSpeedTreeWrapper@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z ENDP ; std::_Uninitialized_move<CSpeedTreeWrapper * *,std::allocator<CSpeedTreeWrapper *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@YAPAUSObjectData@CArea@@QAU12@0PAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@YAPAUSObjectData@CArea@@QAU12@0PAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea::SObjectData *,std::allocator<CArea::SObjectData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000c	3b ca		 cmp	 ecx, edx
  0000e	74 20		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00010	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00013	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00016	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0001a	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  0001e	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]

; 1509 :         ++_Last;

  00022	83 c1 30	 add	 ecx, 48			; 00000030H

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00025	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0

; 1509 :         ++_Last;

  00029	83 c0 30	 add	 eax, 48			; 00000030H

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0002c	3b ca		 cmp	 ecx, edx
  0002e	75 e0		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??$_Uninitialized_move@PAUSObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@YAPAUSObjectData@CArea@@QAU12@0PAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea::SObjectData *,std::allocator<CArea::SObjectData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@IAAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@IAAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CArea::SObjectInstance *> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000d	56		 push	 esi
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAUSObjectInstance@CArea@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0@Z ; std::_Zero_range<CArea::SObjectInstance * *>
  00014	83 c4 08	 add	 esp, 8

; 1830 :         return _First + _Count;

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi

; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {
; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@IAAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CArea::SObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea::SObjectInstance * *,std::allocator<CArea::SObjectInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSObjectInstance@CArea@@PAPAU12@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@00@Z ; std::_Copy_memmove<CArea::SObjectInstance * *,CArea::SObjectInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea::SObjectInstance * *,std::allocator<CArea::SObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicThingInstance * *,std::allocator<CGraphicThingInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicThingInstance * *,std::allocator<CGraphicThingInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAPAPAVCDungeonBlock@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAPAPAVCDungeonBlock@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z PROC ; std::_Uninitialized_move<CDungeonBlock * *,std::allocator<CDungeonBlock *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCDungeonBlock@@PAPAV1@@std@@YAPAPAVCDungeonBlock@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonBlock * *,CDungeonBlock * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAPAPAVCDungeonBlock@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z ENDP ; std::_Uninitialized_move<CDungeonBlock * *,std::allocator<CDungeonBlock *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAPAPAUSAmbienceInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAPAPAUSAmbienceInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea::SAmbienceInstance * *,std::allocator<CArea::SAmbienceInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAmbienceInstance@CArea@@PAPAU12@@std@@YAPAPAUSAmbienceInstance@CArea@@PAPAU12@00@Z ; std::_Copy_memmove<CArea::SAmbienceInstance * *,CArea::SAmbienceInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAPAPAUSAmbienceInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea::SAmbienceInstance * *,std::allocator<CArea::SAmbienceInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 03	 sar	 edi, 3
  0001e	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAPAPAVCAttributeInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAPAPAVCAttributeInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z PROC ; std::_Uninitialized_move<CAttributeInstance * *,std::allocator<CAttributeInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCAttributeInstance@@PAPAV1@@std@@YAPAPAVCAttributeInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CAttributeInstance * *,CAttributeInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAPAPAVCAttributeInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CAttributeInstance * *,std::allocator<CAttributeInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z PROC ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ENDP ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAPAPAVCEffectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAPAPAVCEffectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z PROC ; std::_Uninitialized_move<CEffectInstance * *,std::allocator<CEffectInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectInstance * *,CEffectInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAPAPAVCEffectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectInstance * *,std::allocator<CEffectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv346 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 92 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6a		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv346[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00055	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005a	2b cb		 sub	 ecx, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005c	56		 push	 esi
  0005d	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0005e	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@IAAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CArea::SObjectInstance *> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00067	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006a	56		 push	 esi
  0006b	53		 push	 ebx
  0006c	ff 76 04	 push	 DWORD PTR [esi+4]
  0006f	ff 36		 push	 DWORD PTR [esi]
  00071	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectInstance * *,std::allocator<CArea::SObjectInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00078	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	85 c9		 test	 ecx, ecx
  0007d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00082	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00091	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00094	89 1e		 mov	 DWORD PTR [esi], ebx
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv346[ebp]
  0009c	03 c3		 add	 eax, ebx
  0009e	5f		 pop	 edi
  0009f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 1208 :     }

  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000aa	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000af	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@PAVCGraphicThingInstance@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@ABQAVCGraphicThingInstance@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@PAVCGraphicThingInstance@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@ABQAVCGraphicThingInstance@@@Z PROC ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::_Find_lower_bound<CGraphicThingInstance *>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@PAVCGraphicThingInstance@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@ABQAVCGraphicThingInstance@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::_Find_lower_bound<CGraphicThingInstance *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@HPAX@std@@@1@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@HPAX@std@@@1@ABH@Z PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	7d 07		 jge	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@HPAX@std@@@1@ABH@Z ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00011	75 32		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	57		 push	 edi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 76 08	 push	 DWORD PTR [esi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b fe		 mov	 edi, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 379  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  00027	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0002a	e8 00 00 00 00	 call	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0002f	6a 34		 push	 52			; 00000034H
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0003d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00041	74 d5		 je	 SHORT $LL2@Erase_tree
  00043	5f		 pop	 edi
  00044	5b		 pop	 ebx
$LN3@Erase_tree:
  00045	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 34		 push	 52			; 00000034H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	89 37		 mov	 DWORD PTR [edi], esi

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0000f	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00013	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0001a	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0001d	75 32		 jne	 SHORT $LN12@Find_lower
  0001f	53		 push	 ebx
  00020	8b 5d 0c	 mov	 ebx, DWORD PTR __Keyval$[ebp]
$LL2@Find_lower:

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00023	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00026	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00028	53		 push	 ebx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0002f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00032	84 c0		 test	 al, al
  00034	74 07		 je	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  00036	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00039	33 c0		 xor	 eax, eax

; 1708 :             } else {

  0003b	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  0003d	89 77 08	 mov	 DWORD PTR [edi+8], esi

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	8b 36		 mov	 esi, DWORD PTR [esi]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00047	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0004a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0004e	74 d3		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00050	5b		 pop	 ebx
$LN12@Find_lower:

; 1716 :     }

  00051	8b c7		 mov	 eax, edi
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@PAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@ABQAUSObjectInstance@CArea@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@PAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@ABQAUSObjectInstance@CArea@@@Z PROC ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::_Find_lower_bound<CArea::SObjectInstance *>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@PAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@ABQAUSObjectInstance@CArea@@@Z ENDP ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::_Find_lower_bound<CArea::SObjectInstance *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp
;	COMDAT ??$transform_range@V?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@U?$to_lowerF@D@012@@Z
_TEXT	SEGMENT
_Ch$ = 8						; size = 1
_Input$ = 8						; size = 4
_Functor$ = 12						; size = 4
??$transform_range@V?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@U?$to_lowerF@D@012@@Z PROC ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >,boost::algorithm::detail::to_lowerF<char> >, COMDAT

; 100  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 101  :                 std::transform( 

  00005	8b 75 0c	 mov	 esi, DWORD PTR _Functor$[ebp]
  00008	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 2213 :     const auto _ULast = _Get_unwrapped(_Last);

  00009	8b 7d 08	 mov	 edi, DWORD PTR _Input$[ebp]
  0000c	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]

; 2215 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

  0000f	8b 3f		 mov	 edi, DWORD PTR [edi]
  00011	3b fb		 cmp	 edi, ebx
  00013	74 18		 je	 SHORT $LN23@transform_
$LL24@transform_:

; 2216 :         *_UDest = _Func(*_UFirst);

  00015	8a 07		 mov	 al, BYTE PTR [edi]
  00017	88 45 08	 mov	 BYTE PTR _Ch$[ebp], al
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp

; 46   :                         return std::tolower<CharT>( Ch, *m_Loc );

  0001a	56		 push	 esi
  0001b	ff 75 08	 push	 DWORD PTR _Ch$[ebp]
  0001e	e8 00 00 00 00	 call	 ??$tolower@D@std@@YADDABVlocale@0@@Z ; std::tolower<char>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 2216 :         *_UDest = _Func(*_UFirst);

  00023	88 07		 mov	 BYTE PTR [edi], al
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp

; 46   :                         return std::tolower<CharT>( Ch, *m_Loc );

  00025	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 2215 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

  00028	47		 inc	 edi
  00029	3b fb		 cmp	 edi, ebx
  0002b	75 e8		 jne	 SHORT $LL24@transform_
$LN23@transform_:
  0002d	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\detail\case_conv.hpp

; 106  :             }

  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??$transform_range@V?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@U?$to_lowerF@D@012@@Z ENDP ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >,boost::algorithm::detail::to_lowerF<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z
_TEXT	SEGMENT
__Val$1 = -96						; size = 48
__Val$4$ = -48						; size = 16
__Val$3$ = -32						; size = 16
__Val$2$ = -16						; size = 16
__Mid$2 = -8						; size = 8
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z PROC ; std::_Sort_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	3d 30 06 00 00	 cmp	 eax, 1584		; 00000630H
  00018	0f 8c 92 00 00
	00		 jl	 $LN44@Sort_unche
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00021	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00024	50		 push	 eax
  00025	53		 push	 ebx
  00026	57		 push	 edi
  00027	85 f6		 test	 esi, esi
  00029	0f 8e ec 00 00
	00		 jle	 $LN45@Sort_unche

; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002f	8d 45 f8	 lea	 eax, DWORD PTR __Mid$2[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YA?AU?$pair@PAUSObjectData@CArea@@PAU12@@0@PAUSObjectData@CArea@@0UObjectDataComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions

  00038	8b c6		 mov	 eax, esi

; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  0003a	8b cb		 mov	 ecx, ebx
  0003c	2b 4d fc	 sub	 ecx, DWORD PTR __Mid$2[ebp+4]
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	c1 f8 02	 sar	 eax, 2
  00045	d1 fe		 sar	 esi, 1
  00047	03 f0		 add	 esi, eax
  00049	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0004e	f7 e9		 imul	 ecx
  00050	8b 4d f8	 mov	 ecx, DWORD PTR __Mid$2[ebp]
  00053	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00058	c1 fa 03	 sar	 edx, 3
  0005b	2b cf		 sub	 ecx, edi
  0005d	89 75 10	 mov	 DWORD PTR __Ideal$[ebp], esi
  00060	8b f2		 mov	 esi, edx
  00062	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00065	03 f2		 add	 esi, edx
  00067	f7 e9		 imul	 ecx
  00069	c1 fa 03	 sar	 edx, 3
  0006c	8b c2		 mov	 eax, edx
  0006e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00071	03 c2		 add	 eax, edx
  00073	3b c6		 cmp	 eax, esi
  00075	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00078	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
  0007b	50		 push	 eax
  0007c	56		 push	 esi
  0007d	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0007f	8b 45 f8	 mov	 eax, DWORD PTR __Mid$2[ebp]
  00082	50		 push	 eax
  00083	57		 push	 edi
  00084	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z ; std::_Sort_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4125 :             _First = _Mid.second;

  00089	8b 7d fc	 mov	 edi, DWORD PTR __Mid$2[ebp+4]

; 4126 :         } else { // loop on first half

  0008c	eb 0d		 jmp	 SHORT $LN58@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Mid$2[ebp+4]
  00091	53		 push	 ebx
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z ; std::_Sort_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 4128 :             _Last = _Mid.first;

  00098	8b 5d f8	 mov	 ebx, DWORD PTR __Mid$2[ebp]
$LN58@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  0009b	8b c3		 mov	 eax, ebx
  0009d	83 c4 10	 add	 esp, 16			; 00000010H
  000a0	2b c7		 sub	 eax, edi
  000a2	3d 30 06 00 00	 cmp	 eax, 1584		; 00000630H
  000a7	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  000aa	0f 8d 74 ff ff
	ff		 jge	 $LL2@Sort_unche
$LN44@Sort_unche:

; 3981 :     if (_First != _Last) {

  000b0	3b fb		 cmp	 edi, ebx
  000b2	0f 84 3f 01 00
	00		 je	 $LN31@Sort_unche

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  000b8	8d 77 30	 lea	 esi, DWORD PTR [edi+48]
  000bb	3b f3		 cmp	 esi, ebx
  000bd	0f 84 34 01 00
	00		 je	 $LN31@Sort_unche
$LL11@Sort_unche:

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000c3	0f 10 0e	 movups	 xmm1, XMMWORD PTR [esi]
  000c6	8b ce		 mov	 ecx, esi
  000c8	0f 10 56 10	 movups	 xmm2, XMMWORD PTR [esi+16]
  000cc	0f 10 5e 20	 movups	 xmm3, XMMWORD PTR [esi+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000d0	0f 28 c1	 movaps	 xmm0, xmm1
  000d3	66 0f 73 d8 0c	 psrldq	 xmm0, 12		; 0000000cH
  000d8	66 0f 7e c2	 movd	 edx, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000dc	0f 11 4d f0	 movups	 XMMWORD PTR __Val$2$[ebp], xmm1
  000e0	0f 11 55 e0	 movups	 XMMWORD PTR __Val$3$[ebp], xmm2
  000e4	0f 11 5d d0	 movups	 XMMWORD PTR __Val$4$[ebp], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  000e8	3b 57 0c	 cmp	 edx, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000eb	0f 83 c8 00 00
	00		 jae	 $LN18@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000f1	8d 46 30	 lea	 eax, DWORD PTR [esi+48]
  000f4	50		 push	 eax
  000f5	56		 push	 esi
  000f6	57		 push	 edi
  000f7	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUSObjectData@CArea@@PAU12@@std@@YAPAUSObjectData@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SObjectData *,CArea::SObjectData *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000fc	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR __Val$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00100	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  00103	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  00106	0f 10 45 e0	 movups	 xmm0, XMMWORD PTR __Val$3$[ebp]
  0010a	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
  0010e	0f 10 45 d0	 movups	 xmm0, XMMWORD PTR __Val$4$[ebp]
  00112	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0

; 3989 :             } else { // look for insertion point after first

  00116	e9 d1 00 00 00	 jmp	 $LN19@Sort_unche
$LN45@Sort_unche:

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  0011b	e8 00 00 00 00	 call	 ??$_Make_heap_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0UObjectDataComp@2@@Z ; std::_Make_heap_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  00120	8b cb		 mov	 ecx, ebx
  00122	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00127	2b cf		 sub	 ecx, edi

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00129	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  0012c	f7 e9		 imul	 ecx
  0012e	c1 fa 03	 sar	 edx, 3
  00131	8b c2		 mov	 eax, edx
  00133	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00136	03 c2		 add	 eax, edx
  00138	83 f8 02	 cmp	 eax, 2
  0013b	0f 8c b6 00 00
	00		 jl	 $LN31@Sort_unche

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00141	83 c3 d0	 add	 ebx, -48		; ffffffd0H
$LL32@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00144	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  00147	8d 45 a0	 lea	 eax, DWORD PTR __Val$1[ebp]
  0014a	8b f3		 mov	 esi, ebx
  0014c	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  0014f	0f 11 45 a0	 movups	 XMMWORD PTR __Val$1[ebp], xmm0

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  00153	50		 push	 eax

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00154	0f 10 43 10	 movups	 xmm0, XMMWORD PTR [ebx+16]

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  00158	2b f7		 sub	 esi, edi
  0015a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0015f	f7 ee		 imul	 esi

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00161	0f 11 45 b0	 movups	 XMMWORD PTR __Val$1[ebp+16], xmm0
  00165	0f 10 43 20	 movups	 xmm0, XMMWORD PTR [ebx+32]
  00169	0f 11 45 c0	 movups	 XMMWORD PTR __Val$1[ebp+32], xmm0

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  0016d	c1 fa 03	 sar	 edx, 3
  00170	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  00173	8b c2		 mov	 eax, edx
  00175	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00178	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0
  0017b	03 c2		 add	 eax, edx
  0017d	0f 10 47 10	 movups	 xmm0, XMMWORD PTR [edi+16]
  00181	50		 push	 eax
  00182	6a 00		 push	 0
  00184	0f 11 43 10	 movups	 XMMWORD PTR [ebx+16], xmm0
  00188	57		 push	 edi
  00189	0f 10 47 20	 movups	 xmm0, XMMWORD PTR [edi+32]
  0018d	0f 11 43 20	 movups	 XMMWORD PTR [ebx+32], xmm0
  00191	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAUSObjectData@CArea@@U12@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@HH$$QAU12@UObjectDataComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SObjectData *,CArea::SObjectData,CArea::ObjectDataComp>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  00196	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  0019b	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  0019e	f7 ee		 imul	 esi
  001a0	83 eb 30	 sub	 ebx, 48			; 00000030H
  001a3	c1 fa 03	 sar	 edx, 3
  001a6	8b c2		 mov	 eax, edx
  001a8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001ab	03 c2		 add	 eax, edx
  001ad	83 f8 02	 cmp	 eax, 2
  001b0	7d 92		 jge	 SHORT $LL32@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	5b		 pop	 ebx
  001b5	8b e5		 mov	 esp, ebp
  001b7	5d		 pop	 ebp
  001b8	c3		 ret	 0
$LN18@Sort_unche:

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001b9	8d 46 d0	 lea	 eax, DWORD PTR [esi-48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  001bc	3b 56 dc	 cmp	 edx, DWORD PTR [esi-36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001bf	73 20		 jae	 SHORT $LN15@Sort_unche
$LL16@Sort_unche:

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  001c1	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  001c4	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  001c7	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  001cb	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  001cf	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  001d3	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
  001d7	8b c8		 mov	 ecx, eax
  001d9	83 e8 30	 sub	 eax, 48			; 00000030H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 57   : 				return lhs.dwCRC < rhs.dwCRC;

  001dc	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001df	72 e0		 jb	 SHORT $LL16@Sort_unche
$LN15@Sort_unche:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  001e1	0f 11 09	 movups	 XMMWORD PTR [ecx], xmm1
  001e4	0f 11 51 10	 movups	 XMMWORD PTR [ecx+16], xmm2
  001e8	0f 11 59 20	 movups	 XMMWORD PTR [ecx+32], xmm3
$LN19@Sort_unche:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  001ec	83 c6 30	 add	 esi, 48			; 00000030H
  001ef	3b f3		 cmp	 esi, ebx
  001f1	0f 85 cc fe ff
	ff		 jne	 $LL11@Sort_unche
$LN31@Sort_unche:
  001f7	5f		 pop	 edi

; 4129 :         }
; 4130 :     }
; 4131 : }

  001f8	5e		 pop	 esi
  001f9	5b		 pop	 ebx
  001fa	8b e5		 mov	 esp, ebp
  001fc	5d		 pop	 ebp
  001fd	c3		 ret	 0
??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z ENDP ; std::_Sort_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z
_TEXT	SEGMENT
__Val$1 = -16						; size = 8
__Mid$2 = -16						; size = 8
__Val$2$ = -12						; size = 4
__Val$2$ = -8						; size = 4
__Val$1$ = -8						; size = 4
__Max_sequence_non_leaf$1$ = -4				; size = 4
__Bottom$1$ = 8						; size = 4
__Val$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z PROC ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	2b c6		 sub	 eax, esi
  00012	83 e0 f8	 and	 eax, -8			; fffffff8H
  00015	57		 push	 edi
  00016	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001b	7e 71		 jle	 SHORT $LN67@Sort_unche
  0001d	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00020	8b 7d 10	 mov	 edi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	85 ff		 test	 edi, edi
  00025	0f 8e aa 00 00
	00		 jle	 $LN68@Sort_unche

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002b	51		 push	 ecx
  0002c	53		 push	 ebx
  0002d	8d 45 f0	 lea	 eax, DWORD PTR __Mid$2[ebp]
  00030	56		 push	 esi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00037	8b 55 f4	 mov	 edx, DWORD PTR __Mid$2[ebp+4]
  0003a	8b c7		 mov	 eax, edi
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	8b cb		 mov	 ecx, ebx
  00041	d1 ff		 sar	 edi, 1
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	03 f8		 add	 edi, eax
  00048	2b ca		 sub	 ecx, edx
  0004a	8b 45 f0	 mov	 eax, DWORD PTR __Mid$2[ebp]
  0004d	83 e1 f8	 and	 ecx, -8			; fffffff8H
  00050	2b c6		 sub	 eax, esi
  00052	83 e0 f8	 and	 eax, -8			; fffffff8H
  00055	3b c1		 cmp	 eax, ecx
  00057	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005a	50		 push	 eax
  0005b	57		 push	 edi
  0005c	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005e	8b 45 f0	 mov	 eax, DWORD PTR __Mid$2[ebp]
  00061	50		 push	 eax
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4125 :             _First = _Mid.second;

  00068	8b 75 f4	 mov	 esi, DWORD PTR __Mid$2[ebp+4]

; 4126 :         } else { // loop on first half

  0006b	eb 0d		 jmp	 SHORT $LN91@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0006d	53		 push	 ebx
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 4128 :             _Last = _Mid.first;

  00074	8b 5d f0	 mov	 ebx, DWORD PTR __Mid$2[ebp]
  00077	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
$LN91@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007a	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  0007d	8b c3		 mov	 eax, ebx
  0007f	2b c6		 sub	 eax, esi
  00081	83 c4 10	 add	 esp, 16			; 00000010H
  00084	83 e0 f8	 and	 eax, -8			; fffffff8H
  00087	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0008c	7f 95		 jg	 SHORT $LL2@Sort_unche
$LN67@Sort_unche:

; 3981 :     if (_First != _Last) {

  0008e	3b f3		 cmp	 esi, ebx
  00090	0f 84 9b 01 00
	00		 je	 $LN51@Sort_unche

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00096	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  00099	3b fb		 cmp	 edi, ebx
  0009b	0f 84 90 01 00
	00		 je	 $LN51@Sort_unche
$LL11@Sort_unche:

; 3983 :             _BidIt _Next1              = _Next;
; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000a1	8b 07		 mov	 eax, DWORD PTR [edi]
  000a3	8b d7		 mov	 edx, edi
  000a5	89 45 f8	 mov	 DWORD PTR __Val$2$[ebp], eax
  000a8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ab	89 45 08	 mov	 DWORD PTR __Val$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000ae	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000b1	0f 86 42 01 00
	00		 jbe	 $LN18@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000b7	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000ba	50		 push	 eax
  000bb	57		 push	 edi
  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000c2	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000c8	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
  000cb	89 0e		 mov	 DWORD PTR [esi], ecx
  000cd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 3989 :             } else { // look for insertion point after first

  000d0	e9 51 01 00 00	 jmp	 $LN19@Sort_unche
$LN68@Sort_unche:

; 3419 :     _Diff _Bottom = _Last - _First;

  000d5	2b de		 sub	 ebx, esi
  000d7	8b c3		 mov	 eax, ebx
  000d9	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
  000dc	c1 f8 03	 sar	 eax, 3

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  000df	8b f8		 mov	 edi, eax
  000e1	89 45 08	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  000e4	d1 ff		 sar	 edi, 1
  000e6	85 ff		 test	 edi, edi
  000e8	0f 8e b3 00 00
	00		 jle	 $LN31@Sort_unche
  000ee	8b d8		 mov	 ebx, eax
  000f0	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  000f3	d1 f8		 sar	 eax, 1
  000f5	89 45 fc	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
$LL30@Sort_unche:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  000f8	8b 44 fe f8	 mov	 eax, DWORD PTR [esi+edi*8-8]
  000fc	4f		 dec	 edi
  000fd	89 45 f4	 mov	 DWORD PTR __Val$2$[ebp], eax

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00100	8b d7		 mov	 edx, edi

; 3359 :     _Diff _Idx       = _Hole;

  00102	8b cf		 mov	 ecx, edi

; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00104	8b 44 fe 04	 mov	 eax, DWORD PTR [esi+edi*8+4]
  00108	89 45 f8	 mov	 DWORD PTR __Val$1$[ebp], eax

; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0010b	8b 45 fc	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  0010e	3b f8		 cmp	 edi, eax
  00110	7d 2d		 jge	 SHORT $LN36@Sort_unche
  00112	8b d8		 mov	 ebx, eax
$LL35@Sort_unche:

; 3365 :         _Idx = 2 * _Idx + 2;

  00114	03 c9		 add	 ecx, ecx

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 3367 :             --_Idx;
; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00116	8b 44 ce 14	 mov	 eax, DWORD PTR [esi+ecx*8+20]
  0011a	39 44 ce 0c	 cmp	 DWORD PTR [esi+ecx*8+12], eax
  0011e	1b c0		 sbb	 eax, eax
  00120	83 c0 02	 add	 eax, 2
  00123	03 c8		 add	 ecx, eax
  00125	8b 04 ce	 mov	 eax, DWORD PTR [esi+ecx*8]
  00128	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  0012b	8b 44 ce 04	 mov	 eax, DWORD PTR [esi+ecx*8+4]
  0012f	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3370 :         _Hole             = _Idx;

  00133	8b d1		 mov	 edx, ecx
  00135	3b cb		 cmp	 ecx, ebx
  00137	7c db		 jl	 SHORT $LL35@Sort_unche
  00139	8b 5d 08	 mov	 ebx, DWORD PTR __Bottom$1$[ebp]
  0013c	8b 45 fc	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN36@Sort_unche:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0013f	3b d0		 cmp	 edx, eax
  00141	75 17		 jne	 SHORT $LN38@Sort_unche
  00143	f6 c3 01	 test	 bl, 1
  00146	75 12		 jne	 SHORT $LN38@Sort_unche

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00148	8b 44 de f8	 mov	 eax, DWORD PTR [esi+ebx*8-8]
  0014c	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  0014f	8b 44 de fc	 mov	 eax, DWORD PTR [esi+ebx*8-4]
  00153	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3375 :         _Hole             = _Bottom - 1;

  00157	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
$LN38@Sort_unche:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0015a	3b fa		 cmp	 edi, edx
  0015c	7d 25		 jge	 SHORT $LN44@Sort_unche
  0015e	8b 5d f8	 mov	 ebx, DWORD PTR __Val$1$[ebp]
$LL45@Sort_unche:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00161	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  00164	d1 f9		 sar	 ecx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00166	39 5c ce 04	 cmp	 DWORD PTR [esi+ecx*8+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0016a	76 14		 jbe	 SHORT $LN90@Sort_unche

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0016c	8b 04 ce	 mov	 eax, DWORD PTR [esi+ecx*8]
  0016f	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  00172	8b 44 ce 04	 mov	 eax, DWORD PTR [esi+ecx*8+4]
  00176	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3325 :         _Hole             = _Idx;

  0017a	8b d1		 mov	 edx, ecx
  0017c	3b f9		 cmp	 edi, ecx
  0017e	7c e1		 jl	 SHORT $LL45@Sort_unche
$LN90@Sort_unche:
  00180	8b 5d 08	 mov	 ebx, DWORD PTR __Bottom$1$[ebp]
$LN44@Sort_unche:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  00183	8b 45 f4	 mov	 eax, DWORD PTR __Val$2$[ebp]
  00186	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  00189	8b 45 f8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0018c	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00190	85 ff		 test	 edi, edi
  00192	0f 8f 60 ff ff
	ff		 jg	 $LL30@Sort_unche
  00198	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0019b	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  0019e	8b 45 08	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
$LN31@Sort_unche:

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001a1	83 f8 02	 cmp	 eax, 2
  001a4	0f 8c 87 00 00
	00		 jl	 $LN51@Sort_unche
  001aa	66 0f 1f 44 00
	00		 npad	 6
$LL52@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001b0	8b 44 1e f8	 mov	 eax, DWORD PTR [esi+ebx-8]
  001b4	89 45 f0	 mov	 DWORD PTR __Val$1[ebp], eax
  001b7	8b 44 1e fc	 mov	 eax, DWORD PTR [esi+ebx-4]
  001bb	89 45 f4	 mov	 DWORD PTR __Val$1[ebp+4], eax

; 3386 :     *_Dest      = _STD move(*_First);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	89 44 1e f8	 mov	 DWORD PTR [esi+ebx-8], eax
  001c4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001c7	89 44 1e fc	 mov	 DWORD PTR [esi+ebx-4], eax

; 3387 :     using _Diff = _Iter_diff_t<_RanIt>;
; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  001cb	8d 45 f0	 lea	 eax, DWORD PTR __Val$1[ebp]
  001ce	51		 push	 ecx
  001cf	50		 push	 eax
  001d0	8d 43 f8	 lea	 eax, DWORD PTR [ebx-8]
  001d3	c1 f8 03	 sar	 eax, 3
  001d6	50		 push	 eax
  001d7	6a 00		 push	 0
  001d9	56		 push	 esi
  001da	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001df	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  001e2	83 eb 08	 sub	 ebx, 8
  001e5	8b c3		 mov	 eax, ebx

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  001e7	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001ea	83 e0 f8	 and	 eax, -8			; fffffff8H
  001ed	83 f8 10	 cmp	 eax, 16			; 00000010H
  001f0	7d be		 jge	 SHORT $LL52@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
  001f5	8b e5		 mov	 esp, ebp
  001f7	5d		 pop	 ebp
  001f8	c3		 ret	 0
$LN18@Sort_unche:

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001f9	8d 4f f8	 lea	 ecx, DWORD PTR [edi-8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  001fc	3b 47 fc	 cmp	 eax, DWORD PTR [edi-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001ff	76 1d		 jbe	 SHORT $LN15@Sort_unche
  00201	8b 5d 08	 mov	 ebx, DWORD PTR __Val$1$[ebp]
$LL16@Sort_unche:

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  00204	8b 01		 mov	 eax, DWORD PTR [ecx]
  00206	89 02		 mov	 DWORD PTR [edx], eax
  00208	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0020b	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0020e	8b d1		 mov	 edx, ecx
  00210	83 e9 08	 sub	 ecx, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00213	3b 59 04	 cmp	 ebx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  00216	77 ec		 ja	 SHORT $LL16@Sort_unche
  00218	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0021b	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
$LN15@Sort_unche:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  0021e	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
  00221	89 0a		 mov	 DWORD PTR [edx], ecx
  00223	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN19@Sort_unche:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00226	83 c7 08	 add	 edi, 8
  00229	3b fb		 cmp	 edi, ebx
  0022b	0f 85 70 fe ff
	ff		 jne	 $LL11@Sort_unche
$LN51@Sort_unche:
  00231	5f		 pop	 edi

; 4129 :         }
; 4130 :     }
; 4131 : }

  00232	5e		 pop	 esi
  00233	5b		 pop	 ebx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c3		 ret	 0
??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ENDP ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Mid$1 = -20						; size = 8
tv614 = -16						; size = 4
__Bottom$1$ = -12					; size = 4
__Next$1$ = -12						; size = 4
__Max_sequence_non_leaf$1$ = -8				; size = 4
__Next1$1$ = -8						; size = 4
__Val$1$ = -4						; size = 4
__Val$1$ = -4						; size = 4
__Hole$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Val$2 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z PROC ; std::_Sort_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>, COMDAT

; 4104 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  00008	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000b	57		 push	 edi
  0000c	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000f	8b c7		 mov	 eax, edi
  00011	2b c6		 sub	 eax, esi
  00013	83 e0 fc	 and	 eax, -4			; fffffffcH
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	7e 74		 jle	 SHORT $LN67@Sort_unche
  0001d	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  00020	8b 5d 10	 mov	 ebx, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 4108 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 4109 :             return;
; 4110 :         }
; 4111 : 
; 4112 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	85 db		 test	 ebx, ebx
  00025	0f 8e aa 00 00
	00		 jle	 $LN68@Sort_unche

; 4113 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 4114 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 4115 :             return;
; 4116 :         }
; 4117 : 
; 4118 :         // divide and conquer by quicksort
; 4119 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002b	52		 push	 edx
  0002c	57		 push	 edi
  0002d	8d 45 ec	 lea	 eax, DWORD PTR __Mid$1[ebp]
  00030	56		 push	 esi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCEffectInstance@@PAPAV1@@0@PAPAVCEffectInstance@@0UCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Partition_by_median_guess_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>

; 4120 : 
; 4121 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 4122 : 
; 4123 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00037	8b 55 f0	 mov	 edx, DWORD PTR __Mid$1[ebp+4]
  0003a	8b c3		 mov	 eax, ebx
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	8b cf		 mov	 ecx, edi
  00041	d1 fb		 sar	 ebx, 1
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	03 d8		 add	 ebx, eax
  00048	2b ca		 sub	 ecx, edx
  0004a	8b 45 ec	 mov	 eax, DWORD PTR __Mid$1[ebp]
  0004d	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00050	2b c6		 sub	 eax, esi
  00052	83 e0 fc	 and	 eax, -4			; fffffffcH
  00055	3b c1		 cmp	 eax, ecx
  00057	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005a	50		 push	 eax
  0005b	53		 push	 ebx
  0005c	7d 12		 jge	 SHORT $LN7@Sort_unche

; 4124 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005e	8b 45 ec	 mov	 eax, DWORD PTR __Mid$1[ebp]
  00061	50		 push	 eax
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>

; 4125 :             _First = _Mid.second;

  00068	8b 75 f0	 mov	 esi, DWORD PTR __Mid$1[ebp+4]
  0006b	89 75 08	 mov	 DWORD PTR __First$[ebp], esi

; 4126 :         } else { // loop on first half

  0006e	eb 0d		 jmp	 SHORT $LN92@Sort_unche
$LN7@Sort_unche:

; 4127 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00070	57		 push	 edi
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>

; 4128 :             _Last = _Mid.first;

  00077	8b 7d ec	 mov	 edi, DWORD PTR __Mid$1[ebp]
  0007a	89 7d 0c	 mov	 DWORD PTR __Last$[ebp], edi
$LN92@Sort_unche:

; 4105 :     // order [_First, _Last), using _Pred
; 4106 :     for (;;) {
; 4107 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007d	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  00080	8b c7		 mov	 eax, edi
  00082	2b c6		 sub	 eax, esi
  00084	83 c4 10	 add	 esp, 16			; 00000010H
  00087	83 e0 fc	 and	 eax, -4			; fffffffcH
  0008a	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0008f	7f 92		 jg	 SHORT $LL2@Sort_unche
$LN67@Sort_unche:

; 3981 :     if (_First != _Last) {

  00091	3b f7		 cmp	 esi, edi
  00093	0f 84 91 01 00
	00		 je	 $LN51@Sort_unche

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  00099	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  0009c	89 5d f4	 mov	 DWORD PTR __Next$1$[ebp], ebx
  0009f	3b df		 cmp	 ebx, edi
  000a1	0f 84 83 01 00
	00		 je	 $LN51@Sort_unche
$LL11@Sort_unche:

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000a7	8b 3b		 mov	 edi, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000a9	8b cf		 mov	 ecx, edi
  000ab	ff 36		 push	 DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3983 :             _BidIt _Next1              = _Next;

  000ad	89 5d f8	 mov	 DWORD PTR __Next1$1$[ebp], ebx

; 3984 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Next);

  000b0	89 7d fc	 mov	 DWORD PTR __Val$1$[ebp], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  000b3	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3986 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000b8	84 c0		 test	 al, al
  000ba	0f 84 1b 01 00
	00		 je	 $LN18@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4440 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000c3	50		 push	 eax
  000c4	53		 push	 ebx
  000c5	56		 push	 esi
  000c6	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAPAVCEffectInstance@@PAPAV1@@std@@YAPAPAVCEffectInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CEffectInstance * *,CEffectInstance * *>
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3988 :                 *_First = _STD move(_Val);

  000ce	89 3e		 mov	 DWORD PTR [esi], edi

; 3989 :             } else { // look for insertion point after first

  000d0	e9 46 01 00 00	 jmp	 $LN19@Sort_unche
$LN68@Sort_unche:

; 3419 :     _Diff _Bottom = _Last - _First;

  000d5	2b fe		 sub	 edi, esi
  000d7	8b c7		 mov	 eax, edi
  000d9	89 7d 0c	 mov	 DWORD PTR __Last$[ebp], edi
  000dc	c1 f8 02	 sar	 eax, 2

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  000df	8b c8		 mov	 ecx, eax
  000e1	89 45 f4	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  000e4	d1 f9		 sar	 ecx, 1
  000e6	85 c9		 test	 ecx, ecx
  000e8	0f 8e a7 00 00
	00		 jle	 $LN31@Sort_unche
  000ee	48		 dec	 eax
  000ef	89 45 f0	 mov	 DWORD PTR tv614[ebp], eax
  000f2	d1 f8		 sar	 eax, 1
  000f4	89 45 f8	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
$LL30@Sort_unche:

; 3421 :         // reheap top half, bottom to top
; 3422 :         --_Hole;
; 3423 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  000f7	8b 54 8e fc	 mov	 edx, DWORD PTR [esi+ecx*4-4]
  000fb	49		 dec	 ecx
  000fc	89 4d 08	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 3424 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  000ff	8b d9		 mov	 ebx, ecx
  00101	89 55 fc	 mov	 DWORD PTR __Val$1$[ebp], edx

; 3359 :     _Diff _Idx       = _Hole;

  00104	8b f9		 mov	 edi, ecx

; 3360 : 
; 3361 :     // Check whether _Idx can have a child before calculating that child's index, since
; 3362 :     // calculating the child's index can trigger integer overflows
; 3363 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 3364 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00106	3b c8		 cmp	 ecx, eax
  00108	7d 34		 jge	 SHORT $LN36@Sort_unche
  0010a	66 0f 1f 44 00
	00		 npad	 6
$LL35@Sort_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00110	ff 74 fe 04	 push	 DWORD PTR [esi+edi*8+4]
  00114	8b 4c fe 08	 mov	 ecx, DWORD PTR [esi+edi*8+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3365 :         _Idx = 2 * _Idx + 2;

  00118	8d 3c 7d 02 00
	00 00		 lea	 edi, DWORD PTR [edi*2+2]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0011f	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3366 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00124	84 c0		 test	 al, al
  00126	74 01		 je	 SHORT $LN37@Sort_unche

; 3367 :             --_Idx;

  00128	4f		 dec	 edi
$LN37@Sort_unche:

; 3368 :         }
; 3369 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00129	8b 04 be	 mov	 eax, DWORD PTR [esi+edi*4]
  0012c	89 04 9e	 mov	 DWORD PTR [esi+ebx*4], eax

; 3370 :         _Hole             = _Idx;

  0012f	8b df		 mov	 ebx, edi
  00131	8b 45 f8	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00134	3b f8		 cmp	 edi, eax
  00136	7c d8		 jl	 SHORT $LL35@Sort_unche
  00138	8b 4d 08	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
  0013b	8b 55 fc	 mov	 edx, DWORD PTR __Val$1$[ebp]
$LN36@Sort_unche:

; 3371 :     }
; 3372 : 
; 3373 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0013e	3b f8		 cmp	 edi, eax
  00140	75 11		 jne	 SHORT $LN38@Sort_unche
  00142	8b 45 f4	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  00145	a8 01		 test	 al, 1
  00147	75 0a		 jne	 SHORT $LN38@Sort_unche

; 3374 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00149	8b 44 86 fc	 mov	 eax, DWORD PTR [esi+eax*4-4]
  0014d	89 04 9e	 mov	 DWORD PTR [esi+ebx*4], eax

; 3375 :         _Hole             = _Bottom - 1;

  00150	8b 5d f0	 mov	 ebx, DWORD PTR tv614[ebp]
$LN38@Sort_unche:

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00153	3b cb		 cmp	 ecx, ebx
  00155	7d 24		 jge	 SHORT $LN90@Sort_unche
$LL45@Sort_unche:

; 3320 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00157	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  0015a	d1 ff		 sar	 edi, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  0015c	52		 push	 edx
  0015d	8b 0c be	 mov	 ecx, DWORD PTR [esi+edi*4]
  00160	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3321 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00165	8b 4d 08	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
  00168	84 c0		 test	 al, al
  0016a	74 0f		 je	 SHORT $LN90@Sort_unche

; 3322 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 3323 :         // move _Hole up to parent
; 3324 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0016c	8b 04 be	 mov	 eax, DWORD PTR [esi+edi*4]
  0016f	8b 55 fc	 mov	 edx, DWORD PTR __Val$1$[ebp]
  00172	89 04 9e	 mov	 DWORD PTR [esi+ebx*4], eax

; 3325 :         _Hole             = _Idx;

  00175	8b df		 mov	 ebx, edi
  00177	3b cf		 cmp	 ecx, edi
  00179	7c dc		 jl	 SHORT $LL45@Sort_unche
$LN90@Sort_unche:

; 3326 :     }
; 3327 : 
; 3328 :     *(_First + _Hole) = _STD move(_Val); // drop _Val into final hole

  0017b	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0017e	89 04 9e	 mov	 DWORD PTR [esi+ebx*4], eax

; 3420 :     for (_Diff _Hole = _Bottom >> 1; 0 < _Hole;) { // shift for codegen

  00181	8b 45 f8	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00184	85 c9		 test	 ecx, ecx
  00186	0f 8f 6b ff ff
	ff		 jg	 $LL30@Sort_unche
  0018c	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0018f	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  00192	8b 45 f4	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
$LN31@Sort_unche:

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  00195	83 f8 02	 cmp	 eax, 2
  00198	0f 8c 8c 00 00
	00		 jl	 $LN51@Sort_unche
  0019e	66 90		 npad	 2
$LL52@Sort_unche:

; 3396 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001a0	8b 44 3e fc	 mov	 eax, DWORD PTR [esi+edi-4]
  001a4	89 45 0c	 mov	 DWORD PTR __Val$2[ebp], eax

; 3386 :     *_Dest      = _STD move(*_First);

  001a7	8b 06		 mov	 eax, DWORD PTR [esi]
  001a9	89 44 3e fc	 mov	 DWORD PTR [esi+edi-4], eax

; 3387 :     using _Diff = _Iter_diff_t<_RanIt>;
; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  001ad	8d 45 0c	 lea	 eax, DWORD PTR __Val$2[ebp]
  001b0	52		 push	 edx
  001b1	50		 push	 eax
  001b2	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  001b5	c1 f8 02	 sar	 eax, 2
  001b8	50		 push	 eax
  001b9	6a 00		 push	 0
  001bb	56		 push	 esi
  001bc	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAPAVCEffectInstance@@PAV1@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@HH$$QAPAV1@UCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Pop_heap_hole_by_index<CEffectInstance * *,CEffectInstance *,CArea_LessEffectInstancePtrRenderOrder>

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001c1	8b 55 14	 mov	 edx, DWORD PTR __Pred$[ebp]
  001c4	83 ef 04	 sub	 edi, 4
  001c7	8b c7		 mov	 eax, edi

; 3388 :     _Pop_heap_hole_by_index(_First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD move(_Val), _Pred);

  001c9	83 c4 14	 add	 esp, 20			; 00000014H

; 3509 :     for (; 2 <= _Last - _First; --_Last) {

  001cc	83 e0 fc	 and	 eax, -4			; fffffffcH
  001cf	83 f8 08	 cmp	 eax, 8
  001d2	7d cc		 jge	 SHORT $LL52@Sort_unche

; 4129 :         }
; 4130 :     }
; 4131 : }

  001d4	5f		 pop	 edi
  001d5	5e		 pop	 esi
  001d6	5b		 pop	 ebx
  001d7	8b e5		 mov	 esp, ebp
  001d9	5d		 pop	 ebp
  001da	c3		 ret	 0
$LN18@Sort_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  001db	ff 73 fc	 push	 DWORD PTR [ebx-4]
  001de	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001e1	8d 7b fc	 lea	 edi, DWORD PTR [ebx-4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  001e4	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001e9	84 c0		 test	 al, al
  001eb	74 26		 je	 SHORT $LN15@Sort_unche
  001ed	8b 75 fc	 mov	 esi, DWORD PTR __Val$1$[ebp]
  001f0	8b 5d f8	 mov	 ebx, DWORD PTR __Next1$1$[ebp]
$LL16@Sort_unche:

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  001f3	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  001f5	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3991 :                     *_Next1 = _STD move(*_First1); // move hole down

  001f7	89 03		 mov	 DWORD PTR [ebx], eax
  001f9	8b df		 mov	 ebx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  001fb	ff 77 fc	 push	 DWORD PTR [edi-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  001fe	83 ef 04	 sub	 edi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 120  : 		return pkLeft->LessRenderOrder(pkRight);

  00201	e8 00 00 00 00	 call	 ?LessRenderOrder@CEffectInstance@@QAE_NPAV1@@Z ; CEffectInstance::LessRenderOrder
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3990 :                 for (_BidIt _First1 = _Next1; _DEBUG_LT_PRED(_Pred, _Val, *--_First1); _Next1 = _First1) {

  00206	84 c0		 test	 al, al
  00208	75 e9		 jne	 SHORT $LL16@Sort_unche
  0020a	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0020d	89 5d f8	 mov	 DWORD PTR __Next1$1$[ebp], ebx
  00210	8b 5d f4	 mov	 ebx, DWORD PTR __Next$1$[ebp]
$LN15@Sort_unche:

; 3992 :                 }
; 3993 : 
; 3994 :                 *_Next1 = _STD move(_Val); // insert element in hole

  00213	8b 4d f8	 mov	 ecx, DWORD PTR __Next1$1$[ebp]
  00216	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
  00219	89 01		 mov	 DWORD PTR [ecx], eax
$LN19@Sort_unche:

; 3982 :         for (_BidIt _Next = _First; ++_Next != _Last;) { // order next element

  0021b	83 c3 04	 add	 ebx, 4
  0021e	89 5d f4	 mov	 DWORD PTR __Next$1$[ebp], ebx
  00221	3b 5d 0c	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00224	0f 85 7d fe ff
	ff		 jne	 $LL11@Sort_unche
$LN51@Sort_unche:
  0022a	5f		 pop	 edi

; 4129 :         }
; 4130 :     }
; 4131 : }

  0022b	5e		 pop	 esi
  0022c	5b		 pop	 ebx
  0022d	8b e5		 mov	 esp, ebp
  0022f	5d		 pop	 ebp
  00230	c3		 ret	 0
??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z ENDP ; std::_Sort_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 2d		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00010	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00013	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00016	72 0c		 jb	 SHORT $LN15@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00018	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	50		 push	 eax
  0001a	ff 36		 push	 DWORD PTR [esi]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN15@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00035	83 c6 18	 add	 esi, 24			; 00000018H
  00038	3b f7		 cmp	 esi, edi
  0003a	75 d4		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0003c	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAXPAPAVCAttributeInstance@@QAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAXPAPAVCAttributeInstance@@QAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CAttributeInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAXPAPAVCAttributeInstance@@QAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CAttributeInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCArea@@@std@@@std@@YAXPAPAVCArea@@QAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAXPAPAVCSpeedTreeWrapper@@QAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAXPAPAVCSpeedTreeWrapper@@QAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CSpeedTreeWrapper *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAXPAPAVCSpeedTreeWrapper@@QAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CSpeedTreeWrapper *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USObjectData@CArea@@@std@@@std@@YAXPAUSObjectData@CArea@@QAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USObjectData@CArea@@@std@@@std@@YAXPAUSObjectData@CArea@@QAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea::SObjectData> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USObjectData@CArea@@@std@@@std@@YAXPAUSObjectData@CArea@@QAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea::SObjectData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSObjectInstance@CArea@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAPAUSObjectInstance@CArea@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSObjectInstance@CArea@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAPAUSObjectInstance@CArea@@QAPAU23@ABQAU23@@Z PROC ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Emplace_reallocate<CArea::SObjectInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectInstance * *,std::allocator<CArea::SObjectInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectInstance * *,std::allocator<CArea::SObjectInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSObjectInstance@CArea@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAPAUSObjectInstance@CArea@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Emplace_reallocate<CArea::SObjectInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAXPAPAUSObjectInstance@CArea@@QAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAXPAPAUSObjectInstance@CArea@@QAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea::SObjectInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAXPAPAUSObjectInstance@CArea@@QAPAU12@AAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea::SObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicThingInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAXPAPAVCGraphicThingInstance@@QAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicThingInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAXPAPAVCDungeonBlock@@QAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAXPAPAVCDungeonBlock@@QAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CDungeonBlock *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAXPAPAVCDungeonBlock@@QAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CDungeonBlock *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAXPAPAUSAmbienceInstance@CArea@@QAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAXPAPAUSAmbienceInstance@CArea@@QAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea::SAmbienceInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAXPAPAUSAmbienceInstance@CArea@@QAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea::SAmbienceInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CArea::SCRCWithNumber> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAXPAUSCRCWithNumber@CArea@@QAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CArea::SCRCWithNumber> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Emplace_reallocate<CAttributeInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAPAPAVCAttributeInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z ; std::_Uninitialized_move<CAttributeInstance * *,std::allocator<CAttributeInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@YAPAPAVCAttributeInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCAttributeInstance@@@0@@Z ; std::_Uninitialized_move<CAttributeInstance * *,std::allocator<CAttributeInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@CAXXZ ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Emplace_reallocate<CAttributeInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@YAPAPAVCArea@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCArea@@@0@@Z ; std::_Uninitialized_move<CArea * *,std::allocator<CArea *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAXPAPAVCEffectInstance@@QAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAXPAPAVCEffectInstance@@QAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAXPAPAVCEffectInstance@@QAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCSpeedTreeWrapper@@@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAEPAPAVCSpeedTreeWrapper@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCSpeedTreeWrapper@@@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAEPAPAVCSpeedTreeWrapper@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Emplace_reallocate<CSpeedTreeWrapper * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAPAPAVCSpeedTreeWrapper@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z ; std::_Uninitialized_move<CSpeedTreeWrapper * *,std::allocator<CSpeedTreeWrapper *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@YAPAPAVCSpeedTreeWrapper@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCSpeedTreeWrapper@@@0@@Z ; std::_Uninitialized_move<CSpeedTreeWrapper * *,std::allocator<CSpeedTreeWrapper *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@CAXXZ ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCSpeedTreeWrapper@@@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAEPAPAVCSpeedTreeWrapper@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Emplace_reallocate<CSpeedTreeWrapper * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUSObjectData@CArea@@@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAEPAUSObjectData@CArea@@QAU23@ABU23@@Z
_TEXT	SEGMENT
tv376 = -8						; size = 4
tv375 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUSObjectData@CArea@@@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAEPAUSObjectData@CArea@@QAU23@ABU23@@Z PROC ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Emplace_reallocate<CArea::SObjectData const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00009	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	8b f1		 mov	 esi, ecx
  00012	57		 push	 edi
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	2b d7		 sub	 edx, edi

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	f7 ea		 imul	 edx
  0001c	2b cf		 sub	 ecx, edi
  0001e	c1 fa 03	 sar	 edx, 3
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  0002b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00030	f7 e9		 imul	 ecx
  00032	c1 fa 03	 sar	 edx, 3
  00035	8b da		 mov	 ebx, edx
  00037	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  0003a	03 da		 add	 ebx, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0003c	81 fb 55 55 55
	05		 cmp	 ebx, 89478485		; 05555555H
  00042	0f 84 fa 00 00
	00		 je	 $LN41@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00048	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00050	2b cf		 sub	 ecx, edi

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00052	43		 inc	 ebx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00053	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00055	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005a	c1 fa 03	 sar	 edx, 3
  0005d	8b ca		 mov	 ecx, edx
  0005f	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00062	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00064	8b d1		 mov	 edx, ecx
  00066	d1 ea		 shr	 edx, 1
  00068	2b c2		 sub	 eax, edx
  0006a	3b c8		 cmp	 ecx, eax
  0006c	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  0006e	8b c3		 mov	 eax, ebx
  00070	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00072	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00075	3b c3		 cmp	 eax, ebx
  00077	0f 42 c3	 cmovb	 eax, ebx
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0007a	3d 55 55 55 05	 cmp	 eax, 89478485		; 05555555H
  0007f	0f 87 c2 00 00
	00		 ja	 $LN42@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00085	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00088	c1 e0 04	 shl	 eax, 4

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008b	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0008c	89 45 f8	 mov	 DWORD PTR tv376[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00094	8b f8		 mov	 edi, eax
  00096	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00099	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009c	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0009f	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a2	c1 e1 04	 shl	 ecx, 4
  000a5	03 cf		 add	 ecx, edi
  000a7	89 4d fc	 mov	 DWORD PTR tv375[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000aa	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000ad	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  000b0	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  000b4	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  000b8	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000bc	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000bf	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000c3	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000c6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000c8	3b c2		 cmp	 eax, edx
  000ca	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000cc	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000ce	eb 18		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000d0	56		 push	 esi
  000d1	57		 push	 edi
  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@YAPAUSObjectData@CArea@@QAU12@0PAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectData *,std::allocator<CArea::SObjectData> >

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d9	8b 45 fc	 mov	 eax, DWORD PTR tv375[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000dc	83 c4 10	 add	 esp, 16			; 00000010H
  000df	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000e2	83 c0 30	 add	 eax, 48			; 00000030H

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000e5	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000e8	56		 push	 esi
  000e9	50		 push	 eax
  000ea	52		 push	 edx
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@YAPAUSObjectData@CArea@@QAU12@0PAU12@AAV?$allocator@USObjectData@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SObjectData *,std::allocator<CArea::SObjectData> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000f1	8b 06		 mov	 eax, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000f3	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000f6	85 c0		 test	 eax, eax
  000f8	74 27		 je	 SHORT $LN35@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000fa	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000fd	2b c8		 sub	 ecx, eax
  000ff	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00104	f7 e9		 imul	 ecx
  00106	c1 fa 03	 sar	 edx, 3
  00109	8b c2		 mov	 eax, edx
  0010b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0010e	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00110	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00113	c1 e0 04	 shl	 eax, 4
  00116	50		 push	 eax
  00117	ff 36		 push	 DWORD PTR [esi]
  00119	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0011e	83 c4 08	 add	 esp, 8
$LN35@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 766  :         return _Newvec + _Whereoff;

  00121	8b 45 fc	 mov	 eax, DWORD PTR tv375[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00124	8d 0c 5b	 lea	 ecx, DWORD PTR [ebx+ebx*2]
  00127	c1 e1 04	 shl	 ecx, 4
  0012a	03 cf		 add	 ecx, edi
  0012c	89 3e		 mov	 DWORD PTR [esi], edi
  0012e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00131	8b 4d f8	 mov	 ecx, DWORD PTR tv376[ebp]
  00134	03 cf		 add	 ecx, edi

; 766  :         return _Newvec + _Whereoff;

  00136	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 766  :         return _Newvec + _Whereoff;

  0013a	5e		 pop	 esi
  0013b	5b		 pop	 ebx

; 767  :     }

  0013c	8b e5		 mov	 esp, ebp
  0013e	5d		 pop	 ebp
  0013f	c2 08 00	 ret	 8
$LN41@Emplace_re:

; 738  :             _Xlength();

  00142	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Xlength
$LN42@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00147	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN39@Emplace_re:
  0014c	cc		 int	 3
??$_Emplace_reallocate@ABUSObjectData@CArea@@@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAEPAUSObjectData@CArea@@QAU23@ABU23@@Z ENDP ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Emplace_reallocate<CArea::SObjectData const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicThingInstance * *,std::allocator<CGraphicThingInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThingInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicThingInstance * *,std::allocator<CGraphicThingInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAPAPAVCDungeonBlock@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z ; std::_Uninitialized_move<CDungeonBlock * *,std::allocator<CDungeonBlock *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@YAPAPAVCDungeonBlock@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonBlock@@@0@@Z ; std::_Uninitialized_move<CDungeonBlock * *,std::allocator<CDungeonBlock *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@CAXXZ ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z PROC ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Emplace_reallocate<CArea::SAmbienceInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAPAPAUSAmbienceInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SAmbienceInstance * *,std::allocator<CArea::SAmbienceInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@YAPAPAUSAmbienceInstance@CArea@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAmbienceInstance@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SAmbienceInstance * *,std::allocator<CArea::SAmbienceInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Emplace_reallocate<CArea::SAmbienceInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUSCRCWithNumber@CArea@@@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAEPAUSCRCWithNumber@CArea@@QAU23@ABU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUSCRCWithNumber@CArea@@@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAEPAUSCRCWithNumber@CArea@@QAU23@ABU23@@Z PROC ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Emplace_reallocate<CArea::SCRCWithNumber const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 03	 sar	 ebx, 3
  0001a	c1 f8 03	 sar	 eax, 3

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00022	0f 84 c4 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 03	 sar	 ecx, 3

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00056	0f 87 95 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 55 0c	 mov	 edx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 df	 lea	 eax, DWORD PTR [edi+ebx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00080	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00083	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00086	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00088	3b da		 cmp	 ebx, edx
  0008a	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008c	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008f	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00091	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00093	56		 push	 esi
  00094	57		 push	 edi
  00095	53		 push	 ebx
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >
  0009c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009f	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a4	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a7	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
$LN5@Emplace_re:
  000aa	56		 push	 esi
  000ab	50		 push	 eax
  000ac	52		 push	 edx
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@YAPAUSCRCWithNumber@CArea@@QAU12@0PAU12@AAV?$allocator@USCRCWithNumber@CArea@@@0@@Z ; std::_Uninitialized_move<CArea::SCRCWithNumber *,std::allocator<CArea::SCRCWithNumber> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000b5	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	85 c9		 test	 ecx, ecx
  000ba	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	83 e0 f8	 and	 eax, -8			; fffffff8H
  000c4	50		 push	 eax
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000ce	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d1	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000d3	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000d5	8d 0c cf	 lea	 ecx, DWORD PTR [edi+ecx*8]
  000d8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000de	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e0	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000e1	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 767  :     }

  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000ec	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@CAXXZ ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f1	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f6	cc		 int	 3
??$_Emplace_reallocate@ABUSCRCWithNumber@CArea@@@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAEPAUSCRCWithNumber@CArea@@QAU23@ABU23@@Z ENDP ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Emplace_reallocate<CArea::SCRCWithNumber const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCEffectInstance@@@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@QAEPAPAVCEffectInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCEffectInstance@@@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@QAEPAPAVCEffectInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Emplace_reallocate<CEffectInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAPAPAVCEffectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z ; std::_Uninitialized_move<CEffectInstance * *,std::allocator<CEffectInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@YAPAPAVCEffectInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectInstance@@@0@@Z ; std::_Uninitialized_move<CEffectInstance * *,std::allocator<CEffectInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCEffectInstance@@@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@QAEPAPAVCEffectInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Emplace_reallocate<CEffectInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Erase_tree<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Erase_tree<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Erase_tree<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$set@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$set@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@@std@@QAE@XZ PROC ; std::set<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *> >::~set<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *> >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::~_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >
??1?$set@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@@std@@QAE@XZ ENDP ; std::set<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *> >::~set<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::~_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Erase_tree<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 14		 push	 20			; 00000014H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 14		 push	 20			; 00000014H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::~_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	53		 push	 ebx
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00007	8d 5f 18	 lea	 ebx, DWORD PTR [edi+24]
  0000a	85 c0		 test	 eax, eax
  0000c	74 45		 je	 SHORT $LN6@pair

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000e	53		 push	 ebx
  0000f	ff 73 04	 push	 DWORD PTR [ebx+4]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00018	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0001b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00022	f7 e9		 imul	 ecx
  00024	c1 fa 02	 sar	 edx, 2
  00027	8b c2		 mov	 eax, edx
  00029	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00031	c1 e0 03	 shl	 eax, 3
  00034	50		 push	 eax
  00035	ff 33		 push	 DWORD PTR [ebx]
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003c	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00045	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  0004c	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN6@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00053	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00056	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00059	72 0c		 jb	 SHORT $LN16@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0005b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005c	50		 push	 eax
  0005d	ff 37		 push	 DWORD PTR [edi]
  0005f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00064	83 c4 08	 add	 esp, 8
$LN16@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 07 00	 mov	 BYTE PTR [edi], 0
  00078	5f		 pop	 edi
  00079	5b		 pop	 ebx
  0007a	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4445 :     _In_z_ const _Elem* const _Left, basic_string<_Elem, _Traits, _Alloc>&& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Left$[ebp]
  00006	8b c2		 mov	 eax, edx

; 4445 :     _In_z_ const _Elem* const _Left, basic_string<_Elem, _Traits, _Alloc>&& _Right) {

  00008	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00009	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0000c	0f 1f 40 00	 npad	 4
$LL22@operator:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL22@operator

; 3117 :         return insert(_Off, _Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00017	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001a	2b c6		 sub	 eax, esi

; 3117 :         return insert(_Off, _Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	6a 00		 push	 0
  00020	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00025	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 4446 :     return _STD move(_Right.insert(0, _Left));

  00028	5e		 pop	 esi

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00029	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00030	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00037	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0003a	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0003d	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00042	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00047	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004e	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00055	c6 00 00	 mov	 BYTE PTR [eax], 0

; 4446 :     return _STD move(_Right.insert(0, _Left));

  00058	8b c1		 mov	 eax, ecx

; 4447 : }

  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z
_TEXT	SEGMENT
__Old_size$1$ = -12					; size = 4
__New_ptr$1 = -8					; size = 4
__Old$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv545 = 12						; size = 4
tv542 = 12						; size = 4
$T2 = 12						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4457 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]

; 4457 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, _In_z_ const _Elem* const _Right) {

  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8b f9		 mov	 edi, ecx
  0000e	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
$LL64@operator:
  00011	8a 07		 mov	 al, BYTE PTR [edi]
  00013	47		 inc	 edi
  00014	84 c0		 test	 al, al
  00016	75 f9		 jne	 SHORT $LL64@operator

; 2859 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00018	8b 5d 0c	 mov	 ebx, DWORD PTR __Left$[ebp]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001b	2b fa		 sub	 edi, edx

; 2860 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  0001d	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00020	8b c2		 mov	 eax, edx
  00022	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00025	2b c6		 sub	 eax, esi
  00027	89 75 f4	 mov	 DWORD PTR __Old_size$1$[ebp], esi
  0002a	89 55 fc	 mov	 DWORD PTR __Old$1$[ebp], edx
  0002d	3b f8		 cmp	 edi, eax
  0002f	77 25		 ja	 SHORT $LN10@operator

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00031	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00034	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  00037	8b c3		 mov	 eax, ebx

; 2153 :         return _BUF_SIZE <= _Myres;

  00039	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0003c	72 02		 jb	 SHORT $LN13@operator

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0003e	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN13@operator:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00040	57		 push	 edi

; 2863 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00041	03 f0		 add	 esi, eax

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00043	51		 push	 ecx
  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 _memmove
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2864 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0004d	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 2865 :             return *this;

  00051	e9 cb 00 00 00	 jmp	 $LN22@operator
$LN10@operator:

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  00056	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0005b	2b c6		 sub	 eax, esi
  0005d	3b c7		 cmp	 eax, edi
  0005f	0f 82 f5 00 00
	00		 jb	 $LN69@operator

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  00065	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00068	83 c9 0f	 or	 ecx, 15			; 0000000fH
  0006b	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00071	76 07		 jbe	 SHORT $LN27@operator

; 4203 :             return _Max;

  00073	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00078	eb 24		 jmp	 SHORT $LN66@operator
$LN27@operator:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0007a	8b c2		 mov	 eax, edx
  0007c	d1 e8		 shr	 eax, 1
  0007e	89 45 0c	 mov	 DWORD PTR tv545[ebp], eax
  00081	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00086	2b 45 0c	 sub	 eax, DWORD PTR tv545[ebp]
  00089	3b d0		 cmp	 edx, eax
  0008b	76 07		 jbe	 SHORT $LN28@operator

; 4207 :             return _Max;

  0008d	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00092	eb 0a		 jmp	 SHORT $LN66@operator
$LN28@operator:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00094	8b 45 0c	 mov	 eax, DWORD PTR tv545[ebp]
  00097	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00099	3b c8		 cmp	 ecx, eax
  0009b	0f 42 c8	 cmovb	 ecx, eax
$LN66@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0009e	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000a1	89 4d 0c	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4259 :         _My_data._Mysize      = _New_size;

  000aa	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]
  000ad	89 45 f8	 mov	 DWORD PTR __New_ptr$1[ebp], eax
  000b0	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b3	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  000b6	83 7d fc 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000ba	8b 4d 0c	 mov	 ecx, DWORD PTR $T2[ebp]
  000bd	89 4b 14	 mov	 DWORD PTR [ebx+20], ecx
  000c0	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  000c3	89 4d 0c	 mov	 DWORD PTR tv542[ebp], ecx
  000c6	72 32		 jb	 SHORT $LN21@operator

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c8	ff 75 f4	 push	 DWORD PTR __Old_size$1$[ebp]

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  000cb	8b 33		 mov	 esi, DWORD PTR [ebx]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000cd	56		 push	 esi
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 _memcpy
  000d4	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  000d7	57		 push	 edi
  000d8	50		 push	 eax
  000d9	ff 75 0c	 push	 DWORD PTR tv542[ebp]
  000dc	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  000e1	8b 45 0c	 mov	 eax, DWORD PTR tv542[ebp]
  000e4	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  000e8	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]
  000eb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ec	50		 push	 eax
  000ed	56		 push	 esi
  000ee	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  000f3	8b 45 f8	 mov	 eax, DWORD PTR __New_ptr$1[ebp]
  000f6	89 03		 mov	 DWORD PTR [ebx], eax

; 4267 :         } else {

  000f8	eb 24		 jmp	 SHORT $LN67@operator
$LN21@operator:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000fa	56		 push	 esi
  000fb	53		 push	 ebx
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 _memcpy
  00102	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00105	8b 75 0c	 mov	 esi, DWORD PTR tv542[ebp]
  00108	57		 push	 edi
  00109	50		 push	 eax
  0010a	56		 push	 esi
  0010b	e8 00 00 00 00	 call	 _memcpy

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00110	8d 45 f8	 lea	 eax, DWORD PTR __New_ptr$1[ebp]

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00113	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00117	50		 push	 eax
  00118	53		 push	 ebx
  00119	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN67@operator:

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0011e	83 c4 20	 add	 esp, 32			; 00000020H
$LN22@operator:
  00121	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4458 :     return _STD move(_Left.append(_Right));

  00124	5f		 pop	 edi
  00125	5e		 pop	 esi

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00126	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0012d	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00134	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
  00137	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0013a	f3 0f 7e 43 10	 movq	 xmm0, QWORD PTR [ebx+16]
  0013f	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00144	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0014b	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00152	c6 03 00	 mov	 BYTE PTR [ebx], 0

; 4458 :     return _STD move(_Left.append(_Right));

  00155	5b		 pop	 ebx

; 4459 : }

  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c3		 ret	 0
$LN69@operator:

; 4250 :             _Xlen_string(); // result too long

  0015a	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN65@operator:
  0015f	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??__Fs_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@YAXXZ
text$yd	SEGMENT
??__Fs_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@YAXXZ PROC ; `CArea::RenderEffect'::`9'::`dynamic atexit destructor for 's_kVct_pkEftInstSort'', COMDAT

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A
  00006	85 c9		 test	 ecx, ecx
  00008	74 32		 je	 SHORT $LN6@dynamic

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+8
  0000f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e0 fc	 and	 eax, -4			; fffffffcH
  00014	50		 push	 eax
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A, 0

; 1698 :             _Mylast  = pointer();

  00028	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+4, 0

; 1699 :             _Myend   = pointer();

  00032	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+8, 0
$LN6@dynamic:
  0003c	c3		 ret	 0
??__Fs_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@YAXXZ ENDP ; `CArea::RenderEffect'::`9'::`dynamic atexit destructor for 's_kVct_pkEftInstSort''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 51   :     _Tree_unchecked_const_iterator& operator++() {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00004	8b 16		 mov	 edx, DWORD PTR [esi]
  00006	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00009	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0000d	74 22		 je	 SHORT $LN4@operator

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  0000f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00012	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00016	75 12		 jne	 SHORT $LN19@operator
$LL2@operator:
  00018	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0001b	75 0d		 jne	 SHORT $LN19@operator

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  0001d	89 06		 mov	 DWORD PTR [esi], eax
  0001f	8b d0		 mov	 edx, eax
  00021	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00024	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00028	74 ee		 je	 SHORT $LL2@operator
$LN19@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0002a	89 06		 mov	 DWORD PTR [esi], eax

; 64   :     }

  0002c	8b c6		 mov	 eax, esi
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	c3		 ret	 0
$LN4@operator:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00031	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00033	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00037	75 13		 jne	 SHORT $LN9@operator
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@operator:
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00042	8b f9		 mov	 edi, ecx
  00044	8b c8		 mov	 ecx, eax
  00046	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004a	74 f4		 je	 SHORT $LL8@operator
$LN9@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0004c	89 3e		 mov	 DWORD PTR [esi], edi

; 64   :     }

  0004e	8b c6		 mov	 eax, esi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CArea::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A ; CArea::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCArea@@@@UAE@XZ ; CDynamicPool<CArea>::~CDynamicPool<CArea>
??__F?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CArea::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??__E?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CArea::ms_kPool'', COMDAT

; 19   : CDynamicPool<CArea>						CArea::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CArea::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CArea::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCArea@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCArea@@@@UAEPAXI@Z PROC		; CDynamicPool<CArea>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCArea@@@@UAE@XZ ; CDynamicPool<CArea>::~CDynamicPool<CArea>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCArea@@@@UAEPAXI@Z ENDP		; CDynamicPool<CArea>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCArea@@@@KAXPAVCArea@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCArea@@@@KAXPAVCArea@@@Z PROC	; CDynamicPool<CArea>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCArea@@@@KAXPAVCArea@@@Z ENDP	; CDynamicPool<CArea>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCArea@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCArea@@@@UAE@XZ PROC			; CDynamicPool<CArea>::~CDynamicPool<CArea>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCArea@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCArea@@@@UAE@XZ ENDP			; CDynamicPool<CArea>::~CDynamicPool<CArea>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CArea::ms_DungeonBlockInstancePool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A ; CArea::ms_DungeonBlockInstancePool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCDungeonBlock@@@@UAE@XZ ; CDynamicPool<CDungeonBlock>::~CDynamicPool<CDungeonBlock>
??__F?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CArea::ms_DungeonBlockInstancePool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??__E?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CArea::ms_DungeonBlockInstancePool'', COMDAT

; 18   : CDynamicPool<CDungeonBlock>				CArea::ms_DungeonBlockInstancePool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CArea::ms_DungeonBlockInstancePool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CArea::ms_DungeonBlockInstancePool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCDungeonBlock@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCDungeonBlock@@@@UAEPAXI@Z PROC	; CDynamicPool<CDungeonBlock>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCDungeonBlock@@@@UAE@XZ ; CDynamicPool<CDungeonBlock>::~CDynamicPool<CDungeonBlock>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCDungeonBlock@@@@UAEPAXI@Z ENDP	; CDynamicPool<CDungeonBlock>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCDungeonBlock@@@@KAXPAVCDungeonBlock@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCDungeonBlock@@@@KAXPAVCDungeonBlock@@@Z PROC ; CDynamicPool<CDungeonBlock>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCDungeonBlock@@@@KAXPAVCDungeonBlock@@@Z ENDP ; CDynamicPool<CDungeonBlock>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCDungeonBlock@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCDungeonBlock@@@@UAE@XZ PROC		; CDynamicPool<CDungeonBlock>::~CDynamicPool<CDungeonBlock>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCDungeonBlock@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCDungeonBlock@@@@UAE@XZ ENDP		; CDynamicPool<CDungeonBlock>::~CDynamicPool<CDungeonBlock>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CArea::ms_AmbienceInstancePool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A ; CArea::ms_AmbienceInstancePool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USAmbienceInstance@CArea@@@@UAE@XZ ; CDynamicPool<CArea::SAmbienceInstance>::~CDynamicPool<CArea::SAmbienceInstance>
??__F?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CArea::ms_AmbienceInstancePool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??__E?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CArea::ms_AmbienceInstancePool'', COMDAT

; 17   : CDynamicPool<CArea::TAmbienceInstance>	CArea::ms_AmbienceInstancePool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CArea::ms_AmbienceInstancePool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CArea::ms_AmbienceInstancePool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USAmbienceInstance@CArea@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USAmbienceInstance@CArea@@@@UAEPAXI@Z PROC ; CDynamicPool<CArea::SAmbienceInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USAmbienceInstance@CArea@@@@UAE@XZ ; CDynamicPool<CArea::SAmbienceInstance>::~CDynamicPool<CArea::SAmbienceInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USAmbienceInstance@CArea@@@@UAEPAXI@Z ENDP ; CDynamicPool<CArea::SAmbienceInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USAmbienceInstance@CArea@@@@KAXPAUSAmbienceInstance@CArea@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USAmbienceInstance@CArea@@@@KAXPAUSAmbienceInstance@CArea@@@Z PROC ; CDynamicPool<CArea::SAmbienceInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USAmbienceInstance@CArea@@@@KAXPAUSAmbienceInstance@CArea@@@Z ENDP ; CDynamicPool<CArea::SAmbienceInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USAmbienceInstance@CArea@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USAmbienceInstance@CArea@@@@UAE@XZ PROC ; CDynamicPool<CArea::SAmbienceInstance>::~CDynamicPool<CArea::SAmbienceInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USAmbienceInstance@CArea@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USAmbienceInstance@CArea@@@@UAE@XZ ENDP ; CDynamicPool<CArea::SAmbienceInstance>::~CDynamicPool<CArea::SAmbienceInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CArea::ms_AttributeInstancePool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A ; CArea::ms_AttributeInstancePool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCAttributeInstance@@@@UAE@XZ ; CDynamicPool<CAttributeInstance>::~CDynamicPool<CAttributeInstance>
??__F?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CArea::ms_AttributeInstancePool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??__E?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CArea::ms_AttributeInstancePool'', COMDAT

; 16   : CDynamicPool<CAttributeInstance>		CArea::ms_AttributeInstancePool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CArea::ms_AttributeInstancePool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CArea::ms_AttributeInstancePool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCAttributeInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCAttributeInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CAttributeInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCAttributeInstance@@@@UAE@XZ ; CDynamicPool<CAttributeInstance>::~CDynamicPool<CAttributeInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCAttributeInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CAttributeInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCAttributeInstance@@@@KAXPAVCAttributeInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCAttributeInstance@@@@KAXPAVCAttributeInstance@@@Z PROC ; CDynamicPool<CAttributeInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCAttributeInstance@@@@KAXPAVCAttributeInstance@@@Z ENDP ; CDynamicPool<CAttributeInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCAttributeInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCAttributeInstance@@@@UAE@XZ PROC	; CDynamicPool<CAttributeInstance>::~CDynamicPool<CAttributeInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCAttributeInstance@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCAttributeInstance@@@@UAE@XZ ENDP	; CDynamicPool<CAttributeInstance>::~CDynamicPool<CAttributeInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CArea::ms_ObjectInstancePool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A ; CArea::ms_ObjectInstancePool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USObjectInstance@CArea@@@@UAE@XZ ; CDynamicPool<CArea::SObjectInstance>::~CDynamicPool<CArea::SObjectInstance>
??__F?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CArea::ms_ObjectInstancePool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??__E?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CArea::ms_ObjectInstancePool'', COMDAT

; 15   : CDynamicPool<CArea::TObjectInstance>	CArea::ms_ObjectInstancePool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CArea::ms_ObjectInstancePool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CArea::ms_ObjectInstancePool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USObjectInstance@CArea@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USObjectInstance@CArea@@@@UAEPAXI@Z PROC ; CDynamicPool<CArea::SObjectInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USObjectInstance@CArea@@@@UAE@XZ ; CDynamicPool<CArea::SObjectInstance>::~CDynamicPool<CArea::SObjectInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USObjectInstance@CArea@@@@UAEPAXI@Z ENDP ; CDynamicPool<CArea::SObjectInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USObjectInstance@CArea@@@@KAXPAUSObjectInstance@CArea@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USObjectInstance@CArea@@@@KAXPAUSObjectInstance@CArea@@@Z PROC ; CDynamicPool<CArea::SObjectInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USObjectInstance@CArea@@@@KAXPAUSObjectInstance@CArea@@@Z ENDP ; CDynamicPool<CArea::SObjectInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USObjectInstance@CArea@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USObjectInstance@CArea@@@@UAE@XZ PROC	; CDynamicPool<CArea::SObjectInstance>::~CDynamicPool<CArea::SObjectInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USObjectInstance@CArea@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USObjectInstance@CArea@@@@UAE@XZ ENDP	; CDynamicPool<CArea::SObjectInstance>::~CDynamicPool<CArea::SObjectInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 70 04	 push	 DWORD PTR [eax+4]
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0000e	6a 34		 push	 52			; 00000034H
  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00017	83 c4 08	 add	 esp, 8
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCArea@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCArea@@UAEPAXI@Z PROC				; CArea::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CArea@@UAE@XZ	; CArea::~CArea
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 a0 00 00 00	 push	 160			; 000000a0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCArea@@UAEPAXI@Z ENDP				; CArea::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Delete@CArea@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkArea$ = 8						; size = 4
?Delete@CArea@@SAXPAV1@@Z PROC				; CArea::Delete, COMDAT

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 33   : 	pkArea->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkArea$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CArea@@QAEXXZ	; CArea::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 34   : 	ms_kPool.Free(pkArea);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 35   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 35   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CArea@@SAXPAV1@@Z ENDP				; CArea::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?New@CArea@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CArea@@SAPAV1@XZ PROC				; CArea::New, COMDAT

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CArea@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+16, ecx
  00030	0f 85 87 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	68 a0 00 00 00	 push	 160			; 000000a0H
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 c0		 test	 eax, eax
  0004f	74 0b		 je	 SHORT $LN6@New
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??0CArea@@QAE@XZ	; CArea::CArea
  00058	8b f0		 mov	 esi, eax
  0005a	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  0005c	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006d	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+12
  00073	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00075	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 28   : 	return ms_kPool.Alloc();

  00077	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00079	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00080	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 29   : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5e		 pop	 esi
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00096	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00099	51		 push	 ecx
  0009a	50		 push	 eax
  0009b	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+4
  000a0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a5	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 28   : 	return ms_kPool.Alloc();

  000ab	8b c6		 mov	 eax, esi

; 29   : }

  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5e		 pop	 esi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000bd	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000c0	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c3	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 29   : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5e		 pop	 esi
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CArea@@SAPAV1@XZ$0:
  00000	68 a0 00 00 00	 push	 160			; 000000a0H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CArea@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CArea@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CArea@@SAPAV1@XZ ENDP				; CArea::New
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?DestroySystem@CArea@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CArea@@SAXXZ PROC			; CArea::DestroySystem, COMDAT

; 38   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 38   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 19		 je	 SHORT $LN19@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+4
$LN19@DestroySys:

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  0002b	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00031	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+16
  00036	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003c	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00042	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CArea@@2V?$CDynamicPool@VCArea@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	3b f7		 cmp	 esi, edi
  00049	74 1e		 je	 SHORT $LN42@DestroySys
  0004b	0f 1f 44 00 00	 npad	 5
$LL43@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00050	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00052	85 c9		 test	 ecx, ecx
  00054	74 06		 je	 SHORT $LN41@DestroySys
  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 10		 call	 DWORD PTR [eax]
$LN41@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005c	83 c6 04	 add	 esi, 4
  0005f	3b f7		 cmp	 esi, edi
  00061	75 ed		 jne	 SHORT $LL43@DestroySys
  00063	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+4
$LN42@DestroySys:

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00069	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  0006f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+16
  00074	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007a	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00080	a3 14 00 00 00	 mov	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00085	3b f7		 cmp	 esi, edi
  00087	74 20		 je	 SHORT $LN65@DestroySys
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL66@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00090	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00092	85 c9		 test	 ecx, ecx
  00094	74 06		 je	 SHORT $LN64@DestroySys
  00096	8b 01		 mov	 eax, DWORD PTR [ecx]
  00098	6a 01		 push	 1
  0009a	ff 10		 call	 DWORD PTR [eax]
$LN64@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009c	83 c6 04	 add	 esi, 4
  0009f	3b f7		 cmp	 esi, edi
  000a1	75 ed		 jne	 SHORT $LL66@DestroySys
  000a3	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+4
$LN65@DestroySys:

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  000a9	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  000af	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+16
  000b4	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ba	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  000c0	a3 14 00 00 00	 mov	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000c5	3b f7		 cmp	 esi, edi
  000c7	74 20		 je	 SHORT $LN88@DestroySys
  000c9	0f 1f 80 00 00
	00 00		 npad	 7
$LL89@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  000d0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000d2	85 c9		 test	 ecx, ecx
  000d4	74 06		 je	 SHORT $LN87@DestroySys
  000d6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d8	6a 01		 push	 1
  000da	ff 10		 call	 DWORD PTR [eax]
$LN87@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000dc	83 c6 04	 add	 esi, 4
  000df	3b f7		 cmp	 esi, edi
  000e1	75 ed		 jne	 SHORT $LL89@DestroySys
  000e3	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+4
$LN88@DestroySys:

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  000e9	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  000ef	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+16
  000f4	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000fa	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00100	a3 14 00 00 00	 mov	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00105	3b f7		 cmp	 esi, edi
  00107	74 31		 je	 SHORT $LN138@DestroySys
  00109	0f 1f 80 00 00
	00 00		 npad	 7
$LL112@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00110	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00112	85 c9		 test	 ecx, ecx
  00114	74 06		 je	 SHORT $LN110@DestroySys
  00116	8b 01		 mov	 eax, DWORD PTR [ecx]
  00118	6a 01		 push	 1
  0011a	ff 10		 call	 DWORD PTR [eax]
$LN110@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0011c	83 c6 04	 add	 esi, 4
  0011f	3b f7		 cmp	 esi, edi
  00121	75 ed		 jne	 SHORT $LL112@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00123	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+4
  00128	a3 08 00 00 00	 mov	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 45   : }

  0012d	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+16
  00132	5f		 pop	 edi
  00133	a3 14 00 00 00	 mov	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+20, eax
  00138	5e		 pop	 esi
  00139	c3		 ret	 0
$LN138@DestroySys:
  0013a	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+16
  0013f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00140	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 45   : }

  00146	a3 14 00 00 00	 mov	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+20, eax
  0014b	5e		 pop	 esi
  0014c	c3		 ret	 0
?DestroySystem@CArea@@SAXXZ ENDP			; CArea::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEPAU?$_Tree_node@HPAX@2@U?$_Tree_id@PAU?$_Tree_node@HPAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEPAU?$_Tree_node@HPAX@2@U?$_Tree_id@PAU?$_Tree_node@HPAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEPAU?$_Tree_node@HPAX@2@U?$_Tree_id@PAU?$_Tree_node@HPAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 14		 push	 20			; 00000014H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 14		 push	 20			; 00000014H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAE@XZ PROC ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::~vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 f8	 and	 eax, -8			; fffffff8H
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAE@XZ ENDP ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::~vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@@std@@QAE@XZ PROC ; std::map<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> > >::~map<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >
??1?$map@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@@std@@QAE@XZ ENDP ; std::map<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> > >::~map<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::clear, COMDAT
; _this$ = ecx

; 1444 :     void clear() noexcept {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1445 :         const auto _Scary = _Get_scary();
; 1446 :         _Scary->_Orphan_ptr(nullptr);
; 1447 :         auto _Head = _Scary->_Myhead;

  00005	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00007	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 20		 jne	 SHORT $LN5@clear
$LL4@clear:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cb		 mov	 ecx, ebx
  00015	53		 push	 ebx
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL4@clear
$LN5@clear:

; 1449 :         _Head->_Parent  = _Head;

  00030	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  00033	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  00035	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00041	5b		 pop	 ebx

; 1453 :     }

  00042	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAE@XZ PROC ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::~vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAE@XZ ENDP ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::~vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@CAXXZ PROC ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@CAXXZ ENDP ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAE@XZ PROC ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::~vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::~vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAE@XZ PROC ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::~vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAE@XZ ENDP ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::~vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
_TEXT	SEGMENT
_this$1$ = -96						; size = 4
$T2 = -92						; size = 4
_pkNewData$3 = -92					; size = 4
_Data$ = -88						; size = 72
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pObjectInstance$ = 8					; size = 4
_c_pData$ = 12						; size = 4
_pProperty$ = 16					; size = 4
?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z PROC ; CArea::__SetObjectInstance_SetDungeonBlock, COMDAT
; _this$ = ecx

; 707  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d a0	 mov	 DWORD PTR _this$1$[ebp], ecx
  0002e	8b 7d 08	 mov	 edi, DWORD PTR _pObjectInstance$[ebp]
  00031	8b 5d 0c	 mov	 ebx, DWORD PTR _c_pData$[ebp]
  00034	8b 45 10	 mov	 eax, DWORD PTR _pProperty$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00037	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003e	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00045	c6 45 a8 00	 mov	 BYTE PTR _Data$[ebp], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00049	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00050	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+44], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00057	c6 45 c0 00	 mov	 BYTE PTR _Data$[ebp+24], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0005b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+64], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00062	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+68], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00069	c6 45 d8 00	 mov	 BYTE PTR _Data$[ebp+48], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 709  : 	if (!prt::PropertyDungeonBlockStringToData(pProperty, &Data))

  0006d	8d 4d a8	 lea	 ecx, DWORD PTR _Data$[ebp]
  00070	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00077	51		 push	 ecx
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?PropertyDungeonBlockStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyDungeonBlock@1@@Z ; prt::PropertyDungeonBlockStringToData
  0007e	83 c4 08	 add	 esp, 8
  00081	84 c0		 test	 al, al
  00083	0f 84 3a 01 00
	00		 je	 $LN9@SetObjectI

; 710  : 		return;
; 711  : 
; 712  : 	pObjectInstance->dwType = prt::PROPERTY_TYPE_DUNGEON_BLOCK;

  00089	c7 47 04 05 00
	00 00		 mov	 DWORD PTR [edi+4], 5
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00090	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+20
  00095	39 05 10 00 00
	00		 cmp	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+16, eax
  0009b	75 61		 jne	 SHORT $LN41@SetObjectI

; 65   : 				T* pkNewData=new T;

  0009d	68 88 02 00 00	 push	 648			; 00000288H
  000a2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000a7	83 c4 04	 add	 esp, 4
  000aa	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  000ad	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b1	85 c0		 test	 eax, eax
  000b3	74 0b		 je	 SHORT $LN43@SetObjectI
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??0CDungeonBlock@@QAE@XZ ; CDungeonBlock::CDungeonBlock
  000bc	8b f0		 mov	 esi, eax
  000be	eb 02		 jmp	 SHORT $LN44@SetObjectI
$LN43@SetObjectI:
  000c0	33 f6		 xor	 esi, esi
$LN44@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000c2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  000c7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000cb	89 75 a4	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000ce	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+12
  000d4	74 11		 je	 SHORT $LN51@SetObjectI

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000d6	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000d8	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000df	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+32

; 68   : 				return pkNewData;

  000e5	eb 22		 jmp	 SHORT $LN40@SetObjectI
$LN51@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000e7	8d 4d a4	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  000ea	51		 push	 ecx
  000eb	50		 push	 eax
  000ec	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+4
  000f1	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000f6	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+32

; 68   : 				return pkNewData;

  000fc	eb 0b		 jmp	 SHORT $LN40@SetObjectI
$LN41@SetObjectI:

; 69   : 			}
; 70   : 
; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000fe	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00101	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  00104	a3 14 00 00 00	 mov	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+20, eax
$LN40@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00109	83 7d d4 10	 cmp	 DWORD PTR _Data$[ebp+44], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  0010d	8d 45 c0	 lea	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 714  : 	pObjectInstance->pDungeonBlock->Load(Data.strFileName.c_str());

  00110	8b ce		 mov	 ecx, esi
  00112	89 77 24	 mov	 DWORD PTR [edi+36], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00115	0f 43 45 c0	 cmovae	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 714  : 	pObjectInstance->pDungeonBlock->Load(Data.strFileName.c_str());

  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?Load@CDungeonBlock@@QAE_NPBD@Z ; CDungeonBlock::Load

; 715  : 	pObjectInstance->pDungeonBlock->SetPosition(c_pData->Position.x, c_pData->Position.y, c_pData->Position.z + c_pData->m_fHeightBias);

  0011f	f3 0f 10 43 24	 movss	 xmm0, DWORD PTR [ebx+36]
  00124	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00127	f3 0f 58 43 08	 addss	 xmm0, DWORD PTR [ebx+8]
  0012c	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0012f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00135	f3 0f 10 43 04	 movss	 xmm0, DWORD PTR [ebx+4]
  0013a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00140	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	e8 00 00 00 00	 call	 ?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetPosition

; 716  : 	pObjectInstance->pDungeonBlock->SetRotation(

  0014e	f3 0f 10 43 20	 movss	 xmm0, DWORD PTR [ebx+32]
  00153	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00156	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00159	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0015f	f3 0f 10 43 1c	 movss	 xmm0, DWORD PTR [ebx+28]
  00164	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0016a	f3 0f 10 43 18	 movss	 xmm0, DWORD PTR [ebx+24]
  0016f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00174	e8 00 00 00 00	 call	 ?SetRotation@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetRotation

; 717  : 		c_pData->m_fYaw,
; 718  : 		c_pData->m_fPitch,
; 719  : 		c_pData->m_fRoll
; 720  : 	);
; 721  : 	pObjectInstance->pDungeonBlock->Update();

  00179	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0017c	e8 00 00 00 00	 call	 ?Update@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Update

; 722  : 	pObjectInstance->pDungeonBlock->BuildBoundingSphere();

  00181	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00184	e8 00 00 00 00	 call	 ?BuildBoundingSphere@CDungeonBlock@@QAEXXZ ; CDungeonBlock::BuildBoundingSphere

; 723  : 	pObjectInstance->pDungeonBlock->RegisterBoundingSphere();

  00189	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0018c	e8 00 00 00 00	 call	 ?RegisterBoundingSphere@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::RegisterBoundingSphere
  00191	33 f6		 xor	 esi, esi
$LL4@SetObjectI:

; 725  : 		if (0 != c_pData->abyPortalID[j])

  00193	8a 44 33 10	 mov	 al, BYTE PTR [ebx+esi+16]
  00197	84 c0		 test	 al, al
  00199	74 0d		 je	 SHORT $LN2@SetObjectI

; 726  : 			pObjectInstance->pDungeonBlock->SetPortal(j, c_pData->abyPortalID[j]);

  0019b	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0019e	0f b6 c0	 movzx	 eax, al
  001a1	50		 push	 eax
  001a2	56		 push	 esi
  001a3	e8 00 00 00 00	 call	 ?SetPortal@CGraphicObjectInstance@@QAEXKH@Z ; CGraphicObjectInstance::SetPortal
$LN2@SetObjectI:

; 724  : 	for (int j = 0; j < PORTAL_ID_MAX_NUM; ++j)

  001a8	46		 inc	 esi
  001a9	83 fe 08	 cmp	 esi, 8
  001ac	7c e5		 jl	 SHORT $LL4@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001ae	83 7d ec 10	 cmp	 DWORD PTR _Data$[ebp+68], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  001b2	8d 45 d8	 lea	 eax, DWORD PTR _Data$[ebp+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 727  : 	__LoadAttribute(pObjectInstance, Data.strAttributeDataFileName.c_str());

  001b5	8b 4d a0	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  001b8	0f 43 45 d8	 cmovae	 eax, DWORD PTR _Data$[ebp+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 727  : 	__LoadAttribute(pObjectInstance, Data.strAttributeDataFileName.c_str());

  001bc	50		 push	 eax
  001bd	57		 push	 edi
  001be	e8 00 00 00 00	 call	 ?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z ; CArea::__LoadAttribute
$LN9@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001c3	8b 45 ec	 mov	 eax, DWORD PTR _Data$[ebp+68]
  001c6	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c9	72 0d		 jb	 SHORT $LN80@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001cb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001cc	50		 push	 eax
  001cd	ff 75 d8	 push	 DWORD PTR _Data$[ebp+48]
  001d0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001d5	83 c4 08	 add	 esp, 8
$LN80@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001d8	8b 45 d4	 mov	 eax, DWORD PTR _Data$[ebp+44]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  001db	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+64], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001e2	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+68], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001e9	c6 45 d8 00	 mov	 BYTE PTR _Data$[ebp+48], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  001ed	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001f0	72 0d		 jb	 SHORT $LN90@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001f2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001f3	50		 push	 eax
  001f4	ff 75 c0	 push	 DWORD PTR _Data$[ebp+24]
  001f7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001fc	83 c4 08	 add	 esp, 8
$LN90@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001ff	8b 45 bc	 mov	 eax, DWORD PTR _Data$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00202	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00209	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+44], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00210	c6 45 c0 00	 mov	 BYTE PTR _Data$[ebp+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00214	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00217	72 0d		 jb	 SHORT $LN100@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00219	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0021a	50		 push	 eax
  0021b	ff 75 a8	 push	 DWORD PTR _Data$[ebp]
  0021e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00223	83 c4 08	 add	 esp, 8
$LN100@SetObjectI:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 728  : }

  00226	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00229	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00230	59		 pop	 ecx
  00231	5f		 pop	 edi
  00232	5e		 pop	 esi
  00233	5b		 pop	 ebx
  00234	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00237	33 cd		 xor	 ecx, ebp
  00239	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0023e	8b e5		 mov	 esp, ebp
  00240	5d		 pop	 ebp
  00241	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0:
  00000	8d 4d a8	 lea	 ecx, DWORD PTR _Data$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1TPropertyDungeonBlock@prt@@QAE@XZ
__unwindfunclet$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$5:
  00008	68 88 02 00 00	 push	 648			; 00000288H
  0000d	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00016	83 c4 08	 add	 esp, 8
  00019	c3		 ret	 0
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ENDP ; CArea::__SetObjectInstance_SetDungeonBlock
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pObjectInstance$ = 8					; size = 4
_c_pData$ = 12						; size = 4
_pProperty$ = 16					; size = 4
?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z PROC ; CArea::__SetObjectInstance_SetAmbience, COMDAT
; _this$ = ecx

; 678  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00026	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+20
  0002b	39 05 10 00 00
	00		 cmp	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+16, eax
  00031	75 64		 jne	 SHORT $LN10@SetObjectI

; 65   : 				T* pkNewData=new T;

  00033	6a 6c		 push	 108			; 0000006cH
  00035	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	85 c0		 test	 eax, eax
  00049	74 0b		 je	 SHORT $LN12@SetObjectI
  0004b	8b c8		 mov	 ecx, eax
  0004d	e8 00 00 00 00	 call	 ??0SAmbienceInstance@CArea@@QAE@XZ ; CArea::SAmbienceInstance::SAmbienceInstance
  00052	8b f0		 mov	 esi, eax
  00054	eb 02		 jmp	 SHORT $LN13@SetObjectI
$LN12@SetObjectI:
  00056	33 f6		 xor	 esi, esi
$LN13@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00058	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00067	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+12
  0006d	74 11		 je	 SHORT $LN20@SetObjectI

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0006f	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00071	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00078	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+32

; 68   : 				return pkNewData;

  0007e	eb 22		 jmp	 SHORT $LN9@SetObjectI
$LN20@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00080	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00083	51		 push	 ecx
  00084	50		 push	 eax
  00085	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+4
  0008a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Emplace_reallocate<CArea::SAmbienceInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0008f	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+32

; 68   : 				return pkNewData;

  00095	eb 0b		 jmp	 SHORT $LN9@SetObjectI
$LN10@SetObjectI:

; 69   : 			}
; 70   : 
; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00097	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  0009a	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  0009d	a3 14 00 00 00	 mov	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+20, eax
$LN9@SetObjectI:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 679  : 	pObjectInstance->pAmbienceInstance = ms_AmbienceInstancePool.Alloc();

  000a2	8b 7d 08	 mov	 edi, DWORD PTR _pObjectInstance$[ebp]

; 680  :  	if (!prt::PropertyAmbienceStringToData(pProperty, &pObjectInstance->pAmbienceInstance->AmbienceData))

  000a5	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  000a8	50		 push	 eax
  000a9	ff 75 10	 push	 DWORD PTR _pProperty$[ebp]
  000ac	89 77 20	 mov	 DWORD PTR [edi+32], esi
  000af	e8 00 00 00 00	 call	 ?PropertyAmbienceStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyAmbience@1@@Z ; prt::PropertyAmbienceStringToData
  000b4	83 c4 08	 add	 esp, 8
  000b7	84 c0		 test	 al, al
  000b9	0f 84 d1 00 00
	00		 je	 $LN7@SetObjectI

; 681  : 		return;
; 682  : 
; 683  : 	pObjectInstance->dwType = prt::PROPERTY_TYPE_AMBIENCE;
; 684  : 
; 685  : 	TAmbienceInstance * pAmbienceInstance = pObjectInstance->pAmbienceInstance;
; 686  : 	pAmbienceInstance->fx = c_pData->Position.x;

  000bf	8b 4d 0c	 mov	 ecx, DWORD PTR _c_pData$[ebp]
  000c2	c7 47 04 04 00
	00 00		 mov	 DWORD PTR [edi+4], 4
  000c9	8b 7f 20	 mov	 edi, DWORD PTR [edi+32]

; 692  : 	if (0 == pAmbienceInstance->AmbienceData.strPlayType.compare("ONCE"))

  000cc	8d 77 38	 lea	 esi, DWORD PTR [edi+56]
  000cf	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d1	89 47 04	 mov	 DWORD PTR [edi+4], eax
  000d4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000d7	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000da	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  000df	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  000e4	f3 0f 11 47 0c	 movss	 DWORD PTR [edi+12], xmm0
  000e9	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  000ec	89 47 10	 mov	 DWORD PTR [edi+16], eax
  000ef	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  000f2	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  000f5	8b c6		 mov	 eax, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  000f7	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000fb	72 02		 jb	 SHORT $LN57@SetObjectI

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000fd	8b 06		 mov	 eax, DWORD PTR [esi]
$LN57@SetObjectI:

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  000ff	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00102	6a 04		 push	 4
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_04GHGHGAKN@ONCE@
  00109	53		 push	 ebx
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  00110	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 692  : 	if (0 == pAmbienceInstance->AmbienceData.strPlayType.compare("ONCE"))

  00113	85 c0		 test	 eax, eax
  00115	75 1b		 jne	 SHORT $LN3@SetObjectI

; 693  : 	{
; 694  : 		pAmbienceInstance->Update = &TAmbienceInstance::UpdateOnceSound;

  00117	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], OFFSET ?UpdateOnceSound@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::UpdateOnceSound

; 703  : 	}
; 704  : }

  0011e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00128	59		 pop	 ecx
  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 0c 00	 ret	 12			; 0000000cH
$LN3@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00132	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00136	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  00138	72 02		 jb	 SHORT $LN58@SetObjectI

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0013a	8b 06		 mov	 eax, DWORD PTR [esi]
$LN58@SetObjectI:

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  0013c	6a 04		 push	 4
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_04MOOLDHHD@STEP@
  00143	53		 push	 ebx
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  0014a	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 696  : 	else if (0 == pAmbienceInstance->AmbienceData.strPlayType.compare("STEP"))

  0014d	85 c0		 test	 eax, eax
  0014f	75 1b		 jne	 SHORT $LN5@SetObjectI

; 697  : 	{
; 698  : 		pAmbienceInstance->Update = &TAmbienceInstance::UpdateStepSound;

  00151	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], OFFSET ?UpdateStepSound@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::UpdateStepSound

; 703  : 	}
; 704  : }

  00158	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00162	59		 pop	 ecx
  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 0c 00	 ret	 12			; 0000000cH
$LN5@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0016c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00170	72 02		 jb	 SHORT $LN51@SetObjectI

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00172	8b 36		 mov	 esi, DWORD PTR [esi]
$LN51@SetObjectI:

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00174	6a 04		 push	 4
  00176	68 00 00 00 00	 push	 OFFSET ??_C@_04KGNEGCGI@LOOP@
  0017b	53		 push	 ebx
  0017c	56		 push	 esi
  0017d	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  00182	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 700  : 	else if (0 == pAmbienceInstance->AmbienceData.strPlayType.compare("LOOP"))

  00185	85 c0		 test	 eax, eax
  00187	75 07		 jne	 SHORT $LN7@SetObjectI

; 701  : 	{
; 702  : 		pAmbienceInstance->Update = &TAmbienceInstance::UpdateLoopSound;

  00189	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], OFFSET ?UpdateLoopSound@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::UpdateLoopSound
$LN7@SetObjectI:

; 703  : 	}
; 704  : }

  00190	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00193	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0019a	59		 pop	 ecx
  0019b	5f		 pop	 edi
  0019c	5e		 pop	 esi
  0019d	5b		 pop	 ebx
  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0:
  00000	6a 6c		 push	 108			; 0000006cH
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ENDP ; CArea::__SetObjectInstance_SetAmbience
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
_TEXT	SEGMENT
__Loc$2 = -172						; size = 12
$T3 = -160						; size = 12
$T4 = -156						; size = 8
_pData$ = -148						; size = 4
$T5 = -144						; size = 4
_pEffectInstance$ = -140				; size = 4
$T6 = -136						; size = 8
_this$GSCopy$1$ = -132					; size = 4
__Myhead$7 = -132					; size = 4
_mat$ = -128						; size = 64
_Data$ = -64						; size = 48
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pObjectInstance$ = 8					; size = 4
_c_pData$ = 12						; size = 4
_pProperty$ = 16					; size = 4
?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z PROC ; CArea::__SetObjectInstance_SetEffect, COMDAT
; _this$ = ecx

; 544  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00034	8b 75 08	 mov	 esi, DWORD PTR _pObjectInstance$[ebp]
  00037	8b 5d 0c	 mov	 ebx, DWORD PTR _c_pData$[ebp]
  0003a	8b 45 10	 mov	 eax, DWORD PTR _pProperty$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0003d	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00044	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004b	c6 45 c0 00	 mov	 BYTE PTR _Data$[ebp], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0004f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00056	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+44], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0005d	c6 45 d8 00	 mov	 BYTE PTR _Data$[ebp+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 546  : 	if (!prt::PropertyEffectStringToData(pProperty, &Data))

  00061	8d 4d c0	 lea	 ecx, DWORD PTR _Data$[ebp]
  00064	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006b	51		 push	 ecx
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?PropertyEffectStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyEffect@1@@Z ; prt::PropertyEffectStringToData
  00072	83 c4 08	 add	 esp, 8
  00075	84 c0		 test	 al, al
  00077	0f 84 e4 01 00
	00		 je	 $LN107@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0007d	83 7d ec 10	 cmp	 DWORD PTR _Data$[ebp+44], 16 ; 00000010H
  00081	8d 45 d8	 lea	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 550  : 	pObjectInstance->dwEffectID = GetCaseCRC32(Data.strFileName.c_str(),Data.strFileName.size());

  00084	ff 75 e8	 push	 DWORD PTR _Data$[ebp+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00087	0f 43 45 d8	 cmovae	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 550  : 	pObjectInstance->dwEffectID = GetCaseCRC32(Data.strFileName.c_str(),Data.strFileName.size());

  0008b	50		 push	 eax
  0008c	c7 46 04 03 00
	00 00		 mov	 DWORD PTR [esi+4], 3
  00093	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  00098	83 c4 08	 add	 esp, 8
  0009b	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 551  : 	CEffectManager & rem = CEffectManager::Instance();

  0009e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton

; 552  : 	CEffectData * pData;
; 553  : 	if (!rem.GetEffectData(pObjectInstance->dwEffectID,&pData))

  000a4	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp]
  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	8b cf		 mov	 ecx, edi
  000ae	e8 00 00 00 00	 call	 ?GetEffectData@CEffectManager@@QAE_NKPAPAVCEffectData@@@Z ; CEffectManager::GetEffectData
  000b3	84 c0		 test	 al, al
  000b5	75 40		 jne	 SHORT $LN4@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000b7	83 7d ec 10	 cmp	 DWORD PTR _Data$[ebp+44], 16 ; 00000010H
  000bb	8d 45 d8	 lea	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 555  : 		if (!rem.RegisterEffect(Data.strFileName.c_str()))

  000be	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000c0	0f 43 45 d8	 cmovae	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 555  : 		if (!rem.RegisterEffect(Data.strFileName.c_str()))

  000c4	8b cf		 mov	 ecx, edi
  000c6	6a 00		 push	 0
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect
  000ce	85 c0		 test	 eax, eax
  000d0	75 25		 jne	 SHORT $LN4@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000d2	83 7d ec 10	 cmp	 DWORD PTR _Data$[ebp+44], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  000d6	8d 45 d8	 lea	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 557  : 			pObjectInstance->dwEffectID = 0xffffffff;

  000d9	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000e0	0f 43 45 d8	 cmovae	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 558  : 			TraceError("CArea::SetEffect effect register error %s\n",Data.strFileName.c_str());

  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@BOJNBGJP@CArea?3?3SetEffect?5effect?5registe@
  000ea	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000ef	83 c4 08	 add	 esp, 8
  000f2	e9 6a 01 00 00	 jmp	 $LN107@SetObjectI
$LN4@SetObjectI:

; 559  : 			return;
; 560  : 		}
; 561  : 	}
; 562  : 
; 563  : 	CEffectInstance * pEffectInstance;
; 564  : 	rem.CreateUnsafeEffectInstance(pObjectInstance->dwEffectID, &pEffectInstance);

  000f7	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _pEffectInstance$[ebp]
  000fd	8b cf		 mov	 ecx, edi
  000ff	50		 push	 eax
  00100	ff 76 18	 push	 DWORD PTR [esi+24]
  00103	e8 00 00 00 00	 call	 ?CreateUnsafeEffectInstance@CEffectManager@@QAEXKPAPAVCEffectInstance@@@Z ; CEffectManager::CreateUnsafeEffectInstance

; 565  : 
; 566  : 	D3DXMATRIX mat;
; 567  : 	D3DXMatrixRotationYawPitchRoll(&mat,

  00108	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3c8efa35
  00110	8d 45 80	 lea	 eax, DWORD PTR _mat$[ebp]
  00113	f3 0f 10 43 20	 movss	 xmm0, DWORD PTR [ebx+32]
  00118	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0011b	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0011f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00125	f3 0f 10 43 1c	 movss	 xmm0, DWORD PTR [ebx+28]
  0012a	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0012e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00134	f3 0f 10 43 18	 movss	 xmm0, DWORD PTR [ebx+24]
  00139	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0013d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 _D3DXMatrixRotationYawPitchRoll@16

; 568  : 		D3DXToRadian(c_pData->m_fYaw),
; 569  : 		D3DXToRadian(c_pData->m_fPitch),
; 570  : 		D3DXToRadian(c_pData->m_fRoll)
; 571  : 	);
; 572  : 
; 573  : 	mat._41 = c_pData->Position.x;

  00148	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]

; 574  : 	mat._42 = c_pData->Position.y;
; 575  : 	mat._43 = c_pData->Position.z + c_pData->m_fHeightBias;
; 576  : 
; 577  : 	pEffectInstance->SetGlobalMatrix(mat);

  0014c	8d 45 80	 lea	 eax, DWORD PTR _mat$[ebp]
  0014f	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _pEffectInstance$[ebp]
  00155	f3 0f 11 45 b0	 movss	 DWORD PTR _mat$[ebp+48], xmm0
  0015a	f3 0f 10 43 04	 movss	 xmm0, DWORD PTR [ebx+4]
  0015f	f3 0f 11 45 b4	 movss	 DWORD PTR _mat$[ebp+52], xmm0
  00164	f3 0f 10 43 24	 movss	 xmm0, DWORD PTR [ebx+36]
  00169	f3 0f 58 43 08	 addss	 xmm0, DWORD PTR [ebx+8]
  0016e	50		 push	 eax
  0016f	f3 0f 11 45 b8	 movss	 DWORD PTR _mat$[ebp+56], xmm0
  00174	e8 00 00 00 00	 call	 ?SetGlobalMatrix@CEffectInstance@@QAEXABUD3DXMATRIX@@@Z ; CEffectInstance::SetGlobalMatrix

; 579  : 	pObjectInstance->dwEffectInstanceIndex = m_EffectInstanceMap.size();

  00179	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0017f	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _pEffectInstance$[ebp]
  00185	89 8d 70 ff ff
	ff		 mov	 DWORD PTR $T5[ebp], ecx
  0018b	89 8d 7c ff ff
	ff		 mov	 DWORD PTR $T6[ebp+4], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 579  : 	pObjectInstance->dwEffectInstanceIndex = m_EffectInstanceMap.size();

  00191	8b 98 90 00 00
	00		 mov	 ebx, DWORD PTR [eax+144]

; 580  : 	m_EffectInstanceMap.insert(TEffectInstanceMap::value_type(pObjectInstance->dwEffectInstanceIndex, pEffectInstance));

  00197	8d b8 8c 00 00
	00		 lea	 edi, DWORD PTR [eax+140]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0019d	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 579  : 	pObjectInstance->dwEffectInstanceIndex = m_EffectInstanceMap.size();

  001a3	89 5e 1c	 mov	 DWORD PTR [esi+28], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  001a6	50		 push	 eax
  001a7	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001ad	89 9d 78 ff ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  001b3	50		 push	 eax
  001b4	8b cf		 mov	 ecx, edi
  001b6	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::_Find_lower_bound<unsigned long>
  001bb	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  001bf	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  001c2	66 0f d6 85 54
	ff ff ff	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  001ca	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001ce	75 09		 jne	 SHORT $LN61@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  001d0	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  001d3	0f 83 88 00 00
	00		 jae	 $LN107@SetObjectI
$LN61@SetObjectI:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  001d9	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  001e0	0f 84 d5 00 00
	00		 je	 $LN145@SetObjectI

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  001e6	8b 07		 mov	 eax, DWORD PTR [edi]
  001e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR __Myhead$7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  001ee	89 bd 64 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001f4	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  001f6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  001fa	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00204	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00209	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0020b	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00211	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00214	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00217	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$7[ebp]
  0021d	50		 push	 eax
  0021e	56		 push	 esi
  0021f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00224	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$7[ebp]
  0022a	50		 push	 eax
  0022b	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0022e	50		 push	 eax
  0022f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00234	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$7[ebp]
  0023a	50		 push	 eax
  0023b	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0023e	50		 push	 eax
  0023f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * &>
  00244	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  00247	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0024d	8b cf		 mov	 ecx, edi
  0024f	56		 push	 esi
  00250	ff b5 58 ff ff
	ff		 push	 DWORD PTR __Loc$2[ebp+4]
  00256	ff b5 54 ff ff
	ff		 push	 DWORD PTR __Loc$2[ebp]
  0025c	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Insert_node
$LN107@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00261	8b 45 ec	 mov	 eax, DWORD PTR _Data$[ebp+44]
  00264	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00267	72 0d		 jb	 SHORT $LN125@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00269	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0026a	50		 push	 eax
  0026b	ff 75 d8	 push	 DWORD PTR _Data$[ebp+24]
  0026e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00273	83 c4 08	 add	 esp, 8
$LN125@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00276	8b 45 d4	 mov	 eax, DWORD PTR _Data$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00279	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Data$[ebp+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00280	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _Data$[ebp+44], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00287	c6 45 d8 00	 mov	 BYTE PTR _Data$[ebp+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0028b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0028e	72 0d		 jb	 SHORT $LN135@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00290	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00291	50		 push	 eax
  00292	ff 75 c0	 push	 DWORD PTR _Data$[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0029a	83 c4 08	 add	 esp, 8
$LN135@SetObjectI:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 581  : }

  0029d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002a7	59		 pop	 ecx
  002a8	5f		 pop	 edi
  002a9	5e		 pop	 esi
  002aa	5b		 pop	 ebx
  002ab	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ae	33 cd		 xor	 ecx, ebp
  002b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b5	8b e5		 mov	 esp, ebp
  002b7	5d		 pop	 ebp
  002b8	c2 0c 00	 ret	 12			; 0000000cH
$LN145@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  002bb	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN143@SetObjectI:
  002c0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR _Data$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1TPropertyEffect@prt@@QAE@XZ
__unwindfunclet$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$6:
  00008	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 8a 50 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-176]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ENDP ; CArea::__SetObjectInstance_SetEffect
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
_TEXT	SEGMENT
_this$1$ = -472						; size = 4
_iMotionCount$1$ = -468					; size = 4
_rkResMgr$1$ = -464					; size = 4
_c_pData$GSCopy$1$ = -460				; size = 4
_iModelCount$1$ = -456					; size = 4
_uLODIndex$1$ = -452					; size = 4
_pThing$1$ = -448					; size = 4
$T2 = -444						; size = 24
$T3 = -420						; size = 24
_Data$ = -396						; size = 76
_stSrcModelFileName$4 = -320				; size = 24
_stLODModelFileName$5 = -296				; size = 24
_szLODModelFileNameEnd$6 = -272				; size = 256
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pObjectInstance$ = 8					; size = 4
_c_pData$ = 12						; size = 4
_pProperty$ = 16					; size = 4
?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z PROC ; CArea::__SetObjectInstance_SetBuilding, COMDAT
; _this$ = ecx

; 606  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 01 00
	00		 sub	 esp, 460		; 000001ccH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d 28 fe ff
	ff		 mov	 DWORD PTR _this$1$[ebp], ecx
  00033	8b 45 0c	 mov	 eax, DWORD PTR _c_pData$[ebp]
  00036	8b 7d 08	 mov	 edi, DWORD PTR _pObjectInstance$[ebp]
  00039	89 85 34 fe ff
	ff		 mov	 DWORD PTR _c_pData$GSCopy$1$[ebp], eax
  0003f	8b 45 10	 mov	 eax, DWORD PTR _pProperty$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00042	c7 85 84 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Data$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004c	c7 85 88 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _Data$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00056	c6 85 74 fe ff
	ff 00		 mov	 BYTE PTR _Data$[ebp], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0005d	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Data$[ebp+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00067	c7 85 a0 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _Data$[ebp+44], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00071	c6 85 8c fe ff
	ff 00		 mov	 BYTE PTR _Data$[ebp+24], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00078	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Data$[ebp+64], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00082	c7 85 b8 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _Data$[ebp+68], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0008c	c6 85 a4 fe ff
	ff 00		 mov	 BYTE PTR _Data$[ebp+48], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 608  : 	if (!prt::PropertyBuildingStringToData(pProperty, &Data))

  00093	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _Data$[ebp]
  00099	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?PropertyBuildingStringToData@prt@@YA_NPAVCProperty@@PAUTPropertyBuilding@1@@Z ; prt::PropertyBuildingStringToData
  000a7	83 c4 08	 add	 esp, 8
  000aa	84 c0		 test	 al, al
  000ac	0f 84 1c 04 00
	00		 je	 $LN24@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000b2	83 bd a0 fe ff
	ff 10		 cmp	 DWORD PTR _Data$[ebp+44], 16 ; 00000010H
  000b9	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 611  : 	CResourceManager& rkResMgr=CResourceManager::Instance();

  000bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000c5	0f 43 85 8c fe
	ff ff		 cmovae	 eax, DWORD PTR _Data$[ebp+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 613  : 	CGraphicThing * pThing = (CGraphicThing *)rkResMgr.GetResourcePointer(Data.strFileName.c_str());

  000cc	50		 push	 eax
  000cd	89 8d 30 fe ff
	ff		 mov	 DWORD PTR _rkResMgr$1$[ebp], ecx
  000d3	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  000d8	8b f0		 mov	 esi, eax

; 614  : 	pThing->AddReference();

  000da	8b ce		 mov	 ecx, esi
  000dc	89 b5 40 fe ff
	ff		 mov	 DWORD PTR _pThing$1$[ebp], esi
  000e2	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 615  : 
; 616  : 	if (pThing->IsEmpty())

  000e7	8b ce		 mov	 ecx, esi
  000e9	e8 00 00 00 00	 call	 ?IsEmpty@CResource@@QBE_NXZ ; CResource::IsEmpty
  000ee	84 c0		 test	 al, al
  000f0	0f 85 d8 03 00
	00		 jne	 $LN24@SetObjectI

; 617  : 	{
; 618  : #ifdef _DEBUG
; 619  : 		TraceError("CArea::SetBuilding: There is no data: %s", Data.strFileName.c_str());
; 620  : #endif
; 621  : 		return;
; 622  : 	}
; 623  : 
; 624  : 	int iModelCount = pThing->GetModelCount();

  000f6	8b ce		 mov	 ecx, esi
  000f8	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount

; 625  : 	int iMotionCount = pThing->GetMotionCount();

  000fd	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR _pThing$1$[ebp]
  00103	8b f0		 mov	 esi, eax
  00105	89 b5 38 fe ff
	ff		 mov	 DWORD PTR _iModelCount$1$[ebp], esi
  0010b	e8 00 00 00 00	 call	 ?GetMotionCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetMotionCount
  00110	89 85 2c fe ff
	ff		 mov	 DWORD PTR _iMotionCount$1$[ebp], eax

; 626  : 
; 627  : 	pObjectInstance->dwType = prt::PROPERTY_TYPE_BUILDING;

  00116	c7 47 04 02 00
	00 00		 mov	 DWORD PTR [edi+4], 2

; 628  : 	pObjectInstance->pThingInstance = CGraphicThingInstance::New();

  0011d	e8 00 00 00 00	 call	 ?New@CGraphicThingInstance@@SAPAV1@XZ ; CGraphicThingInstance::New

; 629  : 	pObjectInstance->pThingInstance->Initialize();

  00122	8b c8		 mov	 ecx, eax
  00124	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00127	e8 00 00 00 00	 call	 ?Initialize@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Initialize

; 630  : 	pObjectInstance->pThingInstance->ReserveModelThing(iModelCount);

  0012c	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0012f	56		 push	 esi
  00130	e8 00 00 00 00	 call	 ?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z ; CGraphicThingInstance::ReserveModelThing

; 631  : 	pObjectInstance->pThingInstance->ReserveModelInstance(iModelCount);

  00135	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00138	56		 push	 esi
  00139	e8 00 00 00 00	 call	 ?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z ; CGraphicThingInstance::ReserveModelInstance

; 632  : 	pObjectInstance->pThingInstance->RegisterModelThing(0, pThing);

  0013e	ff b5 40 fe ff
	ff		 push	 DWORD PTR _pThing$1$[ebp]
  00144	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00147	6a 00		 push	 0
  00149	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing
  0014e	33 f6		 xor	 esi, esi
$LL4@SetObjectI:

; 634  : 		if (0 != c_pData->abyPortalID[j])

  00150	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR _c_pData$GSCopy$1$[ebp]
  00156	8a 44 30 10	 mov	 al, BYTE PTR [eax+esi+16]
  0015a	84 c0		 test	 al, al
  0015c	74 0d		 je	 SHORT $LN2@SetObjectI

; 635  : 			pObjectInstance->pThingInstance->SetPortal(j, c_pData->abyPortalID[j]);

  0015e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00161	0f b6 c0	 movzx	 eax, al
  00164	50		 push	 eax
  00165	56		 push	 esi
  00166	e8 00 00 00 00	 call	 ?SetPortal@CGraphicObjectInstance@@QAEXKH@Z ; CGraphicObjectInstance::SetPortal
$LN2@SetObjectI:

; 633  : 	for (int j = 0; j < PORTAL_ID_MAX_NUM; ++j)

  0016b	46		 inc	 esi
  0016c	83 fe 08	 cmp	 esi, 8
  0016f	7c df		 jl	 SHORT $LL4@SetObjectI

; 636  : 
; 637  : 	{
; 638  : 		std::string stSrcModelFileName=Data.strFileName;

  00171	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR _Data$[ebp+24]
  00177	50		 push	 eax
  00178	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _stSrcModelFileName$4[ebp]
  0017e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00183	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _stLODModelFileName$5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0018d	c7 85 ec fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _stLODModelFileName$5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00197	c6 85 d8 fe ff
	ff 00		 mov	 BYTE PTR _stLODModelFileName$5[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 642  : 		for (UINT uLODIndex=1; uLODIndex<=3; ++uLODIndex)

  0019e	b8 01 00 00 00	 mov	 eax, 1
  001a3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001a7	89 85 3c fe ff
	ff		 mov	 DWORD PTR _uLODIndex$1$[ebp], eax
  001ad	0f 1f 00	 npad	 3
$LL7@SetObjectI:

; 644  : 			sprintf(szLODModelFileNameEnd, "_lod_%.2d.gr2", uLODIndex);

  001b0	50		 push	 eax
  001b1	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szLODModelFileNameEnd$6[ebp]
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NDEAKJNP@_lod_?$CF?42d?4gr2@
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 _sprintf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 604  :     if (_Hay_size != 0) { // room for match, look for it

  001c2	8b b5 d0 fe ff
	ff		 mov	 esi, DWORD PTR _stSrcModelFileName$4[ebp+16]

; 2144 :         const value_type* _Result = _Bx._Buf;

  001c8	8d 95 c0 fe ff
	ff		 lea	 edx, DWORD PTR _stSrcModelFileName$4[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 644  : 			sprintf(szLODModelFileNameEnd, "_lod_%.2d.gr2", uLODIndex);

  001ce	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  001d1	83 bd d4 fe ff
	ff 10		 cmp	 DWORD PTR _stSrcModelFileName$4[ebp+20], 16 ; 00000010H
  001d8	0f 43 95 c0 fe
	ff ff		 cmovae	 edx, DWORD PTR _stSrcModelFileName$4[ebp]

; 604  :     if (_Hay_size != 0) { // room for match, look for it

  001df	85 f6		 test	 esi, esi
  001e1	74 66		 je	 SHORT $LN72@SetObjectI

; 605  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  001e3	83 c9 ff	 or	 ecx, -1
  001e6	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  001e9	3b c1		 cmp	 eax, ecx
  001eb	0f 42 c8	 cmovb	 ecx, eax
  001ee	03 ca		 add	 ecx, edx

; 606  :             if (_Traits::eq(*_Match_try, _Ch)) {

  001f0	80 39 2e	 cmp	 BYTE PTR [ecx], 46	; 0000002eH
  001f3	74 0a		 je	 SHORT $LN237@SetObjectI
$LL86@SetObjectI:

; 608  :             }
; 609  : 
; 610  :             if (_Match_try == _Haystack) {

  001f5	3b ca		 cmp	 ecx, edx
  001f7	74 50		 je	 SHORT $LN72@SetObjectI

; 606  :             if (_Traits::eq(*_Match_try, _Ch)) {

  001f9	49		 dec	 ecx
  001fa	80 39 2e	 cmp	 BYTE PTR [ecx], 46	; 0000002eH
  001fd	75 f6		 jne	 SHORT $LL86@SetObjectI
$LN237@SetObjectI:

; 607  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  001ff	2b ca		 sub	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h

; 335  : 	if (string::npos != npos)

  00201	83 f9 ff	 cmp	 ecx, -1
  00204	74 43		 je	 SHORT $LN72@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  00206	3b f1		 cmp	 esi, ecx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00208	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 2144 :         const value_type* _Result = _Bx._Buf;

  00212	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _stSrcModelFileName$4[ebp]

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00218	c7 85 70 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  00222	0f 42 ce	 cmovb	 ecx, esi

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00225	c6 85 5c fe ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0

; 2145 :         if (_Large_string_engaged()) {

  0022c	83 bd d4 fe ff
	ff 10		 cmp	 DWORD PTR _stSrcModelFileName$4[ebp+20], 16 ; 00000010H

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00233	51		 push	 ecx

; 2145 :         if (_Large_string_engaged()) {

  00234	0f 43 85 c0 fe
	ff ff		 cmovae	 eax, DWORD PTR _stSrcModelFileName$4[ebp]

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0023b	8d 8d 5c fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h

; 336  : 		return std::string(str, 0, npos);

  00247	eb 12		 jmp	 SHORT $LN71@SetObjectI
$LN72@SetObjectI:

; 337  : 
; 338  : 	return str;

  00249	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _stSrcModelFileName$4[ebp]
  0024f	50		 push	 eax
  00250	8d 8d 5c fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00256	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN71@SetObjectI:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 645  : 			stLODModelFileName = CFileNameHelper::NoExtension(stSrcModelFileName) + szLODModelFileNameEnd;

  0025b	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szLODModelFileNameEnd$6[ebp]
  00261	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00265	50		 push	 eax
  00266	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0026c	50		 push	 eax
  0026d	8d 85 44 fe ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00273	50		 push	 eax
  00274	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00279	8b f0		 mov	 esi, eax
  0027b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  0027e	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _stLODModelFileName$5[ebp]
  00284	3b c6		 cmp	 eax, esi
  00286	74 5e		 je	 SHORT $LN138@SetObjectI

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00288	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _stLODModelFileName$5[ebp+20]
  0028e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00291	72 10		 jb	 SHORT $LN127@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00293	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00294	51		 push	 ecx
  00295	ff b5 d8 fe ff
	ff		 push	 DWORD PTR _stLODModelFileName$5[ebp]
  0029b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002a0	83 c4 08	 add	 esp, 8
$LN127@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  002a3	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _stLODModelFileName$5[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002ad	c7 85 ec fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _stLODModelFileName$5[ebp+20], 15 ; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002b7	c6 85 d8 fe ff
	ff 00		 mov	 BYTE PTR _stLODModelFileName$5[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  002be	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  002c1	0f 11 85 d8 fe
	ff ff		 movups	 XMMWORD PTR _stLODModelFileName$5[ebp], xmm0
  002c8	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  002cd	66 0f d6 85 e8
	fe ff ff	 movq	 QWORD PTR _stLODModelFileName$5[ebp+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  002d5	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002dc	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002e3	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN138@SetObjectI:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002e6	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp+20]
  002ec	83 f8 10	 cmp	 eax, 16			; 00000010H
  002ef	72 10		 jb	 SHORT $LN143@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002f1	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002f2	50		 push	 eax
  002f3	ff b5 44 fe ff
	ff		 push	 DWORD PTR $T2[ebp]
  002f9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002fe	83 c4 08	 add	 esp, 8
$LN143@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00301	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00307	c7 85 54 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00311	c7 85 58 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0031b	c6 85 44 fe ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 645  : 			stLODModelFileName = CFileNameHelper::NoExtension(stSrcModelFileName) + szLODModelFileNameEnd;

  00322	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00326	83 f8 10	 cmp	 eax, 16			; 00000010H
  00329	72 10		 jb	 SHORT $LN153@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0032b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0032c	50		 push	 eax
  0032d	ff b5 5c fe ff
	ff		 push	 DWORD PTR $T3[ebp]
  00333	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00338	83 c4 08	 add	 esp, 8
$LN153@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0033b	83 bd ec fe ff
	ff 10		 cmp	 DWORD PTR _stLODModelFileName$5[ebp+20], 16 ; 00000010H
  00342	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _stLODModelFileName$5[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 646  : 			if (!rkResMgr.IsFileExist(stLODModelFileName.c_str()))

  00348	8b b5 30 fe ff
	ff		 mov	 esi, DWORD PTR _rkResMgr$1$[ebp]
  0034e	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00350	0f 43 85 d8 fe
	ff ff		 cmovae	 eax, DWORD PTR _stLODModelFileName$5[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 646  : 			if (!rkResMgr.IsFileExist(stLODModelFileName.c_str()))

  00357	50		 push	 eax
  00358	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  0035d	84 c0		 test	 al, al
  0035f	74 41		 je	 SHORT $LN240@SetObjectI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00361	83 bd ec fe ff
	ff 10		 cmp	 DWORD PTR _stLODModelFileName$5[ebp+20], 16 ; 00000010H
  00368	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _stLODModelFileName$5[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 649  : 			CGraphicThing* pLODModelThing = (CGraphicThing *)rkResMgr.GetResourcePointer(stLODModelFileName.c_str());

  0036e	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00370	0f 43 85 d8 fe
	ff ff		 cmovae	 eax, DWORD PTR _stLODModelFileName$5[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 649  : 			CGraphicThing* pLODModelThing = (CGraphicThing *)rkResMgr.GetResourcePointer(stLODModelFileName.c_str());

  00377	50		 push	 eax
  00378	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 650  : 			if (!pLODModelThing)

  0037d	85 c0		 test	 eax, eax
  0037f	74 21		 je	 SHORT $LN240@SetObjectI

; 651  : 				break;
; 652  : 
; 653  : 			pObjectInstance->pThingInstance->RegisterLODThing(0, pLODModelThing);

  00381	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00384	50		 push	 eax
  00385	6a 00		 push	 0
  00387	e8 00 00 00 00	 call	 ?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterLODThing
  0038c	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR _uLODIndex$1$[ebp]
  00392	40		 inc	 eax
  00393	89 85 3c fe ff
	ff		 mov	 DWORD PTR _uLODIndex$1$[ebp], eax
  00399	83 f8 03	 cmp	 eax, 3
  0039c	0f 86 0e fe ff
	ff		 jbe	 $LL7@SetObjectI
$LN240@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003a2	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _stLODModelFileName$5[ebp+20]
  003a8	83 f8 10	 cmp	 eax, 16			; 00000010H
  003ab	72 10		 jb	 SHORT $LN177@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003ad	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003ae	50		 push	 eax
  003af	ff b5 d8 fe ff
	ff		 push	 DWORD PTR _stLODModelFileName$5[ebp]
  003b5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003ba	83 c4 08	 add	 esp, 8
$LN177@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  003bd	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _stSrcModelFileName$4[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  003c3	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _stLODModelFileName$5[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003cd	c7 85 ec fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _stLODModelFileName$5[ebp+20], 15 ; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003d7	c6 85 d8 fe ff
	ff 00		 mov	 BYTE PTR _stLODModelFileName$5[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 655  : 	}

  003de	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  003e2	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003e5	72 10		 jb	 SHORT $LN187@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003e7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003e8	50		 push	 eax
  003e9	ff b5 c0 fe ff
	ff		 push	 DWORD PTR _stSrcModelFileName$4[ebp]
  003ef	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003f4	83 c4 08	 add	 esp, 8
$LN187@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003f7	33 f6		 xor	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 657  : 	for (int i = 0; i < iModelCount; ++i)

  003f9	39 b5 38 fe ff
	ff		 cmp	 DWORD PTR _iModelCount$1$[ebp], esi
  003ff	7e 17		 jle	 SHORT $LN9@SetObjectI
$LL10@SetObjectI:

; 658  : 		pObjectInstance->pThingInstance->SetModelInstance(i, 0, i);

  00401	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00404	6a ff		 push	 -1
  00406	56		 push	 esi
  00407	6a 00		 push	 0
  00409	56		 push	 esi
  0040a	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance
  0040f	46		 inc	 esi
  00410	3b b5 38 fe ff
	ff		 cmp	 esi, DWORD PTR _iModelCount$1$[ebp]
  00416	7c e9		 jl	 SHORT $LL10@SetObjectI
$LN9@SetObjectI:

; 659  : 
; 660  : 	if (iMotionCount)

  00418	83 bd 2c fe ff
	ff 00		 cmp	 DWORD PTR _iMotionCount$1$[ebp], 0
  0041f	74 10		 je	 SHORT $LN16@SetObjectI

; 661  : 	{
; 662  : 		pObjectInstance->pThingInstance->RegisterMotionThing(0, pThing);

  00421	ff b5 40 fe ff
	ff		 push	 DWORD PTR _pThing$1$[ebp]
  00427	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0042a	6a 00		 push	 0
  0042c	e8 00 00 00 00	 call	 ?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterMotionThing
$LN16@SetObjectI:

; 663  : 	}
; 664  : 
; 665  : 	pObjectInstance->pThingInstance->SetPosition(c_pData->Position.x, c_pData->Position.y, c_pData->Position.z + c_pData->m_fHeightBias);

  00431	8b b5 34 fe ff
	ff		 mov	 esi, DWORD PTR _c_pData$GSCopy$1$[ebp]
  00437	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0043a	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0043d	f3 0f 10 46 24	 movss	 xmm0, DWORD PTR [esi+36]
  00442	f3 0f 58 46 08	 addss	 xmm0, DWORD PTR [esi+8]
  00447	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0044d	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  00452	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00458	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  0045c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00461	e8 00 00 00 00	 call	 ?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetPosition

; 666  : 	pObjectInstance->pThingInstance->SetRotation(

  00466	f3 0f 10 46 20	 movss	 xmm0, DWORD PTR [esi+32]
  0046b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0046e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00471	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00477	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  0047c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00482	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00487	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048c	e8 00 00 00 00	 call	 ?SetRotation@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetRotation

; 667  : 		c_pData->m_fYaw,
; 668  : 		c_pData->m_fPitch,
; 669  : 		c_pData->m_fRoll
; 670  : 	);
; 671  : 	pObjectInstance->isShadowFlag = Data.isShadowFlag;

  00491	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _Data$[ebp+72]

; 672  : 	pObjectInstance->pThingInstance->RegisterBoundingSphere();

  00497	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0049a	89 47 10	 mov	 DWORD PTR [edi+16], eax
  0049d	e8 00 00 00 00	 call	 ?RegisterBoundingSphere@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::RegisterBoundingSphere
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  004a2	83 bd b8 fe ff
	ff 10		 cmp	 DWORD PTR _Data$[ebp+68], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  004a9	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _Data$[ebp+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 673  : 	__LoadAttribute(pObjectInstance, Data.strAttributeDataFileName.c_str());

  004af	8b 8d 28 fe ff
	ff		 mov	 ecx, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  004b5	0f 43 85 a4 fe
	ff ff		 cmovae	 eax, DWORD PTR _Data$[ebp+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 673  : 	__LoadAttribute(pObjectInstance, Data.strAttributeDataFileName.c_str());

  004bc	50		 push	 eax
  004bd	57		 push	 edi
  004be	e8 00 00 00 00	 call	 ?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z ; CArea::__LoadAttribute

; 674  : 	pThing->Release();

  004c3	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR _pThing$1$[ebp]
  004c9	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN24@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  004ce	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _Data$[ebp+68]
  004d4	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004d7	72 10		 jb	 SHORT $LN207@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004d9	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004da	50		 push	 eax
  004db	ff b5 a4 fe ff
	ff		 push	 DWORD PTR _Data$[ebp+48]
  004e1	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004e6	83 c4 08	 add	 esp, 8
$LN207@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  004e9	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _Data$[ebp+44]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  004ef	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Data$[ebp+64], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  004f9	c7 85 b8 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _Data$[ebp+68], 15 ; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00503	c6 85 a4 fe ff
	ff 00		 mov	 BYTE PTR _Data$[ebp+48], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0050a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0050d	72 10		 jb	 SHORT $LN217@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0050f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00510	50		 push	 eax
  00511	ff b5 8c fe ff
	ff		 push	 DWORD PTR _Data$[ebp+24]
  00517	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0051c	83 c4 08	 add	 esp, 8
$LN217@SetObjectI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0051f	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _Data$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00525	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Data$[ebp+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0052f	c7 85 a0 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR _Data$[ebp+44], 15 ; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00539	c6 85 8c fe ff
	ff 00		 mov	 BYTE PTR _Data$[ebp+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00540	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00543	72 10		 jb	 SHORT $LN227@SetObjectI

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00545	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00546	50		 push	 eax
  00547	ff b5 74 fe ff
	ff		 push	 DWORD PTR _Data$[ebp]
  0054d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00552	83 c4 08	 add	 esp, 8
$LN227@SetObjectI:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 675  : }

  00555	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00558	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0055f	59		 pop	 ecx
  00560	5f		 pop	 edi
  00561	5e		 pop	 esi
  00562	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00565	33 cd		 xor	 ecx, ebp
  00567	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0056c	8b e5		 mov	 esp, ebp
  0056e	5d		 pop	 ebp
  0056f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$0:
  00000	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _Data$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1TPropertyBuilding@prt@@QAE@XZ
__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$1:
  0000b	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _stSrcModelFileName$4[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$2:
  00016	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _stLODModelFileName$5[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z$3:
  00021	8d 8d 5c fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 8a 28 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-472]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ENDP ; CArea::__SetObjectInstance_SetBuilding
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__SetObjectInstance_SetTree@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z
_TEXT	SEGMENT
_c_szTreeName$ = -4					; size = 4
_pObjectInstance$ = 8					; size = 4
_c_pData$ = 12						; size = 4
_pProperty$ = 16					; size = 4
?__SetObjectInstance_SetTree@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z PROC ; CArea::__SetObjectInstance_SetTree, COMDAT
; _this$ = ecx

; 584  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 585  : 	const char * c_szTreeName;
; 586  : 	if (!pProperty->GetString("TreeFile", &c_szTreeName))

  00004	8b 4d 10	 mov	 ecx, DWORD PTR _pProperty$[ebp]
  00007	8d 45 fc	 lea	 eax, DWORD PTR _c_szTreeName$[ebp]
  0000a	50		 push	 eax
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_08JBFACIKL@TreeFile@
  00010	e8 00 00 00 00	 call	 ?GetString@CProperty@@QAE_NPBDPAPBD@Z ; CProperty::GetString
  00015	84 c0		 test	 al, al
  00017	74 38		 je	 SHORT $LN1@SetObjectI

; 587  : 		return;
; 588  : 
; 589  : 	pObjectInstance->SetTree(

  00019	8b 45 0c	 mov	 eax, DWORD PTR _c_pData$[ebp]
  0001c	ff 75 fc	 push	 DWORD PTR _c_szTreeName$[ebp]
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _pObjectInstance$[ebp]
  00022	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  00027	ff 70 0c	 push	 DWORD PTR [eax+12]
  0002a	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0002f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00032	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00038	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0003d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00043	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	e8 00 00 00 00	 call	 ?SetTree@SObjectInstance@CArea@@QAEXMMMKPBD@Z ; CArea::SObjectInstance::SetTree
$LN1@SetObjectI:

; 590  : 		c_pData->Position.x,
; 591  : 		c_pData->Position.y,
; 592  : 		c_pData->Position.z + c_pData->m_fHeightBias,
; 593  : 		c_pData->dwCRC,
; 594  : 		c_szTreeName
; 595  : 	);
; 596  : }

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 0c 00	 ret	 12			; 0000000cH
?__SetObjectInstance_SetTree@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ENDP ; CArea::__SetObjectInstance_SetTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__SetObjectInstance@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@@Z
_TEXT	SEGMENT
_pProperty$ = -4					; size = 4
_pObjectInstance$ = 8					; size = 4
_c_szPropertyType$ = 12					; size = 4
_c_pData$ = 12						; size = 4
?__SetObjectInstance@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@@Z PROC ; CArea::__SetObjectInstance, COMDAT
; _this$ = ecx

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 510  : 	CProperty * pProperty;
; 511  : 	if (!CPropertyManager::Instance().Get(c_pData->dwCRC, &pProperty))

  00005	8b 75 0c	 mov	 esi, DWORD PTR _c_pData$[ebp]
  00008	8d 45 fc	 lea	 eax, DWORD PTR _pProperty$[ebp]
  0000b	57		 push	 edi
  0000c	50		 push	 eax
  0000d	8b f9		 mov	 edi, ecx
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPropertyManager@@@@0PAVCPropertyManager@@A ; CSingleton<CPropertyManager>::ms_singleton
  00015	ff 76 0c	 push	 DWORD PTR [esi+12]
  00018	e8 00 00 00 00	 call	 ?Get@CPropertyManager@@QAE_NKPAPAVCProperty@@@Z ; CPropertyManager::Get
  0001d	84 c0		 test	 al, al
  0001f	0f 84 93 00 00
	00		 je	 $LN2@SetObjectI

; 512  : 		return;
; 513  : 
; 514  : 	const char * c_szPropertyType;
; 515  : 
; 516  : 	if (!pProperty->GetString("PropertyType", &c_szPropertyType))

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _pProperty$[ebp]
  00028	8d 45 0c	 lea	 eax, DWORD PTR _c_szPropertyType$[ebp]
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FPEBPNJJ@PropertyType@
  00031	e8 00 00 00 00	 call	 ?GetString@CProperty@@QAE_NPBDPAPBD@Z ; CProperty::GetString
  00036	84 c0		 test	 al, al
  00038	74 7e		 je	 SHORT $LN2@SetObjectI

; 517  : 		return;
; 518  : 
; 519  : 	switch (prt::GetPropertyType(c_szPropertyType))

  0003a	ff 75 0c	 push	 DWORD PTR _c_szPropertyType$[ebp]
  0003d	e8 00 00 00 00	 call	 ?GetPropertyType@prt@@YAKPBD@Z ; prt::GetPropertyType
  00042	48		 dec	 eax
  00043	83 c4 04	 add	 esp, 4
  00046	83 f8 04	 cmp	 eax, 4
  00049	77 6d		 ja	 SHORT $LN2@SetObjectI
  0004b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@SetObjectI[eax*4]
$LN6@SetObjectI:

; 520  : 	{
; 521  : 		case prt::PROPERTY_TYPE_TREE:
; 522  : 			__SetObjectInstance_SetTree(pObjectInstance, c_pData, pProperty);

  00052	ff 75 fc	 push	 DWORD PTR _pProperty$[ebp]
  00055	8b cf		 mov	 ecx, edi
  00057	56		 push	 esi
  00058	ff 75 08	 push	 DWORD PTR _pObjectInstance$[ebp]
  0005b	e8 00 00 00 00	 call	 ?__SetObjectInstance_SetTree@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetTree
  00060	5f		 pop	 edi

; 539  : 			break;
; 540  : 	}
; 541  : }

  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
$LN7@SetObjectI:

; 523  : 			break;
; 524  : 
; 525  : 		case prt::PROPERTY_TYPE_BUILDING:
; 526  : 			__SetObjectInstance_SetBuilding(pObjectInstance, c_pData, pProperty);

  00068	ff 75 fc	 push	 DWORD PTR _pProperty$[ebp]
  0006b	8b cf		 mov	 ecx, edi
  0006d	56		 push	 esi
  0006e	ff 75 08	 push	 DWORD PTR _pObjectInstance$[ebp]
  00071	e8 00 00 00 00	 call	 ?__SetObjectInstance_SetBuilding@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetBuilding
  00076	5f		 pop	 edi

; 539  : 			break;
; 540  : 	}
; 541  : }

  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
$LN8@SetObjectI:

; 527  : 			break;
; 528  : 
; 529  : 		case prt::PROPERTY_TYPE_EFFECT:
; 530  : 			__SetObjectInstance_SetEffect(pObjectInstance, c_pData, pProperty);

  0007e	ff 75 fc	 push	 DWORD PTR _pProperty$[ebp]
  00081	8b cf		 mov	 ecx, edi
  00083	56		 push	 esi
  00084	ff 75 08	 push	 DWORD PTR _pObjectInstance$[ebp]
  00087	e8 00 00 00 00	 call	 ?__SetObjectInstance_SetEffect@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetEffect
  0008c	5f		 pop	 edi

; 539  : 			break;
; 540  : 	}
; 541  : }

  0008d	5e		 pop	 esi
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c2 08 00	 ret	 8
$LN9@SetObjectI:

; 531  : 			break;
; 532  : 
; 533  : 		case prt::PROPERTY_TYPE_AMBIENCE:
; 534  : 			__SetObjectInstance_SetAmbience(pObjectInstance, c_pData, pProperty);

  00094	ff 75 fc	 push	 DWORD PTR _pProperty$[ebp]
  00097	8b cf		 mov	 ecx, edi
  00099	56		 push	 esi
  0009a	ff 75 08	 push	 DWORD PTR _pObjectInstance$[ebp]
  0009d	e8 00 00 00 00	 call	 ?__SetObjectInstance_SetAmbience@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetAmbience
  000a2	5f		 pop	 edi

; 539  : 			break;
; 540  : 	}
; 541  : }

  000a3	5e		 pop	 esi
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN10@SetObjectI:

; 535  : 			break;
; 536  : 
; 537  : 		case prt::PROPERTY_TYPE_DUNGEON_BLOCK:
; 538  : 			__SetObjectInstance_SetDungeonBlock(pObjectInstance, c_pData, pProperty);

  000aa	ff 75 fc	 push	 DWORD PTR _pProperty$[ebp]
  000ad	8b cf		 mov	 ecx, edi
  000af	56		 push	 esi
  000b0	ff 75 08	 push	 DWORD PTR _pObjectInstance$[ebp]
  000b3	e8 00 00 00 00	 call	 ?__SetObjectInstance_SetDungeonBlock@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@PAVCProperty@@@Z ; CArea::__SetObjectInstance_SetDungeonBlock
$LN2@SetObjectI:

; 539  : 			break;
; 540  : 	}
; 541  : }

  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 08 00	 ret	 8
$LN12@SetObjectI:
  000c0	00 00 00 00	 DD	 $LN6@SetObjectI
  000c4	00 00 00 00	 DD	 $LN7@SetObjectI
  000c8	00 00 00 00	 DD	 $LN8@SetObjectI
  000cc	00 00 00 00	 DD	 $LN9@SetObjectI
  000d0	00 00 00 00	 DD	 $LN10@SetObjectI
?__SetObjectInstance@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@@Z ENDP ; CArea::__SetObjectInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__Clear_DestroyObjectInstance@CArea@@IAEXPAUSObjectInstance@1@@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
_pObjectInstance$ = 8					; size = 4
?__Clear_DestroyObjectInstance@CArea@@IAEXPAUSObjectInstance@1@@Z PROC ; CArea::__Clear_DestroyObjectInstance, COMDAT
; _this$ = ecx

; 1130 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi

; 1131 : 	if (pObjectInstance->dwEffectInstanceIndex!=0xffffffff)

  00007	8b 75 08	 mov	 esi, DWORD PTR _pObjectInstance$[ebp]
  0000a	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  0000d	57		 push	 edi
  0000e	8b 38		 mov	 edi, DWORD PTR [eax]
  00010	83 ff ff	 cmp	 edi, -1
  00013	74 53		 je	 SHORT $LN2@Clear_Dest

; 1133 : 		TEffectInstanceIterator f= m_EffectInstanceMap.find(pObjectInstance->dwEffectInstanceIndex);

  00015	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00016	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1133 : 		TEffectInstanceIterator f= m_EffectInstanceMap.find(pObjectInstance->dwEffectInstanceIndex);

  00017	8d 99 8c 00 00
	00		 lea	 ebx, DWORD PTR [ecx+140]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0001d	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00020	8b cb		 mov	 ecx, ebx
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00028	8b 45 fc	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  0002b	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0002f	75 2f		 jne	 SHORT $LN4@Clear_Dest
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00031	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00034	72 2a		 jb	 SHORT $LN4@Clear_Dest

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00036	39 03		 cmp	 DWORD PTR [ebx], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1134 : 		if (m_EffectInstanceMap.end()!=f)

  00038	74 26		 je	 SHORT $LN4@Clear_Dest

; 1135 : 		{
; 1136 : 			CEffectInstance * pEffectInstance = f->second;

  0003a	8b 78 14	 mov	 edi, DWORD PTR [eax+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1389 :         _Nodeptr _Erasednode = _Scary->_Extract(_Where); // node to erase

  0003d	8b cb		 mov	 ecx, ebx
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Extract
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00045	6a 18		 push	 24			; 00000018H
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1139 : 			if (CEffectManager::InstancePtr())

  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00053	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1139 : 			if (CEffectManager::InstancePtr())

  00056	85 c9		 test	 ecx, ecx
  00058	74 06		 je	 SHORT $LN4@Clear_Dest

; 1140 : 				CEffectManager::Instance().DestroyUnsafeEffectInstance(pEffectInstance);

  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 ?DestroyUnsafeEffectInstance@CEffectManager@@QAE_NPAVCEffectInstance@@@Z ; CEffectManager::DestroyUnsafeEffectInstance
$LN4@Clear_Dest:

; 1141 : 		}
; 1142 : 		pObjectInstance->dwEffectInstanceIndex = 0xffffffff;

  00060	c7 46 1c ff ff
	ff ff		 mov	 DWORD PTR [esi+28], -1
  00067	5b		 pop	 ebx
$LN2@Clear_Dest:

; 1143 : 	}
; 1144 : 
; 1145 : 	if (pObjectInstance->pAttributeInstance)

  00068	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 39		 je	 SHORT $LN5@Clear_Dest

; 1146 : 	{
; 1147 : 		pObjectInstance->pAttributeInstance->Clear();

  0006f	e8 00 00 00 00	 call	 ?Clear@CAttributeInstance@@QAEXXZ ; CAttributeInstance::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00074	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1148 : 		ms_AttributeInstancePool.Free(pObjectInstance->pAttributeInstance);

  00079	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0007c	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0007f	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+24
  00085	74 0b		 je	 SHORT $LN73@Clear_Dest

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00087	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00089	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20, 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00090	eb 0f		 jmp	 SHORT $LN72@Clear_Dest
$LN73@Clear_Dest:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00092	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00095	51		 push	 ecx
  00096	50		 push	 eax
  00097	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+16
  0009c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Emplace_reallocate<CAttributeInstance * const &>
$LN72@Clear_Dest:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1149 : 		pObjectInstance->pAttributeInstance = NULL;

  000a1	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN5@Clear_Dest:

; 1150 : 	}
; 1151 : 
; 1152 : 	if (pObjectInstance->pTree)

  000a8	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000ab	85 c9		 test	 ecx, ecx
  000ad	74 1a		 je	 SHORT $LN6@Clear_Dest

; 1153 : 	{
; 1154 : 		pObjectInstance->pTree->Clear();

  000af	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear

; 1155 : 		CSpeedTreeForestDirectX8::Instance().DeleteInstance(pObjectInstance->pTree);

  000b4	ff 76 0c	 push	 DWORD PTR [esi+12]
  000b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  000bd	e8 00 00 00 00	 call	 ?DeleteInstance@CSpeedTreeForest@@QAEXPAVCSpeedTreeWrapper@@@Z ; CSpeedTreeForest::DeleteInstance

; 1156 : 		pObjectInstance->pTree = NULL;

  000c2	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN6@Clear_Dest:

; 1157 : 	}
; 1158 : 
; 1159 : 	if (pObjectInstance->pThingInstance)

  000c9	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  000cc	85 c0		 test	 eax, eax
  000ce	74 10		 je	 SHORT $LN7@Clear_Dest

; 1160 : 	{
; 1161 : 		CGraphicThingInstance::Delete(pObjectInstance->pThingInstance);

  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?Delete@CGraphicThingInstance@@SAXPAV1@@Z ; CGraphicThingInstance::Delete
  000d6	83 c4 04	 add	 esp, 4

; 1162 : 		pObjectInstance->pThingInstance = NULL;

  000d9	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN7@Clear_Dest:

; 1163 : 	}
; 1164 : 
; 1165 : 	if (pObjectInstance->pAmbienceInstance)

  000e0	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  000e3	85 c0		 test	 eax, eax
  000e5	74 32		 je	 SHORT $LN8@Clear_Dest
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000e7	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1167 : 		ms_AmbienceInstancePool.Free(pObjectInstance->pAmbienceInstance);

  000ed	89 45 08	 mov	 DWORD PTR _pkData$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000f0	3b 0d 18 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+24
  000f6	74 0b		 je	 SHORT $LN82@Clear_Dest

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000f8	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000fa	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+20, 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00101	eb 0f		 jmp	 SHORT $LN81@Clear_Dest
$LN82@Clear_Dest:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00103	8d 45 08	 lea	 eax, DWORD PTR _pkData$[ebp]
  00106	50		 push	 eax
  00107	51		 push	 ecx
  00108	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_AmbienceInstancePool@CArea@@1V?$CDynamicPool@USAmbienceInstance@CArea@@@@A+16
  0010d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Emplace_reallocate<CArea::SAmbienceInstance * const &>
$LN81@Clear_Dest:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1168 : 		pObjectInstance->pAmbienceInstance = NULL;

  00112	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN8@Clear_Dest:

; 1169 : 	}
; 1170 : 
; 1171 : 	if (pObjectInstance->pDungeonBlock)

  00119	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0011c	85 c0		 test	 eax, eax
  0011e	74 32		 je	 SHORT $LN9@Clear_Dest
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00120	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1173 : 		ms_DungeonBlockInstancePool.Free(pObjectInstance->pDungeonBlock);

  00126	89 45 08	 mov	 DWORD PTR _pkData$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00129	3b 0d 18 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+24
  0012f	74 0b		 je	 SHORT $LN91@Clear_Dest

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00131	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00133	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+20, 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0013a	eb 0f		 jmp	 SHORT $LN90@Clear_Dest
$LN91@Clear_Dest:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0013c	8d 45 08	 lea	 eax, DWORD PTR _pkData$[ebp]
  0013f	50		 push	 eax
  00140	51		 push	 ecx
  00141	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_DungeonBlockInstancePool@CArea@@1V?$CDynamicPool@VCDungeonBlock@@@@A+16
  00146	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>
$LN90@Clear_Dest:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1174 : 		pObjectInstance->pDungeonBlock = NULL;

  0014b	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN9@Clear_Dest:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 111  : 				if (pTree)

  00152	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00155	85 c9		 test	 ecx, ecx
  00157	74 05		 je	 SHORT $LN96@Clear_Dest

; 112  : 					pTree->Clear();

  00159	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
$LN96@Clear_Dest:

; 113  : 
; 114  : 				if (pThingInstance)

  0015e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00161	85 c9		 test	 ecx, ecx
  00163	74 05		 je	 SHORT $LN97@Clear_Dest

; 115  : 					pThingInstance->Clear();

  00165	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
$LN97@Clear_Dest:

; 116  : 
; 117  : 				if (pAttributeInstance)

  0016a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 05		 je	 SHORT $LN98@Clear_Dest

; 118  : 					pAttributeInstance->Clear();

  00171	e8 00 00 00 00	 call	 ?Clear@CAttributeInstance@@QAEXXZ ; CAttributeInstance::Clear
$LN98@Clear_Dest:

; 119  : 
; 120  : 				if (pAmbienceInstance)

  00176	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00179	85 c9		 test	 ecx, ecx
  0017b	74 05		 je	 SHORT $LN99@Clear_Dest

; 121  : 					pAmbienceInstance->Clear();

  0017d	e8 00 00 00 00	 call	 ?Clear@CScreen@@QAEXXZ	; CScreen::Clear
$LN99@Clear_Dest:

; 122  : 
; 123  : 				if (pDungeonBlock)

  00182	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00185	85 c9		 test	 ecx, ecx
  00187	74 05		 je	 SHORT $LN100@Clear_Dest

; 124  : 					pDungeonBlock->Clear();

  00189	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
$LN100@Clear_Dest:

; 133  : 				dwType = prt::PROPERTY_TYPE_NONE;

  0018e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 134  : 
; 135  : 				dwEffectID = 0xffffffff;

  00195	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1

; 136  : 				dwEffectInstanceIndex = 0xffffffff;

  0019c	c7 46 1c ff ff
	ff ff		 mov	 DWORD PTR [esi+28], -1

; 137  : 				isShadowFlag = false;

  001a3	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 138  : 
; 139  : 				pTree=NULL;

  001aa	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 140  : 				pThingInstance=NULL;

  001b1	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 141  : 				pAttributeInstance=NULL;

  001b8	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 142  : 				pAmbienceInstance=NULL;

  001bf	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 143  : 				pDungeonBlock=NULL;

  001c6	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  001cd	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1179 : 	ms_ObjectInstancePool.Free(pObjectInstance);

  001d2	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  001d5	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+24
  001db	74 11		 je	 SHORT $LN109@Clear_Dest

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  001dd	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  001df	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+20, 4
  001e6	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1180 : }

  001e7	5e		 pop	 esi
  001e8	8b e5		 mov	 esp, ebp
  001ea	5d		 pop	 ebp
  001eb	c2 04 00	 ret	 4
$LN109@Clear_Dest:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  001ee	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  001f1	51		 push	 ecx
  001f2	50		 push	 eax
  001f3	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+16
  001f8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSObjectInstance@CArea@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAPAUSObjectInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Emplace_reallocate<CArea::SObjectInstance * const &>
  001fd	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1180 : }

  001fe	5e		 pop	 esi
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 04 00	 ret	 4
?__Clear_DestroyObjectInstance@CArea@@IAEXPAUSObjectInstance@1@@Z ENDP ; CArea::__Clear_DestroyObjectInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\range\iterator_range_core.hpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\case_conv.hpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\range\iterator_range_core.hpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\case_conv.hpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\case_conv.hpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z
_TEXT	SEGMENT
_pObjectInstance$GSCopy$1$ = -160			; size = 4
_pAttributeData$1$ = -156				; size = 4
_pAttrInstance$1$ = -152				; size = 4
_bIsDungeonObject$1$ = -145				; size = 1
_bFileExist$1$ = -145					; size = 1
_collision$2 = -144					; size = 80
_attrFileName$3 = -64					; size = 24
_v3Max$4 = -40						; size = 12
$T5 = -36						; size = 8
_v3Min$6 = -28						; size = 12
$T7 = -24						; size = 8
_pkData$ = -20						; size = 4
$T8 = -20						; size = 4
_pkNewData$9 = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pObjectInstance$ = 8					; size = 4
_c_szAttributeFileName$ = 12				; size = 4
?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z PROC ; CArea::__LoadAttribute, COMDAT
; _this$ = ecx

; 732  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b 45 08	 mov	 eax, DWORD PTR _pObjectInstance$[ebp]
  00030	8b 7d 0c	 mov	 edi, DWORD PTR _c_szAttributeFileName$[ebp]

; 733  : 	const bool bFileExist = CResourceManager::Instance().IsFileExist(c_szAttributeFileName);

  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00039	57		 push	 edi
  0003a	89 85 60 ff ff
	ff		 mov	 DWORD PTR _pObjectInstance$GSCopy$1$[ebp], eax
  00040	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist

; 734  : 
; 735  : 	CAttributeData * pAttributeData = (CAttributeData *) CResourceManager::Instance().GetResourcePointer(c_szAttributeFileName);

  00045	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0004b	57		 push	 edi
  0004c	88 85 6f ff ff
	ff		 mov	 BYTE PTR _bFileExist$1$[ebp], al
  00052	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00057	89 85 64 ff ff
	ff		 mov	 DWORD PTR _pAttributeData$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  0005d	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00062	39 05 10 00 00
	00		 cmp	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+16, eax
  00068	75 70		 jne	 SHORT $LN13@LoadAttrib

; 65   : 				T* pkNewData=new T;

  0006a	6a 5c		 push	 92			; 0000005cH
  0006c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00071	83 c4 04	 add	 esp, 4
  00074	89 45 ec	 mov	 DWORD PTR $T8[ebp], eax
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007e	85 c0		 test	 eax, eax
  00080	74 11		 je	 SHORT $LN15@LoadAttrib
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??0CAttributeInstance@@QAE@XZ ; CAttributeInstance::CAttributeInstance
  00089	8b f0		 mov	 esi, eax
  0008b	89 85 68 ff ff
	ff		 mov	 DWORD PTR _pAttrInstance$1$[ebp], eax
  00091	eb 08		 jmp	 SHORT $LN16@LoadAttrib
$LN15@LoadAttrib:
  00093	33 f6		 xor	 esi, esi
  00095	89 b5 68 ff ff
	ff		 mov	 DWORD PTR _pAttrInstance$1$[ebp], esi
$LN16@LoadAttrib:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0009b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a7	89 75 ec	 mov	 DWORD PTR _pkNewData$9[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000aa	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+12
  000b0	74 11		 je	 SHORT $LN23@LoadAttrib

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000b2	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000b4	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000bb	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+32

; 68   : 				return pkNewData;

  000c1	eb 28		 jmp	 SHORT $LN12@LoadAttrib
$LN23@LoadAttrib:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000c3	8d 4d ec	 lea	 ecx, DWORD PTR _pkNewData$9[ebp]
  000c6	51		 push	 ecx
  000c7	50		 push	 eax
  000c8	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+4
  000cd	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Emplace_reallocate<CAttributeInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000d2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+32

; 68   : 				return pkNewData;

  000d8	eb 11		 jmp	 SHORT $LN12@LoadAttrib
$LN13@LoadAttrib:

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000da	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000dd	83 c0 fc	 add	 eax, -4			; fffffffcH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000e0	89 b5 68 ff ff
	ff		 mov	 DWORD PTR _pAttrInstance$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1338 :         --_Mylast;

  000e6	a3 14 00 00 00	 mov	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20, eax
$LN12@LoadAttrib:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 738  : 	pAttrInstance->Clear();

  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?Clear@CAttributeInstance@@QAEXXZ ; CAttributeInstance::Clear

; 739  : 	pAttrInstance->SetObjectPointer(pAttributeData);

  000f2	ff b5 64 ff ff
	ff		 push	 DWORD PTR _pAttributeData$1$[ebp]
  000f8	8b ce		 mov	 ecx, esi
  000fa	e8 00 00 00 00	 call	 ?SetObjectPointer@CAttributeInstance@@QAEXPAVCAttributeData@@@Z ; CAttributeInstance::SetObjectPointer

; 740  : 
; 741  : 	if (false == bFileExist)

  000ff	80 bd 6f ff ff
	ff 00		 cmp	 BYTE PTR _bFileExist$1$[ebp], 0
  00106	0f 85 0f 02 00
	00		 jne	 $LN119@LoadAttrib
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0010c	8b cf		 mov	 ecx, edi

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0010e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _attrFileName$3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00115	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _attrFileName$3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0011c	c6 45 c0 00	 mov	 BYTE PTR _attrFileName$3[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00120	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL134@LoadAttrib:
  00123	8a 01		 mov	 al, BYTE PTR [ecx]
  00125	41		 inc	 ecx
  00126	84 c0		 test	 al, al
  00128	75 f9		 jne	 SHORT $LL134@LoadAttrib
  0012a	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0012c	51		 push	 ecx
  0012d	57		 push	 edi
  0012e	8d 4d c0	 lea	 ecx, DWORD PTR _attrFileName$3[ebp]
  00131	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 271  :     locale() noexcept : _Ptr(_Init(true)) {}

  00136	6a 01		 push	 1
  00138	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0013f	e8 00 00 00 00	 call	 ?_Init@locale@std@@CAPAV_Locimp@12@_N@Z ; std::locale::_Init
  00144	89 45 e0	 mov	 DWORD PTR $T5[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2136 :         if (_Large_string_engaged()) {

  00147	83 7d d4 10	 cmp	 DWORD PTR _attrFileName$3[ebp+20], 16 ; 00000010H
  0014b	8d 45 c0	 lea	 eax, DWORD PTR _attrFileName$3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 744  : 		boost::algorithm::to_lower(attrFileName);

  0014e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2136 :         if (_Large_string_engaged()) {

  00152	0f 43 45 c0	 cmovae	 eax, DWORD PTR _attrFileName$3[ebp]

; 3494 :         return iterator(

  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>
  0015c	8b f0		 mov	 esi, eax

; 2135 :         value_type* _Result = _Bx._Buf;

  0015e	8d 45 c0	 lea	 eax, DWORD PTR _attrFileName$3[ebp]

; 3494 :         return iterator(

  00161	03 75 d0	 add	 esi, DWORD PTR _attrFileName$3[ebp+16]

; 2136 :         if (_Large_string_engaged()) {

  00164	83 7d d4 10	 cmp	 DWORD PTR _attrFileName$3[ebp+20], 16 ; 00000010H
  00168	0f 43 45 c0	 cmovae	 eax, DWORD PTR _attrFileName$3[ebp]

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\range\iterator_range_core.hpp

; 216  :         : m_Begin(Begin)

  00172	89 45 e8	 mov	 DWORD PTR $T7[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\case_conv.hpp

; 95   :             ::boost::algorithm::detail::transform_range(

  00175	8d 45 dc	 lea	 eax, DWORD PTR $T5[ebp]
  00178	50		 push	 eax
  00179	8d 45 e8	 lea	 eax, DWORD PTR $T7[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\range\iterator_range_core.hpp

; 217  :         , m_End(End)

  0017c	89 75 ec	 mov	 DWORD PTR $T7[ebp+4], esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\case_conv.hpp

; 95   :             ::boost::algorithm::detail::transform_range(

  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ??$transform_range@V?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@U?$to_lowerF@D@012@@Z ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >,boost::algorithm::detail::to_lowerF<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 351  :         if (_Ptr) {

  00185	8b 4d e0	 mov	 ecx, DWORD PTR $T5[ebp+4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\boost\algorithm\string\case_conv.hpp

; 95   :             ::boost::algorithm::detail::transform_range(

  00188	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 744  : 		boost::algorithm::to_lower(attrFileName);

  0018b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 351  :         if (_Ptr) {

  0018f	85 c9		 test	 ecx, ecx
  00191	74 13		 je	 SHORT $LN101@LoadAttrib

; 352  :             delete _Ptr->_Decref();

  00193	8b 01		 mov	 eax, DWORD PTR [ecx]
  00195	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00198	ff d0		 call	 eax
  0019a	85 c0		 test	 eax, eax
  0019c	74 08		 je	 SHORT $LN101@LoadAttrib
  0019e	8b 10		 mov	 edx, DWORD PTR [eax]
  001a0	8b c8		 mov	 ecx, eax
  001a2	6a 01		 push	 1
  001a4	ff 12		 call	 DWORD PTR [edx]
$LN101@LoadAttrib:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 745  : 		const bool bIsDungeonObject = (std::string::npos != attrFileName.find("/dungeon/")) || (std::string::npos != attrFileName.find("\\dungeon\\"));

  001a6	6a 00		 push	 0
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_09OLKGEJPN@?1dungeon?1@
  001ad	8d 4d c0	 lea	 ecx, DWORD PTR _attrFileName$3[ebp]
  001b0	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
  001b5	83 f8 ff	 cmp	 eax, -1
  001b8	75 1b		 jne	 SHORT $LN8@LoadAttrib
  001ba	6a 00		 push	 0
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_09PCMKFNFD@?2dungeon?2@
  001c1	8d 4d c0	 lea	 ecx, DWORD PTR _attrFileName$3[ebp]
  001c4	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIQBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
  001c9	c6 85 6f ff ff
	ff 00		 mov	 BYTE PTR _bIsDungeonObject$1$[ebp], 0
  001d0	83 f8 ff	 cmp	 eax, -1
  001d3	74 07		 je	 SHORT $LN9@LoadAttrib
$LN8@LoadAttrib:
  001d5	c6 85 6f ff ff
	ff 01		 mov	 BYTE PTR _bIsDungeonObject$1$[ebp], 1
$LN9@LoadAttrib:

; 746  : 
; 747  : 		if (pAttributeData->IsEmpty() && false == bIsDungeonObject)

  001dc	8b b5 64 ff ff
	ff		 mov	 esi, DWORD PTR _pAttributeData$1$[ebp]
  001e2	8b ce		 mov	 ecx, esi
  001e4	e8 00 00 00 00	 call	 ?IsEmpty@CResource@@QBE_NXZ ; CResource::IsEmpty
  001e9	84 c0		 test	 al, al
  001eb	0f 84 08 01 00
	00		 je	 $LN4@LoadAttrib
  001f1	80 bd 6f ff ff
	ff 00		 cmp	 BYTE PTR _bIsDungeonObject$1$[ebp], 0
  001f8	0f 85 fb 00 00
	00		 jne	 $LN4@LoadAttrib

; 748  : 		{
; 749  : 			if (NULL != pObjectInstance && NULL != pObjectInstance->pThingInstance)

  001fe	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _pObjectInstance$GSCopy$1$[ebp]
  00204	85 c0		 test	 eax, eax
  00206	0f 84 ed 00 00
	00		 je	 $LN4@LoadAttrib
  0020c	8b 78 14	 mov	 edi, DWORD PTR [eax+20]
  0020f	85 ff		 test	 edi, edi
  00211	0f 84 e2 00 00
	00		 je	 $LN4@LoadAttrib

; 750  : 			{
; 751  : 				CGraphicThingInstance* object = pObjectInstance->pThingInstance;
; 752  : 
; 753  : 				D3DXVECTOR3 v3Min, v3Max;
; 754  : 
; 755  : 				object->GetBoundingAABB(v3Min, v3Max);

  00217	8b 07		 mov	 eax, DWORD PTR [edi]
  00219	8d 4d d8	 lea	 ecx, DWORD PTR _v3Max$4[ebp]
  0021c	51		 push	 ecx
  0021d	8d 4d e4	 lea	 ecx, DWORD PTR _v3Min$6[ebp]
  00220	51		 push	 ecx
  00221	8b cf		 mov	 ecx, edi
  00223	ff 50 40	 call	 DWORD PTR [eax+64]

; 756  : 
; 757  : 				CStaticCollisionData collision;
; 758  : 				collision.dwType = COLLISION_TYPE_OBB;
; 759  : 				D3DXQuaternionRotationYawPitchRoll(&collision.quatRotation, object->GetYaw(), object->GetPitch(), object->GetRoll());

  00226	8b cf		 mov	 ecx, edi
  00228	c7 85 70 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR _collision$2[ebp], 5
  00232	e8 00 00 00 00	 call	 ?GetRoll@CGraphicObjectInstance@@QAEMXZ ; CGraphicObjectInstance::GetRoll
  00237	51		 push	 ecx
  00238	d9 1c 24	 fstp	 DWORD PTR [esp]
  0023b	8b cf		 mov	 ecx, edi
  0023d	e8 00 00 00 00	 call	 ?GetPitch@CGraphicObjectInstance@@QAEMXZ ; CGraphicObjectInstance::GetPitch
  00242	51		 push	 ecx
  00243	d9 1c 24	 fstp	 DWORD PTR [esp]
  00246	8b cf		 mov	 ecx, edi
  00248	e8 00 00 00 00	 call	 ?GetYaw@CGraphicObjectInstance@@QAEMXZ ; CGraphicObjectInstance::GetYaw
  0024d	51		 push	 ecx
  0024e	8d 45 b0	 lea	 eax, DWORD PTR _collision$2[ebp+64]
  00251	d9 1c 24	 fstp	 DWORD PTR [esp]
  00254	50		 push	 eax
  00255	e8 00 00 00 00	 call	 _D3DXQuaternionRotationYawPitchRoll@16

; 760  : 				strcpy(collision.szName, "DummyCollisionOBB");

  0025a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@NJPKAPFJ@DummyCollisionOBB@

; 768  : 				pAttributeData->AddCollisionData(collision);

  00261	8b ce		 mov	 ecx, esi
  00263	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@NJPKAPFJ@DummyCollisionOBB@+16
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00269	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _v3Min$6[ebp+4]
  0026e	f3 0f 58 4d dc	 addss	 xmm1, DWORD PTR _v3Max$4[ebp+4]
  00273	f3 0f 10 7d e0	 movss	 xmm7, DWORD PTR _v3Max$4[ebp+8]

; 182  :     z = fz;

  00278	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@3f000000

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00280	f3 0f 10 55 d8	 movss	 xmm2, DWORD PTR _v3Max$4[ebp]
  00285	f3 0f 58 55 e4	 addss	 xmm2, DWORD PTR _v3Min$6[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 760  : 				strcpy(collision.szName, "DummyCollisionOBB");

  0028a	0f 11 85 74 ff
	ff ff		 movups	 XMMWORD PTR _collision$2[ebp+4], xmm0
  00291	66 89 45 84	 mov	 WORD PTR _collision$2[ebp+20], ax

; 768  : 				pAttributeData->AddCollisionData(collision);

  00295	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _collision$2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0029b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _v3Min$6[ebp+8]
  002a0	f3 0f 58 c7	 addss	 xmm0, xmm7

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  002a4	f3 0f 59 ce	 mulss	 xmm1, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 768  : 				pAttributeData->AddCollisionData(collision);

  002a8	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002a9	f3 0f 5c 7d ec	 subss	 xmm7, DWORD PTR _v3Min$6[ebp+8]

; 182  :     z = fz;

  002ae	f3 0f 59 d6	 mulss	 xmm2, xmm6

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  002b2	f3 0f 59 c6	 mulss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 761  : 				collision.v3Position = (v3Min + v3Max) * 0.5f;

  002b6	f3 0f 11 4d 9c	 movss	 DWORD PTR _collision$2[ebp+44], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002bb	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _v3Max$4[ebp]
  002c0	f3 0f 5c 4d e4	 subss	 xmm1, DWORD PTR _v3Min$6[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 761  : 				collision.v3Position = (v3Min + v3Max) * 0.5f;

  002c5	f3 0f 11 45 a0	 movss	 DWORD PTR _collision$2[ebp+48], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002ca	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _v3Max$4[ebp+4]
  002cf	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _v3Min$6[ebp+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 765  : 				collision.fDimensions[1] = vDelta.y * 0.5f;

  002d4	f3 0f 59 fe	 mulss	 xmm7, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002d8	f3 0f 59 ce	 mulss	 xmm1, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 764  : 				collision.fDimensions[0] = vDelta.x * 0.5f;

  002dc	f3 0f 59 c6	 mulss	 xmm0, xmm6
  002e0	f3 0f 11 55 98	 movss	 DWORD PTR _collision$2[ebp+40], xmm2
  002e5	f3 0f 11 4d a4	 movss	 DWORD PTR _collision$2[ebp+52], xmm1

; 765  : 				collision.fDimensions[1] = vDelta.y * 0.5f;

  002ea	f3 0f 11 45 a8	 movss	 DWORD PTR _collision$2[ebp+56], xmm0

; 766  : 				collision.fDimensions[2] = vDelta.z * 0.5f;

  002ef	f3 0f 11 7d ac	 movss	 DWORD PTR _collision$2[ebp+60], xmm7

; 768  : 				pAttributeData->AddCollisionData(collision);

  002f4	e8 00 00 00 00	 call	 ?AddCollisionData@CAttributeData@@QAEIABVCStaticCollisionData@@@Z ; CAttributeData::AddCollisionData
$LN4@LoadAttrib:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  002f9	8b 45 d4	 mov	 eax, DWORD PTR _attrFileName$3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 771  : 	}

  002fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00303	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00306	72 0d		 jb	 SHORT $LN135@LoadAttrib

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00308	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00309	50		 push	 eax
  0030a	ff 75 c0	 push	 DWORD PTR _attrFileName$3[ebp]
  0030d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00312	83 c4 08	 add	 esp, 8
$LN135@LoadAttrib:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 773  : 	if (!pAttributeData->IsEmpty())

  00315	8b b5 68 ff ff
	ff		 mov	 esi, DWORD PTR _pAttrInstance$1$[ebp]
$LN119@LoadAttrib:
  0031b	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _pAttributeData$1$[ebp]
  00321	e8 00 00 00 00	 call	 ?IsEmpty@CResource@@QBE_NXZ ; CResource::IsEmpty
  00326	84 c0		 test	 al, al
  00328	75 0b		 jne	 SHORT $LN5@LoadAttrib

; 774  : 	{
; 775  : 		pObjectInstance->pAttributeInstance = pAttrInstance;

  0032a	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _pObjectInstance$GSCopy$1$[ebp]
  00330	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 776  : 	}

  00333	eb 31		 jmp	 SHORT $LN129@LoadAttrib
$LN5@LoadAttrib:

; 777  : 	else
; 778  : 	{
; 779  : 		pAttrInstance->Clear();

  00335	8b ce		 mov	 ecx, esi
  00337	e8 00 00 00 00	 call	 ?Clear@CAttributeInstance@@QAEXXZ ; CAttributeInstance::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0033c	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 780  : 		ms_AttributeInstancePool.Free(pAttrInstance);

  00341	89 75 ec	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00344	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+24
  0034a	74 0b		 je	 SHORT $LN130@LoadAttrib

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0034c	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0034e	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+20, 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00355	eb 0f		 jmp	 SHORT $LN129@LoadAttrib
$LN130@LoadAttrib:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00357	8d 4d ec	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0035a	51		 push	 ecx
  0035b	50		 push	 eax
  0035c	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_AttributeInstancePool@CArea@@1V?$CDynamicPool@VCAttributeInstance@@@@A+16
  00361	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAttributeInstance@@@?$vector@PAVCAttributeInstance@@V?$allocator@PAVCAttributeInstance@@@std@@@std@@QAEPAPAVCAttributeInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CAttributeInstance *,std::allocator<CAttributeInstance *> >::_Emplace_reallocate<CAttributeInstance * const &>
$LN129@LoadAttrib:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 782  : }

  00366	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00369	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00370	59		 pop	 ecx
  00371	5f		 pop	 edi
  00372	5e		 pop	 esi
  00373	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00376	33 cd		 xor	 ecx, ebp
  00378	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0037d	8b e5		 mov	 esp, ebp
  0037f	5d		 pop	 ebp
  00380	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z$2:
  00000	6a 5c		 push	 92			; 0000005cH
  00002	8b 45 ec	 mov	 eax, DWORD PTR $T8[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__unwindfunclet$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z$0:
  0000f	8d 4d c0	 lea	 ecx, DWORD PTR _attrFileName$3[ebp]
  00012	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z$1:
  00017	8d 4d dc	 lea	 ecx, DWORD PTR $T5[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1locale@std@@QAE@XZ	; std::locale::~locale
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
__ehhandler$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z:
  00024	90		 npad	 1
  00025	90		 npad	 1
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 8a 60 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-160]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__LoadAttribute@CArea@@IAEXPAUSObjectInstance@1@PBD@Z ENDP ; CArea::__LoadAttribute
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__UpdateEffectList@CArea@@IAEXXZ
_TEXT	SEGMENT
_rkEftMgr$1$ = -8					; size = 4
__Successor$1 = -4					; size = 4
_i$ = -4						; size = 4
?__UpdateEffectList@CArea@@IAEXXZ PROC			; CArea::__UpdateEffectList, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 80   : 	CEffectManager& rkEftMgr=CEffectManager::Instance();

  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0000b	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0000c	8d 99 8c 00 00
	00		 lea	 ebx, DWORD PTR [ecx+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 80   : 	CEffectManager& rkEftMgr=CEffectManager::Instance();

  00012	89 45 f8	 mov	 DWORD PTR _rkEftMgr$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00015	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 76   : {

  00017	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 84   : 	for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end();)

  0001a	89 75 fc	 mov	 DWORD PTR _i$[ebp], esi
  0001d	3b f0		 cmp	 esi, eax
  0001f	74 52		 je	 SHORT $LN3@UpdateEffe
  00021	57		 push	 edi
$LL2@UpdateEffe:

; 85   : 	{
; 86   : 		CEffectInstance * pEffectInstance = i->second;

  00022	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]

; 87   : 
; 88   : 		pEffectInstance->Update();

  00025	8b cf		 mov	 ecx, edi
  00027	e8 00 00 00 00	 call	 ?Update@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Update

; 89   : 
; 90   : 		if (!pEffectInstance->isAlive())

  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?isAlive@CEffectInstance@@QAEHXZ ; CEffectInstance::isAlive
  00033	8d 4d fc	 lea	 ecx, DWORD PTR __Successor$1[ebp]
  00036	85 c0		 test	 eax, eax
  00038	75 2c		 jne	 SHORT $LN5@UpdateEffe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1387 :         _Unchecked_const_iterator _Successor = _Where;

  0003a	89 75 fc	 mov	 DWORD PTR __Successor$1[ebp], esi

; 1388 :         ++_Successor; // save successor iterator for return

  0003d	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++

; 1389 :         _Nodeptr _Erasednode = _Scary->_Extract(_Where); // node to erase

  00042	56		 push	 esi
  00043	8b cb		 mov	 ecx, ebx
  00045	e8 00 00 00 00	 call	 ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Extract
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0004a	6a 18		 push	 24			; 00000018H
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 92   : 			i = m_EffectInstanceMap.erase(i);

  00052	8b 75 fc	 mov	 esi, DWORD PTR __Successor$1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00055	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 93   : 			rkEftMgr.DestroyUnsafeEffectInstance(pEffectInstance);

  00058	8b 4d f8	 mov	 ecx, DWORD PTR _rkEftMgr$1$[ebp]
  0005b	89 75 fc	 mov	 DWORD PTR _i$[ebp], esi
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ?DestroyUnsafeEffectInstance@CEffectManager@@QAE_NPAVCEffectInstance@@@Z ; CEffectManager::DestroyUnsafeEffectInstance

; 94   : 		}

  00064	eb 08		 jmp	 SHORT $LN6@UpdateEffe
$LN5@UpdateEffe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 198  :         _Mybase::operator++();

  00066	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++
  0006b	8b 75 fc	 mov	 esi, DWORD PTR _i$[ebp]
$LN6@UpdateEffe:

; 232  :         return this->_Ptr == _Right._Ptr;

  0006e	3b 33		 cmp	 esi, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 84   : 	for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end();)

  00070	75 b0		 jne	 SHORT $LL2@UpdateEffe
  00072	5f		 pop	 edi
$LN3@UpdateEffe:
  00073	5e		 pop	 esi

; 95   : 		else
; 96   : 			++i;
; 97   : 	}
; 98   : }

  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?__UpdateEffectList@CArea@@IAEXXZ ENDP			; CArea::__UpdateEffectList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__UpdateAniThingList@CArea@@IAEXXZ
_TEXT	SEGMENT
?__UpdateAniThingList@CArea@@IAEXXZ PROC		; CArea::__UpdateAniThingList, COMDAT
; _this$ = ecx

; 48   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 77 28	 mov	 esi, DWORD PTR [edi+40]
  00007	3b 77 2c	 cmp	 esi, DWORD PTR [edi+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 53   : 		while (i!=m_ThingCloneInstaceVector.end())

  0000a	74 21		 je	 SHORT $LN3@UpdateAniT
  0000c	53		 push	 ebx
  0000d	0f 1f 00	 npad	 3
$LL2@UpdateAniT:

; 54   : 		{
; 55   : 			pkThingInst=*i++;

  00010	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 56   : 			if (pkThingInst->isShow())

  00012	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00014	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 56   : 			if (pkThingInst->isShow())

  00017	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  0001c	84 c0		 test	 al, al
  0001e	74 07		 je	 SHORT $LN6@UpdateAniT

; 57   : 			{
; 58   : 				pkThingInst->UpdateLODLevel();

  00020	8b cb		 mov	 ecx, ebx
  00022	e8 00 00 00 00	 call	 ?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::UpdateLODLevel
$LN6@UpdateAniT:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00027	3b 77 2c	 cmp	 esi, DWORD PTR [edi+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 53   : 		while (i!=m_ThingCloneInstaceVector.end())

  0002a	75 e4		 jne	 SHORT $LL2@UpdateAniT
  0002c	5b		 pop	 ebx
$LN3@UpdateAniT:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
  00030	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 67   : 		while (i!=m_AniThingCloneInstanceVector.end())

  00033	74 0f		 je	 SHORT $LN5@UpdateAniT
$LL4@UpdateAniT:

; 70   : 			pkThingInst->Update();

  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00037	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 70   : 			pkThingInst->Update();

  0003a	e8 00 00 00 00	 call	 ?Update@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0003f	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 67   : 		while (i!=m_AniThingCloneInstanceVector.end())

  00042	75 f1		 jne	 SHORT $LL4@UpdateAniT
$LN5@UpdateAniT:
  00044	5f		 pop	 edi

; 71   : 		}
; 72   : 	}
; 73   : }

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?__UpdateAniThingList@CArea@@IAEXXZ ENDP		; CArea::__UpdateAniThingList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__Load_BuildObjectInstances@CArea@@IAEXXZ
_TEXT	SEGMENT
$T2 = -76						; size = 12
__Loc$3 = -64						; size = 12
$T4 = -52						; size = 8
$T5 = -44						; size = 8
$T6 = -36						; size = 4
$T7 = -36						; size = 1
$T8 = -36						; size = 4
_c_pObjectData$9 = -32					; size = 4
$T10 = -28						; size = 4
_pkNewData$11 = -28					; size = 4
_i$1$ = -24						; size = 4
__Myhead$12 = -20					; size = 4
$T13 = -13						; size = 1
__$EHRec$ = -12						; size = 12
?__Load_BuildObjectInstances@CArea@@IAEXXZ PROC		; CArea::__Load_BuildObjectInstances, COMDAT
; _this$ = ecx

; 472  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__Load_BuildObjectInstances@CArea@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 473  : 	m_ObjectInstanceVector.clear();

  0002a	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  0002d	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00030	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 474  : 	m_ObjectInstanceVector.resize(GetObjectDataCount());

  00033	e8 00 00 00 00	 call	 ?GetObjectDataCount@CArea@@QAEKXZ ; CArea::GetObjectDataCount
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  00038	85 c0		 test	 eax, eax
  0003a	74 28		 je	 SHORT $LN12@Load_Build

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0003c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0003f	2b cf		 sub	 ecx, edi
  00041	c1 f9 02	 sar	 ecx, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00044	3b c1		 cmp	 eax, ecx
  00046	76 0e		 jbe	 SHORT $LN13@Load_Build

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00048	8d 4d f3	 lea	 ecx, DWORD PTR $T13[ebp]
  0004b	51		 push	 ecx
  0004c	50		 push	 eax
  0004d	8b ce		 mov	 ecx, esi
  0004f	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  00054	eb 0e		 jmp	 SHORT $LN12@Load_Build
$LN13@Load_Build:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00056	56		 push	 esi
  00057	50		 push	 eax
  00058	57		 push	 edi
  00059	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@YAPAPAUSObjectInstance@CArea@@PAPAU12@IAAV?$allocator@PAUSObjectInstance@CArea@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CArea::SObjectInstance *> >
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00061	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN12@Load_Build:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 476  : 	m_GraphicThingInstanceCRCMap.clear();

  00064	8d 4b 64	 lea	 ecx, DWORD PTR [ebx+100]
  00067	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006c	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  0006f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00074	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00077	8b cf		 mov	 ecx, edi
  00079	ff 75 dc	 push	 DWORD PTR $T7[ebp]
  0007c	2b ce		 sub	 ecx, esi
  0007e	f7 e9		 imul	 ecx
  00080	c1 fa 03	 sar	 edx, 3
  00083	8b c2		 mov	 eax, edx
  00085	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00088	03 c2		 add	 eax, edx
  0008a	50		 push	 eax
  0008b	57		 push	 edi
  0008c	56		 push	 esi
  0008d	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSObjectData@CArea@@UObjectDataComp@2@@std@@YAXPAUSObjectData@CArea@@0HUObjectDataComp@2@@Z ; std::_Sort_unchecked<CArea::SObjectData *,CArea::ObjectDataComp>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00092	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00095	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 481  : 	DWORD i=0;

  00098	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0009f	3b 73 14	 cmp	 esi, DWORD PTR [ebx+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 483  : 	for (it = m_ObjectInstanceVector.begin(); it!=m_ObjectInstanceVector.end();++it,++i)

  000a2	0f 84 37 02 00
	00		 je	 $LN160@Load_Build
  000a8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@Load_Build:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  000b0	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+20
  000b5	39 05 10 00 00
	00		 cmp	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+16, eax
  000bb	0f 85 94 00 00
	00		 jne	 $LN56@Load_Build

; 65   : 				T* pkNewData=new T;

  000c1	6a 28		 push	 40			; 00000028H
  000c3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c8	8b f8		 mov	 edi, eax
  000ca	83 c4 04	 add	 esp, 4
  000cd	89 7d dc	 mov	 DWORD PTR $T8[ebp], edi
  000d0	85 ff		 test	 edi, edi
  000d2	74 47		 je	 SHORT $LN58@Load_Build
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 146  : 			SObjectInstance()

  000d4	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7SObjectInstance@CArea@@6B@

; 133  : 				dwType = prt::PROPERTY_TYPE_NONE;

  000da	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 135  : 				dwEffectID = 0xffffffff;

  000e1	c7 47 18 ff ff
	ff ff		 mov	 DWORD PTR [edi+24], -1

; 136  : 				dwEffectInstanceIndex = 0xffffffff;

  000e8	c7 47 1c ff ff
	ff ff		 mov	 DWORD PTR [edi+28], -1

; 137  : 				isShadowFlag = false;

  000ef	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 138  : 
; 139  : 				pTree=NULL;

  000f6	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 140  : 				pThingInstance=NULL;

  000fd	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 141  : 				pAttributeInstance=NULL;

  00104	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 142  : 				pAmbienceInstance=NULL;

  0010b	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0

; 143  : 				pDungeonBlock=NULL;

  00112	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00119	eb 02		 jmp	 SHORT $LN59@Load_Build
$LN58@Load_Build:
  0011b	33 ff		 xor	 edi, edi
$LN59@Load_Build:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0011d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00122	89 7d e4	 mov	 DWORD PTR _pkNewData$11[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00125	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+12
  0012b	74 11		 je	 SHORT $LN70@Load_Build

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0012d	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0012f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00136	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+32

; 68   : 				return pkNewData;

  0013c	eb 22		 jmp	 SHORT $LN55@Load_Build
$LN70@Load_Build:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0013e	8d 4d e4	 lea	 ecx, DWORD PTR _pkNewData$11[ebp]
  00141	51		 push	 ecx
  00142	50		 push	 eax
  00143	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+4
  00148	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSObjectInstance@CArea@@@?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAPAUSObjectInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::_Emplace_reallocate<CArea::SObjectInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0014d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+32

; 68   : 				return pkNewData;

  00153	eb 0b		 jmp	 SHORT $LN55@Load_Build
$LN56@Load_Build:

; 69   : 			}
; 70   : 
; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00155	8b 78 fc	 mov	 edi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00158	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  0015b	a3 14 00 00 00	 mov	 DWORD PTR ?ms_ObjectInstancePool@CArea@@1V?$CDynamicPool@USObjectInstance@CArea@@@@A+20, eax
$LN55@Load_Build:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 485  : 		*it = ms_ObjectInstancePool.Alloc();

  00160	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 111  : 				if (pTree)

  00162	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00165	85 c9		 test	 ecx, ecx
  00167	74 05		 je	 SHORT $LN79@Load_Build

; 112  : 					pTree->Clear();

  00169	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
$LN79@Load_Build:

; 113  : 
; 114  : 				if (pThingInstance)

  0016e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00171	85 c9		 test	 ecx, ecx
  00173	74 05		 je	 SHORT $LN80@Load_Build

; 115  : 					pThingInstance->Clear();

  00175	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
$LN80@Load_Build:

; 116  : 
; 117  : 				if (pAttributeInstance)

  0017a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0017d	85 c9		 test	 ecx, ecx
  0017f	74 05		 je	 SHORT $LN81@Load_Build

; 118  : 					pAttributeInstance->Clear();

  00181	e8 00 00 00 00	 call	 ?Clear@CAttributeInstance@@QAEXXZ ; CAttributeInstance::Clear
$LN81@Load_Build:

; 119  : 
; 120  : 				if (pAmbienceInstance)

  00186	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00189	85 c9		 test	 ecx, ecx
  0018b	74 05		 je	 SHORT $LN82@Load_Build

; 121  : 					pAmbienceInstance->Clear();

  0018d	e8 00 00 00 00	 call	 ?Clear@CScreen@@QAEXXZ	; CScreen::Clear
$LN82@Load_Build:

; 122  : 
; 123  : 				if (pDungeonBlock)

  00192	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00195	85 c9		 test	 ecx, ecx
  00197	74 05		 je	 SHORT $LN83@Load_Build

; 124  : 					pDungeonBlock->Clear();

  00199	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
$LN83@Load_Build:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 491  : 		if (!GetObjectDataPointer(i, &c_pObjectData))

  0019e	8d 45 e0	 lea	 eax, DWORD PTR _c_pObjectData$9[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 133  : 				dwType = prt::PROPERTY_TYPE_NONE;

  001a1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 491  : 		if (!GetObjectDataPointer(i, &c_pObjectData))

  001a8	50		 push	 eax
  001a9	ff 75 e8	 push	 DWORD PTR _i$1$[ebp]
  001ac	8b cb		 mov	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 135  : 				dwEffectID = 0xffffffff;

  001ae	c7 47 18 ff ff
	ff ff		 mov	 DWORD PTR [edi+24], -1

; 136  : 				dwEffectInstanceIndex = 0xffffffff;

  001b5	c7 47 1c ff ff
	ff ff		 mov	 DWORD PTR [edi+28], -1

; 137  : 				isShadowFlag = false;

  001bc	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 138  : 
; 139  : 				pTree=NULL;

  001c3	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 140  : 				pThingInstance=NULL;

  001ca	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 141  : 				pAttributeInstance=NULL;

  001d1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 142  : 				pAmbienceInstance=NULL;

  001d8	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0

; 143  : 				pDungeonBlock=NULL;

  001df	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 491  : 		if (!GetObjectDataPointer(i, &c_pObjectData))

  001e6	e8 00 00 00 00	 call	 ?GetObjectDataPointer@CArea@@QBE_NKPAPBUSObjectData@1@@Z ; CArea::GetObjectDataPointer
  001eb	84 c0		 test	 al, al
  001ed	0f 84 dd 00 00
	00		 je	 $LN2@Load_Build

; 492  : 			continue;
; 493  : 
; 494  : 
; 495  : 		__SetObjectInstance(*it, c_pObjectData);

  001f3	8b 7d e0	 mov	 edi, DWORD PTR _c_pObjectData$9[ebp]
  001f6	8b cb		 mov	 ecx, ebx
  001f8	57		 push	 edi
  001f9	ff 36		 push	 DWORD PTR [esi]
  001fb	e8 00 00 00 00	 call	 ?__SetObjectInstance@CArea@@IAEXPAUSObjectInstance@1@PBUSObjectData@1@@Z ; CArea::__SetObjectInstance

; 496  : 
; 497  : 		if ((*it)->dwType == prt::PROPERTY_TYPE_BUILDING)

  00200	8b 06		 mov	 eax, DWORD PTR [esi]
  00202	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00206	0f 85 c4 00 00
	00		 jne	 $LN2@Load_Build
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0020c	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0020f	89 45 e4	 mov	 DWORD PTR $T10[ebp], eax
  00212	89 45 d4	 mov	 DWORD PTR $T5[ebp], eax
  00215	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00218	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0021b	89 45 dc	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0021e	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00220	89 45 d8	 mov	 DWORD PTR $T5[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00223	8d 45 d4	 lea	 eax, DWORD PTR $T5[ebp]
  00226	50		 push	 eax
  00227	8d 45 b4	 lea	 eax, DWORD PTR $T2[ebp]
  0022a	50		 push	 eax
  0022b	e8 00 00 00 00	 call	 ??$_Find_lower_bound@PAVCGraphicThingInstance@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@ABQAVCGraphicThingInstance@@@Z ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::_Find_lower_bound<CGraphicThingInstance *>
  00230	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00233	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00237	66 0f d6 45 c0	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0023c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00240	75 0c		 jne	 SHORT $LN97@Load_Build
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00242	8b 45 e4	 mov	 eax, DWORD PTR $T10[ebp]
  00245	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00248	0f 83 82 00 00
	00		 jae	 $LN2@Load_Build
$LN97@Load_Build:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0024e	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  00255	0f 84 9d 00 00
	00		 je	 $LN155@Load_Build

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0025b	8b 07		 mov	 eax, DWORD PTR [edi]
  0025d	89 45 ec	 mov	 DWORD PTR __Myhead$12[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00260	89 7d cc	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00263	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00265	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0026c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00273	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00278	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  0027a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00281	8b 45 e4	 mov	 eax, DWORD PTR $T10[ebp]
  00284	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00287	8b 45 dc	 mov	 eax, DWORD PTR $T6[ebp]
  0028a	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0028d	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$12[ebp]
  00290	50		 push	 eax
  00291	57		 push	 edi
  00292	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00297	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$12[ebp]
  0029a	50		 push	 eax
  0029b	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  002a4	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$12[ebp]
  002a7	50		 push	 eax
  002a8	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * &>
  002b1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  002b4	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  002ba	8d 4b 64	 lea	 ecx, DWORD PTR [ebx+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  002bd	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  002c4	57		 push	 edi
  002c5	ff 75 c4	 push	 DWORD PTR __Loc$3[ebp+4]
  002c8	ff 75 c0	 push	 DWORD PTR __Loc$3[ebp]
  002cb	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCGraphicThingInstance@@K@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CGraphicThingInstance * const,unsigned long> > >::_Insert_node
$LN2@Load_Build:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 483  : 	for (it = m_ObjectInstanceVector.begin(); it!=m_ObjectInstanceVector.end();++it,++i)

  002d0	ff 45 e8	 inc	 DWORD PTR _i$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  002d3	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  002d6	3b 73 14	 cmp	 esi, DWORD PTR [ebx+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 483  : 	for (it = m_ObjectInstanceVector.begin(); it!=m_ObjectInstanceVector.end();++it,++i)

  002d9	0f 85 d1 fd ff
	ff		 jne	 $LL4@Load_Build
$LN160@Load_Build:

; 498  : 			m_GraphicThingInstanceCRCMap.insert(TGraphicThingInstanceCRCMap::value_type( (*it)->pThingInstance, c_pObjectData->dwCRC ) );
; 499  : 
; 500  : 	}
; 501  : 
; 502  : 
; 503  : 	//////////
; 504  : 	Refresh();

  002df	8b cb		 mov	 ecx, ebx
  002e1	e8 00 00 00 00	 call	 ?Refresh@CArea@@QAEXXZ	; CArea::Refresh

; 506  : }

  002e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002f0	59		 pop	 ecx
  002f1	5f		 pop	 edi
  002f2	5e		 pop	 esi
  002f3	5b		 pop	 ebx
  002f4	8b e5		 mov	 esp, ebp
  002f6	5d		 pop	 ebp
  002f7	c3		 ret	 0
$LN155@Load_Build:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  002f8	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN162@Load_Build:
  002fd	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__Load_BuildObjectInstances@CArea@@IAEXXZ$3:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?__Load_BuildObjectInstances@CArea@@IAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__Load_BuildObjectInstances@CArea@@IAEXXZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__Load_BuildObjectInstances@CArea@@IAEXXZ ENDP		; CArea::__Load_BuildObjectInstances
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__Load_LoadAmbience@CArea@@IAE_NPBD@Z
_TEXT	SEGMENT
__Loc$4 = -332						; size = 12
_pProperty$5 = -320					; size = 4
_ObjectData$6 = -316					; size = 48
_dwCount$1$ = -268					; size = 4
_this$GSCopy$1$ = -264					; size = 4
$T7 = -260						; size = 8
$T8 = -260						; size = 8
__Loc$9 = -252						; size = 12
__Loc$10 = -252						; size = 12
__Loc$11 = -252						; size = 12
__Loc$12 = -252						; size = 12
_c_szFileName$GSCopy$1$ = -240				; size = 4
tv4313 = -240						; size = 4
tv4310 = -240						; size = 4
tv4307 = -240						; size = 4
tv4304 = -240						; size = 4
tv4301 = -240						; size = 4
_stTokenVectorMap$ = -236				; size = 8
__Myhead$13 = -228					; size = 4
__Myhead$14 = -228					; size = 4
__New_ptr$15 = -228					; size = 4
__Pnode$16 = -228					; size = 4
$T17 = -221						; size = 1
$T18 = -221						; size = 1
$T19 = -221						; size = 1
$T20 = -220						; size = 24
_$S19$21 = -196						; size = 24
_$S20$22 = -172						; size = 24
_$S21$23 = -148						; size = 24
_$S17$24 = -124						; size = 24
$T25 = -124						; size = 24
_$S22$26 = -100						; size = 24
$T27 = -100						; size = 24
$T28 = -100						; size = 24
_$S18$29 = -76						; size = 24
$T30 = -76						; size = 24
_szObjectName$ = -52					; size = 33
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?__Load_LoadAmbience@CArea@@IAE_NPBD@Z PROC		; CArea::__Load_LoadAmbience, COMDAT
; _this$ = ecx

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 40 01 00
	00		 sub	 esp, 320		; 00000140H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00033	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00036	6a 34		 push	 52			; 00000034H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 901  : {

  00038	89 bd 10 ff ff
	ff		 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0003e	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVectorMap$[ebp], 0
  00048	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVectorMap$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00052	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00057	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00059	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Pnode$16[ebp]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	89 b5 1c ff ff
	ff		 mov	 DWORD PTR __Pnode$16[ebp], esi
  00067	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006c	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Pnode$16[ebp]
  00072	50		 push	 eax
  00073	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0007c	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Pnode$16[ebp]
  00082	50		 push	 eax
  00083	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  0008c	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00092	89 b5 14 ff ff
	ff		 mov	 DWORD PTR _stTokenVectorMap$[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 904  : 	if (!LoadMultipleTextData(c_szFileName, stTokenVectorMap))

  00098	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  0009e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a5	50		 push	 eax
  000a6	57		 push	 edi
  000a7	e8 00 00 00 00	 call	 ?LoadMultipleTextData@@YA_NPBDAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@@Z ; LoadMultipleTextData
  000ac	83 c4 24	 add	 esp, 36			; 00000024H
  000af	84 c0		 test	 al, al
  000b1	75 0a		 jne	 SHORT $LN5@Load_LoadA

; 905  : 	{
; 906  : 		TraceError(" CArea::Load File Load %s ERROR", c_szFileName);

  000b3	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CA@NNOAMPKE@?5CArea?3?3Load?5File?5Load?5?$CFs?5ERROR@
  000b8	e9 37 01 00 00	 jmp	 $LN25@Load_LoadA
$LN5@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bd	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000bf	c6 45 9c 00	 mov	 BYTE PTR $T28[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c3	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c8	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BF@PFPNGEBG@areaambiencedatafile@

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000cf	89 85 1c ff ff
	ff		 mov	 DWORD PTR __New_ptr$15[ebp], eax

; 4229 :         _Mypair._Myval2._Orphan_all();
; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  000d5	c7 45 ac 14 00
	00 00		 mov	 DWORD PTR $T28[ebp+16], 20 ; 00000014H

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000dc	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  000df	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@PFPNGEBG@areaambiencedatafile@+16
  000e5	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000e8	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000ec	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __New_ptr$15[ebp]
  000f2	50		 push	 eax
  000f3	8d 45 9c	 lea	 eax, DWORD PTR $T28[ebp]
  000f6	c7 45 b0 1f 00
	00 00		 mov	 DWORD PTR $T28[ebp+20], 31 ; 0000001fH
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00103	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00106	8d 45 9c	 lea	 eax, DWORD PTR $T28[ebp]
  00109	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  0010f	50		 push	 eax
  00110	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Loc$12[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0011c	8b bd 0c ff ff
	ff		 mov	 edi, DWORD PTR __Loc$12[ebp+8]
  00122	8b b5 14 ff ff
	ff		 mov	 esi, DWORD PTR _stTokenVectorMap$[ebp]
  00128	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0012c	75 14		 jne	 SHORT $LN102@Load_LoadA
  0012e	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00131	50		 push	 eax
  00132	8d 45 9c	 lea	 eax, DWORD PTR $T28[ebp]
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0013b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0013e	84 c0		 test	 al, al
  00140	74 02		 je	 SHORT $LN101@Load_LoadA
$LN102@Load_LoadA:

; 1463 :         return _Get_scary()->_Myhead;

  00142	8b fe		 mov	 edi, esi
$LN101@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00144	8b 45 b0	 mov	 eax, DWORD PTR $T28[ebp+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00147	3b f7		 cmp	 esi, edi
  00149	0f 94 85 23 ff
	ff ff		 sete	 BYTE PTR $T19[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00150	83 f8 10	 cmp	 eax, 16			; 00000010H
  00153	72 13		 jb	 SHORT $LN130@Load_LoadA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00155	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00156	50		 push	 eax
  00157	ff 75 9c	 push	 DWORD PTR $T28[ebp]
  0015a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0015f	8b b5 14 ff ff
	ff		 mov	 esi, DWORD PTR _stTokenVectorMap$[ebp]
  00165	83 c4 08	 add	 esp, 8
$LN130@Load_LoadA:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 910  : 	if (stTokenVectorMap.end() == stTokenVectorMap.find("areaambiencedatafile"))

  00168	80 bd 23 ff ff
	ff 00		 cmp	 BYTE PTR $T19[ebp], 0
  0016f	74 07		 je	 SHORT $LN6@Load_LoadA

; 911  : 	{
; 912  : 		TraceError(" CArea::__LoadAmbience File Format %s ERROR 1", c_szFileName);
; 913  : 		return false;

  00171	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CO@ECPJGBAI@?5CArea?3?3__LoadAmbience?5File?5For@
  00176	eb 7c		 jmp	 SHORT $LN25@Load_LoadA
$LN6@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00178	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@IANPHBDM@objectcount@+8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0017e	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00184	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@IANPHBDM@objectcount@
  0018c	66 89 45 8c	 mov	 WORD PTR $T25[ebp+8], ax
  00190	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@IANPHBDM@objectcount@+10
  00195	88 45 8e	 mov	 BYTE PTR $T25[ebp+10], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00198	8d 45 84	 lea	 eax, DWORD PTR $T25[ebp]
  0019b	50		 push	 eax
  0019c	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Loc$11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001a2	c7 45 98 0f 00
	00 00		 mov	 DWORD PTR $T25[ebp+20], 15 ; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  001a9	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  001aa	c7 45 94 0b 00
	00 00		 mov	 DWORD PTR $T25[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001b1	66 0f d6 45 84	 movq	 QWORD PTR $T25[ebp], xmm0

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  001b6	c6 45 8f 00	 mov	 BYTE PTR $T25[ebp+11], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  001ba	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  001bf	8b bd 0c ff ff
	ff		 mov	 edi, DWORD PTR __Loc$11[ebp+8]
  001c5	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  001c9	75 14		 jne	 SHORT $LN185@Load_LoadA
  001cb	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  001ce	50		 push	 eax
  001cf	8d 45 84	 lea	 eax, DWORD PTR $T25[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  001d8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  001db	84 c0		 test	 al, al
  001dd	74 02		 je	 SHORT $LN184@Load_LoadA
$LN185@Load_LoadA:

; 1463 :         return _Get_scary()->_Myhead;

  001df	8b fe		 mov	 edi, esi
$LN184@Load_LoadA:

; 232  :         return this->_Ptr == _Right._Ptr;

  001e1	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001e3	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  001e8	0f 94 c0	 sete	 al
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 916  : 	if (stTokenVectorMap.end() == stTokenVectorMap.find("objectcount"))

  001eb	84 c0		 test	 al, al
  001ed	74 20		 je	 SHORT $LN7@Load_LoadA

; 917  : 	{
; 918  : 		TraceError(" CArea::__LoadAmbience File Format %s ERROR 2", c_szFileName);
; 919  : 		return false;

  001ef	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CO@GJNEDCML@?5CArea?3?3__LoadAmbience?5File?5For@
$LN25@Load_LoadA:
  001f4	ff b5 10 ff ff
	ff		 push	 DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00200	83 c4 08	 add	 esp, 8
  00203	c6 85 23 ff ff
	ff 00		 mov	 BYTE PTR $T17[ebp], 0
  0020a	e9 b4 07 00 00	 jmp	 $LN26@Load_LoadA
$LN7@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0020f	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@IANPHBDM@objectcount@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00215	8b f9		 mov	 edi, ecx

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00217	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@IANPHBDM@objectcount@
  0021f	66 89 45 bc	 mov	 WORD PTR $T30[ebp+8], ax
  00223	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@IANPHBDM@objectcount@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00228	89 7d c8	 mov	 DWORD PTR $T30[ebp+20], edi

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0022b	c7 45 c4 0b 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00232	66 0f d6 45 b4	 movq	 QWORD PTR $T30[ebp], xmm0
  00237	88 45 be	 mov	 BYTE PTR $T30[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0023a	c6 45 bf 00	 mov	 BYTE PTR $T30[ebp+11], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0023e	8d 45 b4	 lea	 eax, DWORD PTR $T30[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 922  : 	const std::string & c_rstrCount = stTokenVectorMap["objectcount"][0];

  00241	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00245	50		 push	 eax
  00246	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Loc$10[ebp]
  0024c	50		 push	 eax
  0024d	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00253	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00258	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR __Loc$10[ebp+8]
  0025e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00262	75 1f		 jne	 SHORT $LN268@Load_LoadA
  00264	83 c0 10	 add	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00267	50		 push	 eax
  00268	8d 45 b4	 lea	 eax, DWORD PTR $T30[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00271	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00274	84 c0		 test	 al, al
  00276	75 0b		 jne	 SHORT $LN268@Load_LoadA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 178  :             return {_Loc._Bound, false};

  00278	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR __Loc$10[ebp+8]
  0027e	e9 a2 00 00 00	 jmp	 $LN267@Load_LoadA
$LN268@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00283	81 bd 18 ff ff
	ff c4 4e ec 04	 cmp	 DWORD PTR _stTokenVectorMap$[ebp+4], 82595524 ; 04ec4ec4H
  0028d	0f 84 7a 07 00
	00		 je	 $LN802@Load_LoadA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00293	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00299	89 b5 1c ff ff
	ff		 mov	 DWORD PTR __Myhead$14[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0029f	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  002a5	6a 34		 push	 52			; 00000034H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  002a7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  002ab	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  002b5	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  002ba	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  002bc	8d 45 b4	 lea	 eax, DWORD PTR $T30[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  002bf	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  002c2	51		 push	 ecx
  002c3	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  002c5	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  002c7	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  002ce	52		 push	 edx
  002cf	e8 00 00 00 00	 call	 ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  002d4	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$14[ebp]
  002da	50		 push	 eax
  002db	56		 push	 esi
  002dc	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  002e1	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$14[ebp]
  002e7	50		 push	 eax
  002e8	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  002f1	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$14[ebp]
  002f7	50		 push	 eax
  002f8	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  002fb	50		 push	 eax
  002fc	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
  00301	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  00304	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0030a	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00310	56		 push	 esi
  00311	ff b5 08 ff ff
	ff		 push	 DWORD PTR __Loc$10[ebp+4]
  00317	ff b5 04 ff ff
	ff		 push	 DWORD PTR __Loc$10[ebp]
  0031d	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
  00322	8b 7d c8	 mov	 edi, DWORD PTR $T30[ebp+20]
$LN267@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00325	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 922  : 	const std::string & c_rstrCount = stTokenVectorMap["objectcount"][0];

  00328	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0032c	83 ff 10	 cmp	 edi, 16			; 00000010H
  0032f	72 0f		 jb	 SHORT $LN344@Load_LoadA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00331	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00334	50		 push	 eax
  00335	ff 75 b4	 push	 DWORD PTR $T30[ebp]
  00338	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0033d	83 c4 08	 add	 esp, 8
$LN344@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00340	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00347	c7 45 c8 0f 00
	00 00		 mov	 DWORD PTR $T30[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0034e	c6 45 b4 00	 mov	 BYTE PTR $T30[ebp], 0

; 2145 :         if (_Large_string_engaged()) {

  00352	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00356	72 02		 jb	 SHORT $LN353@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00358	8b 36		 mov	 esi, DWORD PTR [esi]
$LN353@Load_LoadA:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 924  : 	DWORD dwCount = atoi(c_rstrCount.c_str());

  0035a	56		 push	 esi
  0035b	e8 00 00 00 00	 call	 __atoi64
  00360	83 c4 04	 add	 esp, 4
  00363	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _dwCount$1$[ebp], eax

; 928  : 	for (DWORD i = 0; i < dwCount; ++i)

  00369	33 ff		 xor	 edi, edi
  0036b	85 c0		 test	 eax, eax
  0036d	0f 84 49 06 00
	00		 je	 $LN821@Load_LoadA
$LL4@Load_LoadA:

; 930  : 		_snprintf(szObjectName, sizeof(szObjectName), "object%03d", i);

  00373	57		 push	 edi
  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CHFLOJFF@object?$CF03d@
  00379	8d 45 cc	 lea	 eax, DWORD PTR _szObjectName$[ebp]
  0037c	6a 21		 push	 33			; 00000021H
  0037e	50		 push	 eax
  0037f	e8 00 00 00 00	 call	 __snprintf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00384	8d 4d cc	 lea	 ecx, DWORD PTR _szObjectName$[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00387	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T27[ebp+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 930  : 		_snprintf(szObjectName, sizeof(szObjectName), "object%03d", i);

  0038e	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00391	c7 45 b0 0f 00
	00 00		 mov	 DWORD PTR $T27[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00398	c6 45 9c 00	 mov	 BYTE PTR $T27[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0039c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0039f	90		 npad	 1
$LL812@Load_LoadA:
  003a0	8a 01		 mov	 al, BYTE PTR [ecx]
  003a2	41		 inc	 ecx
  003a3	84 c0		 test	 al, al
  003a5	75 f9		 jne	 SHORT $LL812@Load_LoadA
  003a7	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  003a9	8d 45 cc	 lea	 eax, DWORD PTR _szObjectName$[ebp]
  003ac	51		 push	 ecx
  003ad	50		 push	 eax
  003ae	8d 4d 9c	 lea	 ecx, DWORD PTR $T27[ebp]
  003b1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  003b6	8d 45 9c	 lea	 eax, DWORD PTR $T27[ebp]
  003b9	50		 push	 eax
  003ba	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR __Loc$4[ebp]
  003c0	50		 push	 eax
  003c1	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  003c7	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  003cc	8b b5 bc fe ff
	ff		 mov	 esi, DWORD PTR __Loc$4[ebp+8]
  003d2	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  003d6	75 14		 jne	 SHORT $LN372@Load_LoadA
  003d8	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  003db	50		 push	 eax
  003dc	8d 45 9c	 lea	 eax, DWORD PTR $T27[ebp]
  003df	50		 push	 eax
  003e0	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  003e5	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  003e8	84 c0		 test	 al, al
  003ea	74 06		 je	 SHORT $LN371@Load_LoadA
$LN372@Load_LoadA:

; 1463 :         return _Get_scary()->_Myhead;

  003ec	8b b5 14 ff ff
	ff		 mov	 esi, DWORD PTR _stTokenVectorMap$[ebp]
$LN371@Load_LoadA:

; 232  :         return this->_Ptr == _Right._Ptr;

  003f2	39 b5 14 ff ff
	ff		 cmp	 DWORD PTR _stTokenVectorMap$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003f8	8b 45 b0	 mov	 eax, DWORD PTR $T27[ebp+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  003fb	0f 94 85 23 ff
	ff ff		 sete	 BYTE PTR $T18[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00402	83 f8 10	 cmp	 eax, 16			; 00000010H
  00405	72 0d		 jb	 SHORT $LN400@Load_LoadA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00407	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00408	50		 push	 eax
  00409	ff 75 9c	 push	 DWORD PTR $T27[ebp]
  0040c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00411	83 c4 08	 add	 esp, 8
$LN400@Load_LoadA:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 932  : 		if (stTokenVectorMap.end() == stTokenVectorMap.find(szObjectName))

  00414	80 bd 23 ff ff
	ff 00		 cmp	 BYTE PTR $T18[ebp], 0
  0041b	0f 85 8e 05 00
	00		 jne	 $LN2@Load_LoadA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00421	8d 4d cc	 lea	 ecx, DWORD PTR _szObjectName$[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00424	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0042e	c7 85 38 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T20[ebp+20], 15 ; 0000000fH

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00438	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0043b	c6 85 24 ff ff
	ff 00		 mov	 BYTE PTR $T20[ebp], 0
$LL813@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00442	8a 01		 mov	 al, BYTE PTR [ecx]
  00444	41		 inc	 ecx
  00445	84 c0		 test	 al, al
  00447	75 f9		 jne	 SHORT $LL813@Load_LoadA
  00449	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0044b	8d 45 cc	 lea	 eax, DWORD PTR _szObjectName$[ebp]
  0044e	51		 push	 ecx
  0044f	50		 push	 eax
  00450	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  00456	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0045b	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 935  : 		const CTokenVector & rVector = stTokenVectorMap[szObjectName];

  00461	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00465	50		 push	 eax
  00466	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Loc$9[ebp]
  0046c	50		 push	 eax
  0046d	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00473	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00478	8b b5 0c ff ff
	ff		 mov	 esi, DWORD PTR __Loc$9[ebp+8]
  0047e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00482	75 1b		 jne	 SHORT $LN421@Load_LoadA
  00484	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00487	50		 push	 eax
  00488	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
  0048e	50		 push	 eax
  0048f	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00494	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00497	84 c0		 test	 al, al
  00499	0f 84 b4 00 00
	00		 je	 $LN420@Load_LoadA
$LN421@Load_LoadA:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0049f	81 bd 18 ff ff
	ff c4 4e ec 04	 cmp	 DWORD PTR _stTokenVectorMap$[ebp+4], 82595524 ; 04ec4ec4H
  004a9	0f 84 5e 05 00
	00		 je	 $LN802@Load_LoadA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  004af	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  004b5	89 85 1c ff ff
	ff		 mov	 DWORD PTR __Myhead$13[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  004bb	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  004c1	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  004c7	6a 34		 push	 52			; 00000034H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  004c9	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  004cd	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  004d7	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  004dc	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  004de	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  004e4	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  004e7	51		 push	 ecx
  004e8	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  004ea	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  004ec	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  004f3	52		 push	 edx
  004f4	e8 00 00 00 00	 call	 ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  004f9	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$13[ebp]
  004ff	50		 push	 eax
  00500	56		 push	 esi
  00501	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00506	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$13[ebp]
  0050c	50		 push	 eax
  0050d	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00510	50		 push	 eax
  00511	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00516	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$13[ebp]
  0051c	50		 push	 eax
  0051d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00520	50		 push	 eax
  00521	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
  00526	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  00529	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0052f	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00535	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0053f	56		 push	 esi
  00540	ff b5 08 ff ff
	ff		 push	 DWORD PTR __Loc$9[ebp+4]
  00546	ff b5 04 ff ff
	ff		 push	 DWORD PTR __Loc$9[ebp]
  0054c	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
  00551	8b f0		 mov	 esi, eax
$LN420@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00553	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T20[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 935  : 		const CTokenVector & rVector = stTokenVectorMap[szObjectName];

  00559	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0055d	83 f8 10	 cmp	 eax, 16			; 00000010H
  00560	72 10		 jb	 SHORT $LN495@Load_LoadA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00562	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00563	50		 push	 eax
  00564	ff b5 24 ff ff
	ff		 push	 DWORD PTR $T20[ebp]
  0056a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0056f	83 c4 08	 add	 esp, 8
$LN495@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00572	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0057c	c7 85 38 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T20[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00586	c6 85 24 ff ff
	ff 00		 mov	 BYTE PTR $T20[ebp], 0

; 3668 :         return _Mypair._Myval2._Myptr();

  0058d	8b 56 28	 mov	 edx, DWORD PTR [esi+40]

; 2145 :         if (_Large_string_engaged()) {

  00590	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  00594	72 02		 jb	 SHORT $LN506@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00596	8b 12		 mov	 edx, DWORD PTR [edx]
$LN506@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00598	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0059a	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _$S17$24[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005a1	c7 45 98 0f 00
	00 00		 mov	 DWORD PTR _$S17$24[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005a8	c6 45 84 00	 mov	 BYTE PTR _$S17$24[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  005ac	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  005af	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv4301[ebp], eax
$LL814@Load_LoadA:
  005b5	8a 01		 mov	 al, BYTE PTR [ecx]
  005b7	41		 inc	 ecx
  005b8	84 c0		 test	 al, al
  005ba	75 f9		 jne	 SHORT $LL814@Load_LoadA
  005bc	2b 8d 10 ff ff
	ff		 sub	 ecx, DWORD PTR tv4301[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  005c2	51		 push	 ecx
  005c3	52		 push	 edx
  005c4	8d 4d 84	 lea	 ecx, DWORD PTR _$S17$24[ebp]
  005c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  005cc	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  005cf	83 c2 18	 add	 edx, 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 937  : 		const std::string & c_rstrxPosition = rVector[0].c_str();

  005d2	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  005d6	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  005da	72 02		 jb	 SHORT $LN527@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  005dc	8b 12		 mov	 edx, DWORD PTR [edx]
$LN527@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  005de	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  005e0	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _$S18$29[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005e7	c7 45 c8 0f 00
	00 00		 mov	 DWORD PTR _$S18$29[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005ee	c6 45 b4 00	 mov	 BYTE PTR _$S18$29[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  005f2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  005f5	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv4304[ebp], eax
  005fb	0f 1f 44 00 00	 npad	 5
$LL815@Load_LoadA:
  00600	8a 01		 mov	 al, BYTE PTR [ecx]
  00602	41		 inc	 ecx
  00603	84 c0		 test	 al, al
  00605	75 f9		 jne	 SHORT $LL815@Load_LoadA
  00607	2b 8d 10 ff ff
	ff		 sub	 ecx, DWORD PTR tv4304[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0060d	51		 push	 ecx
  0060e	52		 push	 edx
  0060f	8d 4d b4	 lea	 ecx, DWORD PTR _$S18$29[ebp]
  00612	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00617	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  0061a	83 c2 30	 add	 edx, 48			; 00000030H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 938  : 		const std::string & c_rstryPosition = rVector[1].c_str();

  0061d	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00621	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  00625	72 02		 jb	 SHORT $LN548@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00627	8b 12		 mov	 edx, DWORD PTR [edx]
$LN548@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00629	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0062b	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S19$21[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00635	c7 85 50 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S19$21[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0063f	c6 85 3c ff ff
	ff 00		 mov	 BYTE PTR _$S19$21[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00646	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00649	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv4307[ebp], eax
  0064f	90		 npad	 1
$LL816@Load_LoadA:
  00650	8a 01		 mov	 al, BYTE PTR [ecx]
  00652	41		 inc	 ecx
  00653	84 c0		 test	 al, al
  00655	75 f9		 jne	 SHORT $LL816@Load_LoadA
  00657	2b 8d 10 ff ff
	ff		 sub	 ecx, DWORD PTR tv4307[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0065d	51		 push	 ecx
  0065e	52		 push	 edx
  0065f	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _$S19$21[ebp]
  00665	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  0066a	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  0066d	83 c2 48	 add	 edx, 72			; 00000048H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 939  : 		const std::string & c_rstrzPosition = rVector[2].c_str();

  00670	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00674	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  00678	72 02		 jb	 SHORT $LN569@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0067a	8b 12		 mov	 edx, DWORD PTR [edx]
$LN569@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0067c	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0067e	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S20$22[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00688	c7 85 68 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S20$22[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00692	c6 85 54 ff ff
	ff 00		 mov	 BYTE PTR _$S20$22[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00699	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0069c	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv4310[ebp], eax
$LL817@Load_LoadA:
  006a2	8a 01		 mov	 al, BYTE PTR [ecx]
  006a4	41		 inc	 ecx
  006a5	84 c0		 test	 al, al
  006a7	75 f9		 jne	 SHORT $LL817@Load_LoadA
  006a9	2b 8d 10 ff ff
	ff		 sub	 ecx, DWORD PTR tv4310[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  006af	51		 push	 ecx
  006b0	52		 push	 edx
  006b1	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _$S20$22[ebp]
  006b7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  006bc	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  006bf	83 c2 60	 add	 edx, 96			; 00000060H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 940  : 		const std::string & c_rstrCRC = rVector[3].c_str();

  006c2	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006c6	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  006ca	72 02		 jb	 SHORT $LN590@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  006cc	8b 12		 mov	 edx, DWORD PTR [edx]
$LN590@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  006ce	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  006d0	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S21$23[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  006da	c7 45 80 0f 00
	00 00		 mov	 DWORD PTR _$S21$23[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  006e1	c6 85 6c ff ff
	ff 00		 mov	 BYTE PTR _$S21$23[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  006e8	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  006eb	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv4313[ebp], eax
$LL818@Load_LoadA:
  006f1	8a 01		 mov	 al, BYTE PTR [ecx]
  006f3	41		 inc	 ecx
  006f4	84 c0		 test	 al, al
  006f6	75 f9		 jne	 SHORT $LL818@Load_LoadA
  006f8	2b 8d 10 ff ff
	ff		 sub	 ecx, DWORD PTR tv4313[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  006fe	51		 push	 ecx
  006ff	52		 push	 edx
  00700	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _$S21$23[ebp]
  00706	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2145 :         if (_Large_string_engaged()) {

  0070b	83 7d 98 10	 cmp	 DWORD PTR _$S17$24[ebp+20], 16 ; 00000010H
  0070f	8d 45 84	 lea	 eax, DWORD PTR _$S17$24[ebp]
  00712	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 941  : 		const std::string & c_rstrRange = rVector[4].c_str();

  00715	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00719	0f 43 45 84	 cmovae	 eax, DWORD PTR _$S17$24[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 945  : 		ObjectData.Position.x = atof(c_rstrxPosition.c_str());

  0071d	50		 push	 eax
  0071e	66 0f 13 85 d4
	fe ff ff	 movlpd	 QWORD PTR _ObjectData$6[ebp+16], xmm0
  00726	66 0f 13 85 dc
	fe ff ff	 movlpd	 QWORD PTR _ObjectData$6[ebp+24], xmm0
  0072e	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$6[ebp+32], 0
  00738	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0073d	83 7d c8 10	 cmp	 DWORD PTR _$S18$29[ebp+20], 16 ; 00000010H
  00741	8d 45 b4	 lea	 eax, DWORD PTR _$S18$29[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 945  : 		ObjectData.Position.x = atof(c_rstrxPosition.c_str());

  00744	d9 9d c4 fe ff
	ff		 fstp	 DWORD PTR _ObjectData$6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0074a	0f 43 45 b4	 cmovae	 eax, DWORD PTR _$S18$29[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 946  : 		ObjectData.Position.y = atof(c_rstryPosition.c_str());

  0074e	50		 push	 eax
  0074f	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00754	83 bd 50 ff ff
	ff 10		 cmp	 DWORD PTR _$S19$21[ebp+20], 16 ; 00000010H
  0075b	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _$S19$21[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 946  : 		ObjectData.Position.y = atof(c_rstryPosition.c_str());

  00761	d9 9d c8 fe ff
	ff		 fstp	 DWORD PTR _ObjectData$6[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00767	0f 43 85 3c ff
	ff ff		 cmovae	 eax, DWORD PTR _$S19$21[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 947  : 		ObjectData.Position.z = atof(c_rstrzPosition.c_str());

  0076e	50		 push	 eax
  0076f	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00774	83 bd 68 ff ff
	ff 10		 cmp	 DWORD PTR _$S20$22[ebp+20], 16 ; 00000010H
  0077b	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _$S20$22[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 947  : 		ObjectData.Position.z = atof(c_rstrzPosition.c_str());

  00781	d9 9d cc fe ff
	ff		 fstp	 DWORD PTR _ObjectData$6[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00787	0f 43 85 54 ff
	ff ff		 cmovae	 eax, DWORD PTR _$S20$22[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 948  : 		ObjectData.dwCRC = atoi	(c_rstrCRC.c_str());

  0078e	50		 push	 eax
  0078f	e8 00 00 00 00	 call	 __atoi64
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00794	83 7d 80 10	 cmp	 DWORD PTR _$S21$23[ebp+20], 16 ; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 948  : 		ObjectData.dwCRC = atoi	(c_rstrCRC.c_str());

  00798	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _ObjectData$6[ebp+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  0079e	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _$S21$23[ebp]

; 2145 :         if (_Large_string_engaged()) {

  007a4	0f 43 85 6c ff
	ff ff		 cmovae	 eax, DWORD PTR _$S21$23[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 949  : 		ObjectData.dwRange = atoi(c_rstrRange.c_str());

  007ab	50		 push	 eax
  007ac	e8 00 00 00 00	 call	 __atoi64
  007b1	83 c4 14	 add	 esp, 20			; 00000014H
  007b4	89 85 ec fe ff
	ff		 mov	 DWORD PTR _ObjectData$6[ebp+40], eax

; 950  : 
; 951  : 		ObjectData.InitializeRotation();

  007ba	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _ObjectData$6[ebp]
  007c0	e8 00 00 00 00	 call	 ?InitializeRotation@SObjectData@CArea@@QAEXXZ ; CArea::SObjectData::InitializeRotation
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  007c5	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  007c8	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  007cd	2b 4e 28	 sub	 ecx, DWORD PTR [esi+40]
  007d0	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 952  : 		ObjectData.m_fHeightBias = 0.0f;

  007d2	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$6[ebp+36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  007dc	c1 fa 02	 sar	 edx, 2
  007df	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 953  : 		ObjectData.fMaxVolumeAreaPercentage = 0.0f;

  007e1	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$6[ebp+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  007eb	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  007ee	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 955  : 		if (rVector.size() >= 6)

  007f0	83 f8 06	 cmp	 eax, 6
  007f3	72 6d		 jb	 SHORT $LN675@Load_LoadA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  007f5	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  007f8	83 c2 78	 add	 edx, 120		; 00000078H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  007fb	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  007ff	72 02		 jb	 SHORT $LN648@Load_LoadA

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00801	8b 12		 mov	 edx, DWORD PTR [edx]
$LN648@Load_LoadA:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00803	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00805	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _$S22$26[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0080c	c7 45 b0 0f 00
	00 00		 mov	 DWORD PTR _$S22$26[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00813	c6 45 9c 00	 mov	 BYTE PTR _$S22$26[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00817	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0081a	66 0f 1f 44 00
	00		 npad	 6
$LL819@Load_LoadA:
  00820	8a 01		 mov	 al, BYTE PTR [ecx]
  00822	41		 inc	 ecx
  00823	84 c0		 test	 al, al
  00825	75 f9		 jne	 SHORT $LL819@Load_LoadA
  00827	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00829	51		 push	 ecx
  0082a	52		 push	 edx
  0082b	8d 4d 9c	 lea	 ecx, DWORD PTR _$S22$26[ebp]
  0082e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2145 :         if (_Large_string_engaged()) {

  00833	83 7d b0 10	 cmp	 DWORD PTR _$S22$26[ebp+20], 16 ; 00000010H
  00837	8d 45 9c	 lea	 eax, DWORD PTR _$S22$26[ebp]
  0083a	0f 43 45 9c	 cmovae	 eax, DWORD PTR _$S22$26[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 958  : 			ObjectData.fMaxVolumeAreaPercentage = atof(c_rstrPercentage.c_str());

  0083e	50		 push	 eax
  0083f	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00844	8b 45 b0	 mov	 eax, DWORD PTR _$S22$26[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 958  : 			ObjectData.fMaxVolumeAreaPercentage = atof(c_rstrPercentage.c_str());

  00847	83 c4 04	 add	 esp, 4
  0084a	d9 9d f0 fe ff
	ff		 fstp	 DWORD PTR _ObjectData$6[ebp+44]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00850	83 f8 10	 cmp	 eax, 16			; 00000010H
  00853	72 0d		 jb	 SHORT $LN675@Load_LoadA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00855	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00856	50		 push	 eax
  00857	ff 75 9c	 push	 DWORD PTR _$S22$26[ebp]
  0085a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0085f	83 c4 08	 add	 esp, 8
$LN675@Load_LoadA:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 963  : 		if (!CPropertyManager::Instance().Get(ObjectData.dwCRC, &pProperty))

  00862	8b b5 d0 fe ff
	ff		 mov	 esi, DWORD PTR _ObjectData$6[ebp+12]
  00868	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _pProperty$5[ebp]
  0086e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPropertyManager@@@@0PAVCPropertyManager@@A ; CSingleton<CPropertyManager>::ms_singleton
  00874	50		 push	 eax
  00875	56		 push	 esi
  00876	e8 00 00 00 00	 call	 ?Get@CPropertyManager@@QAE_NKPAPAVCProperty@@@Z ; CPropertyManager::Get
  0087b	84 c0		 test	 al, al
  0087d	75 10		 jne	 SHORT $LN10@Load_LoadA

; 964  : 		{
; 965  : 			TraceError(" CArea::LoadAmbience Property(%d) Load ERROR", ObjectData.dwCRC);

  0087f	56		 push	 esi
  00880	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@BAHENMHD@?5CArea?3?3LoadAmbience?5Property?$CI?$CF@
  00885	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0088a	83 c4 08	 add	 esp, 8

; 966  : 			continue;

  0088d	eb 44		 jmp	 SHORT $LN733@Load_LoadA
$LN10@Load_LoadA:

; 967  : 		}
; 968  : 
; 969  : 		m_ObjectDataVector.push_back(ObjectData);

  0088f	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00895	83 c1 04	 add	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00898	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0089b	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0089e	74 26		 je	 SHORT $LN734@Load_LoadA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  008a0	0f 10 85 c4 fe
	ff ff		 movups	 xmm0, XMMWORD PTR _ObjectData$6[ebp]
  008a7	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  008aa	0f 10 85 d4 fe
	ff ff		 movups	 xmm0, XMMWORD PTR _ObjectData$6[ebp+16]
  008b1	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  008b5	0f 10 85 e4 fe
	ff ff		 movups	 xmm0, XMMWORD PTR _ObjectData$6[ebp+32]
  008bc	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  008c0	83 41 04 30	 add	 DWORD PTR [ecx+4], 48	; 00000030H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  008c4	eb 0d		 jmp	 SHORT $LN733@Load_LoadA
$LN734@Load_LoadA:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  008c6	8d 95 c4 fe ff
	ff		 lea	 edx, DWORD PTR _ObjectData$6[ebp]
  008cc	52		 push	 edx
  008cd	50		 push	 eax
  008ce	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSObjectData@CArea@@@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAEPAUSObjectData@CArea@@QAU23@ABU23@@Z ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Emplace_reallocate<CArea::SObjectData const &>
$LN733@Load_LoadA:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 928  : 	for (DWORD i = 0; i < dwCount; ++i)

  008d3	8b 45 80	 mov	 eax, DWORD PTR _$S21$23[ebp+20]
  008d6	83 f8 10	 cmp	 eax, 16			; 00000010H
  008d9	72 10		 jb	 SHORT $LN744@Load_LoadA
  008db	40		 inc	 eax
  008dc	50		 push	 eax
  008dd	ff b5 6c ff ff
	ff		 push	 DWORD PTR _$S21$23[ebp]
  008e3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  008e8	83 c4 08	 add	 esp, 8
$LN744@Load_LoadA:
  008eb	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _$S20$22[ebp+20]
  008f1	c6 85 6c ff ff
	ff 00		 mov	 BYTE PTR _$S21$23[ebp], 0
  008f8	c7 45 80 0f 00
	00 00		 mov	 DWORD PTR _$S21$23[ebp+20], 15 ; 0000000fH
  008ff	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S21$23[ebp+16], 0
  00909	83 f8 10	 cmp	 eax, 16			; 00000010H
  0090c	72 10		 jb	 SHORT $LN754@Load_LoadA
  0090e	40		 inc	 eax
  0090f	50		 push	 eax
  00910	ff b5 54 ff ff
	ff		 push	 DWORD PTR _$S20$22[ebp]
  00916	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0091b	83 c4 08	 add	 esp, 8
$LN754@Load_LoadA:
  0091e	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _$S19$21[ebp+20]
  00924	c6 85 54 ff ff
	ff 00		 mov	 BYTE PTR _$S20$22[ebp], 0
  0092b	c7 85 68 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S20$22[ebp+20], 15 ; 0000000fH
  00935	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S20$22[ebp+16], 0
  0093f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00942	72 10		 jb	 SHORT $LN764@Load_LoadA
  00944	40		 inc	 eax
  00945	50		 push	 eax
  00946	ff b5 3c ff ff
	ff		 push	 DWORD PTR _$S19$21[ebp]
  0094c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00951	83 c4 08	 add	 esp, 8
$LN764@Load_LoadA:
  00954	8b 45 c8	 mov	 eax, DWORD PTR _$S18$29[ebp+20]
  00957	c6 85 3c ff ff
	ff 00		 mov	 BYTE PTR _$S19$21[ebp], 0
  0095e	c7 85 50 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S19$21[ebp+20], 15 ; 0000000fH
  00968	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S19$21[ebp+16], 0
  00972	83 f8 10	 cmp	 eax, 16			; 00000010H
  00975	72 0d		 jb	 SHORT $LN774@Load_LoadA
  00977	40		 inc	 eax
  00978	50		 push	 eax
  00979	ff 75 b4	 push	 DWORD PTR _$S18$29[ebp]
  0097c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00981	83 c4 08	 add	 esp, 8
$LN774@Load_LoadA:
  00984	8b 45 98	 mov	 eax, DWORD PTR _$S17$24[ebp+20]
  00987	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0098b	c6 45 b4 00	 mov	 BYTE PTR _$S18$29[ebp], 0
  0098f	c7 45 c8 0f 00
	00 00		 mov	 DWORD PTR _$S18$29[ebp+20], 15 ; 0000000fH
  00996	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _$S18$29[ebp+16], 0
  0099d	83 f8 10	 cmp	 eax, 16			; 00000010H
  009a0	72 0d		 jb	 SHORT $LN2@Load_LoadA
  009a2	40		 inc	 eax
  009a3	50		 push	 eax
  009a4	ff 75 84	 push	 DWORD PTR _$S17$24[ebp]
  009a7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  009ac	83 c4 08	 add	 esp, 8
$LN2@Load_LoadA:
  009af	47		 inc	 edi
  009b0	3b bd f4 fe ff
	ff		 cmp	 edi, DWORD PTR _dwCount$1$[ebp]
  009b6	0f 82 b7 f9 ff
	ff		 jb	 $LL4@Load_LoadA
$LN821@Load_LoadA:

; 972  : 	return true;

  009bc	c6 85 23 ff ff
	ff 01		 mov	 BYTE PTR $T17[ebp], 1
$LN26@Load_LoadA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  009c3	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  009c9	ff 70 04	 push	 DWORD PTR [eax+4]
  009cc	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  009d2	50		 push	 eax
  009d3	8b c8		 mov	 ecx, eax
  009d5	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  009da	6a 34		 push	 52			; 00000034H
  009dc	ff b5 14 ff ff
	ff		 push	 DWORD PTR _stTokenVectorMap$[ebp]
  009e2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 972  : 	return true;

  009e7	8a 85 23 ff ff
	ff		 mov	 al, BYTE PTR $T17[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  009ed	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 973  : }

  009f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  009f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  009fa	59		 pop	 ecx
  009fb	5f		 pop	 edi
  009fc	5e		 pop	 esi
  009fd	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a00	33 cd		 xor	 ecx, ebp
  00a02	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a07	8b e5		 mov	 esp, ebp
  00a09	5d		 pop	 ebp
  00a0a	c2 04 00	 ret	 4
$LN802@Load_LoadA:
  00a0d	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN823@Load_LoadA:
  00a12	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$0:
  00000	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAE@XZ
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$3:
  0000b	8d 4d b4	 lea	 ecx, DWORD PTR $T30[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$17:
  00013	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$5:
  0001e	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$24:
  00029	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$6:
  00034	8d 4d 84	 lea	 ecx, DWORD PTR _$S17$24[ebp]
  00037	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$7:
  0003c	8d 4d b4	 lea	 ecx, DWORD PTR _$S18$29[ebp]
  0003f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$8:
  00044	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _$S19$21[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$9:
  0004f	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _$S20$22[ebp]
  00055	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z$10:
  0005a	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _$S21$23[ebp]
  00060	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	cc		 int	 3
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
__ehhandler$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z:
  0006a	90		 npad	 1
  0006b	90		 npad	 1
  0006c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00070	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00073	8b 8a b4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-332]
  00079	33 c8		 xor	 ecx, eax
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00083	33 c8		 xor	 ecx, eax
  00085	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__Load_LoadAmbience@CArea@@IAE_NPBD@Z
  0008f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__Load_LoadAmbience@CArea@@IAE_NPBD@Z ENDP		; CArea::__Load_LoadAmbience
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__Load_LoadObject@CArea@@IAE_NPBD@Z
_TEXT	SEGMENT
__Loc$4 = -320						; size = 12
_pProperty$5 = -308					; size = 4
_dwCount$1$ = -304					; size = 4
_this$GSCopy$1$ = -300					; size = 4
$T6 = -296						; size = 8
$T7 = -296						; size = 8
__Ptr$1$ = -288						; size = 4
tv5467 = -288						; size = 4
_p$1$ = -284						; size = 4
__New_ptr$8 = -284					; size = 4
__Loc$9 = -280						; size = 12
__Loc$10 = -280						; size = 12
__Loc$11 = -280						; size = 12
__Loc$12 = -280						; size = 12
_c_szFileName$GSCopy$1$ = -268				; size = 4
_i$1$ = -268						; size = 4
$T13 = -264						; size = 4
__Result$1$ = -264					; size = 4
_stTokenVectorMap$ = -260				; size = 8
__Count$1$ = -252					; size = 4
$T14 = -252						; size = 4
__Result$1$ = -252					; size = 4
$T15 = -252						; size = 4
__Result$1$ = -252					; size = 4
tv5430 = -252						; size = 4
__Myhead$16 = -252					; size = 4
__Myhead$17 = -252					; size = 4
__Pnode$18 = -252					; size = 4
$T19 = -245						; size = 1
$T20 = -245						; size = 1
_ObjectData$21 = -244					; size = 48
_$S15$22 = -196						; size = 24
_$S16$23 = -172						; size = 24
$T24 = -148						; size = 24
$T25 = -148						; size = 24
_$S13$26 = -124						; size = 24
$T27 = -124						; size = 24
$T28 = -124						; size = 24
_$S14$29 = -100						; size = 24
$T30 = -100						; size = 24
$T31 = -76						; size = 24
$T32 = -76						; size = 24
$T33 = -76						; size = 24
_szObjectName$ = -52					; size = 33
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?__Load_LoadObject@CArea@@IAE_NPBD@Z PROC		; CArea::__Load_LoadObject, COMDAT
; _this$ = ecx

; 804  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__Load_LoadObject@CArea@@IAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d d4 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00033	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00036	6a 34		 push	 52			; 00000034H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 804  : {

  00038	89 bd f4 fe ff
	ff		 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0003e	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVectorMap$[ebp], 0
  00048	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVectorMap$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00052	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00057	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00059	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Pnode$18[ebp]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	89 b5 04 ff ff
	ff		 mov	 DWORD PTR __Pnode$18[ebp], esi
  00067	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006c	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Pnode$18[ebp]
  00072	50		 push	 eax
  00073	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0007c	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Pnode$18[ebp]
  00082	50		 push	 eax
  00083	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  0008c	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00092	89 b5 fc fe ff
	ff		 mov	 DWORD PTR _stTokenVectorMap$[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 807  : 	if (!LoadMultipleTextData(c_szFileName, stTokenVectorMap))

  00098	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  0009e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a5	50		 push	 eax
  000a6	57		 push	 edi
  000a7	e8 00 00 00 00	 call	 ?LoadMultipleTextData@@YA_NPBDAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@@Z ; LoadMultipleTextData
  000ac	83 c4 24	 add	 esp, 36			; 00000024H
  000af	84 c0		 test	 al, al
  000b1	75 0a		 jne	 SHORT $LN8@Load_LoadO

; 808  : 	{
; 809  : 		TraceError(" CArea::Load File Load %s ERROR", c_szFileName);

  000b3	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CA@NNOAMPKE@?5CArea?3?3Load?5File?5Load?5?$CFs?5ERROR@
  000b8	e9 f2 00 00 00	 jmp	 $LN35@Load_LoadO
$LN8@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000bd	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@DLGDDPHB@areadatafile@+8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  000c2	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000c8	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@DLGDDPHB@areadatafile@
  000d0	89 45 8c	 mov	 DWORD PTR $T28[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  000d3	8d 45 84	 lea	 eax, DWORD PTR $T28[ebp]
  000d6	50		 push	 eax
  000d7	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR __Loc$12[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000dd	c7 45 98 0f 00
	00 00		 mov	 DWORD PTR $T28[ebp+20], 15 ; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  000e4	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000e5	c7 45 94 0c 00
	00 00		 mov	 DWORD PTR $T28[ebp+16], 12 ; 0000000cH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000ec	66 0f d6 45 84	 movq	 QWORD PTR $T28[ebp], xmm0

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000f1	c6 45 90 00	 mov	 BYTE PTR $T28[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  000f5	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000fa	8b bd f0 fe ff
	ff		 mov	 edi, DWORD PTR __Loc$12[ebp+8]
  00100	8b b5 fc fe ff
	ff		 mov	 esi, DWORD PTR _stTokenVectorMap$[ebp]
  00106	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0010a	75 14		 jne	 SHORT $LN112@Load_LoadO
  0010c	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0010f	50		 push	 eax
  00110	8d 45 84	 lea	 eax, DWORD PTR $T28[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00119	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0011c	84 c0		 test	 al, al
  0011e	74 02		 je	 SHORT $LN111@Load_LoadO
$LN112@Load_LoadO:

; 1463 :         return _Get_scary()->_Myhead;

  00120	8b fe		 mov	 edi, esi
$LN111@Load_LoadO:

; 232  :         return this->_Ptr == _Right._Ptr;

  00122	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00124	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00129	0f 94 c0	 sete	 al
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 813  : 	if (stTokenVectorMap.end() == stTokenVectorMap.find("areadatafile"))

  0012c	84 c0		 test	 al, al
  0012e	74 07		 je	 SHORT $LN9@Load_LoadO

; 814  : 	{
; 815  : 		TraceError(" CArea::__LoadObject File Format %s ERROR 1", c_szFileName);
; 816  : 		return false;

  00130	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CM@CJHDNGEF@?5CArea?3?3__LoadObject?5File?5Forma@
  00135	eb 78		 jmp	 SHORT $LN35@Load_LoadO
$LN9@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00137	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@IANPHBDM@objectcount@+8
  0013d	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@IANPHBDM@objectcount@
  00145	66 89 45 8c	 mov	 WORD PTR $T27[ebp+8], ax
  00149	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@IANPHBDM@objectcount@+10
  0014e	88 45 8e	 mov	 BYTE PTR $T27[ebp+10], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00151	8d 45 84	 lea	 eax, DWORD PTR $T27[ebp]
  00154	50		 push	 eax
  00155	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR __Loc$11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0015b	89 4d 98	 mov	 DWORD PTR $T27[ebp+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0015e	50		 push	 eax
  0015f	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00165	c7 45 94 0b 00
	00 00		 mov	 DWORD PTR $T27[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0016c	66 0f d6 45 84	 movq	 QWORD PTR $T27[ebp], xmm0

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00171	c6 45 8f 00	 mov	 BYTE PTR $T27[ebp+11], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00175	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0017a	8b bd f0 fe ff
	ff		 mov	 edi, DWORD PTR __Loc$11[ebp+8]
  00180	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00184	75 14		 jne	 SHORT $LN195@Load_LoadO
  00186	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00189	50		 push	 eax
  0018a	8d 45 84	 lea	 eax, DWORD PTR $T27[ebp]
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00193	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00196	84 c0		 test	 al, al
  00198	74 02		 je	 SHORT $LN194@Load_LoadO
$LN195@Load_LoadO:

; 1463 :         return _Get_scary()->_Myhead;

  0019a	8b fe		 mov	 edi, esi
$LN194@Load_LoadO:

; 232  :         return this->_Ptr == _Right._Ptr;

  0019c	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019e	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  001a3	0f 94 c0	 sete	 al
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 819  : 	if (stTokenVectorMap.end() == stTokenVectorMap.find("objectcount"))

  001a6	84 c0		 test	 al, al
  001a8	74 20		 je	 SHORT $LN10@Load_LoadO

; 820  : 	{
; 821  : 		TraceError(" CArea::__LoadObject File Format %s ERROR 2", c_szFileName);
; 822  : 		return false;

  001aa	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CM@CFOIFIG@?5CArea?3?3__LoadObject?5File?5Forma@
$LN35@Load_LoadO:
  001af	ff b5 f4 fe ff
	ff		 push	 DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  001b5	50		 push	 eax
  001b6	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  001bb	83 c4 08	 add	 esp, 8
  001be	c6 85 0b ff ff
	ff 00		 mov	 BYTE PTR $T19[ebp], 0
  001c5	e9 59 0a 00 00	 jmp	 $LN36@Load_LoadO
$LN10@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001ca	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@IANPHBDM@objectcount@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001d0	8b f9		 mov	 edi, ecx

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001d2	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@IANPHBDM@objectcount@
  001da	66 89 45 a4	 mov	 WORD PTR $T30[ebp+8], ax
  001de	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@IANPHBDM@objectcount@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001e3	89 7d b0	 mov	 DWORD PTR $T30[ebp+20], edi

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  001e6	c7 45 ac 0b 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001ed	66 0f d6 45 9c	 movq	 QWORD PTR $T30[ebp], xmm0
  001f2	88 45 a6	 mov	 BYTE PTR $T30[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  001f5	c6 45 a7 00	 mov	 BYTE PTR $T30[ebp+11], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  001f9	8d 45 9c	 lea	 eax, DWORD PTR $T30[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 825  : 	const std::string & c_rstrCount = stTokenVectorMap["objectcount"][0];

  001fc	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00200	50		 push	 eax
  00201	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR __Loc$10[ebp]
  00207	50		 push	 eax
  00208	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  0020e	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00213	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR __Loc$10[ebp+8]
  00219	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0021d	75 1f		 jne	 SHORT $LN278@Load_LoadO
  0021f	83 c0 10	 add	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00222	50		 push	 eax
  00223	8d 45 9c	 lea	 eax, DWORD PTR $T30[ebp]
  00226	50		 push	 eax
  00227	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0022c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0022f	84 c0		 test	 al, al
  00231	75 0b		 jne	 SHORT $LN278@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 178  :             return {_Loc._Bound, false};

  00233	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR __Loc$10[ebp+8]
  00239	e9 a2 00 00 00	 jmp	 $LN277@Load_LoadO
$LN278@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0023e	81 bd 00 ff ff
	ff c4 4e ec 04	 cmp	 DWORD PTR _stTokenVectorMap$[ebp+4], 82595524 ; 04ec4ec4H
  00248	0f 84 24 0a 00
	00		 je	 $LN970@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0024e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00254	89 b5 04 ff ff
	ff		 mov	 DWORD PTR __Myhead$17[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0025a	89 85 d8 fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00260	6a 34		 push	 52			; 00000034H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00262	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00266	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00270	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00275	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  00277	8d 45 9c	 lea	 eax, DWORD PTR $T30[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0027a	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0027d	51		 push	 ecx
  0027e	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  00280	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00282	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  00289	52		 push	 edx
  0028a	e8 00 00 00 00	 call	 ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0028f	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$17[ebp]
  00295	50		 push	 eax
  00296	56		 push	 esi
  00297	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0029c	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$17[ebp]
  002a2	50		 push	 eax
  002a3	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  002ac	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$17[ebp]
  002b2	50		 push	 eax
  002b3	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  002b6	50		 push	 eax
  002b7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
  002bc	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  002bf	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  002c5	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  002cb	56		 push	 esi
  002cc	ff b5 ec fe ff
	ff		 push	 DWORD PTR __Loc$10[ebp+4]
  002d2	ff b5 e8 fe ff
	ff		 push	 DWORD PTR __Loc$10[ebp]
  002d8	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
  002dd	8b 7d b0	 mov	 edi, DWORD PTR $T30[ebp+20]
$LN277@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  002e0	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 825  : 	const std::string & c_rstrCount = stTokenVectorMap["objectcount"][0];

  002e3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002e7	83 ff 10	 cmp	 edi, 16			; 00000010H
  002ea	72 0f		 jb	 SHORT $LN354@Load_LoadO

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002ec	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002ef	50		 push	 eax
  002f0	ff 75 9c	 push	 DWORD PTR $T30[ebp]
  002f3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002f8	83 c4 08	 add	 esp, 8
$LN354@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  002fb	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00302	c7 45 b0 0f 00
	00 00		 mov	 DWORD PTR $T30[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00309	c6 45 9c 00	 mov	 BYTE PTR $T30[ebp], 0

; 2145 :         if (_Large_string_engaged()) {

  0030d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00311	72 02		 jb	 SHORT $LN363@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00313	8b 36		 mov	 esi, DWORD PTR [esi]
$LN363@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 827  : 	DWORD dwCount = atoi(c_rstrCount.c_str());

  00315	56		 push	 esi
  00316	e8 00 00 00 00	 call	 __atoi64
  0031b	8b c8		 mov	 ecx, eax
  0031d	83 c4 04	 add	 esp, 4

; 831  : 	for (DWORD i = 0; i < dwCount; ++i)

  00320	33 c0		 xor	 eax, eax
  00322	89 8d d0 fe ff
	ff		 mov	 DWORD PTR _dwCount$1$[ebp], ecx
  00328	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  0032e	85 c9		 test	 ecx, ecx
  00330	0f 84 e6 08 00
	00		 je	 $LN997@Load_LoadO
$LL4@Load_LoadO:

; 833  : 		_snprintf(szObjectName, sizeof(szObjectName), "object%03d", i);

  00336	50		 push	 eax
  00337	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CHFLOJFF@object?$CF03d@
  0033c	8d 45 cc	 lea	 eax, DWORD PTR _szObjectName$[ebp]
  0033f	6a 21		 push	 33			; 00000021H
  00341	50		 push	 eax
  00342	e8 00 00 00 00	 call	 __snprintf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00347	8d 4d cc	 lea	 ecx, DWORD PTR _szObjectName$[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0034a	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T25[ebp+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 833  : 		_snprintf(szObjectName, sizeof(szObjectName), "object%03d", i);

  00354	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00357	c7 45 80 0f 00
	00 00		 mov	 DWORD PTR $T25[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0035e	c6 85 6c ff ff
	ff 00		 mov	 BYTE PTR $T25[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00365	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL990@Load_LoadO:
  00368	8a 01		 mov	 al, BYTE PTR [ecx]
  0036a	41		 inc	 ecx
  0036b	84 c0		 test	 al, al
  0036d	75 f9		 jne	 SHORT $LL990@Load_LoadO
  0036f	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00371	8d 45 cc	 lea	 eax, DWORD PTR _szObjectName$[ebp]
  00374	51		 push	 ecx
  00375	50		 push	 eax
  00376	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T25[ebp]
  0037c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00381	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T25[ebp]
  00387	50		 push	 eax
  00388	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR __Loc$4[ebp]
  0038e	50		 push	 eax
  0038f	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00395	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0039a	8b b5 c8 fe ff
	ff		 mov	 esi, DWORD PTR __Loc$4[ebp+8]
  003a0	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  003a4	75 17		 jne	 SHORT $LN382@Load_LoadO
  003a6	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  003a9	50		 push	 eax
  003aa	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T25[ebp]
  003b0	50		 push	 eax
  003b1	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  003b6	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  003b9	84 c0		 test	 al, al
  003bb	74 06		 je	 SHORT $LN381@Load_LoadO
$LN382@Load_LoadO:

; 1463 :         return _Get_scary()->_Myhead;

  003bd	8b b5 fc fe ff
	ff		 mov	 esi, DWORD PTR _stTokenVectorMap$[ebp]
$LN381@Load_LoadO:

; 232  :         return this->_Ptr == _Right._Ptr;

  003c3	39 b5 fc fe ff
	ff		 cmp	 DWORD PTR _stTokenVectorMap$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003c9	8b 45 80	 mov	 eax, DWORD PTR $T25[ebp+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  003cc	0f 94 85 0b ff
	ff ff		 sete	 BYTE PTR $T20[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003d3	83 f8 10	 cmp	 eax, 16			; 00000010H
  003d6	72 10		 jb	 SHORT $LN410@Load_LoadO

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003d8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003d9	50		 push	 eax
  003da	ff b5 6c ff ff
	ff		 push	 DWORD PTR $T25[ebp]
  003e0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003e5	83 c4 08	 add	 esp, 8
$LN410@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 835  : 		if (stTokenVectorMap.end() == stTokenVectorMap.find(szObjectName))

  003e8	80 bd 0b ff ff
	ff 00		 cmp	 BYTE PTR $T20[ebp], 0
  003ef	0f 85 0e 08 00
	00		 jne	 $LN2@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  003f5	8d 4d cc	 lea	 ecx, DWORD PTR _szObjectName$[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  003f8	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T24[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00402	c7 45 80 0f 00
	00 00		 mov	 DWORD PTR $T24[ebp+20], 15 ; 0000000fH

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00409	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0040c	c6 85 6c ff ff
	ff 00		 mov	 BYTE PTR $T24[ebp], 0
$LL991@Load_LoadO:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00413	8a 01		 mov	 al, BYTE PTR [ecx]
  00415	41		 inc	 ecx
  00416	84 c0		 test	 al, al
  00418	75 f9		 jne	 SHORT $LL991@Load_LoadO
  0041a	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0041c	8d 45 cc	 lea	 eax, DWORD PTR _szObjectName$[ebp]
  0041f	51		 push	 ecx
  00420	50		 push	 eax
  00421	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T24[ebp]
  00427	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0042c	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T24[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 838  : 		const CTokenVector & rVector = stTokenVectorMap[szObjectName];

  00432	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00436	50		 push	 eax
  00437	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR __Loc$9[ebp]
  0043d	50		 push	 eax
  0043e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00444	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00449	8b bd f0 fe ff
	ff		 mov	 edi, DWORD PTR __Loc$9[ebp+8]
  0044f	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00453	75 1b		 jne	 SHORT $LN431@Load_LoadO
  00455	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00458	50		 push	 eax
  00459	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T24[ebp]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00465	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00468	84 c0		 test	 al, al
  0046a	0f 84 b4 00 00
	00		 je	 $LN430@Load_LoadO
$LN431@Load_LoadO:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00470	81 bd 00 ff ff
	ff c4 4e ec 04	 cmp	 DWORD PTR _stTokenVectorMap$[ebp+4], 82595524 ; 04ec4ec4H
  0047a	0f 84 f2 07 00
	00		 je	 $LN970@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00480	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  00486	89 85 04 ff ff
	ff		 mov	 DWORD PTR __Myhead$16[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0048c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  00492	89 85 d8 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00498	6a 34		 push	 52			; 00000034H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0049a	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0049e	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  004a8	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  004ad	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  004af	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T24[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  004b5	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  004b8	51		 push	 ecx
  004b9	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

  004bb	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  004bd	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  004c4	52		 push	 edx
  004c5	e8 00 00 00 00	 call	 ??$?0$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  004ca	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$16[ebp]
  004d0	50		 push	 eax
  004d1	56		 push	 esi
  004d2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  004d7	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$16[ebp]
  004dd	50		 push	 eax
  004de	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  004e1	50		 push	 eax
  004e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  004e7	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$16[ebp]
  004ed	50		 push	 eax
  004ee	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
  004f7	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  004fa	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00500	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00506	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00510	56		 push	 esi
  00511	ff b5 ec fe ff
	ff		 push	 DWORD PTR __Loc$9[ebp+4]
  00517	ff b5 e8 fe ff
	ff		 push	 DWORD PTR __Loc$9[ebp]
  0051d	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
  00522	8b f8		 mov	 edi, eax
$LN430@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00524	8b 45 80	 mov	 eax, DWORD PTR $T24[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 838  : 		const CTokenVector & rVector = stTokenVectorMap[szObjectName];

  00527	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0052b	83 f8 10	 cmp	 eax, 16			; 00000010H
  0052e	72 10		 jb	 SHORT $LN505@Load_LoadO

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00530	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00531	50		 push	 eax
  00532	ff b5 6c ff ff
	ff		 push	 DWORD PTR $T24[ebp]
  00538	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0053d	83 c4 08	 add	 esp, 8
$LN505@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00540	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T24[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0054a	c7 45 80 0f 00
	00 00		 mov	 DWORD PTR $T24[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00551	c6 85 6c ff ff
	ff 00		 mov	 BYTE PTR $T24[ebp], 0

; 3668 :         return _Mypair._Myval2._Myptr();

  00558	8b 57 28	 mov	 edx, DWORD PTR [edi+40]

; 2145 :         if (_Large_string_engaged()) {

  0055b	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  0055f	72 02		 jb	 SHORT $LN516@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00561	8b 12		 mov	 edx, DWORD PTR [edx]
$LN516@Load_LoadO:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00563	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00565	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _$S13$26[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0056c	c7 45 98 0f 00
	00 00		 mov	 DWORD PTR _$S13$26[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00573	c6 45 84 00	 mov	 BYTE PTR _$S13$26[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00577	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0057a	66 0f 1f 44 00
	00		 npad	 6
$LL992@Load_LoadO:
  00580	8a 01		 mov	 al, BYTE PTR [ecx]
  00582	41		 inc	 ecx
  00583	84 c0		 test	 al, al
  00585	75 f9		 jne	 SHORT $LL992@Load_LoadO
  00587	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00589	51		 push	 ecx
  0058a	52		 push	 edx
  0058b	8d 4d 84	 lea	 ecx, DWORD PTR _$S13$26[ebp]
  0058e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00593	8b 57 28	 mov	 edx, DWORD PTR [edi+40]
  00596	83 c2 18	 add	 edx, 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 840  : 		const std::string & c_rstrxPosition = rVector[0].c_str();

  00599	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0059d	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  005a1	72 02		 jb	 SHORT $LN537@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  005a3	8b 12		 mov	 edx, DWORD PTR [edx]
$LN537@Load_LoadO:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  005a5	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  005a7	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _$S14$29[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005ae	c7 45 b0 0f 00
	00 00		 mov	 DWORD PTR _$S14$29[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005b5	c6 45 9c 00	 mov	 BYTE PTR _$S14$29[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  005b9	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  005bc	0f 1f 40 00	 npad	 4
$LL993@Load_LoadO:
  005c0	8a 01		 mov	 al, BYTE PTR [ecx]
  005c2	41		 inc	 ecx
  005c3	84 c0		 test	 al, al
  005c5	75 f9		 jne	 SHORT $LL993@Load_LoadO
  005c7	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  005c9	51		 push	 ecx
  005ca	52		 push	 edx
  005cb	8d 4d 9c	 lea	 ecx, DWORD PTR _$S14$29[ebp]
  005ce	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  005d3	8b 57 28	 mov	 edx, DWORD PTR [edi+40]
  005d6	83 c2 30	 add	 edx, 48			; 00000030H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 841  : 		const std::string & c_rstryPosition = rVector[1].c_str();

  005d9	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  005dd	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  005e1	72 02		 jb	 SHORT $LN558@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  005e3	8b 12		 mov	 edx, DWORD PTR [edx]
$LN558@Load_LoadO:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  005e5	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  005e7	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S15$22[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005f1	c7 85 50 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S15$22[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005fb	c6 85 3c ff ff
	ff 00		 mov	 BYTE PTR _$S15$22[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00602	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL994@Load_LoadO:
  00605	8a 01		 mov	 al, BYTE PTR [ecx]
  00607	41		 inc	 ecx
  00608	84 c0		 test	 al, al
  0060a	75 f9		 jne	 SHORT $LL994@Load_LoadO
  0060c	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0060e	51		 push	 ecx
  0060f	52		 push	 edx
  00610	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _$S15$22[ebp]
  00616	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  0061b	8b 57 28	 mov	 edx, DWORD PTR [edi+40]
  0061e	83 c2 48	 add	 edx, 72			; 00000048H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 842  : 		const std::string & c_rstrzPosition = rVector[2].c_str();

  00621	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00625	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H
  00629	72 02		 jb	 SHORT $LN579@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0062b	8b 12		 mov	 edx, DWORD PTR [edx]
$LN579@Load_LoadO:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0062d	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0062f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S16$23[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00639	c7 85 68 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S16$23[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00643	c6 85 54 ff ff
	ff 00		 mov	 BYTE PTR _$S16$23[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0064a	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0064d	0f 1f 00	 npad	 3
$LL995@Load_LoadO:
  00650	8a 01		 mov	 al, BYTE PTR [ecx]
  00652	41		 inc	 ecx
  00653	84 c0		 test	 al, al
  00655	75 f9		 jne	 SHORT $LL995@Load_LoadO
  00657	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00659	51		 push	 ecx
  0065a	52		 push	 edx
  0065b	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _$S16$23[ebp]
  00661	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2145 :         if (_Large_string_engaged()) {

  00666	83 7d 98 10	 cmp	 DWORD PTR _$S13$26[ebp+20], 16 ; 00000010H
  0066a	8d 45 84	 lea	 eax, DWORD PTR _$S13$26[ebp]
  0066d	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 843  : 		const std::string & c_rstrCRC = rVector[3].c_str();

  00670	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00674	0f 43 45 84	 cmovae	 eax, DWORD PTR _$S13$26[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 847  : 		ObjectData.Position.x = atof(c_rstrxPosition.c_str());

  00678	50		 push	 eax
  00679	66 0f 13 85 1c
	ff ff ff	 movlpd	 QWORD PTR _ObjectData$21[ebp+16], xmm0
  00681	66 0f 13 85 24
	ff ff ff	 movlpd	 QWORD PTR _ObjectData$21[ebp+24], xmm0
  00689	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$21[ebp+32], 0
  00693	66 0f 13 85 34
	ff ff ff	 movlpd	 QWORD PTR _ObjectData$21[ebp+40], xmm0
  0069b	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006a0	83 7d b0 10	 cmp	 DWORD PTR _$S14$29[ebp+20], 16 ; 00000010H
  006a4	8d 45 9c	 lea	 eax, DWORD PTR _$S14$29[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 847  : 		ObjectData.Position.x = atof(c_rstrxPosition.c_str());

  006a7	d9 9d 0c ff ff
	ff		 fstp	 DWORD PTR _ObjectData$21[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006ad	0f 43 45 9c	 cmovae	 eax, DWORD PTR _$S14$29[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 848  : 		ObjectData.Position.y = atof(c_rstryPosition.c_str());

  006b1	50		 push	 eax
  006b2	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006b7	83 bd 50 ff ff
	ff 10		 cmp	 DWORD PTR _$S15$22[ebp+20], 16 ; 00000010H
  006be	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _$S15$22[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 848  : 		ObjectData.Position.y = atof(c_rstryPosition.c_str());

  006c4	d9 9d 10 ff ff
	ff		 fstp	 DWORD PTR _ObjectData$21[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006ca	0f 43 85 3c ff
	ff ff		 cmovae	 eax, DWORD PTR _$S15$22[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 849  : 		ObjectData.Position.z = atof(c_rstrzPosition.c_str());

  006d1	50		 push	 eax
  006d2	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006d7	83 bd 68 ff ff
	ff 10		 cmp	 DWORD PTR _$S16$23[ebp+20], 16 ; 00000010H
  006de	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _$S16$23[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 849  : 		ObjectData.Position.z = atof(c_rstrzPosition.c_str());

  006e4	d9 9d 14 ff ff
	ff		 fstp	 DWORD PTR _ObjectData$21[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  006ea	0f 43 85 54 ff
	ff ff		 cmovae	 eax, DWORD PTR _$S16$23[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 850  : 		ObjectData.dwCRC = atoi	(c_rstrCRC.c_str());

  006f1	50		 push	 eax
  006f2	e8 00 00 00 00	 call	 __atoi64
  006f7	83 c4 10	 add	 esp, 16			; 00000010H
  006fa	89 85 18 ff ff
	ff		 mov	 DWORD PTR _ObjectData$21[ebp+12], eax

; 851  : 
; 852  : 		ObjectData.InitializeRotation(); //ObjectData.m_fYaw = ObjectData.m_fPitch = ObjectData.m_fRoll = 0;

  00700	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR _ObjectData$21[ebp]
  00706	e8 00 00 00 00	 call	 ?InitializeRotation@SObjectData@CArea@@QAEXXZ ; CArea::SObjectData::InitializeRotation
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0070b	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  0070e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00713	8b 77 28	 mov	 esi, DWORD PTR [edi+40]
  00716	2b ce		 sub	 ecx, esi
  00718	f7 e9		 imul	 ecx
  0071a	c1 fa 02	 sar	 edx, 2
  0071d	8b c2		 mov	 eax, edx
  0071f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00722	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 853  : 		if (rVector.size() > 4)

  00724	83 f8 04	 cmp	 eax, 4
  00727	0f 86 f7 02 00
	00		 jbe	 $LN14@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  0072d	83 c6 60	 add	 esi, 96			; 00000060H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00730	8b ce		 mov	 ecx, esi
  00732	89 b5 04 ff ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], esi

; 2145 :         if (_Large_string_engaged()) {

  00738	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0073c	72 08		 jb	 SHORT $LN985@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0073e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00740	89 8d 04 ff ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], ecx
$LN985@Load_LoadO:

; 3887 :         return static_cast<size_type>(

  00746	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 566  :     if (_Start_at < _Hay_size) {

  00749	85 c0		 test	 eax, eax
  0074b	74 18		 je	 SHORT $LN988@Load_LoadO

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  0074d	50		 push	 eax
  0074e	6a 23		 push	 35			; 00000023H
  00750	51		 push	 ecx
  00751	e8 00 00 00 00	 call	 _memchr
  00756	83 c4 0c	 add	 esp, 12			; 0000000cH

; 568  :         if (_Found_at) {

  00759	85 c0		 test	 eax, eax
  0075b	74 08		 je	 SHORT $LN988@Load_LoadO

; 569  :             return static_cast<size_t>(_Found_at - _Haystack);

  0075d	2b 85 04 ff ff
	ff		 sub	 eax, DWORD PTR __Result$1$[ebp]
  00763	eb 03		 jmp	 SHORT $LN1003@Load_LoadO
$LN988@Load_LoadO:

; 570  :         }
; 571  :     }
; 572  : 
; 573  :     return static_cast<size_t>(-1); // (npos) no match

  00765	83 c8 ff	 or	 eax, -1
$LN1003@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 856  : 			if (s!=rVector[4].npos)

  00768	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T15[ebp], eax
  0076e	83 f8 ff	 cmp	 eax, -1
  00771	0f 84 75 02 00
	00		 je	 $LN13@Load_LoadO

; 858  : 				ObjectData.m_fYaw = atoi(rVector[4].substr(0,s-1).c_str());

  00777	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0077a	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  00781	39 4e 10	 cmp	 DWORD PTR [esi+16], ecx

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00784	c7 45 c8 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  0078b	0f 42 4e 10	 cmovb	 ecx, DWORD PTR [esi+16]

; 2145 :         if (_Large_string_engaged()) {

  0078f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00793	c6 45 b4 00	 mov	 BYTE PTR $T33[ebp], 0

; 2145 :         if (_Large_string_engaged()) {

  00797	72 02		 jb	 SHORT $LN667@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00799	8b 36		 mov	 esi, DWORD PTR [esi]
$LN667@Load_LoadO:

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0079b	51		 push	 ecx
  0079c	56		 push	 esi
  0079d	8d 4d b4	 lea	 ecx, DWORD PTR $T33[ebp]
  007a0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2145 :         if (_Large_string_engaged()) {

  007a5	83 7d c8 10	 cmp	 DWORD PTR $T33[ebp+20], 16 ; 00000010H
  007a9	8d 45 b4	 lea	 eax, DWORD PTR $T33[ebp]
  007ac	0f 43 45 b4	 cmovae	 eax, DWORD PTR $T33[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 858  : 				ObjectData.m_fYaw = atoi(rVector[4].substr(0,s-1).c_str());

  007b0	50		 push	 eax
  007b1	e8 00 00 00 00	 call	 __atoi64
  007b6	83 c4 04	 add	 esp, 4
  007b9	8b c8		 mov	 ecx, eax
  007bb	e8 00 00 00 00	 call	 __ltod3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007c0	8b 45 c8	 mov	 eax, DWORD PTR $T33[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 858  : 				ObjectData.m_fYaw = atoi(rVector[4].substr(0,s-1).c_str());

  007c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007c7	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _ObjectData$21[ebp+24], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007cf	83 f8 10	 cmp	 eax, 16			; 00000010H
  007d2	72 0d		 jb	 SHORT $LN684@Load_LoadO

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  007d4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007d5	50		 push	 eax
  007d6	ff 75 b4	 push	 DWORD PTR $T33[ebp]
  007d9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  007de	83 c4 08	 add	 esp, 8
$LN684@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  007e1	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 859  : 				int p = s+1;

  007e4	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T15[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  007ea	83 c0 60	 add	 eax, 96			; 00000060H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 859  : 				int p = s+1;

  007ed	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  007ee	89 85 f8 fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 859  : 				int p = s+1;

  007f4	89 8d e4 fe ff
	ff		 mov	 DWORD PTR _p$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  007fa	8b d0		 mov	 edx, eax
  007fc	89 85 04 ff ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00802	8b 70 14	 mov	 esi, DWORD PTR [eax+20]
  00805	89 b5 e0 fe ff
	ff		 mov	 DWORD PTR tv5467[ebp], esi

; 2145 :         if (_Large_string_engaged()) {

  0080b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0080e	72 08		 jb	 SHORT $LN986@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00810	8b 10		 mov	 edx, DWORD PTR [eax]
  00812	89 95 04 ff ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], edx
$LN986@Load_LoadO:

; 3887 :         return static_cast<size_type>(

  00818	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 566  :     if (_Start_at < _Hay_size) {

  0081b	3b ce		 cmp	 ecx, esi
  0081d	73 1f		 jae	 SHORT $LN987@Load_LoadO

; 567  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);

  0081f	8b c6		 mov	 eax, esi
  00821	2b c1		 sub	 eax, ecx

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  00823	50		 push	 eax

; 567  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);

  00824	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  00827	6a 23		 push	 35			; 00000023H
  00829	50		 push	 eax
  0082a	e8 00 00 00 00	 call	 _memchr
  0082f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 568  :         if (_Found_at) {

  00832	85 c0		 test	 eax, eax
  00834	74 08		 je	 SHORT $LN987@Load_LoadO

; 569  :             return static_cast<size_t>(_Found_at - _Haystack);

  00836	2b 85 04 ff ff
	ff		 sub	 eax, DWORD PTR __Result$1$[ebp]
  0083c	eb 03		 jmp	 SHORT $LN1004@Load_LoadO
$LN987@Load_LoadO:

; 570  :         }
; 571  :     }
; 572  : 
; 573  :     return static_cast<size_t>(-1); // (npos) no match

  0083e	83 c8 ff	 or	 eax, -1
$LN1004@Load_LoadO:

; 2157 :         if (_Mysize < _Off) {

  00841	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _p$1$[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00847	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  0084d	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00854	c7 45 c8 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0085b	c6 45 b4 00	 mov	 BYTE PTR $T32[ebp], 0

; 2157 :         if (_Mysize < _Off) {

  0085f	3b f1		 cmp	 esi, ecx
  00861	0f 82 06 04 00
	00		 jb	 $LN973@Load_LoadO
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 861  : 				ObjectData.m_fPitch = atoi(rVector[4].substr(p,s-1-p+1).c_str());

  00867	8b d0		 mov	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  00869	2b f1		 sub	 esi, ecx

; 2145 :         if (_Large_string_engaged()) {

  0086b	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 861  : 				ObjectData.m_fPitch = atoi(rVector[4].substr(p,s-1-p+1).c_str());

  00871	2b d1		 sub	 edx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  00873	3b f2		 cmp	 esi, edx
  00875	0f 42 d6	 cmovb	 edx, esi

; 2145 :         if (_Large_string_engaged()) {

  00878	83 bd e0 fe ff
	ff 10		 cmp	 DWORD PTR tv5467[ebp], 16 ; 00000010H
  0087f	72 02		 jb	 SHORT $LN730@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00881	8b 00		 mov	 eax, DWORD PTR [eax]
$LN730@Load_LoadO:

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00883	03 c1		 add	 eax, ecx
  00885	8d 4d b4	 lea	 ecx, DWORD PTR $T32[ebp]
  00888	52		 push	 edx
  00889	50		 push	 eax
  0088a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2145 :         if (_Large_string_engaged()) {

  0088f	83 7d c8 10	 cmp	 DWORD PTR $T32[ebp+20], 16 ; 00000010H
  00893	8d 45 b4	 lea	 eax, DWORD PTR $T32[ebp]
  00896	0f 43 45 b4	 cmovae	 eax, DWORD PTR $T32[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 861  : 				ObjectData.m_fPitch = atoi(rVector[4].substr(p,s-1-p+1).c_str());

  0089a	50		 push	 eax
  0089b	e8 00 00 00 00	 call	 __atoi64
  008a0	83 c4 04	 add	 esp, 4
  008a3	8b c8		 mov	 ecx, eax
  008a5	e8 00 00 00 00	 call	 __ltod3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008aa	8b 45 c8	 mov	 eax, DWORD PTR $T32[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 861  : 				ObjectData.m_fPitch = atoi(rVector[4].substr(p,s-1-p+1).c_str());

  008ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008b1	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _ObjectData$21[ebp+28], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008b9	83 f8 10	 cmp	 eax, 16			; 00000010H
  008bc	72 0d		 jb	 SHORT $LN747@Load_LoadO

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  008be	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  008bf	50		 push	 eax
  008c0	ff 75 b4	 push	 DWORD PTR $T32[ebp]
  008c3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  008c8	83 c4 08	 add	 esp, 8
$LN747@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  008cb	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 862  : 				ObjectData.m_fRoll = atoi(rVector[4].substr(s+1).c_str());

  008ce	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR $T14[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  008d4	83 c0 60	 add	 eax, 96			; 00000060H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 862  : 				ObjectData.m_fRoll = atoi(rVector[4].substr(s+1).c_str());

  008d7	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  008d8	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  008df	c7 45 c8 0f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  008e6	c6 45 b4 00	 mov	 BYTE PTR $T31[ebp], 0

; 2157 :         if (_Mysize < _Off) {

  008ea	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  008ed	3b ca		 cmp	 ecx, edx
  008ef	0f 82 78 03 00
	00		 jb	 $LN973@Load_LoadO

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  008f5	2b ca		 sub	 ecx, edx
  008f7	83 ce ff	 or	 esi, -1
  008fa	83 f9 ff	 cmp	 ecx, -1
  008fd	0f 42 f1	 cmovb	 esi, ecx

; 2145 :         if (_Large_string_engaged()) {

  00900	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2174 :         return (_STD min)(_Size, _Mysize - _Off);

  00904	89 b5 04 ff ff
	ff		 mov	 DWORD PTR __Count$1$[ebp], esi

; 2145 :         if (_Large_string_engaged()) {

  0090a	72 02		 jb	 SHORT $LN778@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0090c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN778@Load_LoadO:

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0090e	03 c2		 add	 eax, edx
  00910	89 85 e0 fe ff
	ff		 mov	 DWORD PTR __Ptr$1$[ebp], eax
  00916	83 fe 0f	 cmp	 esi, 15			; 0000000fH

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00919	77 18		 ja	 SHORT $LN783@Load_LoadO

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0091b	56		 push	 esi
  0091c	50		 push	 eax
  0091d	8d 45 b4	 lea	 eax, DWORD PTR $T31[ebp]

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00920	89 75 c4	 mov	 DWORD PTR $T31[ebp+16], esi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00923	50		 push	 eax
  00924	e8 00 00 00 00	 call	 _memmove
  00929	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0092c	c6 44 35 b4 00	 mov	 BYTE PTR $T31[ebp+esi], 0

; 2971 :             return *this;

  00931	eb 7b		 jmp	 SHORT $LN795@Load_LoadO
$LN783@Load_LoadO:

; 4221 :         if (_New_size > max_size()) {

  00933	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00939	0f 87 38 03 00
	00		 ja	 $LN974@Load_LoadO

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0093f	8b c6		 mov	 eax, esi
  00941	83 c8 0f	 or	 eax, 15			; 0000000fH
  00944	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00949	76 07		 jbe	 SHORT $LN800@Load_LoadO

; 4203 :             return _Max;

  0094b	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00950	eb 0b		 jmp	 SHORT $LN1005@Load_LoadO
$LN800@Load_LoadO:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4207 :             return _Max;
; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00952	83 f8 16	 cmp	 eax, 22			; 00000016H
  00955	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  0095a	0f 42 c1	 cmovb	 eax, ecx
$LN1005@Load_LoadO:

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0095d	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  00963	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00964	50		 push	 eax
  00965	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0096a	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T13[ebp]
  00970	8b f0		 mov	 esi, eax
  00972	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR __Count$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00978	50		 push	 eax
  00979	ff b5 e0 fe ff
	ff		 push	 DWORD PTR __Ptr$1$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0097f	89 b5 e4 fe ff
	ff		 mov	 DWORD PTR __New_ptr$8[ebp], esi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00985	56		 push	 esi

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00986	89 45 c4	 mov	 DWORD PTR $T31[ebp+16], eax

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00989	89 4d c8	 mov	 DWORD PTR $T31[ebp+20], ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0098c	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00991	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR __Count$1$[ebp]
  00997	c6 04 06 00	 mov	 BYTE PTR [esi+eax], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0099b	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$8[ebp]
  009a1	50		 push	 eax
  009a2	8d 45 b4	 lea	 eax, DWORD PTR $T31[ebp]
  009a5	50		 push	 eax
  009a6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  009ab	83 c4 18	 add	 esp, 24			; 00000018H
$LN795@Load_LoadO:

; 2145 :         if (_Large_string_engaged()) {

  009ae	83 7d c8 10	 cmp	 DWORD PTR $T31[ebp+20], 16 ; 00000010H
  009b2	8d 45 b4	 lea	 eax, DWORD PTR $T31[ebp]
  009b5	0f 43 45 b4	 cmovae	 eax, DWORD PTR $T31[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 862  : 				ObjectData.m_fRoll = atoi(rVector[4].substr(s+1).c_str());

  009b9	50		 push	 eax
  009ba	e8 00 00 00 00	 call	 __atoi64
  009bf	83 c4 04	 add	 esp, 4
  009c2	8b c8		 mov	 ecx, eax
  009c4	e8 00 00 00 00	 call	 __ltod3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009c9	8b 45 c8	 mov	 eax, DWORD PTR $T31[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 862  : 				ObjectData.m_fRoll = atoi(rVector[4].substr(s+1).c_str());

  009cc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009d0	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _ObjectData$21[ebp+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009d8	83 f8 10	 cmp	 eax, 16			; 00000010H
  009db	72 47		 jb	 SHORT $LN14@Load_LoadO

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  009dd	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009de	50		 push	 eax
  009df	ff 75 b4	 push	 DWORD PTR $T31[ebp]
  009e2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  009e7	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 863  : 			}

  009ea	eb 38		 jmp	 SHORT $LN14@Load_LoadO
$LN13@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  009ec	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 866  : 				ObjectData.m_fYaw = 0.0f;

  009f0	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$21[ebp+24], 0

; 867  : 				ObjectData.m_fPitch = 0.0f;

  009fa	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$21[ebp+28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00a04	72 02		 jb	 SHORT $LN838@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00a06	8b 36		 mov	 esi, DWORD PTR [esi]
$LN838@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 868  : 				ObjectData.m_fRoll = atoi(rVector[4].c_str());

  00a08	56		 push	 esi
  00a09	e8 00 00 00 00	 call	 __atoi64
  00a0e	83 c4 04	 add	 esp, 4
  00a11	8b c8		 mov	 ecx, eax
  00a13	e8 00 00 00 00	 call	 __ltod3
  00a18	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a1c	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _ObjectData$21[ebp+32], xmm0
$LN14@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00a24	8b 77 2c	 mov	 esi, DWORD PTR [edi+44]
  00a27	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00a2c	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 872  : 		ObjectData.m_fHeightBias = 0.0f;

  00a2e	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ObjectData$21[ebp+36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00a38	2b 4f 28	 sub	 ecx, DWORD PTR [edi+40]
  00a3b	f7 e9		 imul	 ecx
  00a3d	c1 fa 02	 sar	 edx, 2
  00a40	8b c2		 mov	 eax, edx
  00a42	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00a45	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 873  : 		if (rVector.size() > 5)

  00a47	83 f8 05	 cmp	 eax, 5
  00a4a	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00a4d	76 20		 jbe	 SHORT $LN15@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00a4f	83 c0 78	 add	 eax, 120		; 00000078H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00a52	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00a56	72 02		 jb	 SHORT $LN849@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00a58	8b 00		 mov	 eax, DWORD PTR [eax]
$LN849@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 875  : 			ObjectData.m_fHeightBias = atof(rVector[5].c_str());

  00a5a	50		 push	 eax
  00a5b	e8 00 00 00 00	 call	 _atof
  00a60	8b 77 2c	 mov	 esi, DWORD PTR [edi+44]
  00a63	83 c4 04	 add	 esp, 4
  00a66	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00a69	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _ObjectData$21[ebp+36]
$LN15@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00a6f	2b f0		 sub	 esi, eax
  00a71	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00a76	f7 ee		 imul	 esi
  00a78	c1 fa 02	 sar	 edx, 2
  00a7b	8b c2		 mov	 eax, edx
  00a7d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00a80	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 878  : 		if (rVector.size() > 6)

  00a82	83 f8 06	 cmp	 eax, 6
  00a85	76 5f		 jbe	 SHORT $LN998@Load_LoadO

; 880  : 			for (int portalIdx = 0; portalIdx < min(rVector.size()-6, PORTAL_ID_MAX_NUM); ++portalIdx)

  00a87	33 f6		 xor	 esi, esi
  00a89	c7 85 04 ff ff
	ff 90 00 00 00	 mov	 DWORD PTR tv5430[ebp], 144 ; 00000090H
$LL7@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00a93	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  00a96	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00a9b	2b 4f 28	 sub	 ecx, DWORD PTR [edi+40]
  00a9e	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 880  : 			for (int portalIdx = 0; portalIdx < min(rVector.size()-6, PORTAL_ID_MAX_NUM); ++portalIdx)

  00aa0	b9 08 00 00 00	 mov	 ecx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00aa5	c1 fa 02	 sar	 edx, 2
  00aa8	8b c2		 mov	 eax, edx
  00aaa	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00aad	83 c0 fa	 add	 eax, -6			; fffffffaH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 880  : 			for (int portalIdx = 0; portalIdx < min(rVector.size()-6, PORTAL_ID_MAX_NUM); ++portalIdx)

  00ab0	03 c2		 add	 eax, edx
  00ab2	3b c1		 cmp	 eax, ecx
  00ab4	0f 42 c8	 cmovb	 ecx, eax
  00ab7	3b f1		 cmp	 esi, ecx
  00ab9	73 2b		 jae	 SHORT $LN998@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00abb	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR tv5430[ebp]
  00ac1	03 47 28	 add	 eax, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00ac4	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00ac8	72 02		 jb	 SHORT $LN864@Load_LoadO

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00aca	8b 00		 mov	 eax, DWORD PTR [eax]
$LN864@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 882  : 				ObjectData.abyPortalID[portalIdx] = atoi(rVector[6+portalIdx].c_str());

  00acc	50		 push	 eax
  00acd	e8 00 00 00 00	 call	 __atoi64
  00ad2	88 84 35 1c ff
	ff ff		 mov	 BYTE PTR _ObjectData$21[ebp+esi+16], al
  00ad9	83 c4 04	 add	 esp, 4
  00adc	46		 inc	 esi
  00add	83 85 04 ff ff
	ff 18		 add	 DWORD PTR tv5430[ebp], 24 ; 00000018H
  00ae4	eb ad		 jmp	 SHORT $LL7@Load_LoadO
$LN998@Load_LoadO:

; 883  : 			}
; 884  : 		}
; 885  : 
; 886  : 		// If data is not inside property, then delete it.
; 887  : 		CProperty * pProperty;
; 888  : 		if (!CPropertyManager::Instance().Get(ObjectData.dwCRC, &pProperty))

  00ae6	8b b5 18 ff ff
	ff		 mov	 esi, DWORD PTR _ObjectData$21[ebp+12]
  00aec	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _pProperty$5[ebp]
  00af2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPropertyManager@@@@0PAVCPropertyManager@@A ; CSingleton<CPropertyManager>::ms_singleton
  00af8	50		 push	 eax
  00af9	56		 push	 esi
  00afa	e8 00 00 00 00	 call	 ?Get@CPropertyManager@@QAE_NKPAPAVCProperty@@@Z ; CPropertyManager::Get
  00aff	84 c0		 test	 al, al
  00b01	75 10		 jne	 SHORT $LN17@Load_LoadO

; 889  : 		{
; 890  : 			TraceError(" CArea::LoadObject Property(%u) Load ERROR", ObjectData.dwCRC);

  00b03	56		 push	 esi
  00b04	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@HHDKLHOE@?5CArea?3?3LoadObject?5Property?$CI?$CFu?$CJ@
  00b09	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00b0e	83 c4 08	 add	 esp, 8

; 891  : 			continue;

  00b11	eb 44		 jmp	 SHORT $LN910@Load_LoadO
$LN17@Load_LoadO:

; 892  : 		}
; 893  : 
; 894  : 		m_ObjectDataVector.push_back(ObjectData);

  00b13	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00b19	83 c1 04	 add	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00b1c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00b1f	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00b22	74 26		 je	 SHORT $LN911@Load_LoadO
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00b24	0f 10 85 0c ff
	ff ff		 movups	 xmm0, XMMWORD PTR _ObjectData$21[ebp]
  00b2b	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00b2e	0f 10 85 1c ff
	ff ff		 movups	 xmm0, XMMWORD PTR _ObjectData$21[ebp+16]
  00b35	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  00b39	0f 10 85 2c ff
	ff ff		 movups	 xmm0, XMMWORD PTR _ObjectData$21[ebp+32]
  00b40	0f 11 40 20	 movups	 XMMWORD PTR [eax+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00b44	83 41 04 30	 add	 DWORD PTR [ecx+4], 48	; 00000030H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00b48	eb 0d		 jmp	 SHORT $LN910@Load_LoadO
$LN911@Load_LoadO:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00b4a	8d 95 0c ff ff
	ff		 lea	 edx, DWORD PTR _ObjectData$21[ebp]
  00b50	52		 push	 edx
  00b51	50		 push	 eax
  00b52	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSObjectData@CArea@@@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAEPAUSObjectData@CArea@@QAU23@ABU23@@Z ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Emplace_reallocate<CArea::SObjectData const &>
$LN910@Load_LoadO:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 831  : 	for (DWORD i = 0; i < dwCount; ++i)

  00b57	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _$S16$23[ebp+20]
  00b5d	83 f8 10	 cmp	 eax, 16			; 00000010H
  00b60	72 10		 jb	 SHORT $LN921@Load_LoadO
  00b62	40		 inc	 eax
  00b63	50		 push	 eax
  00b64	ff b5 54 ff ff
	ff		 push	 DWORD PTR _$S16$23[ebp]
  00b6a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b6f	83 c4 08	 add	 esp, 8
$LN921@Load_LoadO:
  00b72	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _$S15$22[ebp+20]
  00b78	c6 85 54 ff ff
	ff 00		 mov	 BYTE PTR _$S16$23[ebp], 0
  00b7f	c7 85 68 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S16$23[ebp+20], 15 ; 0000000fH
  00b89	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S16$23[ebp+16], 0
  00b93	83 f8 10	 cmp	 eax, 16			; 00000010H
  00b96	72 10		 jb	 SHORT $LN931@Load_LoadO
  00b98	40		 inc	 eax
  00b99	50		 push	 eax
  00b9a	ff b5 3c ff ff
	ff		 push	 DWORD PTR _$S15$22[ebp]
  00ba0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00ba5	83 c4 08	 add	 esp, 8
$LN931@Load_LoadO:
  00ba8	8b 45 b0	 mov	 eax, DWORD PTR _$S14$29[ebp+20]
  00bab	c6 85 3c ff ff
	ff 00		 mov	 BYTE PTR _$S15$22[ebp], 0
  00bb2	c7 85 50 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _$S15$22[ebp+20], 15 ; 0000000fH
  00bbc	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _$S15$22[ebp+16], 0
  00bc6	83 f8 10	 cmp	 eax, 16			; 00000010H
  00bc9	72 0d		 jb	 SHORT $LN941@Load_LoadO
  00bcb	40		 inc	 eax
  00bcc	50		 push	 eax
  00bcd	ff 75 9c	 push	 DWORD PTR _$S14$29[ebp]
  00bd0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bd5	83 c4 08	 add	 esp, 8
$LN941@Load_LoadO:
  00bd8	8b 45 98	 mov	 eax, DWORD PTR _$S13$26[ebp+20]
  00bdb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00bdf	c6 45 9c 00	 mov	 BYTE PTR _$S14$29[ebp], 0
  00be3	c7 45 b0 0f 00
	00 00		 mov	 DWORD PTR _$S14$29[ebp+20], 15 ; 0000000fH
  00bea	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _$S14$29[ebp+16], 0
  00bf1	83 f8 10	 cmp	 eax, 16			; 00000010H
  00bf4	72 0d		 jb	 SHORT $LN2@Load_LoadO
  00bf6	40		 inc	 eax
  00bf7	50		 push	 eax
  00bf8	ff 75 84	 push	 DWORD PTR _$S13$26[ebp]
  00bfb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00c00	83 c4 08	 add	 esp, 8
$LN2@Load_LoadO:
  00c03	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  00c09	40		 inc	 eax
  00c0a	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  00c10	3b 85 d0 fe ff
	ff		 cmp	 eax, DWORD PTR _dwCount$1$[ebp]
  00c16	0f 82 1a f7 ff
	ff		 jb	 $LL4@Load_LoadO
$LN997@Load_LoadO:

; 897  : 	return true;

  00c1c	c6 85 0b ff ff
	ff 01		 mov	 BYTE PTR $T19[ebp], 1
$LN36@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00c23	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  00c29	ff 70 04	 push	 DWORD PTR [eax+4]
  00c2c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _stTokenVectorMap$[ebp]
  00c32	50		 push	 eax
  00c33	8b c8		 mov	 ecx, eax
  00c35	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00c3a	6a 34		 push	 52			; 00000034H
  00c3c	ff b5 fc fe ff
	ff		 push	 DWORD PTR _stTokenVectorMap$[ebp]
  00c42	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 897  : 	return true;

  00c47	8a 85 0b ff ff
	ff		 mov	 al, BYTE PTR $T19[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00c4d	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 898  : }

  00c50	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c53	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c5a	59		 pop	 ecx
  00c5b	5f		 pop	 edi
  00c5c	5e		 pop	 esi
  00c5d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c60	33 cd		 xor	 ecx, ebp
  00c62	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c67	8b e5		 mov	 esp, ebp
  00c69	5d		 pop	 ebp
  00c6a	c2 04 00	 ret	 4
$LN973@Load_LoadO:
  00c6d	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN970@Load_LoadO:
  00c72	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN974@Load_LoadO:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4222 :             _Xlen_string(); // result too long

  00c77	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN1002@Load_LoadO:
  00c7c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$0:
  00000	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _stTokenVectorMap$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QAE@XZ
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$3:
  0000b	8d 4d 9c	 lea	 ecx, DWORD PTR $T30[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$18:
  00013	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$5:
  0001e	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T24[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$25:
  00029	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$6:
  00034	8d 4d 84	 lea	 ecx, DWORD PTR _$S13$26[ebp]
  00037	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$7:
  0003c	8d 4d 9c	 lea	 ecx, DWORD PTR _$S14$29[ebp]
  0003f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$8:
  00044	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _$S15$22[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__Load_LoadObject@CArea@@IAE_NPBD@Z$9:
  0004f	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _$S16$23[ebp]
  00055	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
__ehhandler$?__Load_LoadObject@CArea@@IAE_NPBD@Z:
  0005f	90		 npad	 1
  00060	90		 npad	 1
  00061	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00065	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00068	8b 8a c0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-320]
  0006e	33 c8		 xor	 ecx, eax
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00078	33 c8		 xor	 ecx, eax
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__Load_LoadObject@CArea@@IAE_NPBD@Z
  00084	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__Load_LoadObject@CArea@@IAE_NPBD@Z ENDP		; CArea::__Load_LoadObject
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?CheckObjectIndex@CArea@@IBE_NK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?CheckObjectIndex@CArea@@IBE_NK@Z PROC			; CArea::CheckObjectIndex, COMDAT
; _this$ = ecx

; 978  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  0000e	f7 ea		 imul	 edx
  00010	c1 fa 03	 sar	 edx, 3
  00013	8b c2		 mov	 eax, edx
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 979  : 	if (dwIndex >= m_ObjectDataVector.size())

  0001a	39 45 08	 cmp	 DWORD PTR _dwIndex$[ebp], eax
  0001d	0f 92 c0	 setb	 al

; 980  : 		return false;
; 981  : 
; 982  : 	return true;
; 983  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?CheckObjectIndex@CArea@@IBE_NK@Z ENDP			; CArea::CheckObjectIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?DEBUG_GetRenderedGrapphicThingInstanceNum@CArea@@QAEKXZ
_TEXT	SEGMENT
?DEBUG_GetRenderedGrapphicThingInstanceNum@CArea@@QAEKXZ PROC ; CArea::DEBUG_GetRenderedGrapphicThingInstanceNum, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	2b 41 78	 sub	 eax, DWORD PTR [ecx+120]
  00006	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 175  : { return m_kRenderedGrapphicThingInstanceVector.size(); }

  00009	c3		 ret	 0
?DEBUG_GetRenderedGrapphicThingInstanceNum@CArea@@QAEKXZ ENDP ; CArea::DEBUG_GetRenderedGrapphicThingInstanceNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?DEBUG_GetRenderedCRCWithNumVector@CArea@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@XZ
_TEXT	SEGMENT
?DEBUG_GetRenderedCRCWithNumVector@CArea@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@XZ PROC ; CArea::DEBUG_GetRenderedCRCWithNumVector, COMDAT
; _this$ = ecx

; 172  : { return m_kRenderedThingInstanceCRCWithNumberVector; }

  00000	8d 41 6c	 lea	 eax, DWORD PTR [ecx+108]
  00003	c3		 ret	 0
?DEBUG_GetRenderedCRCWithNumVector@CArea@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@XZ ENDP ; CArea::DEBUG_GetRenderedCRCWithNumVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?DEBUG_GetRenderedCRCNum@CArea@@QAEKXZ
_TEXT	SEGMENT
?DEBUG_GetRenderedCRCNum@CArea@@QAEKXZ PROC		; CArea::DEBUG_GetRenderedCRCNum, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  00003	2b 41 6c	 sub	 eax, DWORD PTR [ecx+108]
  00006	c1 f8 03	 sar	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 169  : { return m_kRenderedThingInstanceCRCWithNumberVector.size(); }

  00009	c3		 ret	 0
?DEBUG_GetRenderedCRCNum@CArea@@QAEKXZ ENDP		; CArea::DEBUG_GetRenderedCRCNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?GetCoordinate@CArea@@QAEXPAG0@Z
_TEXT	SEGMENT
_usCoordX$ = 8						; size = 4
_usCoordY$ = 12						; size = 4
?GetCoordinate@CArea@@QAEXPAG0@Z PROC			; CArea::GetCoordinate, COMDAT
; _this$ = ecx

; 1185 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1186 : 	*usCoordX = m_wX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _usCoordX$[ebp]
  00006	66 8b 91 84 00
	00 00		 mov	 dx, WORD PTR [ecx+132]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx

; 1187 : 	*usCoordY = m_wY;

  00010	8b 45 0c	 mov	 eax, DWORD PTR _usCoordY$[ebp]
  00013	66 8b 89 86 00
	00 00		 mov	 cx, WORD PTR [ecx+134]
  0001a	66 89 08	 mov	 WORD PTR [eax], cx

; 1188 : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?GetCoordinate@CArea@@QAEXPAG0@Z ENDP			; CArea::GetCoordinate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?SetCoordinate@CArea@@QAEXABG0@Z
_TEXT	SEGMENT
_usCoordX$ = 8						; size = 4
_usCoordY$ = 12						; size = 4
?SetCoordinate@CArea@@QAEXABG0@Z PROC			; CArea::SetCoordinate, COMDAT
; _this$ = ecx

; 1191 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1192 : 	m_wX = usCoordX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _usCoordX$[ebp]
  00006	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00009	66 89 81 84 00
	00 00		 mov	 WORD PTR [ecx+132], ax

; 1193 : 	m_wY = usCoordY;

  00010	8b 45 0c	 mov	 eax, DWORD PTR _usCoordY$[ebp]
  00013	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00016	66 89 81 86 00
	00 00		 mov	 WORD PTR [ecx+134], ax

; 1194 : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?SetCoordinate@CArea@@QAEXABG0@Z ENDP			; CArea::SetCoordinate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Refresh@CArea@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
_this$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
?Refresh@CArea@@QAEXXZ PROC				; CArea::Refresh, COMDAT
; _this$ = ecx

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 387  : 	m_TreeCloneInstaceVector.clear();

  00009	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  0000c	8d 53 1c	 lea	 edx, DWORD PTR [ebx+28]
  0000f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00012	56		 push	 esi

; 388  : 	m_ThingCloneInstaceVector.clear();

  00013	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00016	89 43 2c	 mov	 DWORD PTR [ebx+44], eax

; 389  : 	m_DungeonBlockCloneInstanceVector.clear();

  00019	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  0001c	89 43 38	 mov	 DWORD PTR [ebx+56], eax

; 390  : 	m_AniThingCloneInstanceVector.clear();

  0001f	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00022	89 43 44	 mov	 DWORD PTR [ebx+68], eax

; 391  : 	m_ShadowThingCloneInstaceVector.clear();

  00025	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  00028	57		 push	 edi

; 392  : 	m_AmbienceCloneInstanceVector.clear();

  00029	8d 7b 58	 lea	 edi, DWORD PTR [ebx+88]
  0002c	89 43 50	 mov	 DWORD PTR [ebx+80], eax
  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
  00031	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00034	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 386  : {

  00037	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx

; 387  : 	m_TreeCloneInstaceVector.clear();

  0003a	89 55 fc	 mov	 DWORD PTR _this$1$[ebp], edx

; 392  : 	m_AmbienceCloneInstanceVector.clear();

  0003d	89 7d f4	 mov	 DWORD PTR _this$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00040	3b 73 14	 cmp	 esi, DWORD PTR [ebx+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 398  : 	for(it = m_ObjectInstanceVector.begin();it!=m_ObjectInstanceVector.end();++it)

  00043	0f 84 d2 01 00
	00		 je	 $LN3@Refresh
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@Refresh:

; 399  : 	{
; 400  : 		TObjectInstance * pObjectInstance = *it;

  00050	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 401  : 
; 402  : 
; 403  : 
; 404  : 		if (prt::PROPERTY_TYPE_TREE == pObjectInstance->dwType)

  00052	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00055	83 f8 01	 cmp	 eax, 1
  00058	75 43		 jne	 SHORT $LN5@Refresh

; 405  : 		{
; 406  : 
; 407  : 			if (pObjectInstance->pTree)

  0005a	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  0005d	83 c3 0c	 add	 ebx, 12			; 0000000cH
  00060	85 c9		 test	 ecx, ecx
  00062	0f 84 a4 01 00
	00		 je	 $LN2@Refresh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00068	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006b	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0006e	74 08		 je	 SHORT $LN47@Refresh

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00070	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00072	83 42 04 04	 add	 DWORD PTR [edx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00076	eb 09		 jmp	 SHORT $LN46@Refresh
$LN47@Refresh:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00078	53		 push	 ebx
  00079	50		 push	 eax
  0007a	8b ca		 mov	 ecx, edx
  0007c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCSpeedTreeWrapper@@@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAEPAPAVCSpeedTreeWrapper@@QAPAV2@ABQAV2@@Z ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Emplace_reallocate<CSpeedTreeWrapper * const &>
$LN46@Refresh:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 411  : 				pfPosition = pObjectInstance->pTree->GetPosition();

  00081	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00083	e8 00 00 00 00	 call	 ?GetPosition@CSpeedTreeWrapper@@QAEPBMXZ ; CSpeedTreeWrapper::GetPosition

; 412  : 				pObjectInstance->pTree->UpdateBoundingSphere();

  00088	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0008a	e8 00 00 00 00	 call	 ?UpdateBoundingSphere@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::UpdateBoundingSphere

; 413  : 				pObjectInstance->pTree->UpdateCollisionData();

  0008f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00091	6a 00		 push	 0
  00093	e8 00 00 00 00	 call	 ?UpdateCollisionData@CGraphicObjectInstance@@QAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ; CGraphicObjectInstance::UpdateCollisionData

; 414  : 			}
; 415  : 		}

  00098	e9 6c 01 00 00	 jmp	 $LN92@Refresh
$LN5@Refresh:

; 416  : 		else if (prt::PROPERTY_TYPE_BUILDING == pObjectInstance->dwType)

  0009d	83 f8 02	 cmp	 eax, 2
  000a0	0f 85 bd 00 00
	00		 jne	 $LN8@Refresh

; 417  : 		{
; 418  : 
; 419  : 			pObjectInstance->pThingInstance->Update();

  000a6	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  000a9	8d 7b 14	 lea	 edi, DWORD PTR [ebx+20]
  000ac	e8 00 00 00 00	 call	 ?Update@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Update

; 420  : 			pObjectInstance->pThingInstance->Transform();

  000b1	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000b3	e8 00 00 00 00	 call	 ?Transform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Transform

; 421  : 			pObjectInstance->pThingInstance->Show();

  000b8	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000ba	e8 00 00 00 00	 call	 ?Show@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Show

; 422  : 			pObjectInstance->pThingInstance->DeformAll();

  000bf	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000c1	e8 00 00 00 00	 call	 ?DeformAll@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::DeformAll
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000c6	8b 55 f8	 mov	 edx, DWORD PTR _this$1$[ebp]
  000c9	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  000cc	3b 4a 30	 cmp	 ecx, DWORD PTR [edx+48]
  000cf	74 0a		 je	 SHORT $LN54@Refresh

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000d1	8b 07		 mov	 eax, DWORD PTR [edi]
  000d3	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000d5	83 42 2c 04	 add	 DWORD PTR [edx+44], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000d9	eb 0a		 jmp	 SHORT $LN53@Refresh
$LN54@Refresh:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000db	57		 push	 edi
  000dc	51		 push	 ecx
  000dd	8d 4a 28	 lea	 ecx, DWORD PTR [edx+40]
  000e0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
$LN53@Refresh:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 425  : 			pObjectInstance->pThingInstance->BuildBoundingSphere();

  000e5	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000e7	e8 00 00 00 00	 call	 ?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BuildBoundingSphere

; 426  : 			pObjectInstance->pThingInstance->UpdateBoundingSphere();

  000ec	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000ee	e8 00 00 00 00	 call	 ?UpdateBoundingSphere@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::UpdateBoundingSphere

; 427  : 
; 428  : 			if (pObjectInstance->pThingInstance->IsMotionThing())

  000f3	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000f5	e8 00 00 00 00	 call	 ?IsMotionThing@CGraphicThingInstance@@QAE_NXZ ; CGraphicThingInstance::IsMotionThing
  000fa	84 c0		 test	 al, al
  000fc	74 3a		 je	 SHORT $LN10@Refresh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000fe	8b 55 f8	 mov	 edx, DWORD PTR _this$1$[ebp]
  00101	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  00104	3b 4a 48	 cmp	 ecx, DWORD PTR [edx+72]
  00107	74 0a		 je	 SHORT $LN61@Refresh

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00109	8b 07		 mov	 eax, DWORD PTR [edi]
  0010b	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0010d	83 42 44 04	 add	 DWORD PTR [edx+68], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00111	eb 0a		 jmp	 SHORT $LN60@Refresh
$LN61@Refresh:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00113	57		 push	 edi
  00114	51		 push	 ecx
  00115	8d 4a 40	 lea	 ecx, DWORD PTR [edx+64]
  00118	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
$LN60@Refresh:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 431  : 				pObjectInstance->pThingInstance->SetMotion(0);

  0011d	51		 push	 ecx
  0011e	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00125	6a 00		 push	 0
  00127	51		 push	 ecx
  00128	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0012a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00131	6a 00		 push	 0
  00133	e8 00 00 00 00	 call	 ?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z ; CGraphicThingInstance::SetMotion
$LN10@Refresh:

; 432  : 			}
; 433  : 
; 434  : 			if (pObjectInstance->isShadowFlag)

  00138	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0
  0013c	0f 84 8f 00 00
	00		 je	 $LN81@Refresh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00142	8b 55 f8	 mov	 edx, DWORD PTR _this$1$[ebp]
  00145	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  00148	3b 4a 54	 cmp	 ecx, DWORD PTR [edx+84]
  0014b	74 0a		 je	 SHORT $LN68@Refresh

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0014d	8b 07		 mov	 eax, DWORD PTR [edi]
  0014f	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00151	83 42 50 04	 add	 DWORD PTR [edx+80], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00155	eb 7a		 jmp	 SHORT $LN81@Refresh
$LN68@Refresh:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00157	57		 push	 edi
  00158	51		 push	 ecx
  00159	8d 4a 4c	 lea	 ecx, DWORD PTR [edx+76]
  0015c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 445  : 		}

  00161	eb 6e		 jmp	 SHORT $LN81@Refresh
$LN8@Refresh:

; 446  : 		else if (prt::PROPERTY_TYPE_EFFECT == pObjectInstance->dwType)

  00163	83 f8 03	 cmp	 eax, 3
  00166	0f 84 a0 00 00
	00		 je	 $LN2@Refresh

; 447  : 		{
; 448  : 		}
; 449  : 		else if (prt::PROPERTY_TYPE_AMBIENCE == pObjectInstance->dwType)

  0016c	83 f8 04	 cmp	 eax, 4
  0016f	75 23		 jne	 SHORT $LN15@Refresh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00171	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 451  : 			m_AmbienceCloneInstanceVector.push_back(pObjectInstance->pAmbienceInstance);

  00174	83 c3 20	 add	 ebx, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00177	3b 4f 08	 cmp	 ecx, DWORD PTR [edi+8]
  0017a	74 0d		 je	 SHORT $LN75@Refresh

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0017c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0017e	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00180	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00184	e9 83 00 00 00	 jmp	 $LN2@Refresh
$LN75@Refresh:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00189	53		 push	 ebx
  0018a	51		 push	 ecx
  0018b	8b cf		 mov	 ecx, edi
  0018d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAmbienceInstance@CArea@@@?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAEPAPAUSAmbienceInstance@CArea@@QAPAU23@ABQAU23@@Z ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::_Emplace_reallocate<CArea::SAmbienceInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 452  : 		}

  00192	eb 75		 jmp	 SHORT $LN92@Refresh
$LN15@Refresh:

; 453  : 		else if (prt::PROPERTY_TYPE_DUNGEON_BLOCK == pObjectInstance->dwType)

  00194	83 f8 05	 cmp	 eax, 5
  00197	75 73		 jne	 SHORT $LN2@Refresh

; 454  : 		{
; 455  : 
; 456  : 			pObjectInstance->pDungeonBlock->Update();

  00199	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  0019c	8d 7b 24	 lea	 edi, DWORD PTR [ebx+36]
  0019f	e8 00 00 00 00	 call	 ?Update@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Update

; 457  : 			pObjectInstance->pDungeonBlock->Deform();

  001a4	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001a6	e8 00 00 00 00	 call	 ?Deform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Deform

; 458  : 			pObjectInstance->pDungeonBlock->UpdateBoundingSphere();

  001ab	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001ad	e8 00 00 00 00	 call	 ?UpdateBoundingSphere@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::UpdateBoundingSphere
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  001b2	8b 55 f8	 mov	 edx, DWORD PTR _this$1$[ebp]
  001b5	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  001b8	3b 4a 3c	 cmp	 ecx, DWORD PTR [edx+60]
  001bb	74 0a		 je	 SHORT $LN82@Refresh

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  001bd	8b 07		 mov	 eax, DWORD PTR [edi]
  001bf	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  001c1	83 42 38 04	 add	 DWORD PTR [edx+56], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  001c5	eb 0a		 jmp	 SHORT $LN81@Refresh
$LN82@Refresh:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  001c7	57		 push	 edi
  001c8	51		 push	 ecx
  001c9	8d 4a 34	 lea	 ecx, DWORD PTR [edx+52]
  001cc	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>
$LN81@Refresh:

; 75   :         ++_Ptr;

  001d1	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  001d4	85 c9		 test	 ecx, ecx
  001d6	74 2e		 je	 SHORT $LN91@Refresh
  001d8	e8 00 00 00 00	 call	 ?GetObjectPointer@CAttributeInstance@@QBEPAVCAttributeData@@XZ ; CAttributeInstance::GetObjectPointer
  001dd	8b c8		 mov	 ecx, eax
  001df	e8 00 00 00 00	 call	 ?GetCollisionDataVector@CAttributeData@@QBEABV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@XZ ; CAttributeData::GetCollisionDataVector
  001e4	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 ?UpdateCollisionData@CGraphicObjectInstance@@QAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ; CGraphicObjectInstance::UpdateCollisionData
  001ec	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001ee	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  001f3	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?RefreshObject@CAttributeInstance@@QAEXABUD3DXMATRIX@@@Z ; CAttributeInstance::RefreshObject
  001fc	ff 73 08	 push	 DWORD PTR [ebx+8]
  001ff	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00201	e8 00 00 00 00	 call	 ?UpdateHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z ; CGraphicObjectInstance::UpdateHeightInstance
$LN91@Refresh:
  00206	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN92@Refresh:
  00209	8b 55 fc	 mov	 edx, DWORD PTR _this$1$[ebp]
$LN2@Refresh:

; 149  :         return _Ptr == _Right._Ptr;

  0020c	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]

; 75   :         ++_Ptr;

  0020f	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00212	3b 70 14	 cmp	 esi, DWORD PTR [eax+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 398  : 	for(it = m_ObjectInstanceVector.begin();it!=m_ObjectInstanceVector.end();++it)

  00215	0f 85 35 fe ff
	ff		 jne	 $LL4@Refresh
$LN3@Refresh:
  0021b	5f		 pop	 edi

; 459  : 			m_DungeonBlockCloneInstanceVector.push_back(pObjectInstance->pDungeonBlock);
; 460  : 
; 461  : 			if (pObjectInstance->pAttributeInstance)
; 462  : 			{
; 463  : 				pObjectInstance->pDungeonBlock->UpdateCollisionData(&pObjectInstance->pAttributeInstance->GetObjectPointer()->GetCollisionDataVector());
; 464  :   				pObjectInstance->pAttributeInstance->RefreshObject(pObjectInstance->pDungeonBlock->GetTransform());
; 465  : 				pObjectInstance->pDungeonBlock->UpdateHeightInstance(pObjectInstance->pAttributeInstance);
; 466  : 			}
; 467  : 		}
; 468  : 	}
; 469  : }

  0021c	5e		 pop	 esi
  0021d	5b		 pop	 ebx
  0021e	8b e5		 mov	 esp, ebp
  00220	5d		 pop	 ebp
  00221	c3		 ret	 0
?Refresh@CArea@@QAEXXZ ENDP				; CArea::Refresh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?RenderDungeon@CArea@@QAEXXZ
_TEXT	SEGMENT
?RenderDungeon@CArea@@QAEXXZ PROC			; CArea::RenderDungeon, COMDAT
; _this$ = ecx

; 328  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 329  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1,	D3DTA_TEXTURE);

  00002	6a 02		 push	 2
  00004	6a 02		 push	 2
  00006	8b f9		 mov	 edi, ecx
  00008	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000e	6a 00		 push	 0
  00010	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 330  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,	D3DTOP_SELECTARG1);

  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0001b	6a 02		 push	 2
  0001d	6a 01		 push	 1
  0001f	6a 00		 push	 0
  00021	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 331  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1,	D3DTA_TEXTURE);

  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002c	6a 02		 push	 2
  0002e	6a 05		 push	 5
  00030	6a 00		 push	 0
  00032	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 332  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,	D3DTOP_SELECTARG1);

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003d	6a 02		 push	 2
  0003f	6a 01		 push	 1
  00041	6a 00		 push	 0
  00043	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 333  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1,	D3DTA_TEXTURE);

  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004e	6a 02		 push	 2
  00050	6a 02		 push	 2
  00052	6a 01		 push	 1
  00054	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 334  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2,	D3DTA_CURRENT);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	6a 01		 push	 1
  00061	6a 03		 push	 3
  00063	6a 01		 push	 1
  00065	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 335  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,	D3DTOP_MODULATE);

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00070	6a 04		 push	 4
  00072	6a 01		 push	 1
  00074	6a 01		 push	 1
  00076	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 336  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1,	D3DTA_TEXTURE);

  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00081	6a 02		 push	 2
  00083	6a 05		 push	 5
  00085	6a 01		 push	 1
  00087	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 337  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG2,	D3DTA_CURRENT);

  0008c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00092	6a 01		 push	 1
  00094	6a 06		 push	 6
  00096	6a 01		 push	 1
  00098	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 338  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,	D3DTOP_MODULATE);

  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a3	6a 04		 push	 4
  000a5	6a 04		 push	 4
  000a7	6a 01		 push	 1
  000a9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ae	8b 77 34	 mov	 esi, DWORD PTR [edi+52]
  000b1	3b 77 38	 cmp	 esi, DWORD PTR [edi+56]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 368  : 	for (; itor != m_DungeonBlockCloneInstanceVector.end(); ++itor)

  000b4	74 0f		 je	 SHORT $LN3@RenderDung
$LL4@RenderDung:

; 369  : 	{
; 370  : 		(*itor)->Render();

  000b6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b8	e8 00 00 00 00	 call	 ?Render@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  000bd	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  000c0	3b 77 38	 cmp	 esi, DWORD PTR [edi+56]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 368  : 	for (; itor != m_DungeonBlockCloneInstanceVector.end(); ++itor)

  000c3	75 f1		 jne	 SHORT $LL4@RenderDung
$LN3@RenderDung:

; 371  : 	}
; 372  : 
; 373  : #ifdef WORLD_EDITOR
; 374  : 	if (bRenderTransparent)
; 375  : 	{
; 376  : 		STATEMANAGER.SetRenderState(D3DRS_ZWRITEENABLE, oldZWriteenableState);
; 377  : 		STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, oldAlphaBlendState);
; 378  : 	}
; 379  : #endif
; 380  : 
; 381  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,	D3DTOP_DISABLE);

  000c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000cb	6a 01		 push	 1
  000cd	6a 01		 push	 1
  000cf	6a 01		 push	 1
  000d1	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 382  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,	D3DTOP_DISABLE);

  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000dc	6a 01		 push	 1
  000de	6a 04		 push	 4
  000e0	6a 01		 push	 1
  000e2	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi

; 383  : }

  000e9	c3		 ret	 0
?RenderDungeon@CArea@@QAEXXZ ENDP			; CArea::RenderDungeon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?RenderAmbience@CArea@@QAEXXZ
_TEXT	SEGMENT
_dwColorOp$ = -8					; size = 4
_dwColorArg1$ = -4					; size = 4
?RenderAmbience@CArea@@QAEXXZ PROC			; CArea::RenderAmbience, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 312  : 	DWORD dwColorArg1, dwColorOp;
; 313  : 	STATEMANAGER.GetTextureStageState(0, D3DTSS_COLORARG1, &dwColorArg1);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _dwColorArg1$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	50		 push	 eax
  0000c	6a 02		 push	 2
  0000e	8b f9		 mov	 edi, ecx
  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00016	6a 00		 push	 0
  00018	e8 00 00 00 00	 call	 ?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ; CStateManager::GetTextureStageState

; 314  : 	STATEMANAGER.GetTextureStageState(0, D3DTSS_COLOROP, &dwColorOp);

  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00023	8d 45 f8	 lea	 eax, DWORD PTR _dwColorOp$[ebp]
  00026	50		 push	 eax
  00027	6a 01		 push	 1
  00029	6a 00		 push	 0
  0002b	e8 00 00 00 00	 call	 ?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ; CStateManager::GetTextureStageState

; 315  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TFACTOR);

  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00036	6a 03		 push	 3
  00038	6a 02		 push	 2
  0003a	6a 00		 push	 0
  0003c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 316  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	6a 00		 push	 0
  0004d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00052	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  00055	3b 77 5c	 cmp	 esi, DWORD PTR [edi+92]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 318  : 	for (; itor != m_AmbienceCloneInstanceVector.end(); ++itor)

  00058	74 15		 je	 SHORT $LN3@RenderAmbi
  0005a	66 0f 1f 44 00
	00		 npad	 6
$LL4@RenderAmbi:

; 319  : 	{
; 320  : 		TAmbienceInstance * pInstance = *itor;
; 321  : 		pInstance->Render();

  00060	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00062	e8 00 00 00 00	 call	 ?Render@SAmbienceInstance@CArea@@QAEXXZ ; CArea::SAmbienceInstance::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00067	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  0006a	3b 77 5c	 cmp	 esi, DWORD PTR [edi+92]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 318  : 	for (; itor != m_AmbienceCloneInstanceVector.end(); ++itor)

  0006d	75 f1		 jne	 SHORT $LL4@RenderAmbi
$LN3@RenderAmbi:

; 322  : 	}
; 323  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, dwColorArg1);

  0006f	ff 75 fc	 push	 DWORD PTR _dwColorArg1$[ebp]
  00072	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00078	6a 02		 push	 2
  0007a	6a 00		 push	 0
  0007c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 324  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, dwColorOp);

  00081	ff 75 f8	 push	 DWORD PTR _dwColorOp$[ebp]
  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008a	6a 01		 push	 1
  0008c	6a 00		 push	 0
  0008e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi

; 325  : }

  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
?RenderAmbience@CArea@@QAEXXZ ENDP			; CArea::RenderAmbience
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?RenderCollision@CArea@@QAEXXZ
_TEXT	SEGMENT
_po$1 = -12						; size = 4
_i$ = -8						; size = 4
_this$1$ = -4						; size = 4
?RenderCollision@CArea@@QAEXXZ PROC			; CArea::RenderCollision, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 258  : 	DWORD i;
; 259  : 
; 260  : 	STATEMANAGER.SetTexture(0, NULL);

  00008	6a 00		 push	 0
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00013	6a 00		 push	 0
  00015	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 261  : 	STATEMANAGER.SetTexture(1, NULL);

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00020	6a 00		 push	 0
  00022	6a 01		 push	 1
  00024	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 262  : 
; 263  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, FALSE);

  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002f	6a 00		 push	 0
  00031	6a 1b		 push	 27			; 0000001bH
  00033	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 264  : 	STATEMANAGER.SaveRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003e	6a 01		 push	 1
  00040	6a 16		 push	 22			; 00000016H
  00042	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 265  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, FALSE);

  00047	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004d	6a 00		 push	 0
  0004f	68 89 00 00 00	 push	 137			; 00000089H
  00054	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 266  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, 0xff000000);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	68 00 00 00 ff	 push	 -16777216		; ff000000H
  00064	6a 3c		 push	 60			; 0000003cH
  00066	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 267  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1,	D3DTA_TEXTURE);

  0006b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00071	6a 02		 push	 2
  00073	6a 02		 push	 2
  00075	6a 00		 push	 0
  00077	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 268  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,	D3DTOP_SELECTARG1);

  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00082	6a 02		 push	 2
  00084	6a 01		 push	 1
  00086	6a 00		 push	 0
  00088	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 269  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  0008d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00093	6a 01		 push	 1
  00095	6a 04		 push	 4
  00097	6a 00		 push	 0
  00099	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 270  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a4	6a 01		 push	 1
  000a6	6a 01		 push	 1
  000a8	6a 01		 push	 1
  000aa	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 271  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b5	6a 01		 push	 1
  000b7	6a 04		 push	 4
  000b9	6a 01		 push	 1
  000bb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 272  : 
; 273  : 	for(i=0;i<GetObjectInstanceCount();i++)

  000c0	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  000c3	33 db		 xor	 ebx, ebx
  000c5	8b ce		 mov	 ecx, esi
  000c7	89 5d f8	 mov	 DWORD PTR _i$[ebp], ebx
  000ca	e8 00 00 00 00	 call	 ?GetObjectInstanceCount@CArea@@QBE?BKXZ ; CArea::GetObjectInstanceCount
  000cf	85 c0		 test	 eax, eax
  000d1	0f 84 ef 00 00
	00		 je	 $LN3@RenderColl
  000d7	57		 push	 edi
$LL4@RenderColl:

; 274  : 	{
; 275  : 		const TObjectInstance * po;
; 276  : 		if (GetObjectInstancePointer(i,&po))

  000d8	8d 45 f4	 lea	 eax, DWORD PTR _po$1[ebp]
  000db	8b ce		 mov	 ecx, esi
  000dd	50		 push	 eax
  000de	8d 45 f8	 lea	 eax, DWORD PTR _i$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?GetObjectInstancePointer@CArea@@QBE?B_NABKPAPBUSObjectInstance@1@@Z ; CArea::GetObjectInstancePointer
  000e7	84 c0		 test	 al, al
  000e9	0f 84 bf 00 00
	00		 je	 $LN2@RenderColl

; 277  : 		{
; 278  : 			if (po->pTree && po->pTree->isShow())

  000ef	8b 7d f4	 mov	 edi, DWORD PTR _po$1[ebp]
  000f2	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000f5	85 c9		 test	 ecx, ecx
  000f7	74 35		 je	 SHORT $LN6@RenderColl
  000f9	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  000fe	84 c0		 test	 al, al
  00100	74 2c		 je	 SHORT $LN6@RenderColl

; 279  : 			{
; 280  : 				DWORD j;
; 281  : 				for(j=0;j<po->pTree->GetCollisionInstanceCount();j++)

  00102	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00105	33 f6		 xor	 esi, esi
  00107	e8 00 00 00 00	 call	 ?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ ; CGraphicObjectInstance::GetCollisionInstanceCount
  0010c	85 c0		 test	 eax, eax
  0010e	74 1e		 je	 SHORT $LN6@RenderColl
$LL7@RenderColl:

; 282  : 				{
; 283  : 					po->pTree->GetCollisionInstanceData(j)->Render();

  00110	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00113	56		 push	 esi
  00114	e8 00 00 00 00	 call	 ?GetCollisionInstanceData@CGraphicObjectInstance@@QAEPAVCBaseCollisionInstance@@K@Z ; CGraphicObjectInstance::GetCollisionInstanceData
  00119	6a 03		 push	 3
  0011b	8b c8		 mov	 ecx, eax
  0011d	8b 10		 mov	 edx, DWORD PTR [eax]
  0011f	ff 12		 call	 DWORD PTR [edx]
  00121	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00124	46		 inc	 esi
  00125	e8 00 00 00 00	 call	 ?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ ; CGraphicObjectInstance::GetCollisionInstanceCount
  0012a	3b f0		 cmp	 esi, eax
  0012c	72 e2		 jb	 SHORT $LL7@RenderColl
$LN6@RenderColl:

; 284  : 				}
; 285  : 			}
; 286  : 			if (po->pThingInstance && po->pThingInstance->isShow())

  0012e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00131	85 c9		 test	 ecx, ecx
  00133	74 39		 je	 SHORT $LN9@RenderColl
  00135	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  0013a	84 c0		 test	 al, al
  0013c	74 30		 je	 SHORT $LN9@RenderColl

; 287  : 			{
; 288  : 				DWORD j;
; 289  : 				for(j=0;j<po->pThingInstance->GetCollisionInstanceCount();j++)

  0013e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00141	33 f6		 xor	 esi, esi
  00143	e8 00 00 00 00	 call	 ?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ ; CGraphicObjectInstance::GetCollisionInstanceCount
  00148	85 c0		 test	 eax, eax
  0014a	74 22		 je	 SHORT $LN9@RenderColl
  0014c	0f 1f 40 00	 npad	 4
$LL10@RenderColl:

; 290  : 				{
; 291  : 					po->pThingInstance->GetCollisionInstanceData(j)->Render();

  00150	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00153	56		 push	 esi
  00154	e8 00 00 00 00	 call	 ?GetCollisionInstanceData@CGraphicObjectInstance@@QAEPAVCBaseCollisionInstance@@K@Z ; CGraphicObjectInstance::GetCollisionInstanceData
  00159	6a 03		 push	 3
  0015b	8b c8		 mov	 ecx, eax
  0015d	8b 10		 mov	 edx, DWORD PTR [eax]
  0015f	ff 12		 call	 DWORD PTR [edx]
  00161	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00164	46		 inc	 esi
  00165	e8 00 00 00 00	 call	 ?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ ; CGraphicObjectInstance::GetCollisionInstanceCount
  0016a	3b f0		 cmp	 esi, eax
  0016c	72 e2		 jb	 SHORT $LL10@RenderColl
$LN9@RenderColl:

; 292  : 				}
; 293  : 			}
; 294  : 			if (po->pDungeonBlock && po->pDungeonBlock->isShow())

  0016e	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00171	85 c9		 test	 ecx, ecx
  00173	74 39		 je	 SHORT $LN2@RenderColl
  00175	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  0017a	84 c0		 test	 al, al
  0017c	74 30		 je	 SHORT $LN2@RenderColl

; 295  : 			{
; 296  : 				DWORD j;
; 297  : 				for(j=0;j<po->pDungeonBlock->GetCollisionInstanceCount();j++)

  0017e	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00181	33 f6		 xor	 esi, esi
  00183	e8 00 00 00 00	 call	 ?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ ; CGraphicObjectInstance::GetCollisionInstanceCount
  00188	85 c0		 test	 eax, eax
  0018a	74 22		 je	 SHORT $LN2@RenderColl
  0018c	0f 1f 40 00	 npad	 4
$LL13@RenderColl:

; 298  : 				{
; 299  : 					po->pDungeonBlock->GetCollisionInstanceData(j)->Render();

  00190	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00193	56		 push	 esi
  00194	e8 00 00 00 00	 call	 ?GetCollisionInstanceData@CGraphicObjectInstance@@QAEPAVCBaseCollisionInstance@@K@Z ; CGraphicObjectInstance::GetCollisionInstanceData
  00199	6a 03		 push	 3
  0019b	8b c8		 mov	 ecx, eax
  0019d	8b 10		 mov	 edx, DWORD PTR [eax]
  0019f	ff 12		 call	 DWORD PTR [edx]
  001a1	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  001a4	46		 inc	 esi
  001a5	e8 00 00 00 00	 call	 ?GetCollisionInstanceCount@CGraphicObjectInstance@@QAEKXZ ; CGraphicObjectInstance::GetCollisionInstanceCount
  001aa	3b f0		 cmp	 esi, eax
  001ac	72 e2		 jb	 SHORT $LL13@RenderColl
$LN2@RenderColl:

; 272  : 
; 273  : 	for(i=0;i<GetObjectInstanceCount();i++)

  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  001b1	43		 inc	 ebx
  001b2	89 5d f8	 mov	 DWORD PTR _i$[ebp], ebx
  001b5	e8 00 00 00 00	 call	 ?GetObjectInstanceCount@CArea@@QBE?BKXZ ; CArea::GetObjectInstanceCount
  001ba	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  001bd	3b d8		 cmp	 ebx, eax
  001bf	0f 82 13 ff ff
	ff		 jb	 $LL4@RenderColl
  001c5	5f		 pop	 edi
$LN3@RenderColl:

; 300  : 				}
; 301  : 			}
; 302  : 		}
; 303  : 	}
; 304  : 
; 305  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  001c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001cc	6a 1b		 push	 27			; 0000001bH
  001ce	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 306  : 	STATEMANAGER.RestoreRenderState(D3DRS_CULLMODE);

  001d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001d9	6a 16		 push	 22			; 00000016H
  001db	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 307  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, TRUE);

  001e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001e6	6a 01		 push	 1
  001e8	68 89 00 00 00	 push	 137			; 00000089H
  001ed	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
  001f2	5e		 pop	 esi
  001f3	5b		 pop	 ebx

; 308  : }

  001f4	8b e5		 mov	 esp, ebp
  001f6	5d		 pop	 ebp
  001f7	c3		 ret	 0
?RenderCollision@CArea@@QAEXXZ ENDP			; CArea::RenderCollision
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?RenderEffect@CArea@@QAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 1
_i$2 = -4						; size = 4
?RenderEffect@CArea@@QAEXXZ PROC			; CArea::RenderEffect, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 134  : 	__UpdateEffectList();

  00008	e8 00 00 00 00	 call	 ?__UpdateEffectList@CArea@@IAEXXZ ; CArea::__UpdateEffectList

; 135  : 
; 136  : 	// Effect
; 137  : 	STATEMANAGER.SetTexture(0, NULL);

  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00013	6a 00		 push	 0
  00015	6a 00		 push	 0
  00017	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 138  : 	STATEMANAGER.SetTexture(1, NULL);

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00022	6a 00		 push	 0
  00024	6a 01		 push	 1
  00026	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 139  : 
; 140  : 	bool m_isDisableSortRendering=false;
; 141  : 
; 142  : 	if (m_isDisableSortRendering)
; 143  : 	{
; 144  : 		TEffectInstanceIterator i;
; 145  : 		for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end();)
; 146  : 		{
; 147  : 			CEffectInstance * pEffectInstance = i->second;
; 148  : 			pEffectInstance->Render();
; 149  : 			++i;
; 150  : 		}
; 151  : 	}
; 152  : 	else
; 153  : 	{
; 154  : 		static std::vector<CEffectInstance*> s_kVct_pkEftInstSort;

  0002b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00037	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?8??RenderEffect@CArea@@QAEXXZ@4HA
  0003f	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00045	0f 8f a9 00 00
	00		 jg	 $LN143@RenderEffe
$LN5@RenderEffe:

; 155  : 		s_kVct_pkEftInstSort.clear();

  0004b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A
  00051	8b f2		 mov	 esi, edx
  00053	89 35 04 00 00
	00		 mov	 DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+4, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00059	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0005f	8b 01		 mov	 eax, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 159  : 		for (i=rkMap_pkEftInstSrc.begin(); i!=rkMap_pkEftInstSrc.end(); ++i)

  00061	89 45 fc	 mov	 DWORD PTR _i$2[ebp], eax
  00064	3b c1		 cmp	 eax, ecx
  00066	74 53		 je	 SHORT $LN7@RenderEffe
  00068	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL8@RenderEffe:

; 160  : 			s_kVct_pkEftInstSort.push_back(i->second);

  00070	83 c0 14	 add	 eax, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00073	3b 35 08 00 00
	00		 cmp	 esi, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+8
  00079	74 15		 je	 SHORT $LN93@RenderEffe

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0007b	8b 00		 mov	 eax, DWORD PTR [eax]
  0007d	89 06		 mov	 DWORD PTR [esi], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0007f	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+4
  00085	83 c6 04	 add	 esi, 4
  00088	89 35 04 00 00
	00		 mov	 DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+4, esi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0008e	eb 12		 jmp	 SHORT $LN6@RenderEffe
$LN93@RenderEffe:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00090	50		 push	 eax
  00091	56		 push	 esi
  00092	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A
  00097	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectInstance@@@?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@QAEPAPAVCEffectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectInstance *,std::allocator<CEffectInstance *> >::_Emplace_reallocate<CEffectInstance * const &>
  0009c	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+4
$LN6@RenderEffe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 198  :         _Mybase::operator++();

  000a2	8d 4d fc	 lea	 ecx, DWORD PTR _i$2[ebp]
  000a5	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _i$2[ebp]
  000ad	3b 87 8c 00 00
	00		 cmp	 eax, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 159  : 		for (i=rkMap_pkEftInstSrc.begin(); i!=rkMap_pkEftInstSrc.end(); ++i)

  000b3	75 bb		 jne	 SHORT $LL8@RenderEffe
  000b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A
$LN7@RenderEffe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000bb	ff 75 fc	 push	 DWORD PTR $T1[ebp]
  000be	8b c6		 mov	 eax, esi
  000c0	2b c2		 sub	 eax, edx
  000c2	c1 f8 02	 sar	 eax, 2
  000c5	50		 push	 eax
  000c6	56		 push	 esi
  000c7	52		 push	 edx
  000c8	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCEffectInstance@@UCArea_LessEffectInstancePtrRenderOrder@@@std@@YAXPAPAVCEffectInstance@@0HUCArea_LessEffectInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CEffectInstance * *,CArea_LessEffectInstancePtrRenderOrder>

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  000cd	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A+4

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000d3	83 c4 10	 add	 esp, 16			; 00000010H

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000d6	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@4V?$vector@PAVCEffectInstance@@V?$allocator@PAVCEffectInstance@@@std@@@std@@A
  000dc	3b f7		 cmp	 esi, edi
  000de	74 0e		 je	 SHORT $LN125@RenderEffe
$LL126@RenderEffe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 128  : 		pkEftInst->Render();

  000e0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000e2	e8 00 00 00 00	 call	 ?Render@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000e7	83 c6 04	 add	 esi, 4
  000ea	3b f7		 cmp	 esi, edi
  000ec	75 f2		 jne	 SHORT $LL126@RenderEffe
$LN125@RenderEffe:
  000ee	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 166  : }

  000ef	5e		 pop	 esi
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
$LN143@RenderEffe:

; 139  : 
; 140  : 	bool m_isDisableSortRendering=false;
; 141  : 
; 142  : 	if (m_isDisableSortRendering)
; 143  : 	{
; 144  : 		TEffectInstanceIterator i;
; 145  : 		for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end();)
; 146  : 		{
; 147  : 			CEffectInstance * pEffectInstance = i->second;
; 148  : 			pEffectInstance->Render();
; 149  : 			++i;
; 150  : 		}
; 151  : 	}
; 152  : 	else
; 153  : 	{
; 154  : 		static std::vector<CEffectInstance*> s_kVct_pkEftInstSort;

  000f4	68 00 00 00 00	 push	 OFFSET ?$TSS0@?8??RenderEffect@CArea@@QAEXXZ@4HA
  000f9	e8 00 00 00 00	 call	 __Init_thread_header
  000fe	83 c4 04	 add	 esp, 4
  00101	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?8??RenderEffect@CArea@@QAEXXZ@4HA, -1
  00108	0f 85 3d ff ff
	ff		 jne	 $LN5@RenderEffe
  0010e	68 00 00 00 00	 push	 OFFSET ??__Fs_kVct_pkEftInstSort@?8??RenderEffect@CArea@@QAEXXZ@YAXXZ ; `CArea::RenderEffect'::`9'::`dynamic atexit destructor for 's_kVct_pkEftInstSort''
  00113	e8 00 00 00 00	 call	 _atexit
  00118	68 00 00 00 00	 push	 OFFSET ?$TSS0@?8??RenderEffect@CArea@@QAEXXZ@4HA
  0011d	e8 00 00 00 00	 call	 __Init_thread_footer
  00122	83 c4 08	 add	 esp, 8
  00125	e9 21 ff ff ff	 jmp	 $LN5@RenderEffe
?RenderEffect@CArea@@QAEXXZ ENDP			; CArea::RenderEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Render@CArea@@QAEXXZ
_TEXT	SEGMENT
__Loc$1 = -36						; size = 12
_aCRCWithNumber$2 = -24					; size = 8
$T3 = -16						; size = 1
_pkThingInst$ = -16					; size = 4
_pkThingInst$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
?Render@CArea@@QAEXXZ PROC				; CArea::Render, COMDAT
; _this$ = ecx

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	89 7d f8	 mov	 DWORD PTR _this$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000d	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
  00010	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 211  : 		while (i!=m_AniThingCloneInstanceVector.end())

  00013	74 0f		 je	 SHORT $LN3@Render
$LL2@Render:

; 214  : 			pkThingInst->Deform();

  00015	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00017	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 214  : 			pkThingInst->Deform();

  0001a	e8 00 00 00 00	 call	 ?Deform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Deform
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0001f	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 211  : 		while (i!=m_AniThingCloneInstanceVector.end())

  00022	75 f1		 jne	 SHORT $LL2@Render
$LN3@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00024	8b 77 28	 mov	 esi, DWORD PTR [edi+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 222  : 	m_kRenderedThingInstanceCRCWithNumberVector.clear();

  00027	8d 47 6c	 lea	 eax, DWORD PTR [edi+108]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0002f	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax

; 223  : 	m_kRenderedGrapphicThingInstanceVector.clear();

  00032	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00035	89 47 7c	 mov	 DWORD PTR [edi+124], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00038	3b 77 2c	 cmp	 esi, DWORD PTR [edi+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 226  : 	while (i!=m_ThingCloneInstaceVector.end())

  0003b	0f 84 d7 00 00
	00		 je	 $LN5@Render
  00041	53		 push	 ebx
$LL4@Render:

; 228  : 		pkThingInst=*i++;

  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 229  : 		if (pkThingInst->Render())

  00044	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00046	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 228  : 		pkThingInst=*i++;

  00049	89 45 f4	 mov	 DWORD PTR _pkThingInst$1$[ebp], eax
  0004c	89 45 f0	 mov	 DWORD PTR _pkThingInst$[ebp], eax

; 229  : 		if (pkThingInst->Render())

  0004f	e8 00 00 00 00	 call	 ?Render@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::Render
  00054	84 c0		 test	 al, al
  00056	0f 84 ad 00 00
	00		 je	 $LN157@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0005c	8d 4d f0	 lea	 ecx, DWORD PTR _pkThingInst$[ebp]
  0005f	51		 push	 ecx
  00060	8d 4d dc	 lea	 ecx, DWORD PTR __Loc$1[ebp]
  00063	51		 push	 ecx
  00064	8d 4f 64	 lea	 ecx, DWORD PTR [edi+100]
  00067	e8 00 00 00 00	 call	 ??$_Find_lower_bound@PAVCGraphicThingInstance@@@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@@1@ABQAVCGraphicThingInstance@@@Z ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::_Find_lower_bound<CGraphicThingInstance *>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0006c	8b 5d e4	 mov	 ebx, DWORD PTR __Loc$1[ebp+8]
  0006f	8b 45 f4	 mov	 eax, DWORD PTR _pkThingInst$1$[ebp]
  00072	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  00076	75 05		 jne	 SHORT $LN59@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00078	3b 43 10	 cmp	 eax, DWORD PTR [ebx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0007b	73 03		 jae	 SHORT $LN58@Render
$LN59@Render:

; 1463 :         return _Get_scary()->_Myhead;

  0007d	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
$LN58@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00080	8b 4f 7c	 mov	 ecx, DWORD PTR [edi+124]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 232  : 			DWORD dwCRC = (*aGraphicThingInstanceCRCMapIterator).second;

  00083	8b 5b 14	 mov	 ebx, DWORD PTR [ebx+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00086	3b 8f 80 00 00
	00		 cmp	 ecx, DWORD PTR [edi+128]
  0008c	74 08		 je	 SHORT $LN80@Render

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0008e	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00090	83 47 7c 04	 add	 DWORD PTR [edi+124], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00094	eb 0d		 jmp	 SHORT $LN79@Render
$LN80@Render:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00096	8d 45 f0	 lea	 eax, DWORD PTR _pkThingInst$[ebp]
  00099	50		 push	 eax
  0009a	51		 push	 ecx
  0009b	8d 4f 78	 lea	 ecx, DWORD PTR [edi+120]
  0009e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
$LN79@Render:

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a6	8b 7f 70	 mov	 edi, DWORD PTR [edi+112]
  000a9	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5666 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ab	3b c7		 cmp	 eax, edi
  000ad	74 0c		 je	 SHORT $LN155@Render
  000af	90		 npad	 1
$LL101@Render:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h

; 178  : 				if (rCRCWithNumber.dwCRC == m_dwCRC)

  000b0	39 18		 cmp	 DWORD PTR [eax], ebx
  000b2	74 07		 je	 SHORT $LN155@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5666 :     for (; _UFirst != _ULast; ++_UFirst) {

  000b4	83 c0 08	 add	 eax, 8
  000b7	3b c7		 cmp	 eax, edi
  000b9	75 f5		 jne	 SHORT $LL101@Render
$LN155@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ??$_Refancy@PAUSCRCWithNumber@CArea@@$0A@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@@Z ; std::_Refancy<CArea::SCRCWithNumber *,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 238  : 			if ( m_kRenderedThingInstanceCRCWithNumberVector.end() == aCRCWithNumberVectorIterator)

  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000c4	83 c4 04	 add	 esp, 4

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c7	3b f8		 cmp	 edi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 238  : 			if ( m_kRenderedThingInstanceCRCWithNumberVector.end() == aCRCWithNumberVectorIterator)

  000c9	75 36		 jne	 SHORT $LN7@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000cb	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 241  : 				aCRCWithNumber.dwCRC = dwCRC;

  000ce	89 5d e8	 mov	 DWORD PTR _aCRCWithNumber$2[ebp], ebx

; 242  : 				aCRCWithNumber.dwNumber = 1;

  000d1	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _aCRCWithNumber$2[ebp+4], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000d8	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  000db	74 12		 je	 SHORT $LN122@Render

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000dd	8b 7d f8	 mov	 edi, DWORD PTR _this$1$[ebp]

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000e0	89 18		 mov	 DWORD PTR [eax], ebx
  000e2	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000e9	83 41 04 08	 add	 DWORD PTR [ecx+4], 8

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000ed	eb 1d		 jmp	 SHORT $LN8@Render
$LN122@Render:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ef	8d 55 e8	 lea	 edx, DWORD PTR _aCRCWithNumber$2[ebp]
  000f2	52		 push	 edx
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSCRCWithNumber@CArea@@@?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAEPAUSCRCWithNumber@CArea@@QAU23@ABU23@@Z ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::_Emplace_reallocate<CArea::SCRCWithNumber const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 244  : 			}

  000f9	8b 7d f8	 mov	 edi, DWORD PTR _this$1$[ebp]
  000fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000ff	eb 0b		 jmp	 SHORT $LN8@Render
$LN7@Render:

; 245  : 			else
; 246  : 			{
; 247  : 				TCRCWithNumber & rCRCWithNumber = *aCRCWithNumberVectorIterator;
; 248  : 				rCRCWithNumber.dwNumber += 1;

  00101	ff 40 04	 inc	 DWORD PTR [eax+4]
  00104	8b 7d f8	 mov	 edi, DWORD PTR _this$1$[ebp]
  00107	eb 03		 jmp	 SHORT $LN8@Render
$LN157@Render:

; 229  : 		if (pkThingInst->Render())

  00109	8d 4f 6c	 lea	 ecx, DWORD PTR [edi+108]
$LN8@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0010c	3b 77 2c	 cmp	 esi, DWORD PTR [edi+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 226  : 	while (i!=m_ThingCloneInstaceVector.end())

  0010f	0f 85 2d ff ff
	ff		 jne	 $LL4@Render
  00115	8b 11		 mov	 edx, DWORD PTR [ecx]
  00117	5b		 pop	 ebx
$LN5@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00118	8b 4f 70	 mov	 ecx, DWORD PTR [edi+112]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 4138 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  0011b	8b c1		 mov	 eax, ecx
  0011d	ff 75 f0	 push	 DWORD PTR $T3[ebp]
  00120	2b c2		 sub	 eax, edx
  00122	c1 f8 03	 sar	 eax, 3
  00125	50		 push	 eax
  00126	51		 push	 ecx
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
  0012d	83 c4 10	 add	 esp, 16			; 00000010H
  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 253  : }

  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c3		 ret	 0
?Render@CArea@@QAEXXZ ENDP				; CArea::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?UpdateAroundAmbience@CArea@@QAEXMMM@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_fZ$ = 16						; size = 4
?UpdateAroundAmbience@CArea@@QAEXMMM@Z PROC		; CArea::UpdateAroundAmbience, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00007	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  0000a	3b 77 5c	 cmp	 esi, DWORD PTR [edi+92]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 109  : 	for (i = m_AmbienceCloneInstanceVector.begin(); i != m_AmbienceCloneInstanceVector.end(); ++i)

  0000d	74 33		 je	 SHORT $LN3@UpdateArou
  0000f	90		 npad	 1
$LL4@UpdateArou:

; 110  : 	{
; 111  : 		TAmbienceInstance * pInstance = *i;
; 112  : 		pInstance->__Update(fX, fY, fZ);

  00010	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fZ$[ebp]
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00020	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00025	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	e8 00 00 00 00	 call	 ?__Update@SAmbienceInstance@CArea@@QAEXMMM@Z ; CArea::SAmbienceInstance::__Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0003a	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  0003d	3b 77 5c	 cmp	 esi, DWORD PTR [edi+92]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 109  : 	for (i = m_AmbienceCloneInstanceVector.begin(); i != m_AmbienceCloneInstanceVector.end(); ++i)

  00040	75 ce		 jne	 SHORT $LL4@UpdateArou
$LN3@UpdateArou:
  00042	5f		 pop	 edi

; 113  : 	}
; 114  : }

  00043	5e		 pop	 esi
  00044	5d		 pop	 ebp
  00045	c2 0c 00	 ret	 12			; 0000000cH
?UpdateAroundAmbience@CArea@@QAEXMMM@Z ENDP		; CArea::UpdateAroundAmbience
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Update@CArea@@QAEXXZ
_TEXT	SEGMENT
?Update@CArea@@QAEXXZ PROC				; CArea::Update, COMDAT
; _this$ = ecx

; 102  : 	__UpdateAniThingList();

  00000	e9 00 00 00 00	 jmp	 ?__UpdateAniThingList@CArea@@IAEXXZ ; CArea::__UpdateAniThingList
?Update@CArea@@QAEXXZ ENDP				; CArea::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?RefreshPortal@CArea@@QAEXXZ
_TEXT	SEGMENT
$T2 = -92						; size = 12
__Loc$3 = -80						; size = 12
__Loc$4 = -80						; size = 12
__Loc$5 = -68						; size = 12
$T6 = -56						; size = 8
_kSet_ShowingObjectInstance$ = -48			; size = 8
_pObjectInstance$7 = -40				; size = 4
_pInstance$8 = -40					; size = 4
tv1573 = -36						; size = 4
$T9 = -32						; size = 4
_this$1$ = -28						; size = 4
_i$1$ = -28						; size = 4
_this$1$ = -24						; size = 4
tv1572 = -24						; size = 4
_pInstance$1$ = -20					; size = 4
__Myhead$10 = -20					; size = 4
__Pnode$11 = -20					; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RefreshPortal@CArea@@QAEXXZ PROC			; CArea::RefreshPortal, COMDAT
; _this$ = ecx

; 1035 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RefreshPortal@CArea@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d f0	 mov	 DWORD PTR _this$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0002d	6a 14		 push	 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0002f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _kSet_ShowingObjectInstance$[ebp], 0
  00036	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _kSet_ShowingObjectInstance$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00042	8b d8		 mov	 ebx, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00044	8d 45 ec	 lea	 eax, DWORD PTR __Pnode$11[ebp]
  00047	50		 push	 eax
  00048	53		 push	 ebx
  00049	89 5d ec	 mov	 DWORD PTR __Pnode$11[ebp], ebx
  0004c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00051	8d 45 ec	 lea	 eax, DWORD PTR __Pnode$11[ebp]
  00054	50		 push	 eax
  00055	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0005e	8d 4d ec	 lea	 ecx, DWORD PTR __Pnode$11[ebp]
  00061	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  00064	51		 push	 ecx
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  0006b	66 c7 43 0c 01
	01		 mov	 WORD PTR [ebx+12], 257	; 00000101H
  00071	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00074	89 5d d0	 mov	 DWORD PTR _kSet_ShowingObjectInstance$[ebp], ebx

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00077	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1036 : 	std::set<TObjectInstance *> kSet_ShowingObjectInstance;

  00079	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00080	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00084	75 23		 jne	 SHORT $LN52@RefreshPor
$LL51@RefreshPor:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00086	ff 76 08	 push	 DWORD PTR [esi+8]
  00089	8d 45 d0	 lea	 eax, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  0008c	50		 push	 eax
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Erase_tree<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00094	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00096	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00098	6a 14		 push	 20			; 00000014H
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a0	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  000a3	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  000a7	74 dd		 je	 SHORT $LL51@RefreshPor
$LN52@RefreshPor:

; 1449 :         _Head->_Parent  = _Head;

  000a9	89 5b 04	 mov	 DWORD PTR [ebx+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000ac	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1450 :         _Head->_Left    = _Head;

  000b1	89 1b		 mov	 DWORD PTR [ebx], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  000b3	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1451 :         _Head->_Right   = _Head;

  000b5	89 5b 08	 mov	 DWORD PTR [ebx+8], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000b8	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000bb	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  000be	2b cb		 sub	 ecx, ebx
  000c0	f7 e9		 imul	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1452 :         _Scary->_Mysize = 0;

  000c2	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _kSet_ShowingObjectInstance$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000c9	c1 fa 03	 sar	 edx, 3
  000cc	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  000ce	89 75 e4	 mov	 DWORD PTR _i$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000d1	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d4	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  000d6	0f 84 49 01 00
	00		 je	 $LN246@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  000dc	33 c9		 xor	 ecx, ecx
  000de	89 4d e8	 mov	 DWORD PTR tv1572[ebp], ecx
$LL4@RefreshPor:

; 1504 :         return _My_data._Myfirst[_Pos];

  000e1	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1041 : 		TObjectInstance * pInstance = m_ObjectInstanceVector[i];

  000e4	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]

; 1042 : 
; 1043 : 		for (int j = 0; j < PORTAL_ID_MAX_NUM; ++j)

  000e7	33 f6		 xor	 esi, esi
  000e9	89 45 ec	 mov	 DWORD PTR _pInstance$1$[ebp], eax
  000ec	89 45 d8	 mov	 DWORD PTR _pInstance$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  000ef	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  000f2	03 c1		 add	 eax, ecx
  000f4	89 45 dc	 mov	 DWORD PTR tv1573[ebp], eax
  000f7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL7@RefreshPor:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1045 : 			BYTE byPortalID = rData.abyPortalID[j];

  00100	8a 04 30	 mov	 al, BYTE PTR [eax+esi]

; 1046 : 			if (0 == byPortalID)

  00103	84 c0		 test	 al, al
  00105	0f 84 ea 00 00
	00		 je	 $LN2@RefreshPor

; 1049 : 			if (m_kSet_ShowingPortalID.end() == m_kSet_ShowingPortalID.find(byPortalID))

  0010b	0f b6 d8	 movzx	 ebx, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0010e	8d 8f 98 00 00
	00		 lea	 ecx, DWORD PTR [edi+152]
  00114	8d 45 e0	 lea	 eax, DWORD PTR $T9[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1049 : 			if (m_kSet_ShowingPortalID.end() == m_kSet_ShowingPortalID.find(byPortalID))

  00117	89 5d e0	 mov	 DWORD PTR $T9[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0011a	50		 push	 eax
  0011b	8d 45 b0	 lea	 eax, DWORD PTR __Loc$4[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@HPAX@std@@@1@ABH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00124	8b 45 b8	 mov	 eax, DWORD PTR __Loc$4[ebp+8]
  00127	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0012b	75 05		 jne	 SHORT $LN71@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0012d	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00130	7d 06		 jge	 SHORT $LN70@RefreshPor
$LN71@RefreshPor:

; 1463 :         return _Get_scary()->_Myhead;

  00132	8b 87 98 00 00
	00		 mov	 eax, DWORD PTR [edi+152]
$LN70@RefreshPor:

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00138	39 87 98 00 00
	00		 cmp	 DWORD PTR [edi+152], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1049 : 			if (m_kSet_ShowingPortalID.end() == m_kSet_ShowingPortalID.find(byPortalID))

  0013e	75 11		 jne	 SHORT $LN12@RefreshPor

; 1042 : 
; 1043 : 		for (int j = 0; j < PORTAL_ID_MAX_NUM; ++j)

  00140	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
  00143	46		 inc	 esi
  00144	8b 45 dc	 mov	 eax, DWORD PTR tv1573[ebp]
  00147	83 fe 08	 cmp	 esi, 8
  0014a	7c b4		 jl	 SHORT $LL7@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0014c	e9 a4 00 00 00	 jmp	 $LN2@RefreshPor
$LN12@RefreshPor:

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00151	8d 45 d8	 lea	 eax, DWORD PTR _pInstance$8[ebp]
  00154	50		 push	 eax
  00155	8d 45 a4	 lea	 eax, DWORD PTR $T2[ebp]
  00158	50		 push	 eax
  00159	8d 4d d0	 lea	 ecx, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  0015c	e8 00 00 00 00	 call	 ??$_Find_lower_bound@PAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@ABQAUSObjectInstance@CArea@@@Z ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::_Find_lower_bound<CArea::SObjectInstance *>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00161	8b 7d ec	 mov	 edi, DWORD PTR _pInstance$1$[ebp]

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00164	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00168	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0016b	66 0f d6 45 bc	 movq	 QWORD PTR __Loc$5[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00170	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00174	75 05		 jne	 SHORT $LN245@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00176	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00179	73 77		 jae	 SHORT $LN247@RefreshPor
$LN245@RefreshPor:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0017b	81 7d d4 cc cc
	cc 0c		 cmp	 DWORD PTR _kSet_ShowingObjectInstance$[ebp+4], 214748364 ; 0cccccccH
  00182	0f 84 a3 01 00
	00		 je	 $LN229@RefreshPor

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00188	8b 45 d0	 mov	 eax, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  0018b	89 45 ec	 mov	 DWORD PTR __Myhead$10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0018e	8d 45 d0	 lea	 eax, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  00191	89 45 c8	 mov	 DWORD PTR $T6[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00194	6a 14		 push	 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00196	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0019a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001a1	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  001a6	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  001a8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  001ac	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$10[ebp]
  001af	50		 push	 eax
  001b0	56		 push	 esi
  001b1	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  001b4	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  001b9	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$10[ebp]
  001bc	50		 push	 eax
  001bd	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  001c6	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$10[ebp]
  001c9	50		 push	 eax
  001ca	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<CArea::SObjectInstance *,void *> *,std::_Tree_node<CArea::SObjectInstance *,void *> * &>
  001d3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  001d6	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  001dc	8d 4d d0	 lea	 ecx, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  001df	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  001e6	56		 push	 esi
  001e7	ff 75 c0	 push	 DWORD PTR __Loc$5[ebp+4]
  001ea	ff 75 bc	 push	 DWORD PTR __Loc$5[ebp]
  001ed	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@PAUSObjectInstance@CArea@@@std@@@std@@QAEPAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<CArea::SObjectInstance *> >::_Insert_node
$LN247@RefreshPor:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  001f2	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN2@RefreshPor:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001f5	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  001f8	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001fd	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  00200	2b cb		 sub	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  00202	8b 75 e4	 mov	 esi, DWORD PTR _i$1$[ebp]
  00205	83 45 e8 30	 add	 DWORD PTR tv1572[ebp], 48 ; 00000030H
  00209	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0020a	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  0020c	89 75 e4	 mov	 DWORD PTR _i$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0020f	c1 fa 03	 sar	 edx, 3
  00212	8b c2		 mov	 eax, edx
  00214	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00217	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1038 : 	for (DWORD i = 0; i < m_ObjectDataVector.size(); ++i)

  00219	3b f0		 cmp	 esi, eax
  0021b	73 08		 jae	 SHORT $LN246@RefreshPor
  0021d	8b 4d e8	 mov	 ecx, DWORD PTR tv1572[ebp]
  00220	e9 bc fe ff ff	 jmp	 $LL4@RefreshPor
$LN246@RefreshPor:

; 1050 : 				continue;
; 1051 : 
; 1052 : 			kSet_ShowingObjectInstance.insert(pInstance);
; 1053 : 			break;
; 1054 : 		}
; 1055 : 	}
; 1056 : 
; 1057 : 	///////////////////////////////////////////////////////////////////////////////////////////////
; 1058 : 
; 1059 : 	m_TreeCloneInstaceVector.clear();

  00225	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00228	8d 5f 1c	 lea	 ebx, DWORD PTR [edi+28]
  0022b	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1060 : 	m_ThingCloneInstaceVector.clear();

  0022e	8d 4f 28	 lea	 ecx, DWORD PTR [edi+40]
  00231	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1061 : 	m_DungeonBlockCloneInstanceVector.clear();

  00233	8d 57 34	 lea	 edx, DWORD PTR [edi+52]
  00236	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00239	8b 02		 mov	 eax, DWORD PTR [edx]
  0023b	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0023e	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1060 : 	m_ThingCloneInstaceVector.clear();

  00241	89 4d e4	 mov	 DWORD PTR _this$1$[ebp], ecx

; 1061 : 	m_DungeonBlockCloneInstanceVector.clear();

  00244	89 55 e8	 mov	 DWORD PTR _this$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00247	3b 77 14	 cmp	 esi, DWORD PTR [edi+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1064 : 	for(it = m_ObjectInstanceVector.begin(); it != m_ObjectInstanceVector.end(); ++it)

  0024a	0f 84 c1 00 00
	00		 je	 $LN9@RefreshPor
  00250	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
$LL10@RefreshPor:

; 1065 : 	{
; 1066 : 		TObjectInstance * pObjectInstance = *it;
; 1067 : 
; 1068 : 		if (m_bPortalEnable)

  00253	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  0025a	8b 3e		 mov	 edi, DWORD PTR [esi]
  0025c	89 7d d8	 mov	 DWORD PTR _pObjectInstance$7[ebp], edi
  0025f	74 2d		 je	 SHORT $LN14@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00261	8d 45 d8	 lea	 eax, DWORD PTR _pObjectInstance$7[ebp]
  00264	50		 push	 eax
  00265	8d 45 b0	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00268	50		 push	 eax
  00269	8d 4d d0	 lea	 ecx, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  0026c	e8 00 00 00 00	 call	 ??$_Find_lower_bound@PAUSObjectInstance@CArea@@@?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@1@ABQAUSObjectInstance@CArea@@@Z ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::_Find_lower_bound<CArea::SObjectInstance *>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00271	8b 45 b8	 mov	 eax, DWORD PTR __Loc$3[ebp+8]
  00274	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00278	0f 85 7e 00 00
	00		 jne	 $LN8@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0027e	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00281	72 79		 jb	 SHORT $LN8@RefreshPor

; 232  :         return this->_Ptr == _Right._Ptr;

  00283	39 45 d0	 cmp	 DWORD PTR _kSet_ShowingObjectInstance$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1070 : 			if (kSet_ShowingObjectInstance.end() == kSet_ShowingObjectInstance.find(pObjectInstance))

  00286	74 74		 je	 SHORT $LN8@RefreshPor
  00288	8b 4d e4	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0028b	8b 55 e8	 mov	 edx, DWORD PTR _this$1$[ebp]
$LN14@RefreshPor:

; 1071 : 				continue;
; 1072 : 		}
; 1073 : 
; 1074 : 		if (prt::PROPERTY_TYPE_TREE == pObjectInstance->dwType)

  0028e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00291	83 f8 01	 cmp	 eax, 1
  00294	75 20		 jne	 SHORT $LN15@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00296	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1077 : 			m_TreeCloneInstaceVector.push_back(pObjectInstance->pTree);

  00299	83 c7 0c	 add	 edi, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0029c	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  0029f	74 0a		 je	 SHORT $LN203@RefreshPor

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002a1	8b 07		 mov	 eax, DWORD PTR [edi]
  002a3	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  002a5	83 43 04 04	 add	 DWORD PTR [ebx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002a9	eb 51		 jmp	 SHORT $LN8@RefreshPor
$LN203@RefreshPor:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002ab	57		 push	 edi
  002ac	51		 push	 ecx
  002ad	8b cb		 mov	 ecx, ebx
  002af	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCSpeedTreeWrapper@@@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAEPAPAVCSpeedTreeWrapper@@QAPAV2@ABQAV2@@Z ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Emplace_reallocate<CSpeedTreeWrapper * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1078 : 		}

  002b4	eb 46		 jmp	 SHORT $LN8@RefreshPor
$LN15@RefreshPor:

; 1079 : 		else if (prt::PROPERTY_TYPE_BUILDING == pObjectInstance->dwType)

  002b6	83 f8 02	 cmp	 eax, 2
  002b9	75 1e		 jne	 SHORT $LN17@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1082 : 			m_ThingCloneInstaceVector.push_back(pObjectInstance->pThingInstance);

  002be	83 c7 14	 add	 edi, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002c1	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  002c4	74 0a		 je	 SHORT $LN210@RefreshPor

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002c6	8b 07		 mov	 eax, DWORD PTR [edi]
  002c8	89 02		 mov	 DWORD PTR [edx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  002ca	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002ce	eb 2c		 jmp	 SHORT $LN8@RefreshPor
$LN210@RefreshPor:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002d0	57		 push	 edi
  002d1	52		 push	 edx
  002d2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1083 : 		}

  002d7	eb 23		 jmp	 SHORT $LN8@RefreshPor
$LN17@RefreshPor:

; 1084 : 		else if (prt::PROPERTY_TYPE_DUNGEON_BLOCK == pObjectInstance->dwType)

  002d9	83 f8 05	 cmp	 eax, 5
  002dc	75 1e		 jne	 SHORT $LN8@RefreshPor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002de	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1087 : 			m_DungeonBlockCloneInstanceVector.push_back(pObjectInstance->pDungeonBlock);

  002e1	83 c7 24	 add	 edi, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002e4	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  002e7	74 0a		 je	 SHORT $LN217@RefreshPor

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002e9	8b 07		 mov	 eax, DWORD PTR [edi]
  002eb	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  002ed	83 42 04 04	 add	 DWORD PTR [edx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002f1	eb 09		 jmp	 SHORT $LN8@RefreshPor
$LN217@RefreshPor:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002f3	57		 push	 edi
  002f4	51		 push	 ecx
  002f5	8b ca		 mov	 ecx, edx
  002f7	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonBlock@@@?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAEPAPAVCDungeonBlock@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::_Emplace_reallocate<CDungeonBlock * const &>
$LN8@RefreshPor:

; 149  :         return _Ptr == _Right._Ptr;

  002fc	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]

; 75   :         ++_Ptr;

  002ff	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1064 : 	for(it = m_ObjectInstanceVector.begin(); it != m_ObjectInstanceVector.end(); ++it)

  00302	8b 4d e4	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00305	8b 55 e8	 mov	 edx, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00308	3b 70 14	 cmp	 esi, DWORD PTR [eax+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1064 : 	for(it = m_ObjectInstanceVector.begin(); it != m_ObjectInstanceVector.end(); ++it)

  0030b	0f 85 42 ff ff
	ff		 jne	 $LL10@RefreshPor
$LN9@RefreshPor:
  00311	8d 4d d0	 lea	 ecx, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  00314	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >::~_Tree<std::_Tset_traits<CArea::SObjectInstance *,std::less<CArea::SObjectInstance *>,std::allocator<CArea::SObjectInstance *>,0> >

; 1090 : }

  00319	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0031c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00323	59		 pop	 ecx
  00324	5f		 pop	 edi
  00325	5e		 pop	 esi
  00326	5b		 pop	 ebx
  00327	8b e5		 mov	 esp, ebp
  00329	5d		 pop	 ebp
  0032a	c3		 ret	 0
$LN229@RefreshPor:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  0032b	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN250@RefreshPor:
  00330	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RefreshPortal@CArea@@QAEXXZ$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _kSet_ShowingObjectInstance$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$set@PAUSObjectInstance@CArea@@U?$less@PAUSObjectInstance@CArea@@@std@@V?$allocator@PAUSObjectInstance@CArea@@@4@@std@@QAE@XZ
__unwindfunclet$?RefreshPortal@CArea@@QAEXXZ$4:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@PAUSObjectInstance@CArea@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<CArea::SObjectInstance *,void *> > >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?RefreshPortal@CArea@@QAEXXZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RefreshPortal@CArea@@QAEXXZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RefreshPortal@CArea@@QAEXXZ ENDP			; CArea::RefreshPortal
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?AddShowingPortalID@CArea@@QAEXH@Z
_TEXT	SEGMENT
__Loc$2 = -36						; size = 12
$T3 = -24						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Myhead$5 = 8						; size = 4
_iNum$ = 8						; size = 4
?AddShowingPortalID@CArea@@QAEXH@Z PROC			; CArea::AddShowingPortalID, COMDAT
; _this$ = ecx

; 1030 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddShowingPortalID@CArea@@QAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00028	8d 45 08	 lea	 eax, DWORD PTR _iNum$[ebp]
  0002b	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1031 : 	m_kSet_ShowingPortalID.insert(iNum);

  0002c	8d b9 98 00 00
	00		 lea	 edi, DWORD PTR [ecx+152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00032	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  00035	8b cf		 mov	 ecx, edi
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@HPAX@std@@@1@ABH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0003d	8b 5d 08	 mov	 ebx, DWORD PTR _iNum$[ebp]

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00040	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00044	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00047	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004c	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00050	75 05		 jne	 SHORT $LN11@AddShowing
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00052	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00055	7d 66		 jge	 SHORT $LN57@AddShowing
$LN11@AddShowing:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00057	81 7f 04 cc cc
	cc 0c		 cmp	 DWORD PTR [edi+4], 214748364 ; 0cccccccH
  0005e	74 71		 je	 SHORT $LN70@AddShowing

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00060	8b 07		 mov	 eax, DWORD PTR [edi]
  00062	89 45 08	 mov	 DWORD PTR __Myhead$5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00065	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00068	6a 14		 push	 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0006a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00071	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00078	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  0007d	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0007f	8d 45 08	 lea	 eax, DWORD PTR __Myhead$5[ebp]
  00082	50		 push	 eax
  00083	56		 push	 esi
  00084	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00087	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0008c	8d 45 08	 lea	 eax, DWORD PTR __Myhead$5[ebp]
  0008f	50		 push	 eax
  00090	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00093	51		 push	 ecx
  00094	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00099	8d 45 08	 lea	 eax, DWORD PTR __Myhead$5[ebp]
  0009c	50		 push	 eax
  0009d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
  000a6	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  000a9	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000af	8b cf		 mov	 ecx, edi
  000b1	56		 push	 esi
  000b2	ff 75 e0	 push	 DWORD PTR __Loc$2[ebp+4]
  000b5	ff 75 dc	 push	 DWORD PTR __Loc$2[ebp]
  000b8	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEPAU?$_Tree_node@HPAX@2@U?$_Tree_id@PAU?$_Tree_node@HPAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node
$LN57@AddShowing:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1032 : }

  000bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c7	59		 pop	 ecx
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 04 00	 ret	 4
$LN70@AddShowing:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  000d1	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN68@AddShowing:
  000d6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddShowingPortalID@CArea@@QAEXH@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AddShowingPortalID@CArea@@QAEXH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddShowingPortalID@CArea@@QAEXH@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddShowingPortalID@CArea@@QAEXH@Z ENDP			; CArea::AddShowingPortalID
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?ClearPortal@CArea@@QAEXXZ
_TEXT	SEGMENT
?ClearPortal@CArea@@QAEXXZ PROC				; CArea::ClearPortal, COMDAT
; _this$ = ecx

; 1025 : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 1026 : 	m_kSet_ShowingPortalID.clear();

  00002	8d 99 98 00 00
	00		 lea	 ebx, DWORD PTR [ecx+152]
  00008	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  00009	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  0000b	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0000e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00012	75 20		 jne	 SHORT $LN7@ClearPorta
$LL6@ClearPorta:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	53		 push	 ebx
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@HPAX@std@@@1@PAU?$_Tree_node@HPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL6@ClearPorta
$LN7@ClearPorta:

; 1449 :         _Head->_Parent  = _Head;

  00034	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  00037	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  00039	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00045	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1027 : }

  00046	c3		 ret	 0
?ClearPortal@CArea@@QAEXXZ ENDP				; CArea::ClearPortal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?EnablePortal@CArea@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?EnablePortal@CArea@@QAEXH@Z PROC			; CArea::EnablePortal, COMDAT
; _this$ = ecx

; 1017 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1018 : 	if (m_bPortalEnable == bFlag)

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	39 81 94 00 00
	00		 cmp	 DWORD PTR [ecx+148], eax
  0000c	74 06		 je	 SHORT $LN1@EnablePort

; 1019 : 		return;
; 1020 : 
; 1021 : 	m_bPortalEnable = bFlag;

  0000e	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax
$LN1@EnablePort:

; 1022 : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?EnablePortal@CArea@@QAEXH@Z ENDP			; CArea::EnablePortal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?GetObjectInstancePointer@CArea@@QBE?B_NABKPAPBUSObjectInstance@1@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_ppObjectInstance$ = 12					; size = 4
?GetObjectInstancePointer@CArea@@QBE?B_NABKPAPBUSObjectInstance@1@@Z PROC ; CArea::GetObjectInstancePointer, COMDAT
; _this$ = ecx

; 1008 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1009 : 	if (dwIndex >= m_ObjectInstanceVector.size())

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1008 : {

  00009	56		 push	 esi

; 1009 : 	if (dwIndex >= m_ObjectInstanceVector.size())

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000c	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0000f	2b c2		 sub	 eax, edx
  00011	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1009 : 	if (dwIndex >= m_ObjectInstanceVector.size())

  00014	3b f0		 cmp	 esi, eax
  00016	72 07		 jb	 SHORT $LN2@GetObjectI

; 1010 : 		return false;

  00018	32 c0		 xor	 al, al
  0001a	5e		 pop	 esi

; 1014 : }

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
$LN2@GetObjectI:

; 1011 : 
; 1012 : 	*ppObjectInstance = m_ObjectInstanceVector[dwIndex];

  0001f	8b 45 0c	 mov	 eax, DWORD PTR _ppObjectInstance$[ebp]
  00022	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  00025	5e		 pop	 esi
  00026	89 08		 mov	 DWORD PTR [eax], ecx

; 1013 : 	return true;

  00028	b0 01		 mov	 al, 1

; 1014 : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?GetObjectInstancePointer@CArea@@QBE?B_NABKPAPBUSObjectInstance@1@@Z ENDP ; CArea::GetObjectInstancePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?GetObjectInstanceCount@CArea@@QBE?BKXZ
_TEXT	SEGMENT
?GetObjectInstanceCount@CArea@@QBE?BKXZ PROC		; CArea::GetObjectInstanceCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00003	2b 41 10	 sub	 eax, DWORD PTR [ecx+16]
  00006	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1005 : }

  00009	c3		 ret	 0
?GetObjectInstanceCount@CArea@@QBE?BKXZ ENDP		; CArea::GetObjectInstanceCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?GetObjectDataPointer@CArea@@QBE_NKPAPBUSObjectData@1@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_ppObjectData$ = 12					; size = 4
?GetObjectDataPointer@CArea@@QBE_NKPAPBUSObjectData@1@@Z PROC ; CArea::GetObjectDataPointer, COMDAT
; _this$ = ecx

; 991  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 992  : 	if (!CheckObjectIndex(dwIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckObjectIndex@CArea@@IBE_NK@Z ; CArea::CheckObjectIndex
  00010	84 c0		 test	 al, al
  00012	75 06		 jne	 SHORT $LN2@GetObjectD

; 1000 : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN2@GetObjectD:

; 998  : 	*ppObjectData = &m_ObjectDataVector[dwIndex];

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _ppObjectData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  0001d	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  00020	c1 e1 04	 shl	 ecx, 4
  00023	03 4f 04	 add	 ecx, DWORD PTR [edi+4]
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 998  : 	*ppObjectData = &m_ObjectDataVector[dwIndex];

  00027	89 08		 mov	 DWORD PTR [eax], ecx

; 999  : 	return true;

  00029	b0 01		 mov	 al, 1

; 1000 : }

  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?GetObjectDataPointer@CArea@@QBE_NKPAPBUSObjectData@1@@Z ENDP ; CArea::GetObjectDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?GetObjectDataCount@CArea@@QAEKXZ
_TEXT	SEGMENT
?GetObjectDataCount@CArea@@QAEKXZ PROC			; CArea::GetObjectDataCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00008	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  0000b	f7 ea		 imul	 edx
  0000d	c1 fa 03	 sar	 edx, 3
  00010	8b c2		 mov	 eax, edx
  00012	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00015	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 988  : }

  00017	c3		 ret	 0
?GetObjectDataCount@CArea@@QAEKXZ ENDP			; CArea::GetObjectDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Load@CArea@@QAE_NPBD@Z
_TEXT	SEGMENT
__New_ptr$2 = -116					; size = 4
_strObjectDataFileName$ = -112				; size = 24
_strAmbienceDataFileName$ = -88				; size = 24
$T3 = -64						; size = 24
$T4 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szPathName$ = 8					; size = 4
?Load@CArea@@QAE_NPBD@Z PROC				; CArea::Load, COMDAT
; _this$ = ecx

; 789  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@CArea@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 68	 sub	 esp, 104		; 00000068H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	8b 7d 08	 mov	 edi, DWORD PTR _c_szPathName$[ebp]

; 790  : 	Clear();

  0002f	e8 00 00 00 00	 call	 ?Clear@CArea@@QAEXXZ	; CArea::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00034	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@IIOKECFB@AreaData?4txt@
  0003c	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@IIOKECFB@AreaData?4txt@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00041	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00048	c7 45 d0 0c 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 12 ; 0000000cH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0004f	66 0f d6 45 c0	 movq	 QWORD PTR $T3[ebp], xmm0
  00054	89 45 c8	 mov	 DWORD PTR $T3[ebp+8], eax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00057	c6 45 cc 00	 mov	 BYTE PTR $T3[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 792  : 	std::string strObjectDataFileName = c_szPathName + std::string("AreaData.txt");

  0005b	8d 45 c0	 lea	 eax, DWORD PTR $T3[ebp]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	50		 push	 eax
  00066	8d 45 90	 lea	 eax, DWORD PTR _strObjectDataFileName$[ebp]
  00069	57		 push	 edi
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00073	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 792  : 	std::string strObjectDataFileName = c_szPathName + std::string("AreaData.txt");

  00076	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0007d	72 0d		 jb	 SHORT $LN58@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00080	50		 push	 eax
  00081	ff 75 c0	 push	 DWORD PTR $T3[ebp]
  00084	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00089	83 c4 08	 add	 esp, 8
$LN58@Load:

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0008e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00095	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009c	c6 45 c0 00	 mov	 BYTE PTR $T3[ebp], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000a0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a7	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ae	c6 45 d8 00	 mov	 BYTE PTR $T4[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b2	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000b7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BF@EMGBEFOB@AreaAmbienceData?4txt@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  000be	c7 45 e8 14 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 20 ; 00000014H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c5	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000cc	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  000cf	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@EMGBEFOB@AreaAmbienceData?4txt@+16
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000d8	89 45 8c	 mov	 DWORD PTR __New_ptr$2[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000db	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000df	8d 45 8c	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  000e2	50		 push	 eax
  000e3	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 793  : 	std::string strAmbienceDataFileName = c_szPathName + std::string("AreaAmbienceData.txt");

  000ec	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  000ef	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000f3	50		 push	 eax
  000f4	8d 45 a8	 lea	 eax, DWORD PTR _strAmbienceDataFileName$[ebp]
  000f7	57		 push	 edi
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000fe	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00101	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 793  : 	std::string strAmbienceDataFileName = c_szPathName + std::string("AreaAmbienceData.txt");

  00104	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00108	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0010b	72 0d		 jb	 SHORT $LN114@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010e	50		 push	 eax
  0010f	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00112	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00117	83 c4 08	 add	 esp, 8
$LN114@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0011a	83 7d a4 10	 cmp	 DWORD PTR _strObjectDataFileName$[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  0011e	8d 45 90	 lea	 eax, DWORD PTR _strObjectDataFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 795  : 	__Load_LoadObject(strObjectDataFileName.c_str());

  00121	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00123	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 2145 :         if (_Large_string_engaged()) {

  0012a	0f 43 45 90	 cmovae	 eax, DWORD PTR _strObjectDataFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 795  : 	__Load_LoadObject(strObjectDataFileName.c_str());

  0012e	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0012f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00136	c6 45 d8 00	 mov	 BYTE PTR $T4[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 795  : 	__Load_LoadObject(strObjectDataFileName.c_str());

  0013a	e8 00 00 00 00	 call	 ?__Load_LoadObject@CArea@@IAE_NPBD@Z ; CArea::__Load_LoadObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0013f	83 7d bc 10	 cmp	 DWORD PTR _strAmbienceDataFileName$[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00143	8d 45 a8	 lea	 eax, DWORD PTR _strAmbienceDataFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 796  : 	__Load_LoadAmbience(strAmbienceDataFileName.c_str());

  00146	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00148	0f 43 45 a8	 cmovae	 eax, DWORD PTR _strAmbienceDataFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 796  : 	__Load_LoadAmbience(strAmbienceDataFileName.c_str());

  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?__Load_LoadAmbience@CArea@@IAE_NPBD@Z ; CArea::__Load_LoadAmbience

; 797  : 	__Load_BuildObjectInstances();

  00152	8b ce		 mov	 ecx, esi
  00154	e8 00 00 00 00	 call	 ?__Load_BuildObjectInstances@CArea@@IAEXXZ ; CArea::__Load_BuildObjectInstances
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00159	8b 45 bc	 mov	 eax, DWORD PTR _strAmbienceDataFileName$[ebp+20]
  0015c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0015f	72 0d		 jb	 SHORT $LN138@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00161	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00162	50		 push	 eax
  00163	ff 75 a8	 push	 DWORD PTR _strAmbienceDataFileName$[ebp]
  00166	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0016b	83 c4 08	 add	 esp, 8
$LN138@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0016e	8b 45 a4	 mov	 eax, DWORD PTR _strObjectDataFileName$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00171	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strAmbienceDataFileName$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00178	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strAmbienceDataFileName$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0017f	c6 45 a8 00	 mov	 BYTE PTR _strAmbienceDataFileName$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00183	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00186	72 0d		 jb	 SHORT $LN154@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00188	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00189	50		 push	 eax
  0018a	ff 75 90	 push	 DWORD PTR _strObjectDataFileName$[ebp]
  0018d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00192	83 c4 08	 add	 esp, 8
$LN154@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 801  : }

  00195	b0 01		 mov	 al, 1
  00197	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0019a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a1	59		 pop	 ecx
  001a2	5f		 pop	 edi
  001a3	5e		 pop	 esi
  001a4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a7	33 cd		 xor	 ecx, ebp
  001a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ae	8b e5		 mov	 esp, ebp
  001b0	5d		 pop	 ebp
  001b1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$1:
  00008	8d 4d 90	 lea	 ecx, DWORD PTR _strObjectDataFileName$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@CArea@@QAE_NPBD@Z$3:
  00018	8d 4d a8	 lea	 ecx, DWORD PTR _strAmbienceDataFileName$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?Load@CArea@@QAE_NPBD@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@CArea@@QAE_NPBD@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@CArea@@QAE_NPBD@Z ENDP				; CArea::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Clear@CArea@@QAEXXZ
_TEXT	SEGMENT
_rkEftMgr$1$ = -8					; size = 4
_i$ = -4						; size = 4
?Clear@CArea@@QAEXXZ PROC				; CArea::Clear, COMDAT
; _this$ = ecx

; 1095 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  0000e	3b 77 14	 cmp	 esi, DWORD PTR [edi+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1098 : 	for (it = m_ObjectInstanceVector.begin();it!=m_ObjectInstanceVector.end();++it)

  00011	74 11		 je	 SHORT $LN3@Clear
$LL4@Clear:

; 1099 : 		__Clear_DestroyObjectInstance(*it);

  00013	ff 36		 push	 DWORD PTR [esi]
  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?__Clear_DestroyObjectInstance@CArea@@IAEXPAUSObjectInstance@1@@Z ; CArea::__Clear_DestroyObjectInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0001c	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  0001f	3b 77 14	 cmp	 esi, DWORD PTR [edi+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1098 : 	for (it = m_ObjectInstanceVector.begin();it!=m_ObjectInstanceVector.end();++it)

  00022	75 ef		 jne	 SHORT $LL4@Clear
$LN3@Clear:

; 1100 : 
; 1101 : 	m_ObjectDataVector.clear();

  00024	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 1102 : 	m_ObjectInstanceVector.clear();
; 1103 : 
; 1104 : 	// Clones
; 1105 : 	m_TreeCloneInstaceVector.clear();
; 1106 : 	m_ThingCloneInstaceVector.clear();
; 1107 : 	m_DungeonBlockCloneInstanceVector.clear();
; 1108 : 	m_AniThingCloneInstanceVector.clear();
; 1109 : 	m_ShadowThingCloneInstaceVector.clear();
; 1110 : 	m_AmbienceCloneInstanceVector.clear();
; 1111 : 	m_GraphicThingInstanceCRCMap.clear();

  00027	8d 4f 64	 lea	 ecx, DWORD PTR [edi+100]
  0002a	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002d	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00030	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00033	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00036	89 47 20	 mov	 DWORD PTR [edi+32], eax
  00039	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0003c	89 47 2c	 mov	 DWORD PTR [edi+44], eax
  0003f	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  00042	89 47 38	 mov	 DWORD PTR [edi+56], eax
  00045	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00048	89 47 44	 mov	 DWORD PTR [edi+68], eax
  0004b	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  0004e	89 47 50	 mov	 DWORD PTR [edi+80], eax
  00051	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  00054	89 47 5c	 mov	 DWORD PTR [edi+92], eax
  00057	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::clear

; 1112 : 	m_kRenderedThingInstanceCRCWithNumberVector.clear();

  0005c	8b 47 6c	 mov	 eax, DWORD PTR [edi+108]

; 1113 : 	m_kRenderedGrapphicThingInstanceVector.clear();
; 1114 : 
; 1115 : 	m_bPortalEnable = FALSE;
; 1116 : 	ClearPortal();

  0005f	8b cf		 mov	 ecx, edi
  00061	89 47 70	 mov	 DWORD PTR [edi+112], eax
  00064	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00067	89 47 7c	 mov	 DWORD PTR [edi+124], eax
  0006a	c7 87 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+148], 0
  00074	e8 00 00 00 00	 call	 ?ClearPortal@CArea@@QAEXXZ ; CArea::ClearPortal
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00079	8b b7 8c 00 00
	00		 mov	 esi, DWORD PTR [edi+140]
  0007f	8d 9f 8c 00 00
	00		 lea	 ebx, DWORD PTR [edi+140]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1118 : 	CEffectManager& rkEftMgr=CEffectManager::Instance();

  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0008b	89 4d f8	 mov	 DWORD PTR _rkEftMgr$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0008e	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1121 : 	for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end(); ++i)

  00090	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00093	3b c6		 cmp	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1121 : 	for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end(); ++i)

  00095	74 1c		 je	 SHORT $LN6@Clear
$LL7@Clear:

; 1122 : 	{
; 1123 : 		CEffectInstance * pEffectInstance = i->second;
; 1124 : 		rkEftMgr.DestroyUnsafeEffectInstance(pEffectInstance);

  00097	ff 70 14	 push	 DWORD PTR [eax+20]
  0009a	e8 00 00 00 00	 call	 ?DestroyUnsafeEffectInstance@CEffectManager@@QAE_NPAVCEffectInstance@@@Z ; CEffectManager::DestroyUnsafeEffectInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 198  :         _Mybase::operator++();

  0009f	8d 4d fc	 lea	 ecx, DWORD PTR _i$[ebp]
  000a2	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  000a7	8b 33		 mov	 esi, DWORD PTR [ebx]

; 232  :         return this->_Ptr == _Right._Ptr;

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1121 : 	for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end(); ++i)

  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _rkEftMgr$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  000af	3b c6		 cmp	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1121 : 	for (i = m_EffectInstanceMap.begin(); i != m_EffectInstanceMap.end(); ++i)

  000b1	75 e4		 jne	 SHORT $LL7@Clear
$LN6@Clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  000b3	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  000b6	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  000ba	75 24		 jne	 SHORT $LN73@Clear
  000bc	0f 1f 40 00	 npad	 4
$LL72@Clear:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  000c0	ff 77 08	 push	 DWORD PTR [edi+8]
  000c3	8b cb		 mov	 ecx, ebx
  000c5	53		 push	 ebx
  000c6	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  000cb	8b c7		 mov	 eax, edi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  000cd	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000cf	6a 18		 push	 24			; 00000018H
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000d7	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  000da	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  000de	74 e0		 je	 SHORT $LL72@Clear
$LN73@Clear:

; 1452 :         _Scary->_Mysize = 0;

  000e0	5f		 pop	 edi
  000e1	89 76 04	 mov	 DWORD PTR [esi+4], esi
  000e4	89 36		 mov	 DWORD PTR [esi], esi
  000e6	89 76 08	 mov	 DWORD PTR [esi+8], esi
  000e9	5e		 pop	 esi
  000ea	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  000f1	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1127 : }

  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c3		 ret	 0
?Clear@CArea@@QAEXXZ ENDP				; CArea::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?SetMapOutDoor@CArea@@QAEXPAVCMapOutdoor@@@Z
_TEXT	SEGMENT
_pOwnerOutdoorMap$ = 8					; size = 4
?SetMapOutDoor@CArea@@QAEXPAVCMapOutdoor@@@Z PROC	; CArea::SetMapOutDoor, COMDAT
; _this$ = ecx

; 1199 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1200 : 	m_pOwnerOutdoorMap=pOwnerOutdoorMap;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pOwnerOutdoorMap$[ebp]
  00006	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 1201 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetMapOutDoor@CArea@@QAEXPAVCMapOutdoor@@@Z ENDP	; CArea::SetMapOutDoor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_rkVct_pkBlendThingInst$ = 8				; size = 4
?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z PROC ; CArea::CollectBlendRenderingObject, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	56		 push	 esi
  00007	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000a	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  0000d	3b 70 2c	 cmp	 esi, DWORD PTR [eax+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 194  : 	for (i=m_ThingCloneInstaceVector.begin(); i!=m_ThingCloneInstaceVector.end(); ++i)

  00010	74 45		 je	 SHORT $LN3@CollectBle
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 702  :         auto& _My_data   = _Mypair._Myval2;

  00012	53		 push	 ebx
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _rkVct_pkBlendThingInst$[ebp]
$LL4@CollectBle:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 196  : 		CGraphicThingInstance* pkThingInst=*i;

  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 197  : 		if (pkThingInst->isShow())

  00019	8b cb		 mov	 ecx, ebx
  0001b	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  00020	84 c0		 test	 al, al
  00022	74 26		 je	 SHORT $LN2@CollectBle

; 198  : 		{
; 199  : 			if (pkThingInst->HaveBlendThing())

  00024	8b cb		 mov	 ecx, ebx
  00026	e8 00 00 00 00	 call	 ?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ ; CGraphicThingInstance::HaveBlendThing
  0002b	84 c0		 test	 al, al
  0002d	74 1b		 je	 SHORT $LN2@CollectBle
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0002f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00032	3b 4f 08	 cmp	 ecx, DWORD PTR [edi+8]
  00035	74 0a		 je	 SHORT $LN35@CollectBle

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0003b	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0003f	eb 09		 jmp	 SHORT $LN2@CollectBle
$LN35@CollectBle:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00041	56		 push	 esi
  00042	51		 push	 ecx
  00043	8b cf		 mov	 ecx, edi
  00045	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
$LN2@CollectBle:

; 149  :         return _Ptr == _Right._Ptr;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 75   :         ++_Ptr;

  0004d	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00050	3b 70 2c	 cmp	 esi, DWORD PTR [eax+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 194  : 	for (i=m_ThingCloneInstaceVector.begin(); i!=m_ThingCloneInstaceVector.end(); ++i)

  00053	75 c2		 jne	 SHORT $LL4@CollectBle
  00055	5f		 pop	 edi
  00056	5b		 pop	 ebx
$LN3@CollectBle:
  00057	5e		 pop	 esi

; 200  : 				rkVct_pkBlendThingInst.push_back(*i);
; 201  : 		}
; 202  : 	}
; 203  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ENDP ; CArea::CollectBlendRenderingObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_rkVct_pkOpaqueThingInst$ = 8				; size = 4
?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z PROC ; CArea::CollectRenderingObject, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	56		 push	 esi
  00007	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000a	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  0000d	3b 70 2c	 cmp	 esi, DWORD PTR [eax+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 180  : 	for (i=m_ThingCloneInstaceVector.begin(); i!=m_ThingCloneInstaceVector.end(); ++i)

  00010	74 45		 je	 SHORT $LN3@CollectRen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 702  :         auto& _My_data   = _Mypair._Myval2;

  00012	53		 push	 ebx
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _rkVct_pkOpaqueThingInst$[ebp]
$LL4@CollectRen:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 182  : 		CGraphicThingInstance* pkThingInst=*i;

  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 183  : 		if (pkThingInst->isShow())

  00019	8b cb		 mov	 ecx, ebx
  0001b	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  00020	84 c0		 test	 al, al
  00022	74 26		 je	 SHORT $LN2@CollectRen

; 184  : 		{
; 185  : 			if (!pkThingInst->HaveBlendThing())

  00024	8b cb		 mov	 ecx, ebx
  00026	e8 00 00 00 00	 call	 ?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ ; CGraphicThingInstance::HaveBlendThing
  0002b	84 c0		 test	 al, al
  0002d	75 1b		 jne	 SHORT $LN2@CollectRen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0002f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00032	3b 4f 08	 cmp	 ecx, DWORD PTR [edi+8]
  00035	74 0a		 je	 SHORT $LN35@CollectRen

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0003b	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0003f	eb 09		 jmp	 SHORT $LN2@CollectRen
$LN35@CollectRen:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00041	56		 push	 esi
  00042	51		 push	 ecx
  00043	8b cf		 mov	 ecx, edi
  00045	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
$LN2@CollectRen:

; 149  :         return _Ptr == _Right._Ptr;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 75   :         ++_Ptr;

  0004d	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00050	3b 70 2c	 cmp	 esi, DWORD PTR [eax+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 180  : 	for (i=m_ThingCloneInstaceVector.begin(); i!=m_ThingCloneInstaceVector.end(); ++i)

  00053	75 c2		 jne	 SHORT $LL4@CollectRen
  00055	5f		 pop	 edi
  00056	5b		 pop	 ebx
$LN3@CollectRen:
  00057	5e		 pop	 esi

; 186  : 				rkVct_pkOpaqueThingInst.push_back(*i);
; 187  : 		}
; 188  : 	}
; 189  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ENDP ; CArea::CollectRenderingObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??1CArea@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CArea@@UAE@XZ PROC					; CArea::~CArea, COMDAT
; _this$ = ecx

; 1209 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CArea@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CArea@@6B@

; 1210 : 	Clear();

  0002c	e8 00 00 00 00	 call	 ?Clear@CArea@@QAEXXZ	; CArea::Clear

; 1211 : }

  00031	8d 8e 98 00 00
	00		 lea	 ecx, DWORD PTR [esi+152]
  00037	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0003c	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00042	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00047	8b 4e 78	 mov	 ecx, DWORD PTR [esi+120]
  0004a	85 c9		 test	 ecx, ecx
  0004c	74 2d		 je	 SHORT $LN12@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0004e	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  00054	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00056	83 e0 fc	 and	 eax, -4			; fffffffcH
  00059	50		 push	 eax
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00060	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0006a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0

; 1699 :             _Myend   = pointer();

  00071	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
$LN12@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  0007e	85 c9		 test	 ecx, ecx
  00080	74 27		 je	 SHORT $LN19@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00082	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  00085	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	83 e0 f8	 and	 eax, -8			; fffffff8H
  0008a	50		 push	 eax
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00091	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00098	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0009b	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0

; 1699 :             _Myend   = pointer();

  000a2	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
$LN19@CArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1211 : }

  000a9	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  000ac	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<CGraphicThingInstance *,unsigned long,std::less<CGraphicThingInstance *>,std::allocator<std::pair<CGraphicThingInstance * const,unsigned long> >,0> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  000b1	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  000b4	85 c9		 test	 ecx, ecx
  000b6	74 27		 je	 SHORT $LN29@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b8	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  000bb	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bd	83 e0 fc	 and	 eax, -4			; fffffffcH
  000c0	50		 push	 eax
  000c1	51		 push	 ecx
  000c2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  000c7	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ce	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  000d1	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0

; 1699 :             _Myend   = pointer();

  000d8	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
$LN29@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  000e2	85 c9		 test	 ecx, ecx
  000e4	74 27		 je	 SHORT $LN36@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e6	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  000e9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000ee	50		 push	 eax
  000ef	51		 push	 ecx
  000f0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  000f5	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000fc	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  000ff	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0

; 1699 :             _Myend   = pointer();

  00106	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
$LN36@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0010d	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00110	85 c9		 test	 ecx, ecx
  00112	74 27		 je	 SHORT $LN43@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00114	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00117	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00119	83 e0 fc	 and	 eax, -4			; fffffffcH
  0011c	50		 push	 eax
  0011d	51		 push	 ecx
  0011e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00123	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0012a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0012d	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0

; 1699 :             _Myend   = pointer();

  00134	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
$LN43@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0013b	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  0013e	85 c9		 test	 ecx, ecx
  00140	74 27		 je	 SHORT $LN50@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00142	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00145	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00147	83 e0 fc	 and	 eax, -4			; fffffffcH
  0014a	50		 push	 eax
  0014b	51		 push	 ecx
  0014c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00151	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00158	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0015b	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 1699 :             _Myend   = pointer();

  00162	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
$LN50@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00169	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0016c	85 c9		 test	 ecx, ecx
  0016e	74 27		 je	 SHORT $LN57@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00170	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00173	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00175	83 e0 fc	 and	 eax, -4			; fffffffcH
  00178	50		 push	 eax
  00179	51		 push	 ecx
  0017a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0017f	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00186	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00189	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 1699 :             _Myend   = pointer();

  00190	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
$LN57@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00197	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  0019a	85 c9		 test	 ecx, ecx
  0019c	74 27		 je	 SHORT $LN64@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0019e	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  001a1	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a3	83 e0 fc	 and	 eax, -4			; fffffffcH
  001a6	50		 push	 eax
  001a7	51		 push	 ecx
  001a8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  001ad	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b4	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  001b7	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 1699 :             _Myend   = pointer();

  001be	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN64@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  001c5	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  001c8	85 c9		 test	 ecx, ecx
  001ca	74 27		 je	 SHORT $LN71@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  001cc	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  001cf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d1	83 e0 fc	 and	 eax, -4			; fffffffcH
  001d4	50		 push	 eax
  001d5	51		 push	 ecx
  001d6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  001db	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001e2	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  001e5	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  001ec	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN71@CArea:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  001f3	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  001f6	85 ff		 test	 edi, edi
  001f8	74 3b		 je	 SHORT $LN78@CArea

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  001fa	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  001fd	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00202	2b cf		 sub	 ecx, edi
  00204	f7 e9		 imul	 ecx
  00206	c1 fa 03	 sar	 edx, 3
  00209	8b c2		 mov	 eax, edx
  0020b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0020e	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00210	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00213	c1 e0 04	 shl	 eax, 4
  00216	50		 push	 eax
  00217	57		 push	 edi
  00218	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0021d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00224	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00227	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0022e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN78@CArea:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1211 : }

  00235	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00238	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0023f	59		 pop	 ecx
  00240	5f		 pop	 edi
  00241	5e		 pop	 esi
  00242	8b e5		 mov	 esp, ebp
  00244	5d		 pop	 ebp
  00245	c3		 ret	 0
  00246	cc		 int	 3
  00247	cc		 int	 3
  00248	cc		 int	 3
  00249	cc		 int	 3
  0024a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CArea@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CArea@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CArea@@UAE@XZ ENDP					; CArea::~CArea
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??0CArea@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
__Pnode$3 = -16						; size = 4
_this$ = -16						; size = 4
_this$ = -16						; size = 4
__Pnode$4 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CArea@@QAE@XZ PROC					; CArea::CArea, COMDAT
; _this$ = ecx

; 1204 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CArea@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CArea@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00033	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  0003a	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  00041	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1204 : {

  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0004f	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0
  00056	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
  0005d	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0
  00064	c7 43 1c 00 00
	00 00		 mov	 DWORD PTR [ebx+28], 0
  0006b	c7 43 20 00 00
	00 00		 mov	 DWORD PTR [ebx+32], 0
  00072	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
  00079	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], 0
  00080	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0
  00087	c7 43 30 00 00
	00 00		 mov	 DWORD PTR [ebx+48], 0
  0008e	c7 43 34 00 00
	00 00		 mov	 DWORD PTR [ebx+52], 0
  00095	c7 43 38 00 00
	00 00		 mov	 DWORD PTR [ebx+56], 0
  0009c	c7 43 3c 00 00
	00 00		 mov	 DWORD PTR [ebx+60], 0
  000a3	c7 43 40 00 00
	00 00		 mov	 DWORD PTR [ebx+64], 0
  000aa	c7 43 44 00 00
	00 00		 mov	 DWORD PTR [ebx+68], 0
  000b1	c7 43 48 00 00
	00 00		 mov	 DWORD PTR [ebx+72], 0
  000b8	c7 43 4c 00 00
	00 00		 mov	 DWORD PTR [ebx+76], 0
  000bf	c7 43 50 00 00
	00 00		 mov	 DWORD PTR [ebx+80], 0
  000c6	c7 43 54 00 00
	00 00		 mov	 DWORD PTR [ebx+84], 0
  000cd	c7 43 58 00 00
	00 00		 mov	 DWORD PTR [ebx+88], 0
  000d4	c7 43 5c 00 00
	00 00		 mov	 DWORD PTR [ebx+92], 0
  000db	c7 43 60 00 00
	00 00		 mov	 DWORD PTR [ebx+96], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1204 : {

  000e2	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
  000e5	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  000e9	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ec	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  000ee	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000f4	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000fb	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00100	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00102	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$4[ebp]
  00105	50		 push	 eax
  00106	56		 push	 esi
  00107	89 75 f0	 mov	 DWORD PTR __Pnode$4[ebp], esi
  0010a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0010f	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$4[ebp]
  00112	50		 push	 eax
  00113	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00116	51		 push	 ecx
  00117	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0011c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$4[ebp]
  0011f	50		 push	 eax
  00120	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCGraphicThingInstance@@K@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> *,std::_Tree_node<std::pair<CGraphicThingInstance * const,unsigned long>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00129	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0012f	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00131	c7 43 6c 00 00
	00 00		 mov	 DWORD PTR [ebx+108], 0
  00138	c7 43 70 00 00
	00 00		 mov	 DWORD PTR [ebx+112], 0
  0013f	c7 43 74 00 00
	00 00		 mov	 DWORD PTR [ebx+116], 0
  00146	c7 43 78 00 00
	00 00		 mov	 DWORD PTR [ebx+120], 0
  0014d	c7 43 7c 00 00
	00 00		 mov	 DWORD PTR [ebx+124], 0
  00154	c7 83 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+128], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1204 : {

  0015e	8d bb 8c 00 00
	00		 lea	 edi, DWORD PTR [ebx+140]
  00164	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00168	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0016b	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0016d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00173	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0017a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0017f	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00181	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$3[ebp]
  00184	50		 push	 eax
  00185	56		 push	 esi
  00186	89 75 f0	 mov	 DWORD PTR __Pnode$3[ebp], esi
  00189	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0018e	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$3[ebp]
  00191	50		 push	 eax
  00192	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00195	51		 push	 ecx
  00196	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0019b	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$3[ebp]
  0019e	50		 push	 eax
  0019f	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  001a8	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  001ae	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1204 : {

  001b0	8d bb 98 00 00
	00		 lea	 edi, DWORD PTR [ebx+152]
  001b6	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  001ba	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001bd	6a 14		 push	 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  001bf	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  001c5	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001cc	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  001d1	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  001d3	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  001d6	50		 push	 eax
  001d7	56		 push	 esi
  001d8	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  001db	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
  001e0	83 c4 44	 add	 esp, 68			; 00000044H

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  001e3	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  001e6	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  001e9	50		 push	 eax
  001ea	51		 push	 ecx
  001eb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  001f0	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  001f3	50		 push	 eax
  001f4	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001f7	50		 push	 eax
  001f8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@HPAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@HPAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  001fd	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00203	83 c4 10	 add	 esp, 16			; 00000010H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00206	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1206 : }

  00208	8b c3		 mov	 eax, ebx
  0020a	c7 83 84 00 00
	00 ff 00 ff 00	 mov	 DWORD PTR [ebx+132], 16711935 ; 00ff00ffH
  00214	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00217	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0021e	59		 pop	 ecx
  0021f	5f		 pop	 edi
  00220	5e		 pop	 esi
  00221	5b		 pop	 ebx
  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CArea@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::~vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >
__unwindfunclet$??0CArea@@QAE@XZ$1:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAUSObjectInstance@CArea@@V?$allocator@PAUSObjectInstance@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >::~vector<CArea::SObjectInstance *,std::allocator<CArea::SObjectInstance *> >
__unwindfunclet$??0CArea@@QAE@XZ$2:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAE@XZ ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::~vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >
__unwindfunclet$??0CArea@@QAE@XZ$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 28	 add	 ecx, 40			; 00000028H
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >
__unwindfunclet$??0CArea@@QAE@XZ$4:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 34	 add	 ecx, 52			; 00000034H
  00032	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDungeonBlock@@V?$allocator@PAVCDungeonBlock@@@std@@@std@@QAE@XZ ; std::vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >::~vector<CDungeonBlock *,std::allocator<CDungeonBlock *> >
__unwindfunclet$??0CArea@@QAE@XZ$5:
  00037	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 40	 add	 ecx, 64			; 00000040H
  0003d	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >
__unwindfunclet$??0CArea@@QAE@XZ$6:
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00048	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >
__unwindfunclet$??0CArea@@QAE@XZ$7:
  0004d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 58	 add	 ecx, 88			; 00000058H
  00053	e9 00 00 00 00	 jmp	 ??1?$vector@PAUSAmbienceInstance@CArea@@V?$allocator@PAUSAmbienceInstance@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >::~vector<CArea::SAmbienceInstance *,std::allocator<CArea::SAmbienceInstance *> >
__unwindfunclet$??0CArea@@QAE@XZ$8:
  00058	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 64	 add	 ecx, 100		; 00000064H
  0005e	e9 00 00 00 00	 jmp	 ??1?$map@PAVCGraphicThingInstance@@KU?$less@PAVCGraphicThingInstance@@@std@@V?$allocator@U?$pair@QAVCGraphicThingInstance@@K@std@@@3@@std@@QAE@XZ
__unwindfunclet$??0CArea@@QAE@XZ$9:
  00063	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00069	e9 00 00 00 00	 jmp	 ??1?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@QAE@XZ ; std::vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >::~vector<CArea::SCRCWithNumber,std::allocator<CArea::SCRCWithNumber> >
__unwindfunclet$??0CArea@@QAE@XZ$10:
  0006e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	83 c1 78	 add	 ecx, 120		; 00000078H
  00074	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::~vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >
__unwindfunclet$??0CArea@@QAE@XZ$11:
  00079	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00082	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@@std@@QAE@XZ
  00087	cc		 int	 3
  00088	cc		 int	 3
  00089	cc		 int	 3
  0008a	cc		 int	 3
  0008b	cc		 int	 3
__ehhandler$??0CArea@@QAE@XZ:
  0008c	90		 npad	 1
  0008d	90		 npad	 1
  0008e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00092	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00095	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00098	33 c8		 xor	 ecx, eax
  0009a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CArea@@QAE@XZ
  000a4	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CArea@@QAE@XZ ENDP					; CArea::CArea
; Function compile flags: /Ogtp
;	COMDAT ??_GSObjectInstance@CArea@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSObjectInstance@CArea@@UAEPAXI@Z PROC		; CArea::SObjectInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SObjectInstance@CArea@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 28		 push	 40			; 00000028H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSObjectInstance@CArea@@UAEPAXI@Z ENDP		; CArea::SObjectInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
;	COMDAT ??1SObjectInstance@CArea@@UAE@XZ
_TEXT	SEGMENT
??1SObjectInstance@CArea@@UAE@XZ PROC			; CArea::SObjectInstance::~SObjectInstance, COMDAT
; _this$ = ecx

; 151  : 			{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SObjectInstance@CArea@@6B@

; 152  : 			}

  00006	c3		 ret	 0
??1SObjectInstance@CArea@@UAE@XZ ENDP			; CArea::SObjectInstance::~SObjectInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?SetTree@SObjectInstance@CArea@@QAEXMMMKPBD@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_dwTreeCRC$ = 20					; size = 4
_c_szTreeName$ = 24					; size = 4
?SetTree@SObjectInstance@CArea@@QAEXMMMKPBD@Z PROC	; CArea::SObjectInstance::SetTree, COMDAT
; _this$ = ecx

; 599  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 600  : 	CSpeedTreeForestDirectX8& rkForest=CSpeedTreeForestDirectX8::Instance();
; 601  : 	pTree=rkForest.CreateInstance(x, y, z, dwTreeCRC, c_szTreeName);

  00003	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _z$[ebp]
  00008	56		 push	 esi
  00009	ff 75 18	 push	 DWORD PTR _c_szTreeName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  00014	ff 75 14	 push	 DWORD PTR _dwTreeCRC$[ebp]
  00017	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00020	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00025	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	e8 00 00 00 00	 call	 ?CreateInstance@CSpeedTreeForest@@QAEPAVCSpeedTreeWrapper@@MMMKPBD@Z ; CSpeedTreeForest::CreateInstance
  0003a	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 602  : 	dwType = prt::PROPERTY_TYPE_TREE;

  0003d	c7 46 04 01 00
	00 00		 mov	 DWORD PTR [esi+4], 1
  00044	5e		 pop	 esi

; 603  : }

  00045	5d		 pop	 ebp
  00046	c2 14 00	 ret	 20			; 00000014H
?SetTree@SObjectInstance@CArea@@QAEXMMMKPBD@Z ENDP	; CArea::SObjectInstance::SetTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
;	COMDAT ??_GSAmbienceInstance@CArea@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSAmbienceInstance@CArea@@UAEPAXI@Z PROC		; CArea::SAmbienceInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 76   : 			virtual ~SAmbienceInstance() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAmbienceInstance@CArea@@6B@
  0000f	e8 00 00 00 00	 call	 ??1TPropertyAmbience@prt@@QAE@XZ
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  0001b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001f	74 0b		 je	 SHORT $LN7@scalar
  00021	6a 6c		 push	 108			; 0000006cH
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN7@scalar:
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??_GSAmbienceInstance@CArea@@UAEPAXI@Z ENDP		; CArea::SAmbienceInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__GetVolumeFromDistance@SAmbienceInstance@CArea@@QAEMM@Z
_TEXT	SEGMENT
tv136 = 8						; size = 4
_fDistance$ = 8						; size = 4
?__GetVolumeFromDistance@SAmbienceInstance@CArea@@QAEMM@Z PROC ; CArea::SAmbienceInstance::__GetVolumeFromDistance, COMDAT
; _this$ = ecx

; 1306 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1307 : 	float fMaxVolumeAreaRadius = float(dwRange) * fMaxVolumeAreaPercentage;

  00003	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00006	f3 0f 10 51 14	 movss	 xmm2, DWORD PTR [ecx+20]
  0000b	66 0f 6e c0	 movd	 xmm0, eax
  0000f	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00013	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00016	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0001f	66 0f 5a d8	 cvtpd2ps xmm3, xmm0
  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	f3 0f 59 d3	 mulss	 xmm2, xmm3

; 1308 : 	if (fMaxVolumeAreaRadius <= 0.0f)

  0002a	0f 2f c2	 comiss	 xmm0, xmm2
  0002d	73 2e		 jae	 SHORT $LN5@GetVolumeF

; 1309 : 		return 1.0f;
; 1310 : 	if (fDistance <= fMaxVolumeAreaRadius)

  0002f	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fDistance$[ebp]
  00034	0f 2f d1	 comiss	 xmm2, xmm1
  00037	73 24		 jae	 SHORT $LN5@GetVolumeF

; 1312 : 
; 1313 : 	return 1.0f - ((fDistance - fMaxVolumeAreaRadius) / (dwRange - fMaxVolumeAreaRadius));

  00039	f3 0f 5c ca	 subss	 xmm1, xmm2
  0003d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00045	f3 0f 5c da	 subss	 xmm3, xmm2
  00049	f3 0f 5e cb	 divss	 xmm1, xmm3
  0004d	f3 0f 5c c1	 subss	 xmm0, xmm1
  00051	f3 0f 11 45 08	 movss	 DWORD PTR tv136[ebp], xmm0
  00056	d9 45 08	 fld	 DWORD PTR tv136[ebp]

; 1314 : }

  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
$LN5@GetVolumeF:

; 1311 : 		return 1.0f;

  0005d	d9 e8		 fld1

; 1314 : }

  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?__GetVolumeFromDistance@SAmbienceInstance@CArea@@QAEMM@Z ENDP ; CArea::SAmbienceInstance::__GetVolumeFromDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Picking@SAmbienceInstance@CArea@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?Picking@SAmbienceInstance@CArea@@QAE_NXZ PROC		; CArea::SAmbienceInstance::Picking, COMDAT
; _this$ = ecx

; 1343 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00010	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1344 : 	return CGraphicCollisionObject::IntersectSphere(D3DXVECTOR3(fx, fy, fz), dwRange);

  00015	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00018	f3 0f 11 45 f0	 movss	 DWORD PTR $T1[ebp], xmm0

; 181  :     y = fy;

  0001d	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00022	f3 0f 11 45 f4	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 182  :     z = fz;

  00027	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0002c	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp+8], xmm0
  00031	66 0f 6e c0	 movd	 xmm0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1344 : 	return CGraphicCollisionObject::IntersectSphere(D3DXVECTOR3(fx, fy, fz), dwRange);

  00035	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00039	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003c	51		 push	 ecx
  0003d	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00046	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  00049	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0004d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z ; CGraphicCollisionObject::IntersectSphere

; 1345 : }

  00058	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005b	33 cd		 xor	 ecx, ebp
  0005d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?Picking@SAmbienceInstance@CArea@@QAE_NXZ ENDP		; CArea::SAmbienceInstance::Picking
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?Render@SAmbienceInstance@CArea@@QAEXXZ
_TEXT	SEGMENT
tv211 = -16						; size = 8
_fxAdd$1$ = -8						; size = 4
tv212 = -4						; size = 4
?Render@SAmbienceInstance@CArea@@QAEXXZ PROC		; CArea::SAmbienceInstance::Render, COMDAT
; _this$ = ecx

; 1317 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1318 : 	float fBoxSize = 10.0f;
; 1319 : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, 0xff00ff00);

  00008	68 00 ff 00 ff	 push	 -16711936		; ff00ff00H
  0000d	8b f1		 mov	 esi, ecx
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00015	6a 3c		 push	 60			; 0000003cH
  00017	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 1320 : 	RenderCube(fx-fBoxSize, fy-fBoxSize, fz-fBoxSize, fx+fBoxSize, fy+fBoxSize, fz+fBoxSize);

  0001c	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@41200000
  00024	83 ec 18	 sub	 esp, 24			; 00000018H
  00027	f3 0f 10 56 0c	 movss	 xmm2, DWORD PTR [esi+12]
  0002c	8b ce		 mov	 ecx, esi
  0002e	f3 0f 10 5e 08	 movss	 xmm3, DWORD PTR [esi+8]
  00033	0f 28 c2	 movaps	 xmm0, xmm2
  00036	f3 0f 10 66 04	 movss	 xmm4, DWORD PTR [esi+4]
  0003b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0003f	f3 0f 5c d1	 subss	 xmm2, xmm1
  00043	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  00049	0f 28 c3	 movaps	 xmm0, xmm3
  0004c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00050	f3 0f 5c d9	 subss	 xmm3, xmm1
  00054	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  0005a	0f 28 c4	 movaps	 xmm0, xmm4
  0005d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00061	f3 0f 5c e1	 subss	 xmm4, xmm1
  00065	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0006b	f3 0f 11 54 24
	08		 movss	 DWORD PTR [esp+8], xmm2
  00071	f3 0f 11 5c 24
	04		 movss	 DWORD PTR [esp+4], xmm3
  00077	f3 0f 11 24 24	 movss	 DWORD PTR [esp], xmm4
  0007c	e8 00 00 00 00	 call	 ?RenderCube@CScreen@@QAEXMMMMMM@Z ; CScreen::RenderCube

; 1321 : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, 0xffffffff);

  00081	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00087	6a ff		 push	 -1
  00089	6a 3c		 push	 60			; 0000003cH
  0008b	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 1322 : 	RenderSphere(NULL, fx, fy, fz, float(dwRange) * fMaxVolumeAreaPercentage, D3DFILL_POINT);

  00090	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00093	8b ce		 mov	 ecx, esi
  00095	6a 01		 push	 1
  00097	83 ec 10	 sub	 esp, 16			; 00000010H
  0009a	66 0f 6e c0	 movd	 xmm0, eax
  0009e	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000a2	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a5	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000ae	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000b2	f3 0f 59 46 14	 mulss	 xmm0, DWORD PTR [esi+20]
  000b7	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000bd	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  000c2	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000c8	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  000cd	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d3	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  000d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000dd	6a 00		 push	 0
  000df	e8 00 00 00 00	 call	 ?RenderSphere@CScreen@@QAEXPBUD3DXMATRIX@@MMMMW4_D3DFILLMODE@@@Z ; CScreen::RenderSphere

; 1323 : 	RenderSphere(NULL, fx, fy, fz, float(dwRange), D3DFILL_POINT);

  000e4	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000e7	8b ce		 mov	 ecx, esi
  000e9	6a 01		 push	 1
  000eb	83 ec 10	 sub	 esp, 16			; 00000010H
  000ee	66 0f 6e c0	 movd	 xmm0, eax
  000f2	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000f6	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f9	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00102	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00106	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0010c	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00111	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00117	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  0011c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00122	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	6a 00		 push	 0
  0012e	e8 00 00 00 00	 call	 ?RenderSphere@CScreen@@QAEXPBUD3DXMATRIX@@MMMMW4_D3DFILLMODE@@@Z ; CScreen::RenderSphere

; 1324 : 	RenderCircle2d(fx, fy, fz, float(dwRange) * fMaxVolumeAreaPercentage);

  00133	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00136	6a 32		 push	 50			; 00000032H
  00138	66 0f 6e c0	 movd	 xmm0, eax
  0013c	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00140	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00143	83 ec 10	 sub	 esp, 16			; 00000010H
  00146	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0014f	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00153	f3 0f 59 46 14	 mulss	 xmm0, DWORD PTR [esi+20]
  00158	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0015e	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00163	8b ce		 mov	 ecx, esi
  00165	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0016b	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  00170	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00176	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  0017b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00180	e8 00 00 00 00	 call	 ?RenderCircle2d@CScreen@@QAEXMMMMH@Z ; CScreen::RenderCircle2d

; 1325 : 	RenderCircle2d(fx, fy, fz, float(dwRange));

  00185	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00188	8b ce		 mov	 ecx, esi
  0018a	6a 32		 push	 50			; 00000032H
  0018c	83 ec 10	 sub	 esp, 16			; 00000010H
  0018f	66 0f 6e c0	 movd	 xmm0, eax
  00193	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00197	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0019a	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  001a3	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  001a7	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  001ad	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  001b2	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001b8	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  001bd	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001c3	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  001c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cd	e8 00 00 00 00	 call	 ?RenderCircle2d@CScreen@@QAEXMMMMH@Z ; CScreen::RenderCircle2d
  001d2	33 db		 xor	 ebx, ebx
$LL4@Render:

; 1329 : 		float fxAdd = cosf(float(i) * D3DX_PI/4.0f) * float(dwRange) / 2.0f;

  001d4	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  001d7	0f 57 c0	 xorps	 xmm0, xmm0
  001da	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  001de	0f 57 c9	 xorps	 xmm1, xmm1
  001e1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40490fdb
  001e9	f2 0f 2a c8	 cvtsi2sd xmm1, eax
  001ed	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001f0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e800000
  001f8	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  00201	0f 5a d0	 cvtps2pd xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1329 : 		float fxAdd = cosf(float(i) * D3DX_PI/4.0f) * float(dwRange) / 2.0f;

  00204	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  00208	f2 0f 11 55 f0	 movsd	 QWORD PTR tv211[ebp], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1329 : 		float fxAdd = cosf(float(i) * D3DX_PI/4.0f) * float(dwRange) / 2.0f;

  0020d	f3 0f 11 45 fc	 movss	 DWORD PTR tv212[ebp], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  00212	0f 28 c2	 movaps	 xmm0, xmm2
  00215	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  0021a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1329 : 		float fxAdd = cosf(float(i) * D3DX_PI/4.0f) * float(dwRange) / 2.0f;

  0021e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR tv212[ebp]
  00223	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0022b	f3 0f 11 45 f8	 movss	 DWORD PTR _fxAdd$1$[ebp], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  00230	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR tv211[ebp]
  00235	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1332 : 		if (i%2)

  0023a	f3 0f 10 5d f8	 movss	 xmm3, DWORD PTR _fxAdd$1$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  0023f	0f 57 e4	 xorps	 xmm4, xmm4
  00242	f2 0f 5a e0	 cvtsd2ss xmm4, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1330 : 		float fyAdd = sinf(float(i) * D3DX_PI/4.0f) * float(dwRange) / 2.0f;

  00246	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0024e	f3 0f 59 65 fc	 mulss	 xmm4, DWORD PTR tv212[ebp]
  00253	f3 0f 59 e0	 mulss	 xmm4, xmm0

; 1332 : 		if (i%2)

  00257	f6 c3 01	 test	 bl, 1
  0025a	74 08		 je	 SHORT $LN5@Render

; 1333 : 		{
; 1334 : 			fxAdd /= 2.0f;

  0025c	f3 0f 59 d8	 mulss	 xmm3, xmm0

; 1335 : 			fyAdd /= 2.0f;

  00260	f3 0f 59 e0	 mulss	 xmm4, xmm0
$LN5@Render:

; 1336 : 		}
; 1337 : 
; 1338 : 		RenderLine2d(fx + fxAdd, fy + fyAdd, fx - fxAdd, fy - fyAdd, fz);

  00264	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00269	83 ec 14	 sub	 esp, 20			; 00000014H
  0026c	f3 0f 10 4e 08	 movss	 xmm1, DWORD PTR [esi+8]
  00271	8b ce		 mov	 ecx, esi
  00273	f3 0f 10 56 04	 movss	 xmm2, DWORD PTR [esi+4]
  00278	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  0027e	0f 28 c1	 movaps	 xmm0, xmm1
  00281	f3 0f 5c c4	 subss	 xmm0, xmm4
  00285	f3 0f 58 cc	 addss	 xmm1, xmm4
  00289	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0028f	0f 28 c2	 movaps	 xmm0, xmm2
  00292	f3 0f 5c c3	 subss	 xmm0, xmm3
  00296	f3 0f 58 d3	 addss	 xmm2, xmm3
  0029a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002a0	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  002a6	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  002ab	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  002b0	43		 inc	 ebx
  002b1	83 fb 04	 cmp	 ebx, 4
  002b4	0f 8c 1a ff ff
	ff		 jl	 $LL4@Render

; 1339 : 	}
; 1340 : }

  002ba	5e		 pop	 esi
  002bb	5b		 pop	 ebx
  002bc	8b e5		 mov	 esp, ebp
  002be	5d		 pop	 ebp
  002bf	c3		 ret	 0
?Render@SAmbienceInstance@CArea@@QAEXXZ ENDP		; CArea::SAmbienceInstance::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?UpdateLoopSound@SAmbienceInstance@CArea@@QAEXMMM@Z
_TEXT	SEGMENT
_fDistance$1$ = -4					; size = 4
_fxCenter$ = 8						; size = 4
_fyCenter$ = 12						; size = 4
_fzCenter$ = 16						; size = 4
?UpdateLoopSound@SAmbienceInstance@CArea@@QAEXMMM@Z PROC ; CArea::SAmbienceInstance::UpdateLoopSound, COMDAT
; _this$ = ecx

; 1274 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 08	 sub	 esp, 8
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 1275 : 	float fDistance = sqrtf((fx - fxCenter)*(fx - fxCenter) + (fy - fyCenter)*(fy - fyCenter) + (fz - fzCenter)*(fz - fzCenter));

  0000d	f3 0f 10 4f 08	 movss	 xmm1, DWORD PTR [edi+8]
  00012	f3 0f 5c 4d 0c	 subss	 xmm1, DWORD PTR _fyCenter$[ebp]
  00017	f3 0f 10 57 04	 movss	 xmm2, DWORD PTR [edi+4]
  0001c	f3 0f 5c 55 08	 subss	 xmm2, DWORD PTR _fxCenter$[ebp]
  00021	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  00026	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _fzCenter$[ebp]
  0002b	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0002f	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00033	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00037	f3 0f 58 ca	 addss	 xmm1, xmm2
  0003b	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0003f	0f 5a c1	 cvtps2pd xmm0, xmm1
  00042	0f 57 c9	 xorps	 xmm1, xmm1
  00045	66 0f 2e c8	 ucomisd xmm1, xmm0
  00049	77 06		 ja	 SHORT $LN22@UpdateLoop
  0004b	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0004f	eb 05		 jmp	 SHORT $LN23@UpdateLoop
$LN22@UpdateLoop:
  00051	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN23@UpdateLoop:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1276 : 	if (DWORD(fDistance) < dwRange)

  00056	8b 77 18	 mov	 esi, DWORD PTR [edi+24]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00059	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005d	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _fDistance$1$[esp+16], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1276 : 	if (DWORD(fDistance) < dwRange)

  00063	e8 00 00 00 00	 call	 __ftoui3
  00068	3b 47 10	 cmp	 eax, DWORD PTR [edi+16]
  0006b	73 7f		 jae	 SHORT $LN2@UpdateLoop

; 1277 : 	{
; 1278 : 		if (-1 == iPlaySoundIndex)

  0006d	83 fe ff	 cmp	 esi, -1
  00070	75 4f		 jne	 SHORT $LN25@UpdateLoop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00072	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00075	3b 47 60	 cmp	 eax, DWORD PTR [edi+96]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1280 : 			if (AmbienceData.AmbienceSoundVector.empty())

  00078	0f 84 86 00 00
	00		 je	 $LN7@UpdateLoop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00082	72 02		 jb	 SHORT $LN18@UpdateLoop

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00084	8b 00		 mov	 eax, DWORD PTR [eax]
$LN18@UpdateLoop:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1284 : 			iPlaySoundIndex = CSoundManager::Instance().PlayAmbienceSound3D(fx, fy, fz, c_szFileName, 0);

  00086	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  0008b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  00091	6a 00		 push	 0
  00093	50		 push	 eax
  00094	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00097	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0009d	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  000a2	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000a8	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  000ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b2	e8 00 00 00 00	 call	 ?PlayAmbienceSound3D@CSoundManager@@QAEHMMMPBDH@Z ; CSoundManager::PlayAmbienceSound3D
  000b7	8b f0		 mov	 esi, eax
  000b9	89 77 18	 mov	 DWORD PTR [edi+24], esi

; 1285 : //			Tracef(" %d : LoopPlay [%f] : %s\n", iPlaySoundIndex, fDistance, c_szFileName);
; 1286 : 		}
; 1287 : 
; 1288 : 		if (-1 != iPlaySoundIndex)

  000bc	83 fe ff	 cmp	 esi, -1
  000bf	74 43		 je	 SHORT $LN7@UpdateLoop
$LN25@UpdateLoop:

; 1289 : 		{
; 1290 : //			Tracef("%d : %f\n", iPlaySoundIndex, __GetVolumeFromDistance(fDistance));
; 1291 : 			CSoundManager::Instance().SetSoundVolume3D(iPlaySoundIndex, __GetVolumeFromDistance(fDistance));

  000c1	f3 0f 10 44 24
	0c		 movss	 xmm0, DWORD PTR _fDistance$1$[esp+16]
  000c7	51		 push	 ecx
  000c8	8b cf		 mov	 ecx, edi
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cf	e8 00 00 00 00	 call	 ?__GetVolumeFromDistance@SAmbienceInstance@CArea@@QAEMM@Z ; CArea::SAmbienceInstance::__GetVolumeFromDistance
  000d4	51		 push	 ecx
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  000db	d9 1c 24	 fstp	 DWORD PTR [esp]
  000de	56		 push	 esi
  000df	e8 00 00 00 00	 call	 ?SetSoundVolume3D@CSoundManager@@QAEXHM@Z ; CSoundManager::SetSoundVolume3D

; 1301 : 		}
; 1302 : 	}
; 1303 : }

  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 0c 00	 ret	 12			; 0000000cH
$LN2@UpdateLoop:

; 1292 : 		}
; 1293 : 	}
; 1294 : 	else
; 1295 : 	{
; 1296 : 		if (-1 != iPlaySoundIndex)

  000ec	83 fe ff	 cmp	 esi, -1
  000ef	74 13		 je	 SHORT $LN7@UpdateLoop

; 1297 : 		{
; 1298 : //			Tracef(" %d : LoopStop\n", iPlaySoundIndex);
; 1299 : 			CSoundManager::Instance().StopSound3D(iPlaySoundIndex);

  000f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  000f7	56		 push	 esi
  000f8	e8 00 00 00 00	 call	 ?StopSound3D@CSoundManager@@QAEXH@Z ; CSoundManager::StopSound3D

; 1300 : 			iPlaySoundIndex = -1;

  000fd	c7 47 18 ff ff
	ff ff		 mov	 DWORD PTR [edi+24], -1
$LN7@UpdateLoop:

; 1301 : 		}
; 1302 : 	}
; 1303 : }

  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 0c 00	 ret	 12			; 0000000cH
?UpdateLoopSound@SAmbienceInstance@CArea@@QAEXMMM@Z ENDP ; CArea::SAmbienceInstance::UpdateLoopSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?UpdateStepSound@SAmbienceInstance@CArea@@QAEXMMM@Z
_TEXT	SEGMENT
tv154 = -4						; size = 4
_fcurTime$1 = -4					; size = 4
_fxCenter$ = 8						; size = 4
_fyCenter$ = 12						; size = 4
_fzCenter$ = 16						; size = 4
?UpdateStepSound@SAmbienceInstance@CArea@@QAEXMMM@Z PROC ; CArea::SAmbienceInstance::UpdateStepSound, COMDAT
; _this$ = ecx

; 1247 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	51		 push	 ecx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx

; 1248 : 	float fDistance = sqrtf((fx - fxCenter)*(fx - fxCenter) + (fy - fyCenter)*(fy - fyCenter) + (fz - fzCenter)*(fz - fzCenter));

  0000a	f3 0f 10 4e 08	 movss	 xmm1, DWORD PTR [esi+8]
  0000f	f3 0f 5c 4d 0c	 subss	 xmm1, DWORD PTR _fyCenter$[ebp]
  00014	f3 0f 10 56 04	 movss	 xmm2, DWORD PTR [esi+4]
  00019	f3 0f 5c 55 08	 subss	 xmm2, DWORD PTR _fxCenter$[ebp]
  0001e	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00023	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _fzCenter$[ebp]
  00028	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0002c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00030	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00034	f3 0f 58 ca	 addss	 xmm1, xmm2
  00038	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0003c	0f 5a c1	 cvtps2pd xmm0, xmm1
  0003f	0f 57 c9	 xorps	 xmm1, xmm1
  00042	66 0f 2e c8	 ucomisd xmm1, xmm0
  00046	77 06		 ja	 SHORT $LN20@UpdateStep
  00048	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0004c	eb 05		 jmp	 SHORT $LN21@UpdateStep
$LN20@UpdateStep:
  0004e	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN21@UpdateStep:
  00053	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1249 : 	if (DWORD(fDistance) < dwRange)

  00057	e8 00 00 00 00	 call	 __ftoui3
  0005c	3b 46 10	 cmp	 eax, DWORD PTR [esi+16]
  0005f	0f 83 b0 00 00
	00		 jae	 $LN2@UpdateStep

; 1250 : 	{
; 1251 : 		float fcurTime = CTimer::Instance().GetCurrentSecond();

  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0006b	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00070	d9 5c 24 04	 fstp	 DWORD PTR _fcurTime$1[esp+8]

; 1252 : 
; 1253 : 		if (fcurTime > fNextPlayTime)

  00074	f3 0f 10 44 24
	04		 movss	 xmm0, DWORD PTR _fcurTime$1[esp+8]
  0007a	0f 2f 46 1c	 comiss	 xmm0, DWORD PTR [esi+28]
  0007e	0f 86 9f 00 00
	00		 jbe	 $LN3@UpdateStep
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00084	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00087	3b 46 60	 cmp	 eax, DWORD PTR [esi+96]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1255 : 			if (AmbienceData.AmbienceSoundVector.empty())

  0008a	0f 84 93 00 00
	00		 je	 $LN3@UpdateStep
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00090	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00094	72 02		 jb	 SHORT $LN16@UpdateStep

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00096	8b 00		 mov	 eax, DWORD PTR [eax]
$LN16@UpdateStep:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1259 : 			iPlaySoundIndex = CSoundManager::Instance().PlayAmbienceSound3D(fx, fy, fz, c_szFileName);

  00098	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  000a3	6a 01		 push	 1
  000a5	50		 push	 eax
  000a6	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000a9	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000af	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  000b4	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000ba	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  000bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c4	e8 00 00 00 00	 call	 ?PlayAmbienceSound3D@CSoundManager@@QAEHMMMPBDH@Z ; CSoundManager::PlayAmbienceSound3D
  000c9	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 1260 : //			Tracef(" %d : StepPlay [%f] : %s\n", iPlaySoundIndex, fDistance, c_szFileName);
; 1261 : 
; 1262 : 			fNextPlayTime = CTimer::Instance().GetCurrentSecond();

  000cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  000d2	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond

; 1263 : 			fNextPlayTime += AmbienceData.fPlayInterval + frandom(0.0f, AmbienceData.fPlayIntervalVariation);

  000d7	f3 0f 10 46 54	 movss	 xmm0, DWORD PTR [esi+84]
  000dc	83 ec 08	 sub	 esp, 8
  000df	d9 5e 1c	 fstp	 DWORD PTR [esi+28]
  000e2	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e8	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  000ef	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  000f4	d8 46 50	 fadd	 DWORD PTR [esi+80]
  000f7	83 c4 08	 add	 esp, 8
  000fa	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  000ff	d9 5c 24 04	 fstp	 DWORD PTR tv154[esp+8]
  00103	f3 0f 58 44 24
	04		 addss	 xmm0, DWORD PTR tv154[esp+8]
  00109	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0

; 1270 : 	}
; 1271 : }

  0010e	5e		 pop	 esi
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 0c 00	 ret	 12			; 0000000cH
$LN2@UpdateStep:

; 1264 : 		}
; 1265 : 	}
; 1266 : 	else
; 1267 : 	{
; 1268 : 		iPlaySoundIndex = -1;

  00115	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1

; 1269 : 		fNextPlayTime = 0.0f;

  0011c	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
$LN3@UpdateStep:

; 1270 : 	}
; 1271 : }

  00123	5e		 pop	 esi
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
?UpdateStepSound@SAmbienceInstance@CArea@@QAEXMMM@Z ENDP ; CArea::SAmbienceInstance::UpdateStepSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?UpdateOnceSound@SAmbienceInstance@CArea@@QAEXMMM@Z
_TEXT	SEGMENT
_fxCenter$ = 8						; size = 4
_fyCenter$ = 12						; size = 4
_fzCenter$ = 16						; size = 4
?UpdateOnceSound@SAmbienceInstance@CArea@@QAEXMMM@Z PROC ; CArea::SAmbienceInstance::UpdateOnceSound, COMDAT
; _this$ = ecx

; 1226 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	51		 push	 ecx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx

; 1227 : 	float fDistance = sqrtf((fx - fxCenter)*(fx - fxCenter) + (fy - fyCenter)*(fy - fyCenter) + (fz - fzCenter)*(fz - fzCenter));

  0000a	f3 0f 10 4e 08	 movss	 xmm1, DWORD PTR [esi+8]
  0000f	f3 0f 5c 4d 0c	 subss	 xmm1, DWORD PTR _fyCenter$[ebp]
  00014	f3 0f 10 56 04	 movss	 xmm2, DWORD PTR [esi+4]
  00019	f3 0f 5c 55 08	 subss	 xmm2, DWORD PTR _fxCenter$[ebp]
  0001e	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00023	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _fzCenter$[ebp]
  00028	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0002c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00030	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00034	f3 0f 58 ca	 addss	 xmm1, xmm2
  00038	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0003c	0f 5a c1	 cvtps2pd xmm0, xmm1
  0003f	0f 57 c9	 xorps	 xmm1, xmm1
  00042	66 0f 2e c8	 ucomisd xmm1, xmm0
  00046	77 06		 ja	 SHORT $LN20@UpdateOnce
  00048	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0004c	eb 05		 jmp	 SHORT $LN21@UpdateOnce
$LN20@UpdateOnce:
  0004e	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN21@UpdateOnce:
  00053	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1228 : 	if (DWORD(fDistance) < dwRange)

  00057	e8 00 00 00 00	 call	 __ftoui3
  0005c	3b 46 10	 cmp	 eax, DWORD PTR [esi+16]
  0005f	73 51		 jae	 SHORT $LN2@UpdateOnce

; 1229 : 	{
; 1230 : 		if (-1 == iPlaySoundIndex)

  00061	83 7e 18 ff	 cmp	 DWORD PTR [esi+24], -1
  00065	75 52		 jne	 SHORT $LN3@UpdateOnce
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00067	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0006a	3b 46 60	 cmp	 eax, DWORD PTR [esi+96]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1232 : 			if (AmbienceData.AmbienceSoundVector.empty())

  0006d	74 4a		 je	 SHORT $LN3@UpdateOnce
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00073	72 02		 jb	 SHORT $LN16@UpdateOnce

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00075	8b 00		 mov	 eax, DWORD PTR [eax]
$LN16@UpdateOnce:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1236 : 			iPlaySoundIndex = CSoundManager::Instance().PlayAmbienceSound3D(fx, fy, fz, c_szFileName);

  00077	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  00082	6a 01		 push	 1
  00084	50		 push	 eax
  00085	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00088	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0008e	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  00093	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00099	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  0009e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a3	e8 00 00 00 00	 call	 ?PlayAmbienceSound3D@CSoundManager@@QAEHMMMPBDH@Z ; CSoundManager::PlayAmbienceSound3D
  000a8	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 1243 : 	}
; 1244 : }

  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 0c 00	 ret	 12			; 0000000cH
$LN2@UpdateOnce:

; 1237 : //			Tracef(" %d : OncePlay [%f] : %s\n", iPlaySoundIndex, fDistance, c_szFileName);
; 1238 : 		}
; 1239 : 	}
; 1240 : 	else
; 1241 : 	{
; 1242 : 		iPlaySoundIndex = -1;

  000b2	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1
$LN3@UpdateOnce:

; 1243 : 	}
; 1244 : }

  000b9	5e		 pop	 esi
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 0c 00	 ret	 12			; 0000000cH
?UpdateOnceSound@SAmbienceInstance@CArea@@QAEXMMM@Z ENDP ; CArea::SAmbienceInstance::UpdateOnceSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__Update@SAmbienceInstance@CArea@@QAEXMMM@Z
_TEXT	SEGMENT
_fxCenter$ = 8						; size = 4
_fyCenter$ = 12						; size = 4
_fzCenter$ = 16						; size = 4
?__Update@SAmbienceInstance@CArea@@QAEXMMM@Z PROC	; CArea::SAmbienceInstance::__Update, COMDAT
; _this$ = ecx

; 1218 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 1219 : 	if (0 == dwRange)

  00005	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00009	74 28		 je	 SHORT $LN1@Update

; 1220 : 		return;
; 1221 : 
; 1222 : 	(this->*Update)(fxCenter, fyCenter, fzCenter);

  0000b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fzCenter$[ebp]
  00010	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00013	8b 40 68	 mov	 eax, DWORD PTR [eax+104]
  00016	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0001c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fyCenter$[ebp]
  00021	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00027	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fxCenter$[ebp]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	ff d0		 call	 eax
$LN1@Update:

; 1223 : }

  00033	5d		 pop	 ebp
  00034	c2 0c 00	 ret	 12			; 0000000cH
?__Update@SAmbienceInstance@CArea@@QAEXMMM@Z ENDP	; CArea::SAmbienceInstance::__Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.h
;	COMDAT ??1SAmbienceInstance@CArea@@UAE@XZ
_TEXT	SEGMENT
??1SAmbienceInstance@CArea@@UAE@XZ PROC			; CArea::SAmbienceInstance::~SAmbienceInstance, COMDAT
; _this$ = ecx

; 76   : 			virtual ~SAmbienceInstance() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAmbienceInstance@CArea@@6B@
  0000c	e8 00 00 00 00	 call	 ??1TPropertyAmbience@prt@@QAE@XZ
  00011	8b ce		 mov	 ecx, esi
  00013	5e		 pop	 esi
  00014	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
??1SAmbienceInstance@CArea@@UAE@XZ ENDP			; CArea::SAmbienceInstance::~SAmbienceInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ??0SAmbienceInstance@CArea@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SAmbienceInstance@CArea@@QAE@XZ PROC			; CArea::SAmbienceInstance::SAmbienceInstance, COMDAT
; _this$ = ecx

; 1348 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0CScreen@@QAE@XZ	; CScreen::CScreen
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAmbienceInstance@CArea@@6B@

; 1355 : }

  00015	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 34 0f 00
	00 00		 mov	 DWORD PTR [esi+52], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00029	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00030	c7 46 4c 0f 00
	00 00		 mov	 DWORD PTR [esi+76], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00037	c6 46 38 00	 mov	 BYTE PTR [esi+56], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
  00042	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
  00049	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp

; 1349 : 	fx = 0.0f;

  00050	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1350 : 	fy = 0.0f;

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1351 : 	fz = 0.0f;

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 1352 : 	dwRange = 0;

  00065	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 1353 : 	iPlaySoundIndex = -1;

  0006c	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1

; 1354 : 	fNextPlayTime = 0.0f;

  00073	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 1355 : }

  0007a	5e		 pop	 esi
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
??0SAmbienceInstance@CArea@@QAE@XZ ENDP			; CArea::SAmbienceInstance::SAmbienceInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAE@XZ PROC ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::~vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 3a		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0000c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00011	2b d1		 sub	 edx, ecx
  00013	f7 ea		 imul	 edx
  00015	c1 fa 03	 sar	 edx, 3
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001f	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00022	c1 e0 04	 shl	 eax, 4
  00025	50		 push	 eax
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00035	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  0003c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00043	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00044	c3		 ret	 0
??1?$vector@USObjectData@CArea@@V?$allocator@USObjectData@CArea@@@std@@@std@@QAE@XZ ENDP ; std::vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >::~vector<CArea::SObjectData,std::allocator<CArea::SObjectData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?InitializeRotation@SObjectData@CArea@@QAEXXZ
_TEXT	SEGMENT
?InitializeRotation@SObjectData@CArea@@QAEXXZ PROC	; CArea::SObjectData::InitializeRotation, COMDAT
; _this$ = ecx

; 23   : 	m_fYaw=m_fPitch=m_fRoll=0.0f;

  00000	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00007	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  0000e	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 24   : }

  00015	c3		 ret	 0
?InitializeRotation@SObjectData@CArea@@QAEXXZ ENDP	; CArea::SObjectData::InitializeRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@CAXXZ PROC ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@CAXXZ ENDP ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAE@XZ PROC ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::~vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCSpeedTreeWrapper@@V?$allocator@PAVCSpeedTreeWrapper@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >::~vector<CSpeedTreeWrapper *,std::allocator<CSpeedTreeWrapper *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> > >::~map<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >
??1?$map@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> > >::~map<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv1186 = -8						; size = 4
tv1182 = -8						; size = 4
tv1149 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
__Where$ = 8						; size = 4
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Extract, COMDAT
; _this$ = ecx

; 502  :     _Nodeptr _Extract(_Unchecked_const_iterator _Where) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 503  :         _Nodeptr _Erasednode = _Where._Ptr; // node to erase

  00006	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b d9		 mov	 ebx, ecx
  0000d	89 45 fc	 mov	 DWORD PTR __Erasednode$1$[ebp], eax
  00010	57		 push	 edi

; 504  :         ++_Where; // save successor iterator for return

  00011	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  00014	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >,std::_Iterator_base0>::operator++

; 505  : 
; 506  :         _Nodeptr _Fixnode; // the node to recolor as needed
; 507  :         _Nodeptr _Fixnodeparent; // parent of _Fixnode (which may be nil)
; 508  :         _Nodeptr _Pnode = _Erasednode;
; 509  : 
; 510  :         if (_Pnode->_Left->_Isnil) {

  00019	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
  0001c	8b 02		 mov	 eax, DWORD PTR [edx]
  0001e	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00021	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00025	75 18		 jne	 SHORT $LN86@Extract

; 511  :             _Fixnode = _Pnode->_Right; // stitch up right subtree
; 512  :         } else if (_Pnode->_Right->_Isnil) {

  00027	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0002b	74 04		 je	 SHORT $LN7@Extract

; 513  :             _Fixnode = _Pnode->_Left; // stitch up left subtree

  0002d	8b f8		 mov	 edi, eax

; 514  :         } else { // two subtrees, must lift successor node to replace erased

  0002f	eb 0e		 jmp	 SHORT $LN86@Extract
$LN7@Extract:

; 515  :             _Pnode   = _Where._Ptr; // _Pnode is successor node

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]

; 516  :             _Fixnode = _Pnode->_Right; // _Fixnode is only subtree

  00034	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  00037	3b ca		 cmp	 ecx, edx

; 517  :         }
; 518  : 
; 519  :         if (_Pnode == _Erasednode) { // at most one subtree, relink it

  00039	0f 85 8b 00 00
	00		 jne	 $LN9@Extract
$LN86@Extract:

; 520  :             _Fixnodeparent = _Erasednode->_Parent;
; 521  :             if (!_Fixnode->_Isnil) {

  0003f	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00043	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00046	75 03		 jne	 SHORT $LN11@Extract

; 522  :                 _Fixnode->_Parent = _Fixnodeparent; // link up

  00048	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN11@Extract:

; 523  :             }
; 524  : 
; 525  :             if (_Myhead->_Parent == _Erasednode) {

  0004b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004d	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  00050	75 05		 jne	 SHORT $LN12@Extract

; 526  :                 _Myhead->_Parent = _Fixnode; // link down from root

  00052	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00055	eb 0b		 jmp	 SHORT $LN15@Extract
$LN12@Extract:

; 527  :             } else if (_Fixnodeparent->_Left == _Erasednode) {

  00057	39 16		 cmp	 DWORD PTR [esi], edx
  00059	75 04		 jne	 SHORT $LN14@Extract

; 528  :                 _Fixnodeparent->_Left = _Fixnode; // link down to left

  0005b	89 3e		 mov	 DWORD PTR [esi], edi

; 529  :             } else {

  0005d	eb 03		 jmp	 SHORT $LN15@Extract
$LN14@Extract:

; 530  :                 _Fixnodeparent->_Right = _Fixnode; // link down to right

  0005f	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN15@Extract:

; 531  :             }
; 532  : 
; 533  :             if (_Myhead->_Left == _Erasednode) {

  00062	8b 03		 mov	 eax, DWORD PTR [ebx]
  00064	39 10		 cmp	 DWORD PTR [eax], edx
  00066	75 2b		 jne	 SHORT $LN16@Extract

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00068	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0006c	74 04		 je	 SHORT $LN42@Extract
  0006e	8b d6		 mov	 edx, esi
  00070	eb 1c		 jmp	 SHORT $LN48@Extract
$LN42@Extract:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00072	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00074	8b d7		 mov	 edx, edi

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00076	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0007a	75 12		 jne	 SHORT $LN48@Extract
  0007c	0f 1f 40 00	 npad	 4
$LL47@Extract:
  00080	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00082	8b d1		 mov	 edx, ecx
  00084	8b c8		 mov	 ecx, eax
  00086	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0008a	74 f4		 je	 SHORT $LL47@Extract
  0008c	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN48@Extract:

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  0008e	89 10		 mov	 DWORD PTR [eax], edx
  00090	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
$LN16@Extract:

; 535  :                                                   : _Min(_Fixnode); // smallest in relinked subtree
; 536  :             }
; 537  : 
; 538  :             if (_Myhead->_Right == _Erasednode) {

  00093	8b 03		 mov	 eax, DWORD PTR [ebx]
  00095	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00098	75 2b		 jne	 SHORT $LN17@Extract

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  0009a	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0009e	74 0a		 je	 SHORT $LN44@Extract
  000a0	8b ce		 mov	 ecx, esi
  000a2	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000a5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000a8	eb 7c		 jmp	 SHORT $LN55@Extract
$LN44@Extract:

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000aa	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000ad	8b cf		 mov	 ecx, edi

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000af	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000b3	75 0b		 jne	 SHORT $LN52@Extract
$LL51@Extract:

; 444  :             _Pnode = _Pnode->_Right;

  000b5	8b c8		 mov	 ecx, eax
  000b7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ba	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000be	74 f5		 je	 SHORT $LL51@Extract
$LN52@Extract:
  000c0	8b 03		 mov	 eax, DWORD PTR [ebx]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000c2	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN17@Extract:

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000c5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000c8	eb 5c		 jmp	 SHORT $LN55@Extract
$LN9@Extract:

; 543  :             _Erasednode->_Left->_Parent = _Pnode; // link left up

  000ca	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 544  :             _Pnode->_Left               = _Erasednode->_Left; // link successor down

  000cd	8b 02		 mov	 eax, DWORD PTR [edx]
  000cf	89 01		 mov	 DWORD PTR [ecx], eax

; 545  : 
; 546  :             if (_Pnode == _Erasednode->_Right) {

  000d1	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  000d4	75 04		 jne	 SHORT $LN18@Extract

; 547  :                 _Fixnodeparent = _Pnode; // successor is next to erased

  000d6	8b f1		 mov	 esi, ecx

; 548  :             } else { // successor further down, link in place of erased

  000d8	eb 1a		 jmp	 SHORT $LN19@Extract
$LN18@Extract:

; 549  :                 _Fixnodeparent = _Pnode->_Parent; // parent is successor's
; 550  :                 if (!_Fixnode->_Isnil) {

  000da	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  000de	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000e1	75 03		 jne	 SHORT $LN20@Extract

; 551  :                     _Fixnode->_Parent = _Fixnodeparent; // link fix up

  000e3	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN20@Extract:

; 552  :                 }
; 553  : 
; 554  :                 _Fixnodeparent->_Left        = _Fixnode; // link fix down

  000e6	89 3e		 mov	 DWORD PTR [esi], edi

; 555  :                 _Pnode->_Right               = _Erasednode->_Right; // link next down

  000e8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000eb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 556  :                 _Erasednode->_Right->_Parent = _Pnode; // right up

  000ee	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f1	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN19@Extract:

; 557  :             }
; 558  : 
; 559  :             if (_Myhead->_Parent == _Erasednode) {

  000f4	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f6	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  000f9	75 05		 jne	 SHORT $LN21@Extract

; 560  :                 _Myhead->_Parent = _Pnode; // link down from root

  000fb	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000fe	eb 0e		 jmp	 SHORT $LN24@Extract
$LN21@Extract:

; 561  :             } else if (_Erasednode->_Parent->_Left == _Erasednode) {

  00100	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00103	39 10		 cmp	 DWORD PTR [eax], edx
  00105	75 04		 jne	 SHORT $LN23@Extract

; 562  :                 _Erasednode->_Parent->_Left = _Pnode; // link down to left

  00107	89 08		 mov	 DWORD PTR [eax], ecx

; 563  :             } else {

  00109	eb 03		 jmp	 SHORT $LN24@Extract
$LN23@Extract:

; 564  :                 _Erasednode->_Parent->_Right = _Pnode; // link down to right

  0010b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN24@Extract:

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  0010e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 106  :     _Ty _Tmp = _STD move(_Left);

  00111	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  00114	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  00117	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0011a	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  0011d	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 108  :     _Right   = _STD move(_Tmp);

  00120	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  00123	88 50 0c	 mov	 BYTE PTR [eax+12], dl
$LN55@Extract:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 571  :         if (_Erasednode->_Color == _Black) { // erasing black link, must recolor/rebalance tree

  00126	80 fa 01	 cmp	 dl, 1
  00129	0f 85 46 01 00
	00		 jne	 $LN25@Extract

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0012f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00131	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  00134	0f 84 37 01 00
	00		 je	 $LN3@Extract
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Extract:
  00140	80 7f 0c 01	 cmp	 BYTE PTR [edi+12], 1
  00144	89 75 f8	 mov	 DWORD PTR tv1186[ebp], esi
  00147	0f 85 24 01 00
	00		 jne	 $LN3@Extract

; 573  :                 if (_Fixnode == _Fixnodeparent->_Left) { // fixup left subtree

  0014d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014f	3b f9		 cmp	 edi, ecx
  00151	0f 85 a2 00 00
	00		 jne	 $LN26@Extract

; 574  :                     _Pnode = _Fixnodeparent->_Right;

  00157	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 575  :                     if (_Pnode->_Color == _Red) { // rotate red up from right subtree

  0015a	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  0015e	75 43		 jne	 SHORT $LN87@Extract

; 576  :                         _Pnode->_Color         = _Black;

  00160	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00164	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 577  :                         _Fixnodeparent->_Color = _Red;

  00167	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0016b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016d	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00170	8b 01		 mov	 eax, DWORD PTR [ecx]
  00172	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00176	75 03		 jne	 SHORT $LN57@Extract

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00178	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN57@Extract:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0017b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0017e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00181	8b 03		 mov	 eax, DWORD PTR [ebx]
  00183	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00186	75 05		 jne	 SHORT $LN58@Extract

; 469  :             _Myhead->_Parent = _Pnode;

  00188	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0018b	eb 0e		 jmp	 SHORT $LN61@Extract
$LN58@Extract:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  0018d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00190	3b 30		 cmp	 esi, DWORD PTR [eax]
  00192	75 04		 jne	 SHORT $LN60@Extract

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  00194	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :         } else {

  00196	eb 03		 jmp	 SHORT $LN61@Extract
$LN60@Extract:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00198	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN61@Extract:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  0019b	89 31		 mov	 DWORD PTR [ecx], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  0019d	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 578  :                         _Lrotate(_Fixnodeparent);
; 579  :                         _Pnode = _Fixnodeparent->_Right;

  001a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN87@Extract:

; 580  :                     }
; 581  : 
; 582  :                     if (_Pnode->_Isnil) {

  001a3	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001a7	0f 85 b1 00 00
	00		 jne	 $LN2@Extract

; 583  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 584  :                     } else if (_Pnode->_Left->_Color == _Black
; 585  :                                && _Pnode->_Right->_Color == _Black) { // redden right subtree with black children

  001ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  001af	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  001b3	75 0d		 jne	 SHORT $LN89@Extract
  001b5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001b8	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001bc	0f 84 98 00 00
	00		 je	 $LN93@Extract
$LN89@Extract:

; 586  :                         _Pnode->_Color = _Red;
; 587  :                         _Fixnode       = _Fixnodeparent;
; 588  :                     } else { // must rearrange right subtree
; 589  :                         if (_Pnode->_Right->_Color == _Black) { // rotate red up from left sub-subtree

  001c2	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001c5	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001c9	75 13		 jne	 SHORT $LN33@Extract

; 590  :                             _Pnode->_Left->_Color = _Black;

  001cb	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 591  :                             _Pnode->_Color        = _Red;

  001cf	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 592  :                             _Rrotate(_Pnode);

  001d3	51		 push	 ecx
  001d4	8b cb		 mov	 ecx, ebx
  001d6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Rrotate

; 593  :                             _Pnode = _Fixnodeparent->_Right;

  001db	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN33@Extract:

; 594  :                         }
; 595  : 
; 596  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  001de	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  001e1	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 597  :                         _Fixnodeparent->_Color = _Black;

  001e4	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 598  :                         _Pnode->_Right->_Color = _Black;

  001e8	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 599  :                         _Lrotate(_Fixnodeparent);

  001eb	8b cb		 mov	 ecx, ebx
  001ed	56		 push	 esi
  001ee	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  001f2	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Lrotate

; 600  :                         break; // tree now recolored/rebalanced

  001f7	eb 78		 jmp	 SHORT $LN3@Extract
$LN26@Extract:

; 601  :                     }
; 602  :                 } else { // fixup right subtree
; 603  :                     _Pnode = _Fixnodeparent->_Left;
; 604  :                     if (_Pnode->_Color == _Red) { // rotate red up from left subtree

  001f9	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  001fd	75 44		 jne	 SHORT $LN88@Extract

; 605  :                         _Pnode->_Color         = _Black;

  001ff	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00203	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 606  :                         _Fixnodeparent->_Color = _Red;

  00205	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00209	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0020c	89 06		 mov	 DWORD PTR [esi], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0020e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00211	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00215	75 03		 jne	 SHORT $LN64@Extract

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00217	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN64@Extract:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0021a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0021d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00220	8b 03		 mov	 eax, DWORD PTR [ebx]
  00222	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00225	75 05		 jne	 SHORT $LN65@Extract

; 491  :             _Myhead->_Parent = _Pnode;

  00227	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0022a	eb 0f		 jmp	 SHORT $LN68@Extract
$LN65@Extract:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  0022c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0022f	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00232	75 05		 jne	 SHORT $LN67@Extract

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00234	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  00237	eb 02		 jmp	 SHORT $LN68@Extract
$LN67@Extract:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00239	89 08		 mov	 DWORD PTR [eax], ecx
$LN68@Extract:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0023b	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 499  :         _Wherenode->_Parent = _Pnode;

  0023e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 607  :                         _Rrotate(_Fixnodeparent);
; 608  :                         _Pnode = _Fixnodeparent->_Left;

  00241	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN88@Extract:

; 609  :                     }
; 610  : 
; 611  :                     if (_Pnode->_Isnil) {

  00243	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00247	75 15		 jne	 SHORT $LN2@Extract

; 612  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 613  :                     } else if (_Pnode->_Right->_Color == _Black
; 614  :                                && _Pnode->_Left->_Color == _Black) { // redden left subtree with black children

  00249	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0024c	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  00250	75 3a		 jne	 SHORT $LN90@Extract
  00252	8b 01		 mov	 eax, DWORD PTR [ecx]
  00254	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00258	75 32		 jne	 SHORT $LN90@Extract
$LN93@Extract:

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0025a	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0
$LN2@Extract:
  0025e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00260	8b 4d f8	 mov	 ecx, DWORD PTR tv1186[ebp]
  00263	8b f9		 mov	 edi, ecx
  00265	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00268	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0026b	0f 85 cf fe ff
	ff		 jne	 $LL4@Extract
$LN3@Extract:

; 629  :                         break; // tree now recolored/rebalanced
; 630  :                     }
; 631  :                 }
; 632  :             }
; 633  : 
; 634  :             _Fixnode->_Color = _Black; // stopping node is black

  00271	c6 47 0c 01	 mov	 BYTE PTR [edi+12], 1
$LN25@Extract:

; 635  :         }
; 636  : 
; 637  :         if (0 < _Mysize) {

  00275	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00278	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0027b	85 c9		 test	 ecx, ecx
  0027d	74 04		 je	 SHORT $LN40@Extract

; 638  :             --_Mysize;

  0027f	49		 dec	 ecx
  00280	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN40@Extract:

; 639  :         }
; 640  : 
; 641  :         return _Erasednode;
; 642  :     }

  00283	5f		 pop	 edi
  00284	5e		 pop	 esi
  00285	5b		 pop	 ebx
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 04 00	 ret	 4
$LN90@Extract:

; 615  :                         _Pnode->_Color = _Red;
; 616  :                         _Fixnode       = _Fixnodeparent;
; 617  :                     } else { // must rearrange left subtree
; 618  :                         if (_Pnode->_Left->_Color == _Black) { // rotate red up from right sub-subtree

  0028c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0028e	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00292	75 12		 jne	 SHORT $LN39@Extract

; 619  :                             _Pnode->_Right->_Color = _Black;

  00294	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 620  :                             _Pnode->_Color         = _Red;

  00298	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 621  :                             _Lrotate(_Pnode);

  0029c	51		 push	 ecx
  0029d	8b cb		 mov	 ecx, ebx
  0029f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Lrotate

; 622  :                             _Pnode = _Fixnodeparent->_Left;

  002a4	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN39@Extract:

; 623  :                         }
; 624  : 
; 625  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  002a6	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  002a9	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 626  :                         _Fixnodeparent->_Color = _Black;

  002ac	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 627  :                         _Pnode->_Left->_Color  = _Black;

  002b0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 628  :                         _Rrotate(_Fixnodeparent);

  002b2	8b cb		 mov	 ecx, ebx
  002b4	56		 push	 esi
  002b5	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  002b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Rrotate
  002be	eb b1		 jmp	 SHORT $LN3@Extract
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Rrotate, COMDAT
; _this$ = ecx

; 480  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0000e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Rrotate

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0e		 jne	 SHORT $LN3@Rrotate

; 491  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0002a	89 56 08	 mov	 DWORD PTR [esi+8], edx
  0002d	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN3@Rrotate:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00035	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00038	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003b	75 0e		 jne	 SHORT $LN5@Rrotate

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0003d	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  00040	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00043	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN5@Rrotate:

; 494  :         } else {
; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0004b	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0004d	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00050	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Lrotate, COMDAT
; _this$ = ecx

; 458  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 72 08	 mov	 esi, DWORD PTR [edx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0000a	8b 06		 mov	 eax, DWORD PTR [esi]
  0000c	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Lrotate

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0d		 jne	 SHORT $LN3@Lrotate

; 469  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0002a	89 16		 mov	 DWORD PTR [esi], edx
  0002c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0002f	5e		 pop	 esi
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
$LN3@Lrotate:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	3b 10		 cmp	 edx, DWORD PTR [eax]
  00039	75 0c		 jne	 SHORT $LN5@Lrotate

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  0003b	89 30		 mov	 DWORD PTR [eax], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0003d	89 16		 mov	 DWORD PTR [esi], edx
  0003f	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN5@Lrotate:

; 472  :         } else {
; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00047	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0004a	89 16		 mov	 DWORD PTR [esi], edx
  0004c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0004f	5e		 pop	 esi
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCEffectInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCEffectInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CEffectInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CEffectInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCEffectInstance@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCEffectInstance@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CEffectInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CEffectInstance *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\memory
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT
; _this$ = ecx

; 2511 :         if (_Mypair._Myval2) {

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	74 06		 je	 SHORT $LN6@unique_ptr

; 2402 :         delete _Ptr;

  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	6a 01		 push	 1
  0000a	ff 10		 call	 DWORD PTR [eax]
$LN6@unique_ptr:

; 2512 :             _Mypair._Get_first()(_Mypair._Myval2);
; 2513 :         }
; 2514 :     }

  0000c	c3		 ret	 0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z PROC ; std::_Traits_compare<std::char_traits<char> >, COMDAT

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00006	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00007	8b 5d 14	 mov	 ebx, DWORD PTR __Right_size$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  0000a	56		 push	 esi

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  0000e	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Left_size$[ebp]
  00012	3b df		 cmp	 ebx, edi
  00014	8b cf		 mov	 ecx, edi
  00016	0f 42 cb	 cmovb	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00019	83 e9 04	 sub	 ecx, 4
  0001c	72 13		 jb	 SHORT $LN12@Traits_com
  0001e	66 90		 npad	 2
$LL13@Traits_com:
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	3b 06		 cmp	 eax, DWORD PTR [esi]
  00024	75 10		 jne	 SHORT $LN11@Traits_com
  00026	83 c2 04	 add	 edx, 4
  00029	83 c6 04	 add	 esi, 4
  0002c	83 e9 04	 sub	 ecx, 4
  0002f	73 ef		 jae	 SHORT $LL13@Traits_com
$LN12@Traits_com:
  00031	83 f9 fc	 cmp	 ecx, -4			; fffffffcH
  00034	74 34		 je	 SHORT $LN10@Traits_com
$LN11@Traits_com:
  00036	8a 02		 mov	 al, BYTE PTR [edx]
  00038	3a 06		 cmp	 al, BYTE PTR [esi]
  0003a	75 27		 jne	 SHORT $LN14@Traits_com
  0003c	83 f9 fd	 cmp	 ecx, -3			; fffffffdH
  0003f	74 29		 je	 SHORT $LN10@Traits_com
  00041	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00044	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00047	75 1a		 jne	 SHORT $LN14@Traits_com
  00049	83 f9 fe	 cmp	 ecx, -2			; fffffffeH
  0004c	74 1c		 je	 SHORT $LN10@Traits_com
  0004e	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00051	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00054	75 0d		 jne	 SHORT $LN14@Traits_com
  00056	83 f9 ff	 cmp	 ecx, -1
  00059	74 0f		 je	 SHORT $LN10@Traits_com
  0005b	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  0005e	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00061	74 07		 je	 SHORT $LN10@Traits_com
$LN14@Traits_com:
  00063	1b c0		 sbb	 eax, eax
  00065	83 c8 01	 or	 eax, 1
  00068	eb 02		 jmp	 SHORT $LN15@Traits_com
$LN10@Traits_com:
  0006a	33 c0		 xor	 eax, eax
$LN15@Traits_com:

; 510  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));
; 512  : 
; 513  :     if (_Ans != 0) {

  0006c	85 c0		 test	 eax, eax
  0006e	75 10		 jne	 SHORT $LN4@Traits_com

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00070	3b df		 cmp	 ebx, edi
  00072	76 08		 jbe	 SHORT $LN16@Traits_com

; 522  :         return 1;
; 523  :     }
; 524  : 
; 525  :     return 0;
; 526  : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	83 c8 ff	 or	 eax, -1
  00079	5b		 pop	 ebx
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN16@Traits_com:

; 518  :         return -1;
; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  0007c	1b c0		 sbb	 eax, eax
  0007e	f7 d8		 neg	 eax
$LN4@Traits_com:

; 522  :         return 1;
; 523  :     }
; 524  : 
; 525  :     return 0;
; 526  : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ENDP ; std::_Traits_compare<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1TPropertyDungeonBlock@prt@@QAE@XZ
_TEXT	SEGMENT
??1TPropertyDungeonBlock@prt@@QAE@XZ PROC		; prt::TPropertyDungeonBlock::~TPropertyDungeonBlock, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@TPropertyD

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 30	 push	 DWORD PTR [esi+48]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@TPropertyD:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 44 0f 00
	00 00		 mov	 DWORD PTR [esi+68], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 30 00	 mov	 BYTE PTR [esi+48], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0002a	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0002d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00030	72 0d		 jb	 SHORT $LN17@TPropertyD

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00032	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	50		 push	 eax
  00034	ff 76 18	 push	 DWORD PTR [esi+24]
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003c	83 c4 08	 add	 esp, 8
$LN17@TPropertyD:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00057	72 0c		 jb	 SHORT $LN27@TPropertyD

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00059	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005a	50		 push	 eax
  0005b	ff 36		 push	 DWORD PTR [esi]
  0005d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00062	83 c4 08	 add	 esp, 8
$LN27@TPropertyD:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00065	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00073	c6 06 00	 mov	 BYTE PTR [esi], 0
  00076	5e		 pop	 esi
  00077	c3		 ret	 0
??1TPropertyDungeonBlock@prt@@QAE@XZ ENDP		; prt::TPropertyDungeonBlock::~TPropertyDungeonBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1TPropertyAmbience@prt@@QAE@XZ
_TEXT	SEGMENT
??1TPropertyAmbience@prt@@QAE@XZ PROC			; prt::TPropertyAmbience::~TPropertyAmbience, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	53		 push	 ebx
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  00007	8d 5f 3c	 lea	 ebx, DWORD PTR [edi+60]
  0000a	85 c0		 test	 eax, eax
  0000c	74 45		 je	 SHORT $LN6@TPropertyA

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000e	53		 push	 ebx
  0000f	ff 73 04	 push	 DWORD PTR [ebx+4]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00018	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0001b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00022	f7 e9		 imul	 ecx
  00024	c1 fa 02	 sar	 edx, 2
  00027	8b c2		 mov	 eax, edx
  00029	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00031	c1 e0 03	 shl	 eax, 3
  00034	50		 push	 eax
  00035	ff 33		 push	 DWORD PTR [ebx]
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003c	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00045	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  0004c	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN6@TPropertyA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00053	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  00056	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00059	72 0d		 jb	 SHORT $LN16@TPropertyA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0005b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005c	50		 push	 eax
  0005d	ff 77 18	 push	 DWORD PTR [edi+24]
  00060	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00065	83 c4 08	 add	 esp, 8
$LN16@TPropertyA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00068	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006f	c7 47 2c 0f 00
	00 00		 mov	 DWORD PTR [edi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00076	c6 47 18 00	 mov	 BYTE PTR [edi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0007a	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  0007d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00080	72 0c		 jb	 SHORT $LN26@TPropertyA

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00082	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	50		 push	 eax
  00084	ff 37		 push	 DWORD PTR [edi]
  00086	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008b	83 c4 08	 add	 esp, 8
$LN26@TPropertyA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0008e	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00095	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009c	c6 07 00	 mov	 BYTE PTR [edi], 0
  0009f	5f		 pop	 edi
  000a0	5b		 pop	 ebx
  000a1	c3		 ret	 0
??1TPropertyAmbience@prt@@QAE@XZ ENDP			; prt::TPropertyAmbience::~TPropertyAmbience
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1TPropertyEffect@prt@@QAE@XZ
_TEXT	SEGMENT
??1TPropertyEffect@prt@@QAE@XZ PROC			; prt::TPropertyEffect::~TPropertyEffect, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@TPropertyE

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 18	 push	 DWORD PTR [esi+24]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@TPropertyE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0002a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0002d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00030	72 0c		 jb	 SHORT $LN17@TPropertyE

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00032	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	50		 push	 eax
  00034	ff 36		 push	 DWORD PTR [esi]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003b	83 c4 08	 add	 esp, 8
$LN17@TPropertyE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003e	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00045	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0004f	5e		 pop	 esi
  00050	c3		 ret	 0
??1TPropertyEffect@prt@@QAE@XZ ENDP			; prt::TPropertyEffect::~TPropertyEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1TPropertyBuilding@prt@@QAE@XZ
_TEXT	SEGMENT
??1TPropertyBuilding@prt@@QAE@XZ PROC			; prt::TPropertyBuilding::~TPropertyBuilding, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@TPropertyB

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 30	 push	 DWORD PTR [esi+48]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@TPropertyB:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 44 0f 00
	00 00		 mov	 DWORD PTR [esi+68], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 30 00	 mov	 BYTE PTR [esi+48], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0002a	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0002d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00030	72 0d		 jb	 SHORT $LN17@TPropertyB

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00032	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	50		 push	 eax
  00034	ff 76 18	 push	 DWORD PTR [esi+24]
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003c	83 c4 08	 add	 esp, 8
$LN17@TPropertyB:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00057	72 0c		 jb	 SHORT $LN27@TPropertyB

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00059	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005a	50		 push	 eax
  0005b	ff 36		 push	 DWORD PTR [esi]
  0005d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00062	83 c4 08	 add	 esp, 8
$LN27@TPropertyB:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00065	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00073	c6 06 00	 mov	 BYTE PTR [esi], 0
  00076	5e		 pop	 esi
  00077	c3		 ret	 0
??1TPropertyBuilding@prt@@QAE@XZ ENDP			; prt::TPropertyBuilding::~TPropertyBuilding
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
__Lock$3 = -20						; size = 4
__Psave$4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Psave_guard$5 = 8					; size = 4
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT

; 426  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 427  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

  00028	6a 00		 push	 0
  0002a	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  0002d	e8 00 00 00 00	 call	 ??0_Lockit@std@@QAE@H@Z	; std::_Lockit::_Lockit

; 105  :             if (_Id == 0) { // still zero, allocate stamp

  00032	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id

; 428  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

  00038	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	89 5d f0	 mov	 DWORD PTR __Psave$4[ebp], ebx

; 105  :             if (_Id == 0) { // still zero, allocate stamp

  00048	85 ff		 test	 edi, edi
  0004a	75 2f		 jne	 SHORT $LN11@use_facet

; 106  :                 _BEGIN_LOCK(_LOCK_LOCALE)

  0004c	57		 push	 edi
  0004d	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$3[ebp]
  00050	e8 00 00 00 00	 call	 ??0_Lockit@std@@QAE@H@Z	; std::_Lockit::_Lockit

; 107  :                 if (_Id == 0) {

  00055	39 3d 00 00 00
	00		 cmp	 DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, edi ; std::ctype<char>::id
  0005b	75 10		 jne	 SHORT $LN12@use_facet

; 108  :                     _Id = static_cast<size_t>(++_Id_cnt);

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00062	40		 inc	 eax
  00063	a3 00 00 00 00	 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00068	a3 00 00 00 00	 mov	 DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, eax ; std::ctype<char>::id
$LN12@use_facet:

; 109  :                 }
; 110  :                 _END_LOCK()

  0006d	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$3[ebp]
  00070	e8 00 00 00 00	 call	 ??1_Lockit@std@@QAE@XZ	; std::_Lockit::~_Lockit
  00075	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
$LN11@use_facet:

; 374  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

  0007b	8b 4d 08	 mov	 ecx, DWORD PTR __Loc$[ebp]
  0007e	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00081	3b 79 0c	 cmp	 edi, DWORD PTR [ecx+12]
  00084	73 0c		 jae	 SHORT $LN19@use_facet
  00086	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00089	8b 34 b8	 mov	 esi, DWORD PTR [eax+edi*4]

; 375  :         if (_Facptr || !_Ptr->_Xparent) {

  0008c	85 f6		 test	 esi, esi
  0008e	75 5a		 jne	 SHORT $LN34@use_facet
  00090	eb 02		 jmp	 SHORT $LN36@use_facet
$LN19@use_facet:

; 111  :             }
; 112  :             return _Id;
; 113  :         }
; 114  : 
; 115  :     private:
; 116  :         size_t _Id; // the identifier stamp
; 117  : 
; 118  :         __PURE_APPDOMAIN_GLOBAL static int _Id_cnt;
; 119  :     };
; 120  : 
; 121  :     class _Locimp;
; 122  : 
; 123  :     // CLASS facet
; 124  :     class _CRTIMP2_PURE_IMPORT facet : public _Facet_base, public _Crt_new_delete {
; 125  :         // base class for all locale facets, performs reference counting
; 126  :     private:
; 127  :         friend struct _Facet_guard;
; 128  : 
; 129  :     public:
; 130  :         static size_t __CLRCALL_OR_CDECL _Getcat(const facet** = nullptr, const locale* = nullptr) {
; 131  :             // get category value, or -1 if no corresponding C category
; 132  :             return static_cast<size_t>(-1);
; 133  :         }
; 134  : 
; 135  :         virtual void __CLR_OR_THIS_CALL _Incref() noexcept override { // increment use count
; 136  :             _MT_INCR(_Myrefs);
; 137  :         }
; 138  : 
; 139  :         virtual _Facet_base* __CLR_OR_THIS_CALL _Decref() noexcept override { // decrement use count
; 140  :             if (_MT_DECR(_Myrefs) == 0) {
; 141  :                 return this;
; 142  :             }
; 143  : 
; 144  :             return nullptr;
; 145  :         }
; 146  : 
; 147  :     private:
; 148  :         _Atomic_counter_t _Myrefs; // the reference count
; 149  : 
; 150  :     protected:
; 151  :         explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 152  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization
; 153  :         {}
; 154  : 
; 155  :         virtual __CLR_OR_THIS_CALL ~facet() noexcept override {}
; 156  : 
; 157  :     public:
; 158  :         __CLR_OR_THIS_CALL facet(const facet&) = delete;
; 159  :         facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 160  :     };
; 161  : 
; 162  :     struct _Facet_guard {
; 163  :         facet* _Target;
; 164  :         ~_Facet_guard() {
; 165  :             if (_Target) {
; 166  :                 delete _Target->_Decref();
; 167  :             }
; 168  :         }
; 169  :     };
; 170  : 
; 171  :     // CLASS _Locimp
; 172  :     class _CRTIMP2_PURE_IMPORT _Locimp : public facet { // reference-counted actual implementation of a locale
; 173  :     protected:
; 174  :         __CLR_OR_THIS_CALL ~_Locimp() noexcept {
; 175  :             _Locimp_dtor(this);
; 176  :         }
; 177  : 
; 178  :     private:
; 179  :         static _Locimp* __CLRCALL_PURE_OR_CDECL _New_Locimp(bool _Transparent = false);
; 180  :         static _Locimp* __CLRCALL_PURE_OR_CDECL _New_Locimp(const _Locimp& _Right);
; 181  : 
; 182  :         static void __CLRCALL_PURE_OR_CDECL _Locimp_dtor(_Locimp*);
; 183  :         static void __CLRCALL_PURE_OR_CDECL _Locimp_Addfac(_Locimp*, facet*, size_t); // add a facet
; 184  :         static void __CLRCALL_PURE_OR_CDECL _Locimp_ctor(_Locimp*, const _Locimp&);
; 185  : 
; 186  :         friend locale;
; 187  : 
; 188  :         __CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 189  :             : locale::facet(1), _Facetvec(nullptr), _Facetcount(0), _Catmask(none), _Xparent(_Transparent), _Name("*") {
; 190  :         }
; 191  : 
; 192  :         __CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 193  :             : locale::facet(1), _Facetvec(nullptr), _Facetcount(_Right._Facetcount), _Catmask(_Right._Catmask),
; 194  :               _Xparent(_Right._Xparent), _Name(_Right._Name.c_str()) {
; 195  :             _Locimp_ctor(this, _Right);
; 196  :         }
; 197  : 
; 198  :         void __CLR_OR_THIS_CALL _Addfac(facet* _Pfacet, size_t _Id) { // add a facet
; 199  :             _Locimp_Addfac(this, _Pfacet, _Id);
; 200  :         }
; 201  : 
; 202  :         static _Locimp* __CLRCALL_OR_CDECL _Makeloc(
; 203  :             const _Locinfo&, category, _Locimp*, const locale*); // make essential facets
; 204  : 
; 205  :         static void __CLRCALL_OR_CDECL _Makewloc(
; 206  :             const _Locinfo&, category, _Locimp*, const locale*); // make wchar_t facets
; 207  : 
; 208  : #ifdef _NATIVE_WCHAR_T_DEFINED
; 209  :         static void __CLRCALL_OR_CDECL _Makeushloc(
; 210  :             const _Locinfo&, category, _Locimp*, const locale*); // make ushort facets
; 211  : #endif // _NATIVE_WCHAR_T_DEFINED
; 212  : 
; 213  :         static void __CLRCALL_OR_CDECL _Makexloc(
; 214  :             const _Locinfo&, category, _Locimp*, const locale*); // make remaining facets
; 215  : 
; 216  :         facet** _Facetvec; // pointer to vector of facets
; 217  :         size_t _Facetcount; // size of vector of facets
; 218  :         category _Catmask; // mask describing implemented categories
; 219  :         bool _Xparent; // true if locale is transparent
; 220  :         _Yarn<char> _Name; // locale name, or "*" if not known
; 221  : 
; 222  :         __PURE_APPDOMAIN_GLOBAL static _Locimp* _Clocptr;
; 223  : 
; 224  :     public:
; 225  :         _Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 226  :     };
; 227  : 
; 228  :     template <class _Elem, class _Traits, class _Alloc>
; 229  :     bool operator()(
; 230  :         const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) const {
; 231  :         // compare _Left and _Right strings using collate facet in locale
; 232  :         const auto& _Coll_fac = _STD use_facet<_STD collate<_Elem>>(*this);
; 233  : 
; 234  :         const _Elem* const _Left_data  = _Left.data();
; 235  :         const _Elem* const _Right_data = _Right.data();
; 236  :         return _Coll_fac.compare(_Left_data, _Left_data + _Left.size(), _Right_data, _Right_data + _Right.size()) < 0;
; 237  :     }
; 238  : 
; 239  :     template <class _Facet>
; 240  :     locale combine(const locale& _Loc) const { // combine two locales
; 241  :         _Facet* _Facptr;
; 242  : 
; 243  :         _TRY_BEGIN
; 244  :         _Facptr = const_cast<_Facet*>(_STD addressof(_STD use_facet<_Facet>(_Loc)));
; 245  :         _CATCH_ALL
; 246  :         _Xruntime_error("locale::combine facet missing");
; 247  :         _CATCH_END
; 248  : 
; 249  :         _Locimp* _Newimp = _Locimp::_New_Locimp(*_Ptr);
; 250  :         _Newimp->_Addfac(_Facptr, _Facet::id);
; 251  :         _Newimp->_Catmask = none;
; 252  :         _Newimp->_Name    = "*";
; 253  :         return locale(_Newimp);
; 254  :     }
; 255  : 
; 256  :     template <class _Facet>
; 257  :     locale(const locale& _Loc, const _Facet* _Facptr) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 258  :         if (_Facptr) { // replace facet
; 259  :             _Ptr->_Addfac(const_cast<_Facet*>(_Facptr), _Facet::id);
; 260  :             _Ptr->_Catmask = none;
; 261  :             _Ptr->_Name    = "*";
; 262  :         }
; 263  :     }
; 264  : 
; 265  :     locale(_Uninitialized) {} // defer construction
; 266  : 
; 267  :     locale(const locale& _Right) noexcept : _Ptr(_Right._Ptr) {
; 268  :         _Ptr->_Incref();
; 269  :     }
; 270  : 
; 271  :     locale() noexcept : _Ptr(_Init(true)) {}
; 272  : 
; 273  : #if !defined(MRTDLL) || !defined(_CRTBLD)
; 274  :     locale(const locale& _Loc, const locale& _Other, category _Cat) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 275  :         // construct a locale by copying named facets
; 276  :         if (_Cat != none) { // worth adding, do it
; 277  :             _Facet_guard _Guard{_Ptr};
; 278  :             _BEGIN_LOCINFO(_Lobj)
; 279  :             _Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 280  :             _Lobj._Addcats(_Loc._Ptr->_Catmask, _Loc.name().c_str());
; 281  :             _Lobj._Addcats(_Other._Ptr->_Catmask, _Other.name().c_str());
; 282  :             _Ptr->_Catmask = _Loc._Ptr->_Catmask | _Other._Ptr->_Catmask;
; 283  :             _Ptr->_Name    = _Lobj._Getname();
; 284  :             _END_LOCINFO()
; 285  :             _Guard._Target = nullptr;
; 286  :         }
; 287  :     }
; 288  : 
; 289  : private:
; 290  :     void _Construct(const string& _Str, category _Cat) {
; 291  :         // construct a locale with named facets
; 292  :         bool _Bad = false;
; 293  :         _Init();
; 294  :         if (_Cat != none) { // worth adding, do it
; 295  :             _Facet_guard _Guard{_Ptr};
; 296  :             _BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 297  :             if (_Badname(_Lobj)) {
; 298  :                 _Bad = true;
; 299  :             } else { // name okay, build the locale
; 300  :                 _Locimp::_Makeloc(_Lobj, _Cat, _Ptr, nullptr);
; 301  :                 _Ptr->_Catmask = _Cat;
; 302  :                 _Ptr->_Name    = _Str.c_str();
; 303  :             }
; 304  :             _END_LOCINFO()
; 305  :             _Guard._Target = nullptr;
; 306  :         }
; 307  : 
; 308  :         if (_Bad) { // Don't throw within _BEGIN_LOCINFO if we can avoid it
; 309  :             delete _Ptr->_Decref();
; 310  :             _Xruntime_error("bad locale name");
; 311  :         }
; 312  :     }
; 313  : 
; 314  : public:
; 315  :     explicit locale(const char* _Locname, category _Cat = all) : _Ptr(_Locimp::_New_Locimp()) {
; 316  :         // construct a locale with named facets
; 317  :         // _Locname might have been returned from setlocale().
; 318  :         // Therefore, _Construct() takes const string&.
; 319  :         if (_Locname) {
; 320  :             _Construct(_Locname, _Cat);
; 321  :             return;
; 322  :         }
; 323  : 
; 324  :         _Xruntime_error("bad locale name");
; 325  :     }
; 326  : 
; 327  :     locale(const locale& _Loc, const char* _Locname, category _Cat) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 328  :         // construct a locale by copying, replacing named facets
; 329  :         // _Locname might have been returned from setlocale().
; 330  :         // Therefore, _Construct() takes const string&.
; 331  :         if (_Locname) {
; 332  :             _Construct(_Locname, _Cat);
; 333  :             return;
; 334  :         }
; 335  : 
; 336  :         _Xruntime_error("bad locale name");
; 337  :     }
; 338  : 
; 339  :     explicit locale(const string& _Str, category _Cat = all) : _Ptr(_Locimp::_New_Locimp()) {
; 340  :         // construct a locale with named facets
; 341  :         _Construct(_Str, _Cat);
; 342  :     }
; 343  : 
; 344  :     locale(const locale& _Loc, const string& _Str, category _Cat) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 345  :         // construct a locale by copying, replacing named facets
; 346  :         _Construct(_Str, _Cat);
; 347  :     }
; 348  : #endif // !MRTDLL || !_CRTBLD
; 349  : 
; 350  :     ~locale() noexcept {
; 351  :         if (_Ptr) {
; 352  :             delete _Ptr->_Decref();
; 353  :         }
; 354  :     }
; 355  : 
; 356  :     const locale& operator=(const locale& _Right) noexcept {
; 357  :         if (_Ptr != _Right._Ptr) { // different implementation, point at new one
; 358  :             delete _Ptr->_Decref();
; 359  :             _Ptr = _Right._Ptr;
; 360  :             _Ptr->_Incref();
; 361  :         }
; 362  :         return *this;
; 363  :     }
; 364  : 
; 365  :     string name() const {
; 366  :         return _Ptr ? _Ptr->_Name.c_str() : string();
; 367  :     }
; 368  : 
; 369  :     _Ret_z_ const char* c_str() const {
; 370  :         return _Ptr ? _Ptr->_Name.c_str() : "";
; 371  :     }
; 372  : 
; 373  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object
; 374  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

  00092	33 f6		 xor	 esi, esi
$LN36@use_facet:

; 375  :         if (_Facptr || !_Ptr->_Xparent) {

  00094	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0
  00098	74 10		 je	 SHORT $LN14@use_facet

; 376  :             return _Facptr; // found facet or not transparent
; 377  :         }
; 378  : 
; 379  :         // look in current locale
; 380  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

  0009a	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 381  :         if (_Id < _Ptr0->_Facetcount) {

  0009f	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  000a2	73 0a		 jae	 SHORT $LN37@use_facet

; 382  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

  000a4	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000a7	8b 34 b8	 mov	 esi, DWORD PTR [eax+edi*4]
$LN14@use_facet:

; 429  : 
; 430  :     const size_t _Id         = _Facet::id;
; 431  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);
; 432  : 
; 433  :     if (!_Pf) {

  000aa	85 f6		 test	 esi, esi
  000ac	75 3c		 jne	 SHORT $LN34@use_facet
$LN37@use_facet:

; 434  :         if (_Psave) {

  000ae	85 db		 test	 ebx, ebx
  000b0	74 04		 je	 SHORT $LN3@use_facet

; 435  :             _Pf = _Psave; // lazy facet already allocated

  000b2	8b f3		 mov	 esi, ebx
  000b4	eb 34		 jmp	 SHORT $LN34@use_facet
$LN3@use_facet:

; 436  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

  000b6	ff 75 08	 push	 DWORD PTR __Loc$[ebp]
  000b9	8d 45 f0	 lea	 eax, DWORD PTR __Psave$4[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
  000c2	83 c4 08	 add	 esp, 8
  000c5	83 f8 ff	 cmp	 eax, -1
  000c8	74 3c		 je	 SHORT $LN42@use_facet
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1336 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  000ca	8b 75 f0	 mov	 esi, DWORD PTR __Psave$4[ebp]
  000cd	89 75 08	 mov	 DWORD PTR __Psave_guard$5[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 449  :             _Facet_Register(_Pfmod);

  000d0	56		 push	 esi
  000d1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000d5	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register

; 450  : #endif // defined(_M_CEE)
; 451  : 
; 452  :             _Pfmod->_Incref();

  000da	8b 16		 mov	 edx, DWORD PTR [esi]
  000dc	83 c4 04	 add	 esp, 4
  000df	8b ce		 mov	 ecx, esi
  000e1	ff 52 04	 call	 DWORD PTR [edx+4]

; 453  :             _Facetptr<_Facet>::_Psave = _Psave;

  000e4	89 35 00 00 00
	00		 mov	 DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::ctype<char> >::_Psave
$LN34@use_facet:

; 454  :             _Pf                       = _Psave;
; 455  : 
; 456  :             (void) _Psave_guard.release();
; 457  :         }
; 458  :     }
; 459  : 
; 460  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

  000ea	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  000ed	e8 00 00 00 00	 call	 ??1_Lockit@std@@QAE@XZ	; std::_Lockit::~_Lockit
  000f2	8b c6		 mov	 eax, esi

; 461  :     _END_LOCK()
; 462  : } // end of use_facet body

  000f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fe	59		 pop	 ecx
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN42@use_facet:

; 437  : #if _HAS_EXCEPTIONS
; 438  :             _Throw_bad_cast(); // lazy disallowed

  00106	e8 00 00 00 00	 call	 ?_Throw_bad_cast@std@@YAXXZ ; std::_Throw_bad_cast
$LN39@use_facet:
  0010b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QAE@XZ	; std::_Lockit::~_Lockit
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$1:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR __Psave_guard$5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$ctype@D@std@@MAEPAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2768 :     virtual __CLR_OR_THIS_CALL ~ctype() noexcept {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2777 :         if (0 < _Ctype._Delfl) {

  00006	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 2768 :     virtual __CLR_OR_THIS_CALL ~ctype() noexcept {

  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@

; 2777 :         if (0 < _Ctype._Delfl) {

  0000f	85 c0		 test	 eax, eax
  00011	7e 0a		 jle	 SHORT $LN13@scalar

; 2778 :             _CSTD free(const_cast<short*>(_Ctype._Table));

  00013	ff 76 0c	 push	 DWORD PTR [esi+12]
  00016	e8 00 00 00 00	 call	 _free
  0001b	eb 0a		 jmp	 SHORT $LN14@scalar
$LN13@scalar:

; 2779 :         } else if (_Ctype._Delfl < 0) {

  0001d	79 0b		 jns	 SHORT $LN10@scalar

; 2780 :             delete[] _Ctype._Table;

  0001f	ff 76 0c	 push	 DWORD PTR [esi+12]
  00022	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
$LN14@scalar:

; 2781 :         }
; 2782 : 
; 2783 :         _CSTD free(_Ctype._LocaleName);

  00027	83 c4 04	 add	 esp, 4
$LN10@scalar:
  0002a	ff 76 14	 push	 DWORD PTR [esi+20]
  0002d	e8 00 00 00 00	 call	 _free
  00032	83 c4 04	 add	 esp, 4

; 2770 :     }

  00035	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_Facet_base@std@@6B@
  0003b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003f	74 0b		 je	 SHORT $LN12@scalar
  00041	6a 18		 push	 24			; 00000018H
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00049	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0004c	8b c6		 mov	 eax, esi
  0004e	5e		 pop	 esi
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
??_G?$ctype@D@std@@MAEPAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
__Dest$ = 20						; size = 4
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z PROC		; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx

; 2830 :         char* _Dest) const { // narrow elements in [_First, _Last) to chars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2831 :         _Adl_verify_range(_First, _Last);
; 2832 :         _CSTD memcpy(_Dest, _First, static_cast<size_t>(_Last - _First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	52		 push	 edx
  0000d	ff 75 14	 push	 DWORD PTR __Dest$[ebp]
  00010	e8 00 00 00 00	 call	 _memcpy

; 2833 :         return _Last;

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2834 :     }

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z ENDP		; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
___formal$ = 12						; size = 1
?do_narrow@?$ctype@D@std@@MBEDDD@Z PROC			; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx

; 2825 :     virtual _Elem __CLR_OR_THIS_CALL do_narrow(_Elem _Ch, char) const { // narrow char

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2826 :         return _Ch;

  00003	8a 45 08	 mov	 al, BYTE PTR __Ch$[ebp]

; 2827 :     }

  00006	5d		 pop	 ebp
  00007	c2 08 00	 ret	 8
?do_narrow@?$ctype@D@std@@MBEDDD@Z ENDP			; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z PROC		; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx

; 2819 :         const char* _First, const char* _Last, _Elem* _Dest) const { // widen chars in [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2820 :         _Adl_verify_range(_First, _Last);
; 2821 :         _CSTD memcpy(_Dest, _First, static_cast<size_t>(_Last - _First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	52		 push	 edx
  0000d	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00010	e8 00 00 00 00	 call	 _memcpy

; 2822 :         return _Last;

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2823 :     }

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z ENDP		; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?do_widen@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx

; 2814 :     virtual _Elem __CLR_OR_THIS_CALL do_widen(char _Byte) const { // widen char

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2815 :         return _Byte;

  00003	8a 45 08	 mov	 al, BYTE PTR __Byte$[ebp]

; 2816 :     }

  00006	5d		 pop	 ebp
  00007	c2 04 00	 ret	 4
?do_widen@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx

; 2805 :         const _Elem* _Last) const { // convert [_First, _Last) in place to upper case

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2806 :         _Adl_verify_range(_First, _Last);
; 2807 :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 19		 je	 SHORT $LN10@do_toupper
  0000f	53		 push	 ebx
  00010	8d 59 08	 lea	 ebx, DWORD PTR [ecx+8]
$LL4@do_toupper:

; 2808 :             *_First = static_cast<_Elem>(_Toupper(static_cast<unsigned char>(*_First), &_Ctype));

  00013	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00016	53		 push	 ebx
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 __Toupper
  0001d	88 06		 mov	 BYTE PTR [esi], al
  0001f	83 c4 08	 add	 esp, 8
  00022	46		 inc	 esi
  00023	3b f7		 cmp	 esi, edi
  00025	75 ec		 jne	 SHORT $LL4@do_toupper

; 2809 :         }
; 2810 : 
; 2811 :         return _First;

  00027	5b		 pop	 ebx
$LN10@do_toupper:
  00028	5f		 pop	 edi

; 2812 :     }

  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_toupper@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx

; 2800 :     virtual _Elem __CLR_OR_THIS_CALL do_toupper(_Elem _Ch) const { // convert element to upper case

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2801 :         return static_cast<_Elem>(_Toupper(static_cast<unsigned char>(_Ch), &_Ctype));

  00003	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00006	50		 push	 eax
  00007	0f b6 45 08	 movzx	 eax, BYTE PTR __Ch$[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 __Toupper
  00011	83 c4 08	 add	 esp, 8

; 2802 :     }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?do_toupper@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx

; 2791 :         const _Elem* _Last) const { // convert [_First, _Last) in place to lower case

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2792 :         _Adl_verify_range(_First, _Last);
; 2793 :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 19		 je	 SHORT $LN10@do_tolower
  0000f	53		 push	 ebx
  00010	8d 59 08	 lea	 ebx, DWORD PTR [ecx+8]
$LL4@do_tolower:

; 2794 :             *_First = static_cast<_Elem>(_Tolower(static_cast<unsigned char>(*_First), &_Ctype));

  00013	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00016	53		 push	 ebx
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 __Tolower
  0001d	88 06		 mov	 BYTE PTR [esi], al
  0001f	83 c4 08	 add	 esp, 8
  00022	46		 inc	 esi
  00023	3b f7		 cmp	 esi, edi
  00025	75 ec		 jne	 SHORT $LL4@do_tolower

; 2795 :         }
; 2796 : 
; 2797 :         return _First;

  00027	5b		 pop	 ebx
$LN10@do_tolower:
  00028	5f		 pop	 edi

; 2798 :     }

  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_tolower@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx

; 2786 :     virtual _Elem __CLR_OR_THIS_CALL do_tolower(_Elem _Ch) const { // convert element to lower case

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2787 :         return static_cast<_Elem>(_Tolower(static_cast<unsigned char>(_Ch), &_Ctype));

  00003	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00006	50		 push	 eax
  00007	0f b6 45 08	 movzx	 eax, BYTE PTR __Ch$[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 __Tolower
  00011	83 c4 08	 add	 esp, 8

; 2788 :     }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?do_tolower@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT
??1?$ctype@D@std@@MAE@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT
; _this$ = ecx

; 2768 :     virtual __CLR_OR_THIS_CALL ~ctype() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2777 :         if (0 < _Ctype._Delfl) {

  00003	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 2768 :     virtual __CLR_OR_THIS_CALL ~ctype() noexcept {

  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@

; 2777 :         if (0 < _Ctype._Delfl) {

  0000c	85 c0		 test	 eax, eax
  0000e	7e 0a		 jle	 SHORT $LN8@ctype

; 2778 :             _CSTD free(const_cast<short*>(_Ctype._Table));

  00010	ff 76 0c	 push	 DWORD PTR [esi+12]
  00013	e8 00 00 00 00	 call	 _free
  00018	eb 0a		 jmp	 SHORT $LN9@ctype
$LN8@ctype:

; 2779 :         } else if (_Ctype._Delfl < 0) {

  0001a	79 0b		 jns	 SHORT $LN6@ctype

; 2780 :             delete[] _Ctype._Table;

  0001c	ff 76 0c	 push	 DWORD PTR [esi+12]
  0001f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
$LN9@ctype:

; 2781 :         }
; 2782 : 
; 2783 :         _CSTD free(_Ctype._LocaleName);

  00024	83 c4 04	 add	 esp, 4
$LN6@ctype:
  00027	ff 76 14	 push	 DWORD PTR [esi+20]
  0002a	e8 00 00 00 00	 call	 _free
  0002f	83 c4 04	 add	 esp, 4

; 2769 :         _Tidy();
; 2770 :     }

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_Facet_base@std@@6B@
  00038	5e		 pop	 esi
  00039	c3		 ret	 0
??1?$ctype@D@std@@MAE@XZ ENDP				; std::ctype<char>::~ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T2 = -88						; size = 52
$T3 = -36						; size = 16
$T4 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT

; 2749 :     static size_t __CLRCALL_OR_CDECL _Getcat(const locale::facet** _Ppf = nullptr, const locale* _Ploc = nullptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2750 :         if (_Ppf && !*_Ppf) {

  00027	8b 45 08	 mov	 eax, DWORD PTR __Ppf$[ebp]
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
  00031	85 c0		 test	 eax, eax
  00033	0f 84 7e 01 00
	00		 je	 $LN54@Getcat
  00039	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003c	0f 85 75 01 00
	00		 jne	 $LN54@Getcat

; 2751 :             *_Ppf = new ctype<_Elem>(_Locinfo(_Ploc->c_str()));

  00042	6a 18		 push	 24			; 00000018H
  00044	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00049	8b f0		 mov	 esi, eax
  0004b	83 c4 04	 add	 esp, 4
  0004e	89 75 ec	 mov	 DWORD PTR $T4[ebp], esi
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00058	85 f6		 test	 esi, esi
  0005a	0f 84 9a 00 00
	00		 je	 $LN4@Getcat

; 370  :         return _Ptr ? _Ptr->_Name.c_str() : "";

  00060	8b 45 0c	 mov	 eax, DWORD PTR __Ploc$[ebp]
  00063	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00066	85 c0		 test	 eax, eax
  00068	74 0c		 je	 SHORT $LN12@Getcat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo

; 109  :         return _Myptr ? _Myptr : &_Nul;

  0006a	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  0006d	85 ff		 test	 edi, edi
  0006f	75 0a		 jne	 SHORT $LN13@Getcat
  00071	8d 78 1c	 lea	 edi, DWORD PTR [eax+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 370  :         return _Ptr ? _Ptr->_Name.c_str() : "";

  00074	eb 05		 jmp	 SHORT $LN13@Getcat
$LN12@Getcat:
  00076	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_00CNPNBAHC@@
$LN13@Getcat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo

; 152  :         : _Lock(_LOCK_LOCALE)

  0007b	6a 00		 push	 0
  0007d	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  00080	e8 00 00 00 00	 call	 ??0_Lockit@std@@QAE@H@Z	; std::_Lockit::_Lockit

; 59   :     __CLR_OR_THIS_CALL _Yarn() noexcept : _Myptr(nullptr), _Nul(0) {}

  00085	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+4], 0
  0008c	c6 45 b0 00	 mov	 BYTE PTR $T2[ebp+8], 0
  00090	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+12], 0
  00097	c6 45 b8 00	 mov	 BYTE PTR $T2[ebp+16], 0
  0009b	33 c0		 xor	 eax, eax
  0009d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
  000a4	66 89 45 c0	 mov	 WORD PTR $T2[ebp+24], ax
  000a8	89 45 c4	 mov	 DWORD PTR $T2[ebp+28], eax
  000ab	66 89 45 c8	 mov	 WORD PTR $T2[ebp+32], ax
  000af	89 45 cc	 mov	 DWORD PTR $T2[ebp+36], eax
  000b2	88 45 d0	 mov	 BYTE PTR $T2[ebp+40], al
  000b5	89 45 d4	 mov	 DWORD PTR $T2[ebp+44], eax
  000b8	88 45 d8	 mov	 BYTE PTR $T2[ebp+48], al

; 155  :     {

  000bb	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 156  :         if (_Pch) {

  000bf	85 ff		 test	 edi, edi
  000c1	0f 84 06 01 00
	00		 je	 $LN19@Getcat

; 157  :             _Locinfo_ctor(this, _Pch);

  000c7	8d 45 a8	 lea	 eax, DWORD PTR $T2[ebp]
  000ca	57		 push	 edi
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z ; std::_Locinfo::_Locinfo_ctor

; 199  :         return ::_Getctype();

  000d1	8d 45 dc	 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 2751 :             *_Ppf = new ctype<_Elem>(_Locinfo(_Ploc->c_str()));

  000d4	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T5[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo

; 199  :         return ::_Getctype();

  000db	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 152  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization

  000dc	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2745 :     __CLR_OR_THIS_CALL ctype(const _Locinfo& _Lobj, size_t _Refs = 0) : ctype_base(_Refs) {

  000e3	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo

; 199  :         return ::_Getctype();

  000e9	e8 00 00 00 00	 call	 __Getctype
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 2773 :         _Ctype = _Lobj._Getctype();

  000f1	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000f4	0f 11 46 08	 movups	 XMMWORD PTR [esi+8], xmm0

; 2751 :             *_Ppf = new ctype<_Elem>(_Locinfo(_Ploc->c_str()));

  000f8	eb 02		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  000fa	33 f6		 xor	 esi, esi
$LN5@Getcat:
  000fc	f6 45 f0 01	 test	 BYTE PTR $T5[ebp], 1
  00100	8b 45 08	 mov	 eax, DWORD PTR __Ppf$[ebp]
  00103	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010a	89 30		 mov	 DWORD PTR [eax], esi
  0010c	0f 84 a5 00 00
	00		 je	 $LN54@Getcat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo

; 179  :         _Locinfo_dtor(this);

  00112	8d 45 a8	 lea	 eax, DWORD PTR $T2[ebp]
  00115	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z ; std::_Locinfo::_Locinfo_dtor

; 122  :         if (_Myptr) {

  00122	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+44]

; 179  :         _Locinfo_dtor(this);

  00125	83 c4 04	 add	 esp, 4

; 122  :         if (_Myptr) {

  00128	85 c0		 test	 eax, eax
  0012a	74 09		 je	 SHORT $LN59@Getcat

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 _free
  00132	83 c4 04	 add	 esp, 4
$LN59@Getcat:

; 122  :         if (_Myptr) {

  00135	8b 45 cc	 mov	 eax, DWORD PTR $T2[ebp+36]

; 130  :         _Myptr = nullptr;

  00138	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+44], 0

; 122  :         if (_Myptr) {

  0013f	85 c0		 test	 eax, eax
  00141	74 09		 je	 SHORT $LN64@Getcat

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  00143	50		 push	 eax
  00144	e8 00 00 00 00	 call	 _free
  00149	83 c4 04	 add	 esp, 4
$LN64@Getcat:

; 122  :         if (_Myptr) {

  0014c	8b 45 c4	 mov	 eax, DWORD PTR $T2[ebp+28]

; 130  :         _Myptr = nullptr;

  0014f	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], 0

; 122  :         if (_Myptr) {

  00156	85 c0		 test	 eax, eax
  00158	74 09		 je	 SHORT $LN69@Getcat

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 _free
  00160	83 c4 04	 add	 esp, 4
$LN69@Getcat:

; 122  :         if (_Myptr) {

  00163	8b 45 bc	 mov	 eax, DWORD PTR $T2[ebp+20]

; 130  :         _Myptr = nullptr;

  00166	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+28], 0

; 122  :         if (_Myptr) {

  0016d	85 c0		 test	 eax, eax
  0016f	74 09		 je	 SHORT $LN74@Getcat

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 _free
  00177	83 c4 04	 add	 esp, 4
$LN74@Getcat:

; 122  :         if (_Myptr) {

  0017a	8b 45 b4	 mov	 eax, DWORD PTR $T2[ebp+12]

; 130  :         _Myptr = nullptr;

  0017d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0

; 122  :         if (_Myptr) {

  00184	85 c0		 test	 eax, eax
  00186	74 09		 je	 SHORT $LN79@Getcat

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 _free
  0018e	83 c4 04	 add	 esp, 4
$LN79@Getcat:

; 122  :         if (_Myptr) {

  00191	8b 45 ac	 mov	 eax, DWORD PTR $T2[ebp+4]

; 130  :         _Myptr = nullptr;

  00194	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+12], 0

; 122  :         if (_Myptr) {

  0019b	85 c0		 test	 eax, eax
  0019d	74 09		 je	 SHORT $LN84@Getcat

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  0019f	50		 push	 eax
  001a0	e8 00 00 00 00	 call	 _free
  001a5	83 c4 04	 add	 esp, 4
$LN84@Getcat:

; 180  :     }

  001a8	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]

; 130  :         _Myptr = nullptr;

  001ab	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+4], 0

; 180  :     }

  001b2	e8 00 00 00 00	 call	 ??1_Lockit@std@@QAE@XZ	; std::_Lockit::~_Lockit
$LN54@Getcat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale

; 2754 :         return _X_CTYPE;

  001b7	b8 02 00 00 00	 mov	 eax, 2

; 2755 :     }

  001bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c6	59		 pop	 ecx
  001c7	5f		 pop	 edi
  001c8	5e		 pop	 esi
  001c9	8b e5		 mov	 esp, ebp
  001cb	5d		 pop	 ebp
  001cc	c3		 ret	 0
$LN19@Getcat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo

; 161  :         _Xruntime_error("bad locale name");

  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ELKIONDK@bad?5locale?5name@
  001d2	e8 00 00 00 00	 call	 ?_Xruntime_error@std@@YAXPBD@Z ; std::_Xruntime_error
$LN87@Getcat:
  001d7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
  00000	6a 18		 push	 24			; 00000018H
  00002	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$2:
  0000f	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  00012	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QAE@XZ	; std::_Lockit::~_Lockit
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$3:
  00017	8d 4d ac	 lea	 ecx, DWORD PTR $T2[ebp+4]
  0001a	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QAE@XZ ; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$4:
  0001f	8d 4d b4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00022	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QAE@XZ ; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$5:
  00027	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp+20]
  0002a	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QAE@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$6:
  0002f	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp+28]
  00032	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QAE@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$7:
  00037	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp+36]
  0003a	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QAE@XZ ; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$8:
  0003f	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+44]
  00042	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QAE@XZ ; std::_Yarn<char>::~_Yarn<char>
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
  0004c	90		 npad	 1
  0004d	90		 npad	 1
  0004e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00052	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00055	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
  00064	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::ctype<char>::_Getcat
; Function compile flags: /Ogtp
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gctype_base@std@@UAEPAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_Facet_base@std@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 08		 push	 8
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_Gctype_base@std@@UAEPAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx

; 351  :         if (_Ptr) {

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	74 11		 je	 SHORT $LN4@locale

; 352  :             delete _Ptr->_Decref();

  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 08	 call	 DWORD PTR [eax+8]
  0000c	85 c0		 test	 eax, eax
  0000e	74 08		 je	 SHORT $LN4@locale
  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	8b c8		 mov	 ecx, eax
  00014	6a 01		 push	 1
  00016	ff 12		 call	 DWORD PTR [edx]
$LN4@locale:

; 353  :         }
; 354  :     }

  00018	c3		 ret	 0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_Gfacet@locale@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gfacet@locale@std@@MAEPAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_Facet_base@std@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 08		 push	 8
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_Gfacet@locale@std@@MAEPAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ??1facet@locale@std@@MAE@XZ
_TEXT	SEGMENT
??1facet@locale@std@@MAE@XZ PROC			; std::locale::facet::~facet, COMDAT
; _this$ = ecx

; 155  :         virtual __CLR_OR_THIS_CALL ~facet() noexcept override {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7_Facet_base@std@@6B@
  00006	c3		 ret	 0
??1facet@locale@std@@MAE@XZ ENDP			; std::locale::facet::~facet
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ
_TEXT	SEGMENT
?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ PROC	; std::locale::facet::_Decref, COMDAT
; _this$ = ecx

; 140  :             if (_MT_DECR(_Myrefs) == 0) {

  00000	83 c8 ff	 or	 eax, -1
  00003	f0 0f c1 41 04	 lock	  xadd	 DWORD PTR [ecx+4], eax
  00008	b8 00 00 00 00	 mov	 eax, 0
  0000d	0f 44 c1	 cmove	 eax, ecx

; 141  :                 return this;
; 142  :             }
; 143  : 
; 144  :             return nullptr;
; 145  :         }

  00010	c3		 ret	 0
?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ ENDP	; std::locale::facet::_Decref
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocale
;	COMDAT ?_Incref@facet@locale@std@@UAEXXZ
_TEXT	SEGMENT
?_Incref@facet@locale@std@@UAEXXZ PROC			; std::locale::facet::_Incref, COMDAT
; _this$ = ecx

; 136  :             _MT_INCR(_Myrefs);

  00000	f0 ff 41 04	 lock	  inc	 DWORD PTR [ecx+4]

; 137  :         }

  00004	c3		 ret	 0
?_Incref@facet@locale@std@@UAEXXZ ENDP			; std::locale::facet::_Incref
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
;	COMDAT ??1?$_Yarn@_W@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Yarn@_W@std@@QAE@XZ PROC				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>, COMDAT
; _this$ = ecx

; 100  :     __CLR_OR_THIS_CALL ~_Yarn() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 122  :         if (_Myptr) {

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN6@Yarn

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 _free
  0000f	83 c4 04	 add	 esp, 4
$LN6@Yarn:

; 101  :         _Tidy();
; 102  :     }

  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
??1?$_Yarn@_W@std@@QAE@XZ ENDP				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xlocinfo
;	COMDAT ??1?$_Yarn@D@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Yarn@D@std@@QAE@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT
; _this$ = ecx

; 100  :     __CLR_OR_THIS_CALL ~_Yarn() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 122  :         if (_Myptr) {

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN6@Yarn

; 123  : #ifdef _DEBUG
; 124  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 125  : #else // _DEBUG
; 126  :             _CSTD free(_Myptr);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 _free
  0000f	83 c4 04	 add	 esp, 4
$LN6@Yarn:

; 101  :         _Tidy();
; 102  :     }

  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
??1?$_Yarn@D@std@@QAE@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G_Facet_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Facet_base@std@@UAEPAXI@Z PROC			; std::_Facet_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_Facet_base@std@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G_Facet_base@std@@UAEPAXI@Z ENDP			; std::_Facet_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xfacet
;	COMDAT ??1_Facet_base@std@@UAE@XZ
_TEXT	SEGMENT
??1_Facet_base@std@@UAE@XZ PROC				; std::_Facet_base::~_Facet_base, COMDAT
; _this$ = ecx

; 28   :     virtual __CLR_OR_THIS_CALL ~_Facet_base() noexcept {} // ensure that derived classes can be destroyed properly

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7_Facet_base@std@@6B@
  00006	c3		 ret	 0
??1_Facet_base@std@@UAE@XZ ENDP				; std::_Facet_base::~_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\typeinfo
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT

; 64   : [[noreturn]] inline void _Throw_bad_cast() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 65   :     _THROW(bad_cast{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_cast@std@@QAE@XZ	; std::bad_cast::bad_cast
  0000e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_cast@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_cast@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_cast@std@@UAEPAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_cast@std@@UAEPAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_cast@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_cast@std@@QAE@ABV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_cast@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_cast@std@@QAE@ABV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_cast@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_cast@std@@UAE@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_cast@std@@UAE@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_typeinfo.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_cast@std@@QAE@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; _this$ = ecx

; 135  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 136  :     }

  00003	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_08EPJLHIJG@bad?5cast@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_typeinfo.h

; 135  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_cast@std@@6B@

; 136  :     }

  00017	c3		 ret	 0
??0bad_cast@std@@QAE@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIQBDI@Z
_TEXT	SEGMENT
tv209 = -8						; size = 4
__Result$1$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Possible_matches_end$1$ = 12				; size = 4
__Off$ = 12						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIQBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx

; 3879 :     /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00008	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000b	8b de		 mov	 ebx, esi

; 3879 :     /* strengthened */ {

  0000d	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000e	8d 53 01	 lea	 edx, DWORD PTR [ebx+1]
$LL30@find:
  00011	8a 03		 mov	 al, BYTE PTR [ebx]
  00013	43		 inc	 ebx
  00014	84 c0		 test	 al, al
  00016	75 f9		 jne	 SHORT $LL30@find
  00018	2b da		 sub	 ebx, edx

; 2144 :         const value_type* _Result = _Bx._Buf;

  0001a	89 4d fc	 mov	 DWORD PTR __Result$1$[ebp], ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  0001d	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00021	8b f9		 mov	 edi, ecx

; 2145 :         if (_Large_string_engaged()) {

  00023	72 05		 jb	 SHORT $LN6@find

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00025	8b 39		 mov	 edi, DWORD PTR [ecx]
  00027	89 7d fc	 mov	 DWORD PTR __Result$1$[ebp], edi
$LN6@find:

; 3880 :         // look for [_Ptr, <null>) beginning at or after _Off
; 3881 :         return static_cast<size_type>(_Traits_find<_Traits>(

  0002a	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]

; 533  :     if (_Needle_size > _Hay_size || _Start_at > _Hay_size - _Needle_size) {

  0002d	3b d9		 cmp	 ebx, ecx
  0002f	0f 87 b7 00 00
	00		 ja	 $LN15@find
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00038	2b cb		 sub	 ecx, ebx
  0003a	3b c1		 cmp	 eax, ecx
  0003c	0f 87 aa 00 00
	00		 ja	 $LN15@find

; 534  :         // xpos cannot exist, report failure
; 535  :         // N4659 24.3.2.7.2 [string.find]/1 says:
; 536  :         // 1. _Start_at <= xpos
; 537  :         // 2. xpos + _Needle_size <= _Hay_size;
; 538  :         // therefore:
; 539  :         // 3. _Needle_size <= _Hay_size (by 2) (checked above)
; 540  :         // 4. _Start_at + _Needle_size <= _Hay_size (substitute 1 into 2)
; 541  :         // 5. _Start_at <= _Hay_size - _Needle_size (4, move _Needle_size to other side) (also checked above)
; 542  :         return static_cast<size_t>(-1);
; 543  :     }
; 544  : 
; 545  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible

  00042	85 db		 test	 ebx, ebx
  00044	0f 84 a5 00 00
	00		 je	 $LN12@find

; 546  :         return _Start_at;
; 547  :     }
; 548  : 
; 549  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

  0004a	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0004d	03 d7		 add	 edx, edi

; 550  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

  0004f	8d 0c 07	 lea	 ecx, DWORD PTR [edi+eax]

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  00052	0f be 3e	 movsx	 edi, BYTE PTR [esi]

; 549  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

  00055	89 55 0c	 mov	 DWORD PTR __Possible_matches_end$1$[ebp], edx

; 551  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

  00058	2b d1		 sub	 edx, ecx

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  0005a	52		 push	 edx
  0005b	57		 push	 edi
  0005c	51		 push	 ecx
  0005d	89 7d f8	 mov	 DWORD PTR tv209[ebp], edi
  00060	e8 00 00 00 00	 call	 _memchr
  00065	8b f8		 mov	 edi, eax
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH

; 552  :         if (!_Match_try) { // didn't find first character; report failure

  0006a	85 ff		 test	 edi, edi
  0006c	74 7e		 je	 SHORT $LN15@find
  0006e	66 90		 npad	 2
$LL13@find:

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00070	8b c6		 mov	 eax, esi
  00072	8b d7		 mov	 edx, edi
  00074	8b f3		 mov	 esi, ebx
  00076	83 ee 04	 sub	 esi, 4
  00079	72 16		 jb	 SHORT $LN33@find
  0007b	0f 1f 44 00 00	 npad	 5
$LL34@find:
  00080	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00082	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00084	75 10		 jne	 SHORT $LN32@find
  00086	83 c2 04	 add	 edx, 4
  00089	83 c0 04	 add	 eax, 4
  0008c	83 ee 04	 sub	 esi, 4
  0008f	73 ef		 jae	 SHORT $LL34@find
$LN33@find:
  00091	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00094	74 34		 je	 SHORT $LN31@find
$LN32@find:
  00096	8a 0a		 mov	 cl, BYTE PTR [edx]
  00098	3a 08		 cmp	 cl, BYTE PTR [eax]
  0009a	75 27		 jne	 SHORT $LN35@find
  0009c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0009f	74 29		 je	 SHORT $LN31@find
  000a1	8a 4a 01	 mov	 cl, BYTE PTR [edx+1]
  000a4	3a 48 01	 cmp	 cl, BYTE PTR [eax+1]
  000a7	75 1a		 jne	 SHORT $LN35@find
  000a9	83 fe fe	 cmp	 esi, -2			; fffffffeH
  000ac	74 1c		 je	 SHORT $LN31@find
  000ae	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  000b1	3a 48 02	 cmp	 cl, BYTE PTR [eax+2]
  000b4	75 0d		 jne	 SHORT $LN35@find
  000b6	83 fe ff	 cmp	 esi, -1
  000b9	74 0f		 je	 SHORT $LN31@find
  000bb	8a 4a 03	 mov	 cl, BYTE PTR [edx+3]
  000be	3a 48 03	 cmp	 cl, BYTE PTR [eax+3]
  000c1	74 07		 je	 SHORT $LN31@find
$LN35@find:
  000c3	1b c0		 sbb	 eax, eax
  000c5	83 c8 01	 or	 eax, 1
  000c8	eb 02		 jmp	 SHORT $LN36@find
$LN31@find:
  000ca	33 c0		 xor	 eax, eax
$LN36@find:

; 556  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

  000cc	85 c0		 test	 eax, eax
  000ce	74 28		 je	 SHORT $LN26@find

; 550  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

  000d0	8b 45 0c	 mov	 eax, DWORD PTR __Possible_matches_end$1$[ebp]
  000d3	47		 inc	 edi

; 551  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

  000d4	2b c7		 sub	 eax, edi

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  000d6	50		 push	 eax
  000d7	ff 75 f8	 push	 DWORD PTR tv209[ebp]
  000da	57		 push	 edi
  000db	e8 00 00 00 00	 call	 _memchr

; 552  :         if (!_Match_try) { // didn't find first character; report failure

  000e0	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]

; 356  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  000e3	8b f8		 mov	 edi, eax
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 552  :         if (!_Match_try) { // didn't find first character; report failure

  000e8	85 ff		 test	 edi, edi
  000ea	75 84		 jne	 SHORT $LL13@find
$LN15@find:

; 3882 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 3883 :     }

  000ec	83 c8 ff	 or	 eax, -1
$LN12@find:
  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	5b		 pop	 ebx
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c2 08 00	 ret	 8
$LN26@find:

; 557  :             return static_cast<size_t>(_Match_try - _Haystack);

  000f8	2b 7d fc	 sub	 edi, DWORD PTR __Result$1$[ebp]

; 3880 :         // look for [_Ptr, <null>) beginning at or after _Off
; 3881 :         return static_cast<size_type>(_Traits_find<_Traits>(

  000fb	8b c7		 mov	 eax, edi
  000fd	5f		 pop	 edi

; 3882 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 3883 :     }

  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c2 08 00	 ret	 8
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIQBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z
_TEXT	SEGMENT
tv519 = -16						; size = 4
__New_ptr$1 = -12					; size = 4
tv518 = -8						; size = 4
__Old$1$ = -4						; size = 4
__Result$1$ = 8						; size = 4
__Ptr_shifted_after$1$ = 8				; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
tv522 = 16						; size = 4
tv520 = 16						; size = 4
$T2 = 16						; size = 4
__Insert_at$1$ = 16					; size = 4
__Count$ = 16						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx

; 3078 :         const size_type _Off, _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 2157 :         if (_Mysize < _Off) {

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  0000e	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  00011	3b f1		 cmp	 esi, ecx
  00013	0f 82 a0 01 00
	00		 jb	 $LN61@insert

; 3079 :         // insert [_Ptr, _Ptr + _Count) at _Off
; 3080 :         _Mypair._Myval2._Check_offset(_Off);
; 3081 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 3082 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00019	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  0001c	8b c2		 mov	 eax, edx
  0001e	8b 5d 10	 mov	 ebx, DWORD PTR __Count$[ebp]
  00021	2b c6		 sub	 eax, esi
  00023	89 55 fc	 mov	 DWORD PTR __Old$1$[ebp], edx
  00026	3b d8		 cmp	 ebx, eax
  00028	0f 87 8a 00 00
	00		 ja	 $LN2@insert

; 2135 :         value_type* _Result = _Bx._Buf;

  0002e	89 7d 08	 mov	 DWORD PTR __Result$1$[ebp], edi

; 3083 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00031	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
  00034	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  00037	8b c7		 mov	 eax, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00039	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0003c	72 05		 jb	 SHORT $LN14@insert

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0003e	8b 07		 mov	 eax, DWORD PTR [edi]
  00040	89 45 08	 mov	 DWORD PTR __Result$1$[ebp], eax
$LN14@insert:

; 3084 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3085 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  00043	8d 14 08	 lea	 edx, DWORD PTR [eax+ecx]

; 3086 :             // the range [_Ptr, _Ptr + _Ptr_shifted_after) is left alone by moving the suffix out,
; 3087 :             // while the range [_Ptr + _Ptr_shifted_after, _Ptr + _Count) shifts down by _Count
; 3088 :             size_type _Ptr_shifted_after;
; 3089 :             if (_Ptr + _Count <= _Insert_at
; 3090 :                 || _Ptr > _Old_ptr + _Old_size) { // inserted content is before the shifted region, or does not alias

  00046	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00049	03 c3		 add	 eax, ebx
  0004b	89 55 10	 mov	 DWORD PTR __Insert_at$1$[ebp], edx
  0004e	3b c2		 cmp	 eax, edx
  00050	76 20		 jbe	 SHORT $LN5@insert
  00052	8b 45 08	 mov	 eax, DWORD PTR __Result$1$[ebp]
  00055	03 c6		 add	 eax, esi
  00057	39 45 0c	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0005a	77 16		 ja	 SHORT $LN5@insert

; 3092 :             } else if (_Insert_at <= _Ptr) { // all of [_Ptr, _Ptr + _Count) shifts

  0005c	3b 55 0c	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  0005f	77 07		 ja	 SHORT $LN6@insert

; 3093 :                 _Ptr_shifted_after = 0;

  00061	33 c0		 xor	 eax, eax
  00063	89 45 08	 mov	 DWORD PTR __Ptr_shifted_after$1$[ebp], eax

; 3094 :             } else { // [_Ptr, _Ptr + _Count) contains _Insert_at, so only the part after _Insert_at shifts

  00066	eb 0d		 jmp	 SHORT $LN7@insert
$LN6@insert:

; 3095 :                 _Ptr_shifted_after = static_cast<size_type>(_Insert_at - _Ptr);

  00068	8b c2		 mov	 eax, edx
  0006a	2b 45 0c	 sub	 eax, DWORD PTR __Ptr$[ebp]
  0006d	89 45 08	 mov	 DWORD PTR __Ptr_shifted_after$1$[ebp], eax
  00070	eb 03		 jmp	 SHORT $LN7@insert
$LN5@insert:

; 3091 :                 _Ptr_shifted_after = _Count; // none of _Ptr's data shifts

  00072	89 5d 08	 mov	 DWORD PTR __Ptr_shifted_after$1$[ebp], ebx
$LN7@insert:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00075	2b f1		 sub	 esi, ecx

; 3096 :             }
; 3097 : 
; 3098 :             _Traits::move(_Insert_at + _Count, _Insert_at, _Old_size - _Off + 1); // move suffix + null down

  00077	8d 04 1a	 lea	 eax, DWORD PTR [edx+ebx]
  0007a	46		 inc	 esi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0007b	56		 push	 esi
  0007c	52		 push	 edx
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 _memmove

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00083	8b 75 08	 mov	 esi, DWORD PTR __Ptr_shifted_after$1$[ebp]
  00086	56		 push	 esi
  00087	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  0008a	ff 75 10	 push	 DWORD PTR __Insert_at$1$[ebp]
  0008d	e8 00 00 00 00	 call	 _memcpy

; 3099 :             _Traits::copy(_Insert_at, _Ptr, _Ptr_shifted_after);
; 3100 :             _Traits::copy(

  00092	8b c3		 mov	 eax, ebx
  00094	2b c6		 sub	 eax, esi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00096	50		 push	 eax

; 3099 :             _Traits::copy(_Insert_at, _Ptr, _Ptr_shifted_after);
; 3100 :             _Traits::copy(

  00097	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0009a	03 c6		 add	 eax, esi
  0009c	03 c3		 add	 eax, ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009e	50		 push	 eax

; 3099 :             _Traits::copy(_Insert_at, _Ptr, _Ptr_shifted_after);
; 3100 :             _Traits::copy(

  0009f	8b 45 10	 mov	 eax, DWORD PTR __Insert_at$1$[ebp]
  000a2	03 c6		 add	 eax, esi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 _memcpy
  000aa	83 c4 24	 add	 esp, 36			; 00000024H

; 3112 :             },
; 3113 :             _Off, _Ptr, _Count);
; 3114 :     }

  000ad	8b c7		 mov	 eax, edi
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 0c 00	 ret	 12			; 0000000cH
$LN2@insert:

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  000b8	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  000bd	2b c6		 sub	 eax, esi
  000bf	3b c3		 cmp	 eax, ebx
  000c1	0f 82 f7 00 00
	00		 jb	 $LN62@insert

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  000c7	8d 0c 1e	 lea	 ecx, DWORD PTR [esi+ebx]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  000ca	83 c9 0f	 or	 ecx, 15			; 0000000fH
  000cd	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  000d3	76 07		 jbe	 SHORT $LN32@insert

; 4203 :             return _Max;

  000d5	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000da	eb 24		 jmp	 SHORT $LN58@insert
$LN32@insert:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  000dc	8b c2		 mov	 eax, edx
  000de	d1 e8		 shr	 eax, 1
  000e0	89 45 10	 mov	 DWORD PTR tv522[ebp], eax
  000e3	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  000e8	2b 45 10	 sub	 eax, DWORD PTR tv522[ebp]
  000eb	3b d0		 cmp	 edx, eax
  000ed	76 07		 jbe	 SHORT $LN33@insert

; 4207 :             return _Max;

  000ef	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000f4	eb 0a		 jmp	 SHORT $LN58@insert
$LN33@insert:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000f6	8b 45 10	 mov	 eax, DWORD PTR tv522[ebp]
  000f9	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000fb	3b c8		 cmp	 ecx, eax
  000fd	0f 42 c8	 cmovb	 ecx, eax
$LN58@insert:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00100	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00103	89 4d 10	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4260 :         _My_data._Myres       = _New_capacity;

  0010c	8b 4d 10	 mov	 ecx, DWORD PTR $T2[ebp]
  0010f	8b d0		 mov	 edx, eax
  00111	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
  00114	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
  00117	89 47 10	 mov	 DWORD PTR [edi+16], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0011a	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4261 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  0011d	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00120	2b f0		 sub	 esi, eax
  00122	46		 inc	 esi
  00123	89 55 f4	 mov	 DWORD PTR __New_ptr$1[ebp], edx
  00126	89 75 f0	 mov	 DWORD PTR tv519[ebp], esi

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  00129	50		 push	 eax
  0012a	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  0012d	89 4d 10	 mov	 DWORD PTR tv520[ebp], ecx
  00130	03 cb		 add	 ecx, ebx
  00132	83 7d fc 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  00136	89 4d f8	 mov	 DWORD PTR tv518[ebp], ecx
  00139	72 44		 jb	 SHORT $LN26@insert

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  0013b	8b 37		 mov	 esi, DWORD PTR [edi]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0013d	56		 push	 esi
  0013e	52		 push	 edx
  0013f	e8 00 00 00 00	 call	 _memcpy
  00144	53		 push	 ebx
  00145	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  00148	ff 75 10	 push	 DWORD PTR tv520[ebp]
  0014b	e8 00 00 00 00	 call	 _memcpy
  00150	ff 75 f0	 push	 DWORD PTR tv519[ebp]

; 3111 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);

  00153	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00156	03 c6		 add	 eax, esi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00158	50		 push	 eax
  00159	ff 75 f8	 push	 DWORD PTR tv518[ebp]
  0015c	e8 00 00 00 00	 call	 _memcpy

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00161	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]
  00164	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00165	50		 push	 eax
  00166	56		 push	 esi
  00167	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  0016c	8b 45 f4	 mov	 eax, DWORD PTR __New_ptr$1[ebp]

; 3112 :             },
; 3113 :             _Off, _Ptr, _Count);
; 3114 :     }

  0016f	83 c4 2c	 add	 esp, 44			; 0000002cH

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  00172	89 07		 mov	 DWORD PTR [edi], eax

; 3112 :             },
; 3113 :             _Off, _Ptr, _Count);
; 3114 :     }

  00174	8b c7		 mov	 eax, edi
  00176	5f		 pop	 edi
  00177	5e		 pop	 esi
  00178	5b		 pop	 ebx
  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c2 0c 00	 ret	 12			; 0000000cH
$LN26@insert:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0017f	57		 push	 edi
  00180	52		 push	 edx
  00181	e8 00 00 00 00	 call	 _memcpy
  00186	53		 push	 ebx
  00187	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  0018a	ff 75 10	 push	 DWORD PTR tv520[ebp]
  0018d	e8 00 00 00 00	 call	 _memcpy

; 3111 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);

  00192	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00195	56		 push	 esi

; 3111 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);

  00196	03 c7		 add	 eax, edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00198	50		 push	 eax
  00199	ff 75 f8	 push	 DWORD PTR tv518[ebp]
  0019c	e8 00 00 00 00	 call	 _memcpy

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001a1	8d 45 f4	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  001a4	50		 push	 eax
  001a5	57		 push	 edi
  001a6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 3112 :             },
; 3113 :             _Off, _Ptr, _Count);
; 3114 :     }

  001ab	83 c4 2c	 add	 esp, 44			; 0000002cH
  001ae	8b c7		 mov	 eax, edi
  001b0	5f		 pop	 edi
  001b1	5e		 pop	 esi
  001b2	5b		 pop	 ebx
  001b3	8b e5		 mov	 esp, ebp
  001b5	5d		 pop	 ebp
  001b6	c2 0c 00	 ret	 12			; 0000000cH
$LN61@insert:

; 2158 :             _Xran();

  001b9	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN62@insert:

; 4250 :             _Xlen_string(); // result too long

  001be	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN57@insert:
  001c3	cc		 int	 3
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IQBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
__Right_size$1$ = 8					; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00014	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0001b	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0001f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00022	89 45 08	 mov	 DWORD PTR __Right_size$1$[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN11@basic_stri

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@basic_stri:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00029	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002c	73 1e		 jae	 SHORT $LN8@basic_stri

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0002e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00034	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00039	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  0003c	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00042	8b c7		 mov	 eax, edi
  00044	5f		 pop	 edi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN8@basic_stri:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0004f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00054	3b c1		 cmp	 eax, ecx
  00056	56		 push	 esi
  00057	0f 47 c1	 cmova	 eax, ecx
  0005a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0005d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00064	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00066	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00076	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00077	51		 push	 ecx
  00078	53		 push	 ebx
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _memcpy
  0007f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00082	83 c4 18	 add	 esp, 24			; 00000018H

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00088	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0008e	8b c7		 mov	 eax, edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00090	5e		 pop	 esi

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00091	5f		 pop	 edi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2169 :         _Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\Area.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
