; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?USE_WEAPON_SPECULAR@@3HA			; USE_WEAPON_SPECULAR
PUBLIC	?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA		; USE_VIETNAM_CONVERT_WEAPON_VNUM
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
_BSS	SEGMENT
?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA DD 01H DUP (?)	; USE_VIETNAM_CONVERT_WEAPON_VNUM
_BSS	ENDS
_DATA	SEGMENT
?USE_WEAPON_SPECULAR@@3HA DD 01H			; USE_WEAPON_SPECULAR
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1SCollisionPointInstance@CActorInstance@@QAE@XZ ; CActorInstance::SCollisionPointInstance::~SCollisionPointInstance
PUBLIC	?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::push_back
PUBLIC	?clear@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXXZ ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::clear
PUBLIC	?AttachAcce@CActorInstance@@QAEXPAVCItemData@@M@Z ; CActorInstance::AttachAcce
PUBLIC	?AttachWeapon@CActorInstance@@QAEXKKK@Z		; CActorInstance::AttachWeapon
PUBLIC	?AttachWeapon@CActorInstance@@QAEXKKPAVCItemData@@@Z ; CActorInstance::AttachWeapon
PUBLIC	?RefreshActorInstance@CActorInstance@@QAEXXZ	; CActorInstance::RefreshActorInstance
PUBLIC	?GetAttachingBoneName@CActorInstance@@QAEHKPAPBD@Z ; CActorInstance::GetAttachingBoneName
PUBLIC	?UpdateAttachingInstances@CActorInstance@@QAEXXZ ; CActorInstance::UpdateAttachingInstances
PUBLIC	?DettachEffect@CActorInstance@@QAEXK@Z		; CActorInstance::DettachEffect
PUBLIC	?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z	; CActorInstance::AttachEffectByName
PUBLIC	?AttachEffectByID@CActorInstance@@QAEKKPBDKPBUD3DXVECTOR3@@@Z ; CActorInstance::AttachEffectByID
PUBLIC	?AttachSmokeEffect@CActorInstance@@QAEKK@Z	; CActorInstance::AttachSmokeEffect
PUBLIC	?SetWeaponTraceTexture@CActorInstance@@QAEXPBD@Z ; CActorInstance::SetWeaponTraceTexture
PUBLIC	?UseTextureWeaponTrace@CActorInstance@@QAEXXZ	; CActorInstance::UseTextureWeaponTrace
PUBLIC	?UseAlphaWeaponTrace@CActorInstance@@QAEXXZ	; CActorInstance::UseAlphaWeaponTrace
PUBLIC	?ShowAllAttachingEffect@CActorInstance@@QAEXXZ	; CActorInstance::ShowAllAttachingEffect
PUBLIC	?HideAllAttachingEffect@CActorInstance@@QAEXXZ	; CActorInstance::HideAllAttachingEffect
PUBLIC	?__IsLeftHandWeapon@CActorInstance@@IAE_NK@Z	; CActorInstance::__IsLeftHandWeapon
PUBLIC	?__IsRightHandWeapon@CActorInstance@@IAE_NK@Z	; CActorInstance::__IsRightHandWeapon
PUBLIC	?__IsWeaponTrace@CActorInstance@@IAE_NK@Z	; CActorInstance::__IsWeaponTrace
PUBLIC	?__ClearAttachingEffect@CActorInstance@@IAEXXZ	; CActorInstance::__ClearAttachingEffect
PUBLIC	?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength
PUBLIC	?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z ; std::list<CActorInstance::TAttachingEffect,std::allocator<CActorInstance::TAttachingEffect> >::push_back
PUBLIC	?Vietnam_ConvertWeaponVnum@@YAKK@Z		; Vietnam_ConvertWeaponVnum
PUBLIC	??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Destroy_range@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAXPAUCDynamicSphereInstance@@QAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDynamicSphereInstance> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *,std::_List_node<CActorInstance::SCollisionPointInstance,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Destroy_range<std::allocator<CWeaponTrace *> >
PUBLIC	??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *>
PUBLIC	??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *>
PUBLIC	??$_Uninitialized_copy@PAUCDynamicSphereInstance@@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAPAUCDynamicSphereInstance@@QAU1@0PAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z ; std::_Uninitialized_copy<CDynamicSphereInstance *,std::allocator<CDynamicSphereInstance> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
PUBLIC	??_C@_0M@OLLEIOHA@equip_right@			; `string'
PUBLIC	??_C@_0ED@FCEINDDL@void?5CActorInstance?3?3RefreshAct@ ; `string'
PUBLIC	??_C@_0BH@KNPFFH@Cannot?5get?5Bone?5Index?6@	; `string'
PUBLIC	??_C@_0BD@NKMCNOEI@Creating?5?$CFp?5?$CFd?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0N@DLOEJLFF@Bip01?5Spine2@		; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	__real@00000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?StringPath@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; StringPath
EXTRN	?StringPath@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; StringPath
EXTRN	?GetCaseCRC32@@YAKPBDI@Z:PROC			; GetCaseCRC32
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixTranslation@16:PROC
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?GetCurrentMillisecond@CTimer@@QAEKXZ:PROC	; CTimer::GetCurrentMillisecond
EXTRN	?IsAliveEffect@CEffectManager@@QAE_NK@Z:PROC	; CEffectManager::IsAliveEffect
EXTRN	?CreateEffectInstance@CEffectManager@@QAEXKK@Z:PROC ; CEffectManager::CreateEffectInstance
EXTRN	?SelectEffectInstance@CEffectManager@@QAEHK@Z:PROC ; CEffectManager::SelectEffectInstance
EXTRN	?DestroyEffectInstance@CEffectManager@@QAE_NK@Z:PROC ; CEffectManager::DestroyEffectInstance
EXTRN	?SetEffectInstanceGlobalMatrix@CEffectManager@@QAEXABUD3DXMATRIX@@@Z:PROC ; CEffectManager::SetEffectInstanceGlobalMatrix
EXTRN	?ShowEffect@CEffectManager@@QAEXXZ:PROC		; CEffectManager::ShowEffect
EXTRN	?HideEffect@CEffectManager@@QAEXXZ:PROC		; CEffectManager::HideEffect
EXTRN	?GetEmptyIndex@CEffectManager@@QAEHXZ:PROC	; CEffectManager::GetEmptyIndex
EXTRN	?GetAttachingBoneName@CRaceData@@QAEHKPAPBD@Z:PROC ; CRaceData::GetAttachingBoneName
EXTRN	?GetAttachingDataCount@CRaceData@@QAEKXZ:PROC	; CRaceData::GetAttachingDataCount
EXTRN	?GetAttachingDataPointer@CRaceData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z:PROC ; CRaceData::GetAttachingDataPointer
EXTRN	?GetSmokeEffectID@CRaceData@@QAEKI@Z:PROC	; CRaceData::GetSmokeEffectID
EXTRN	?GetSmokeBone@CRaceData@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CRaceData::GetSmokeBone
EXTRN	?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::RegisterModelThing
EXTRN	?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::RegisterLODThing
EXTRN	?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z:PROC ; CGraphicThingInstance::SetModelInstance
EXTRN	?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z:PROC ; CGraphicThingInstance::AttachModelInstance
EXTRN	?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z:PROC ; CGraphicThingInstance::FindBoneIndex
EXTRN	?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z:PROC ; CGraphicThingInstance::SetMaterialData
EXTRN	?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z:PROC ; CGraphicThingInstance::GetBoneMatrix
EXTRN	?GetRace@CActorInstance@@QAEKXZ:PROC		; CActorInstance::GetRace
EXTRN	?CreateCollisionInstancePiece@CActorInstance@@QAE_NKPBUSAttachingData@NRaceData@@PAUSCollisionPointInstance@1@@Z:PROC ; CActorInstance::CreateCollisionInstancePiece
EXTRN	?__IsMountingHorse@CActorInstance@@IAE_NXZ:PROC	; CActorInstance::__IsMountingHorse
EXTRN	?__DestroyWeaponTrace@CActorInstance@@IAEXXZ:PROC ; CActorInstance::__DestroyWeaponTrace
EXTRN	?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ:PROC ; CItemData::GetModelThing
EXTRN	?GetSubModelThing@CItemData@@QAEPAVCGraphicThing@@XZ:PROC ; CItemData::GetSubModelThing
EXTRN	?GetLODModelThingCount@CItemData@@QAEKXZ:PROC	; CItemData::GetLODModelThingCount
EXTRN	?GetLODModelThingPointer@CItemData@@QAEHKPAPAVCGraphicThing@@@Z:PROC ; CItemData::GetLODModelThingPointer
EXTRN	?GetAttachingDataCount@CItemData@@QAEKXZ:PROC	; CItemData::GetAttachingDataCount
EXTRN	?GetAttachingDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z:PROC ; CItemData::GetAttachingDataPointer
EXTRN	?GetType@CItemData@@QBEEXZ:PROC			; CItemData::GetType
EXTRN	?GetWeaponType@CItemData@@QBEKXZ:PROC		; CItemData::GetWeaponType
EXTRN	?GetSpecularPowerf@CItemData@@QBEMXZ:PROC	; CItemData::GetSpecularPowerf
EXTRN	?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z:PROC ; CItemManager::GetItemDataPointer
EXTRN	?New@CWeaponTrace@@SAPAV1@XZ:PROC		; CWeaponTrace::New
EXTRN	?UseAlpha@CWeaponTrace@@QAEXXZ:PROC		; CWeaponTrace::UseAlpha
EXTRN	?UseTexture@CWeaponTrace@@QAEXXZ:PROC		; CWeaponTrace::UseTexture
EXTRN	?SetTexture@CWeaponTrace@@QAEXPBD@Z:PROC	; CWeaponTrace::SetTexture
EXTRN	?SetWeaponInstance@CWeaponTrace@@QAE_NPAVCGraphicThingInstance@@KPBD@Z:PROC ; CWeaponTrace::SetWeaponInstance
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A DD 01H DUP (?) ; CSingleton<CItemManager>::ms_singleton
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLOEJLFF@Bip01?5Spine2@
CONST	SEGMENT
??_C@_0N@DLOEJLFF@Bip01?5Spine2@ DB 'Bip01 Spine2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKMCNOEI@Creating?5?$CFp?5?$CFd?5?$CFd?6@
CONST	SEGMENT
??_C@_0BD@NKMCNOEI@Creating?5?$CFp?5?$CFd?5?$CFd?6@ DB 'Creating %p %d %d'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KNPFFH@Cannot?5get?5Bone?5Index?6@
CONST	SEGMENT
??_C@_0BH@KNPFFH@Cannot?5get?5Bone?5Index?6@ DB 'Cannot get Bone Index', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@FCEINDDL@void?5CActorInstance?3?3RefreshAct@
CONST	SEGMENT
??_C@_0ED@FCEINDDL@void?5CActorInstance?3?3RefreshAct@ DB 'void CActorIns'
	DB	'tance::RefreshActorInstance() - m_pkCurRaceData=NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OLLEIOHA@equip_right@
CONST	SEGMENT
??_C@_0M@OLLEIOHA@equip_right@ DB 'equip_right', 00H	; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUSCollisionPointInstance@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@1@ABUSCollisionPointInstance@CActorInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUSCollisionPointInstance@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@1@ABUSCollisionPointInstance@CActorInstance@@@Z$0
__ehfuncinfo$??$?0ABUSCollisionPointInstance@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@1@ABUSCollisionPointInstance@CActorInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUSCollisionPointInstance@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@1@ABUSCollisionPointInstance@CActorInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUTAttachingEffect@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@1@ABUTAttachingEffect@CActorInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUTAttachingEffect@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@1@ABUTAttachingEffect@CActorInstance@@@Z$0
__ehfuncinfo$??$?0ABUTAttachingEffect@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@1@ABUTAttachingEffect@CActorInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUTAttachingEffect@CActorInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@1@ABUTAttachingEffect@CActorInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABUSCollisionPointInstance@CActorInstance@@@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@1@QAU21@ABUSCollisionPointInstance@CActorInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABUSCollisionPointInstance@CActorInstance@@@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@1@QAU21@ABUSCollisionPointInstance@CActorInstance@@@Z$1
__ehfuncinfo$??$_Emplace@ABUSCollisionPointInstance@CActorInstance@@@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@1@QAU21@ABUSCollisionPointInstance@CActorInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABUSCollisionPointInstance@CActorInstance@@@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@1@QAU21@ABUSCollisionPointInstance@CActorInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABUTAttachingEffect@CActorInstance@@@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@1@QAU21@ABUTAttachingEffect@CActorInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABUTAttachingEffect@CActorInstance@@@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@1@QAU21@ABUTAttachingEffect@CActorInstance@@@Z$1
__ehfuncinfo$??$_Emplace@ABUTAttachingEffect@CActorInstance@@@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@1@QAU21@ABUTAttachingEffect@CActorInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABUTAttachingEffect@CActorInstance@@@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@1@QAU21@ABUTAttachingEffect@CActorInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z$1
__ehfuncinfo$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z$0
__ehfuncinfo$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RefreshActorInstance@CActorInstance@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RefreshActorInstance@CActorInstance@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RefreshActorInstance@CActorInstance@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RefreshActorInstance@CActorInstance@@QAEXXZ$11
__ehfuncinfo$?RefreshActorInstance@CActorInstance@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RefreshActorInstance@CActorInstance@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z$1
__ehfuncinfo$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAUCDynamicSphereInstance@@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAPAUCDynamicSphereInstance@@QAU1@0PAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAUCDynamicSphereInstance@@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAPAUCDynamicSphereInstance@@QAU1@0PAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z PROC ; std::_Uninitialized_copy<CDynamicSphereInstance *,std::allocator<CDynamicSphereInstance> >, COMDAT

; 1527 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1528 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1529 :     // note: only called internally from elsewhere in the STL
; 1530 :     using _Ptrval = typename _Alloc::value_type*;
; 1531 : 
; 1532 :     auto _UFirst      = _Get_unwrapped(_First);
; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1527 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	56		 push	 esi

; 1528 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1529 :     // note: only called internally from elsewhere in the STL
; 1530 :     using _Ptrval = typename _Alloc::value_type*;
; 1531 : 
; 1532 :     auto _UFirst      = _Get_unwrapped(_First);
; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000d	3b ce		 cmp	 ecx, esi
  0000f	74 20		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00011	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00014	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00017	f3 0f 7e 41 10	 movq	 xmm0, QWORD PTR [ecx+16]
  0001c	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  00021	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]

; 1509 :         ++_Last;

  00024	83 c1 1c	 add	 ecx, 28			; 0000001cH

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00027	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 1509 :         ++_Last;

  0002a	83 c0 1c	 add	 eax, 28			; 0000001cH

; 1528 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1529 :     // note: only called internally from elsewhere in the STL
; 1530 :     using _Ptrval = typename _Alloc::value_type*;
; 1531 : 
; 1532 :     auto _UFirst      = _Get_unwrapped(_First);
; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0002d	3b ce		 cmp	 ecx, esi
  0002f	75 e0		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  00031	5e		 pop	 esi

; 1542 :             _Backout._Emplace_back(*_UFirst);
; 1543 :         }
; 1544 : 
; 1545 :         _Dest = _Backout._Release();
; 1546 :     }
; 1547 : 
; 1548 :     return _Dest;
; 1549 : }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??$_Uninitialized_copy@PAUCDynamicSphereInstance@@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAPAUCDynamicSphereInstance@@QAU1@0PAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z ENDP ; std::_Uninitialized_copy<CDynamicSphereInstance *,std::allocator<CDynamicSphereInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z PROC ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCWeaponTrace@@PAPAV1@@std@@YAPAPAVCWeaponTrace@@PAPAV1@00@Z ; std::_Copy_memmove<CWeaponTrace * *,CWeaponTrace * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ENDP ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CWeaponTrace *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAXPAPAVCWeaponTrace@@QAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CWeaponTrace *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *,std::_List_node<CActorInstance::SCollisionPointInstance,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *,std::_List_node<CActorInstance::SCollisionPointInstance,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 24		 push	 36			; 00000024H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 60		 push	 96			; 00000060H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAXPAUCDynamicSphereInstance@@QAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAXPAUCDynamicSphereInstance@@QAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CDynamicSphereInstance> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAXPAUCDynamicSphereInstance@@QAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CDynamicSphereInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@YAPAPAVCWeaponTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCWeaponTrace@@@0@@Z ; std::_Uninitialized_move<CWeaponTrace * *,std::allocator<CWeaponTrace *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?Vietnam_ConvertWeaponVnum@@YAKK@Z
_TEXT	SEGMENT
_vnum$ = 8						; size = 4
?Vietnam_ConvertWeaponVnum@@YAKK@Z PROC			; Vietnam_ConvertWeaponVnum, COMDAT

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 17   : 	DWORD base = vnum / 10 * 10;

  00004	8b 75 08	 mov	 esi, DWORD PTR _vnum$[ebp]
  00007	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH
  0000c	f7 e6		 mul	 esi
  0000e	c1 ea 03	 shr	 edx, 3
  00011	8d 0c 92	 lea	 ecx, DWORD PTR [edx+edx*4]
  00014	03 c9		 add	 ecx, ecx

; 18   : 	DWORD rest = vnum % 10;

  00016	2b f1		 sub	 esi, ecx

; 19   : 	switch (base)

  00018	81 f9 0e 01 00
	00		 cmp	 ecx, 270		; 0000010eH
  0001e	0f 87 bc 00 00
	00		 ja	 $LN74@Vietnam_Co
  00024	0f 84 ab 00 00
	00		 je	 $LN29@Vietnam_Co
  0002a	8d 41 f6	 lea	 eax, DWORD PTR [ecx-10]
  0002d	3d fa 00 00 00	 cmp	 eax, 250		; 000000faH
  00032	0f 87 d7 00 00
	00		 ja	 $LN2@Vietnam_Co
  00038	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN77@Vietnam_Co[eax]
  0003f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN78@Vietnam_Co[eax*4]
$LN4@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00046	b9 88 13 00 00	 mov	 ecx, 5000		; 00001388H
  0004b	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  0004e	5e		 pop	 esi

; 92   : }

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN6@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00051	b9 9c 13 00 00	 mov	 ecx, 5020		; 0000139cH
  00056	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00059	5e		 pop	 esi

; 92   : }

  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN7@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  0005c	b9 a6 13 00 00	 mov	 ecx, 5030		; 000013a6H
  00061	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00064	5e		 pop	 esi

; 92   : }

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
$LN9@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00067	b9 b0 13 00 00	 mov	 ecx, 5040		; 000013b0H
  0006c	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  0006f	5e		 pop	 esi

; 92   : }

  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
$LN11@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00072	b9 ba 13 00 00	 mov	 ecx, 5050		; 000013baH
  00077	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  0007a	5e		 pop	 esi

; 92   : }

  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN13@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  0007d	b9 c4 13 00 00	 mov	 ecx, 5060		; 000013c4H
  00082	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00085	5e		 pop	 esi

; 92   : }

  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN15@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00088	b9 ce 13 00 00	 mov	 ecx, 5070		; 000013ceH
  0008d	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00090	5e		 pop	 esi

; 92   : }

  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN17@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00093	b9 d8 13 00 00	 mov	 ecx, 5080		; 000013d8H
  00098	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  0009b	5e		 pop	 esi

; 92   : }

  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$LN19@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  0009e	b9 e2 13 00 00	 mov	 ecx, 5090		; 000013e2H
  000a3	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  000a6	5e		 pop	 esi

; 92   : }

  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
$LN21@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  000a9	b9 ec 13 00 00	 mov	 ecx, 5100		; 000013ecH
  000ae	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  000b1	5e		 pop	 esi

; 92   : }

  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
$LN23@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  000b4	b9 f6 13 00 00	 mov	 ecx, 5110		; 000013f6H
  000b9	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  000bc	5e		 pop	 esi

; 92   : }

  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
$LN25@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  000bf	b9 00 14 00 00	 mov	 ecx, 5120		; 00001400H
  000c4	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  000c7	5e		 pop	 esi

; 92   : }

  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
$LN27@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  000ca	b9 0a 14 00 00	 mov	 ecx, 5130		; 0000140aH
  000cf	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  000d2	5e		 pop	 esi

; 92   : }

  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
$LN29@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  000d5	b9 14 14 00 00	 mov	 ecx, 5140		; 00001414H
  000da	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  000dd	5e		 pop	 esi

; 92   : }

  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
$LN74@Vietnam_Co:

; 19   : 	switch (base)

  000e0	81 f9 b8 0b 00
	00		 cmp	 ecx, 3000		; 00000bb8H
  000e6	77 53		 ja	 SHORT $LN75@Vietnam_Co
  000e8	0f 84 58 ff ff
	ff		 je	 $LN4@Vietnam_Co
  000ee	81 f9 e8 03 00
	00		 cmp	 ecx, 1000		; 000003e8H
  000f4	77 1f		 ja	 SHORT $LN76@Vietnam_Co
  000f6	0f 84 4a ff ff
	ff		 je	 $LN4@Vietnam_Co
  000fc	8b c1		 mov	 eax, ecx
  000fe	2d 18 01 00 00	 sub	 eax, 280		; 00000118H
  00103	74 05		 je	 SHORT $LN72@Vietnam_Co
  00105	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00108	75 05		 jne	 SHORT $LN2@Vietnam_Co
$LN72@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  0010a	b9 1e 14 00 00	 mov	 ecx, 5150		; 0000141eH
$LN2@Vietnam_Co:
  0010f	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00112	5e		 pop	 esi

; 92   : }

  00113	5d		 pop	 ebp
  00114	c3		 ret	 0
$LN76@Vietnam_Co:

; 19   : 	switch (base)

  00115	8d 81 0e fc ff
	ff		 lea	 eax, DWORD PTR [ecx-1010]
  0011b	3d a0 00 00 00	 cmp	 eax, 160		; 000000a0H
  00120	77 ed		 ja	 SHORT $LN2@Vietnam_Co
  00122	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN79@Vietnam_Co[eax]
  00129	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN80@Vietnam_Co[eax*4]
$LN34@Vietnam_Co:

; 20   : 	{
; 21   : 	case  10:base = 5000;break;
; 22   : 	case  20:base = 5010;break;
; 23   : 	case  30:base = 5020;break;
; 24   : 	case  40:base = 5030;break;
; 25   : 	case  50:base = 5030;break;
; 26   : 	case  60:base = 5040;break;
; 27   : 	case  70:base = 5040;break;
; 28   : 	case  80:base = 5050;break;
; 29   : 	case  90:base = 5050;break;
; 30   : 	case 100:base = 5060;break;
; 31   : 	case 110:base = 5060;break;
; 32   : 	case 120:base = 5070;break;
; 33   : 	case 130:base = 5070;break;
; 34   : 	case 140:base = 5080;break;
; 35   : 	case 150:base = 5080;break;
; 36   : 	case 160:base = 5090;break;
; 37   : 	case 170:base = 5090;break;
; 38   : 	case 180:base = 5100;break;
; 39   : 	case 190:base = 5100;break;
; 40   : 	case 200:base = 5110;break;
; 41   : 	case 210:base = 5110;break;
; 42   : 	case 220:base = 5120;break;
; 43   : 	case 230:base = 5120;break;
; 44   : 	case 240:base = 5130;break;
; 45   : 	case 250:base = 5130;break;
; 46   : 	case 260:base = 5140;break;
; 47   : 	case 270:base = 5140;break;
; 48   : 	case 280:base = 5150;break;
; 49   : 	case 290:base = 5150;break;
; 50   : 	case 1000:base = 5000;break;
; 51   : 	case 1010:base = 5010;break;
; 52   : 	case 1020:base = 5020;break;
; 53   : 	case 1030:base = 5030;break;
; 54   : 	case 1040:base = 5040;break;
; 55   : 	case 1050:base = 5050;break;
; 56   : 	case 1060:base = 5060;break;
; 57   : 	case 1070:base = 5070;break;
; 58   : 	case 1080:base = 5080;break;
; 59   : 	case 1090:base = 5090;break;
; 60   : 	case 1100:base = 5100;break;
; 61   : 	case 1110:base = 5110;break;
; 62   : 	case 1120:base = 5120;break;
; 63   : 	case 1130:base = 5130;break;
; 64   : 	case 1140:base = 5140;break;
; 65   : 	case 1150:base = 5150;break;
; 66   : 	case 1160:base = 5150;break;
; 67   : 	case 1170:base = 5150;break;
; 68   : 	case 3000:base = 5000;break;
; 69   : 	case 3010:base = 5010;break;
; 70   : 	case 3020:base = 5020;break;
; 71   : 	case 3030:base = 5030;break;
; 72   : 	case 3040:base = 5040;break;
; 73   : 	case 3050:base = 5050;break;
; 74   : 	case 3060:base = 5060;break;
; 75   : 	case 3070:base = 5070;break;
; 76   : 	case 3080:base = 5080;break;
; 77   : 	case 3090:base = 5090;break;
; 78   : 	case 3100:base = 5100;break;
; 79   : 	case 3110:base = 5100;break;
; 80   : 	case 3120:base = 5110;break;
; 81   : 	case 3130:base = 5110;break;
; 82   : 	case 3140:base = 5120;break;
; 83   : 	case 3150:base = 5120;break;
; 84   : 	case 3160:base = 5130;break;
; 85   : 	case 3170:base = 5130;break;
; 86   : 	case 3180:base = 5140;break;
; 87   : 	case 3190:base = 5140;break;
; 88   : 	case 3200:base = 5150;break;
; 89   : 	case 3210:base = 5150;break;
; 90   : 	}
; 91   : 	return base + rest;

  00130	b9 92 13 00 00	 mov	 ecx, 5010		; 00001392H
  00135	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00138	5e		 pop	 esi

; 92   : }

  00139	5d		 pop	 ebp
  0013a	c3		 ret	 0
$LN75@Vietnam_Co:

; 19   : 	switch (base)

  0013b	8d 81 3e f4 ff
	ff		 lea	 eax, DWORD PTR [ecx-3010]
  00141	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  00146	77 c7		 ja	 SHORT $LN2@Vietnam_Co
  00148	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN81@Vietnam_Co[eax]
  0014f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN82@Vietnam_Co[eax*4]
  00156	66 90		 npad	 2
$LN78@Vietnam_Co:

; 92   : }

  00158	00 00 00 00	 DD	 $LN4@Vietnam_Co
  0015c	00 00 00 00	 DD	 $LN34@Vietnam_Co
  00160	00 00 00 00	 DD	 $LN6@Vietnam_Co
  00164	00 00 00 00	 DD	 $LN7@Vietnam_Co
  00168	00 00 00 00	 DD	 $LN9@Vietnam_Co
  0016c	00 00 00 00	 DD	 $LN11@Vietnam_Co
  00170	00 00 00 00	 DD	 $LN13@Vietnam_Co
  00174	00 00 00 00	 DD	 $LN15@Vietnam_Co
  00178	00 00 00 00	 DD	 $LN17@Vietnam_Co
  0017c	00 00 00 00	 DD	 $LN19@Vietnam_Co
  00180	00 00 00 00	 DD	 $LN21@Vietnam_Co
  00184	00 00 00 00	 DD	 $LN23@Vietnam_Co
  00188	00 00 00 00	 DD	 $LN25@Vietnam_Co
  0018c	00 00 00 00	 DD	 $LN27@Vietnam_Co
  00190	00 00 00 00	 DD	 $LN29@Vietnam_Co
  00194	00 00 00 00	 DD	 $LN2@Vietnam_Co
$LN77@Vietnam_Co:
  00198	00		 DB	 0
  00199	0f		 DB	 15			; 0000000fH
  0019a	0f		 DB	 15			; 0000000fH
  0019b	0f		 DB	 15			; 0000000fH
  0019c	0f		 DB	 15			; 0000000fH
  0019d	0f		 DB	 15			; 0000000fH
  0019e	0f		 DB	 15			; 0000000fH
  0019f	0f		 DB	 15			; 0000000fH
  001a0	0f		 DB	 15			; 0000000fH
  001a1	0f		 DB	 15			; 0000000fH
  001a2	01		 DB	 1
  001a3	0f		 DB	 15			; 0000000fH
  001a4	0f		 DB	 15			; 0000000fH
  001a5	0f		 DB	 15			; 0000000fH
  001a6	0f		 DB	 15			; 0000000fH
  001a7	0f		 DB	 15			; 0000000fH
  001a8	0f		 DB	 15			; 0000000fH
  001a9	0f		 DB	 15			; 0000000fH
  001aa	0f		 DB	 15			; 0000000fH
  001ab	0f		 DB	 15			; 0000000fH
  001ac	02		 DB	 2
  001ad	0f		 DB	 15			; 0000000fH
  001ae	0f		 DB	 15			; 0000000fH
  001af	0f		 DB	 15			; 0000000fH
  001b0	0f		 DB	 15			; 0000000fH
  001b1	0f		 DB	 15			; 0000000fH
  001b2	0f		 DB	 15			; 0000000fH
  001b3	0f		 DB	 15			; 0000000fH
  001b4	0f		 DB	 15			; 0000000fH
  001b5	0f		 DB	 15			; 0000000fH
  001b6	03		 DB	 3
  001b7	0f		 DB	 15			; 0000000fH
  001b8	0f		 DB	 15			; 0000000fH
  001b9	0f		 DB	 15			; 0000000fH
  001ba	0f		 DB	 15			; 0000000fH
  001bb	0f		 DB	 15			; 0000000fH
  001bc	0f		 DB	 15			; 0000000fH
  001bd	0f		 DB	 15			; 0000000fH
  001be	0f		 DB	 15			; 0000000fH
  001bf	0f		 DB	 15			; 0000000fH
  001c0	03		 DB	 3
  001c1	0f		 DB	 15			; 0000000fH
  001c2	0f		 DB	 15			; 0000000fH
  001c3	0f		 DB	 15			; 0000000fH
  001c4	0f		 DB	 15			; 0000000fH
  001c5	0f		 DB	 15			; 0000000fH
  001c6	0f		 DB	 15			; 0000000fH
  001c7	0f		 DB	 15			; 0000000fH
  001c8	0f		 DB	 15			; 0000000fH
  001c9	0f		 DB	 15			; 0000000fH
  001ca	04		 DB	 4
  001cb	0f		 DB	 15			; 0000000fH
  001cc	0f		 DB	 15			; 0000000fH
  001cd	0f		 DB	 15			; 0000000fH
  001ce	0f		 DB	 15			; 0000000fH
  001cf	0f		 DB	 15			; 0000000fH
  001d0	0f		 DB	 15			; 0000000fH
  001d1	0f		 DB	 15			; 0000000fH
  001d2	0f		 DB	 15			; 0000000fH
  001d3	0f		 DB	 15			; 0000000fH
  001d4	04		 DB	 4
  001d5	0f		 DB	 15			; 0000000fH
  001d6	0f		 DB	 15			; 0000000fH
  001d7	0f		 DB	 15			; 0000000fH
  001d8	0f		 DB	 15			; 0000000fH
  001d9	0f		 DB	 15			; 0000000fH
  001da	0f		 DB	 15			; 0000000fH
  001db	0f		 DB	 15			; 0000000fH
  001dc	0f		 DB	 15			; 0000000fH
  001dd	0f		 DB	 15			; 0000000fH
  001de	05		 DB	 5
  001df	0f		 DB	 15			; 0000000fH
  001e0	0f		 DB	 15			; 0000000fH
  001e1	0f		 DB	 15			; 0000000fH
  001e2	0f		 DB	 15			; 0000000fH
  001e3	0f		 DB	 15			; 0000000fH
  001e4	0f		 DB	 15			; 0000000fH
  001e5	0f		 DB	 15			; 0000000fH
  001e6	0f		 DB	 15			; 0000000fH
  001e7	0f		 DB	 15			; 0000000fH
  001e8	05		 DB	 5
  001e9	0f		 DB	 15			; 0000000fH
  001ea	0f		 DB	 15			; 0000000fH
  001eb	0f		 DB	 15			; 0000000fH
  001ec	0f		 DB	 15			; 0000000fH
  001ed	0f		 DB	 15			; 0000000fH
  001ee	0f		 DB	 15			; 0000000fH
  001ef	0f		 DB	 15			; 0000000fH
  001f0	0f		 DB	 15			; 0000000fH
  001f1	0f		 DB	 15			; 0000000fH
  001f2	06		 DB	 6
  001f3	0f		 DB	 15			; 0000000fH
  001f4	0f		 DB	 15			; 0000000fH
  001f5	0f		 DB	 15			; 0000000fH
  001f6	0f		 DB	 15			; 0000000fH
  001f7	0f		 DB	 15			; 0000000fH
  001f8	0f		 DB	 15			; 0000000fH
  001f9	0f		 DB	 15			; 0000000fH
  001fa	0f		 DB	 15			; 0000000fH
  001fb	0f		 DB	 15			; 0000000fH
  001fc	06		 DB	 6
  001fd	0f		 DB	 15			; 0000000fH
  001fe	0f		 DB	 15			; 0000000fH
  001ff	0f		 DB	 15			; 0000000fH
  00200	0f		 DB	 15			; 0000000fH
  00201	0f		 DB	 15			; 0000000fH
  00202	0f		 DB	 15			; 0000000fH
  00203	0f		 DB	 15			; 0000000fH
  00204	0f		 DB	 15			; 0000000fH
  00205	0f		 DB	 15			; 0000000fH
  00206	07		 DB	 7
  00207	0f		 DB	 15			; 0000000fH
  00208	0f		 DB	 15			; 0000000fH
  00209	0f		 DB	 15			; 0000000fH
  0020a	0f		 DB	 15			; 0000000fH
  0020b	0f		 DB	 15			; 0000000fH
  0020c	0f		 DB	 15			; 0000000fH
  0020d	0f		 DB	 15			; 0000000fH
  0020e	0f		 DB	 15			; 0000000fH
  0020f	0f		 DB	 15			; 0000000fH
  00210	07		 DB	 7
  00211	0f		 DB	 15			; 0000000fH
  00212	0f		 DB	 15			; 0000000fH
  00213	0f		 DB	 15			; 0000000fH
  00214	0f		 DB	 15			; 0000000fH
  00215	0f		 DB	 15			; 0000000fH
  00216	0f		 DB	 15			; 0000000fH
  00217	0f		 DB	 15			; 0000000fH
  00218	0f		 DB	 15			; 0000000fH
  00219	0f		 DB	 15			; 0000000fH
  0021a	08		 DB	 8
  0021b	0f		 DB	 15			; 0000000fH
  0021c	0f		 DB	 15			; 0000000fH
  0021d	0f		 DB	 15			; 0000000fH
  0021e	0f		 DB	 15			; 0000000fH
  0021f	0f		 DB	 15			; 0000000fH
  00220	0f		 DB	 15			; 0000000fH
  00221	0f		 DB	 15			; 0000000fH
  00222	0f		 DB	 15			; 0000000fH
  00223	0f		 DB	 15			; 0000000fH
  00224	08		 DB	 8
  00225	0f		 DB	 15			; 0000000fH
  00226	0f		 DB	 15			; 0000000fH
  00227	0f		 DB	 15			; 0000000fH
  00228	0f		 DB	 15			; 0000000fH
  00229	0f		 DB	 15			; 0000000fH
  0022a	0f		 DB	 15			; 0000000fH
  0022b	0f		 DB	 15			; 0000000fH
  0022c	0f		 DB	 15			; 0000000fH
  0022d	0f		 DB	 15			; 0000000fH
  0022e	09		 DB	 9
  0022f	0f		 DB	 15			; 0000000fH
  00230	0f		 DB	 15			; 0000000fH
  00231	0f		 DB	 15			; 0000000fH
  00232	0f		 DB	 15			; 0000000fH
  00233	0f		 DB	 15			; 0000000fH
  00234	0f		 DB	 15			; 0000000fH
  00235	0f		 DB	 15			; 0000000fH
  00236	0f		 DB	 15			; 0000000fH
  00237	0f		 DB	 15			; 0000000fH
  00238	09		 DB	 9
  00239	0f		 DB	 15			; 0000000fH
  0023a	0f		 DB	 15			; 0000000fH
  0023b	0f		 DB	 15			; 0000000fH
  0023c	0f		 DB	 15			; 0000000fH
  0023d	0f		 DB	 15			; 0000000fH
  0023e	0f		 DB	 15			; 0000000fH
  0023f	0f		 DB	 15			; 0000000fH
  00240	0f		 DB	 15			; 0000000fH
  00241	0f		 DB	 15			; 0000000fH
  00242	0a		 DB	 10			; 0000000aH
  00243	0f		 DB	 15			; 0000000fH
  00244	0f		 DB	 15			; 0000000fH
  00245	0f		 DB	 15			; 0000000fH
  00246	0f		 DB	 15			; 0000000fH
  00247	0f		 DB	 15			; 0000000fH
  00248	0f		 DB	 15			; 0000000fH
  00249	0f		 DB	 15			; 0000000fH
  0024a	0f		 DB	 15			; 0000000fH
  0024b	0f		 DB	 15			; 0000000fH
  0024c	0a		 DB	 10			; 0000000aH
  0024d	0f		 DB	 15			; 0000000fH
  0024e	0f		 DB	 15			; 0000000fH
  0024f	0f		 DB	 15			; 0000000fH
  00250	0f		 DB	 15			; 0000000fH
  00251	0f		 DB	 15			; 0000000fH
  00252	0f		 DB	 15			; 0000000fH
  00253	0f		 DB	 15			; 0000000fH
  00254	0f		 DB	 15			; 0000000fH
  00255	0f		 DB	 15			; 0000000fH
  00256	0b		 DB	 11			; 0000000bH
  00257	0f		 DB	 15			; 0000000fH
  00258	0f		 DB	 15			; 0000000fH
  00259	0f		 DB	 15			; 0000000fH
  0025a	0f		 DB	 15			; 0000000fH
  0025b	0f		 DB	 15			; 0000000fH
  0025c	0f		 DB	 15			; 0000000fH
  0025d	0f		 DB	 15			; 0000000fH
  0025e	0f		 DB	 15			; 0000000fH
  0025f	0f		 DB	 15			; 0000000fH
  00260	0b		 DB	 11			; 0000000bH
  00261	0f		 DB	 15			; 0000000fH
  00262	0f		 DB	 15			; 0000000fH
  00263	0f		 DB	 15			; 0000000fH
  00264	0f		 DB	 15			; 0000000fH
  00265	0f		 DB	 15			; 0000000fH
  00266	0f		 DB	 15			; 0000000fH
  00267	0f		 DB	 15			; 0000000fH
  00268	0f		 DB	 15			; 0000000fH
  00269	0f		 DB	 15			; 0000000fH
  0026a	0c		 DB	 12			; 0000000cH
  0026b	0f		 DB	 15			; 0000000fH
  0026c	0f		 DB	 15			; 0000000fH
  0026d	0f		 DB	 15			; 0000000fH
  0026e	0f		 DB	 15			; 0000000fH
  0026f	0f		 DB	 15			; 0000000fH
  00270	0f		 DB	 15			; 0000000fH
  00271	0f		 DB	 15			; 0000000fH
  00272	0f		 DB	 15			; 0000000fH
  00273	0f		 DB	 15			; 0000000fH
  00274	0c		 DB	 12			; 0000000cH
  00275	0f		 DB	 15			; 0000000fH
  00276	0f		 DB	 15			; 0000000fH
  00277	0f		 DB	 15			; 0000000fH
  00278	0f		 DB	 15			; 0000000fH
  00279	0f		 DB	 15			; 0000000fH
  0027a	0f		 DB	 15			; 0000000fH
  0027b	0f		 DB	 15			; 0000000fH
  0027c	0f		 DB	 15			; 0000000fH
  0027d	0f		 DB	 15			; 0000000fH
  0027e	0d		 DB	 13			; 0000000dH
  0027f	0f		 DB	 15			; 0000000fH
  00280	0f		 DB	 15			; 0000000fH
  00281	0f		 DB	 15			; 0000000fH
  00282	0f		 DB	 15			; 0000000fH
  00283	0f		 DB	 15			; 0000000fH
  00284	0f		 DB	 15			; 0000000fH
  00285	0f		 DB	 15			; 0000000fH
  00286	0f		 DB	 15			; 0000000fH
  00287	0f		 DB	 15			; 0000000fH
  00288	0d		 DB	 13			; 0000000dH
  00289	0f		 DB	 15			; 0000000fH
  0028a	0f		 DB	 15			; 0000000fH
  0028b	0f		 DB	 15			; 0000000fH
  0028c	0f		 DB	 15			; 0000000fH
  0028d	0f		 DB	 15			; 0000000fH
  0028e	0f		 DB	 15			; 0000000fH
  0028f	0f		 DB	 15			; 0000000fH
  00290	0f		 DB	 15			; 0000000fH
  00291	0f		 DB	 15			; 0000000fH
  00292	0e		 DB	 14			; 0000000eH
  00293	90		 npad	 1
$LN80@Vietnam_Co:
  00294	00 00 00 00	 DD	 $LN34@Vietnam_Co
  00298	00 00 00 00	 DD	 $LN6@Vietnam_Co
  0029c	00 00 00 00	 DD	 $LN7@Vietnam_Co
  002a0	00 00 00 00	 DD	 $LN9@Vietnam_Co
  002a4	00 00 00 00	 DD	 $LN11@Vietnam_Co
  002a8	00 00 00 00	 DD	 $LN13@Vietnam_Co
  002ac	00 00 00 00	 DD	 $LN15@Vietnam_Co
  002b0	00 00 00 00	 DD	 $LN17@Vietnam_Co
  002b4	00 00 00 00	 DD	 $LN19@Vietnam_Co
  002b8	00 00 00 00	 DD	 $LN21@Vietnam_Co
  002bc	00 00 00 00	 DD	 $LN23@Vietnam_Co
  002c0	00 00 00 00	 DD	 $LN25@Vietnam_Co
  002c4	00 00 00 00	 DD	 $LN27@Vietnam_Co
  002c8	00 00 00 00	 DD	 $LN29@Vietnam_Co
  002cc	00 00 00 00	 DD	 $LN72@Vietnam_Co
  002d0	00 00 00 00	 DD	 $LN2@Vietnam_Co
$LN79@Vietnam_Co:
  002d4	00		 DB	 0
  002d5	0f		 DB	 15			; 0000000fH
  002d6	0f		 DB	 15			; 0000000fH
  002d7	0f		 DB	 15			; 0000000fH
  002d8	0f		 DB	 15			; 0000000fH
  002d9	0f		 DB	 15			; 0000000fH
  002da	0f		 DB	 15			; 0000000fH
  002db	0f		 DB	 15			; 0000000fH
  002dc	0f		 DB	 15			; 0000000fH
  002dd	0f		 DB	 15			; 0000000fH
  002de	01		 DB	 1
  002df	0f		 DB	 15			; 0000000fH
  002e0	0f		 DB	 15			; 0000000fH
  002e1	0f		 DB	 15			; 0000000fH
  002e2	0f		 DB	 15			; 0000000fH
  002e3	0f		 DB	 15			; 0000000fH
  002e4	0f		 DB	 15			; 0000000fH
  002e5	0f		 DB	 15			; 0000000fH
  002e6	0f		 DB	 15			; 0000000fH
  002e7	0f		 DB	 15			; 0000000fH
  002e8	02		 DB	 2
  002e9	0f		 DB	 15			; 0000000fH
  002ea	0f		 DB	 15			; 0000000fH
  002eb	0f		 DB	 15			; 0000000fH
  002ec	0f		 DB	 15			; 0000000fH
  002ed	0f		 DB	 15			; 0000000fH
  002ee	0f		 DB	 15			; 0000000fH
  002ef	0f		 DB	 15			; 0000000fH
  002f0	0f		 DB	 15			; 0000000fH
  002f1	0f		 DB	 15			; 0000000fH
  002f2	03		 DB	 3
  002f3	0f		 DB	 15			; 0000000fH
  002f4	0f		 DB	 15			; 0000000fH
  002f5	0f		 DB	 15			; 0000000fH
  002f6	0f		 DB	 15			; 0000000fH
  002f7	0f		 DB	 15			; 0000000fH
  002f8	0f		 DB	 15			; 0000000fH
  002f9	0f		 DB	 15			; 0000000fH
  002fa	0f		 DB	 15			; 0000000fH
  002fb	0f		 DB	 15			; 0000000fH
  002fc	04		 DB	 4
  002fd	0f		 DB	 15			; 0000000fH
  002fe	0f		 DB	 15			; 0000000fH
  002ff	0f		 DB	 15			; 0000000fH
  00300	0f		 DB	 15			; 0000000fH
  00301	0f		 DB	 15			; 0000000fH
  00302	0f		 DB	 15			; 0000000fH
  00303	0f		 DB	 15			; 0000000fH
  00304	0f		 DB	 15			; 0000000fH
  00305	0f		 DB	 15			; 0000000fH
  00306	05		 DB	 5
  00307	0f		 DB	 15			; 0000000fH
  00308	0f		 DB	 15			; 0000000fH
  00309	0f		 DB	 15			; 0000000fH
  0030a	0f		 DB	 15			; 0000000fH
  0030b	0f		 DB	 15			; 0000000fH
  0030c	0f		 DB	 15			; 0000000fH
  0030d	0f		 DB	 15			; 0000000fH
  0030e	0f		 DB	 15			; 0000000fH
  0030f	0f		 DB	 15			; 0000000fH
  00310	06		 DB	 6
  00311	0f		 DB	 15			; 0000000fH
  00312	0f		 DB	 15			; 0000000fH
  00313	0f		 DB	 15			; 0000000fH
  00314	0f		 DB	 15			; 0000000fH
  00315	0f		 DB	 15			; 0000000fH
  00316	0f		 DB	 15			; 0000000fH
  00317	0f		 DB	 15			; 0000000fH
  00318	0f		 DB	 15			; 0000000fH
  00319	0f		 DB	 15			; 0000000fH
  0031a	07		 DB	 7
  0031b	0f		 DB	 15			; 0000000fH
  0031c	0f		 DB	 15			; 0000000fH
  0031d	0f		 DB	 15			; 0000000fH
  0031e	0f		 DB	 15			; 0000000fH
  0031f	0f		 DB	 15			; 0000000fH
  00320	0f		 DB	 15			; 0000000fH
  00321	0f		 DB	 15			; 0000000fH
  00322	0f		 DB	 15			; 0000000fH
  00323	0f		 DB	 15			; 0000000fH
  00324	08		 DB	 8
  00325	0f		 DB	 15			; 0000000fH
  00326	0f		 DB	 15			; 0000000fH
  00327	0f		 DB	 15			; 0000000fH
  00328	0f		 DB	 15			; 0000000fH
  00329	0f		 DB	 15			; 0000000fH
  0032a	0f		 DB	 15			; 0000000fH
  0032b	0f		 DB	 15			; 0000000fH
  0032c	0f		 DB	 15			; 0000000fH
  0032d	0f		 DB	 15			; 0000000fH
  0032e	09		 DB	 9
  0032f	0f		 DB	 15			; 0000000fH
  00330	0f		 DB	 15			; 0000000fH
  00331	0f		 DB	 15			; 0000000fH
  00332	0f		 DB	 15			; 0000000fH
  00333	0f		 DB	 15			; 0000000fH
  00334	0f		 DB	 15			; 0000000fH
  00335	0f		 DB	 15			; 0000000fH
  00336	0f		 DB	 15			; 0000000fH
  00337	0f		 DB	 15			; 0000000fH
  00338	0a		 DB	 10			; 0000000aH
  00339	0f		 DB	 15			; 0000000fH
  0033a	0f		 DB	 15			; 0000000fH
  0033b	0f		 DB	 15			; 0000000fH
  0033c	0f		 DB	 15			; 0000000fH
  0033d	0f		 DB	 15			; 0000000fH
  0033e	0f		 DB	 15			; 0000000fH
  0033f	0f		 DB	 15			; 0000000fH
  00340	0f		 DB	 15			; 0000000fH
  00341	0f		 DB	 15			; 0000000fH
  00342	0b		 DB	 11			; 0000000bH
  00343	0f		 DB	 15			; 0000000fH
  00344	0f		 DB	 15			; 0000000fH
  00345	0f		 DB	 15			; 0000000fH
  00346	0f		 DB	 15			; 0000000fH
  00347	0f		 DB	 15			; 0000000fH
  00348	0f		 DB	 15			; 0000000fH
  00349	0f		 DB	 15			; 0000000fH
  0034a	0f		 DB	 15			; 0000000fH
  0034b	0f		 DB	 15			; 0000000fH
  0034c	0c		 DB	 12			; 0000000cH
  0034d	0f		 DB	 15			; 0000000fH
  0034e	0f		 DB	 15			; 0000000fH
  0034f	0f		 DB	 15			; 0000000fH
  00350	0f		 DB	 15			; 0000000fH
  00351	0f		 DB	 15			; 0000000fH
  00352	0f		 DB	 15			; 0000000fH
  00353	0f		 DB	 15			; 0000000fH
  00354	0f		 DB	 15			; 0000000fH
  00355	0f		 DB	 15			; 0000000fH
  00356	0d		 DB	 13			; 0000000dH
  00357	0f		 DB	 15			; 0000000fH
  00358	0f		 DB	 15			; 0000000fH
  00359	0f		 DB	 15			; 0000000fH
  0035a	0f		 DB	 15			; 0000000fH
  0035b	0f		 DB	 15			; 0000000fH
  0035c	0f		 DB	 15			; 0000000fH
  0035d	0f		 DB	 15			; 0000000fH
  0035e	0f		 DB	 15			; 0000000fH
  0035f	0f		 DB	 15			; 0000000fH
  00360	0e		 DB	 14			; 0000000eH
  00361	0f		 DB	 15			; 0000000fH
  00362	0f		 DB	 15			; 0000000fH
  00363	0f		 DB	 15			; 0000000fH
  00364	0f		 DB	 15			; 0000000fH
  00365	0f		 DB	 15			; 0000000fH
  00366	0f		 DB	 15			; 0000000fH
  00367	0f		 DB	 15			; 0000000fH
  00368	0f		 DB	 15			; 0000000fH
  00369	0f		 DB	 15			; 0000000fH
  0036a	0e		 DB	 14			; 0000000eH
  0036b	0f		 DB	 15			; 0000000fH
  0036c	0f		 DB	 15			; 0000000fH
  0036d	0f		 DB	 15			; 0000000fH
  0036e	0f		 DB	 15			; 0000000fH
  0036f	0f		 DB	 15			; 0000000fH
  00370	0f		 DB	 15			; 0000000fH
  00371	0f		 DB	 15			; 0000000fH
  00372	0f		 DB	 15			; 0000000fH
  00373	0f		 DB	 15			; 0000000fH
  00374	0e		 DB	 14			; 0000000eH
  00375	0f 1f 00	 npad	 3
$LN82@Vietnam_Co:
  00378	00 00 00 00	 DD	 $LN34@Vietnam_Co
  0037c	00 00 00 00	 DD	 $LN6@Vietnam_Co
  00380	00 00 00 00	 DD	 $LN7@Vietnam_Co
  00384	00 00 00 00	 DD	 $LN9@Vietnam_Co
  00388	00 00 00 00	 DD	 $LN11@Vietnam_Co
  0038c	00 00 00 00	 DD	 $LN13@Vietnam_Co
  00390	00 00 00 00	 DD	 $LN15@Vietnam_Co
  00394	00 00 00 00	 DD	 $LN17@Vietnam_Co
  00398	00 00 00 00	 DD	 $LN19@Vietnam_Co
  0039c	00 00 00 00	 DD	 $LN21@Vietnam_Co
  003a0	00 00 00 00	 DD	 $LN23@Vietnam_Co
  003a4	00 00 00 00	 DD	 $LN25@Vietnam_Co
  003a8	00 00 00 00	 DD	 $LN27@Vietnam_Co
  003ac	00 00 00 00	 DD	 $LN29@Vietnam_Co
  003b0	00 00 00 00	 DD	 $LN72@Vietnam_Co
  003b4	00 00 00 00	 DD	 $LN2@Vietnam_Co
$LN81@Vietnam_Co:
  003b8	00		 DB	 0
  003b9	0f		 DB	 15			; 0000000fH
  003ba	0f		 DB	 15			; 0000000fH
  003bb	0f		 DB	 15			; 0000000fH
  003bc	0f		 DB	 15			; 0000000fH
  003bd	0f		 DB	 15			; 0000000fH
  003be	0f		 DB	 15			; 0000000fH
  003bf	0f		 DB	 15			; 0000000fH
  003c0	0f		 DB	 15			; 0000000fH
  003c1	0f		 DB	 15			; 0000000fH
  003c2	01		 DB	 1
  003c3	0f		 DB	 15			; 0000000fH
  003c4	0f		 DB	 15			; 0000000fH
  003c5	0f		 DB	 15			; 0000000fH
  003c6	0f		 DB	 15			; 0000000fH
  003c7	0f		 DB	 15			; 0000000fH
  003c8	0f		 DB	 15			; 0000000fH
  003c9	0f		 DB	 15			; 0000000fH
  003ca	0f		 DB	 15			; 0000000fH
  003cb	0f		 DB	 15			; 0000000fH
  003cc	02		 DB	 2
  003cd	0f		 DB	 15			; 0000000fH
  003ce	0f		 DB	 15			; 0000000fH
  003cf	0f		 DB	 15			; 0000000fH
  003d0	0f		 DB	 15			; 0000000fH
  003d1	0f		 DB	 15			; 0000000fH
  003d2	0f		 DB	 15			; 0000000fH
  003d3	0f		 DB	 15			; 0000000fH
  003d4	0f		 DB	 15			; 0000000fH
  003d5	0f		 DB	 15			; 0000000fH
  003d6	03		 DB	 3
  003d7	0f		 DB	 15			; 0000000fH
  003d8	0f		 DB	 15			; 0000000fH
  003d9	0f		 DB	 15			; 0000000fH
  003da	0f		 DB	 15			; 0000000fH
  003db	0f		 DB	 15			; 0000000fH
  003dc	0f		 DB	 15			; 0000000fH
  003dd	0f		 DB	 15			; 0000000fH
  003de	0f		 DB	 15			; 0000000fH
  003df	0f		 DB	 15			; 0000000fH
  003e0	04		 DB	 4
  003e1	0f		 DB	 15			; 0000000fH
  003e2	0f		 DB	 15			; 0000000fH
  003e3	0f		 DB	 15			; 0000000fH
  003e4	0f		 DB	 15			; 0000000fH
  003e5	0f		 DB	 15			; 0000000fH
  003e6	0f		 DB	 15			; 0000000fH
  003e7	0f		 DB	 15			; 0000000fH
  003e8	0f		 DB	 15			; 0000000fH
  003e9	0f		 DB	 15			; 0000000fH
  003ea	05		 DB	 5
  003eb	0f		 DB	 15			; 0000000fH
  003ec	0f		 DB	 15			; 0000000fH
  003ed	0f		 DB	 15			; 0000000fH
  003ee	0f		 DB	 15			; 0000000fH
  003ef	0f		 DB	 15			; 0000000fH
  003f0	0f		 DB	 15			; 0000000fH
  003f1	0f		 DB	 15			; 0000000fH
  003f2	0f		 DB	 15			; 0000000fH
  003f3	0f		 DB	 15			; 0000000fH
  003f4	06		 DB	 6
  003f5	0f		 DB	 15			; 0000000fH
  003f6	0f		 DB	 15			; 0000000fH
  003f7	0f		 DB	 15			; 0000000fH
  003f8	0f		 DB	 15			; 0000000fH
  003f9	0f		 DB	 15			; 0000000fH
  003fa	0f		 DB	 15			; 0000000fH
  003fb	0f		 DB	 15			; 0000000fH
  003fc	0f		 DB	 15			; 0000000fH
  003fd	0f		 DB	 15			; 0000000fH
  003fe	07		 DB	 7
  003ff	0f		 DB	 15			; 0000000fH
  00400	0f		 DB	 15			; 0000000fH
  00401	0f		 DB	 15			; 0000000fH
  00402	0f		 DB	 15			; 0000000fH
  00403	0f		 DB	 15			; 0000000fH
  00404	0f		 DB	 15			; 0000000fH
  00405	0f		 DB	 15			; 0000000fH
  00406	0f		 DB	 15			; 0000000fH
  00407	0f		 DB	 15			; 0000000fH
  00408	08		 DB	 8
  00409	0f		 DB	 15			; 0000000fH
  0040a	0f		 DB	 15			; 0000000fH
  0040b	0f		 DB	 15			; 0000000fH
  0040c	0f		 DB	 15			; 0000000fH
  0040d	0f		 DB	 15			; 0000000fH
  0040e	0f		 DB	 15			; 0000000fH
  0040f	0f		 DB	 15			; 0000000fH
  00410	0f		 DB	 15			; 0000000fH
  00411	0f		 DB	 15			; 0000000fH
  00412	09		 DB	 9
  00413	0f		 DB	 15			; 0000000fH
  00414	0f		 DB	 15			; 0000000fH
  00415	0f		 DB	 15			; 0000000fH
  00416	0f		 DB	 15			; 0000000fH
  00417	0f		 DB	 15			; 0000000fH
  00418	0f		 DB	 15			; 0000000fH
  00419	0f		 DB	 15			; 0000000fH
  0041a	0f		 DB	 15			; 0000000fH
  0041b	0f		 DB	 15			; 0000000fH
  0041c	09		 DB	 9
  0041d	0f		 DB	 15			; 0000000fH
  0041e	0f		 DB	 15			; 0000000fH
  0041f	0f		 DB	 15			; 0000000fH
  00420	0f		 DB	 15			; 0000000fH
  00421	0f		 DB	 15			; 0000000fH
  00422	0f		 DB	 15			; 0000000fH
  00423	0f		 DB	 15			; 0000000fH
  00424	0f		 DB	 15			; 0000000fH
  00425	0f		 DB	 15			; 0000000fH
  00426	0a		 DB	 10			; 0000000aH
  00427	0f		 DB	 15			; 0000000fH
  00428	0f		 DB	 15			; 0000000fH
  00429	0f		 DB	 15			; 0000000fH
  0042a	0f		 DB	 15			; 0000000fH
  0042b	0f		 DB	 15			; 0000000fH
  0042c	0f		 DB	 15			; 0000000fH
  0042d	0f		 DB	 15			; 0000000fH
  0042e	0f		 DB	 15			; 0000000fH
  0042f	0f		 DB	 15			; 0000000fH
  00430	0a		 DB	 10			; 0000000aH
  00431	0f		 DB	 15			; 0000000fH
  00432	0f		 DB	 15			; 0000000fH
  00433	0f		 DB	 15			; 0000000fH
  00434	0f		 DB	 15			; 0000000fH
  00435	0f		 DB	 15			; 0000000fH
  00436	0f		 DB	 15			; 0000000fH
  00437	0f		 DB	 15			; 0000000fH
  00438	0f		 DB	 15			; 0000000fH
  00439	0f		 DB	 15			; 0000000fH
  0043a	0b		 DB	 11			; 0000000bH
  0043b	0f		 DB	 15			; 0000000fH
  0043c	0f		 DB	 15			; 0000000fH
  0043d	0f		 DB	 15			; 0000000fH
  0043e	0f		 DB	 15			; 0000000fH
  0043f	0f		 DB	 15			; 0000000fH
  00440	0f		 DB	 15			; 0000000fH
  00441	0f		 DB	 15			; 0000000fH
  00442	0f		 DB	 15			; 0000000fH
  00443	0f		 DB	 15			; 0000000fH
  00444	0b		 DB	 11			; 0000000bH
  00445	0f		 DB	 15			; 0000000fH
  00446	0f		 DB	 15			; 0000000fH
  00447	0f		 DB	 15			; 0000000fH
  00448	0f		 DB	 15			; 0000000fH
  00449	0f		 DB	 15			; 0000000fH
  0044a	0f		 DB	 15			; 0000000fH
  0044b	0f		 DB	 15			; 0000000fH
  0044c	0f		 DB	 15			; 0000000fH
  0044d	0f		 DB	 15			; 0000000fH
  0044e	0c		 DB	 12			; 0000000cH
  0044f	0f		 DB	 15			; 0000000fH
  00450	0f		 DB	 15			; 0000000fH
  00451	0f		 DB	 15			; 0000000fH
  00452	0f		 DB	 15			; 0000000fH
  00453	0f		 DB	 15			; 0000000fH
  00454	0f		 DB	 15			; 0000000fH
  00455	0f		 DB	 15			; 0000000fH
  00456	0f		 DB	 15			; 0000000fH
  00457	0f		 DB	 15			; 0000000fH
  00458	0c		 DB	 12			; 0000000cH
  00459	0f		 DB	 15			; 0000000fH
  0045a	0f		 DB	 15			; 0000000fH
  0045b	0f		 DB	 15			; 0000000fH
  0045c	0f		 DB	 15			; 0000000fH
  0045d	0f		 DB	 15			; 0000000fH
  0045e	0f		 DB	 15			; 0000000fH
  0045f	0f		 DB	 15			; 0000000fH
  00460	0f		 DB	 15			; 0000000fH
  00461	0f		 DB	 15			; 0000000fH
  00462	0d		 DB	 13			; 0000000dH
  00463	0f		 DB	 15			; 0000000fH
  00464	0f		 DB	 15			; 0000000fH
  00465	0f		 DB	 15			; 0000000fH
  00466	0f		 DB	 15			; 0000000fH
  00467	0f		 DB	 15			; 0000000fH
  00468	0f		 DB	 15			; 0000000fH
  00469	0f		 DB	 15			; 0000000fH
  0046a	0f		 DB	 15			; 0000000fH
  0046b	0f		 DB	 15			; 0000000fH
  0046c	0d		 DB	 13			; 0000000dH
  0046d	0f		 DB	 15			; 0000000fH
  0046e	0f		 DB	 15			; 0000000fH
  0046f	0f		 DB	 15			; 0000000fH
  00470	0f		 DB	 15			; 0000000fH
  00471	0f		 DB	 15			; 0000000fH
  00472	0f		 DB	 15			; 0000000fH
  00473	0f		 DB	 15			; 0000000fH
  00474	0f		 DB	 15			; 0000000fH
  00475	0f		 DB	 15			; 0000000fH
  00476	0e		 DB	 14			; 0000000eH
  00477	0f		 DB	 15			; 0000000fH
  00478	0f		 DB	 15			; 0000000fH
  00479	0f		 DB	 15			; 0000000fH
  0047a	0f		 DB	 15			; 0000000fH
  0047b	0f		 DB	 15			; 0000000fH
  0047c	0f		 DB	 15			; 0000000fH
  0047d	0f		 DB	 15			; 0000000fH
  0047e	0f		 DB	 15			; 0000000fH
  0047f	0f		 DB	 15			; 0000000fH
  00480	0e		 DB	 14			; 0000000eH
?Vietnam_ConvertWeaponVnum@@YAKK@Z ENDP			; Vietnam_ConvertWeaponVnum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z
_TEXT	SEGMENT
__Op$2 = -24						; size = 8
__Insert_after$3 = -20					; size = 4
__Where$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Insert_before$ = 8					; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z PROC ; std::list<CActorInstance::TAttachingEffect,std::allocator<CActorInstance::TAttachingEffect> >::push_back, COMDAT
; _this$ = ecx

; 1251 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1014 :         if (_Mysize == max_size()) {

  00029	81 7e 04 aa aa
	aa 02		 cmp	 DWORD PTR [esi+4], 44739242 ; 02aaaaaaH

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00030	8b 06		 mov	 eax, DWORD PTR [esi]
  00032	89 45 f0	 mov	 DWORD PTR __Where$1$[ebp], eax

; 1014 :         if (_Mysize == max_size()) {

  00035	0f 84 92 00 00
	00		 je	 $LN40@push_back
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0003b	89 75 e8	 mov	 DWORD PTR __Op$2[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003e	6a 60		 push	 96			; 00000060H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00047	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00053	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]

; 1048 :         _Ptr = _Al.allocate(1);

  00056	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1020 :         return _Op._Transfer_before(_Where);

  00058	8b 45 f0	 mov	 eax, DWORD PTR __Where$1$[ebp]
  0005b	89 45 08	 mov	 DWORD PTR __Insert_before$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0005e	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00061	0f 11 47 08	 movups	 XMMWORD PTR [edi+8], xmm0
  00065	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00069	0f 11 47 18	 movups	 XMMWORD PTR [edi+24], xmm0
  0006d	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  00071	0f 11 47 28	 movups	 XMMWORD PTR [edi+40], xmm0
  00075	0f 10 41 30	 movups	 xmm0, XMMWORD PTR [ecx+48]
  00079	0f 11 47 38	 movups	 XMMWORD PTR [edi+56], xmm0
  0007d	0f 10 41 40	 movups	 xmm0, XMMWORD PTR [ecx+64]
  00081	0f 11 47 48	 movups	 XMMWORD PTR [edi+72], xmm0
  00085	f3 0f 7e 41 50	 movq	 xmm0, QWORD PTR [ecx+80]
  0008a	66 0f d6 47 58	 movq	 QWORD PTR [edi+88], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1019 :         ++_Mysize;

  0008f	ff 46 04	 inc	 DWORD PTR [esi+4]

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  00092	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00095	8d 45 08	 lea	 eax, DWORD PTR __Insert_before$[ebp]
  00098	50		 push	 eax
  00099	57		 push	 edi
  0009a	89 75 ec	 mov	 DWORD PTR __Insert_after$3[ebp], esi
  0009d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000a2	8d 45 ec	 lea	 eax, DWORD PTR __Insert_after$3[ebp]
  000a5	50		 push	 eax
  000a6	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  000af	8b 45 f0	 mov	 eax, DWORD PTR __Where$1$[ebp]
  000b2	83 c4 14	 add	 esp, 20			; 00000014H
  000b5	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 606  :         _Insert_after->_Next  = _Result;

  000b8	89 3e		 mov	 DWORD PTR [esi], edi

; 1253 :     }

  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
$LN40@push_back:

; 1015 :             _Xlength_error("list too long");

  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  000d2	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN38@push_back:
  000d7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z$1:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z ENDP ; std::list<CActorInstance::TAttachingEffect,std::allocator<CActorInstance::TAttachingEffect> >::push_back
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ PROC ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@CAXXZ ENDP ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?__ClearAttachingEffect@CActorInstance@@IAEXXZ
_TEXT	SEGMENT
?__ClearAttachingEffect@CActorInstance@@IAEXXZ PROC	; CActorInstance::__ClearAttachingEffect, COMDAT
; _this$ = ecx

; 611  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 87 f8 04 00
	00		 mov	 eax, DWORD PTR [edi+1272]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 612  : 	m_bEffectInitialized = false;

  0000a	c6 87 00 05 00
	00 00		 mov	 BYTE PTR [edi+1280], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00011	8b 30		 mov	 esi, DWORD PTR [eax]
  00013	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 615  : 	for(it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();++it)

  00015	74 23		 je	 SHORT $LN3@ClearAttac
  00017	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@ClearAttac:

; 616  : 	{
; 617  : 		CEffectManager::Instance().DestroyEffectInstance(it->dwEffectIndex);

  00020	ff 76 08	 push	 DWORD PTR [esi+8]
  00023	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00029	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0002e	8b 36		 mov	 esi, DWORD PTR [esi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00030	8b 87 f8 04 00
	00		 mov	 eax, DWORD PTR [edi+1272]

; 199  :         return this->_Ptr == _Right._Ptr;

  00036	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 615  : 	for(it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();++it)

  00038	75 e6		 jne	 SHORT $LL4@ClearAttac
$LN3@ClearAttac:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  0003a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00045	85 c0		 test	 eax, eax
  00047	74 1a		 je	 SHORT $LN46@ClearAttac
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL47@ClearAttac:

; 328  :             _Pnext = _Pnode->_Next;

  00050	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00052	6a 60		 push	 96			; 00000060H
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0005a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005d	8b c6		 mov	 eax, esi
  0005f	85 f6		 test	 esi, esi
  00061	75 ed		 jne	 SHORT $LL47@ClearAttac
$LN46@ClearAttac:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00063	8b 87 f8 04 00
	00		 mov	 eax, DWORD PTR [edi+1272]
  00069	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0006b	8b 87 f8 04 00
	00		 mov	 eax, DWORD PTR [edi+1272]
  00071	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00074	c7 87 fc 04 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+1276], 0
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 620  : }

  00080	c3		 ret	 0
?__ClearAttachingEffect@CActorInstance@@IAEXXZ ENDP	; CActorInstance::__ClearAttachingEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?__IsWeaponTrace@CActorInstance@@IAE_NK@Z
_TEXT	SEGMENT
_weaponType$ = 8					; size = 4
?__IsWeaponTrace@CActorInstance@@IAE_NK@Z PROC		; CActorInstance::__IsWeaponTrace, COMDAT
; _this$ = ecx

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  : 	switch(weaponType)

  00003	8b 45 08	 mov	 eax, DWORD PTR _weaponType$[ebp]
  00006	83 f8 02	 cmp	 eax, 2
  00009	74 10		 je	 SHORT $LN4@IsWeaponTr
  0000b	83 f8 03	 cmp	 eax, 3
  0000e	76 05		 jbe	 SHORT $LN5@IsWeaponTr
  00010	83 f8 05	 cmp	 eax, 5
  00013	76 06		 jbe	 SHORT $LN4@IsWeaponTr
$LN5@IsWeaponTr:

; 141  : 	default:
; 142  : 		return true;

  00015	b0 01		 mov	 al, 1

; 143  : 
; 144  : 	}
; 145  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
$LN4@IsWeaponTr:

; 136  : 	{
; 137  : 	case CItemData::WEAPON_BELL:
; 138  : 	case CItemData::WEAPON_FAN:
; 139  : 	case CItemData::WEAPON_BOW:
; 140  : 		return false;

  0001b	32 c0		 xor	 al, al

; 143  : 
; 144  : 	}
; 145  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?__IsWeaponTrace@CActorInstance@@IAE_NK@Z ENDP		; CActorInstance::__IsWeaponTrace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?__IsRightHandWeapon@CActorInstance@@IAE_NK@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?__IsRightHandWeapon@CActorInstance@@IAE_NK@Z PROC	; CActorInstance::__IsRightHandWeapon, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 121  : 	if (CItemData::WEAPON_DAGGER == type || (CItemData::WEAPON_FAN == type && __IsMountingHorse()))

  00003	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	74 0a		 je	 SHORT $LN4@IsRightHan
  0000b	83 f8 05	 cmp	 eax, 5
  0000e	75 0b		 jne	 SHORT $LN2@IsRightHan
  00010	e8 00 00 00 00	 call	 ?__IsMountingHorse@CActorInstance@@IAE_NXZ ; CActorInstance::__IsMountingHorse
$LN4@IsRightHan:

; 122  : 		return true;

  00015	b0 01		 mov	 al, 1

; 125  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 126  : 	else if (CItemData::WEAPON_CLAW == type)
; 127  : 		return true;
; 128  : #endif
; 129  : 	else
; 130  : 		return true;
; 131  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
$LN2@IsRightHan:

; 123  : 	else if (CItemData::WEAPON_BOW == type)

  0001b	83 f8 02	 cmp	 eax, 2
  0001e	75 f5		 jne	 SHORT $LN4@IsRightHan

; 124  : 		return false;

  00020	32 c0		 xor	 al, al

; 125  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 126  : 	else if (CItemData::WEAPON_CLAW == type)
; 127  : 		return true;
; 128  : #endif
; 129  : 	else
; 130  : 		return true;
; 131  : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?__IsRightHandWeapon@CActorInstance@@IAE_NK@Z ENDP	; CActorInstance::__IsRightHandWeapon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?__IsLeftHandWeapon@CActorInstance@@IAE_NK@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?__IsLeftHandWeapon@CActorInstance@@IAE_NK@Z PROC	; CActorInstance::__IsLeftHandWeapon, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 107  : 	if (CItemData::WEAPON_DAGGER == type || (CItemData::WEAPON_FAN == type && __IsMountingHorse()))

  00003	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	74 0e		 je	 SHORT $LN4@IsLeftHand
  0000b	83 f8 05	 cmp	 eax, 5
  0000e	75 0f		 jne	 SHORT $LN2@IsLeftHand
  00010	e8 00 00 00 00	 call	 ?__IsMountingHorse@CActorInstance@@IAE_NXZ ; CActorInstance::__IsMountingHorse
  00015	84 c0		 test	 al, al
  00017	74 10		 je	 SHORT $LN7@IsLeftHand
$LN4@IsLeftHand:

; 108  : 		return true;

  00019	b0 01		 mov	 al, 1

; 117  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN2@IsLeftHand:

; 109  : 	else if (CItemData::WEAPON_BOW == type)

  0001f	83 f8 02	 cmp	 eax, 2
  00022	74 f5		 je	 SHORT $LN4@IsLeftHand

; 110  : 		return true;
; 111  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 112  : 	else if (CItemData::WEAPON_CLAW == type)

  00024	83 f8 08	 cmp	 eax, 8
  00027	74 f0		 je	 SHORT $LN4@IsLeftHand
$LN7@IsLeftHand:

; 113  : 		return true;
; 114  : #endif
; 115  : 	else
; 116  : 		return false;

  00029	32 c0		 xor	 al, al

; 117  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?__IsLeftHandWeapon@CActorInstance@@IAE_NK@Z ENDP	; CActorInstance::__IsLeftHandWeapon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?HideAllAttachingEffect@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
?HideAllAttachingEffect@CActorInstance@@QAEXXZ PROC	; CActorInstance::HideAllAttachingEffect, COMDAT
; _this$ = ecx

; 601  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 87 f8 04 00
	00		 mov	 eax, DWORD PTR [edi+1272]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 603  : 	for(it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();++it)

  0000e	74 23		 je	 SHORT $LN3@HideAllAtt
$LL4@HideAllAtt:

; 604  : 	{
; 605  : 		CEffectManager::Instance().SelectEffectInstance(it->dwEffectIndex);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00019	e8 00 00 00 00	 call	 ?SelectEffectInstance@CEffectManager@@QAEHK@Z ; CEffectManager::SelectEffectInstance

; 606  : 		CEffectManager::Instance().HideEffect();

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00024	e8 00 00 00 00	 call	 ?HideEffect@CEffectManager@@QAEXXZ ; CEffectManager::HideEffect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00029	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0002b	3b b7 f8 04 00
	00		 cmp	 esi, DWORD PTR [edi+1272]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 603  : 	for(it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();++it)

  00031	75 dd		 jne	 SHORT $LL4@HideAllAtt
$LN3@HideAllAtt:
  00033	5f		 pop	 edi

; 607  : 	}
; 608  : }

  00034	5e		 pop	 esi
  00035	c3		 ret	 0
?HideAllAttachingEffect@CActorInstance@@QAEXXZ ENDP	; CActorInstance::HideAllAttachingEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?ShowAllAttachingEffect@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
?ShowAllAttachingEffect@CActorInstance@@QAEXXZ PROC	; CActorInstance::ShowAllAttachingEffect, COMDAT
; _this$ = ecx

; 591  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 87 f8 04 00
	00		 mov	 eax, DWORD PTR [edi+1272]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 593  : 	for(it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();++it)

  0000e	74 23		 je	 SHORT $LN3@ShowAllAtt
$LL4@ShowAllAtt:

; 594  : 	{
; 595  : 		CEffectManager::Instance().SelectEffectInstance(it->dwEffectIndex);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00019	e8 00 00 00 00	 call	 ?SelectEffectInstance@CEffectManager@@QAEHK@Z ; CEffectManager::SelectEffectInstance

; 596  : 		CEffectManager::Instance().ShowEffect();

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00024	e8 00 00 00 00	 call	 ?ShowEffect@CEffectManager@@QAEXXZ ; CEffectManager::ShowEffect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00029	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0002b	3b b7 f8 04 00
	00		 cmp	 esi, DWORD PTR [edi+1272]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 593  : 	for(it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();++it)

  00031	75 dd		 jne	 SHORT $LL4@ShowAllAtt
$LN3@ShowAllAtt:
  00033	5f		 pop	 edi

; 597  : 	}
; 598  : }

  00034	5e		 pop	 esi
  00035	c3		 ret	 0
?ShowAllAttachingEffect@CActorInstance@@QAEXXZ ENDP	; CActorInstance::ShowAllAttachingEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?UseAlphaWeaponTrace@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
?UseAlphaWeaponTrace@CActorInstance@@QAEXXZ PROC	; CActorInstance::UseAlphaWeaponTrace, COMDAT
; _this$ = ecx

; 525  : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b b1 74 03 00
	00		 mov	 esi, DWORD PTR [ecx+884]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 525  : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b b9 78 03 00
	00		 mov	 edi, DWORD PTR [ecx+888]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 0e		 je	 SHORT $LN21@UseAlphaWe
$LL22@UseAlphaWe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	e8 00 00 00 00	 call	 ?UseAlpha@CWeaponTrace@@QAEXXZ ; CWeaponTrace::UseAlpha
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00019	83 c6 04	 add	 esi, 4
  0001c	3b f7		 cmp	 esi, edi
  0001e	75 f2		 jne	 SHORT $LL22@UseAlphaWe
$LN21@UseAlphaWe:
  00020	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 531  : }

  00021	5e		 pop	 esi
  00022	c3		 ret	 0
?UseAlphaWeaponTrace@CActorInstance@@QAEXXZ ENDP	; CActorInstance::UseAlphaWeaponTrace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?UseTextureWeaponTrace@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
?UseTextureWeaponTrace@CActorInstance@@QAEXXZ PROC	; CActorInstance::UseTextureWeaponTrace, COMDAT
; _this$ = ecx

; 516  : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b b1 74 03 00
	00		 mov	 esi, DWORD PTR [ecx+884]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 516  : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b b9 78 03 00
	00		 mov	 edi, DWORD PTR [ecx+888]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 0e		 je	 SHORT $LN21@UseTexture
$LL22@UseTexture:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 41   : 		{((_P->*_Ptr)()); }

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	e8 00 00 00 00	 call	 ?UseTexture@CWeaponTrace@@QAEXXZ ; CWeaponTrace::UseTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00019	83 c6 04	 add	 esi, 4
  0001c	3b f7		 cmp	 esi, edi
  0001e	75 f2		 jne	 SHORT $LL22@UseTexture
$LN21@UseTexture:
  00020	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 522  : }

  00021	5e		 pop	 esi
  00022	c3		 ret	 0
?UseTextureWeaponTrace@CActorInstance@@QAEXXZ ENDP	; CActorInstance::UseTextureWeaponTrace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?SetWeaponTraceTexture@CActorInstance@@QAEXPBD@Z
_TEXT	SEGMENT
_szTextureName$ = 8					; size = 4
?SetWeaponTraceTexture@CActorInstance@@QAEXPBD@Z PROC	; CActorInstance::SetWeaponTraceTexture, COMDAT
; _this$ = ecx

; 507  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00007	8b b7 74 03 00
	00		 mov	 esi, DWORD PTR [edi+884]
  0000d	3b b7 78 03 00
	00		 cmp	 esi, DWORD PTR [edi+888]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 509  : 	for (it = m_WeaponTraceVector.begin(); it != m_WeaponTraceVector.end(); ++it)

  00013	74 1f		 je	 SHORT $LN3@SetWeaponT
  00015	53		 push	 ebx
  00016	8b 5d 08	 mov	 ebx, DWORD PTR _szTextureName$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SetWeaponT:

; 510  : 	{
; 511  : 		(*it)->SetTexture(szTextureName);

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	53		 push	 ebx
  00023	e8 00 00 00 00	 call	 ?SetTexture@CWeaponTrace@@QAEXPBD@Z ; CWeaponTrace::SetTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00028	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  0002b	3b b7 78 03 00
	00		 cmp	 esi, DWORD PTR [edi+888]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 509  : 	for (it = m_WeaponTraceVector.begin(); it != m_WeaponTraceVector.end(); ++it)

  00031	75 ed		 jne	 SHORT $LL4@SetWeaponT
  00033	5b		 pop	 ebx
$LN3@SetWeaponT:
  00034	5f		 pop	 edi

; 512  : 	}
; 513  : }

  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?SetWeaponTraceTexture@CActorInstance@@QAEXPBD@Z ENDP	; CActorInstance::SetWeaponTraceTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?AttachSmokeEffect@CActorInstance@@QAEKK@Z
_TEXT	SEGMENT
_eSmoke$ = 8						; size = 4
?AttachSmokeEffect@CActorInstance@@QAEKK@Z PROC		; CActorInstance::AttachSmokeEffect, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 97   : 	if (!m_pkCurRaceData)

  00006	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  0000c	85 c9		 test	 ecx, ecx
  0000e	75 07		 jne	 SHORT $LN2@AttachSmok

; 98   : 		return 0;

  00010	33 c0		 xor	 eax, eax
  00012	5e		 pop	 esi

; 103  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
$LN2@AttachSmok:
  00017	57		 push	 edi

; 99   : 
; 100  : 	DWORD dwSmokeEffectID=m_pkCurRaceData->GetSmokeEffectID(eSmoke);

  00018	ff 75 08	 push	 DWORD PTR _eSmoke$[ebp]
  0001b	e8 00 00 00 00	 call	 ?GetSmokeEffectID@CRaceData@@QAEKI@Z ; CRaceData::GetSmokeEffectID

; 102  : 	return AttachEffectByID(0, m_pkCurRaceData->GetSmokeBone().c_str(), dwSmokeEffectID);

  00020	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  00026	8b f8		 mov	 edi, eax
  00028	e8 00 00 00 00	 call	 ?GetSmokeBone@CRaceData@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CRaceData::GetSmokeBone
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0002d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00031	72 02		 jb	 SHORT $LN7@AttachSmok

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00033	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@AttachSmok:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 102  : 	return AttachEffectByID(0, m_pkCurRaceData->GetSmokeBone().c_str(), dwSmokeEffectID);

  00035	6a 00		 push	 0
  00037	57		 push	 edi
  00038	50		 push	 eax
  00039	6a 00		 push	 0
  0003b	8b ce		 mov	 ecx, esi
  0003d	e8 00 00 00 00	 call	 ?AttachEffectByID@CActorInstance@@QAEKKPBDKPBUD3DXVECTOR3@@@Z ; CActorInstance::AttachEffectByID
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi

; 103  : }

  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?AttachSmokeEffect@CActorInstance@@QAEKK@Z ENDP		; CActorInstance::AttachSmokeEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?AttachEffectByID@CActorInstance@@QAEKKPBDKPBUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_iBoneIndex$1 = -96					; size = 4
_ae$ = -92						; size = 88
__$ArrayPad$ = -4					; size = 4
_dwParentPartIndex$ = 8					; size = 4
_c_pszBoneName$ = 12					; size = 4
_dwEffectID$ = 16					; size = 4
_c_pv3Position$ = 20					; size = 4
?AttachEffectByID@CActorInstance@@QAEKKPBDKPBUD3DXVECTOR3@@@Z PROC ; CActorInstance::AttachEffectByID, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 276  : 	TAttachingEffect ae;
; 277  : 	ae.iLifeType = EFFECT_LIFE_INFINITE;
; 278  : 	ae.dwEndTime = 0;
; 279  : 	ae.dwModelIndex = dwParentPartIndex;

  00010	8b 45 08	 mov	 eax, DWORD PTR _dwParentPartIndex$[ebp]
  00013	53		 push	 ebx
  00014	8b 5d 0c	 mov	 ebx, DWORD PTR _c_pszBoneName$[ebp]
  00017	56		 push	 esi
  00018	8b 75 14	 mov	 esi, DWORD PTR _c_pv3Position$[ebp]
  0001b	57		 push	 edi
  0001c	8b f9		 mov	 edi, ecx
  0001e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _ae$[ebp+80], 1

; 280  : 	ae.dwEffectIndex = CEffectManager::Instance().GetEmptyIndex();

  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+84], 0
  00032	89 45 ac	 mov	 DWORD PTR _ae$[ebp+8], eax
  00035	e8 00 00 00 00	 call	 ?GetEmptyIndex@CEffectManager@@QAEHXZ ; CEffectManager::GetEmptyIndex
  0003a	89 45 a4	 mov	 DWORD PTR _ae$[ebp], eax

; 281  : 	ae.isAttaching = TRUE;

  0003d	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _ae$[ebp+76], 1

; 282  : 	if (c_pv3Position)

  00044	85 f6		 test	 esi, esi
  00046	74 30		 je	 SHORT $LN2@AttachEffe

; 283  : 	{
; 284  : 		D3DXMatrixTranslation(&ae.matTranslation, c_pv3Position->x, c_pv3Position->y, c_pv3Position->z);

  00048	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  0004d	8d 45 b0	 lea	 eax, DWORD PTR _ae$[ebp+12]
  00050	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00053	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00059	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  0005e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00064	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 _D3DXMatrixTranslation@16

; 285  : 	}

  00073	8b 45 a4	 mov	 eax, DWORD PTR _ae$[ebp]
  00076	eb 70		 jmp	 SHORT $LN3@AttachEffe
$LN2@AttachEffe:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00078	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+68], 0
  0007f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+64], 0
  00086	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+60], 0
  0008d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+56], 0
  00094	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+48], 0
  0009b	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+44], 0
  000a2	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+40], 0
  000a9	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+36], 0
  000b0	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+28], 0
  000b7	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+24], 0
  000be	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+20], 0
  000c5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _ae$[ebp+16], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  000cc	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR _ae$[ebp+72], 1065353216 ; 3f800000H
  000d3	c7 45 d8 00 00
	80 3f		 mov	 DWORD PTR _ae$[ebp+52], 1065353216 ; 3f800000H
  000da	c7 45 c4 00 00
	80 3f		 mov	 DWORD PTR _ae$[ebp+32], 1065353216 ; 3f800000H
  000e1	c7 45 b0 00 00
	80 3f		 mov	 DWORD PTR _ae$[ebp+12], 1065353216 ; 3f800000H
$LN3@AttachEffe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 291  : 	rkEftMgr.CreateEffectInstance(ae.dwEffectIndex, dwEffectID);

  000e8	ff 75 10	 push	 DWORD PTR _dwEffectID$[ebp]
  000eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?CreateEffectInstance@CEffectManager@@QAEXKK@Z ; CEffectManager::CreateEffectInstance

; 292  : 
; 293  : 	if (c_pszBoneName)

  000f7	85 db		 test	 ebx, ebx
  000f9	74 1f		 je	 SHORT $LN4@AttachEffe

; 294  : 	{
; 295  : 		int iBoneIndex;
; 296  : 
; 297  : 		if (!FindBoneIndex(dwParentPartIndex,c_pszBoneName, &iBoneIndex))

  000fb	8d 45 a0	 lea	 eax, DWORD PTR _iBoneIndex$1[ebp]
  000fe	8b cf		 mov	 ecx, edi
  00100	50		 push	 eax
  00101	53		 push	 ebx
  00102	ff 75 08	 push	 DWORD PTR _dwParentPartIndex$[ebp]
  00105	e8 00 00 00 00	 call	 ?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z ; CGraphicThingInstance::FindBoneIndex
  0010a	8b 4d a0	 mov	 ecx, DWORD PTR _iBoneIndex$1[ebp]
  0010d	83 ca ff	 or	 edx, -1
  00110	84 c0		 test	 al, al
  00112	0f 44 ca	 cmove	 ecx, edx
  00115	89 4d a8	 mov	 DWORD PTR _ae$[ebp+4], ecx

; 298  : 		{
; 299  : 			ae.iBoneIndex = -1;
; 300  : 			//Tracef("Cannot get Bone Index\n");
; 301  : 			//assert(false && "Cannot get Bone Index");
; 302  : 		}
; 303  : 		else
; 304  : 		{
; 305  : 			ae.iBoneIndex = iBoneIndex;
; 306  : 		}
; 307  : 	}

  00118	eb 07		 jmp	 SHORT $LN5@AttachEffe
$LN4@AttachEffe:

; 308  : 	else
; 309  : 	{
; 310  : 		ae.iBoneIndex = -1;

  0011a	c7 45 a8 ff ff
	ff ff		 mov	 DWORD PTR _ae$[ebp+4], -1
$LN5@AttachEffe:

; 311  : 	}
; 312  : 
; 313  : 	m_AttachingEffectList.push_back(ae);

  00121	8d 45 a4	 lea	 eax, DWORD PTR _ae$[ebp]
  00124	50		 push	 eax
  00125	8d 8f f8 04 00
	00		 lea	 ecx, DWORD PTR [edi+1272]
  0012b	e8 00 00 00 00	 call	 ?push_back@?$list@UTAttachingEffect@CActorInstance@@V?$allocator@UTAttachingEffect@CActorInstance@@@std@@@std@@QAEXABUTAttachingEffect@CActorInstance@@@Z ; std::list<CActorInstance::TAttachingEffect,std::allocator<CActorInstance::TAttachingEffect> >::push_back

; 314  : 
; 315  : 	return ae.dwEffectIndex;
; 316  : }

  00130	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00133	8b 45 a4	 mov	 eax, DWORD PTR _ae$[ebp]
  00136	33 cd		 xor	 ecx, ebp
  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx
  0013b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 10 00	 ret	 16			; 00000010H
?AttachEffectByID@CActorInstance@@QAEKKPBDKPBUD3DXVECTOR3@@@Z ENDP ; CActorInstance::AttachEffectByID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z
_TEXT	SEGMENT
_str$ = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwParentPartIndex$ = 8					; size = 4
_c_pszBoneName$ = 12					; size = 4
_c_pszEffectName$ = 16					; size = 4
?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z PROC	; CActorInstance::AttachEffectByName, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	8b 75 0c	 mov	 esi, DWORD PTR _c_pszBoneName$[ebp]
  0002f	8b 45 10	 mov	 eax, DWORD PTR _c_pszEffectName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00032	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _str$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _str$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 45 d8 00	 mov	 BYTE PTR _str$[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 268  : 	StringPath(c_pszEffectName, str);

  00044	8d 4d d8	 lea	 ecx, DWORD PTR _str$[ebp]
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004e	51		 push	 ecx
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?StringPath@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; StringPath
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00055	83 7d ec 10	 cmp	 DWORD PTR _str$[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00059	8d 45 d8	 lea	 eax, DWORD PTR _str$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 269  : 	dwCRC = GetCaseCRC32(str.c_str(), str.length());

  0005c	ff 75 e8	 push	 DWORD PTR _str$[ebp+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0005f	0f 43 45 d8	 cmovae	 eax, DWORD PTR _str$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 269  : 	dwCRC = GetCaseCRC32(str.c_str(), str.length());

  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  00069	83 c4 10	 add	 esp, 16			; 00000010H

; 271  : 	return AttachEffectByID(dwParentPartIndex, c_pszBoneName, dwCRC);

  0006c	8b cf		 mov	 ecx, edi
  0006e	6a 00		 push	 0
  00070	50		 push	 eax
  00071	56		 push	 esi
  00072	ff 75 08	 push	 DWORD PTR _dwParentPartIndex$[ebp]
  00075	e8 00 00 00 00	 call	 ?AttachEffectByID@CActorInstance@@QAEKKPBDKPBUD3DXVECTOR3@@@Z ; CActorInstance::AttachEffectByID
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007a	8b 4d ec	 mov	 ecx, DWORD PTR _str$[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 271  : 	return AttachEffectByID(dwParentPartIndex, c_pszBoneName, dwCRC);

  0007d	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00082	72 0f		 jb	 SHORT $LN24@AttachEffe

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00084	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00085	51		 push	 ecx
  00086	ff 75 d8	 push	 DWORD PTR _str$[ebp]
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 271  : 	return AttachEffectByID(dwParentPartIndex, c_pszBoneName, dwCRC);

  00091	8b c6		 mov	 eax, esi
$LN24@AttachEffe:

; 272  : }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	33 cd		 xor	 ecx, ebp
  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _str$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z ENDP	; CActorInstance::AttachEffectByName
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?DettachEffect@CActorInstance@@QAEXK@Z
_TEXT	SEGMENT
_dwEID$ = 8						; size = 4
?DettachEffect@CActorInstance@@QAEXK@Z PROC		; CActorInstance::DettachEffect, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00006	8b 97 f8 04 00
	00		 mov	 edx, DWORD PTR [edi+1272]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000c	8b 02		 mov	 eax, DWORD PTR [edx]
  0000e	3b c2		 cmp	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 248  : 	while (i != m_AttachingEffectList.end())

  00010	74 42		 je	 SHORT $LN3@DettachEff
  00012	53		 push	 ebx
  00013	8b 5d 08	 mov	 ebx, DWORD PTR _dwEID$[ebp]
  00016	56		 push	 esi
$LL2@DettachEff:

; 249  : 	{
; 250  : 		TAttachingEffect & rkAttEft = (*i);
; 251  : 
; 252  : 		if (rkAttEft.dwEffectIndex == dwEID)

  00017	8b 30		 mov	 esi, DWORD PTR [eax]
  00019	39 58 08	 cmp	 DWORD PTR [eax+8], ebx
  0001c	75 2a		 jne	 SHORT $LN4@DettachEff
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00021	6a 60		 push	 96			; 00000060H
  00023	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00024	89 31		 mov	 DWORD PTR [ecx], esi

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 398  :         --_Mysize;

  0002e	ff 8f fc 04 00
	00		 dec	 DWORD PTR [edi+1276]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 255  : 			CEffectManager::Instance().DestroyEffectInstance(dwEID);

  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003f	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 255  : 			CEffectManager::Instance().DestroyEffectInstance(dwEID);

  00042	53		 push	 ebx
  00043	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance
$LN4@DettachEff:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00048	8b c6		 mov	 eax, esi

; 199  :         return this->_Ptr == _Right._Ptr;

  0004a	3b b7 f8 04 00
	00		 cmp	 esi, DWORD PTR [edi+1272]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 248  : 	while (i != m_AttachingEffectList.end())

  00050	75 c5		 jne	 SHORT $LL2@DettachEff
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
$LN3@DettachEff:
  00054	5f		 pop	 edi

; 256  : 		}
; 257  : 		else
; 258  : 		{
; 259  : 			++i;
; 260  : 		}
; 261  : 	}
; 262  : }

  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?DettachEffect@CActorInstance@@QAEXK@Z ENDP		; CActorInstance::DettachEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?UpdateAttachingInstances@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_pBoneMat$1 = -144					; size = 4
_rkEftMgr$1$ = -140					; size = 4
_dwCurrentTime$1$ = -136				; size = 4
_matTransform$2 = -132					; size = 64
_matTransform$3 = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?UpdateAttachingInstances@CActorInstance@@QAEXXZ PROC	; CActorInstance::UpdateAttachingInstances, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 535  : 	CEffectManager& rkEftMgr=CEffectManager::Instance();

  00016	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0001c	8b d9		 mov	 ebx, ecx

; 538  : 	DWORD dwCurrentTime = CTimer::Instance().GetCurrentMillisecond();

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00024	89 bd 74 ff ff
	ff		 mov	 DWORD PTR _rkEftMgr$1$[ebp], edi
  0002a	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002f	8b 8b f8 04 00
	00		 mov	 ecx, DWORD PTR [ebx+1272]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 538  : 	DWORD dwCurrentTime = CTimer::Instance().GetCurrentMillisecond();

  00035	8b d0		 mov	 edx, eax
  00037	89 95 78 ff ff
	ff		 mov	 DWORD PTR _dwCurrentTime$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003d	8b 31		 mov	 esi, DWORD PTR [ecx]
  0003f	3b f1		 cmp	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 539  : 	for (it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();)

  00041	0f 84 37 01 00
	00		 je	 $LN3@UpdateAtta
  00047	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL2@UpdateAtta:

; 540  : 	{
; 541  : 		if (EFFECT_LIFE_WITH_MOTION == it->iLifeType)

  00050	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00053	83 f8 02	 cmp	 eax, 2
  00056	0f 84 14 01 00
	00		 je	 $LN149@UpdateAtta

; 542  : 		{
; 543  : 			++it;
; 544  : 			continue;
; 545  : 		}
; 546  : 
; 547  : 		if ((EFFECT_LIFE_NORMAL == it->iLifeType && it->dwEndTime < dwCurrentTime) ||

  0005c	85 c0		 test	 eax, eax
  0005e	75 05		 jne	 SHORT $LN9@UpdateAtta
  00060	39 56 5c	 cmp	 DWORD PTR [esi+92], edx
  00063	72 0e		 jb	 SHORT $LN8@UpdateAtta
$LN9@UpdateAtta:
  00065	ff 76 08	 push	 DWORD PTR [esi+8]
  00068	8b cf		 mov	 ecx, edi
  0006a	e8 00 00 00 00	 call	 ?IsAliveEffect@CEffectManager@@QAE_NK@Z ; CEffectManager::IsAliveEffect
  0006f	84 c0		 test	 al, al
  00071	75 3d		 jne	 SHORT $LN6@UpdateAtta
$LN8@UpdateAtta:

; 548  : 			!rkEftMgr.IsAliveEffect(it->dwEffectIndex))
; 549  : 		{
; 550  : 			rkEftMgr.DestroyEffectInstance(it->dwEffectIndex);

  00073	ff 76 08	 push	 DWORD PTR [esi+8]
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 1353 :         const auto _Result = _Where._Ptr->_Next;

  00080	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00082	6a 60		 push	 96			; 00000060H
  00084	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00085	89 38		 mov	 DWORD PTR [eax], edi

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00087	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00089	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0008c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 398  :         --_Mysize;

  0008f	ff 8b fc 04 00
	00		 dec	 DWORD PTR [ebx+1276]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00095	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 552  : 		}

  0009a	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _dwCurrentTime$1$[ebp]
  000a0	8b f7		 mov	 esi, edi
  000a2	8b bd 74 ff ff
	ff		 mov	 edi, DWORD PTR _rkEftMgr$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  000a8	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 552  : 		}

  000ab	e9 c2 00 00 00	 jmp	 $LN7@UpdateAtta
$LN6@UpdateAtta:

; 553  : 		else
; 554  : 		{
; 555  : 			if (it->isAttaching)

  000b0	83 7e 54 00	 cmp	 DWORD PTR [esi+84], 0
  000b4	0f 84 b0 00 00
	00		 je	 $LN13@UpdateAtta

; 556  : 			{
; 557  : 				rkEftMgr.SelectEffectInstance(it->dwEffectIndex);

  000ba	ff 76 08	 push	 DWORD PTR [esi+8]
  000bd	8b cf		 mov	 ecx, edi
  000bf	e8 00 00 00 00	 call	 ?SelectEffectInstance@CEffectManager@@QAEHK@Z ; CEffectManager::SelectEffectInstance

; 558  : 
; 559  : 				if (it->iBoneIndex == -1)

  000c4	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000c7	83 f8 ff	 cmp	 eax, -1
  000ca	75 3c		 jne	 SHORT $LN11@UpdateAtta

; 562  : 					matTransform = it->matTranslation;

  000cc	0f 10 46 14	 movups	 xmm0, XMMWORD PTR [esi+20]

; 563  : 					matTransform *= m_worldMatrix;

  000d0	8d 43 6c	 lea	 eax, DWORD PTR [ebx+108]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  000d3	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 562  : 					matTransform = it->matTranslation;

  000d4	0f 11 85 7c ff
	ff ff		 movups	 XMMWORD PTR _matTransform$2[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  000db	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _matTransform$2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 562  : 					matTransform = it->matTranslation;

  000e1	0f 10 46 24	 movups	 xmm0, XMMWORD PTR [esi+36]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  000e5	50		 push	 eax
  000e6	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 562  : 					matTransform = it->matTranslation;

  000e7	0f 11 45 8c	 movups	 XMMWORD PTR _matTransform$2[ebp+16], xmm0
  000eb	0f 10 46 34	 movups	 xmm0, XMMWORD PTR [esi+52]
  000ef	0f 11 45 9c	 movups	 XMMWORD PTR _matTransform$2[ebp+32], xmm0
  000f3	0f 10 46 44	 movups	 xmm0, XMMWORD PTR [esi+68]
  000f7	0f 11 45 ac	 movups	 XMMWORD PTR _matTransform$2[ebp+48], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  000fb	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 564  : 					rkEftMgr.SetEffectInstanceGlobalMatrix(matTransform);

  00100	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _matTransform$2[ebp]

; 565  : 				}

  00106	eb 5a		 jmp	 SHORT $LN150@UpdateAtta
$LN11@UpdateAtta:

; 566  : 				else
; 567  : 				{
; 568  : 					D3DXMATRIX * pBoneMat;
; 569  : 					if (GetBoneMatrix(it->dwModelIndex, it->iBoneIndex, &pBoneMat))

  00108	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _pBoneMat$1[ebp]
  0010e	51		 push	 ecx
  0010f	50		 push	 eax
  00110	ff 76 10	 push	 DWORD PTR [esi+16]
  00113	8b cb		 mov	 ecx, ebx
  00115	e8 00 00 00 00	 call	 ?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ; CGraphicThingInstance::GetBoneMatrix
  0011a	85 c0		 test	 eax, eax
  0011c	74 4c		 je	 SHORT $LN13@UpdateAtta

; 572  : 						matTransform = *pBoneMat;

  0011e	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _pBoneMat$1[ebp]
  00124	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00127	0f 11 45 bc	 movups	 XMMWORD PTR _matTransform$3[ebp], xmm0
  0012b	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  0012f	0f 11 45 cc	 movups	 XMMWORD PTR _matTransform$3[ebp+16], xmm0
  00133	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
  00137	0f 11 45 dc	 movups	 XMMWORD PTR _matTransform$3[ebp+32], xmm0
  0013b	0f 10 40 30	 movups	 xmm0, XMMWORD PTR [eax+48]

; 573  : 						matTransform *= it->matTranslation;

  0013f	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  00142	50		 push	 eax
  00143	8d 45 bc	 lea	 eax, DWORD PTR _matTransform$3[ebp]
  00146	50		 push	 eax
  00147	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 572  : 						matTransform = *pBoneMat;

  00148	0f 11 45 ec	 movups	 XMMWORD PTR _matTransform$3[ebp+48], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  0014c	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 574  : 						matTransform *= m_worldMatrix;

  00151	8d 43 6c	 lea	 eax, DWORD PTR [ebx+108]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 512  :     D3DXMatrixMultiply(this, this, &mat);

  00154	50		 push	 eax
  00155	8d 45 bc	 lea	 eax, DWORD PTR _matTransform$3[ebp]
  00158	50		 push	 eax
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 575  : 						rkEftMgr.SetEffectInstanceGlobalMatrix(matTransform);

  0015f	8d 45 bc	 lea	 eax, DWORD PTR _matTransform$3[ebp]
$LN150@UpdateAtta:
  00162	50		 push	 eax
  00163	8b cf		 mov	 ecx, edi
  00165	e8 00 00 00 00	 call	 ?SetEffectInstanceGlobalMatrix@CEffectManager@@QAEXABUD3DXMATRIX@@@Z ; CEffectManager::SetEffectInstanceGlobalMatrix
$LN13@UpdateAtta:
  0016a	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _dwCurrentTime$1$[ebp]
$LN149@UpdateAtta:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 199  :         return this->_Ptr == _Right._Ptr;

  00170	8b 36		 mov	 esi, DWORD PTR [esi]
$LN7@UpdateAtta:
  00172	3b b3 f8 04 00
	00		 cmp	 esi, DWORD PTR [ebx+1272]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 539  : 	for (it = m_AttachingEffectList.begin(); it!= m_AttachingEffectList.end();)

  00178	0f 85 d2 fe ff
	ff		 jne	 $LL2@UpdateAtta
$LN3@UpdateAtta:

; 576  : 					}
; 577  : 					else
; 578  : 					{
; 579  : 						//TraceError("GetBoneMatrix(modelIndex(%d), boneIndex(%d)).NOT_FOUND_BONE",
; 580  : 						//	it->dwModelIndex, it->iBoneIndex);
; 581  : 					}
; 582  : 				}
; 583  : 			}
; 584  : 
; 585  : 			++it;
; 586  : 		}
; 587  : 	}
; 588  : }

  0017e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00181	5f		 pop	 edi
  00182	5e		 pop	 esi
  00183	33 cd		 xor	 ecx, ebp
  00185	5b		 pop	 ebx
  00186	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c3		 ret	 0
?UpdateAttachingInstances@CActorInstance@@QAEXXZ ENDP	; CActorInstance::UpdateAttachingInstances
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?GetAttachingBoneName@CActorInstance@@QAEHKPAPBD@Z
_TEXT	SEGMENT
_dwPartIndex$ = 8					; size = 4
_c_pszBoneName$ = 12					; size = 4
?GetAttachingBoneName@CActorInstance@@QAEHKPAPBD@Z PROC	; CActorInstance::GetAttachingBoneName, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 179  : 	return m_pkCurRaceData->GetAttachingBoneName(dwPartIndex, c_pszBoneName);

  00003	8b 89 20 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1056]

; 180  : }

  00009	5d		 pop	 ebp

; 179  : 	return m_pkCurRaceData->GetAttachingBoneName(dwPartIndex, c_pszBoneName);

  0000a	e9 00 00 00 00	 jmp	 ?GetAttachingBoneName@CRaceData@@QAEHKPAPBD@Z ; CRaceData::GetAttachingBoneName
?GetAttachingBoneName@CActorInstance@@QAEHKPAPBD@Z ENDP	; CActorInstance::GetAttachingBoneName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?RefreshActorInstance@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
__Op$2 = -180						; size = 8
_this$GSCopy$1$ = -172					; size = 4
__Insert_before$3 = -168				; size = 4
_iBoneIndex$4 = -164					; size = 4
__Where$1$ = -160					; size = 4
_PointInstance$5 = -156					; size = 28
_PointInstance$6 = -156					; size = 28
_c_pCollisionData$1$ = -128				; size = 4
__Insert_after$7 = -128					; size = 4
_pItemData$8 = -124					; size = 4
_k$1$ = -120						; size = 4
_c_pAttachingData$9 = -116				; size = 4
tv1066 = -112						; size = 4
_c_pAttachingData$10 = -112				; size = 4
_j$1$ = -108						; size = 4
_i$1$ = -108						; size = 4
_ae$11 = -104						; size = 88
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?RefreshActorInstance@CActorInstance@@QAEXXZ PROC	; CActorInstance::RefreshActorInstance, COMDAT
; _this$ = ecx

; 319  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RefreshActorInstance@CActorInstance@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f9		 mov	 edi, ecx
  0002f	89 bd 54 ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi

; 320  : 	if (!m_pkCurRaceData)

  00035	83 bf 20 04 00
	00 00		 cmp	 DWORD PTR [edi+1056], 0
  0003c	75 12		 jne	 SHORT $LN19@RefreshAct

; 321  : 	{
; 322  : 		TraceError("void CActorInstance::RefreshActorInstance() - m_pkCurRaceData=NULL");

  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@FCEINDDL@void?5CActorInstance?3?3RefreshAct@
  00043	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00048	83 c4 04	 add	 esp, 4

; 323  : 		return;

  0004b	e9 6a 04 00 00	 jmp	 $LN1@RefreshAct
$LN19@RefreshAct:

; 324  : 	}
; 325  : 
; 326  : 	// This is Temporary place before making the weapon detection system
; 327  : 	// Setup Collison Detection Data
; 328  : 	m_BodyPointInstanceList.clear();

  00050	8d 8f 38 03 00
	00		 lea	 ecx, DWORD PTR [edi+824]
  00056	e8 00 00 00 00	 call	 ?clear@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXXZ ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::clear

; 329  : 	//m_AttackingPointInstanceList.clear();
; 330  : 	m_DefendingPointInstanceList.clear();

  0005b	8d 8f 40 03 00
	00		 lea	 ecx, DWORD PTR [edi+832]
  00061	e8 00 00 00 00	 call	 ?clear@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXXZ ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::clear

; 331  : 
; 332  : 	// Base
; 333  : 	for (DWORD i = 0; i < m_pkCurRaceData->GetAttachingDataCount(); ++i)

  00066	8b 8f 20 04 00
	00		 mov	 ecx, DWORD PTR [edi+1056]
  0006c	33 f6		 xor	 esi, esi
  0006e	89 75 94	 mov	 DWORD PTR _i$1$[ebp], esi
  00071	e8 00 00 00 00	 call	 ?GetAttachingDataCount@CRaceData@@QAEKXZ ; CRaceData::GetAttachingDataCount
  00076	85 c0		 test	 eax, eax
  00078	0f 84 47 01 00
	00		 je	 $LN3@RefreshAct
  0007e	66 90		 npad	 2
$LL4@RefreshAct:

; 334  : 	{
; 335  : 		const NRaceData::TAttachingData * c_pAttachingData;
; 336  : 
; 337  : 		if (!m_pkCurRaceData->GetAttachingDataPointer(i, &c_pAttachingData))

  00080	8b 8f 20 04 00
	00		 mov	 ecx, DWORD PTR [edi+1056]
  00086	8d 45 90	 lea	 eax, DWORD PTR _c_pAttachingData$10[ebp]
  00089	50		 push	 eax
  0008a	56		 push	 esi
  0008b	e8 00 00 00 00	 call	 ?GetAttachingDataPointer@CRaceData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z ; CRaceData::GetAttachingDataPointer
  00090	85 c0		 test	 eax, eax
  00092	0f 84 14 01 00
	00		 je	 $LN2@RefreshAct

; 338  : 			continue;
; 339  : 
; 340  : 		switch (c_pAttachingData->dwType)

  00098	8b 4d 90	 mov	 ecx, DWORD PTR _c_pAttachingData$10[ebp]
  0009b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009d	83 e8 01	 sub	 eax, 1
  000a0	74 52		 je	 SHORT $LN21@RefreshAct
  000a2	83 e8 01	 sub	 eax, 1
  000a5	0f 85 01 01 00
	00		 jne	 $LN2@RefreshAct

; 363  : 						break;
; 364  : 				}
; 365  : 			}
; 366  : 			break;
; 367  : 
; 368  : 			case NRaceData::ATTACHING_DATA_TYPE_EFFECT:
; 369  : //				if (!m_bEffectInitialized)
; 370  : //				{
; 371  : //					DWORD dwCRC;
; 372  : //					StringPath(c_pAttachingData->pEffectData->strFileName);
; 373  : //					dwCRC = GetCaseCRC32(c_pAttachingData->pEffectData->strFileName.c_str(),c_pAttachingData->pEffectData->strFileName.length());
; 374  : //
; 375  : //					TAttachingEffect ae;
; 376  : //					ae.iLifeType = EFFECT_LIFE_INFINITE;
; 377  : //					ae.dwEndTime = 0;
; 378  : //					ae.dwModelIndex = 0;
; 379  : //					ae.dwEffectIndex = CEffectManager::Instance().GetEmptyIndex();
; 380  : //					ae.isAttaching = TRUE;
; 381  : //					CEffectManager::Instance().CreateEffectInstance(ae.dwEffectIndex, dwCRC);
; 382  : //
; 383  : //					if (c_pAttachingData->isAttaching)
; 384  : //					{
; 385  : //						int iBoneIndex;
; 386  : //						if (!FindBoneIndex(0,c_pAttachingData->strAttachingBoneName.c_str(), &iBoneIndex))
; 387  : //						{
; 388  : //							Tracef("Cannot get Bone Index\n");
; 389  : //							assert(false/*Cannot get Bone Index*/);
; 390  : //						}
; 391  : //
; 392  : //						ae.iBoneIndex = iBoneIndex;
; 393  : //					}
; 394  : //					else
; 395  : //					{
; 396  : //						ae.iBoneIndex = -1;
; 397  : //					}
; 398  : //
; 399  : //					m_AttachingEffectList.push_back(ae);
; 400  : //				}
; 401  : 
; 402  : 				if (c_pAttachingData->isAttaching)

  000ab	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  000ae	83 c0 04	 add	 eax, 4
  000b1	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000b5	74 23		 je	 SHORT $LN28@RefreshAct
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000b7	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  000bb	72 02		 jb	 SHORT $LN91@RefreshAct

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000bd	8b 00		 mov	 eax, DWORD PTR [eax]
$LN91@RefreshAct:

; 3668 :         return _Mypair._Myval2._Myptr();

  000bf	83 c1 0c	 add	 ecx, 12			; 0000000cH

; 2145 :         if (_Large_string_engaged()) {

  000c2	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  000c6	72 1c		 jb	 SHORT $LN29@RefreshAct

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000c8	8b 09		 mov	 ecx, DWORD PTR [ecx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 410  : 				break;

  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	6a 00		 push	 0
  000ce	8b cf		 mov	 ecx, edi
  000d0	e8 00 00 00 00	 call	 ?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z ; CActorInstance::AttachEffectByName
  000d5	e9 d2 00 00 00	 jmp	 $LN2@RefreshAct
$LN28@RefreshAct:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000da	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  000de	72 02		 jb	 SHORT $LN105@RefreshAct

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000e0	8b 00		 mov	 eax, DWORD PTR [eax]
$LN105@RefreshAct:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 408  : 					AttachEffectByName(0, 0, c_pAttachingData->pEffectData->strFileName.c_str());

  000e2	33 c9		 xor	 ecx, ecx
$LN29@RefreshAct:

; 410  : 				break;

  000e4	50		 push	 eax
  000e5	51		 push	 ecx
  000e6	6a 00		 push	 0
  000e8	8b cf		 mov	 ecx, edi
  000ea	e8 00 00 00 00	 call	 ?AttachEffectByName@CActorInstance@@QAEKKPBD0@Z ; CActorInstance::AttachEffectByName
  000ef	e9 b8 00 00 00	 jmp	 $LN2@RefreshAct
$LN21@RefreshAct:

; 341  : 		{
; 342  : 			case NRaceData::ATTACHING_DATA_TYPE_COLLISION_DATA:
; 343  : 			{
; 344  : 				const NRaceData::TCollisionData * c_pCollisionData = c_pAttachingData->pCollisionData;

  000f4	8b 71 24	 mov	 esi, DWORD PTR [ecx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000f7	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _PointInstance$6[ebp+16], 0
  00101	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _PointInstance$6[ebp+20], 0
  0010b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _PointInstance$6[ebp+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 347  : 				if (NRaceData::COLLISION_TYPE_ATTACKING == c_pCollisionData->iCollisionType)

  00115	83 7e 04 02	 cmp	 DWORD PTR [esi+4], 2
  00119	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00120	75 0c		 jne	 SHORT $LN22@RefreshAct

; 348  : 					continue;

  00122	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00129	e9 7e 00 00 00	 jmp	 $LN2@RefreshAct
$LN22@RefreshAct:

; 349  : 
; 350  : 				if (!CreateCollisionInstancePiece(CRaceData::PART_MAIN, c_pAttachingData, &PointInstance))

  0012e	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _PointInstance$6[ebp]
  00134	50		 push	 eax
  00135	51		 push	 ecx
  00136	6a 00		 push	 0
  00138	8b cf		 mov	 ecx, edi
  0013a	e8 00 00 00 00	 call	 ?CreateCollisionInstancePiece@CActorInstance@@QAE_NKPBUSAttachingData@NRaceData@@PAUSCollisionPointInstance@1@@Z ; CActorInstance::CreateCollisionInstancePiece
  0013f	84 c0		 test	 al, al
  00141	74 27		 je	 SHORT $LN7@RefreshAct

; 351  : 					continue;
; 352  : 
; 353  : 				switch (c_pCollisionData->iCollisionType)

  00143	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00146	83 e8 01	 sub	 eax, 1
  00149	74 0d		 je	 SHORT $LN26@RefreshAct
  0014b	83 e8 02	 sub	 eax, 2
  0014e	75 1a		 jne	 SHORT $LN7@RefreshAct

; 354  : 				{
; 355  : 					case NRaceData::COLLISION_TYPE_ATTACKING:
; 356  : 						//m_AttackingPointInstanceList.push_back(PointInstance);
; 357  : 						break;
; 358  : 					case NRaceData::COLLISION_TYPE_DEFENDING:
; 359  : 						m_DefendingPointInstanceList.push_back(PointInstance);

  00150	8d 8f 40 03 00
	00		 lea	 ecx, DWORD PTR [edi+832]

; 360  : 						break;

  00156	eb 06		 jmp	 SHORT $LN219@RefreshAct
$LN26@RefreshAct:

; 361  : 					case NRaceData::COLLISION_TYPE_BODY:
; 362  : 						m_BodyPointInstanceList.push_back(PointInstance);

  00158	8d 8f 38 03 00
	00		 lea	 ecx, DWORD PTR [edi+824]
$LN219@RefreshAct:

; 331  : 
; 332  : 	// Base
; 333  : 	for (DWORD i = 0; i < m_pkCurRaceData->GetAttachingDataCount(); ++i)

  0015e	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _PointInstance$6[ebp]
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::push_back
$LN7@RefreshAct:
  0016a	8b b5 74 ff ff
	ff		 mov	 esi, DWORD PTR _PointInstance$6[ebp+16]
  00170	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00177	85 f6		 test	 esi, esi
  00179	74 31		 je	 SHORT $LN2@RefreshAct
  0017b	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _PointInstance$6[ebp+24]
  00181	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00186	2b ce		 sub	 ecx, esi
  00188	f7 e9		 imul	 ecx
  0018a	03 d1		 add	 edx, ecx
  0018c	c1 fa 04	 sar	 edx, 4
  0018f	8b ca		 mov	 ecx, edx
  00191	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00194	03 ca		 add	 ecx, edx
  00196	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  0019d	2b c1		 sub	 eax, ecx
  0019f	c1 e0 02	 shl	 eax, 2
  001a2	50		 push	 eax
  001a3	56		 push	 esi
  001a4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001a9	83 c4 08	 add	 esp, 8
$LN2@RefreshAct:
  001ac	8b 8f 20 04 00
	00		 mov	 ecx, DWORD PTR [edi+1056]
  001b2	ff 45 94	 inc	 DWORD PTR _i$1$[ebp]
  001b5	e8 00 00 00 00	 call	 ?GetAttachingDataCount@CRaceData@@QAEKXZ ; CRaceData::GetAttachingDataCount
  001ba	8b 75 94	 mov	 esi, DWORD PTR _i$1$[ebp]
  001bd	3b f0		 cmp	 esi, eax
  001bf	0f 82 bb fe ff
	ff		 jb	 $LL4@RefreshAct
$LN3@RefreshAct:

; 411  : 
; 412  : 			case NRaceData::ATTACHING_DATA_TYPE_OBJECT:
; 413  : 				break;
; 414  : 
; 415  : 			default:
; 416  : 				assert(false/*NOT_IMPLEMENTED*/);
; 417  : 				break;
; 418  : 		}
; 419  : 	}
; 420  : 
; 421  : 	for (DWORD j = 0; j < CRaceData::PART_MAX_NUM; ++j)

  001c5	33 c0		 xor	 eax, eax
  001c7	8d 8f e0 04 00
	00		 lea	 ecx, DWORD PTR [edi+1248]
  001cd	89 45 94	 mov	 DWORD PTR _j$1$[ebp], eax
  001d0	89 4d 90	 mov	 DWORD PTR tv1066[ebp], ecx
$LL11@RefreshAct:

; 422  : 	{
; 423  : 		if (0 == m_adwPartItemID[j])

  001d3	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001d5	85 c9		 test	 ecx, ecx
  001d7	0f 84 c0 02 00
	00		 je	 $LN9@RefreshAct

; 424  : 			continue;
; 425  : 
; 426  : 		CItemData * pItemData;
; 427  : 		if (!CItemManager::Instance().GetItemDataPointer(m_adwPartItemID[j], &pItemData))

  001dd	8d 45 84	 lea	 eax, DWORD PTR _pItemData$8[ebp]
  001e0	50		 push	 eax
  001e1	51		 push	 ecx
  001e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
  001e8	e8 00 00 00 00	 call	 ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
  001ed	85 c0		 test	 eax, eax
  001ef	0f 84 c5 02 00
	00		 je	 $LN1@RefreshAct

; 428  : 			return;
; 429  : 
; 430  : 		for (DWORD k = 0; k < pItemData->GetAttachingDataCount(); ++k)

  001f5	8b 4d 84	 mov	 ecx, DWORD PTR _pItemData$8[ebp]
  001f8	33 f6		 xor	 esi, esi
  001fa	89 75 88	 mov	 DWORD PTR _k$1$[ebp], esi
  001fd	e8 00 00 00 00	 call	 ?GetAttachingDataCount@CItemData@@QAEKXZ ; CItemData::GetAttachingDataCount
  00202	85 c0		 test	 eax, eax
  00204	0f 84 90 02 00
	00		 je	 $LN215@RefreshAct
  0020a	66 0f 1f 44 00
	00		 npad	 6
$LL14@RefreshAct:

; 431  : 		{
; 432  : 			const NRaceData::TAttachingData * c_pAttachingData;
; 433  : 
; 434  : 			if (!pItemData->GetAttachingDataPointer(k, &c_pAttachingData))

  00210	8b 4d 84	 mov	 ecx, DWORD PTR _pItemData$8[ebp]
  00213	8d 45 8c	 lea	 eax, DWORD PTR _c_pAttachingData$9[ebp]
  00216	50		 push	 eax
  00217	56		 push	 esi
  00218	e8 00 00 00 00	 call	 ?GetAttachingDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z ; CItemData::GetAttachingDataPointer
  0021d	85 c0		 test	 eax, eax
  0021f	0f 84 61 02 00
	00		 je	 $LN12@RefreshAct

; 435  : 				continue;
; 436  : 
; 437  : 			switch(c_pAttachingData->dwType)

  00225	8b 4d 8c	 mov	 ecx, DWORD PTR _c_pAttachingData$9[ebp]
  00228	8b 01		 mov	 eax, DWORD PTR [ecx]
  0022a	83 e8 01	 sub	 eax, 1
  0022d	0f 84 8f 01 00
	00		 je	 $LN35@RefreshAct
  00233	83 e8 01	 sub	 eax, 1
  00236	0f 85 4a 02 00
	00		 jne	 $LN12@RefreshAct

; 459  : 							break;
; 460  : 						}
; 461  : 					}
; 462  : 					break;
; 463  : 
; 464  : 				case NRaceData::ATTACHING_DATA_TYPE_EFFECT:
; 465  : 					if (!m_bEffectInitialized)

  0023c	38 87 00 05 00
	00		 cmp	 BYTE PTR [edi+1280], al
  00242	0f 85 3e 02 00
	00		 jne	 $LN12@RefreshAct

; 468  : 						StringPath(c_pAttachingData->pEffectData->strFileName);

  00248	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0024b	83 c0 04	 add	 eax, 4
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?StringPath@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; StringPath
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00254	8b 45 8c	 mov	 eax, DWORD PTR _c_pAttachingData$9[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 468  : 						StringPath(c_pAttachingData->pEffectData->strFileName);

  00257	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  0025a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]

; 2145 :         if (_Large_string_engaged()) {

  0025d	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00261	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 2145 :         if (_Large_string_engaged()) {

  00264	72 02		 jb	 SHORT $LN151@RefreshAct

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00266	8b 00		 mov	 eax, DWORD PTR [eax]
$LN151@RefreshAct:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 469  : 						dwCRC = GetCaseCRC32(c_pAttachingData->pEffectData->strFileName.c_str(),c_pAttachingData->pEffectData->strFileName.length());

  00268	ff 71 14	 push	 DWORD PTR [ecx+20]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32

; 470  : 
; 471  : 						TAttachingEffect ae;
; 472  : 						ae.iLifeType = EFFECT_LIFE_INFINITE;
; 473  : 						ae.dwEndTime = 0;
; 474  : 						ae.dwModelIndex = j;
; 475  : 						ae.dwEffectIndex = CEffectManager::Instance().GetEmptyIndex();

  00271	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00277	83 c4 08	 add	 esp, 8
  0027a	8b f0		 mov	 esi, eax
  0027c	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _ae$11[ebp+80], 1
  00283	8b 45 94	 mov	 eax, DWORD PTR _j$1$[ebp]
  00286	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _ae$11[ebp+84], 0
  0028d	89 45 a0	 mov	 DWORD PTR _ae$11[ebp+8], eax
  00290	e8 00 00 00 00	 call	 ?GetEmptyIndex@CEffectManager@@QAEHXZ ; CEffectManager::GetEmptyIndex

; 476  : 						ae.isAttaching = TRUE;
; 477  : 						CEffectManager::Instance().CreateEffectInstance(ae.dwEffectIndex, dwCRC);

  00295	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0029b	56		 push	 esi
  0029c	50		 push	 eax
  0029d	89 45 98	 mov	 DWORD PTR _ae$11[ebp], eax
  002a0	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR _ae$11[ebp+76], 1
  002a7	e8 00 00 00 00	 call	 ?CreateEffectInstance@CEffectManager@@QAEXKK@Z ; CEffectManager::CreateEffectInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  002ac	8b 45 8c	 mov	 eax, DWORD PTR _c_pAttachingData$9[ebp]
  002af	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2145 :         if (_Large_string_engaged()) {

  002b2	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  002b6	72 02		 jb	 SHORT $LN158@RefreshAct

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  002b8	8b 00		 mov	 eax, DWORD PTR [eax]
$LN158@RefreshAct:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 480  : 						if (!FindBoneIndex(j,c_pAttachingData->strAttachingBoneName.c_str(), &iBoneIndex))

  002ba	8b 75 94	 mov	 esi, DWORD PTR _j$1$[ebp]
  002bd	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _iBoneIndex$4[ebp]
  002c3	51		 push	 ecx
  002c4	50		 push	 eax
  002c5	56		 push	 esi
  002c6	8b cf		 mov	 ecx, edi
  002c8	e8 00 00 00 00	 call	 ?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z ; CGraphicThingInstance::FindBoneIndex
  002cd	84 c0		 test	 al, al
  002cf	75 0d		 jne	 SHORT $LN43@RefreshAct

; 481  : 						{
; 482  : 							Tracef("Cannot get Bone Index\n");

  002d1	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KNPFFH@Cannot?5get?5Bone?5Index?6@
  002d6	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  002db	83 c4 04	 add	 esp, 4
$LN43@RefreshAct:

; 483  : 							assert(false/*Cannot get Bone Index*/);
; 484  : 						}
; 485  : 						Tracef("Creating %p %d %d\n", this, j,k);

  002de	ff 75 88	 push	 DWORD PTR _k$1$[ebp]
  002e1	56		 push	 esi
  002e2	57		 push	 edi
  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NKMCNOEI@Creating?5?$CFp?5?$CFd?5?$CFd?6@
  002e8	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef

; 486  : 
; 487  : 						ae.iBoneIndex = iBoneIndex;

  002ed	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _iBoneIndex$4[ebp]

; 488  : 
; 489  : 						m_AttachingEffectList.push_back(ae);

  002f3	8d b7 f8 04 00
	00		 lea	 esi, DWORD PTR [edi+1272]
  002f9	83 c4 10	 add	 esp, 16			; 00000010H
  002fc	89 45 9c	 mov	 DWORD PTR _ae$11[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1014 :         if (_Mysize == max_size()) {

  002ff	81 7e 04 aa aa
	aa 02		 cmp	 DWORD PTR [esi+4], 44739242 ; 02aaaaaaH

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00306	8b 06		 mov	 eax, DWORD PTR [esi]
  00308	89 85 60 ff ff
	ff		 mov	 DWORD PTR __Where$1$[ebp], eax

; 1014 :         if (_Mysize == max_size()) {

  0030e	0f 84 c1 01 00
	00		 je	 $LN202@RefreshAct
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00314	89 b5 4c ff ff
	ff		 mov	 DWORD PTR __Op$2[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0031a	6a 60		 push	 96			; 00000060H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0031c	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00323	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0032d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00332	0f 10 45 98	 movups	 xmm0, XMMWORD PTR _ae$11[ebp]

; 1048 :         _Ptr = _Al.allocate(1);

  00336	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 588  :     }

  00338	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 1020 :         return _Op._Transfer_before(_Where);

  0033f	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR __Where$1$[ebp]
  00345	89 85 58 ff ff
	ff		 mov	 DWORD PTR __Insert_before$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0034b	0f 11 47 08	 movups	 XMMWORD PTR [edi+8], xmm0
  0034f	0f 10 45 a8	 movups	 xmm0, XMMWORD PTR _ae$11[ebp+16]
  00353	0f 11 47 18	 movups	 XMMWORD PTR [edi+24], xmm0
  00357	0f 10 45 b8	 movups	 xmm0, XMMWORD PTR _ae$11[ebp+32]
  0035b	0f 11 47 28	 movups	 XMMWORD PTR [edi+40], xmm0
  0035f	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR _ae$11[ebp+48]
  00363	0f 11 47 38	 movups	 XMMWORD PTR [edi+56], xmm0
  00367	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR _ae$11[ebp+64]
  0036b	0f 11 47 48	 movups	 XMMWORD PTR [edi+72], xmm0
  0036f	f3 0f 7e 45 e8	 movq	 xmm0, QWORD PTR _ae$11[ebp+80]
  00374	66 0f d6 47 58	 movq	 QWORD PTR [edi+88], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1019 :         ++_Mysize;

  00379	ff 46 04	 inc	 DWORD PTR [esi+4]

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  0037c	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  0037f	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR __Insert_before$3[ebp]
  00385	50		 push	 eax
  00386	57		 push	 edi
  00387	89 75 80	 mov	 DWORD PTR __Insert_after$7[ebp], esi
  0038a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0038f	8d 45 80	 lea	 eax, DWORD PTR __Insert_after$7[ebp]
  00392	50		 push	 eax
  00393	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00396	50		 push	 eax
  00397	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@UTAttachingEffect@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::TAttachingEffect,void *> *,std::_List_node<CActorInstance::TAttachingEffect,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  0039c	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR __Where$1$[ebp]
  003a2	83 c4 14	 add	 esp, 20			; 00000014H
  003a5	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR __Op$2[ebp+4], 0
  003af	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 606  :         _Insert_after->_Next  = _Result;

  003b2	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 491  : 					break;

  003b4	8b bd 54 ff ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  003ba	8b 75 88	 mov	 esi, DWORD PTR _k$1$[ebp]
  003bd	e9 c4 00 00 00	 jmp	 $LN12@RefreshAct
$LN35@RefreshAct:

; 438  : 			{
; 439  : 				case NRaceData::ATTACHING_DATA_TYPE_COLLISION_DATA:
; 440  : 					{
; 441  : 						const NRaceData::TCollisionData * c_pCollisionData = c_pAttachingData->pCollisionData;

  003c2	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  003c5	89 45 80	 mov	 DWORD PTR _c_pCollisionData$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  003c8	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _PointInstance$5[ebp+16], 0
  003d2	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _PointInstance$5[ebp+20], 0
  003dc	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _PointInstance$5[ebp+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 444  : 						if (NRaceData::COLLISION_TYPE_ATTACKING == c_pCollisionData->iCollisionType)

  003e6	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  003ea	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  003f1	75 0c		 jne	 SHORT $LN36@RefreshAct

; 445  : 							continue;

  003f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003fa	e9 87 00 00 00	 jmp	 $LN12@RefreshAct
$LN36@RefreshAct:

; 446  : 						if (!CreateCollisionInstancePiece(j, c_pAttachingData, &PointInstance))

  003ff	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _PointInstance$5[ebp]
  00405	50		 push	 eax
  00406	51		 push	 ecx
  00407	ff 75 94	 push	 DWORD PTR _j$1$[ebp]
  0040a	8b cf		 mov	 ecx, edi
  0040c	e8 00 00 00 00	 call	 ?CreateCollisionInstancePiece@CActorInstance@@QAE_NKPBUSAttachingData@NRaceData@@PAUSCollisionPointInstance@1@@Z ; CActorInstance::CreateCollisionInstancePiece
  00411	84 c0		 test	 al, al
  00413	74 2a		 je	 SHORT $LN17@RefreshAct

; 447  : 							continue;
; 448  : 
; 449  : 						switch (c_pCollisionData->iCollisionType)

  00415	8b 45 80	 mov	 eax, DWORD PTR _c_pCollisionData$1$[ebp]
  00418	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0041b	83 e8 01	 sub	 eax, 1
  0041e	74 0d		 je	 SHORT $LN40@RefreshAct
  00420	83 e8 02	 sub	 eax, 2
  00423	75 1a		 jne	 SHORT $LN17@RefreshAct

; 450  : 						{
; 451  : 						case NRaceData::COLLISION_TYPE_ATTACKING:
; 452  : 							//m_AttackingPointInstanceList.push_back(PointInstance);
; 453  : 							break;
; 454  : 						case NRaceData::COLLISION_TYPE_DEFENDING:
; 455  : 							m_DefendingPointInstanceList.push_back(PointInstance);

  00425	8d 8f 40 03 00
	00		 lea	 ecx, DWORD PTR [edi+832]

; 456  : 							break;

  0042b	eb 06		 jmp	 SHORT $LN221@RefreshAct
$LN40@RefreshAct:

; 457  : 						case NRaceData::COLLISION_TYPE_BODY:
; 458  : 							m_BodyPointInstanceList.push_back(PointInstance);

  0042d	8d 8f 38 03 00
	00		 lea	 ecx, DWORD PTR [edi+824]
$LN221@RefreshAct:

; 428  : 			return;
; 429  : 
; 430  : 		for (DWORD k = 0; k < pItemData->GetAttachingDataCount(); ++k)

  00433	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _PointInstance$5[ebp]
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 ?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::push_back
$LN17@RefreshAct:
  0043f	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _PointInstance$5[ebp+16]
  00445	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0044c	85 c0		 test	 eax, eax
  0044e	74 36		 je	 SHORT $LN12@RefreshAct
  00450	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _PointInstance$5[ebp+24]
  00456	2b c8		 sub	 ecx, eax
  00458	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0045d	f7 e9		 imul	 ecx
  0045f	03 d1		 add	 edx, ecx
  00461	c1 fa 04	 sar	 edx, 4
  00464	8b ca		 mov	 ecx, edx
  00466	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00469	03 ca		 add	 ecx, edx
  0046b	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00472	2b c1		 sub	 eax, ecx
  00474	c1 e0 02	 shl	 eax, 2
  00477	50		 push	 eax
  00478	ff b5 74 ff ff
	ff		 push	 DWORD PTR _PointInstance$5[ebp+16]
  0047e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00483	83 c4 08	 add	 esp, 8
$LN12@RefreshAct:
  00486	8b 4d 84	 mov	 ecx, DWORD PTR _pItemData$8[ebp]
  00489	46		 inc	 esi
  0048a	89 75 88	 mov	 DWORD PTR _k$1$[ebp], esi
  0048d	e8 00 00 00 00	 call	 ?GetAttachingDataCount@CItemData@@QAEKXZ ; CItemData::GetAttachingDataCount
  00492	3b f0		 cmp	 esi, eax
  00494	0f 82 76 fd ff
	ff		 jb	 $LL14@RefreshAct
$LN215@RefreshAct:

; 411  : 
; 412  : 			case NRaceData::ATTACHING_DATA_TYPE_OBJECT:
; 413  : 				break;
; 414  : 
; 415  : 			default:
; 416  : 				assert(false/*NOT_IMPLEMENTED*/);
; 417  : 				break;
; 418  : 		}
; 419  : 	}
; 420  : 
; 421  : 	for (DWORD j = 0; j < CRaceData::PART_MAX_NUM; ++j)

  0049a	8b 45 94	 mov	 eax, DWORD PTR _j$1$[ebp]
$LN9@RefreshAct:
  0049d	8b 4d 90	 mov	 ecx, DWORD PTR tv1066[ebp]
  004a0	40		 inc	 eax
  004a1	83 c1 04	 add	 ecx, 4
  004a4	89 45 94	 mov	 DWORD PTR _j$1$[ebp], eax
  004a7	89 4d 90	 mov	 DWORD PTR tv1066[ebp], ecx
  004aa	83 f8 06	 cmp	 eax, 6
  004ad	0f 82 20 fd ff
	ff		 jb	 $LL11@RefreshAct

; 492  : 
; 493  : 				case NRaceData::ATTACHING_DATA_TYPE_OBJECT:
; 494  : 					break;
; 495  : 
; 496  : 				default:
; 497  : 					assert(false/*NOT_IMPLEMENTED*/);
; 498  : 					break;
; 499  : 			}
; 500  : 		}
; 501  : 	}
; 502  : 
; 503  : 	m_bEffectInitialized = true;

  004b3	c6 87 00 05 00
	00 01		 mov	 BYTE PTR [edi+1280], 1
$LN1@RefreshAct:

; 504  : }

  004ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004c4	59		 pop	 ecx
  004c5	5f		 pop	 edi
  004c6	5e		 pop	 esi
  004c7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004ca	33 cd		 xor	 ecx, ebp
  004cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004d1	8b e5		 mov	 esp, ebp
  004d3	5d		 pop	 ebp
  004d4	c3		 ret	 0
$LN202@RefreshAct:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1015 :             _Xlength_error("list too long");

  004d5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  004da	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN217@RefreshAct:
  004df	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RefreshActorInstance@CActorInstance@@QAEXXZ$0:
  00000	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _PointInstance$6[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SCollisionPointInstance@CActorInstance@@QAE@XZ
__unwindfunclet$?RefreshActorInstance@CActorInstance@@QAEXXZ$11:
  0000b	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR __Op$2[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@UTAttachingEffect@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::TAttachingEffect,void *> > >
__unwindfunclet$?RefreshActorInstance@CActorInstance@@QAEXXZ$1:
  00016	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _PointInstance$5[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1SCollisionPointInstance@CActorInstance@@QAE@XZ
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$?RefreshActorInstance@CActorInstance@@QAEXXZ:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 8a 4c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-180]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003f	33 c8		 xor	 ecx, eax
  00041	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00046	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RefreshActorInstance@CActorInstance@@QAEXXZ
  0004b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RefreshActorInstance@CActorInstance@@QAEXXZ ENDP	; CActorInstance::RefreshActorInstance
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?AttachWeapon@CActorInstance@@QAEXKKPAVCItemData@@@Z
_TEXT	SEGMENT
_kMaterialData$1 = -20					; size = 16
_pThing$2 = -4						; size = 4
_dwParentPartIndex$ = 8					; size = 4
_pWeaponTrace$3 = 12					; size = 4
_dwPartIndex$ = 12					; size = 4
_szBoneName$ = 16					; size = 4
_pItemData$ = 16					; size = 4
?AttachWeapon@CActorInstance@@QAEXKKPAVCItemData@@@Z PROC ; CActorInstance::AttachWeapon, COMDAT
; _this$ = ecx

; 184  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 185  : //	assert(m_pkCurRaceData);
; 186  : 	if (!pItemData)

  00009	8b 7d 10	 mov	 edi, DWORD PTR _pItemData$[ebp]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	85 ff		 test	 edi, edi
  00010	0f 84 3f 01 00
	00		 je	 $LN18@AttachWeap

; 187  : 		return;
; 188  : 
; 189  : #if defined(ENABLE_WOLFMAN_CHARACTER) && defined(AUTODETECT_LYCAN_RODNPICK_BONE)
; 190  : 	const char * szBoneName;
; 191  : 	if ((GetRace()==8) && (pItemData->GetType()==CItemData::ITEM_TYPE_ROD || pItemData->GetType()==CItemData::ITEM_TYPE_PICK))

  00016	e8 00 00 00 00	 call	 ?GetRace@CActorInstance@@QAEKXZ ; CActorInstance::GetRace
  0001b	8b 75 0c	 mov	 esi, DWORD PTR _dwPartIndex$[ebp]
  0001e	83 f8 08	 cmp	 eax, 8
  00021	75 1f		 jne	 SHORT $LN6@AttachWeap
  00023	8b cf		 mov	 ecx, edi
  00025	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  0002a	3c 0d		 cmp	 al, 13			; 0000000dH
  0002c	74 0b		 je	 SHORT $LN8@AttachWeap
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  00035	3c 18		 cmp	 al, 24			; 00000018H
  00037	75 09		 jne	 SHORT $LN6@AttachWeap
$LN8@AttachWeap:

; 192  : 	{
; 193  : 		szBoneName = "equip_right";

  00039	c7 45 10 00 00
	00 00		 mov	 DWORD PTR _szBoneName$[ebp], OFFSET ??_C@_0M@OLLEIOHA@equip_right@

; 194  : 	}

  00040	eb 14		 jmp	 SHORT $LN9@AttachWeap
$LN6@AttachWeap:

; 195  : 	else if (!GetAttachingBoneName(dwPartIndex, &szBoneName))

  00042	8d 45 10	 lea	 eax, DWORD PTR _szBoneName$[ebp]
  00045	8b cb		 mov	 ecx, ebx
  00047	50		 push	 eax
  00048	56		 push	 esi
  00049	e8 00 00 00 00	 call	 ?GetAttachingBoneName@CActorInstance@@QAEHKPAPBD@Z ; CActorInstance::GetAttachingBoneName
  0004e	85 c0		 test	 eax, eax
  00050	0f 84 ff 00 00
	00		 je	 $LN18@AttachWeap
$LN9@AttachWeap:

; 196  : 		return;
; 197  : #else
; 198  : 	const char * szBoneName;
; 199  : 	if (!GetAttachingBoneName(dwPartIndex, &szBoneName))
; 200  : 		return;
; 201  : #endif
; 202  : 
; 203  : 	if (CRaceData::PART_WEAPON_LEFT == dwPartIndex)

  00056	8b cf		 mov	 ecx, edi
  00058	83 fe 03	 cmp	 esi, 3
  0005b	75 07		 jne	 SHORT $LN10@AttachWeap

; 204  : 	{
; 205  : 		RegisterModelThing(dwPartIndex, pItemData->GetSubModelThing());

  0005d	e8 00 00 00 00	 call	 ?GetSubModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetSubModelThing

; 206  : 	}

  00062	eb 05		 jmp	 SHORT $LN11@AttachWeap
$LN10@AttachWeap:

; 207  : 	else
; 208  : 	{
; 209  : 		RegisterModelThing(dwPartIndex, pItemData->GetModelThing());

  00064	e8 00 00 00 00	 call	 ?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetModelThing
$LN11@AttachWeap:

; 210  : 	}
; 211  : 
; 212  : 	for (DWORD i = 0; i < pItemData->GetLODModelThingCount(); ++i)

  00069	50		 push	 eax
  0006a	56		 push	 esi
  0006b	8b cb		 mov	 ecx, ebx
  0006d	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing
  00072	8b cf		 mov	 ecx, edi
  00074	33 f6		 xor	 esi, esi
  00076	e8 00 00 00 00	 call	 ?GetLODModelThingCount@CItemData@@QAEKXZ ; CItemData::GetLODModelThingCount
  0007b	85 c0		 test	 eax, eax
  0007d	74 2a		 je	 SHORT $LN3@AttachWeap
  0007f	90		 npad	 1
$LL4@AttachWeap:

; 213  : 	{
; 214  : 		CGraphicThing * pThing;
; 215  : 
; 216  : 		if (!pItemData->GetLODModelThingPointer(i, &pThing))

  00080	8d 45 fc	 lea	 eax, DWORD PTR _pThing$2[ebp]
  00083	8b cf		 mov	 ecx, edi
  00085	50		 push	 eax
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 ?GetLODModelThingPointer@CItemData@@QAEHKPAPAVCGraphicThing@@@Z ; CItemData::GetLODModelThingPointer
  0008c	85 c0		 test	 eax, eax
  0008e	74 0d		 je	 SHORT $LN2@AttachWeap

; 217  : 			continue;
; 218  : 
; 219  : 		RegisterLODThing(dwPartIndex, pThing);

  00090	ff 75 fc	 push	 DWORD PTR _pThing$2[ebp]
  00093	8b cb		 mov	 ecx, ebx
  00095	ff 75 0c	 push	 DWORD PTR _dwPartIndex$[ebp]
  00098	e8 00 00 00 00	 call	 ?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterLODThing
$LN2@AttachWeap:

; 210  : 	}
; 211  : 
; 212  : 	for (DWORD i = 0; i < pItemData->GetLODModelThingCount(); ++i)

  0009d	8b cf		 mov	 ecx, edi
  0009f	46		 inc	 esi
  000a0	e8 00 00 00 00	 call	 ?GetLODModelThingCount@CItemData@@QAEKXZ ; CItemData::GetLODModelThingCount
  000a5	3b f0		 cmp	 esi, eax
  000a7	72 d7		 jb	 SHORT $LL4@AttachWeap
$LN3@AttachWeap:

; 220  : 	}
; 221  : 
; 222  : 	SetModelInstance(dwPartIndex, dwPartIndex, 0);

  000a9	8b 75 0c	 mov	 esi, DWORD PTR _dwPartIndex$[ebp]
  000ac	8b cb		 mov	 ecx, ebx
  000ae	6a ff		 push	 -1
  000b0	6a 00		 push	 0
  000b2	56		 push	 esi
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance

; 223  : 	AttachModelInstance(dwParentPartIndex, szBoneName, dwPartIndex);

  000b9	56		 push	 esi
  000ba	ff 75 10	 push	 DWORD PTR _szBoneName$[ebp]
  000bd	8b cb		 mov	 ecx, ebx
  000bf	ff 75 08	 push	 DWORD PTR _dwParentPartIndex$[ebp]
  000c2	e8 00 00 00 00	 call	 ?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z ; CGraphicThingInstance::AttachModelInstance

; 224  : 
; 225  : 	if (USE_WEAPON_SPECULAR)

  000c7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?USE_WEAPON_SPECULAR@@3HA, 0 ; USE_WEAPON_SPECULAR
  000ce	74 32		 je	 SHORT $LN13@AttachWeap

; 226  : 	{
; 227  : 		SMaterialData kMaterialData;
; 228  : 		kMaterialData.pImage = NULL;
; 229  : 		kMaterialData.isSpecularEnable = TRUE;
; 230  : 		kMaterialData.fSpecularPower = pItemData->GetSpecularPowerf();

  000d0	8b cf		 mov	 ecx, edi
  000d2	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _kMaterialData$1[ebp], 0
  000d9	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _kMaterialData$1[ebp+8], 1
  000e0	e8 00 00 00 00	 call	 ?GetSpecularPowerf@CItemData@@QBEMXZ ; CItemData::GetSpecularPowerf

; 231  : 		kMaterialData.bSphereMapIndex = 1;
; 232  : 		SetMaterialData(dwPartIndex, NULL, kMaterialData);

  000e5	83 ec 10	 sub	 esp, 16			; 00000010H
  000e8	c6 45 f8 01	 mov	 BYTE PTR _kMaterialData$1[ebp+12], 1
  000ec	8b c4		 mov	 eax, esp
  000ee	8b cb		 mov	 ecx, ebx
  000f0	d9 5d f0	 fstp	 DWORD PTR _kMaterialData$1[ebp+4]
  000f3	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _kMaterialData$1[ebp]
  000f7	6a 00		 push	 0
  000f9	56		 push	 esi
  000fa	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  000fd	e8 00 00 00 00	 call	 ?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z ; CGraphicThingInstance::SetMaterialData
$LN13@AttachWeap:

; 233  : 	}
; 234  : 
; 235  : 	// Weapon Trace
; 236  : 	if (__IsWeaponTrace(pItemData->GetWeaponType()))

  00102	8b cf		 mov	 ecx, edi
  00104	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
  00109	50		 push	 eax
  0010a	8b cb		 mov	 ecx, ebx
  0010c	e8 00 00 00 00	 call	 ?__IsWeaponTrace@CActorInstance@@IAE_NK@Z ; CActorInstance::__IsWeaponTrace
  00111	84 c0		 test	 al, al
  00113	74 40		 je	 SHORT $LN18@AttachWeap

; 237  : 	{
; 238  : 		CWeaponTrace * pWeaponTrace = CWeaponTrace::New();

  00115	e8 00 00 00 00	 call	 ?New@CWeaponTrace@@SAPAV1@XZ ; CWeaponTrace::New

; 239  : 		pWeaponTrace->SetWeaponInstance(this, dwPartIndex, szBoneName);

  0011a	ff 75 10	 push	 DWORD PTR _szBoneName$[ebp]
  0011d	8b f8		 mov	 edi, eax
  0011f	56		 push	 esi
  00120	53		 push	 ebx
  00121	8b cf		 mov	 ecx, edi
  00123	89 7d 0c	 mov	 DWORD PTR _pWeaponTrace$3[ebp], edi
  00126	e8 00 00 00 00	 call	 ?SetWeaponInstance@CWeaponTrace@@QAE_NPAVCGraphicThingInstance@@KPBD@Z ; CWeaponTrace::SetWeaponInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0012b	8b 83 78 03 00
	00		 mov	 eax, DWORD PTR [ebx+888]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 240  : 		m_WeaponTraceVector.push_back(pWeaponTrace);

  00131	8d 8b 74 03 00
	00		 lea	 ecx, DWORD PTR [ebx+884]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00137	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0013a	74 0f		 je	 SHORT $LN19@AttachWeap

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0013c	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0013e	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 242  : }

  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c2 0c 00	 ret	 12			; 0000000cH
$LN19@AttachWeap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0014b	8d 55 0c	 lea	 edx, DWORD PTR _pWeaponTrace$3[ebp]
  0014e	52		 push	 edx
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCWeaponTrace@@@?$vector@PAVCWeaponTrace@@V?$allocator@PAVCWeaponTrace@@@std@@@std@@QAEPAPAVCWeaponTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CWeaponTrace *,std::allocator<CWeaponTrace *> >::_Emplace_reallocate<CWeaponTrace * const &>
$LN18@AttachWeap:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp

; 242  : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 0c 00	 ret	 12			; 0000000cH
?AttachWeapon@CActorInstance@@QAEXKKPAVCItemData@@@Z ENDP ; CActorInstance::AttachWeapon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?AttachWeapon@CActorInstance@@QAEXKKK@Z
_TEXT	SEGMENT
_dwItemIndex$ = 8					; size = 4
_dwParentPartIndex$ = 12				; size = 4
_pItemData$ = 16					; size = 4
_dwPartIndex$ = 16					; size = 4
?AttachWeapon@CActorInstance@@QAEXKKK@Z PROC		; CActorInstance::AttachWeapon, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 149  : 	if (dwPartIndex>=CRaceData::PART_MAX_NUM)

  00005	8b 7d 10	 mov	 edi, DWORD PTR _dwPartIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	83 ff 06	 cmp	 edi, 6
  0000d	0f 83 b7 00 00
	00		 jae	 $LN6@AttachWeap

; 150  : 		return;
; 151  : 
; 152  : 	m_adwPartItemID[dwPartIndex]=dwItemIndex;

  00013	8b 45 08	 mov	 eax, DWORD PTR _dwItemIndex$[ebp]
  00016	89 84 be e0 04
	00 00		 mov	 DWORD PTR [esi+edi*4+1248], eax

; 153  : 
; 154  : 	if (USE_VIETNAM_CONVERT_WEAPON_VNUM)

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA, 0 ; USE_VIETNAM_CONVERT_WEAPON_VNUM
  00024	74 09		 je	 SHORT $LN3@AttachWeap

; 155  : 		dwItemIndex = Vietnam_ConvertWeaponVnum(dwItemIndex);

  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?Vietnam_ConvertWeaponVnum@@YAKK@Z ; Vietnam_ConvertWeaponVnum
  0002c	83 c4 04	 add	 esp, 4
$LN3@AttachWeap:

; 156  : 
; 157  : 	CItemData * pItemData;
; 158  : 	if (!CItemManager::Instance().GetItemDataPointer(dwItemIndex, &pItemData))

  0002f	8d 4d 10	 lea	 ecx, DWORD PTR _pItemData$[ebp]
  00032	51		 push	 ecx
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
  0003f	8b ce		 mov	 ecx, esi
  00041	85 c0		 test	 eax, eax
  00043	75 3b		 jne	 SHORT $LN4@AttachWeap

; 159  : 	{
; 160  : 		RegisterModelThing(dwPartIndex, NULL);

  00045	50		 push	 eax
  00046	57		 push	 edi
  00047	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing

; 161  : 		SetModelInstance(dwPartIndex, dwPartIndex, 0);

  0004c	6a ff		 push	 -1
  0004e	6a 00		 push	 0
  00050	57		 push	 edi
  00051	57		 push	 edi
  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance

; 162  : 
; 163  : 		RegisterModelThing(CRaceData::PART_WEAPON_LEFT, NULL);

  00059	6a 00		 push	 0
  0005b	6a 03		 push	 3
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing

; 164  : 		SetModelInstance(CRaceData::PART_WEAPON_LEFT, CRaceData::PART_WEAPON_LEFT, 0);

  00064	6a ff		 push	 -1
  00066	6a 00		 push	 0
  00068	6a 03		 push	 3
  0006a	6a 03		 push	 3
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance

; 165  : 
; 166  : 		RefreshActorInstance();

  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?RefreshActorInstance@CActorInstance@@QAEXXZ ; CActorInstance::RefreshActorInstance
  0007a	5f		 pop	 edi

; 175  : }

  0007b	5e		 pop	 esi
  0007c	5d		 pop	 ebp
  0007d	c2 0c 00	 ret	 12			; 0000000cH
$LN4@AttachWeap:

; 167  : 		return;
; 168  : 	}
; 169  : 
; 170  : 	__DestroyWeaponTrace();

  00080	e8 00 00 00 00	 call	 ?__DestroyWeaponTrace@CActorInstance@@IAEXXZ ; CActorInstance::__DestroyWeaponTrace

; 171  : 	if (__IsRightHandWeapon(pItemData->GetWeaponType()))

  00085	8b 4d 10	 mov	 ecx, DWORD PTR _pItemData$[ebp]
  00088	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
  0008d	50		 push	 eax
  0008e	8b ce		 mov	 ecx, esi
  00090	e8 00 00 00 00	 call	 ?__IsRightHandWeapon@CActorInstance@@IAE_NK@Z ; CActorInstance::__IsRightHandWeapon
  00095	8b 7d 0c	 mov	 edi, DWORD PTR _dwParentPartIndex$[ebp]
  00098	84 c0		 test	 al, al
  0009a	74 0d		 je	 SHORT $LN5@AttachWeap

; 172  : 		AttachWeapon(dwParentPartIndex, CRaceData::PART_WEAPON, pItemData);

  0009c	ff 75 10	 push	 DWORD PTR _pItemData$[ebp]
  0009f	8b ce		 mov	 ecx, esi
  000a1	6a 01		 push	 1
  000a3	57		 push	 edi
  000a4	e8 00 00 00 00	 call	 ?AttachWeapon@CActorInstance@@QAEXKKPAVCItemData@@@Z ; CActorInstance::AttachWeapon
$LN5@AttachWeap:

; 173  : 	if (__IsLeftHandWeapon(pItemData->GetWeaponType()))

  000a9	8b 4d 10	 mov	 ecx, DWORD PTR _pItemData$[ebp]
  000ac	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
  000b1	50		 push	 eax
  000b2	8b ce		 mov	 ecx, esi
  000b4	e8 00 00 00 00	 call	 ?__IsLeftHandWeapon@CActorInstance@@IAE_NK@Z ; CActorInstance::__IsLeftHandWeapon
  000b9	84 c0		 test	 al, al
  000bb	74 0d		 je	 SHORT $LN6@AttachWeap

; 174  : 		AttachWeapon(dwParentPartIndex, CRaceData::PART_WEAPON_LEFT, pItemData);

  000bd	ff 75 10	 push	 DWORD PTR _pItemData$[ebp]
  000c0	8b ce		 mov	 ecx, esi
  000c2	6a 03		 push	 3
  000c4	57		 push	 edi
  000c5	e8 00 00 00 00	 call	 ?AttachWeapon@CActorInstance@@QAEXKKPAVCItemData@@@Z ; CActorInstance::AttachWeapon
$LN6@AttachWeap:

; 175  : }

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5d		 pop	 ebp
  000cd	c2 0c 00	 ret	 12			; 0000000cH
?AttachWeapon@CActorInstance@@QAEXKKK@Z ENDP		; CActorInstance::AttachWeapon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?AttachAcce@CActorInstance@@QAEXPAVCItemData@@M@Z
_TEXT	SEGMENT
_kMaterialData$1 = -16					; size = 16
_pItemData$ = 8						; size = 4
_fSpecular$ = 12					; size = 4
?AttachAcce@CActorInstance@@QAEXPAVCItemData@@M@Z PROC	; CActorInstance::AttachAcce, COMDAT
; _this$ = ecx

; 625  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 626  : 	if (!pItemData)

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _pItemData$[ebp]
  0000c	85 c9		 test	 ecx, ecx
  0000e	75 27		 jne	 SHORT $LN2@AttachAcce

; 627  : 	{
; 628  : 		RegisterModelThing(CRaceData::PART_ACCE, NULL);

  00010	51		 push	 ecx
  00011	6a 05		 push	 5
  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing

; 629  : 		SetModelInstance(CRaceData::PART_ACCE, CRaceData::PART_ACCE, 0);

  0001a	6a ff		 push	 -1
  0001c	6a 00		 push	 0
  0001e	6a 05		 push	 5
  00020	6a 05		 push	 5
  00022	8b ce		 mov	 ecx, esi
  00024	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance

; 630  : 		RefreshActorInstance();

  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?RefreshActorInstance@CActorInstance@@QAEXXZ ; CActorInstance::RefreshActorInstance

; 646  : 	}
; 647  : }

  00030	5e		 pop	 esi
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
$LN2@AttachAcce:

; 631  : 		return;
; 632  : 	}
; 633  : 
; 634  : 	RegisterModelThing(CRaceData::PART_ACCE, pItemData->GetModelThing());

  00037	e8 00 00 00 00	 call	 ?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetModelThing
  0003c	50		 push	 eax
  0003d	6a 05		 push	 5
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing

; 635  : 	SetModelInstance(CRaceData::PART_ACCE, CRaceData::PART_ACCE, 0);

  00046	6a ff		 push	 -1
  00048	6a 00		 push	 0
  0004a	6a 05		 push	 5
  0004c	6a 05		 push	 5
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance

; 636  : 	AttachModelInstance(CRaceData::PART_MAIN, "Bip01 Spine2", CRaceData::PART_ACCE);

  00055	6a 05		 push	 5
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DLOEJLFF@Bip01?5Spine2@
  0005c	6a 00		 push	 0
  0005e	8b ce		 mov	 ecx, esi
  00060	e8 00 00 00 00	 call	 ?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z ; CGraphicThingInstance::AttachModelInstance

; 637  : 
; 638  : 	if (fSpecular > 0.0f)

  00065	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fSpecular$[ebp]
  0006a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00071	76 2e		 jbe	 SHORT $LN3@AttachAcce

; 639  : 	{
; 640  : 		SMaterialData kMaterialData;
; 641  : 		kMaterialData.pImage = NULL;
; 642  : 		kMaterialData.isSpecularEnable = TRUE;
; 643  : 		kMaterialData.fSpecularPower = fSpecular;
; 644  : 		kMaterialData.bSphereMapIndex = 1;
; 645  : 		SetMaterialData(CRaceData::PART_ACCE, NULL, kMaterialData);

  00073	83 ec 10	 sub	 esp, 16			; 00000010H
  00076	f3 0f 11 45 f4	 movss	 DWORD PTR _kMaterialData$1[ebp+4], xmm0
  0007b	8b c4		 mov	 eax, esp
  0007d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _kMaterialData$1[ebp], 0
  00084	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _kMaterialData$1[ebp+8], 1
  0008b	8b ce		 mov	 ecx, esi
  0008d	c6 45 fc 01	 mov	 BYTE PTR _kMaterialData$1[ebp+12], 1
  00091	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR _kMaterialData$1[ebp]
  00095	6a 00		 push	 0
  00097	6a 05		 push	 5
  00099	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0009c	e8 00 00 00 00	 call	 ?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z ; CGraphicThingInstance::SetMaterialData
$LN3@AttachAcce:

; 646  : 	}
; 647  : }

  000a1	5e		 pop	 esi
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 08 00	 ret	 8
?AttachAcce@CActorInstance@@QAEXPAVCItemData@@M@Z ENDP	; CActorInstance::AttachAcce
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?clear@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?clear@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXXZ PROC ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::clear, COMDAT
; _this$ = ecx

; 1426 :     void clear() noexcept { // erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 1427 :         auto& _My_data = _Mypair._Myval2;
; 1428 :         _My_data._Orphan_non_end();
; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  00005	8b 31		 mov	 esi, DWORD PTR [ecx]
  00007	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx

; 324  :         _Head->_Prev->_Next = nullptr;

  0000a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00013	8b 36		 mov	 esi, DWORD PTR [esi]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00015	85 f6		 test	 esi, esi
  00017	74 69		 je	 SHORT $LN5@clear
  00019	53		 push	 ebx
  0001a	57		 push	 edi
  0001b	0f 1f 44 00 00	 npad	 5
$LL6@clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00020	8b 5e 18	 mov	 ebx, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 328  :             _Pnext = _Pnode->_Next;

  00023	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00025	85 db		 test	 ebx, ebx
  00027	74 43		 je	 SHORT $LN21@clear

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00029	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0002c	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00031	2b cb		 sub	 ecx, ebx
  00033	f7 e9		 imul	 ecx
  00035	03 d1		 add	 edx, ecx
  00037	c1 fa 04	 sar	 edx, 4
  0003a	8b ca		 mov	 ecx, edx
  0003c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0003f	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00041	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00048	2b c1		 sub	 eax, ecx
  0004a	c1 e0 02	 shl	 eax, 2
  0004d	50		 push	 eax
  0004e	53		 push	 ebx
  0004f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00054	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0005e	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 1699 :             _Myend   = pointer();

  00065	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN21@clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0006c	6a 24		 push	 36			; 00000024H
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00074	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00077	8b f7		 mov	 esi, edi
  00079	85 ff		 test	 edi, edi
  0007b	75 a3		 jne	 SHORT $LL6@clear
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00080	5f		 pop	 edi
  00081	5b		 pop	 ebx
$LN5@clear:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00082	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;
; 1432 :         _My_data._Mysize        = 0;

  00084	5e		 pop	 esi
  00085	89 00		 mov	 DWORD PTR [eax], eax
  00087	8b 01		 mov	 eax, DWORD PTR [ecx]
  00089	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0008c	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 1433 :     }

  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?clear@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXXZ ENDP ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z
_TEXT	SEGMENT
__Op$2 = -28						; size = 8
__Rightfirst$1$ = -20					; size = 4
__Insert_after$3 = -20					; size = 4
__Where$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Rightlast$1$ = 8					; size = 4
__Insert_before$ = 8					; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z PROC ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::push_back, COMDAT
; _this$ = ecx

; 1251 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 1014 :         if (_Mysize == max_size()) {

  0002a	81 7f 04 c7 71
	1c 07		 cmp	 DWORD PTR [edi+4], 119304647 ; 071c71c7H

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00031	8b 37		 mov	 esi, DWORD PTR [edi]
  00033	89 75 f0	 mov	 DWORD PTR __Where$1$[ebp], esi

; 1014 :         if (_Mysize == max_size()) {

  00036	0f 84 f7 00 00
	00		 je	 $LN83@push_back
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0003c	89 7d e4	 mov	 DWORD PTR __Op$2[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003f	6a 24		 push	 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00048	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00054	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]

; 1048 :         _Ptr = _Al.allocate(1);

  00057	8b d8		 mov	 ebx, eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00059	83 c4 04	 add	 esp, 4

; 1048 :         _Ptr = _Al.allocate(1);

  0005c	89 5d e8	 mov	 DWORD PTR __Op$2[ebp+4], ebx
  0005f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00061	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  00064	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00067	89 4b 0c	 mov	 DWORD PTR [ebx+12], ecx
  0006a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0006d	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
  00070	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00073	89 43 14	 mov	 DWORD PTR [ebx+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00076	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0
  0007d	c7 43 1c 00 00
	00 00		 mov	 DWORD PTR [ebx+28], 0
  00084	c7 43 20 00 00
	00 00		 mov	 DWORD PTR [ebx+32], 0

; 525  :         const pointer _Rightfirst = _Right_data._Myfirst;

  0008b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]

; 526  :         const pointer _Rightlast  = _Right_data._Mylast;

  0008e	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  00091	89 45 ec	 mov	 DWORD PTR __Rightfirst$1$[ebp], eax
  00094	89 4d 08	 mov	 DWORD PTR __Rightlast$1$[ebp], ecx

; 527  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 528  :         if (_Rightfirst != _Rightlast) {

  00097	3b c1		 cmp	 eax, ecx
  00099	74 56		 je	 SHORT $LN48@push_back

; 529  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  0009b	2b c8		 sub	 ecx, eax
  0009d	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000a2	f7 e9		 imul	 ecx
  000a4	03 d1		 add	 edx, ecx
  000a6	c1 fa 04	 sar	 edx, 4
  000a9	8b c2		 mov	 eax, edx
  000ab	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ae	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000b0	3d 49 92 24 09	 cmp	 eax, 153391689		; 09249249H
  000b5	0f 87 82 00 00
	00		 ja	 $LN84@push_back

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000bb	8d 34 c5 00 00
	00 00		 lea	 esi, DWORD PTR [eax*8]
  000c2	2b f0		 sub	 esi, eax
  000c4	c1 e6 02	 shl	 esi, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1643 :         _Myfirst           = _Newvec;

  000cd	8d 4b 18	 lea	 ecx, DWORD PTR [ebx+24]
  000d0	89 01		 mov	 DWORD PTR [ecx], eax

; 1644 :         _Mylast            = _Newvec;

  000d2	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  000d5	03 c6		 add	 eax, esi

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000d7	51		 push	 ecx

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  000d8	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000db	ff 31		 push	 DWORD PTR [ecx]
  000dd	ff 75 08	 push	 DWORD PTR __Rightlast$1$[ebp]
  000e0	ff 75 ec	 push	 DWORD PTR __Rightfirst$1$[ebp]
  000e3	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAUCDynamicSphereInstance@@V?$allocator@UCDynamicSphereInstance@@@std@@@std@@YAPAUCDynamicSphereInstance@@QAU1@0PAU1@AAV?$allocator@UCDynamicSphereInstance@@@0@@Z ; std::_Uninitialized_copy<CDynamicSphereInstance *,std::allocator<CDynamicSphereInstance> >
  000e8	8b 75 f0	 mov	 esi, DWORD PTR __Where$1$[ebp]
  000eb	83 c4 14	 add	 esp, 20			; 00000014H

; 531  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000ee	89 43 1c	 mov	 DWORD PTR [ebx+28], eax
$LN48@push_back:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1019 :         ++_Mysize;

  000f1	ff 47 04	 inc	 DWORD PTR [edi+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000f4	8d 45 08	 lea	 eax, DWORD PTR __Insert_before$[ebp]
  000f7	50		 push	 eax

; 1020 :         return _Op._Transfer_before(_Where);

  000f8	89 75 08	 mov	 DWORD PTR __Insert_before$[ebp], esi

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  000fb	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000fe	53		 push	 ebx
  000ff	89 75 ec	 mov	 DWORD PTR __Insert_after$3[ebp], esi
  00102	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *,std::_List_node<CActorInstance::SCollisionPointInstance,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  00107	8d 45 ec	 lea	 eax, DWORD PTR __Insert_after$3[ebp]
  0010a	50		 push	 eax
  0010b	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CActorInstance::SCollisionPointInstance,void *> *,std::_List_node<CActorInstance::SCollisionPointInstance,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  00114	8b 45 f0	 mov	 eax, DWORD PTR __Where$1$[ebp]
  00117	83 c4 10	 add	 esp, 16			; 00000010H
  0011a	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 606  :         _Insert_after->_Next  = _Result;

  0011d	89 1e		 mov	 DWORD PTR [esi], ebx

; 1253 :     }

  0011f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00122	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00129	59		 pop	 ecx
  0012a	5f		 pop	 edi
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 04 00	 ret	 4
$LN83@push_back:

; 1015 :             _Xlength_error("list too long");

  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  00138	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN84@push_back:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN81@push_back:
  00142	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z$1:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USCollisionPointInstance@CActorInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CActorInstance::SCollisionPointInstance,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@USCollisionPointInstance@CActorInstance@@V?$allocator@USCollisionPointInstance@CActorInstance@@@std@@@std@@QAEXABUSCollisionPointInstance@CActorInstance@@@Z ENDP ; std::list<CActorInstance::SCollisionPointInstance,std::allocator<CActorInstance::SCollisionPointInstance> >::push_back
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1SCollisionPointInstance@CActorInstance@@QAE@XZ
_TEXT	SEGMENT
??1SCollisionPointInstance@CActorInstance@@QAE@XZ PROC	; CActorInstance::SCollisionPointInstance::~SCollisionPointInstance, COMDAT
; _this$ = ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00007	85 ff		 test	 edi, edi
  00009	74 43		 je	 SHORT $LN6@SCollision

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000b	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000e	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00013	2b cf		 sub	 ecx, edi
  00015	f7 e9		 imul	 ecx
  00017	03 d1		 add	 edx, ecx
  00019	c1 fa 04	 sar	 edx, 4
  0001c	8b ca		 mov	 ecx, edx
  0001e	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00021	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00023	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  0002a	2b c1		 sub	 eax, ecx
  0002c	c1 e0 02	 shl	 eax, 2
  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00036	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00047	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@SCollision:
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	c3		 ret	 0
??1SCollisionPointInstance@CActorInstance@@QAE@XZ ENDP	; CActorInstance::SCollisionPointInstance::~SCollisionPointInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceAttach.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
