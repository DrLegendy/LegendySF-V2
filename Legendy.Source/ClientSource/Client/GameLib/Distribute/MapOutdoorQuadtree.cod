; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorQuadtree.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BuildQuadTree@CMapOutdoor@@IAEXXZ		; CMapOutdoor::BuildQuadTree
PUBLIC	?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ; CMapOutdoor::AllocQuadTreeNode
PUBLIC	?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::SubDivideNode
PUBLIC	?FreeQuadTree@CMapOutdoor@@IAEXXZ		; CMapOutdoor::FreeQuadTree
PUBLIC	??_C@_0GM@MFLCABEH@MapOutdoor?3?3BuildQuadTree?5?3?5m_w@ ; `string'
PUBLIC	??_C@_0CO@IAHBGCMJ@CMapOutdoor?3?3BuildQuadTree?$CI?$CJ?5Ro@ ; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CTerrainQuadtreeNode@@QAE@XZ:PROC		; CTerrainQuadtreeNode::CTerrainQuadtreeNode
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CO@IAHBGCMJ@CMapOutdoor?3?3BuildQuadTree?$CI?$CJ?5Ro@
CONST	SEGMENT
??_C@_0CO@IAHBGCMJ@CMapOutdoor?3?3BuildQuadTree?$CI?$CJ?5Ro@ DB 'CMapOutd'
	DB	'oor::BuildQuadTree() RootNode is NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@MFLCABEH@MapOutdoor?3?3BuildQuadTree?5?3?5m_w@
CONST	SEGMENT
??_C@_0GM@MFLCABEH@MapOutdoor?3?3BuildQuadTree?5?3?5m_w@ DB 'MapOutdoor::'
	DB	'BuildQuadTree : m_wPatchCount is zero, you must call ConvertP'
	DB	'atchSplat before call this method.', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z$0
__ehfuncinfo$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorQuadtree.cpp
;	COMDAT ?FreeQuadTree@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?FreeQuadTree@CMapOutdoor@@IAEXXZ PROC			; CMapOutdoor::FreeQuadTree, COMDAT
; _this$ = ecx

; 139  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 140  : 	if (NULL == m_pRootNode)

  00003	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00009	85 c9		 test	 ecx, ecx
  0000b	0f 84 9c 00 00
	00		 je	 $LN1@FreeQuadTr

; 141  : 		return;
; 142  : 
; 143  : 	if (m_pRootNode->NW_Node)

  00011	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00014	85 d2		 test	 edx, edx
  00016	74 1b		 je	 SHORT $LN3@FreeQuadTr

; 144  : 	{
; 145  : 		delete m_pRootNode->NW_Node;

  00018	8b 02		 mov	 eax, DWORD PTR [edx]
  0001a	8b ca		 mov	 ecx, edx
  0001c	6a 01		 push	 1
  0001e	ff 10		 call	 DWORD PTR [eax]
  00020	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]

; 146  : 		m_pRootNode->NW_Node = NULL;

  00026	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
  0002d	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
$LN3@FreeQuadTr:

; 147  : 	}
; 148  : 	if (m_pRootNode->NE_Node)

  00033	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00036	85 d2		 test	 edx, edx
  00038	74 1b		 je	 SHORT $LN4@FreeQuadTr

; 149  : 	{
; 150  : 		delete m_pRootNode->NE_Node;

  0003a	8b 02		 mov	 eax, DWORD PTR [edx]
  0003c	8b ca		 mov	 ecx, edx
  0003e	6a 01		 push	 1
  00040	ff 10		 call	 DWORD PTR [eax]
  00042	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]

; 151  : 		m_pRootNode->NE_Node = NULL;

  00048	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  0004f	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
$LN4@FreeQuadTr:

; 152  : 	}
; 153  : 	if (m_pRootNode->SW_Node)

  00055	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00058	85 d2		 test	 edx, edx
  0005a	74 1b		 je	 SHORT $LN5@FreeQuadTr

; 154  : 	{
; 155  : 		delete m_pRootNode->SW_Node;

  0005c	8b 02		 mov	 eax, DWORD PTR [edx]
  0005e	8b ca		 mov	 ecx, edx
  00060	6a 01		 push	 1
  00062	ff 10		 call	 DWORD PTR [eax]
  00064	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]

; 156  : 		m_pRootNode->SW_Node = NULL;

  0006a	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
  00071	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
$LN5@FreeQuadTr:

; 157  : 	}
; 158  : 	if (m_pRootNode->SE_Node)

  00077	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0007a	85 d2		 test	 edx, edx
  0007c	74 1b		 je	 SHORT $LN6@FreeQuadTr

; 159  : 	{
; 160  : 		delete m_pRootNode->SE_Node;

  0007e	8b 02		 mov	 eax, DWORD PTR [edx]
  00080	8b ca		 mov	 ecx, edx
  00082	6a 01		 push	 1
  00084	ff 10		 call	 DWORD PTR [eax]
  00086	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]

; 161  : 		m_pRootNode->SE_Node = NULL;

  0008c	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
  00093	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
$LN6@FreeQuadTr:

; 162  : 	}
; 163  : 
; 164  : 	delete m_pRootNode;

  00099	85 c9		 test	 ecx, ecx
  0009b	74 06		 je	 SHORT $LN16@FreeQuadTr
  0009d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009f	6a 01		 push	 1
  000a1	ff 10		 call	 DWORD PTR [eax]
$LN16@FreeQuadTr:

; 165  : 	m_pRootNode = NULL;

  000a3	c7 86 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+276], 0
$LN1@FreeQuadTr:
  000ad	5e		 pop	 esi

; 166  : }

  000ae	c3		 ret	 0
?FreeQuadTree@CMapOutdoor@@IAEXXZ ENDP			; CMapOutdoor::FreeQuadTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorQuadtree.cpp
;	COMDAT ?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
tv255 = 8						; size = 4
_Node$ = 8						; size = 4
?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z PROC ; CMapOutdoor::SubDivideNode, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR _Node$[ebp]
  00009	57		 push	 edi
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	0f 1f 00	 npad	 3
$LL7@SubDivideN:

; 83   : 	long nw_size;
; 84   : 	CTerrainQuadtreeNode * tempnode;
; 85   : 
; 86   : 	nw_size = Node->Size / 2;

  00010	8b 46 24	 mov	 eax, DWORD PTR [esi+36]

; 87   : 
; 88   : 	Node->NW_Node = AllocQuadTreeNode (Node->x0, Node->y0, Node->x0 + nw_size-1, Node->y0 + nw_size-1);

  00013	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00016	99		 cdq
  00017	2b c2		 sub	 eax, edx
  00019	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001c	8b d8		 mov	 ebx, eax
  0001e	d1 fb		 sar	 ebx, 1
  00020	8d 4b ff	 lea	 ecx, DWORD PTR [ebx-1]
  00023	03 cf		 add	 ecx, edi
  00025	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  00028	51		 push	 ecx
  00029	03 c2		 add	 eax, edx
  0002b	50		 push	 eax
  0002c	57		 push	 edi
  0002d	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  00030	8b cf		 mov	 ecx, edi
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ; CMapOutdoor::AllocQuadTreeNode

; 89   : 	Node->NE_Node = AllocQuadTreeNode (Node->x0 + nw_size, Node->y0, Node->x1, Node->y0 + nw_size-1);

  00038	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0003b	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0003e	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  00041	03 c1		 add	 eax, ecx
  00043	50		 push	 eax
  00044	ff 76 0c	 push	 DWORD PTR [esi+12]
  00047	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004a	51		 push	 ecx
  0004b	03 c3		 add	 eax, ebx
  0004d	8b cf		 mov	 ecx, edi
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ; CMapOutdoor::AllocQuadTreeNode

; 90   : 	Node->SW_Node = AllocQuadTreeNode (Node->x0, Node->y0 + nw_size, Node->x0 + nw_size-1, Node->y1);

  00055	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00058	ff 76 10	 push	 DWORD PTR [esi+16]
  0005b	89 46 18	 mov	 DWORD PTR [esi+24], eax
  0005e	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  00061	03 c1		 add	 eax, ecx
  00063	50		 push	 eax
  00064	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00067	03 c3		 add	 eax, ebx
  00069	50		 push	 eax
  0006a	51		 push	 ecx
  0006b	8b cf		 mov	 ecx, edi
  0006d	e8 00 00 00 00	 call	 ?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ; CMapOutdoor::AllocQuadTreeNode

; 91   : 	Node->SE_Node = AllocQuadTreeNode (Node->x0 + nw_size, Node->y0 + nw_size, Node->x1, Node->y1);

  00072	ff 76 10	 push	 DWORD PTR [esi+16]
  00075	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00078	8b cf		 mov	 ecx, edi
  0007a	ff 76 0c	 push	 DWORD PTR [esi+12]
  0007d	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00080	89 45 08	 mov	 DWORD PTR tv255[ebp], eax
  00083	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00086	03 c3		 add	 eax, ebx
  00088	50		 push	 eax
  00089	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0008c	03 c3		 add	 eax, ebx
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ; CMapOutdoor::AllocQuadTreeNode
  00094	8b 5d 08	 mov	 ebx, DWORD PTR tv255[ebp]
  00097	89 03		 mov	 DWORD PTR [ebx], eax

; 92   : 
; 93   : 	tempnode = (CTerrainQuadtreeNode *) Node->NW_Node;

  00099	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 94   : 	if ((tempnode != NULL) && (tempnode->Size > 1))

  0009c	85 c0		 test	 eax, eax
  0009e	74 0e		 je	 SHORT $LN2@SubDivideN
  000a0	83 78 24 01	 cmp	 DWORD PTR [eax+36], 1
  000a4	7e 08		 jle	 SHORT $LN2@SubDivideN

; 95   : 		SubDivideNode (tempnode);

  000a6	50		 push	 eax
  000a7	8b cf		 mov	 ecx, edi
  000a9	e8 00 00 00 00	 call	 ?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::SubDivideNode
$LN2@SubDivideN:

; 96   : 	tempnode = (CTerrainQuadtreeNode *) Node->NE_Node;

  000ae	8b 46 18	 mov	 eax, DWORD PTR [esi+24]

; 97   : 	if ((tempnode != NULL) && (tempnode->Size > 1))

  000b1	85 c0		 test	 eax, eax
  000b3	74 0e		 je	 SHORT $LN3@SubDivideN
  000b5	83 78 24 01	 cmp	 DWORD PTR [eax+36], 1
  000b9	7e 08		 jle	 SHORT $LN3@SubDivideN

; 98   : 		SubDivideNode (tempnode);

  000bb	50		 push	 eax
  000bc	8b cf		 mov	 ecx, edi
  000be	e8 00 00 00 00	 call	 ?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::SubDivideNode
$LN3@SubDivideN:

; 99   : 	tempnode = (CTerrainQuadtreeNode *) Node->SW_Node;

  000c3	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]

; 100  : 	if ((tempnode != NULL) && (tempnode->Size > 1))

  000c6	85 c0		 test	 eax, eax
  000c8	74 0e		 je	 SHORT $LN4@SubDivideN
  000ca	83 78 24 01	 cmp	 DWORD PTR [eax+36], 1
  000ce	7e 08		 jle	 SHORT $LN4@SubDivideN

; 101  : 		SubDivideNode (tempnode);

  000d0	50		 push	 eax
  000d1	8b cf		 mov	 ecx, edi
  000d3	e8 00 00 00 00	 call	 ?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::SubDivideNode
$LN4@SubDivideN:

; 102  : 	tempnode = (CTerrainQuadtreeNode *) Node->SE_Node;

  000d8	8b 33		 mov	 esi, DWORD PTR [ebx]

; 103  : 	if ((tempnode != NULL) && (tempnode->Size > 1))

  000da	85 f6		 test	 esi, esi
  000dc	74 0a		 je	 SHORT $LN5@SubDivideN
  000de	83 7e 24 01	 cmp	 DWORD PTR [esi+36], 1
  000e2	0f 8f 28 ff ff
	ff		 jg	 $LL7@SubDivideN
$LN5@SubDivideN:
  000e8	5f		 pop	 edi

; 104  : 		SubDivideNode (tempnode);
; 105  : }

  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 04 00	 ret	 4
?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ENDP ; CMapOutdoor::SubDivideNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorQuadtree.cpp
;	COMDAT ?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z PROC ; CMapOutdoor::AllocQuadTreeNode, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$1$[ebp], ecx

; 28   : 	CTerrainQuadtreeNode * Node;
; 29   : 	long xsize, ysize;
; 30   : 
; 31   : 	xsize = x1-x0+1;

  0002b	8b 7d 10	 mov	 edi, DWORD PTR _x1$[ebp]
  0002e	2b 7d 08	 sub	 edi, DWORD PTR _x0$[ebp]

; 32   : 	ysize = y1-y0+1;

  00031	8b 75 14	 mov	 esi, DWORD PTR _y1$[ebp]
  00034	2b 75 0c	 sub	 esi, DWORD PTR _y0$[ebp]
  00037	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  0003a	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]

; 33   : 	if ((xsize == 0) || (ysize == 0))

  0003d	85 c9		 test	 ecx, ecx
  0003f	0f 84 96 00 00
	00		 je	 $LN3@AllocQuadT
  00045	85 db		 test	 ebx, ebx
  00047	0f 84 8e 00 00
	00		 je	 $LN3@AllocQuadT

; 35   : 
; 36   : 	Node = new CTerrainQuadtreeNode;

  0004d	6a 40		 push	 64			; 00000040H
  0004f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00054	83 c4 04	 add	 esp, 4
  00057	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	85 c0		 test	 eax, eax
  00063	74 0b		 je	 SHORT $LN7@AllocQuadT
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??0CTerrainQuadtreeNode@@QAE@XZ ; CTerrainQuadtreeNode::CTerrainQuadtreeNode
  0006c	8b c8		 mov	 ecx, eax
  0006e	eb 02		 jmp	 SHORT $LN8@AllocQuadT
$LN7@AllocQuadT:
  00070	33 c9		 xor	 ecx, ecx
$LN8@AllocQuadT:

; 37   : 	Node->x0 = x0;
; 38   : 	Node->y0 = y0;

  00072	8b 45 0c	 mov	 eax, DWORD PTR _y0$[ebp]
  00075	8b 55 08	 mov	 edx, DWORD PTR _x0$[ebp]
  00078	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 39   : 	Node->x1 = x1;

  0007b	8b 45 10	 mov	 eax, DWORD PTR _x1$[ebp]
  0007e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 40   : 	Node->y1 = y1;

  00081	8b 45 14	 mov	 eax, DWORD PTR _y1$[ebp]
  00084	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 41   : 
; 42   : 	if (ysize > xsize)
; 43   : 		Node->Size = ysize;
; 44   : 	else
; 45   : 		Node->Size = xsize;
; 46   : 
; 47   : 	Node->PatchNum = y0 * m_wPatchCount + x0;

  00087	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0008a	3b d8		 cmp	 ebx, eax
  0008c	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00092	0f 4e f7	 cmovle	 esi, edi
  00095	46		 inc	 esi
  00096	89 71 24	 mov	 DWORD PTR [ecx+36], esi
  00099	0f b7 80 8c 00
	00 00		 movzx	 eax, WORD PTR [eax+140]
  000a0	0f af 45 0c	 imul	 eax, DWORD PTR _y0$[ebp]

; 48   : 
; 49   : /*
; 50   : 	const float fTerrainMin = -(float) (m_lViewRadius * m_lCellScale);
; 51   : 
; 52   : 	minx = fTerrainMin + x0 * c_byPatchSize * m_lCellScale;
; 53   : 	maxx = fTerrainMin + (x1 + 1) * c_byPatchSize * m_lCellScale;
; 54   : 	miny = fTerrainMin + y0 * c_byPatchSize * m_lCellScale;
; 55   : 	maxy = fTerrainMin + (y1 + 1) * c_byPatchSize * m_lCellScale;
; 56   : 	minz = 0.0f;
; 57   : 	maxz = 0.0f;
; 58   : 
; 59   : 	/ * Set up 8 vertices that belong to the bounding box * /
; 60   : 	Node->center.x = minx + (maxx - minx) * 0.5f;
; 61   : 	Node->center.y = miny + (maxy - miny) * 0.5f;
; 62   : 	Node->center.z = minz + (maxz - minz) * 0.5f;
; 63   : 
; 64   : 	Node->radius = sqrtf(
; 65   : 		(maxx-minx)*(maxx-minx)+
; 66   : 		(maxy-miny)*(maxy-miny)+
; 67   : 		(maxz-minz)*(maxz-minz)
; 68   : 		)/2.0f;
; 69   : */
; 70   : 
; 71   : 	Node->center.x = 0.0f;

  000a4	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 72   : 	Node->center.y = 0.0f;

  000ab	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 73   : 	Node->center.z = 0.0f;

  000b2	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0

; 74   : 
; 75   : 	Node->radius = 0.0f;

  000b9	c7 41 38 00 00
	00 00		 mov	 DWORD PTR [ecx+56], 0
  000c0	03 c2		 add	 eax, edx
  000c2	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 76   : 
; 77   : 	return Node;

  000c5	8b c1		 mov	 eax, ecx

; 78   : }

  000c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d1	59		 pop	 ecx
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 10 00	 ret	 16			; 00000010H
$LN3@AllocQuadT:

; 34   : 		return NULL;

  000db	33 c0		 xor	 eax, eax

; 78   : }

  000dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e7	59		 pop	 ecx
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z$0:
  00000	6a 40		 push	 64			; 00000040H
  00002	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ENDP ; CMapOutdoor::AllocQuadTreeNode
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\MapOutdoorQuadtree.cpp
;	COMDAT ?BuildQuadTree@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?BuildQuadTree@CMapOutdoor@@IAEXXZ PROC			; CMapOutdoor::BuildQuadTree, COMDAT
; _this$ = ecx

; 9    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 10   : 	FreeQuadTree();

  00003	e8 00 00 00 00	 call	 ?FreeQuadTree@CMapOutdoor@@IAEXXZ ; CMapOutdoor::FreeQuadTree

; 11   : 
; 12   : 	if (0 == m_wPatchCount)

  00008	0f b7 86 8c 00
	00 00		 movzx	 eax, WORD PTR [esi+140]
  0000f	33 c9		 xor	 ecx, ecx
  00011	66 3b c8	 cmp	 cx, ax
  00014	75 0f		 jne	 SHORT $LN2@BuildQuadT

; 13   : 	{
; 14   : 		TraceError("MapOutdoor::BuildQuadTree : m_wPatchCount is zero, you must call ConvertPatchSplat before call this method.");

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0GM@MFLCABEH@MapOutdoor?3?3BuildQuadTree?5?3?5m_w@
  0001b	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00020	83 c4 04	 add	 esp, 4
  00023	5e		 pop	 esi

; 24   : }

  00024	c3		 ret	 0
$LN2@BuildQuadT:

; 15   : 		return;
; 16   : 	}
; 17   : 
; 18   : 	m_pRootNode = AllocQuadTreeNode(0, 0, m_wPatchCount - 1, m_wPatchCount - 1);

  00025	48		 dec	 eax
  00026	8b ce		 mov	 ecx, esi
  00028	50		 push	 eax
  00029	50		 push	 eax
  0002a	6a 00		 push	 0
  0002c	6a 00		 push	 0
  0002e	e8 00 00 00 00	 call	 ?AllocQuadTreeNode@CMapOutdoor@@IAEPAVCTerrainQuadtreeNode@@JJJJ@Z ; CMapOutdoor::AllocQuadTreeNode
  00033	89 86 14 01 00
	00		 mov	 DWORD PTR [esi+276], eax

; 19   : 	if (!m_pRootNode)

  00039	85 c0		 test	 eax, eax
  0003b	75 13		 jne	 SHORT $LN3@BuildQuadT

; 20   : 		TraceError("CMapOutdoor::BuildQuadTree() RootNode is NULL");

  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@IAHBGCMJ@CMapOutdoor?3?3BuildQuadTree?$CI?$CJ?5Ro@
  00042	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00047	8b 86 14 01 00
	00		 mov	 eax, DWORD PTR [esi+276]
  0004d	83 c4 04	 add	 esp, 4
$LN3@BuildQuadT:

; 21   : 
; 22   : 	if (m_pRootNode->Size > 1)

  00050	83 78 24 01	 cmp	 DWORD PTR [eax+36], 1
  00054	7e 08		 jle	 SHORT $LN4@BuildQuadT

; 23   : 		SubDivideNode(m_pRootNode);

  00056	50		 push	 eax
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SubDivideNode@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::SubDivideNode
$LN4@BuildQuadT:

; 24   : }

  0005e	5e		 pop	 esi
  0005f	c3		 ret	 0
?BuildQuadTree@CMapOutdoor@@IAEXXZ ENDP			; CMapOutdoor::BuildQuadTree
_TEXT	ENDS
END
