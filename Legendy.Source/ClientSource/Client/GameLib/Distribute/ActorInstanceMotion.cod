; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?SetMotionMode@CActorInstance@@QAEXH@Z		; CActorInstance::SetMotionMode
PUBLIC	?GetMotionMode@CActorInstance@@QAEHXZ		; CActorInstance::GetMotionMode
PUBLIC	?SetLoopMotion@CActorInstance@@QAEXKMM@Z	; CActorInstance::SetLoopMotion
PUBLIC	?InterceptOnceMotion@CActorInstance@@QAE_NKMIM@Z ; CActorInstance::InterceptOnceMotion
PUBLIC	?InterceptLoopMotion@CActorInstance@@QAE_NKM@Z	; CActorInstance::InterceptLoopMotion
PUBLIC	?PushOnceMotion@CActorInstance@@QAE_NKMM@Z	; CActorInstance::PushOnceMotion
PUBLIC	?PushLoopMotion@CActorInstance@@QAE_NKMM@Z	; CActorInstance::PushLoopMotion
PUBLIC	?SetMotionLoopCount@CActorInstance@@QAEXH@Z	; CActorInstance::SetMotionLoopCount
PUBLIC	?isLock@CActorInstance@@QAEHXZ			; CActorInstance::isLock
PUBLIC	?IsUsingSkill@CActorInstance@@QAEHXZ		; CActorInstance::IsUsingSkill
PUBLIC	?CanCancelSkill@CActorInstance@@QAEHXZ		; CActorInstance::CanCancelSkill
PUBLIC	?PreAttack@CActorInstance@@QAEXXZ		; CActorInstance::PreAttack
PUBLIC	?IsFishing@CActorInstance@@QAEHXZ		; CActorInstance::IsFishing
PUBLIC	?HORSE_MotionProcess@CActorInstance@@QAEXH@Z	; CActorInstance::HORSE_MotionProcess
PUBLIC	?MotionProcess@CActorInstance@@QAEXH@Z		; CActorInstance::MotionProcess
PUBLIC	?__MotionEventProcess@CActorInstance@@QAEXH@Z	; CActorInstance::__MotionEventProcess
PUBLIC	?ReservingMotionProcess@CActorInstance@@IAEXXZ	; CActorInstance::ReservingMotionProcess
PUBLIC	?CurrentMotionProcess@CActorInstance@@IAEXXZ	; CActorInstance::CurrentMotionProcess
PUBLIC	?GetRandomMotionKey@CActorInstance@@IAEKK@Z	; CActorInstance::GetRandomMotionKey
PUBLIC	?GetLastMotionTime@CActorInstance@@IAEMM@Z	; CActorInstance::GetLastMotionTime
PUBLIC	?GetMotionDuration@CActorInstance@@IAEMK@Z	; CActorInstance::GetMotionDuration
PUBLIC	?InterceptMotion@CActorInstance@@IAE_NW4EMotionPushType@1@GMIM@Z ; CActorInstance::InterceptMotion
PUBLIC	?PushMotion@CActorInstance@@IAEXW4EMotionPushType@1@KMM@Z ; CActorInstance::PushMotion
PUBLIC	?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z ; CActorInstance::__SetMotion
PUBLIC	?__ClearMotion@CActorInstance@@IAEXXZ		; CActorInstance::__ClearMotion
PUBLIC	?__BindMotionData@CActorInstance@@IAE_NK@Z	; CActorInstance::__BindMotionData
PUBLIC	?__GetMotionType@CActorInstance@@IAEIXZ		; CActorInstance::__GetMotionType
PUBLIC	?__IsNeedFlyTargetMotion@CActorInstance@@IAE_NXZ ; CActorInstance::__IsNeedFlyTargetMotion
PUBLIC	?__HasMotionFlyEvent@CActorInstance@@IAE_NXZ	; CActorInstance::__HasMotionFlyEvent
PUBLIC	?__IsWaitMotion@CActorInstance@@IAE_NXZ		; CActorInstance::__IsWaitMotion
PUBLIC	?__IsMoveMotion@CActorInstance@@IAE_NXZ		; CActorInstance::__IsMoveMotion
PUBLIC	?__IsAttackMotion@CActorInstance@@IAE_NXZ	; CActorInstance::__IsAttackMotion
PUBLIC	?__IsComboAttackMotion@CActorInstance@@IAE_NXZ	; CActorInstance::__IsComboAttackMotion
PUBLIC	?__IsDamageMotion@CActorInstance@@IAE_NXZ	; CActorInstance::__IsDamageMotion
PUBLIC	?__IsKnockDownMotion@CActorInstance@@IAE_NXZ	; CActorInstance::__IsKnockDownMotion
PUBLIC	?__IsDieMotion@CActorInstance@@IAE_NXZ		; CActorInstance::__IsDieMotion
PUBLIC	?__IsStandUpMotion@CActorInstance@@IAE_NXZ	; CActorInstance::__IsStandUpMotion
PUBLIC	?__CanAttack@CActorInstance@@IAE_NXZ		; CActorInstance::__CanAttack
PUBLIC	?__CanNextComboAttack@CActorInstance@@IAE_NXZ	; CActorInstance::__CanNextComboAttack
PUBLIC	?__IsComboAttacking@CActorInstance@@IAE_NXZ	; CActorInstance::__IsComboAttacking
PUBLIC	?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ	; CActorInstance::__GetCurrentMotionIndex
PUBLIC	?__GetCurrentMotionKey@CActorInstance@@IAEKXZ	; CActorInstance::__GetCurrentMotionKey
PUBLIC	?__GetLoopCount@CActorInstance@@IAEHXZ		; CActorInstance::__GetLoopCount
PUBLIC	?_Xlen@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@ABEXXZ ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Xlen
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> > >
PUBLIC	??$_Emplace_back_internal@ABUSReservingMotionNode@CActorInstance@@@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@AAEXABUSReservingMotionNode@CActorInstance@@@Z ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Emplace_back_internal<CActorInstance::SReservingMotionNode const &>
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Destroy_in_place@PAUSReservingMotionNode@CActorInstance@@@std@@YAXAAPAUSReservingMotionNode@CActorInstance@@@Z ; std::_Destroy_in_place<CActorInstance::SReservingMotionNode *>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAUSReservingMotionNode@CActorInstance@@I@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CActorInstance::SReservingMotionNode * *,unsigned int>
PUBLIC	??$_Destroy_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAXPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@@Z ; std::_Destroy_range<CActorInstance::SReservingMotionNode * *>
PUBLIC	??$_Copy_memmove@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@00@Z ; std::_Copy_memmove<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
PUBLIC	??$_Zero_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0@Z ; std::_Zero_range<CActorInstance::SReservingMotionNode * *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> *>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCActorInstance@@M@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CActorInstance * const,float> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	??_C@_0CO@FPMNJLLG@?5Error?5?9?5Not?5found?5want?5to?5usin@ ; `string'
PUBLIC	??_C@_0EK@IFOPNGGO@CActorInstance?3?3SetLoopMotion?$CId@ ; `string'
PUBLIC	??_C@_0IN@JKOADFII@CActorInstance?3?3SetLoopMotion?$CId@ ; `string'
PUBLIC	??_C@_0GC@LNLDMJJ@CActorInstance?3?3InterceptMotion@ ; `string'
PUBLIC	??_C@_0JL@GEIDCHAJ@CActorInstance?3?3InterceptMotion@ ; `string'
PUBLIC	??_C@_0DP@CBIMEEGJ@CActorInstance?3?3GetMotionDurati@ ; `string'
PUBLIC	??_C@_0CO@FJGPJKBE@Only?5MainActor?5can?5receive?5dama@ ; `string'
PUBLIC	??_C@_0BH@MJFHAINF@Failed?5to?5bind?5motion?4@	; `string'
PUBLIC	??_C@_0DP@MJFILIBP@CActorInstance?3?3__GetLoopCount?$CI@ ; `string'
PUBLIC	??_C@_0DM@CHLCPNIC@CActorInstance?3?3__CanAttack?$CI?$CJ?5?9@ ; `string'
PUBLIC	??_C@_0EF@EBECGAL@CActorInstance?3?3__CanNextComboA@ ; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@40400000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?random@@YAKXZ:PROC				; random
EXTRN	?Logn@@YAXIPBD@Z:PROC				; Logn
EXTRN	?Tracen@@YAXPBD@Z:PROC				; Tracen
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?Clear@CFlyTarget@@QAEXXZ:PROC			; CFlyTarget::Clear
EXTRN	?IsObject@CFlyTarget@@QAE_NXZ:PROC		; CFlyTarget::IsObject
EXTRN	?IsValidTarget@CFlyTarget@@QAE_NXZ:PROC		; CFlyTarget::IsValidTarget
EXTRN	??4CFlyTarget@@QAEAAV0@ABV0@@Z:PROC		; CFlyTarget::operator=
EXTRN	?GetDuration@CGrannyMotion@@QBEMXZ:PROC		; CGrannyMotion::GetDuration
EXTRN	?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z:PROC ; CGraphicThing::GetMotionPointer
EXTRN	?GetMotionCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetMotionCount
EXTRN	?GetMotionKey@CRaceData@@QAEHGGPAK@Z:PROC	; CRaceData::GetMotionKey
EXTRN	?GetMotionVectorPointer@CRaceData@@QAEHGGPAPBV?$vector@USMotion@CRaceData@@V?$allocator@USMotion@CRaceData@@@std@@@std@@@Z:PROC ; CRaceData::GetMotionVectorPointer
EXTRN	?GetMotionDataPointer@CRaceData@@QAEHKPAPAVCRaceMotionData@@@Z:PROC ; CRaceData::GetMotionDataPointer
EXTRN	?DeactiveEffectInstance@CEffectManager@@QAEXK@Z:PROC ; CEffectManager::DeactiveEffectInstance
EXTRN	?GetType@CRaceMotionData@@QBEIXZ:PROC		; CRaceMotionData::GetType
EXTRN	?GetLoopCount@CRaceMotionData@@QBEHXZ:PROC	; CRaceMotionData::GetLoopCount
EXTRN	?IsComboInputTimeData@CRaceMotionData@@QBEHXZ:PROC ; CRaceMotionData::IsComboInputTimeData
EXTRN	?isAttackingMotion@CRaceMotionData@@QBEHXZ:PROC	; CRaceMotionData::isAttackingMotion
EXTRN	?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ:PROC ; CRaceMotionData::IsCancelEnableSkill
EXTRN	?IsLoopMotion@CRaceMotionData@@QBEHXZ:PROC	; CRaceMotionData::IsLoopMotion
EXTRN	?GetLoopStartTime@CRaceMotionData@@QBEMXZ:PROC	; CRaceMotionData::GetLoopStartTime
EXTRN	?GetLoopEndTime@CRaceMotionData@@QBEMXZ:PROC	; CRaceMotionData::GetLoopEndTime
EXTRN	?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ:PROC ; CRaceMotionData::GetMotionEventDataCount
EXTRN	?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z:PROC ; CRaceMotionData::GetMotionEventDataPointer
EXTRN	?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z:PROC ; CGraphicThingInstance::CheckMotionThingIndex
EXTRN	?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::GetMotionThingPointer
EXTRN	?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ:PROC ; CGraphicThingInstance::SetEndStopMotion
EXTRN	?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z:PROC ; CGraphicThingInstance::__SetLocalTime
EXTRN	?GetLocalTime@CGraphicThingInstance@@QAEMXZ:PROC ; CGraphicThingInstance::GetLocalTime
EXTRN	?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z:PROC ; CGraphicThingInstance::SetMotion
EXTRN	?ChangeMotion@CGraphicThingInstance@@QAE_NKHM@Z:PROC ; CGraphicThingInstance::ChangeMotion
EXTRN	?IsPoly@CActorInstance@@QAE_NXZ:PROC		; CActorInstance::IsPoly
EXTRN	?isAttacking@CActorInstance@@QAEHXZ:PROC	; CActorInstance::isAttacking
EXTRN	?GetAttackingElapsedTime@CActorInstance@@QAEMXZ:PROC ; CActorInstance::GetAttackingElapsedTime
EXTRN	?IsFaint@CActorInstance@@QAEHXZ:PROC		; CActorInstance::IsFaint
EXTRN	?IsDead@CActorInstance@@QAEHXZ:PROC		; CActorInstance::IsDead
EXTRN	?MotionEventProcess@CActorInstance@@QAEXXZ:PROC	; CActorInstance::MotionEventProcess
EXTRN	?SoundEventProcess@CActorInstance@@QAEXH@Z:PROC	; CActorInstance::SoundEventProcess
EXTRN	?SetFlyTarget@CActorInstance@@QAEXABVCFlyTarget@@@Z:PROC ; CActorInstance::SetFlyTarget
EXTRN	?__ShowEvent@CActorInstance@@IAEXXZ:PROC	; CActorInstance::__ShowEvent
EXTRN	?__IsHiding@CActorInstance@@IAEHXZ:PROC		; CActorInstance::__IsHiding
EXTRN	?__IsMovingSkill@CActorInstance@@IAEHG@Z:PROC	; CActorInstance::__IsMovingSkill
EXTRN	?__ShowWeaponTrace@CActorInstance@@IAEXXZ:PROC	; CActorInstance::__ShowWeaponTrace
EXTRN	?__HideWeaponTrace@CActorInstance@@IAEXXZ:PROC	; CActorInstance::__HideWeaponTrace
EXTRN	?__OnMove@CActorInstance@@QAEXXZ:PROC		; CActorInstance::__OnMove
EXTRN	?__OnStop@CActorInstance@@QAEXXZ:PROC		; CActorInstance::__OnStop
EXTRN	__CxxThrowException@8:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	?g_fGameFPS@@3MA:DWORD				; g_fGameFPS
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@EBECGAL@CActorInstance?3?3__CanNextComboA@
CONST	SEGMENT
??_C@_0EF@EBECGAL@CActorInstance?3?3__CanNextComboA@ DB 'CActorInstance::'
	DB	'__CanNextComboAttack() - m_pkCurRaceMotionData==NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CHLCPNIC@CActorInstance?3?3__CanAttack?$CI?$CJ?5?9@
CONST	SEGMENT
??_C@_0DM@CHLCPNIC@CActorInstance?3?3__CanAttack?$CI?$CJ?5?9@ DB 'CActorI'
	DB	'nstance::__CanAttack() - m_pkCurRaceMotionData==NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@MJFILIBP@CActorInstance?3?3__GetLoopCount?$CI@
CONST	SEGMENT
??_C@_0DP@MJFILIBP@CActorInstance?3?3__GetLoopCount?$CI@ DB 'CActorInstan'
	DB	'ce::__GetLoopCount() - m_pkCurRaceMotionData==NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MJFHAINF@Failed?5to?5bind?5motion?4@
CONST	SEGMENT
??_C@_0BH@MJFHAINF@Failed?5to?5bind?5motion?4@ DB 'Failed to bind motion.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FJGPJKBE@Only?5MainActor?5can?5receive?5dama@
CONST	SEGMENT
??_C@_0CO@FJGPJKBE@Only?5MainActor?5can?5receive?5dama@ DB 'Only MainActo'
	DB	'r can receive damage when moving', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@CBIMEEGJ@CActorInstance?3?3GetMotionDurati@
CONST	SEGMENT
??_C@_0DP@CBIMEEGJ@CActorInstance?3?3GetMotionDurati@ DB 'CActorInstance:'
	DB	':GetMotionDuration - Cannot get motion: %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JL@GEIDCHAJ@CActorInstance?3?3InterceptMotion@
CONST	SEGMENT
??_C@_0JL@GEIDCHAJ@CActorInstance?3?3InterceptMotion@ DB 'CActorInstance:'
	DB	':InterceptMotion(iLoopType=%d, wMotionMode=%d, wMotion=%d, fB'
	DB	'lendTime=%f) - GetMotionKey(m_wcurMotionMode=%d, wMotion=%d, '
	DB	'&MotionKey) ERROR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@LNLDMJJ@CActorInstance?3?3InterceptMotion@
CONST	SEGMENT
??_C@_0GC@LNLDMJJ@CActorInstance?3?3InterceptMotion@ DB 'CActorInstance::'
	DB	'InterceptMotion(iMotionType=%d, wMotion=%d, fBlendTime=%f) - '
	DB	'm_pkCurRaceData=NULL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0IN@JKOADFII@CActorInstance?3?3SetLoopMotion?$CId@
CONST	SEGMENT
??_C@_0IN@JKOADFII@CActorInstance?3?3SetLoopMotion?$CId@ DB 'CActorInstan'
	DB	'ce::SetLoopMotion(dwMotion=%d, fBlendTime=%f, fSpeedRatio=%f)'
	DB	' - GetMotionKey(m_wcurMotionMode=%d, dwMotion=%d, &MotionKey)'
	DB	' ERROR', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@IFOPNGGO@CActorInstance?3?3SetLoopMotion?$CId@
CONST	SEGMENT
??_C@_0EK@IFOPNGGO@CActorInstance?3?3SetLoopMotion?$CId@ DB 'CActorInstan'
	DB	'ce::SetLoopMotion(dwMotion=%d, fBlendTime=%f, fSpeedRatio=%f)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FPMNJLLG@?5Error?5?9?5Not?5found?5want?5to?5usin@
CONST	SEGMENT
??_C@_0CO@FPMNJLLG@?5Error?5?9?5Not?5found?5want?5to?5usin@ DB ' Error - '
	DB	'Not found want to using motion : %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCActorInstance@@M@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCActorInstance@@M@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CActorInstance * const,float> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCActorInstance@@M@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CActorInstance * const,float> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCActorInstance@@M@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CActorInstance * const,float> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0@Z PROC ; std::_Zero_range<CActorInstance::SReservingMotionNode * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0@Z ENDP ; std::_Zero_range<CActorInstance::SReservingMotionNode * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAXPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAXPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@@Z PROC ; std::_Destroy_range<CActorInstance::SReservingMotionNode * *>, COMDAT

; 969  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 970  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 971  :         for (; _First != _Last; ++_First) {
; 972  :             _Destroy_in_place(*_First);
; 973  :         }
; 974  :     }
; 975  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAXPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@@Z ENDP ; std::_Destroy_range<CActorInstance::SReservingMotionNode * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAUSReservingMotionNode@CActorInstance@@I@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAUSReservingMotionNode@CActorInstance@@I@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<CActorInstance::SReservingMotionNode * *,unsigned int>, COMDAT

; 1874 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 1879 :     } else {
; 1880 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1881 :         for (; 0 < _Count; --_Count) {
; 1882 :             _Backout._Emplace_back();
; 1883 :         }
; 1884 : 
; 1885 :         return _Backout._Release();
; 1886 :     }
; 1887 : }

  00012	5d		 pop	 ebp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAUSReservingMotionNode@CActorInstance@@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0@Z ; std::_Zero_range<CActorInstance::SReservingMotionNode * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAUSReservingMotionNode@CActorInstance@@I@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<CActorInstance::SReservingMotionNode * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z PROC ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>, COMDAT

; 1591 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1599 :     } else {
; 1600 :         _Uninitialized_backout<decltype(_UDest)> _Backout{_UDest};
; 1601 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1602 :             _Backout._Emplace_back(*_UFirst);
; 1603 :         }
; 1604 : 
; 1605 :         _UDest = _Backout._Release();
; 1606 :     }
; 1607 : 
; 1608 :     _Seek_wrapped(_Dest, _UDest);
; 1609 :     return _Dest;
; 1610 : }

  00003	5d		 pop	 ebp

; 1592 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1593 :     _Adl_verify_range(_First, _Last);
; 1594 :     auto _UFirst      = _Get_unwrapped(_First);
; 1595 :     const auto _ULast = _Get_unwrapped(_Last);
; 1596 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1597 :     if constexpr (_Ptr_copy_cat<decltype(_UFirst), decltype(_UDest)>::_Really_trivial) {
; 1598 :         _UDest = _Copy_memmove(_UFirst, _ULast, _UDest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@00@Z ; std::_Copy_memmove<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z ENDP ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAUSReservingMotionNode@CActorInstance@@@std@@YAXAAPAUSReservingMotionNode@CActorInstance@@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAUSReservingMotionNode@CActorInstance@@@std@@YAXAAPAUSReservingMotionNode@CActorInstance@@@Z PROC ; std::_Destroy_in_place<CActorInstance::SReservingMotionNode *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAUSReservingMotionNode@CActorInstance@@@std@@YAXAAPAUSReservingMotionNode@CActorInstance@@@Z ENDP ; std::_Destroy_in_place<CActorInstance::SReservingMotionNode *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ??$_Emplace_back_internal@ABUSReservingMotionNode@CActorInstance@@@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@AAEXABUSReservingMotionNode@CActorInstance@@@Z
_TEXT	SEGMENT
tv589 = -8						; size = 4
__Newmap$1$ = -4					; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back_internal@ABUSReservingMotionNode@CActorInstance@@@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@AAEXABUSReservingMotionNode@CActorInstance@@@Z PROC ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Emplace_back_internal<CActorInstance::SReservingMotionNode const &>, COMDAT
; _this$ = ecx

; 1113 :     void _Emplace_back_internal(_Tys&&... _Vals) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	57		 push	 edi

; 1114 :         _PUSH_BACK_BEGIN;

  0000a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000d	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00010	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00013	3b d0		 cmp	 edx, eax
  00015	0f 87 e3 00 00
	00		 ja	 $LN43@Emplace_ba

; 1429 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  0001b	85 d2		 test	 edx, edx
  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	0f 45 c2	 cmovne	 eax, edx
$LL6@Emplace_ba:

; 1430 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _DEQUEMAPSIZ) {

  00025	8b f8		 mov	 edi, eax
  00027	2b fa		 sub	 edi, edx
  00029	83 ff 01	 cmp	 edi, 1
  0002c	72 05		 jb	 SHORT $LN8@Emplace_ba
  0002e	83 f8 08	 cmp	 eax, 8
  00031	73 13		 jae	 SHORT $LN7@Emplace_ba
$LN8@Emplace_ba:

; 1431 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1432 :             if (max_size() / _DEQUESIZ - _Newsize < _Newsize) {

  00033	b9 aa aa aa 0a	 mov	 ecx, 178956970		; 0aaaaaaaH
  00038	2b c8		 sub	 ecx, eax
  0003a	3b c8		 cmp	 ecx, eax
  0003c	0f 82 0d 01 00
	00		 jb	 $LN39@Emplace_ba

; 1434 :             }
; 1435 : 
; 1436 :             _Newsize *= 2;

  00042	03 c0		 add	 eax, eax

; 1437 :         }

  00044	eb df		 jmp	 SHORT $LL6@Emplace_ba
$LN7@Emplace_ba:
  00046	53		 push	 ebx

; 1438 :         _Count = _Newsize - _Mapsize();
; 1439 : 
; 1440 :         size_type _Myboff = _Myoff() / _DEQUESIZ;

  00047	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0004a	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0004f	0f 87 01 01 00
	00		 ja	 $LN47@Emplace_ba

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00055	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  0005e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00061	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  00068	89 4d f8	 mov	 DWORD PTR tv589[ebp], ecx
  0006b	03 c8		 add	 ecx, eax
  0006d	51		 push	 ecx
  0006e	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00071	89 45 fc	 mov	 DWORD PTR __Newmap$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00074	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]
  00077	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]
  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
  00081	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00084	83 c4 10	 add	 esp, 16			; 00000010H

; 1445 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  00087	50		 push	 eax
  00088	3b df		 cmp	 ebx, edi
  0008a	77 1d		 ja	 SHORT $LN10@Emplace_ba

; 1446 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  0008c	8d 04 99	 lea	 eax, DWORD PTR [ecx+ebx*4]
  0008f	50		 push	 eax
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>

; 1447 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  00096	8b cf		 mov	 ecx, edi
  00098	2b cb		 sub	 ecx, ebx
  0009a	51		 push	 ecx
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAUSReservingMotionNode@CActorInstance@@I@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CActorInstance::SReservingMotionNode * *,unsigned int>

; 1448 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

  000a1	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000a4	83 c4 14	 add	 esp, 20			; 00000014H

; 1449 :         } else { // increment not greater than offset of initial block

  000a7	eb 24		 jmp	 SHORT $LN11@Emplace_ba
$LN10@Emplace_ba:

; 1450 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000a9	8d 04 b9	 lea	 eax, DWORD PTR [ecx+edi*4]
  000ac	50		 push	 eax
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>

; 1451 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000b3	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b6	ff 75 fc	 push	 DWORD PTR __Newmap$1$[ebp]
  000b9	8b 45 f8	 mov	 eax, DWORD PTR tv589[ebp]
  000bc	03 c1		 add	 eax, ecx
  000be	50		 push	 eax
  000bf	8d 04 b9	 lea	 eax, DWORD PTR [ecx+edi*4]
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAUSReservingMotionNode@CActorInstance@@PAPAU12@@std@@YAPAPAUSReservingMotionNode@CActorInstance@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<CActorInstance::SReservingMotionNode * *,CActorInstance::SReservingMotionNode * *>
  000c8	83 c4 18	 add	 esp, 24			; 00000018H

; 1452 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000cb	8b df		 mov	 ebx, edi
$LN11@Emplace_ba:

; 1453 :         }
; 1454 : 
; 1455 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());
; 1456 :         if (_Map() != _Mapptr()) {

  000cd	53		 push	 ebx
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAUSReservingMotionNode@CActorInstance@@I@std@@YAPAPAUSReservingMotionNode@CActorInstance@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CActorInstance::SReservingMotionNode * *,unsigned int>
  000d4	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d7	83 c4 08	 add	 esp, 8
  000da	5b		 pop	 ebx
  000db	85 c9		 test	 ecx, ecx
  000dd	74 10		 je	 SHORT $LN12@Emplace_ba
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000df	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000e2	c1 e0 02	 shl	 eax, 2
  000e5	50		 push	 eax
  000e6	51		 push	 ecx
  000e7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ec	83 c4 08	 add	 esp, 8
$LN12@Emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1460 :         _Map() = _Newmap; // point at new

  000ef	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000f2	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1461 :         _Mapsize() += _Count;

  000f5	01 7e 08	 add	 DWORD PTR [esi+8], edi
  000f8	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  000fb	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
$LN43@Emplace_ba:

; 1114 :         _PUSH_BACK_BEGIN;

  000fe	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  00101	21 4e 0c	 and	 DWORD PTR [esi+12], ecx
  00104	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00107	03 c7		 add	 eax, edi

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00109	23 c1		 and	 eax, ecx

; 1114 :         _PUSH_BACK_BEGIN;

  0010b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0010e	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00115	83 3c 0f 00	 cmp	 DWORD PTR [edi+ecx], 0
  00119	75 13		 jne	 SHORT $LN3@Emplace_ba
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0011b	6a 18		 push	 24			; 00000018H
  0011d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1114 :         _PUSH_BACK_BEGIN;

  00122	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00125	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1114 :         _PUSH_BACK_BEGIN;

  00128	89 04 0f	 mov	 DWORD PTR [edi+ecx], eax
  0012b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN3@Emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0012e	8b 45 08	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  00131	8b 0c 0f	 mov	 ecx, DWORD PTR [edi+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1116 :         _PUSH_BACK_END;

  00134	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00135	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00138	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0013b	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00140	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1116 :         _PUSH_BACK_END;

  00145	ff 46 10	 inc	 DWORD PTR [esi+16]
  00148	5e		 pop	 esi

; 1117 :     }

  00149	8b e5		 mov	 esp, ebp
  0014b	5d		 pop	 ebp
  0014c	c2 04 00	 ret	 4
$LN39@Emplace_ba:

; 1433 :                 _Xlen(); // result too long

  0014f	8b ce		 mov	 ecx, esi
  00151	e8 00 00 00 00	 call	 ?_Xlen@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@ABEXXZ ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Xlen
$LN47@Emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00156	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN45@Emplace_ba:
  0015b	cc		 int	 3
??$_Emplace_back_internal@ABUSReservingMotionNode@CActorInstance@@@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@AAEXABUSReservingMotionNode@CActorInstance@@@Z ENDP ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Emplace_back_internal<CActorInstance::SReservingMotionNode const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Old_val$1$ = 12					; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  00011	75 66		 jne	 SHORT $LN3@Erase_tree
  00013	56		 push	 esi
  00014	57		 push	 edi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00015	ff 73 08	 push	 DWORD PTR [ebx+8]
  00018	8b c8		 mov	 ecx, eax
  0001a	ff 75 08	 push	 DWORD PTR __Al$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00022	8b c3		 mov	 eax, ebx

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00024	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  00026	89 45 0c	 mov	 DWORD PTR __Old_val$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 379  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  00029	8d 78 14	 lea	 edi, DWORD PTR [eax+20]

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  0002c	8b 07		 mov	 eax, DWORD PTR [edi]
  0002e	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00031	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00035	75 22		 jne	 SHORT $LN52@Erase_tree
$LL25@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00037	ff 76 08	 push	 DWORD PTR [esi+8]
  0003a	8b cf		 mov	 ecx, edi
  0003c	57		 push	 edi
  0003d	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVCActorInstance@@M@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QAVCActorInstance@@M@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CActorInstance * const,float> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CActorInstance * const,float>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00042	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00044	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00046	6a 18		 push	 24			; 00000018H
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00051	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00055	74 e0		 je	 SHORT $LL25@Erase_tree
  00057	8b 07		 mov	 eax, DWORD PTR [edi]
$LN52@Erase_tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00059	6a 18		 push	 24			; 00000018H
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00061	6a 1c		 push	 28			; 0000001cH
  00063	ff 75 0c	 push	 DWORD PTR __Old_val$1$[ebp]
  00066	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0006e	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00071	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  00075	74 9e		 je	 SHORT $LL2@Erase_tree
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
$LN3@Erase_tree:
  00079	5b		 pop	 ebx

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Xlen@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@ABEXXZ PROC ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Xlen, COMDAT
; _this$ = ecx

; 1418 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@ABEXXZ ENDP ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__GetLoopCount@CActorInstance@@IAEHXZ
_TEXT	SEGMENT
?__GetLoopCount@CActorInstance@@IAEHXZ PROC		; CActorInstance::__GetLoopCount, COMDAT
; _this$ = ecx

; 777  : 	if (!m_pkCurRaceMotionData)

  00000	8b 89 24 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1060]
  00006	85 c9		 test	 ecx, ecx
  00008	75 11		 jne	 SHORT $LN2@GetLoopCou

; 778  : 	{
; 779  : 		TraceError("CActorInstance::__GetLoopCount() - m_pkCurRaceMotionData==NULL");

  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@MJFILIBP@CActorInstance?3?3__GetLoopCount?$CI@
  0000f	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00014	83 c4 04	 add	 esp, 4

; 780  : 		return -1;

  00017	83 c8 ff	 or	 eax, -1

; 784  : }

  0001a	c3		 ret	 0
$LN2@GetLoopCou:

; 781  : 	}
; 782  : 
; 783  : 	return m_pkCurRaceMotionData->GetLoopCount();

  0001b	e9 00 00 00 00	 jmp	 ?GetLoopCount@CRaceMotionData@@QBEHXZ ; CRaceMotionData::GetLoopCount
?__GetLoopCount@CActorInstance@@IAEHXZ ENDP		; CActorInstance::__GetLoopCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__GetCurrentMotionKey@CActorInstance@@IAEKXZ
_TEXT	SEGMENT
?__GetCurrentMotionKey@CActorInstance@@IAEKXZ PROC	; CActorInstance::__GetCurrentMotionKey, COMDAT
; _this$ = ecx

; 421  : 	return m_kCurMotNode.dwMotionKey;

  00000	8b 81 14 03 00
	00		 mov	 eax, DWORD PTR [ecx+788]

; 422  : }

  00006	c3		 ret	 0
?__GetCurrentMotionKey@CActorInstance@@IAEKXZ ENDP	; CActorInstance::__GetCurrentMotionKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ
_TEXT	SEGMENT
?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ PROC	; CActorInstance::__GetCurrentMotionIndex, COMDAT
; _this$ = ecx

; 416  : 	return GET_MOTION_INDEX(m_kCurMotNode.dwMotionKey);

  00000	8b 81 14 03 00
	00		 mov	 eax, DWORD PTR [ecx+788]
  00006	c1 e8 08	 shr	 eax, 8

; 417  : }

  00009	c3		 ret	 0
?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ ENDP	; CActorInstance::__GetCurrentMotionIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsComboAttacking@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsComboAttacking@CActorInstance@@IAE_NXZ PROC	; CActorInstance::__IsComboAttacking, COMDAT
; _this$ = ecx

; 816  : 	if (0 == m_dwcurComboIndex)

  00000	83 b9 f8 03 00
	00 00		 cmp	 DWORD PTR [ecx+1016], 0
  00007	0f 95 c0	 setne	 al

; 817  : 		return false;
; 818  : 
; 819  : 	return true;
; 820  : }

  0000a	c3		 ret	 0
?__IsComboAttacking@CActorInstance@@IAE_NXZ ENDP	; CActorInstance::__IsComboAttacking
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__CanNextComboAttack@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__CanNextComboAttack@CActorInstance@@IAE_NXZ PROC	; CActorInstance::__CanNextComboAttack, COMDAT
; _this$ = ecx

; 802  : 	if (!m_pkCurRaceMotionData)

  00000	8b 89 24 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1060]
  00006	85 c9		 test	 ecx, ecx
  00008	75 10		 jne	 SHORT $LN2@CanNextCom

; 803  : 	{
; 804  : 		TraceError("CActorInstance::__CanNextComboAttack() - m_pkCurRaceMotionData==NULL");

  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@EBECGAL@CActorInstance?3?3__CanNextComboA@
  0000f	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00014	83 c4 04	 add	 esp, 4

; 805  : 		return false;

  00017	32 c0		 xor	 al, al

; 809  : 		return false;
; 810  : 
; 811  : 	return true;
; 812  : }

  00019	c3		 ret	 0
$LN2@CanNextCom:

; 806  : 	}
; 807  : 
; 808  : 	if (!m_pkCurRaceMotionData->IsComboInputTimeData())

  0001a	e8 00 00 00 00	 call	 ?IsComboInputTimeData@CRaceMotionData@@QBEHXZ ; CRaceMotionData::IsComboInputTimeData
  0001f	85 c0		 test	 eax, eax
  00021	0f 95 c0	 setne	 al

; 809  : 		return false;
; 810  : 
; 811  : 	return true;
; 812  : }

  00024	c3		 ret	 0
?__CanNextComboAttack@CActorInstance@@IAE_NXZ ENDP	; CActorInstance::__CanNextComboAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__CanAttack@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__CanAttack@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__CanAttack, COMDAT
; _this$ = ecx

; 788  : 	if (!m_pkCurRaceMotionData)

  00000	8b 89 24 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1060]
  00006	85 c9		 test	 ecx, ecx
  00008	75 10		 jne	 SHORT $LN2@CanAttack

; 789  : 	{
; 790  : 		TraceError("CActorInstance::__CanAttack() - m_pkCurRaceMotionData==NULL");

  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@CHLCPNIC@CActorInstance?3?3__CanAttack?$CI?$CJ?5?9@
  0000f	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00014	83 c4 04	 add	 esp, 4

; 791  : 		return false;

  00017	32 c0		 xor	 al, al

; 795  : 		return false;
; 796  : 
; 797  : 	return true;
; 798  : }

  00019	c3		 ret	 0
$LN2@CanAttack:

; 792  : 	}
; 793  : 
; 794  : 	if (!m_pkCurRaceMotionData->isAttackingMotion())

  0001a	e8 00 00 00 00	 call	 ?isAttackingMotion@CRaceMotionData@@QBEHXZ ; CRaceMotionData::isAttackingMotion
  0001f	85 c0		 test	 eax, eax
  00021	0f 95 c0	 setne	 al

; 795  : 		return false;
; 796  : 
; 797  : 	return true;
; 798  : }

  00024	c3		 ret	 0
?__CanAttack@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__CanAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsStandUpMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsStandUpMotion@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__IsStandUpMotion, COMDAT
; _this$ = ecx

; 907  : 	return (__GetMotionType()==CRaceMotionData::TYPE_STANDUP);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 09	 cmp	 eax, 9
  00008	0f 94 c0	 sete	 al

; 908  : }

  0000b	c3		 ret	 0
?__IsStandUpMotion@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__IsStandUpMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsDieMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsDieMotion@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__IsDieMotion, COMDAT
; _this$ = ecx

; 898  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 899  : 	if (__IsKnockDownMotion())

  00003	e8 00 00 00 00	 call	 ?__IsKnockDownMotion@CActorInstance@@IAE_NXZ ; CActorInstance::__IsKnockDownMotion
  00008	84 c0		 test	 al, al
  0000a	74 04		 je	 SHORT $LN2@IsDieMotio

; 900  : 		return true;

  0000c	b0 01		 mov	 al, 1
  0000e	5e		 pop	 esi

; 903  : }

  0000f	c3		 ret	 0
$LN2@IsDieMotio:

; 901  : 
; 902  : 	return (__GetMotionType()==CRaceMotionData::TYPE_DIE);

  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00017	83 f8 07	 cmp	 eax, 7
  0001a	5e		 pop	 esi
  0001b	0f 94 c0	 sete	 al

; 903  : }

  0001e	c3		 ret	 0
?__IsDieMotion@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__IsDieMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsKnockDownMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsKnockDownMotion@CActorInstance@@IAE_NXZ PROC	; CActorInstance::__IsKnockDownMotion, COMDAT
; _this$ = ecx

; 894  : 	return (__GetMotionType()==CRaceMotionData::TYPE_KNOCKDOWN);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 06	 cmp	 eax, 6
  00008	0f 94 c0	 sete	 al

; 895  : }

  0000b	c3		 ret	 0
?__IsKnockDownMotion@CActorInstance@@IAE_NXZ ENDP	; CActorInstance::__IsKnockDownMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsDamageMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsDamageMotion@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__IsDamageMotion, COMDAT
; _this$ = ecx

; 889  : 	return (__GetMotionType()==CRaceMotionData::TYPE_DAMAGE);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 05	 cmp	 eax, 5
  00008	0f 94 c0	 sete	 al

; 890  : }

  0000b	c3		 ret	 0
?__IsDamageMotion@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__IsDamageMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsComboAttackMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsComboAttackMotion@CActorInstance@@IAE_NXZ PROC	; CActorInstance::__IsComboAttackMotion, COMDAT
; _this$ = ecx

; 883  : 	return (__GetMotionType()==CRaceMotionData::TYPE_COMBO);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 04	 cmp	 eax, 4
  00008	0f 94 c0	 sete	 al

; 884  : }

  0000b	c3		 ret	 0
?__IsComboAttackMotion@CActorInstance@@IAE_NXZ ENDP	; CActorInstance::__IsComboAttackMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsAttackMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsAttackMotion@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__IsAttackMotion, COMDAT
; _this$ = ecx

; 878  : 	return (__GetMotionType()==CRaceMotionData::TYPE_ATTACK);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 03	 cmp	 eax, 3
  00008	0f 94 c0	 sete	 al

; 879  : }

  0000b	c3		 ret	 0
?__IsAttackMotion@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__IsAttackMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsMoveMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsMoveMotion@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__IsMoveMotion, COMDAT
; _this$ = ecx

; 873  : 	return (__GetMotionType()==CRaceMotionData::TYPE_MOVE);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 02	 cmp	 eax, 2
  00008	0f 94 c0	 sete	 al

; 874  : }

  0000b	c3		 ret	 0
?__IsMoveMotion@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__IsMoveMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsWaitMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsWaitMotion@CActorInstance@@IAE_NXZ PROC		; CActorInstance::__IsWaitMotion, COMDAT
; _this$ = ecx

; 868  : 	return (__GetMotionType()==CRaceMotionData::TYPE_WAIT);

  00000	e8 00 00 00 00	 call	 ?__GetMotionType@CActorInstance@@IAEIXZ ; CActorInstance::__GetMotionType
  00005	83 f8 01	 cmp	 eax, 1
  00008	0f 94 c0	 sete	 al

; 869  : }

  0000b	c3		 ret	 0
?__IsWaitMotion@CActorInstance@@IAE_NXZ ENDP		; CActorInstance::__IsWaitMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__HasMotionFlyEvent@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
_c_pData$1 = -4						; size = 4
?__HasMotionFlyEvent@CActorInstance@@IAE_NXZ PROC	; CActorInstance::__HasMotionFlyEvent, COMDAT
; _this$ = ecx

; 850  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 851  : 	if (!m_pkCurRaceMotionData)

  00008	8b 8f 24 04 00
	00		 mov	 ecx, DWORD PTR [edi+1060]
  0000e	85 c9		 test	 ecx, ecx
  00010	74 43		 je	 SHORT $LN10@HasMotionF

; 852  : 		return true;
; 853  : 
; 854  : 	for (DWORD i = 0; i < m_pkCurRaceMotionData->GetMotionEventDataCount(); ++i)

  00012	33 f6		 xor	 esi, esi
  00014	e8 00 00 00 00	 call	 ?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ; CRaceMotionData::GetMotionEventDataCount
  00019	85 c0		 test	 eax, eax
  0001b	74 30		 je	 SHORT $LN14@HasMotionF
  0001d	0f 1f 00	 npad	 3
$LL4@HasMotionF:

; 855  : 	{
; 856  : 		const CRaceMotionData::TMotionEventData * c_pData;
; 857  : 		if (!m_pkCurRaceMotionData->GetMotionEventDataPointer(i, &c_pData))

  00020	8b 8f 24 04 00
	00		 mov	 ecx, DWORD PTR [edi+1060]
  00026	8d 45 fc	 lea	 eax, DWORD PTR _c_pData$1[ebp]
  00029	50		 push	 eax
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z ; CRaceMotionData::GetMotionEventDataPointer
  00030	85 c0		 test	 eax, eax
  00032	74 09		 je	 SHORT $LN2@HasMotionF

; 858  : 			continue;
; 859  : 
; 860  : 		if (c_pData->iType == CRaceMotionData::MOTION_EVENT_TYPE_FLY)

  00034	8b 45 fc	 mov	 eax, DWORD PTR _c_pData$1[ebp]
  00037	83 78 04 06	 cmp	 DWORD PTR [eax+4], 6
  0003b	74 18		 je	 SHORT $LN10@HasMotionF
$LN2@HasMotionF:

; 852  : 		return true;
; 853  : 
; 854  : 	for (DWORD i = 0; i < m_pkCurRaceMotionData->GetMotionEventDataCount(); ++i)

  0003d	8b 8f 24 04 00
	00		 mov	 ecx, DWORD PTR [edi+1060]
  00043	46		 inc	 esi
  00044	e8 00 00 00 00	 call	 ?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ; CRaceMotionData::GetMotionEventDataCount
  00049	3b f0		 cmp	 esi, eax
  0004b	72 d3		 jb	 SHORT $LL4@HasMotionF
$LN14@HasMotionF:
  0004d	5f		 pop	 edi

; 862  : 	}
; 863  : 	return false;

  0004e	32 c0		 xor	 al, al

; 864  : }

  00050	5e		 pop	 esi
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
$LN10@HasMotionF:
  00055	5f		 pop	 edi

; 861  : 			return true;

  00056	b0 01		 mov	 al, 1

; 864  : }

  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?__HasMotionFlyEvent@CActorInstance@@IAE_NXZ ENDP	; CActorInstance::__HasMotionFlyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__IsNeedFlyTargetMotion@CActorInstance@@IAE_NXZ
_TEXT	SEGMENT
_c_pData$1 = -4						; size = 4
?__IsNeedFlyTargetMotion@CActorInstance@@IAE_NXZ PROC	; CActorInstance::__IsNeedFlyTargetMotion, COMDAT
; _this$ = ecx

; 823  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 824  : 	if (!m_pkCurRaceMotionData)

  00008	8b 8f 24 04 00
	00		 mov	 ecx, DWORD PTR [edi+1060]
  0000e	85 c9		 test	 ecx, ecx
  00010	74 54		 je	 SHORT $LN16@IsNeedFlyT

; 825  : 		return true;
; 826  : 
; 827  : 	for (DWORD i = 0; i < m_pkCurRaceMotionData->GetMotionEventDataCount(); ++i)

  00012	33 f6		 xor	 esi, esi
  00014	e8 00 00 00 00	 call	 ?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ; CRaceMotionData::GetMotionEventDataCount
  00019	85 c0		 test	 eax, eax
  0001b	74 41		 je	 SHORT $LN20@IsNeedFlyT
  0001d	0f 1f 00	 npad	 3
$LL4@IsNeedFlyT:

; 828  : 	{
; 829  : 		const CRaceMotionData::TMotionEventData * c_pData;
; 830  : 		if (!m_pkCurRaceMotionData->GetMotionEventDataPointer(i, &c_pData))

  00020	8b 8f 24 04 00
	00		 mov	 ecx, DWORD PTR [edi+1060]
  00026	8d 45 fc	 lea	 eax, DWORD PTR _c_pData$1[ebp]
  00029	50		 push	 eax
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z ; CRaceMotionData::GetMotionEventDataPointer
  00030	85 c0		 test	 eax, eax
  00032	74 1a		 je	 SHORT $LN2@IsNeedFlyT

; 831  : 			continue;
; 832  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 833  : 		if (c_pData->iType == CRaceMotionData::MOTION_EVENT_TYPE_UNK11)

  00034	8b 45 fc	 mov	 eax, DWORD PTR _c_pData$1[ebp]
  00037	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003a	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0003d	74 27		 je	 SHORT $LN16@IsNeedFlyT

; 834  : 			return true;
; 835  : #endif
; 836  : 		if (c_pData->iType == CRaceMotionData::MOTION_EVENT_TYPE_WARP)

  0003f	83 f8 09	 cmp	 eax, 9
  00042	74 22		 je	 SHORT $LN16@IsNeedFlyT

; 837  : 			return true;
; 838  : 
; 839  : 		if (c_pData->iType == CRaceMotionData::MOTION_EVENT_TYPE_FLY)

  00044	83 f8 06	 cmp	 eax, 6
  00047	74 1d		 je	 SHORT $LN16@IsNeedFlyT

; 840  : 			return true;
; 841  : 
; 842  : 		if (c_pData->iType == CRaceMotionData::MOTION_EVENT_TYPE_EFFECT_TO_TARGET)

  00049	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0004c	74 18		 je	 SHORT $LN16@IsNeedFlyT
$LN2@IsNeedFlyT:

; 825  : 		return true;
; 826  : 
; 827  : 	for (DWORD i = 0; i < m_pkCurRaceMotionData->GetMotionEventDataCount(); ++i)

  0004e	8b 8f 24 04 00
	00		 mov	 ecx, DWORD PTR [edi+1060]
  00054	46		 inc	 esi
  00055	e8 00 00 00 00	 call	 ?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ; CRaceMotionData::GetMotionEventDataCount
  0005a	3b f0		 cmp	 esi, eax
  0005c	72 c2		 jb	 SHORT $LL4@IsNeedFlyT
$LN20@IsNeedFlyT:
  0005e	5f		 pop	 edi

; 844  : 	}
; 845  : 
; 846  : 	return false;

  0005f	32 c0		 xor	 al, al

; 847  : }

  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
$LN16@IsNeedFlyT:
  00066	5f		 pop	 edi

; 843  : 			return true;

  00067	b0 01		 mov	 al, 1

; 847  : }

  00069	5e		 pop	 esi
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?__IsNeedFlyTargetMotion@CActorInstance@@IAE_NXZ ENDP	; CActorInstance::__IsNeedFlyTargetMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__GetMotionType@CActorInstance@@IAEIXZ
_TEXT	SEGMENT
?__GetMotionType@CActorInstance@@IAEIXZ PROC		; CActorInstance::__GetMotionType, COMDAT
; _this$ = ecx

; 9    : 	if (!m_pkCurRaceMotionData)

  00000	8b 89 24 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1060]
  00006	85 c9		 test	 ecx, ecx
  00008	75 03		 jne	 SHORT $LN2@GetMotionT

; 10   : 		return CRaceMotionData::TYPE_NONE;

  0000a	33 c0		 xor	 eax, eax

; 13   : }

  0000c	c3		 ret	 0
$LN2@GetMotionT:

; 11   : 
; 12   : 	return m_pkCurRaceMotionData->GetType();

  0000d	e9 00 00 00 00	 jmp	 ?GetType@CRaceMotionData@@QBEIXZ ; CRaceMotionData::GetType
?__GetMotionType@CActorInstance@@IAEIXZ ENDP		; CActorInstance::__GetMotionType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__BindMotionData@CActorInstance@@IAE_NK@Z
_TEXT	SEGMENT
_dwMotionKey$ = 8					; size = 4
?__BindMotionData@CActorInstance@@IAE_NK@Z PROC		; CActorInstance::__BindMotionData, COMDAT
; _this$ = ecx

; 763  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 764  : 	if (!m_pkCurRaceData->GetMotionDataPointer(dwMotionKey, &m_pkCurRaceMotionData))

  00007	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  0000d	8d be 24 04 00
	00		 lea	 edi, DWORD PTR [esi+1060]
  00013	57		 push	 edi
  00014	ff 75 08	 push	 DWORD PTR _dwMotionKey$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetMotionDataPointer@CRaceData@@QAEHKPAPAVCRaceMotionData@@@Z ; CRaceData::GetMotionDataPointer
  0001c	85 c0		 test	 eax, eax
  0001e	75 25		 jne	 SHORT $LN2@BindMotion

; 765  : 	{
; 766  : 		Tracen("Failed to bind motion.");

  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@MJFHAINF@Failed?5to?5bind?5motion?4@
  00025	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0002a	83 c4 04	 add	 esp, 4

; 767  : 		m_pkCurRaceMotionData=NULL;

  0002d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 768  : 		m_dwcurComboIndex=0;

  00033	c7 86 f8 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+1016], 0

; 769  : 		return false;

  0003d	32 c0		 xor	 al, al
  0003f	5f		 pop	 edi

; 773  : }

  00040	5e		 pop	 esi
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
$LN2@BindMotion:
  00045	5f		 pop	 edi

; 770  : 	}
; 771  : 
; 772  : 	return true;

  00046	b0 01		 mov	 al, 1

; 773  : }

  00048	5e		 pop	 esi
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?__BindMotionData@CActorInstance@@IAE_NK@Z ENDP		; CActorInstance::__BindMotionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__ClearMotion@CActorInstance@@IAEXXZ
_TEXT	SEGMENT
?__ClearMotion@CActorInstance@@IAEXXZ PROC		; CActorInstance::__ClearMotion, COMDAT
; _this$ = ecx

; 628  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 629  : 	__HideWeaponTrace();

  00003	e8 00 00 00 00	 call	 ?__HideWeaponTrace@CActorInstance@@IAEXXZ ; CActorInstance::__HideWeaponTrace
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1009 :         return _Mysize() == 0;

  00008	8b 8e 0c 03 00
	00		 mov	 ecx, DWORD PTR [esi+780]
  0000e	85 c9		 test	 ecx, ecx

; 1468 :         while (!empty()) {

  00010	74 15		 je	 SHORT $LN34@ClearMotio
$LL6@ClearMotio:

; 1143 :         if (--_Mysize() == 0) {

  00012	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00015	89 86 0c 03 00
	00		 mov	 DWORD PTR [esi+780], eax
  0001b	8b c8		 mov	 ecx, eax
  0001d	85 c0		 test	 eax, eax
  0001f	75 f1		 jne	 SHORT $LL6@ClearMotio

; 1144 :             _Myoff() = 0;

  00021	89 86 08 03 00
	00		 mov	 DWORD PTR [esi+776], eax
$LN34@ClearMotio:
  00027	57		 push	 edi

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00028	8b be 04 03 00
	00		 mov	 edi, DWORD PTR [esi+772]
  0002e	85 ff		 test	 edi, edi
  00030	74 1d		 je	 SHORT $LN9@ClearMotio
$LL29@ClearMotio:

; 1473 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00032	8b 86 00 03 00
	00		 mov	 eax, DWORD PTR [esi+768]
  00038	4f		 dec	 edi
  00039	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  0003c	85 c0		 test	 eax, eax
  0003e	74 0b		 je	 SHORT $LN11@ClearMotio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00040	6a 18		 push	 24			; 00000018H
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00048	83 c4 08	 add	 esp, 8
$LN11@ClearMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0004b	85 ff		 test	 edi, edi
  0004d	75 e3		 jne	 SHORT $LL29@ClearMotio
$LN9@ClearMotio:

; 1474 :                 _Getal().deallocate(_Map()[_Block], _DEQUESIZ);
; 1475 :                 _Destroy_in_place(_Map()[_Block]);
; 1476 :             }
; 1477 :         }
; 1478 : 
; 1479 :         if (_Map() != _Mapptr()) {

  0004f	8b 8e 00 03 00
	00		 mov	 ecx, DWORD PTR [esi+768]
  00055	5f		 pop	 edi
  00056	85 c9		 test	 ecx, ecx
  00058	74 13		 je	 SHORT $LN12@ClearMotio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005a	8b 86 04 03 00
	00		 mov	 eax, DWORD PTR [esi+772]
  00060	c1 e0 02	 shl	 eax, 2
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006a	83 c4 08	 add	 esp, 8
$LN12@ClearMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1483 :         _Mapsize() = 0;

  0006d	c7 86 04 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+772], 0

; 1484 :         _Map()     = _Mapptr();

  00077	c7 86 00 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+768], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 632  : 	m_kCurMotNode.dwcurFrame=0;

  00081	c7 86 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+792], 0

; 633  : 	m_kCurMotNode.dwFrameCount=0;

  0008b	c7 86 1c 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+796], 0

; 634  : 	m_kCurMotNode.uSkill=0;

  00095	c7 86 30 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+816], 0

; 635  : 	m_kCurMotNode.iLoopCount=0;

  0009f	c7 86 2c 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+812], 0

; 636  : 	m_kCurMotNode.iMotionType=MOTION_TYPE_NONE;

  000a9	c7 86 10 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+784], 0
  000b3	5e		 pop	 esi

; 637  : }

  000b4	c3		 ret	 0
?__ClearMotion@CActorInstance@@IAEXXZ ENDP		; CActorInstance::__ClearMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z
_TEXT	SEGMENT
_dwMotKey$1$ = 8					; size = 4
_c_rkSetMotData$ = 8					; size = 4
tv567 = 12						; size = 4
tv565 = 12						; size = 4
tv541 = 12						; size = 4
tv511 = 12						; size = 4
_dwRandMotKey$ = 12					; size = 4
?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z PROC ; CActorInstance::__SetMotion, COMDAT
; _this$ = ecx

; 641  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 	DWORD dwMotKey = dwRandMotKey;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwRandMotKey$[ebp]
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _c_rkSetMotData$[ebp]
  0000e	89 45 08	 mov	 DWORD PTR _dwMotKey$1$[ebp], eax

; 643  : 
; 644  : 	if (dwMotKey == 0)

  00011	85 c0		 test	 eax, eax
  00013	75 0a		 jne	 SHORT $LN2@SetMotion

; 645  : 		dwMotKey = GetRandomMotionKey(c_rkSetMotData.dwMotKey);

  00015	ff 37		 push	 DWORD PTR [edi]
  00017	e8 00 00 00 00	 call	 ?GetRandomMotionKey@CActorInstance@@IAEKK@Z ; CActorInstance::GetRandomMotionKey
  0001c	89 45 08	 mov	 DWORD PTR _dwMotKey$1$[ebp], eax
$LN2@SetMotion:

; 646  : 
; 647  : 	UINT uNextMot = GET_MOTION_INDEX(c_rkSetMotData.dwMotKey);

  0001f	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00021	c1 e9 08	 shr	 ecx, 8
  00024	0f b7 c9	 movzx	 ecx, cx
  00027	8b c1		 mov	 eax, ecx
  00029	8b f1		 mov	 esi, ecx

; 648  : 
; 649  : 	if (IsDead())

  0002b	8b cb		 mov	 ecx, ebx
  0002d	89 45 0c	 mov	 DWORD PTR tv541[ebp], eax
  00030	e8 00 00 00 00	 call	 ?IsDead@CActorInstance@@QAEHXZ ; CActorInstance::IsDead
  00035	85 c0		 test	 eax, eax
  00037	74 14		 je	 SHORT $LN4@SetMotion

; 650  : 	{
; 651  : 		if (uNextMot!=CRaceMotionData::NAME_DAMAGE_FLYING && uNextMot!=CRaceMotionData::NAME_DAMAGE_FLYING_BACK && uNextMot!=CRaceMotionData::NAME_DEAD && uNextMot!=CRaceMotionData::NAME_DEAD_BACK)

  00039	83 fe 06	 cmp	 esi, 6
  0003c	74 0f		 je	 SHORT $LN4@SetMotion
  0003e	83 fe 09	 cmp	 esi, 9
  00041	74 0a		 je	 SHORT $LN4@SetMotion
  00043	83 fe 0b	 cmp	 esi, 11			; 0000000bH
  00046	74 05		 je	 SHORT $LN4@SetMotion
  00048	83 fe 0c	 cmp	 esi, 12			; 0000000cH
  0004b	75 5b		 jne	 SHORT $LN30@SetMotion
$LN4@SetMotion:

; 652  : 			return 0;
; 653  : 	}
; 654  : 	if (IsUsingSkill())

  0004d	8b cb		 mov	 ecx, ebx
  0004f	e8 00 00 00 00	 call	 ?IsUsingSkill@CActorInstance@@QAEHXZ ; CActorInstance::IsUsingSkill
  00054	85 c0		 test	 eax, eax
  00056	74 07		 je	 SHORT $LN5@SetMotion

; 655  : 	{
; 656  : 		__OnStop();

  00058	8b cb		 mov	 ecx, ebx
  0005a	e8 00 00 00 00	 call	 ?__OnStop@CActorInstance@@QAEXXZ ; CActorInstance::__OnStop
$LN5@SetMotion:

; 657  : 	}
; 658  : 
; 659  : 	if (__IsStandUpMotion())

  0005f	8b cb		 mov	 ecx, ebx
  00061	e8 00 00 00 00	 call	 ?__IsStandUpMotion@CActorInstance@@IAE_NXZ ; CActorInstance::__IsStandUpMotion
  00066	84 c0		 test	 al, al
  00068	74 07		 je	 SHORT $LN6@SetMotion

; 660  : 	{
; 661  : 		__OnStop();

  0006a	8b cb		 mov	 ecx, ebx
  0006c	e8 00 00 00 00	 call	 ?__OnStop@CActorInstance@@QAEXXZ ; CActorInstance::__OnStop
$LN6@SetMotion:

; 662  : 	}
; 663  : 
; 664  : 
; 665  : 	if (__IsMoveMotion())

  00071	8b cb		 mov	 ecx, ebx
  00073	e8 00 00 00 00	 call	 ?__IsMoveMotion@CActorInstance@@IAE_NXZ ; CActorInstance::__IsMoveMotion
  00078	84 c0		 test	 al, al
  0007a	74 58		 je	 SHORT $LN7@SetMotion

; 666  : 	{
; 667  : 		if (uNextMot==CRaceMotionData::NAME_DAMAGE || uNextMot==CRaceMotionData::NAME_DAMAGE_BACK || uNextMot==CRaceMotionData::NAME_DAMAGE_FLYING || uNextMot==CRaceMotionData::NAME_DAMAGE_FLYING_BACK)

  0007c	83 fe 05	 cmp	 esi, 5
  0007f	74 0f		 je	 SHORT $LN10@SetMotion
  00081	83 fe 08	 cmp	 esi, 8
  00084	74 0a		 je	 SHORT $LN10@SetMotion
  00086	83 fe 06	 cmp	 esi, 6
  00089	74 05		 je	 SHORT $LN10@SetMotion
  0008b	83 fe 09	 cmp	 esi, 9
  0008e	75 21		 jne	 SHORT $LN11@SetMotion
$LN10@SetMotion:

; 668  : 		{
; 669  : 			if (!m_isMain)

  00090	83 bb 4c 04 00
	00 00		 cmp	 DWORD PTR [ebx+1100], 0
  00097	75 18		 jne	 SHORT $LN11@SetMotion

; 670  : 			{
; 671  : 				Logn(0, "Only MainActor can receive damage when moving");

  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@FJGPJKBE@Only?5MainActor?5can?5receive?5dama@
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 ?Logn@@YAXIPBD@Z	; Logn
  000a5	83 c4 08	 add	 esp, 8
$LN30@SetMotion:

; 760  : }

  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	33 c0		 xor	 eax, eax
  000ac	5b		 pop	 ebx
  000ad	5d		 pop	 ebp
  000ae	c2 08 00	 ret	 8
$LN11@SetMotion:

; 672  : 				return false;
; 673  : 			}
; 674  : 		}
; 675  : 
; 676  : 		if (uNextMot!=CRaceMotionData::NAME_RUN &&
; 677  : 			uNextMot!=CRaceMotionData::NAME_WALK &&

  000b1	83 fe 03	 cmp	 esi, 3
  000b4	74 3c		 je	 SHORT $LN13@SetMotion
  000b6	83 fe 02	 cmp	 esi, 2
  000b9	74 37		 je	 SHORT $LN13@SetMotion
  000bb	0f b7 47 10	 movzx	 eax, WORD PTR [edi+16]
  000bf	8b cb		 mov	 ecx, ebx
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?__IsMovingSkill@CActorInstance@@IAEHG@Z ; CActorInstance::__IsMovingSkill
  000c7	85 c0		 test	 eax, eax
  000c9	75 27		 jne	 SHORT $LN13@SetMotion

; 678  : 			!__IsMovingSkill(c_rkSetMotData.uSkill))
; 679  : 		{
; 680  : 			__OnStop();

  000cb	8b cb		 mov	 ecx, ebx
  000cd	e8 00 00 00 00	 call	 ?__OnStop@CActorInstance@@QAEXXZ ; CActorInstance::__OnStop

; 681  : 		}
; 682  : 	}

  000d2	eb 1e		 jmp	 SHORT $LN13@SetMotion
$LN7@SetMotion:

; 683  : 	else
; 684  : 	{
; 685  : 		if (uNextMot==CRaceMotionData::NAME_RUN || __IsMovingSkill(c_rkSetMotData.uSkill))

  000d4	66 83 7d 0c 03	 cmp	 WORD PTR tv541[ebp], 3
  000d9	74 10		 je	 SHORT $LN14@SetMotion
  000db	0f b7 47 10	 movzx	 eax, WORD PTR [edi+16]
  000df	8b cb		 mov	 ecx, ebx
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?__IsMovingSkill@CActorInstance@@IAEHG@Z ; CActorInstance::__IsMovingSkill
  000e7	85 c0		 test	 eax, eax
  000e9	74 07		 je	 SHORT $LN13@SetMotion
$LN14@SetMotion:

; 686  : 		{
; 687  : 			__OnMove();

  000eb	8b cb		 mov	 ecx, ebx
  000ed	e8 00 00 00 00	 call	 ?__OnMove@CActorInstance@@QAEXXZ ; CActorInstance::__OnMove
$LN13@SetMotion:

; 688  : 		}
; 689  : 	}
; 690  : 
; 691  : 
; 692  : 	if (__IsHiding())

  000f2	8b cb		 mov	 ecx, ebx
  000f4	e8 00 00 00 00	 call	 ?__IsHiding@CActorInstance@@IAEHXZ ; CActorInstance::__IsHiding
  000f9	85 c0		 test	 eax, eax
  000fb	74 07		 je	 SHORT $LN15@SetMotion

; 693  : 	{
; 694  : 		__ShowEvent();

  000fd	8b cb		 mov	 ecx, ebx
  000ff	e8 00 00 00 00	 call	 ?__ShowEvent@CActorInstance@@IAEXXZ ; CActorInstance::__ShowEvent
$LN15@SetMotion:

; 695  : 	}
; 696  : 
; 697  : 
; 698  : 	if (-1 != m_iFishingEffectID)

  00104	8b 83 64 04 00
	00		 mov	 eax, DWORD PTR [ebx+1124]
  0010a	83 f8 ff	 cmp	 eax, -1
  0010d	74 16		 je	 SHORT $LN16@SetMotion

; 699  : 	{
; 700  : 		CEffectManager& rkEftMgr=CEffectManager::Instance();
; 701  :  		rkEftMgr.DeactiveEffectInstance(m_iFishingEffectID);

  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ?DeactiveEffectInstance@CEffectManager@@QAEXK@Z ; CEffectManager::DeactiveEffectInstance

; 702  : 
; 703  : 		m_iFishingEffectID = -1;

  0011b	c7 83 64 04 00
	00 ff ff ff ff	 mov	 DWORD PTR [ebx+1124], -1
$LN16@SetMotion:

; 704  : 	}
; 705  : 
; 706  : 	if (m_pkHorse)

  00125	8b b3 50 05 00
	00		 mov	 esi, DWORD PTR [ebx+1360]
  0012b	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00130	85 f6		 test	 esi, esi
  00132	0f 84 f8 00 00
	00		 je	 $LN17@SetMotion

; 707  : 	{
; 708  : 		WORD wMotionIndex = GET_MOTION_INDEX(dwMotKey);

  00138	8b 55 08	 mov	 edx, DWORD PTR _dwMotKey$1$[ebp]
  0013b	8b c2		 mov	 eax, edx

; 709  : 		WORD wMotionSubIndex = GET_MOTION_SUB_INDEX(dwMotKey);
; 710  : 		DWORD dwChildMotKey = MAKE_RANDOM_MOTION_KEY(m_pkHorse->m_wcurMotionMode, wMotionIndex, wMotionSubIndex);

  0013d	0f b6 b6 34 03
	00 00		 movzx	 esi, BYTE PTR [esi+820]
  00144	c1 e8 08	 shr	 eax, 8
  00147	0f b7 c8	 movzx	 ecx, ax
  0014a	c1 e6 10	 shl	 esi, 16			; 00000010H
  0014d	0b f1		 or	 esi, ecx
  0014f	0f b6 c2	 movzx	 eax, dl
  00152	c1 e6 08	 shl	 esi, 8

; 711  : 
; 712  : 		if (CRaceMotionData::NAME_DEAD == wMotionIndex)

  00155	51		 push	 ecx
  00156	0b f0		 or	 esi, eax
  00158	c7 45 0c 0b 00
	00 00		 mov	 DWORD PTR tv511[ebp], 11 ; 0000000bH
  0015f	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00162	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00167	50		 push	 eax
  00168	66 39 4d 0c	 cmp	 WORD PTR tv511[ebp], cx
  0016c	75 0a		 jne	 SHORT $LN19@SetMotion

; 713  : 			CGraphicThingInstance::ChangeMotion(dwMotKey, c_rkSetMotData.iLoopCount, c_rkSetMotData.fSpeedRatio);

  0016e	52		 push	 edx
  0016f	8b cb		 mov	 ecx, ebx
  00171	e8 00 00 00 00	 call	 ?ChangeMotion@CGraphicThingInstance@@QAE_NKHM@Z ; CGraphicThingInstance::ChangeMotion
  00176	eb 13		 jmp	 SHORT $LN20@SetMotion
$LN19@SetMotion:

; 714  : 		else
; 715  : 			CGraphicThingInstance::SetMotion(dwMotKey, c_rkSetMotData.fBlendTime, c_rkSetMotData.iLoopCount, c_rkSetMotData.fSpeedRatio);

  00178	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  0017d	51		 push	 ecx
  0017e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00183	8b cb		 mov	 ecx, ebx
  00185	52		 push	 edx
  00186	e8 00 00 00 00	 call	 ?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z ; CGraphicThingInstance::SetMotion
$LN20@SetMotion:

; 716  : 
; 717  : 		m_pkHorse->SetMotion(dwChildMotKey, c_rkSetMotData.fBlendTime, c_rkSetMotData.iLoopCount, c_rkSetMotData.fSpeedRatio);

  0018b	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00190	51		 push	 ecx
  00191	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00196	ff 77 0c	 push	 DWORD PTR [edi+12]
  00199	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  0019e	51		 push	 ecx
  0019f	8b 8b 50 05 00
	00		 mov	 ecx, DWORD PTR [ebx+1360]
  001a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001aa	56		 push	 esi
  001ab	e8 00 00 00 00	 call	 ?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z ; CGraphicThingInstance::SetMotion

; 718  : 		m_pkHorse->__BindMotionData(dwChildMotKey);

  001b0	8b 8b 50 05 00
	00		 mov	 ecx, DWORD PTR [ebx+1360]
  001b6	56		 push	 esi
  001b7	e8 00 00 00 00	 call	 ?__BindMotionData@CActorInstance@@IAE_NK@Z ; CActorInstance::__BindMotionData

; 719  : 
; 720  : 		if (c_rkSetMotData.iLoopCount)
; 721  : 			m_pkHorse->m_kCurMotNode.iMotionType = MOTION_TYPE_ONCE;
; 722  : 		else
; 723  : 			m_pkHorse->m_kCurMotNode.iMotionType = MOTION_TYPE_LOOP;
; 724  : 
; 725  : 		m_pkHorse->m_kCurMotNode.dwFrameCount	= m_pkHorse->GetMotionDuration(dwChildMotKey) / (1.0f / g_fGameFPS);

  001bc	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  001bf	8b 83 50 05 00
	00		 mov	 eax, DWORD PTR [ebx+1360]
  001c5	f7 d9		 neg	 ecx
  001c7	56		 push	 esi
  001c8	1b c9		 sbb	 ecx, ecx
  001ca	83 c1 02	 add	 ecx, 2
  001cd	89 88 10 03 00
	00		 mov	 DWORD PTR [eax+784], ecx
  001d3	8b 8b 50 05 00
	00		 mov	 ecx, DWORD PTR [ebx+1360]
  001d9	e8 00 00 00 00	 call	 ?GetMotionDuration@CActorInstance@@IAEMK@Z ; CActorInstance::GetMotionDuration
  001de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e6	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?g_fGameFPS@@3MA
  001ee	f3 0f 11 45 0c	 movss	 DWORD PTR tv567[ebp], xmm0
  001f3	d8 75 0c	 fdiv	 DWORD PTR tv567[ebp]
  001f6	d9 5d 0c	 fstp	 DWORD PTR tv565[ebp]
  001f9	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR tv565[ebp]
  001fe	e8 00 00 00 00	 call	 __ftoui3
  00203	8b 8b 50 05 00
	00		 mov	 ecx, DWORD PTR [ebx+1360]
  00209	89 81 1c 03 00
	00		 mov	 DWORD PTR [ecx+796], eax

; 726  : 		m_pkHorse->m_kCurMotNode.dwcurFrame		= 0;

  0020f	8b 83 50 05 00
	00		 mov	 eax, DWORD PTR [ebx+1360]
  00215	c7 80 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+792], 0

; 727  : 		m_pkHorse->m_kCurMotNode.dwMotionKey	= dwChildMotKey;

  0021f	8b 83 50 05 00
	00		 mov	 eax, DWORD PTR [ebx+1360]
  00225	89 b0 14 03 00
	00		 mov	 DWORD PTR [eax+788], esi

; 728  : 	}

  0022b	8b 75 08	 mov	 esi, DWORD PTR _dwMotKey$1$[ebp]
  0022e	eb 1f		 jmp	 SHORT $LN18@SetMotion
$LN17@SetMotion:

; 729  : 	else
; 730  : 	{
; 731  : 		CGraphicThingInstance::SetMotion(dwMotKey, c_rkSetMotData.fBlendTime, c_rkSetMotData.iLoopCount, c_rkSetMotData.fSpeedRatio);

  00230	8b 75 08	 mov	 esi, DWORD PTR _dwMotKey$1$[ebp]
  00233	51		 push	 ecx
  00234	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00239	ff 77 0c	 push	 DWORD PTR [edi+12]
  0023c	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  00241	51		 push	 ecx
  00242	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00247	8b cb		 mov	 ecx, ebx
  00249	56		 push	 esi
  0024a	e8 00 00 00 00	 call	 ?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z ; CGraphicThingInstance::SetMotion
$LN18@SetMotion:

; 732  : 	}
; 733  : 
; 734  : 	__HideWeaponTrace();

  0024f	8b cb		 mov	 ecx, ebx
  00251	e8 00 00 00 00	 call	 ?__HideWeaponTrace@CActorInstance@@IAEXXZ ; CActorInstance::__HideWeaponTrace

; 735  : 
; 736  : 	if (__BindMotionData(dwMotKey))

  00256	56		 push	 esi
  00257	8b cb		 mov	 ecx, ebx
  00259	e8 00 00 00 00	 call	 ?__BindMotionData@CActorInstance@@IAE_NK@Z ; CActorInstance::__BindMotionData
  0025e	84 c0		 test	 al, al
  00260	74 6a		 je	 SHORT $LN26@SetMotion

; 737  : 	{
; 738  : 		int iLoopCount = __GetLoopCount();

  00262	8b cb		 mov	 ecx, ebx
  00264	e8 00 00 00 00	 call	 ?__GetLoopCount@CActorInstance@@IAEHXZ ; CActorInstance::__GetLoopCount

; 739  : 		SetMotionLoopCount(iLoopCount);

  00269	50		 push	 eax
  0026a	8b cb		 mov	 ecx, ebx
  0026c	e8 00 00 00 00	 call	 ?SetMotionLoopCount@CActorInstance@@QAEXH@Z ; CActorInstance::SetMotionLoopCount

; 740  : 
; 741  : 		if (__CanAttack())

  00271	8b cb		 mov	 ecx, ebx
  00273	e8 00 00 00 00	 call	 ?__CanAttack@CActorInstance@@IAE_NXZ ; CActorInstance::__CanAttack
  00278	84 c0		 test	 al, al
  0027a	74 30		 je	 SHORT $LN29@SetMotion

; 742  : 		{
; 743  : 			__ShowWeaponTrace();

  0027c	8b cb		 mov	 ecx, ebx
  0027e	e8 00 00 00 00	 call	 ?__ShowWeaponTrace@CActorInstance@@IAEXXZ ; CActorInstance::__ShowWeaponTrace
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  00283	8b b3 48 05 00
	00		 mov	 esi, DWORD PTR [ebx+1352]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 745  : 			m_HitDataMap.clear();

  00289	8d bb 48 05 00
	00		 lea	 edi, DWORD PTR [ebx+1352]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  0028f	8b cf		 mov	 ecx, edi
  00291	ff 76 04	 push	 DWORD PTR [esi+4]
  00294	57		 push	 edi
  00295	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@QBUSHitData@NRaceData@@V?$map@PAVCActorInstance@@MU?$less@PAVCActorInstance@@@std@@V?$allocator@U?$pair@QAVCActorInstance@@M@std@@@3@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<NRaceData::SHitData const * const,std::map<CActorInstance *,float,std::less<CActorInstance *>,std::allocator<std::pair<CActorInstance * const,float> > > >,void *> > >

; 1449 :         _Head->_Parent  = _Head;

  0029a	89 76 04	 mov	 DWORD PTR [esi+4], esi

; 1450 :         _Head->_Left    = _Head;

  0029d	89 36		 mov	 DWORD PTR [esi], esi

; 1451 :         _Head->_Right   = _Head;

  0029f	89 76 08	 mov	 DWORD PTR [esi+8], esi
  002a2	8b 75 08	 mov	 esi, DWORD PTR _dwMotKey$1$[ebp]

; 1452 :         _Scary->_Mysize = 0;

  002a5	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
$LN29@SetMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 749  : 		if (__IsComboAttacking())

  002ac	8b cb		 mov	 ecx, ebx
  002ae	e8 00 00 00 00	 call	 ?__IsComboAttacking@CActorInstance@@IAE_NXZ ; CActorInstance::__IsComboAttacking
  002b3	84 c0		 test	 al, al
  002b5	74 15		 je	 SHORT $LN26@SetMotion

; 750  : 		{
; 751  : 			if (!__CanNextComboAttack())

  002b7	8b cb		 mov	 ecx, ebx
  002b9	e8 00 00 00 00	 call	 ?__CanNextComboAttack@CActorInstance@@IAE_NXZ ; CActorInstance::__CanNextComboAttack
  002be	84 c0		 test	 al, al
  002c0	75 0a		 jne	 SHORT $LN26@SetMotion

; 752  : 			{
; 753  : 				m_dwcurComboIndex = 0;

  002c2	c7 83 f8 03 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+1016], 0
$LN26@SetMotion:
  002cc	5f		 pop	 edi

; 754  : 
; 755  : 			}
; 756  : 		}
; 757  : 	}
; 758  : 
; 759  : 	return dwMotKey;

  002cd	8b c6		 mov	 eax, esi

; 760  : }

  002cf	5e		 pop	 esi
  002d0	5b		 pop	 ebx
  002d1	5d		 pop	 ebp
  002d2	c2 08 00	 ret	 8
?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z ENDP ; CActorInstance::__SetMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?PushMotion@CActorInstance@@IAEXW4EMotionPushType@1@KMM@Z
_TEXT	SEGMENT
_MotionNode$ = -24					; size = 24
_iMotionType$ = 8					; size = 4
_dwMotionKey$ = 12					; size = 4
_fBlendTime$ = 16					; size = 4
_fSpeedRatio$ = 20					; size = 4
?PushMotion@CActorInstance@@IAEXW4EMotionPushType@1@KMM@Z PROC ; CActorInstance::PushMotion, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi

; 262  : 	if (!CheckMotionThingIndex(dwMotionKey))

  00007	8b 75 0c	 mov	 esi, DWORD PTR _dwMotionKey$[ebp]
  0000a	57		 push	 edi
  0000b	56		 push	 esi
  0000c	8b f9		 mov	 edi, ecx
  0000e	e8 00 00 00 00	 call	 ?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z ; CGraphicThingInstance::CheckMotionThingIndex
  00013	84 c0		 test	 al, al
  00015	75 1c		 jne	 SHORT $LN2@PushMotion

; 263  : 	{
; 264  : 		Tracef(" Error - Not found want to using motion : %d\n", GET_MOTION_INDEX(dwMotionKey));

  00017	c1 ee 08	 shr	 esi, 8
  0001a	0f b7 c6	 movzx	 eax, si
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@FPMNJLLG@?5Error?5?9?5Not?5found?5want?5to?5usin@
  00023	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00028	83 c4 08	 add	 esp, 8
  0002b	5f		 pop	 edi

; 278  : }

  0002c	5e		 pop	 esi
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
$LN2@PushMotion:

; 265  : 		return;
; 266  : 	}
; 267  : 
; 268  : 	TReservingMotionNode MotionNode;
; 269  : 
; 270  : 	MotionNode.iMotionType = iMotionType;
; 271  : 	MotionNode.dwMotionKey = dwMotionKey;
; 272  : 	MotionNode.fStartTime = GetLastMotionTime(fBlendTime);

  00033	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00038	8b 45 08	 mov	 eax, DWORD PTR _iMotionType$[ebp]
  0003b	51		 push	 ecx
  0003c	8b cf		 mov	 ecx, edi
  0003e	89 45 e8	 mov	 DWORD PTR _MotionNode$[ebp], eax
  00041	89 75 fc	 mov	 DWORD PTR _MotionNode$[ebp+20], esi
  00044	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00049	e8 00 00 00 00	 call	 ?GetLastMotionTime@CActorInstance@@IAEMM@Z ; CActorInstance::GetLastMotionTime

; 273  : 	MotionNode.fBlendTime = fBlendTime;

  0004e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]

; 274  : 	MotionNode.fSpeedRatio = fSpeedRatio;
; 275  : 	MotionNode.fDuration = GetMotionDuration(dwMotionKey);

  00053	8b cf		 mov	 ecx, edi
  00055	f3 0f 11 45 f0	 movss	 DWORD PTR _MotionNode$[ebp+8], xmm0
  0005a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  0005f	d9 5d ec	 fstp	 DWORD PTR _MotionNode$[ebp+4]
  00062	56		 push	 esi
  00063	f3 0f 11 45 f8	 movss	 DWORD PTR _MotionNode$[ebp+16], xmm0
  00068	e8 00 00 00 00	 call	 ?GetMotionDuration@CActorInstance@@IAEMK@Z ; CActorInstance::GetMotionDuration
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1122 :         _Emplace_back_internal(_Val);

  0006d	8d 45 e8	 lea	 eax, DWORD PTR _MotionNode$[ebp]
  00070	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 277  : 	m_MotionDeque.push_back(MotionNode);

  00071	8d 8f fc 02 00
	00		 lea	 ecx, DWORD PTR [edi+764]
  00077	d9 5d f4	 fstp	 DWORD PTR _MotionNode$[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1122 :         _Emplace_back_internal(_Val);

  0007a	e8 00 00 00 00	 call	 ??$_Emplace_back_internal@ABUSReservingMotionNode@CActorInstance@@@?$deque@USReservingMotionNode@CActorInstance@@V?$allocator@USReservingMotionNode@CActorInstance@@@std@@@std@@AAEXABUSReservingMotionNode@CActorInstance@@@Z ; std::deque<CActorInstance::SReservingMotionNode,std::allocator<CActorInstance::SReservingMotionNode> >::_Emplace_back_internal<CActorInstance::SReservingMotionNode const &>
  0007f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 278  : }

  00080	5e		 pop	 esi
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 10 00	 ret	 16			; 00000010H
?PushMotion@CActorInstance@@IAEXW4EMotionPushType@1@KMM@Z ENDP ; CActorInstance::PushMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?InterceptMotion@CActorInstance@@IAE_NW4EMotionPushType@1@GMIM@Z
_TEXT	SEGMENT
_kSetMotData$ = -24					; size = 20
_dwMotionKey$ = -4					; size = 4
_fDuration$ = 8						; size = 4
_iMotionType$ = 8					; size = 4
_wMotion$ = 12						; size = 2
tv160 = 16						; size = 4
_fBlendTime$ = 16					; size = 4
_uSkill$ = 20						; size = 4
_fSpeedRatio$ = 24					; size = 4
?InterceptMotion@CActorInstance@@IAE_NW4EMotionPushType@1@GMIM@Z PROC ; CActorInstance::InterceptMotion, COMDAT
; _this$ = ecx

; 330  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 331  : 	if (!m_pkCurRaceData)

  00009	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  0000f	85 c9		 test	 ecx, ecx
  00011	75 2e		 jne	 SHORT $LN2@InterceptM

; 332  : 	{
; 333  : 		Tracef("CActorInstance::InterceptMotion(iMotionType=%d, wMotion=%d, fBlendTime=%f) - m_pkCurRaceData=NULL", iMotionType, wMotion, fBlendTime);

  00013	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00018	83 ec 08	 sub	 esp, 8
  0001b	0f b7 45 0c	 movzx	 eax, WORD PTR _wMotion$[ebp]
  0001f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00022	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00027	50		 push	 eax
  00028	ff 75 08	 push	 DWORD PTR _iMotionType$[ebp]
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0GC@LNLDMJJ@CActorInstance?3?3InterceptMotion@
  00030	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00035	83 c4 14	 add	 esp, 20			; 00000014H

; 334  : 		return false;

  00038	32 c0		 xor	 al, al
  0003a	5e		 pop	 esi

; 388  : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 14 00	 ret	 20			; 00000014H
$LN2@InterceptM:
  00041	57		 push	 edi

; 335  : 	}
; 336  : 
; 337  : 	MOTION_KEY dwMotionKey;
; 338  : 	if (!m_pkCurRaceData->GetMotionKey(m_wcurMotionMode, wMotion, &dwMotionKey))

  00042	8b 7d 0c	 mov	 edi, DWORD PTR _wMotion$[ebp]
  00045	8d 45 fc	 lea	 eax, DWORD PTR _dwMotionKey$[ebp]
  00048	50		 push	 eax
  00049	0f b7 86 34 03
	00 00		 movzx	 eax, WORD PTR [esi+820]
  00050	57		 push	 edi
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?GetMotionKey@CRaceData@@QAEHGGPAK@Z ; CRaceData::GetMotionKey
  00057	85 c0		 test	 eax, eax
  00059	75 38		 jne	 SHORT $LN3@InterceptM

; 339  : 	{
; 340  : 		Tracenf("CActorInstance::InterceptMotion(iLoopType=%d, wMotionMode=%d, wMotion=%d, fBlendTime=%f) - GetMotionKey(m_wcurMotionMode=%d, wMotion=%d, &MotionKey) ERROR",

  0005b	0f b7 8e 34 03
	00 00		 movzx	 ecx, WORD PTR [esi+820]
  00062	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00067	0f b7 c7	 movzx	 eax, di
  0006a	50		 push	 eax
  0006b	51		 push	 ecx
  0006c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0006f	83 ec 08	 sub	 esp, 8
  00072	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00077	50		 push	 eax
  00078	51		 push	 ecx
  00079	ff 75 08	 push	 DWORD PTR _iMotionType$[ebp]
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0JL@GEIDCHAJ@CActorInstance?3?3InterceptMotion@
  00081	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00086	83 c4 20	 add	 esp, 32			; 00000020H

; 341  : 			iMotionType, m_wcurMotionMode, wMotion, fBlendTime, m_wcurMotionMode, wMotion);
; 342  : 		return false;

  00089	32 c0		 xor	 al, al
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi

; 388  : }

  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 14 00	 ret	 20			; 00000014H
$LN3@InterceptM:
  00093	53		 push	 ebx

; 343  : 	}
; 344  : 
; 345  : 	__ClearMotion();

  00094	8b ce		 mov	 ecx, esi
  00096	e8 00 00 00 00	 call	 ?__ClearMotion@CActorInstance@@IAEXXZ ; CActorInstance::__ClearMotion

; 346  : 
; 347  : 	int iLoopCount;
; 348  : 	if (MOTION_TYPE_ONCE == iMotionType)
; 349  : 		iLoopCount=1;
; 350  : 	else
; 351  : 		iLoopCount=0;
; 352  : 
; 353  : 	SSetMotionData kSetMotData;
; 354  : 	kSetMotData.dwMotKey=dwMotionKey;

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _dwMotionKey$[ebp]

; 355  : 	kSetMotData.fBlendTime=fBlendTime;
; 356  : 	kSetMotData.iLoopCount=iLoopCount;
; 357  : 	kSetMotData.fSpeedRatio=fSpeedRatio;
; 358  : 	kSetMotData.uSkill=uSkill;
; 359  : 
; 360  : 	DWORD dwRealMotionKey = __SetMotion(kSetMotData);

  0009e	8b ce		 mov	 ecx, esi
  000a0	8b 5d 08	 mov	 ebx, DWORD PTR _iMotionType$[ebp]
  000a3	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  000a8	89 45 e8	 mov	 DWORD PTR _kSetMotData$[ebp], eax
  000ab	33 c0		 xor	 eax, eax
  000ad	83 fb 01	 cmp	 ebx, 1
  000b0	f3 0f 11 45 f0	 movss	 DWORD PTR _kSetMotData$[ebp+8], xmm0
  000b5	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  000ba	0f 94 c0	 sete	 al
  000bd	f3 0f 11 45 ec	 movss	 DWORD PTR _kSetMotData$[ebp+4], xmm0
  000c2	89 45 f4	 mov	 DWORD PTR _kSetMotData$[ebp+12], eax
  000c5	8b 45 14	 mov	 eax, DWORD PTR _uSkill$[ebp]
  000c8	89 45 f8	 mov	 DWORD PTR _kSetMotData$[ebp+16], eax
  000cb	8d 45 e8	 lea	 eax, DWORD PTR _kSetMotData$[ebp]
  000ce	6a 00		 push	 0
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z ; CActorInstance::__SetMotion
  000d6	8b f8		 mov	 edi, eax

; 361  : 
; 362  : 	if (0 == dwRealMotionKey)

  000d8	85 ff		 test	 edi, edi
  000da	75 0b		 jne	 SHORT $LN6@InterceptM

; 363  : 		return false;

  000dc	5b		 pop	 ebx
  000dd	5f		 pop	 edi
  000de	32 c0		 xor	 al, al
  000e0	5e		 pop	 esi

; 388  : }

  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 14 00	 ret	 20			; 00000014H
$LN6@InterceptM:

; 364  : 
; 365  : 	if (m_pFlyEventHandler)

  000e7	83 be b4 02 00
	00 00		 cmp	 DWORD PTR [esi+692], 0
  000ee	74 16		 je	 SHORT $LN8@InterceptM

; 366  : 	{
; 367  : 		if (__IsNeedFlyTargetMotion())

  000f0	8b ce		 mov	 ecx, esi
  000f2	e8 00 00 00 00	 call	 ?__IsNeedFlyTargetMotion@CActorInstance@@IAE_NXZ ; CActorInstance::__IsNeedFlyTargetMotion
  000f7	84 c0		 test	 al, al
  000f9	74 0b		 je	 SHORT $LN8@InterceptM

; 368  : 		{
; 369  : 			m_pFlyEventHandler->OnSetFlyTarget();

  000fb	8b 8e b4 02 00
	00		 mov	 ecx, DWORD PTR [esi+692]
  00101	8b 01		 mov	 eax, DWORD PTR [ecx]
  00103	ff 50 04	 call	 DWORD PTR [eax+4]
$LN8@InterceptM:

; 370  : 		}
; 371  : 	}
; 372  : 
; 373  : 	assert(NULL != m_pkCurRaceMotionData);
; 374  : 
; 375  : 	// float fDuration=GetMotionDuration(dwMotionKey)/fSpeedRatio;
; 376  : 	float fDuration = GetMotionDuration(dwRealMotionKey) / fSpeedRatio;

  00106	57		 push	 edi
  00107	8b ce		 mov	 ecx, esi
  00109	e8 00 00 00 00	 call	 ?GetMotionDuration@CActorInstance@@IAEMK@Z ; CActorInstance::GetMotionDuration
  0010e	d8 75 18	 fdiv	 DWORD PTR _fSpeedRatio$[ebp]

; 377  : 
; 378  : 	m_kCurMotNode.iMotionType = iMotionType;
; 379  : 	m_kCurMotNode.fStartTime = GetLocalTime();

  00111	8b ce		 mov	 ecx, esi
  00113	89 9e 10 03 00
	00		 mov	 DWORD PTR [esi+784], ebx
  00119	d9 5d 08	 fstp	 DWORD PTR _fDuration$[ebp]
  0011c	e8 00 00 00 00	 call	 ?GetLocalTime@CGraphicThingInstance@@QAEMXZ ; CGraphicThingInstance::GetLocalTime

; 380  : 	m_kCurMotNode.fEndTime = m_kCurMotNode.fStartTime + fDuration;

  00121	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fDuration$[ebp]
  00126	d9 5d 10	 fstp	 DWORD PTR tv160[ebp]
  00129	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR tv160[ebp]
  0012e	f3 0f 11 8e 20
	03 00 00	 movss	 DWORD PTR [esi+800], xmm1
  00136	f3 0f 58 c8	 addss	 xmm1, xmm0

; 381  : 	m_kCurMotNode.dwMotionKey = dwRealMotionKey;

  0013a	89 be 14 03 00
	00		 mov	 DWORD PTR [esi+788], edi

; 382  : 	m_kCurMotNode.dwcurFrame = 0;

  00140	c7 86 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+792], 0
  0014a	f3 0f 11 8e 24
	03 00 00	 movss	 DWORD PTR [esi+804], xmm1

; 383  : 	m_kCurMotNode.dwFrameCount = fDuration / (1.0f / g_fGameFPS);

  00152	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0015a	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR ?g_fGameFPS@@3MA
  00162	f3 0f 5e c1	 divss	 xmm0, xmm1
  00166	e8 00 00 00 00	 call	 __ftoui3

; 384  : 	m_kCurMotNode.uSkill = uSkill;
; 385  : 	m_kCurMotNode.fSpeedRatio = fSpeedRatio;

  0016b	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00170	89 86 1c 03 00
	00		 mov	 DWORD PTR [esi+796], eax
  00176	8b 45 14	 mov	 eax, DWORD PTR _uSkill$[ebp]
  00179	5b		 pop	 ebx
  0017a	89 86 30 03 00
	00		 mov	 DWORD PTR [esi+816], eax

; 386  : 
; 387  : 	return true;

  00180	b0 01		 mov	 al, 1
  00182	5f		 pop	 edi
  00183	f3 0f 11 86 28
	03 00 00	 movss	 DWORD PTR [esi+808], xmm0
  0018b	5e		 pop	 esi

; 388  : }

  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c2 14 00	 ret	 20			; 00000014H
?InterceptMotion@CActorInstance@@IAE_NW4EMotionPushType@1@GMIM@Z ENDP ; CActorInstance::InterceptMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?GetMotionDuration@CActorInstance@@IAEMK@Z
_TEXT	SEGMENT
_pMotion$ = -4						; size = 4
_dwMotionKey$ = 8					; size = 4
?GetMotionDuration@CActorInstance@@IAEMK@Z PROC		; CActorInstance::GetMotionDuration, COMDAT
; _this$ = ecx

; 569  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 570  : 	CGraphicThing * pMotion;
; 571  : 
; 572  : 	if (!GetMotionThingPointer(dwMotionKey, &pMotion))

  00005	8b 75 08	 mov	 esi, DWORD PTR _dwMotionKey$[ebp]
  00008	8d 45 fc	 lea	 eax, DWORD PTR _pMotion$[ebp]
  0000b	50		 push	 eax
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z ; CGraphicThingInstance::GetMotionThingPointer
  00012	84 c0		 test	 al, al
  00014	75 23		 jne	 SHORT $LN2@GetMotionD

; 573  : 	{
; 574  : 		Tracenf("CActorInstance::GetMotionDuration - Cannot get motion: %d / %d",

  00016	8b c6		 mov	 eax, esi
  00018	c1 ee 18	 shr	 esi, 24			; 00000018H
  0001b	c1 e8 08	 shr	 eax, 8
  0001e	0f b7 c0	 movzx	 eax, ax
  00021	50		 push	 eax
  00022	56		 push	 esi
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@CBIMEEGJ@CActorInstance?3?3GetMotionDurati@
  00028	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@GetMotionD:

; 590  : }

  00030	d9 ee		 fldz
  00032	5e		 pop	 esi
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN2@GetMotionD:

; 575  : 			GET_MOTION_MODE(dwMotionKey), GET_MOTION_INDEX(dwMotionKey));
; 576  : 		return 0.0f;
; 577  : 	}
; 578  : 
; 579  : 	if (0 == pMotion->GetMotionCount())

  00039	8b 4d fc	 mov	 ecx, DWORD PTR _pMotion$[ebp]
  0003c	e8 00 00 00 00	 call	 ?GetMotionCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetMotionCount
  00041	85 c0		 test	 eax, eax
  00043	74 eb		 je	 SHORT $LN5@GetMotionD

; 580  : 	{
; 581  : #ifdef _DEBUG
; 582  : 		Tracenf("CActorInstance::GetMotionDuration - Invalid Motion Key : %d, %d, %d",
; 583  : 				GET_MOTION_MODE(dwMotionKey), GET_MOTION_INDEX(dwMotionKey), GET_MOTION_SUB_INDEX(dwMotionKey));
; 584  : #endif
; 585  : 		return 0.0f;
; 586  : 	}
; 587  : 
; 588  : 	CGrannyMotion * pGrannyMotion = pMotion->GetMotionPointer(0);

  00045	8b 4d fc	 mov	 ecx, DWORD PTR _pMotion$[ebp]
  00048	6a 00		 push	 0
  0004a	e8 00 00 00 00	 call	 ?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z ; CGraphicThing::GetMotionPointer

; 589  : 	return pGrannyMotion->GetDuration();

  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ?GetDuration@CGrannyMotion@@QBEMXZ ; CGrannyMotion::GetDuration
  00056	5e		 pop	 esi

; 590  : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?GetMotionDuration@CActorInstance@@IAEMK@Z ENDP		; CActorInstance::GetMotionDuration
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?GetLastMotionTime@CActorInstance@@IAEMM@Z
_TEXT	SEGMENT
_fBlendTime$ = 8					; size = 4
?GetLastMotionTime@CActorInstance@@IAEMM@Z PROC		; CActorInstance::GetLastMotionTime, COMDAT
; _this$ = ecx

; 554  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx
  00005	83 ec 08	 sub	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1009 :         return _Mysize() == 0;

  00008	8b 8a 0c 03 00
	00		 mov	 ecx, DWORD PTR [edx+780]
  0000e	85 c9		 test	 ecx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 555  : 	if (m_MotionDeque.empty())

  00010	75 25		 jne	 SHORT $LN2@GetLastMot

; 556  : 	{
; 557  : 		if (MOTION_TYPE_ONCE == m_kCurMotNode.iMotionType)

  00012	83 ba 10 03 00
	00 01		 cmp	 DWORD PTR [edx+784], 1
  00019	75 0f		 jne	 SHORT $LN3@GetLastMot

; 558  : 			return (m_kCurMotNode.fEndTime - fBlendTime);

  0001b	d9 82 24 03 00
	00		 fld	 DWORD PTR [edx+804]

; 566  : }

  00021	d8 65 08	 fsub	 DWORD PTR _fBlendTime$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
$LN3@GetLastMot:

; 559  : 
; 560  : 		return GetLocalTime();

  0002a	8b ca		 mov	 ecx, edx
  0002c	e8 00 00 00 00	 call	 ?GetLocalTime@CGraphicThingInstance@@QAEMXZ ; CGraphicThingInstance::GetLocalTime

; 566  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
$LN2@GetLastMot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  00037	8b 82 08 03 00
	00		 mov	 eax, DWORD PTR [edx+776]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003d	48		 dec	 eax
  0003e	03 c8		 add	 ecx, eax
  00040	8b 82 04 03 00
	00		 mov	 eax, DWORD PTR [edx+772]
  00046	48		 dec	 eax
  00047	23 c8		 and	 ecx, eax

; 1043 :         return *(_Unchecked_begin() + static_cast<difference_type>(_Pos));

  00049	8b 82 00 03 00
	00		 mov	 eax, DWORD PTR [edx+768]
  0004f	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 565  : 	return rMotionNode.fStartTime + rMotionNode.fDuration - fBlendTime;

  00052	d9 40 0c	 fld	 DWORD PTR [eax+12]
  00055	d8 40 04	 fadd	 DWORD PTR [eax+4]

; 566  : }

  00058	d8 65 08	 fsub	 DWORD PTR _fBlendTime$[ebp]
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
?GetLastMotionTime@CActorInstance@@IAEMM@Z ENDP		; CActorInstance::GetLastMotionTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?GetRandomMotionKey@CActorInstance@@IAEKK@Z
_TEXT	SEGMENT
_wIndex$1$ = -12					; size = 4
tv377 = -8						; size = 4
_c_pMotionVector$ = -4					; size = 4
_dwMotionKey$ = 8					; size = 4
?GetRandomMotionKey@CActorInstance@@IAEKK@Z PROC	; CActorInstance::GetRandomMotionKey, COMDAT
; _this$ = ecx

; 593  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 594  : 	WORD wMode = GET_MOTION_MODE(dwMotionKey);

  00006	8b 45 08	 mov	 eax, DWORD PTR _dwMotionKey$[ebp]
  00009	8b d0		 mov	 edx, eax

; 595  : 	WORD wIndex = GET_MOTION_INDEX(dwMotionKey);
; 596  : 
; 597  : 	const CRaceData::TMotionVector * c_pMotionVector;
; 598  : 	if (m_pkCurRaceData->GetMotionVectorPointer(wMode, wIndex, &c_pMotionVector))

  0000b	8b 89 20 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1056]
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	c1 e8 08	 shr	 eax, 8
  00017	8d 75 fc	 lea	 esi, DWORD PTR _c_pMotionVector$[ebp]
  0001a	0f b7 c0	 movzx	 eax, ax
  0001d	56		 push	 esi
  0001e	c1 ea 18	 shr	 edx, 24			; 00000018H
  00021	50		 push	 eax
  00022	52		 push	 edx
  00023	89 55 f8	 mov	 DWORD PTR tv377[ebp], edx
  00026	89 45 f4	 mov	 DWORD PTR _wIndex$1$[ebp], eax
  00029	e8 00 00 00 00	 call	 ?GetMotionVectorPointer@CRaceData@@QAEHGGPAPBV?$vector@USMotion@CRaceData@@V?$allocator@USMotion@CRaceData@@@std@@@std@@@Z ; CRaceData::GetMotionVectorPointer
  0002e	85 c0		 test	 eax, eax
  00030	74 5d		 je	 SHORT $LN3@GetRandomM
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00032	8b 45 fc	 mov	 eax, DWORD PTR _c_pMotionVector$[ebp]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	2b 08		 sub	 ecx, DWORD PTR [eax]
  0003a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0003f	f7 e9		 imul	 ecx
  00041	d1 fa		 sar	 edx, 1
  00043	8b c2		 mov	 eax, edx
  00045	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00048	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 599  : 	if (c_pMotionVector->size() > 1)

  0004a	83 f8 01	 cmp	 eax, 1
  0004d	76 40		 jbe	 SHORT $LN3@GetRandomM

; 600  : 	{
; 601  : 		int iPercentage = random() % 100;

  0004f	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  00054	33 d2		 xor	 edx, edx
  00056	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0005b	f7 f1		 div	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _c_pMotionVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 602  : 		for (DWORD i = 0; i < c_pMotionVector->size(); ++i)

  00060	33 c9		 xor	 ecx, ecx
  00062	8b da		 mov	 ebx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00064	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00067	8b 38		 mov	 edi, DWORD PTR [eax]
  00069	2b f7		 sub	 esi, edi
  0006b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00070	f7 ee		 imul	 esi
  00072	d1 fa		 sar	 edx, 1
  00074	8b f2		 mov	 esi, edx
  00076	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00079	03 f2		 add	 esi, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 602  : 		for (DWORD i = 0; i < c_pMotionVector->size(); ++i)

  0007b	74 12		 je	 SHORT $LN3@GetRandomM
  0007d	0f 1f 00	 npad	 3
$LL4@GetRandomM:

; 603  : 		{
; 604  : 			const CRaceData::TMotion & c_rMotion = c_pMotionVector->at(i);
; 605  : 			iPercentage -= c_rMotion.byPercentage;

  00080	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  00083	2b d8		 sub	 ebx, eax

; 606  : 
; 607  : 			if (iPercentage < 0)

  00085	78 14		 js	 SHORT $LN19@GetRandomM

; 602  : 		for (DWORD i = 0; i < c_pMotionVector->size(); ++i)

  00087	41		 inc	 ecx
  00088	83 c7 0c	 add	 edi, 12			; 0000000cH
  0008b	3b ce		 cmp	 ecx, esi
  0008d	72 f1		 jb	 SHORT $LL4@GetRandomM
$LN3@GetRandomM:

; 610  : 
; 611  : 				// Temporary
; 612  : 				// m_kCurMotNode.fEndTime = m_kCurMotNode.fStartTime + GetMotionDuration(dwMotionKey);
; 613  : 				// Temporary
; 614  : 
; 615  : 				return dwMotionKey;
; 616  : 			}
; 617  : 		}
; 618  : 	}
; 619  : 
; 620  : 	return dwMotionKey;

  0008f	8b 45 08	 mov	 eax, DWORD PTR _dwMotionKey$[ebp]
  00092	5f		 pop	 edi

; 621  : }

  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
$LN19@GetRandomM:

; 608  : 			{
; 609  : 				dwMotionKey = MAKE_RANDOM_MOTION_KEY(wMode, wIndex, i);

  0009b	8b 45 f8	 mov	 eax, DWORD PTR tv377[ebp]
  0009e	0f b7 d0	 movzx	 edx, ax
  000a1	8b 45 f4	 mov	 eax, DWORD PTR _wIndex$1$[ebp]
  000a4	c1 e2 10	 shl	 edx, 16			; 00000010H
  000a7	0f b7 c0	 movzx	 eax, ax
  000aa	0b d0		 or	 edx, eax
  000ac	0f b6 c1	 movzx	 eax, cl
  000af	5f		 pop	 edi
  000b0	c1 e2 08	 shl	 edx, 8

; 621  : }

  000b3	5e		 pop	 esi
  000b4	0b c2		 or	 eax, edx
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 04 00	 ret	 4
?GetRandomMotionKey@CActorInstance@@IAEKK@Z ENDP	; CActorInstance::GetRandomMotionKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?CurrentMotionProcess@CActorInstance@@IAEXXZ
_TEXT	SEGMENT
tv640 = -12						; size = 4
tv635 = -12						; size = 4
tv615 = -12						; size = 4
tv563 = -12						; size = 4
tv620 = -8						; size = 4
tv545 = -8						; size = 4
_fCurrentTime$ = -4					; size = 4
?CurrentMotionProcess@CActorInstance@@IAEXXZ PROC	; CActorInstance::CurrentMotionProcess, COMDAT
; _this$ = ecx

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 151  : 	if (MOTION_TYPE_LOOP == m_kCurMotNode.iMotionType)

  00009	83 be 10 03 00
	00 02		 cmp	 DWORD PTR [esi+784], 2
  00010	75 18		 jne	 SHORT $LN5@CurrentMot

; 152  : 		if (m_kCurMotNode.dwcurFrame >= m_kCurMotNode.dwFrameCount)

  00012	8b 86 18 03 00
	00		 mov	 eax, DWORD PTR [esi+792]
  00018	3b 86 1c 03 00
	00		 cmp	 eax, DWORD PTR [esi+796]
  0001e	72 0a		 jb	 SHORT $LN5@CurrentMot

; 153  : 			m_kCurMotNode.dwcurFrame = 0;

  00020	c7 86 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+792], 0
$LN5@CurrentMot:

; 154  : 
; 155  : 	if (IsDead())

  0002a	e8 00 00 00 00	 call	 ?IsDead@CActorInstance@@QAEHXZ ; CActorInstance::IsDead
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 97 02 00
	00		 jne	 $LN25@CurrentMot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1009 :         return _Mysize() == 0;

  00037	39 86 0c 03 00
	00		 cmp	 DWORD PTR [esi+780], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 158  : 	if (!m_MotionDeque.empty())

  0003d	0f 85 8b 02 00
	00		 jne	 $LN25@CurrentMot

; 159  : 		return;
; 160  : 
; 161  : 	float fCurrentTime = GetLocalTime();

  00043	53		 push	 ebx
  00044	57		 push	 edi
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?GetLocalTime@CGraphicThingInstance@@QAEMXZ ; CGraphicThingInstance::GetLocalTime

; 162  : 
; 163  : 	DWORD dwMotionIndex=GET_MOTION_INDEX(m_kCurMotNode.dwMotionKey);

  0004c	8b 86 14 03 00
	00		 mov	 eax, DWORD PTR [esi+788]

; 164  : 
; 165  : 	bool isLooping=false;
; 166  : 
; 167  : 	if (m_pkCurRaceMotionData && m_pkCurRaceMotionData->IsLoopMotion())

  00052	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  00058	c1 e8 08	 shr	 eax, 8
  0005b	0f b7 d8	 movzx	 ebx, ax
  0005e	d9 5d fc	 fstp	 DWORD PTR _fCurrentTime$[ebp]
  00061	85 c9		 test	 ecx, ecx
  00063	0f 84 aa 01 00
	00		 je	 $LN55@CurrentMot
  00069	e8 00 00 00 00	 call	 ?IsLoopMotion@CRaceMotionData@@QBEHXZ ; CRaceMotionData::IsLoopMotion
  0006e	85 c0		 test	 eax, eax
  00070	0f 84 9d 01 00
	00		 je	 $LN55@CurrentMot

; 168  : 	{
; 169  : 		if (m_kCurMotNode.iLoopCount > 1 || m_kCurMotNode.iLoopCount == -1)

  00076	8b 86 2c 03 00
	00		 mov	 eax, DWORD PTR [esi+812]
  0007c	83 f8 01	 cmp	 eax, 1
  0007f	0f 8f 06 01 00
	00		 jg	 $LN11@CurrentMot
  00085	83 f8 ff	 cmp	 eax, -1
  00088	0f 84 fd 00 00
	00		 je	 $LN11@CurrentMot
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1009 :         return _Mysize() == 0;

  0008e	83 be f8 02 00
	00 00		 cmp	 DWORD PTR [esi+760], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 181  : 		else if (!m_kQue_kFlyTarget.empty())

  00095	0f 84 78 01 00
	00		 je	 $LN55@CurrentMot

; 182  : 		{
; 183  : 			if (!m_kBackupFlyTarget.IsObject())

  0009b	8d 8e d0 02 00
	00		 lea	 ecx, DWORD PTR [esi+720]
  000a1	e8 00 00 00 00	 call	 ?IsObject@CFlyTarget@@QAE_NXZ ; CFlyTarget::IsObject
  000a6	84 c0		 test	 al, al
  000a8	75 12		 jne	 SHORT $LN15@CurrentMot

; 184  : 			{
; 185  : 				m_kBackupFlyTarget = m_kFlyTarget;

  000aa	8d 86 b8 02 00
	00		 lea	 eax, DWORD PTR [esi+696]
  000b0	50		 push	 eax
  000b1	8d 8e d0 02 00
	00		 lea	 ecx, DWORD PTR [esi+720]
  000b7	e8 00 00 00 00	 call	 ??4CFlyTarget@@QAEAAV0@ABV0@@Z ; CFlyTarget::operator=
$LN15@CurrentMot:

; 186  : 			}
; 187  : 
; 188  : 			if (fCurrentTime - m_kCurMotNode.fStartTime > m_pkCurRaceMotionData->GetLoopEndTime())

  000bc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCurrentTime$[ebp]
  000c1	f3 0f 5c 86 20
	03 00 00	 subss	 xmm0, DWORD PTR [esi+800]
  000c9	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  000cf	f3 0f 11 45 f8	 movss	 DWORD PTR tv545[ebp], xmm0
  000d4	e8 00 00 00 00	 call	 ?GetLoopEndTime@CRaceMotionData@@QBEMXZ ; CRaceMotionData::GetLoopEndTime
  000d9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv545[ebp]
  000de	d9 5d f4	 fstp	 DWORD PTR tv640[ebp]
  000e1	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR tv640[ebp]
  000e5	0f 86 28 01 00
	00		 jbe	 $LN55@CurrentMot

; 189  : 			{
; 190  : 				m_kCurMotNode.dwcurFrame = DWORD(m_pkCurRaceMotionData->GetLoopStartTime() * g_fGameFPS);

  000eb	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  000f1	e8 00 00 00 00	 call	 ?GetLoopStartTime@CRaceMotionData@@QBEMXZ ; CRaceMotionData::GetLoopStartTime
  000f6	d8 0d 00 00 00
	00		 fmul	 DWORD PTR ?g_fGameFPS@@3MA ; g_fGameFPS
  000fc	d9 5d f4	 fstp	 DWORD PTR tv635[ebp]
  000ff	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv635[ebp]
  00104	e8 00 00 00 00	 call	 __ftoui3

; 191  : 				__SetLocalTime(m_kCurMotNode.fStartTime + m_pkCurRaceMotionData->GetLoopStartTime());

  00109	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  0010f	89 86 18 03 00
	00		 mov	 DWORD PTR [esi+792], eax
  00115	e8 00 00 00 00	 call	 ?GetLoopStartTime@CRaceMotionData@@QBEMXZ ; CRaceMotionData::GetLoopStartTime
  0011a	d8 86 20 03 00
	00		 fadd	 DWORD PTR [esi+800]
  00120	51		 push	 ecx
  00121	8b ce		 mov	 ecx, esi
  00123	d9 1c 24	 fstp	 DWORD PTR [esp]
  00126	e8 00 00 00 00	 call	 ?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z ; CGraphicThingInstance::__SetLocalTime
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0012b	8b 8e f0 02 00
	00		 mov	 ecx, DWORD PTR [esi+752]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 193  : 				SetFlyTarget(m_kQue_kFlyTarget.front());

  00131	8b 86 ec 02 00
	00		 mov	 eax, DWORD PTR [esi+748]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00137	49		 dec	 ecx
  00138	23 8e f4 02 00
	00		 and	 ecx, DWORD PTR [esi+756]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 193  : 				SetFlyTarget(m_kQue_kFlyTarget.front());

  0013e	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  00141	8b ce		 mov	 ecx, esi
  00143	e8 00 00 00 00	 call	 ?SetFlyTarget@CActorInstance@@QAEXABVCFlyTarget@@@Z ; CActorInstance::SetFlyTarget
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00148	8b 8e f0 02 00
	00		 mov	 ecx, DWORD PTR [esi+752]

; 1102 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Myoff() % _DEQUESIZ));

  0014e	8b 86 ec 02 00
	00		 mov	 eax, DWORD PTR [esi+748]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00154	49		 dec	 ecx
  00155	23 8e f4 02 00
	00		 and	 ecx, DWORD PTR [esi+756]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 699  :         _Ptr->~_Uty();

  0015b	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1102 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Myoff() % _DEQUESIZ));

  0015d	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 699  :         _Ptr->~_Uty();

  00160	8b 01		 mov	 eax, DWORD PTR [ecx]
  00162	ff 10		 call	 DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1103 :         if (--_Mysize() == 0) {

  00164	83 86 f8 02 00
	00 ff		 add	 DWORD PTR [esi+760], -1
  0016b	75 11		 jne	 SHORT $LN46@CurrentMot
  0016d	5f		 pop	 edi
  0016e	5b		 pop	 ebx

; 1104 :             _Myoff() = 0;

  0016f	c7 86 f4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+756], 0
  00179	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 239  : }

  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c3		 ret	 0
$LN46@CurrentMot:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1106 :             ++_Myoff();

  0017e	ff 86 f4 02 00
	00		 inc	 DWORD PTR [esi+756]
  00184	5f		 pop	 edi
  00185	5b		 pop	 ebx
  00186	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 239  : }

  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
$LN11@CurrentMot:

; 170  : 		{
; 171  : 			if (fCurrentTime - m_kCurMotNode.fStartTime > m_pkCurRaceMotionData->GetLoopEndTime())

  0018b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCurrentTime$[ebp]
  00190	f3 0f 5c 86 20
	03 00 00	 subss	 xmm0, DWORD PTR [esi+800]
  00198	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  0019e	f3 0f 11 45 f4	 movss	 DWORD PTR tv563[ebp], xmm0
  001a3	e8 00 00 00 00	 call	 ?GetLoopEndTime@CRaceMotionData@@QBEMXZ ; CRaceMotionData::GetLoopEndTime
  001a8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv563[ebp]
  001ad	d9 5d f8	 fstp	 DWORD PTR tv620[ebp]
  001b0	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR tv620[ebp]
  001b4	76 5d		 jbe	 SHORT $LN55@CurrentMot

; 172  : 			{
; 173  : 				m_kCurMotNode.dwcurFrame = DWORD(m_pkCurRaceMotionData->GetLoopStartTime() * g_fGameFPS);

  001b6	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  001bc	e8 00 00 00 00	 call	 ?GetLoopStartTime@CRaceMotionData@@QBEMXZ ; CRaceMotionData::GetLoopStartTime
  001c1	d8 0d 00 00 00
	00		 fmul	 DWORD PTR ?g_fGameFPS@@3MA ; g_fGameFPS
  001c7	d9 5d f4	 fstp	 DWORD PTR tv615[ebp]
  001ca	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv615[ebp]
  001cf	e8 00 00 00 00	 call	 __ftoui3

; 174  : 				__SetLocalTime(m_kCurMotNode.fStartTime + m_pkCurRaceMotionData->GetLoopStartTime());

  001d4	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  001da	89 86 18 03 00
	00		 mov	 DWORD PTR [esi+792], eax
  001e0	e8 00 00 00 00	 call	 ?GetLoopStartTime@CRaceMotionData@@QBEMXZ ; CRaceMotionData::GetLoopStartTime
  001e5	d8 86 20 03 00
	00		 fadd	 DWORD PTR [esi+800]
  001eb	51		 push	 ecx
  001ec	8b ce		 mov	 ecx, esi
  001ee	d9 1c 24	 fstp	 DWORD PTR [esp]
  001f1	e8 00 00 00 00	 call	 ?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z ; CGraphicThingInstance::__SetLocalTime

; 175  : 				if (-1 != m_kCurMotNode.iLoopCount)

  001f6	8b 86 2c 03 00
	00		 mov	 eax, DWORD PTR [esi+812]
  001fc	83 f8 ff	 cmp	 eax, -1
  001ff	0f 84 c7 00 00
	00		 je	 $LN58@CurrentMot

; 176  : 					--m_kCurMotNode.iLoopCount;

  00205	5f		 pop	 edi
  00206	48		 dec	 eax
  00207	5b		 pop	 ebx
  00208	89 86 2c 03 00
	00		 mov	 DWORD PTR [esi+812], eax
  0020e	5e		 pop	 esi

; 239  : }

  0020f	8b e5		 mov	 esp, ebp
  00211	5d		 pop	 ebp
  00212	c3		 ret	 0
$LN55@CurrentMot:

; 194  : 				m_kQue_kFlyTarget.pop_front();
; 195  : 
; 196  : 				isLooping=true;
; 197  : 			}
; 198  : 		}
; 199  : 	}
; 200  : 
; 201  : 	if (!isLooping)
; 202  : 	{
; 203  : 		if (fCurrentTime > m_kCurMotNode.fEndTime)

  00213	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCurrentTime$[ebp]
  00218	0f 2f 86 24 03
	00 00		 comiss	 xmm0, DWORD PTR [esi+804]
  0021f	0f 86 a7 00 00
	00		 jbe	 $LN58@CurrentMot

; 204  : 		{
; 205  : 			if (m_kBackupFlyTarget.IsValidTarget())

  00225	8d be d0 02 00
	00		 lea	 edi, DWORD PTR [esi+720]
  0022b	8b cf		 mov	 ecx, edi
  0022d	e8 00 00 00 00	 call	 ?IsValidTarget@CFlyTarget@@QAE_NXZ ; CFlyTarget::IsValidTarget
  00232	84 c0		 test	 al, al
  00234	74 13		 je	 SHORT $LN19@CurrentMot

; 206  : 			{
; 207  : 				m_kFlyTarget = m_kBackupFlyTarget;

  00236	57		 push	 edi
  00237	8d 8e b8 02 00
	00		 lea	 ecx, DWORD PTR [esi+696]
  0023d	e8 00 00 00 00	 call	 ??4CFlyTarget@@QAEAAV0@ABV0@@Z ; CFlyTarget::operator=

; 208  : 				m_kBackupFlyTarget.Clear();

  00242	8b cf		 mov	 ecx, edi
  00244	e8 00 00 00 00	 call	 ?Clear@CFlyTarget@@QAEXXZ ; CFlyTarget::Clear
$LN19@CurrentMot:

; 209  : 			}
; 210  : 
; 211  : 			////////////////////////////////////////////
; 212  : 
; 213  : 			if (MOTION_TYPE_ONCE == m_kCurMotNode.iMotionType)

  00249	8b 86 10 03 00
	00		 mov	 eax, DWORD PTR [esi+784]
  0024f	83 f8 01	 cmp	 eax, 1
  00252	75 54		 jne	 SHORT $LN20@CurrentMot

; 214  : 			{
; 215  : 				switch (dwMotionIndex)

  00254	8d 43 fa	 lea	 eax, DWORD PTR [ebx-6]
  00257	83 f8 12	 cmp	 eax, 18			; 00000012H
  0025a	77 34		 ja	 SHORT $LN23@CurrentMot
  0025c	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN56@CurrentMot[eax]
  00263	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN57@CurrentMot[eax*4]
$LN22@CurrentMot:

; 216  : 				{
; 217  : 					case CRaceMotionData::NAME_DAMAGE_FLYING:
; 218  : 					case CRaceMotionData::NAME_DAMAGE_FLYING_BACK:
; 219  : 					case CRaceMotionData::NAME_DEAD:
; 220  : 					case CRaceMotionData::NAME_INTRO_SELECTED:
; 221  : 					case CRaceMotionData::NAME_INTRO_NOT_SELECTED:
; 222  : 						m_kCurMotNode.fEndTime+=3.0f;

  0026a	f3 0f 10 86 24
	03 00 00	 movss	 xmm0, DWORD PTR [esi+804]

; 223  : 						SetEndStopMotion();

  00272	8b ce		 mov	 ecx, esi
  00274	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40400000
  0027c	f3 0f 11 86 24
	03 00 00	 movss	 DWORD PTR [esi+804], xmm0
  00284	e8 00 00 00 00	 call	 ?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::SetEndStopMotion
  00289	5f		 pop	 edi
  0028a	5b		 pop	 ebx
  0028b	5e		 pop	 esi

; 239  : }

  0028c	8b e5		 mov	 esp, ebp
  0028e	5d		 pop	 ebp
  0028f	c3		 ret	 0
$LN23@CurrentMot:

; 224  : 						break;
; 225  : 					default:
; 226  : 						InterceptLoopMotion(CRaceMotionData::NAME_WAIT);

  00290	51		 push	 ecx
  00291	c7 04 24 cd cc
	cc 3d		 mov	 DWORD PTR [esp], 1036831949 ; 3dcccccdH
  00298	8b ce		 mov	 ecx, esi
  0029a	6a 01		 push	 1
  0029c	e8 00 00 00 00	 call	 ?InterceptLoopMotion@CActorInstance@@QAE_NKM@Z ; CActorInstance::InterceptLoopMotion
  002a1	5f		 pop	 edi
  002a2	5b		 pop	 ebx
  002a3	5e		 pop	 esi

; 239  : }

  002a4	8b e5		 mov	 esp, ebp
  002a6	5d		 pop	 ebp
  002a7	c3		 ret	 0
$LN20@CurrentMot:

; 227  : 						break;
; 228  : 				}
; 229  : 			}
; 230  : 			else if (MOTION_TYPE_LOOP == m_kCurMotNode.iMotionType)

  002a8	83 f8 02	 cmp	 eax, 2
  002ab	75 1f		 jne	 SHORT $LN58@CurrentMot

; 231  : 			{
; 232  : 				if (CRaceMotionData::NAME_WAIT == dwMotionIndex)

  002ad	83 fb 01	 cmp	 ebx, 1
  002b0	75 1a		 jne	 SHORT $LN58@CurrentMot

; 233  : 				{
; 234  : 					PushLoopMotion(CRaceMotionData::NAME_WAIT, 0.5f);

  002b2	83 ec 08	 sub	 esp, 8
  002b5	8b ce		 mov	 ecx, esi
  002b7	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  002bf	c7 04 24 00 00
	00 3f		 mov	 DWORD PTR [esp], 1056964608 ; 3f000000H
  002c6	53		 push	 ebx
  002c7	e8 00 00 00 00	 call	 ?PushLoopMotion@CActorInstance@@QAE_NKMM@Z ; CActorInstance::PushLoopMotion
$LN58@CurrentMot:
  002cc	5f		 pop	 edi
  002cd	5b		 pop	 ebx
$LN25@CurrentMot:
  002ce	5e		 pop	 esi

; 239  : }

  002cf	8b e5		 mov	 esp, ebp
  002d1	5d		 pop	 ebp
  002d2	c3		 ret	 0
  002d3	90		 npad	 1
$LN57@CurrentMot:
  002d4	00 00 00 00	 DD	 $LN22@CurrentMot
  002d8	00 00 00 00	 DD	 $LN23@CurrentMot
$LN56@CurrentMot:
  002dc	00		 DB	 0
  002dd	01		 DB	 1
  002de	01		 DB	 1
  002df	00		 DB	 0
  002e0	01		 DB	 1
  002e1	00		 DB	 0
  002e2	01		 DB	 1
  002e3	01		 DB	 1
  002e4	01		 DB	 1
  002e5	01		 DB	 1
  002e6	01		 DB	 1
  002e7	01		 DB	 1
  002e8	01		 DB	 1
  002e9	01		 DB	 1
  002ea	01		 DB	 1
  002eb	01		 DB	 1
  002ec	01		 DB	 1
  002ed	00		 DB	 0
  002ee	00		 DB	 0
?CurrentMotionProcess@CActorInstance@@IAEXXZ ENDP	; CActorInstance::CurrentMotionProcess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?ReservingMotionProcess@CActorInstance@@IAEXXZ
_TEXT	SEGMENT
_kSetMotData$ = -52					; size = 20
_kPrevMotionNode$2$ = -48				; size = 16
_kPrevMotionNode$1$ = -32				; size = 16
_fBlendTime$1$ = -16					; size = 4
_fDurationTime$ = -16					; size = 4
_kPrevMotionNode$3$ = -12				; size = 4
_iMotionType$1$ = -8					; size = 4
_fCurrentTime$ = -8					; size = 4
_fSpeedRatio$ = -4					; size = 4
?ReservingMotionProcess@CActorInstance@@IAEXXZ PROC	; CActorInstance::ReservingMotionProcess, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1009 :         return _Mysize() == 0;

  00009	83 be 0c 03 00
	00 00		 cmp	 DWORD PTR [esi+780], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 53   : 	if (m_MotionDeque.empty())

  00010	0f 84 0b 02 00
	00		 je	 $LN1@ReservingM
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00016	8b 96 04 03 00
	00		 mov	 edx, DWORD PTR [esi+772]

; 1051 :         return *_Unchecked_begin();

  0001c	8b 86 00 03 00
	00		 mov	 eax, DWORD PTR [esi+768]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00022	4a		 dec	 edx
  00023	23 96 08 03 00
	00		 and	 edx, DWORD PTR [esi+776]
  00029	57		 push	 edi

; 1051 :         return *_Unchecked_begin();

  0002a	8b 3c 90	 mov	 edi, DWORD PTR [eax+edx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 58   : 	float fCurrentTime = GetLocalTime();

  0002d	e8 00 00 00 00	 call	 ?GetLocalTime@CGraphicThingInstance@@QAEMXZ ; CGraphicThingInstance::GetLocalTime

; 59   : 	if (rReservingMotionNode.fStartTime > fCurrentTime)

  00032	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00037	d9 5d f8	 fstp	 DWORD PTR _fCurrentTime$[ebp]
  0003a	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _fCurrentTime$[ebp]
  0003e	0f 87 dc 01 00
	00		 ja	 $LN109@ReservingM

; 60   : 		return;
; 61   : 
; 62   : 	DWORD dwNextMotionIndex = GET_MOTION_INDEX(rReservingMotionNode.dwMotionKey);

  00044	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00047	c1 e8 08	 shr	 eax, 8
  0004a	0f b7 c0	 movzx	 eax, ax

; 63   : 	switch (dwNextMotionIndex)

  0004d	83 f8 07	 cmp	 eax, 7
  00050	74 05		 je	 SHORT $LN11@ReservingM
  00052	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00055	75 64		 jne	 SHORT $LN107@ReservingM
$LN11@ReservingM:

; 64   : 	{
; 65   : 		case CRaceMotionData::NAME_STAND_UP:
; 66   : 		case CRaceMotionData::NAME_STAND_UP_BACK:
; 67   : 			if (IsFaint())

  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?IsFaint@CActorInstance@@QAEHXZ ; CActorInstance::IsFaint
  0005e	85 c0		 test	 eax, eax
  00060	74 59		 je	 SHORT $LN107@ReservingM

; 68   : 			{
; 69   : 
; 70   : 				SetEndStopMotion();

  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::SetEndStopMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00069	8b 96 08 03 00
	00		 mov	 edx, DWORD PTR [esi+776]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  0006f	8b be fc 02 00
	00		 mov	 edi, DWORD PTR [esi+764]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 73   : 				for (; itor != m_MotionDeque.end(); ++itor)

  00075	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0007d	0f 1f 00	 npad	 3
$LL105@ReservingM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00080	8b 86 0c 03 00
	00		 mov	 eax, DWORD PTR [esi+780]
  00086	03 86 08 03 00
	00		 add	 eax, DWORD PTR [esi+776]

; 350  :         return this->_Myoff == _Right._Myoff;

  0008c	3b d0		 cmp	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 73   : 				for (; itor != m_MotionDeque.end(); ++itor)

  0008e	0f 84 8c 01 00
	00		 je	 $LN109@ReservingM
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00094	85 ff		 test	 edi, edi
  00096	74 04		 je	 SHORT $LN84@ReservingM
  00098	8b 07		 mov	 eax, DWORD PTR [edi]
  0009a	eb 02		 jmp	 SHORT $LN85@ReservingM
$LN84@ReservingM:
  0009c	33 c0		 xor	 eax, eax
$LN85@ReservingM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0009e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 75   : 					TReservingMotionNode & rNode = *itor;

  000a1	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  000a4	49		 dec	 ecx
  000a5	23 ca		 and	 ecx, edx

; 283  :         ++_Myoff;

  000a7	42		 inc	 edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 75   : 					TReservingMotionNode & rNode = *itor;

  000a8	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]

; 76   : 					rNode.fStartTime += 1.0f;

  000ab	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000b0	f3 0f 58 c1	 addss	 xmm0, xmm1
  000b4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  000b9	eb c5		 jmp	 SHORT $LL105@ReservingM
$LN107@ReservingM:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 83   : 	SCurrentMotionNode kPrevMotionNode=m_kCurMotNode;

  000bb	0f 10 86 10 03
	00 00		 movups	 xmm0, XMMWORD PTR [esi+784]
  000c2	8b 86 30 03 00
	00		 mov	 eax, DWORD PTR [esi+816]

; 87   : 	float fBlendTime=rReservingMotionNode.fBlendTime;

  000c8	f3 0f 10 4f 08	 movss	 xmm1, DWORD PTR [edi+8]
  000cd	0f 11 45 e0	 movups	 XMMWORD PTR _kPrevMotionNode$1$[ebp], xmm0
  000d1	53		 push	 ebx
  000d2	0f 10 86 20 03
	00 00		 movups	 xmm0, XMMWORD PTR [esi+800]

; 88   : 
; 89   : 	DWORD dwMotionKey=rReservingMotionNode.dwMotionKey;

  000d9	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]
  000dc	89 45 f4	 mov	 DWORD PTR _kPrevMotionNode$3$[ebp], eax
  000df	8b 07		 mov	 eax, DWORD PTR [edi]
  000e1	0f 11 45 d0	 movups	 XMMWORD PTR _kPrevMotionNode$2$[ebp], xmm0
  000e5	89 45 f8	 mov	 DWORD PTR _iMotionType$1$[ebp], eax
  000e8	f3 0f 10 47 10	 movss	 xmm0, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1103 :         if (--_Mysize() == 0) {

  000ed	83 86 0c 03 00
	00 ff		 add	 DWORD PTR [esi+780], -1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 86   : 	float fSpeedRatio=rReservingMotionNode.fSpeedRatio;

  000f4	f3 0f 11 45 fc	 movss	 DWORD PTR _fSpeedRatio$[ebp], xmm0

; 87   : 	float fBlendTime=rReservingMotionNode.fBlendTime;

  000f9	f3 0f 11 4d f0	 movss	 DWORD PTR _fBlendTime$1$[ebp], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1103 :         if (--_Mysize() == 0) {

  000fe	75 0c		 jne	 SHORT $LN89@ReservingM

; 1104 :             _Myoff() = 0;

  00100	c7 86 08 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+776], 0

; 1105 :         } else {

  0010a	eb 06		 jmp	 SHORT $LN90@ReservingM
$LN89@ReservingM:

; 1106 :             ++_Myoff();

  0010c	ff 86 08 03 00
	00		 inc	 DWORD PTR [esi+776]
$LN90@ReservingM:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 93   : 	DWORD dwCurrentMotionIndex=GET_MOTION_INDEX(dwMotionKey);

  00112	8b c3		 mov	 eax, ebx
  00114	c1 e8 08	 shr	 eax, 8
  00117	0f b7 c0	 movzx	 eax, ax

; 94   : 	switch (dwCurrentMotionIndex)

  0011a	83 f8 07	 cmp	 eax, 7
  0011d	74 05		 je	 SHORT $LN13@ReservingM
  0011f	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00122	75 49		 jne	 SHORT $LN14@ReservingM
$LN13@ReservingM:

; 95   : 	{
; 96   : 		case CRaceMotionData::NAME_STAND_UP:
; 97   : 		case CRaceMotionData::NAME_STAND_UP_BACK:
; 98   : 			if (IsDead())

  00124	8b ce		 mov	 ecx, esi
  00126	e8 00 00 00 00	 call	 ?IsDead@CActorInstance@@QAEHXZ ; CActorInstance::IsDead
  0012b	85 c0		 test	 eax, eax
  0012d	74 34		 je	 SHORT $LN108@ReservingM

; 99   : 			{
; 100  : 				m_kCurMotNode=kPrevMotionNode;

  0012f	0f 10 45 e0	 movups	 xmm0, XMMWORD PTR _kPrevMotionNode$1$[ebp]
  00133	8b 45 f4	 mov	 eax, DWORD PTR _kPrevMotionNode$3$[ebp]

; 101  : 				__ClearMotion();

  00136	8b ce		 mov	 ecx, esi
  00138	0f 11 86 10 03
	00 00		 movups	 XMMWORD PTR [esi+784], xmm0
  0013f	0f 10 45 d0	 movups	 xmm0, XMMWORD PTR _kPrevMotionNode$2$[ebp]
  00143	0f 11 86 20 03
	00 00		 movups	 XMMWORD PTR [esi+800], xmm0
  0014a	89 86 30 03 00
	00		 mov	 DWORD PTR [esi+816], eax
  00150	e8 00 00 00 00	 call	 ?__ClearMotion@CActorInstance@@IAEXXZ ; CActorInstance::__ClearMotion

; 102  : 
; 103  : 				SetEndStopMotion();

  00155	8b ce		 mov	 ecx, esi
  00157	e8 00 00 00 00	 call	 ?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::SetEndStopMotion
  0015c	5b		 pop	 ebx
  0015d	5f		 pop	 edi
  0015e	5e		 pop	 esi

; 147  : }

  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c3		 ret	 0
$LN108@ReservingM:

; 95   : 	{
; 96   : 		case CRaceMotionData::NAME_STAND_UP:
; 97   : 		case CRaceMotionData::NAME_STAND_UP_BACK:
; 98   : 			if (IsDead())

  00163	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00168	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _fBlendTime$1$[ebp]
$LN14@ReservingM:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstance.h

; 634  : 				uSkill=0;

  0016d	33 c0		 xor	 eax, eax
  0016f	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _kSetMotData$[ebp+16], 0
  00176	83 7d f8 01	 cmp	 DWORD PTR _iMotionType$1$[ebp], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 123  : 	DWORD dwRealMotionKey = __SetMotion(kSetMotData);

  0017a	8b ce		 mov	 ecx, esi
  0017c	6a 00		 push	 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstance.h

; 634  : 				uSkill=0;

  0017e	0f 94 c0	 sete	 al
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 118  : 	kSetMotData.dwMotKey=dwMotionKey;

  00181	89 5d cc	 mov	 DWORD PTR _kSetMotData$[ebp], ebx

; 119  : 	kSetMotData.fBlendTime=fBlendTime;
; 120  : 	kSetMotData.fSpeedRatio=fSpeedRatio;
; 121  : 	kSetMotData.iLoopCount=iLoopCount;

  00184	89 45 d8	 mov	 DWORD PTR _kSetMotData$[ebp+12], eax

; 123  : 	DWORD dwRealMotionKey = __SetMotion(kSetMotData);

  00187	8d 45 cc	 lea	 eax, DWORD PTR _kSetMotData$[ebp]
  0018a	50		 push	 eax
  0018b	f3 0f 11 4d d4	 movss	 DWORD PTR _kSetMotData$[ebp+8], xmm1
  00190	f3 0f 11 45 d0	 movss	 DWORD PTR _kSetMotData$[ebp+4], xmm0
  00195	e8 00 00 00 00	 call	 ?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z ; CActorInstance::__SetMotion
  0019a	8b d8		 mov	 ebx, eax

; 124  : 
; 125  : 	if (0 == dwRealMotionKey)

  0019c	85 db		 test	 ebx, ebx
  0019e	0f 84 7b 00 00
	00		 je	 $LN110@ReservingM

; 126  : 		return;
; 127  : 
; 128  : 	//float fDurationTime=rReservingMotionNode.fDuration;
; 129  : 	float fDurationTime = GetMotionDuration(dwRealMotionKey) / fSpeedRatio;

  001a4	53		 push	 ebx
  001a5	8b ce		 mov	 ecx, esi
  001a7	e8 00 00 00 00	 call	 ?GetMotionDuration@CActorInstance@@IAEMK@Z ; CActorInstance::GetMotionDuration
  001ac	d8 75 fc	 fdiv	 DWORD PTR _fSpeedRatio$[ebp]

; 130  : 	float fStartTime = rReservingMotionNode.fStartTime;
; 131  : 	float fEndTime = fStartTime + fDurationTime;
; 132  : 
; 133  : 	if (dwRealMotionKey == 16777473)
; 134  : 	{
; 135  : 		int bp = 0;
; 136  : 		bp++;
; 137  : 	}
; 138  : 
; 139  : 	m_kCurMotNode.uSkill = 0;
; 140  : 	m_kCurMotNode.iMotionType = iMotionType;

  001af	8b 45 f8	 mov	 eax, DWORD PTR _iMotionType$1$[ebp]
  001b2	f3 0f 10 4f 04	 movss	 xmm1, DWORD PTR [edi+4]

; 141  : 	m_kCurMotNode.fSpeedRatio = fSpeedRatio;

  001b7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  001bc	f3 0f 11 86 28
	03 00 00	 movss	 DWORD PTR [esi+808], xmm0
  001c4	d9 5d f0	 fstp	 DWORD PTR _fDurationTime$[ebp]
  001c7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fDurationTime$[ebp]

; 142  : 	m_kCurMotNode.fStartTime = fStartTime;

  001cc	f3 0f 11 8e 20
	03 00 00	 movss	 DWORD PTR [esi+800], xmm1
  001d4	f3 0f 58 c8	 addss	 xmm1, xmm0
  001d8	89 86 10 03 00
	00		 mov	 DWORD PTR [esi+784], eax
  001de	c7 86 30 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+816], 0

; 143  : 	m_kCurMotNode.fEndTime = fEndTime;
; 144  : 	m_kCurMotNode.dwMotionKey = dwRealMotionKey;

  001e8	89 9e 14 03 00
	00		 mov	 DWORD PTR [esi+788], ebx

; 145  : 	m_kCurMotNode.dwcurFrame = 0;

  001ee	c7 86 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+792], 0
  001f8	f3 0f 11 8e 24
	03 00 00	 movss	 DWORD PTR [esi+804], xmm1

; 146  : 	m_kCurMotNode.dwFrameCount = fDurationTime / (1.0f / g_fGameFPS);

  00200	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00208	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR ?g_fGameFPS@@3MA
  00210	f3 0f 5e c1	 divss	 xmm0, xmm1
  00214	e8 00 00 00 00	 call	 __ftoui3
  00219	89 86 1c 03 00
	00		 mov	 DWORD PTR [esi+796], eax
$LN110@ReservingM:
  0021f	5b		 pop	 ebx
$LN109@ReservingM:
  00220	5f		 pop	 edi
$LN1@ReservingM:
  00221	5e		 pop	 esi

; 147  : }

  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c3		 ret	 0
?ReservingMotionProcess@CActorInstance@@IAEXXZ ENDP	; CActorInstance::ReservingMotionProcess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__MotionEventProcess@CActorInstance@@QAEXH@Z
_TEXT	SEGMENT
tv192 = -4						; size = 4
_isPC$ = 8						; size = 4
?__MotionEventProcess@CActorInstance@@QAEXH@Z PROC	; CActorInstance::__MotionEventProcess, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 17   : 	if (isAttacking())

  00007	e8 00 00 00 00	 call	 ?isAttacking@CActorInstance@@QAEHXZ ; CActorInstance::isAttacking
  0000c	8b ce		 mov	 ecx, esi
  0000e	85 c0		 test	 eax, eax
  00010	74 54		 je	 SHORT $LN5@MotionEven

; 18   : 	{
; 19   : 		DWORD dwNextFrame = DWORD(GetAttackingElapsedTime() * g_fGameFPS);

  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 ?GetAttackingElapsedTime@CActorInstance@@QAEMXZ ; CActorInstance::GetAttackingElapsedTime
  00018	d8 0d 00 00 00
	00		 fmul	 DWORD PTR ?g_fGameFPS@@3MA ; g_fGameFPS
  0001e	d9 5d fc	 fstp	 DWORD PTR tv192[ebp]
  00021	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR tv192[ebp]
  00026	e8 00 00 00 00	 call	 __ftoui3
  0002b	8b f8		 mov	 edi, eax

; 20   : 		for (; m_kCurMotNode.dwcurFrame < dwNextFrame; ++m_kCurMotNode.dwcurFrame)

  0002d	39 be 18 03 00
	00		 cmp	 DWORD PTR [esi+792], edi
  00033	73 29		 jae	 SHORT $LN12@MotionEven

; 23   : 			SoundEventProcess(!isPC);

  00035	53		 push	 ebx
  00036	33 db		 xor	 ebx, ebx
  00038	39 5d 08	 cmp	 DWORD PTR _isPC$[ebp], ebx
  0003b	0f 94 c3	 sete	 bl
  0003e	66 90		 npad	 2
$LL4@MotionEven:

; 21   : 		{
; 22   : 			MotionEventProcess();

  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?MotionEventProcess@CActorInstance@@QAEXXZ ; CActorInstance::MotionEventProcess

; 23   : 			SoundEventProcess(!isPC);

  00047	53		 push	 ebx
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?SoundEventProcess@CActorInstance@@QAEXH@Z ; CActorInstance::SoundEventProcess
  0004f	ff 86 18 03 00
	00		 inc	 DWORD PTR [esi+792]
  00055	39 be 18 03 00
	00		 cmp	 DWORD PTR [esi+792], edi
  0005b	72 e3		 jb	 SHORT $LL4@MotionEven

; 24   : 		}
; 25   : 	}

  0005d	5b		 pop	 ebx
$LN12@MotionEven:
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi

; 32   : 	}
; 33   : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN5@MotionEven:

; 26   : 	else
; 27   : 	{
; 28   : 		MotionEventProcess();

  00066	e8 00 00 00 00	 call	 ?MotionEventProcess@CActorInstance@@QAEXXZ ; CActorInstance::MotionEventProcess

; 29   : 		SoundEventProcess(!isPC);

  0006b	33 c0		 xor	 eax, eax
  0006d	8b ce		 mov	 ecx, esi
  0006f	39 45 08	 cmp	 DWORD PTR _isPC$[ebp], eax
  00072	0f 94 c0	 sete	 al
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?SoundEventProcess@CActorInstance@@QAEXH@Z ; CActorInstance::SoundEventProcess

; 30   : 
; 31   : 		++m_kCurMotNode.dwcurFrame;

  0007b	ff 86 18 03 00
	00		 inc	 DWORD PTR [esi+792]
  00081	5e		 pop	 esi

; 32   : 	}
; 33   : }

  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
?__MotionEventProcess@CActorInstance@@QAEXH@Z ENDP	; CActorInstance::__MotionEventProcess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?MotionProcess@CActorInstance@@QAEXH@Z
_TEXT	SEGMENT
_isPC$ = 8						; size = 4
?MotionProcess@CActorInstance@@QAEXH@Z PROC		; CActorInstance::MotionProcess, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 37   : 	__MotionEventProcess(isPC);

  00004	ff 75 08	 push	 DWORD PTR _isPC$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?__MotionEventProcess@CActorInstance@@QAEXH@Z ; CActorInstance::__MotionEventProcess

; 38   : 	CurrentMotionProcess();

  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?CurrentMotionProcess@CActorInstance@@IAEXXZ ; CActorInstance::CurrentMotionProcess

; 39   : 	ReservingMotionProcess();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?ReservingMotionProcess@CActorInstance@@IAEXXZ ; CActorInstance::ReservingMotionProcess
  0001c	5e		 pop	 esi

; 40   : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?MotionProcess@CActorInstance@@QAEXH@Z ENDP		; CActorInstance::MotionProcess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?HORSE_MotionProcess@CActorInstance@@QAEXH@Z
_TEXT	SEGMENT
_isPC$ = 8						; size = 4
?HORSE_MotionProcess@CActorInstance@@QAEXH@Z PROC	; CActorInstance::HORSE_MotionProcess, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 44   : 	__MotionEventProcess(isPC);

  00004	ff 75 08	 push	 DWORD PTR _isPC$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?__MotionEventProcess@CActorInstance@@QAEXH@Z ; CActorInstance::__MotionEventProcess

; 45   : 
; 46   : 	if (MOTION_TYPE_LOOP == m_kCurMotNode.iMotionType)

  0000e	83 be 10 03 00
	00 02		 cmp	 DWORD PTR [esi+784], 2
  00015	75 18		 jne	 SHORT $LN3@HORSE_Moti

; 47   : 		if (m_kCurMotNode.dwcurFrame >= m_kCurMotNode.dwFrameCount)

  00017	8b 86 18 03 00
	00		 mov	 eax, DWORD PTR [esi+792]
  0001d	3b 86 1c 03 00
	00		 cmp	 eax, DWORD PTR [esi+796]
  00023	72 0a		 jb	 SHORT $LN3@HORSE_Moti

; 48   : 			m_kCurMotNode.dwcurFrame = 0;

  00025	c7 86 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+792], 0
$LN3@HORSE_Moti:
  0002f	5e		 pop	 esi

; 49   : }

  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?HORSE_MotionProcess@CActorInstance@@QAEXH@Z ENDP	; CActorInstance::HORSE_MotionProcess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?IsFishing@CActorInstance@@QAEHXZ
_TEXT	SEGMENT
?IsFishing@CActorInstance@@QAEHXZ PROC			; CActorInstance::IsFishing, COMDAT
; _this$ = ecx

; 446  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 447  : 	if (!m_pkCurRaceMotionData)

  00003	83 be 24 04 00
	00 00		 cmp	 DWORD PTR [esi+1060], 0
  0000a	75 04		 jne	 SHORT $LN2@IsFishing
$LN6@IsFishing:

; 453  : 
; 454  : 	return FALSE;
; 455  : }

  0000c	33 c0		 xor	 eax, eax
  0000e	5e		 pop	 esi
  0000f	c3		 ret	 0
$LN2@IsFishing:

; 448  : 		return FALSE;
; 449  : 
; 450  : 	if (__GetCurrentMotionIndex() == CRaceMotionData::NAME_FISHING_WAIT ||

  00010	e8 00 00 00 00	 call	 ?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ ; CActorInstance::__GetCurrentMotionIndex
  00015	66 83 f8 1b	 cmp	 ax, 27			; 0000001bH
  00019	74 0d		 je	 SHORT $LN4@IsFishing
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ ; CActorInstance::__GetCurrentMotionIndex
  00022	66 83 f8 1d	 cmp	 ax, 29			; 0000001dH
  00026	75 e4		 jne	 SHORT $LN6@IsFishing
$LN4@IsFishing:

; 451  : 		__GetCurrentMotionIndex() == CRaceMotionData::NAME_FISHING_REACT)
; 452  : 		return TRUE;

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi

; 453  : 
; 454  : 	return FALSE;
; 455  : }

  0002e	c3		 ret	 0
?IsFishing@CActorInstance@@QAEHXZ ENDP			; CActorInstance::IsFishing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?PreAttack@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
?PreAttack@CActorInstance@@QAEXXZ PROC			; CActorInstance::PreAttack, COMDAT
; _this$ = ecx

; 625  : }

  00000	c2 00 00	 ret	 0
?PreAttack@CActorInstance@@QAEXXZ ENDP			; CActorInstance::PreAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?CanCancelSkill@CActorInstance@@QAEHXZ
_TEXT	SEGMENT
?CanCancelSkill@CActorInstance@@QAEHXZ PROC		; CActorInstance::CanCancelSkill, COMDAT
; _this$ = ecx

; 459  : 	assert(IsUsingSkill());
; 460  : 	return m_pkCurRaceMotionData->IsCancelEnableSkill();

  00000	8b 89 24 04 00
	00		 mov	 ecx, DWORD PTR [ecx+1060]
  00006	e9 00 00 00 00	 jmp	 ?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ ; CRaceMotionData::IsCancelEnableSkill
?CanCancelSkill@CActorInstance@@QAEHXZ ENDP		; CActorInstance::CanCancelSkill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?IsUsingSkill@CActorInstance@@QAEHXZ
_TEXT	SEGMENT
?IsUsingSkill@CActorInstance@@QAEHXZ PROC		; CActorInstance::IsUsingSkill, COMDAT
; _this$ = ecx

; 426  : 	DWORD dwCurMotionIndex=__GetCurrentMotionIndex();

  00000	e8 00 00 00 00	 call	 ?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ ; CActorInstance::__GetCurrentMotionIndex

; 427  : 
; 428  : 	if (dwCurMotionIndex>=CRaceMotionData::NAME_SKILL && dwCurMotionIndex<CRaceMotionData::NAME_SKILL_END)

  00005	ba fe 00 00 00	 mov	 edx, 254		; 000000feH
  0000a	8d 48 ce	 lea	 ecx, DWORD PTR [eax-50]
  0000d	66 3b ca	 cmp	 cx, dx
  00010	76 0f		 jbe	 SHORT $LN7@IsUsingSki

; 429  : 		return TRUE;
; 430  : 
; 431  : 	switch (dwCurMotionIndex)

  00012	66 83 f8 21	 cmp	 ax, 33			; 00000021H
  00016	72 06		 jb	 SHORT $LN2@IsUsingSki
  00018	66 83 f8 26	 cmp	 ax, 38			; 00000026H
  0001c	76 03		 jbe	 SHORT $LN7@IsUsingSki
$LN2@IsUsingSki:

; 440  : 	}
; 441  : 
; 442  : 	return FALSE;

  0001e	33 c0		 xor	 eax, eax

; 443  : }

  00020	c3		 ret	 0
$LN7@IsUsingSki:

; 432  : 	{
; 433  : 		case CRaceMotionData::NAME_SPECIAL_1:
; 434  : 		case CRaceMotionData::NAME_SPECIAL_2:
; 435  : 		case CRaceMotionData::NAME_SPECIAL_3:
; 436  : 		case CRaceMotionData::NAME_SPECIAL_4:
; 437  : 		case CRaceMotionData::NAME_SPECIAL_5:
; 438  : 		case CRaceMotionData::NAME_SPECIAL_6:
; 439  : 			return TRUE;

  00021	b8 01 00 00 00	 mov	 eax, 1

; 443  : }

  00026	c3		 ret	 0
?IsUsingSkill@CActorInstance@@QAEHXZ ENDP		; CActorInstance::IsUsingSkill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?isLock@CActorInstance@@QAEHXZ
_TEXT	SEGMENT
?isLock@CActorInstance@@QAEHXZ PROC			; CActorInstance::isLock, COMDAT
; _this$ = ecx

; 464  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 465  : 	DWORD dwCurMotionIndex=__GetCurrentMotionIndex();

  00003	e8 00 00 00 00	 call	 ?__GetCurrentMotionIndex@CActorInstance@@IAEGXZ ; CActorInstance::__GetCurrentMotionIndex
  00008	0f b7 c0	 movzx	 eax, ax

; 466  : 
; 467  : 	// Locked during attack
; 468  : 	switch (dwCurMotionIndex)

  0000b	3d 48 01 00 00	 cmp	 eax, 328		; 00000148H
  00010	77 1d		 ja	 SHORT $LN8@isLock
  00012	3d 32 01 00 00	 cmp	 eax, 306		; 00000132H
  00017	73 48		 jae	 SHORT $LN6@isLock
  00019	83 e8 0d	 sub	 eax, 13			; 0000000dH
  0001c	83 f8 19	 cmp	 eax, 25			; 00000019H
  0001f	77 26		 ja	 SHORT $LN2@isLock
  00021	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN9@isLock[eax]
  00028	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@isLock[eax*4]
$LN8@isLock:
  0002f	2d 4a 01 00 00	 sub	 eax, 330		; 0000014aH
  00034	83 f8 19	 cmp	 eax, 25			; 00000019H
  00037	77 0e		 ja	 SHORT $LN2@isLock
  00039	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN11@isLock[eax]
  00040	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@isLock[eax*4]
$LN2@isLock:

; 469  : 	{
; 470  : 		case CRaceMotionData::NAME_NORMAL_ATTACK:
; 471  : 		case CRaceMotionData::NAME_COMBO_ATTACK_1:
; 472  : 		case CRaceMotionData::NAME_COMBO_ATTACK_2:
; 473  : 		case CRaceMotionData::NAME_COMBO_ATTACK_3:
; 474  : 		case CRaceMotionData::NAME_COMBO_ATTACK_4:
; 475  : 		case CRaceMotionData::NAME_COMBO_ATTACK_5:
; 476  : 		case CRaceMotionData::NAME_COMBO_ATTACK_6:
; 477  : 		case CRaceMotionData::NAME_COMBO_ATTACK_7:
; 478  : 		case CRaceMotionData::NAME_COMBO_ATTACK_8:
; 479  : 		case CRaceMotionData::NAME_SPECIAL_1:
; 480  : 		case CRaceMotionData::NAME_SPECIAL_2:
; 481  : 		case CRaceMotionData::NAME_SPECIAL_3:
; 482  : 		case CRaceMotionData::NAME_SPECIAL_4:
; 483  : 		case CRaceMotionData::NAME_SPECIAL_5:
; 484  : 		case CRaceMotionData::NAME_SPECIAL_6:
; 485  : 		case CRaceMotionData::NAME_FISHING_THROW:
; 486  : 		case CRaceMotionData::NAME_FISHING_WAIT:
; 487  : 		case CRaceMotionData::NAME_FISHING_STOP:
; 488  : 		case CRaceMotionData::NAME_FISHING_REACT:
; 489  : 		case CRaceMotionData::NAME_FISHING_CATCH:
; 490  : 		case CRaceMotionData::NAME_FISHING_FAIL:
; 491  : 		case CRaceMotionData::NAME_CLAP:
; 492  : 		case CRaceMotionData::NAME_DANCE_1:
; 493  : 		case CRaceMotionData::NAME_DANCE_2:
; 494  : 		case CRaceMotionData::NAME_DANCE_3:
; 495  : 		case CRaceMotionData::NAME_DANCE_4:
; 496  : 		case CRaceMotionData::NAME_DANCE_5:
; 497  : 		case CRaceMotionData::NAME_DANCE_6:
; 498  : 		case CRaceMotionData::NAME_CONGRATULATION:
; 499  : 		case CRaceMotionData::NAME_FORGIVE:
; 500  : 		case CRaceMotionData::NAME_ANGRY:
; 501  : 		case CRaceMotionData::NAME_ATTRACTIVE:
; 502  : 		case CRaceMotionData::NAME_SAD:
; 503  : 		case CRaceMotionData::NAME_SHY:
; 504  : 		case CRaceMotionData::NAME_CHEERUP:
; 505  : 		case CRaceMotionData::NAME_BANTER:
; 506  : 		case CRaceMotionData::NAME_JOY:
; 507  : 		case CRaceMotionData::NAME_CHEERS_1:
; 508  : 		case CRaceMotionData::NAME_CHEERS_2:
; 509  : 		case CRaceMotionData::NAME_KISS_WITH_WARRIOR:
; 510  : 		case CRaceMotionData::NAME_KISS_WITH_ASSASSIN:
; 511  : 		case CRaceMotionData::NAME_KISS_WITH_SURA:
; 512  : 		case CRaceMotionData::NAME_KISS_WITH_SHAMAN:
; 513  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 514  : 		case CRaceMotionData::NAME_KISS_WITH_WOLFMAN:
; 515  : #endif
; 516  : 		case CRaceMotionData::NAME_FRENCH_KISS_WITH_WARRIOR:
; 517  : 		case CRaceMotionData::NAME_FRENCH_KISS_WITH_ASSASSIN:
; 518  : 		case CRaceMotionData::NAME_FRENCH_KISS_WITH_SURA:
; 519  : 		case CRaceMotionData::NAME_FRENCH_KISS_WITH_SHAMAN:
; 520  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 521  : 		case CRaceMotionData::NAME_FRENCH_KISS_WITH_WOLFMAN:
; 522  : #endif
; 523  : 		case CRaceMotionData::NAME_SLAP_HIT_WITH_WARRIOR:
; 524  : 		case CRaceMotionData::NAME_SLAP_HIT_WITH_ASSASSIN:
; 525  : 		case CRaceMotionData::NAME_SLAP_HIT_WITH_SURA:
; 526  : 		case CRaceMotionData::NAME_SLAP_HIT_WITH_SHAMAN:
; 527  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 528  : 		case CRaceMotionData::NAME_SLAP_HIT_WITH_WOLFMAN:
; 529  : #endif
; 530  : 		case CRaceMotionData::NAME_SLAP_HURT_WITH_WARRIOR:
; 531  : 		case CRaceMotionData::NAME_SLAP_HURT_WITH_ASSASSIN:
; 532  : 		case CRaceMotionData::NAME_SLAP_HURT_WITH_SURA:
; 533  : 		case CRaceMotionData::NAME_SLAP_HURT_WITH_SHAMAN:
; 534  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 535  : 		case CRaceMotionData::NAME_SLAP_HURT_WITH_WOLFMAN:
; 536  : #endif
; 537  : 			return TRUE;
; 538  : 			break;
; 539  : 	}
; 540  : 
; 541  : 	// Locked during using skill
; 542  : 	if (IsUsingSkill())

  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?IsUsingSkill@CActorInstance@@QAEHXZ ; CActorInstance::IsUsingSkill
  0004e	85 c0		 test	 eax, eax
  00050	74 16		 je	 SHORT $LN5@isLock

; 543  : 	{
; 544  : 		if (m_pkCurRaceMotionData->IsCancelEnableSkill())

  00052	8b 8e 24 04 00
	00		 mov	 ecx, DWORD PTR [esi+1060]
  00058	e8 00 00 00 00	 call	 ?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ ; CRaceMotionData::IsCancelEnableSkill
  0005d	85 c0		 test	 eax, eax
  0005f	75 07		 jne	 SHORT $LN5@isLock
$LN6@isLock:

; 545  : 			return FALSE;
; 546  : 
; 547  : 		return TRUE;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5e		 pop	 esi

; 551  : }

  00067	c3		 ret	 0
$LN5@isLock:

; 548  : 	}
; 549  : 
; 550  : 	return FALSE;

  00068	33 c0		 xor	 eax, eax
  0006a	5e		 pop	 esi

; 551  : }

  0006b	c3		 ret	 0
$LN10@isLock:
  0006c	00 00 00 00	 DD	 $LN6@isLock
  00070	00 00 00 00	 DD	 $LN2@isLock
$LN9@isLock:
  00074	00		 DB	 0
  00075	00		 DB	 0
  00076	00		 DB	 0
  00077	00		 DB	 0
  00078	00		 DB	 0
  00079	00		 DB	 0
  0007a	00		 DB	 0
  0007b	00		 DB	 0
  0007c	00		 DB	 0
  0007d	01		 DB	 1
  0007e	01		 DB	 1
  0007f	01		 DB	 1
  00080	01		 DB	 1
  00081	00		 DB	 0
  00082	00		 DB	 0
  00083	00		 DB	 0
  00084	00		 DB	 0
  00085	00		 DB	 0
  00086	00		 DB	 0
  00087	01		 DB	 1
  00088	00		 DB	 0
  00089	00		 DB	 0
  0008a	00		 DB	 0
  0008b	00		 DB	 0
  0008c	00		 DB	 0
  0008d	00		 DB	 0
  0008e	66 90		 npad	 2
$LN12@isLock:
  00090	00 00 00 00	 DD	 $LN6@isLock
  00094	00 00 00 00	 DD	 $LN2@isLock
$LN11@isLock:
  00098	00		 DB	 0
  00099	00		 DB	 0
  0009a	00		 DB	 0
  0009b	00		 DB	 0
  0009c	00		 DB	 0
  0009d	00		 DB	 0
  0009e	01		 DB	 1
  0009f	01		 DB	 1
  000a0	01		 DB	 1
  000a1	01		 DB	 1
  000a2	01		 DB	 1
  000a3	01		 DB	 1
  000a4	01		 DB	 1
  000a5	01		 DB	 1
  000a6	01		 DB	 1
  000a7	01		 DB	 1
  000a8	01		 DB	 1
  000a9	00		 DB	 0
  000aa	00		 DB	 0
  000ab	00		 DB	 0
  000ac	00		 DB	 0
  000ad	00		 DB	 0
  000ae	00		 DB	 0
  000af	00		 DB	 0
  000b0	00		 DB	 0
  000b1	00		 DB	 0
?isLock@CActorInstance@@QAEHXZ ENDP			; CActorInstance::isLock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?SetMotionLoopCount@CActorInstance@@QAEXH@Z
_TEXT	SEGMENT
_iCount$ = 8						; size = 4
?SetMotionLoopCount@CActorInstance@@QAEXH@Z PROC	; CActorInstance::SetMotionLoopCount, COMDAT
; _this$ = ecx

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 256  : 	assert(iCount >= -1 && iCount < 100);
; 257  : 	m_kCurMotNode.iLoopCount = iCount;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCount$[ebp]
  00006	89 81 2c 03 00
	00		 mov	 DWORD PTR [ecx+812], eax

; 258  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetMotionLoopCount@CActorInstance@@QAEXH@Z ENDP	; CActorInstance::SetMotionLoopCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?PushLoopMotion@CActorInstance@@QAE_NKMM@Z
_TEXT	SEGMENT
_MotionKey$ = -4					; size = 4
_dwMotion$ = 8						; size = 4
_fBlendTime$ = 12					; size = 4
_fSpeedRatio$ = 16					; size = 4
?PushLoopMotion@CActorInstance@@QAE_NKMM@Z PROC		; CActorInstance::PushLoopMotion, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 404  : 	assert(m_pkCurRaceData);
; 405  : 
; 406  : 	MOTION_KEY MotionKey;
; 407  : 	if (!m_pkCurRaceData->GetMotionKey(m_wcurMotionMode, dwMotion, &MotionKey))

  00007	8d 45 fc	 lea	 eax, DWORD PTR _MotionKey$[ebp]
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwMotion$[ebp]
  0000e	0f b7 86 34 03
	00 00		 movzx	 eax, WORD PTR [esi+820]
  00015	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?GetMotionKey@CRaceData@@QAEHGGPAK@Z ; CRaceData::GetMotionKey
  00021	85 c0		 test	 eax, eax
  00023	75 09		 jne	 SHORT $LN2@PushLoopMo

; 408  : 		return false;

  00025	32 c0		 xor	 al, al
  00027	5e		 pop	 esi

; 412  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 0c 00	 ret	 12			; 0000000cH
$LN2@PushLoopMo:

; 409  : 
; 410  : 	PushMotion(MOTION_TYPE_LOOP, MotionKey, fBlendTime, fSpeedRatio);

  0002e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00033	83 ec 08	 sub	 esp, 8
  00036	8b ce		 mov	 ecx, esi
  00038	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0003e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00043	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00048	ff 75 fc	 push	 DWORD PTR _MotionKey$[ebp]
  0004b	6a 02		 push	 2
  0004d	e8 00 00 00 00	 call	 ?PushMotion@CActorInstance@@IAEXW4EMotionPushType@1@KMM@Z ; CActorInstance::PushMotion

; 411  : 	return true;

  00052	b0 01		 mov	 al, 1
  00054	5e		 pop	 esi

; 412  : }

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 0c 00	 ret	 12			; 0000000cH
?PushLoopMotion@CActorInstance@@QAE_NKMM@Z ENDP		; CActorInstance::PushLoopMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?PushOnceMotion@CActorInstance@@QAE_NKMM@Z
_TEXT	SEGMENT
_MotionKey$ = -4					; size = 4
_dwMotion$ = 8						; size = 4
_fBlendTime$ = 12					; size = 4
_fSpeedRatio$ = 16					; size = 4
?PushOnceMotion@CActorInstance@@QAE_NKMM@Z PROC		; CActorInstance::PushOnceMotion, COMDAT
; _this$ = ecx

; 391  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 392  : 	assert(m_pkCurRaceData);
; 393  : 
; 394  : 	MOTION_KEY MotionKey;
; 395  : 	if (!m_pkCurRaceData->GetMotionKey(m_wcurMotionMode, dwMotion, &MotionKey))

  00007	8d 45 fc	 lea	 eax, DWORD PTR _MotionKey$[ebp]
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwMotion$[ebp]
  0000e	0f b7 86 34 03
	00 00		 movzx	 eax, WORD PTR [esi+820]
  00015	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?GetMotionKey@CRaceData@@QAEHGGPAK@Z ; CRaceData::GetMotionKey
  00021	85 c0		 test	 eax, eax
  00023	75 09		 jne	 SHORT $LN2@PushOnceMo

; 396  : 		return false;

  00025	32 c0		 xor	 al, al
  00027	5e		 pop	 esi

; 400  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 0c 00	 ret	 12			; 0000000cH
$LN2@PushOnceMo:

; 397  : 
; 398  : 	PushMotion(MOTION_TYPE_ONCE, MotionKey, fBlendTime, fSpeedRatio);

  0002e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00033	83 ec 08	 sub	 esp, 8
  00036	8b ce		 mov	 ecx, esi
  00038	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0003e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00043	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00048	ff 75 fc	 push	 DWORD PTR _MotionKey$[ebp]
  0004b	6a 01		 push	 1
  0004d	e8 00 00 00 00	 call	 ?PushMotion@CActorInstance@@IAEXW4EMotionPushType@1@KMM@Z ; CActorInstance::PushMotion

; 399  : 	return true;

  00052	b0 01		 mov	 al, 1
  00054	5e		 pop	 esi

; 400  : }

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 0c 00	 ret	 12			; 0000000cH
?PushOnceMotion@CActorInstance@@QAE_NKMM@Z ENDP		; CActorInstance::PushOnceMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?InterceptLoopMotion@CActorInstance@@QAE_NKM@Z
_TEXT	SEGMENT
_dwMotion$ = 8						; size = 4
_fBlendTime$ = 12					; size = 4
?InterceptLoopMotion@CActorInstance@@QAE_NKM@Z PROC	; CActorInstance::InterceptLoopMotion, COMDAT
; _this$ = ecx

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	return InterceptMotion(MOTION_TYPE_LOOP, dwMotion, fBlendTime);

  00003	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00008	51		 push	 ecx
  00009	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00010	6a 00		 push	 0
  00012	51		 push	 ecx
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	ff 75 08	 push	 DWORD PTR _dwMotion$[ebp]
  0001b	6a 02		 push	 2
  0001d	e8 00 00 00 00	 call	 ?InterceptMotion@CActorInstance@@IAE_NW4EMotionPushType@1@GMIM@Z ; CActorInstance::InterceptMotion

; 288  : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?InterceptLoopMotion@CActorInstance@@QAE_NKM@Z ENDP	; CActorInstance::InterceptLoopMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?InterceptOnceMotion@CActorInstance@@QAE_NKMIM@Z
_TEXT	SEGMENT
_dwMotion$ = 8						; size = 4
_fBlendTime$ = 12					; size = 4
_uSkill$ = 16						; size = 4
_fSpeedRatio$ = 20					; size = 4
?InterceptOnceMotion@CActorInstance@@QAE_NKMIM@Z PROC	; CActorInstance::InterceptOnceMotion, COMDAT
; _this$ = ecx

; 281  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 282  : 	return InterceptMotion(MOTION_TYPE_ONCE, dwMotion, fBlendTime, uSkill, fSpeedRatio);

  00003	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00008	51		 push	 ecx
  00009	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0000e	ff 75 10	 push	 DWORD PTR _uSkill$[ebp]
  00011	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00016	51		 push	 ecx
  00017	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001c	ff 75 08	 push	 DWORD PTR _dwMotion$[ebp]
  0001f	6a 01		 push	 1
  00021	e8 00 00 00 00	 call	 ?InterceptMotion@CActorInstance@@IAE_NW4EMotionPushType@1@GMIM@Z ; CActorInstance::InterceptMotion

; 283  : }

  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?InterceptOnceMotion@CActorInstance@@QAE_NKMIM@Z ENDP	; CActorInstance::InterceptOnceMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?SetLoopMotion@CActorInstance@@QAEXKMM@Z
_TEXT	SEGMENT
_kSetMotData$ = -24					; size = 20
_dwMotionKey$ = -4					; size = 4
_dwMotion$ = 8						; size = 4
_fBlendTime$ = 12					; size = 4
tv219 = 16						; size = 4
tv217 = 16						; size = 4
_fSpeedRatio$ = 16					; size = 4
?SetLoopMotion@CActorInstance@@QAEXKMM@Z PROC		; CActorInstance::SetLoopMotion, COMDAT
; _this$ = ecx

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 292  : 	if (!m_pkCurRaceData)

  00009	8b 8e 20 04 00
	00		 mov	 ecx, DWORD PTR [esi+1056]
  0000f	85 c9		 test	 ecx, ecx
  00011	75 35		 jne	 SHORT $LN2@SetLoopMot

; 293  : 	{
; 294  : 		Tracenf("CActorInstance::SetLoopMotion(dwMotion=%d, fBlendTime=%f, fSpeedRatio=%f)",

  00013	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0001e	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00024	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00029	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00031	ff 75 08	 push	 DWORD PTR _dwMotion$[ebp]
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@IFOPNGGO@CActorInstance?3?3SetLoopMotion?$CId@
  00039	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  0003e	83 c4 18	 add	 esp, 24			; 00000018H
  00041	5e		 pop	 esi

; 327  : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 0c 00	 ret	 12			; 0000000cH
$LN2@SetLoopMot:
  00048	57		 push	 edi

; 295  : 			dwMotion, fBlendTime, fSpeedRatio);
; 296  : 		return;
; 297  : 	}
; 298  : 
; 299  : 	MOTION_KEY dwMotionKey;
; 300  : 	if (!m_pkCurRaceData->GetMotionKey(m_wcurMotionMode, dwMotion, &dwMotionKey))

  00049	8b 7d 08	 mov	 edi, DWORD PTR _dwMotion$[ebp]
  0004c	8d 45 fc	 lea	 eax, DWORD PTR _dwMotionKey$[ebp]
  0004f	50		 push	 eax
  00050	0f b7 86 34 03
	00 00		 movzx	 eax, WORD PTR [esi+820]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetMotionKey@CRaceData@@QAEHGGPAK@Z ; CRaceData::GetMotionKey
  0005e	85 c0		 test	 eax, eax
  00060	75 3d		 jne	 SHORT $LN3@SetLoopMot

; 301  : 	{
; 302  : 		Tracenf("CActorInstance::SetLoopMotion(dwMotion=%d, fBlendTime=%f, fSpeedRatio=%f) - GetMotionKey(m_wcurMotionMode=%d, dwMotion=%d, &MotionKey) ERROR",

  00062	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  00067	0f b7 86 34 03
	00 00		 movzx	 eax, WORD PTR [esi+820]
  0006e	57		 push	 edi
  0006f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00072	50		 push	 eax
  00073	83 ec 10	 sub	 esp, 16			; 00000010H
  00076	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0007c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00081	0f 5a c0	 cvtps2pd xmm0, xmm0
  00084	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00089	57		 push	 edi
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0IN@JKOADFII@CActorInstance?3?3SetLoopMotion?$CId@
  0008f	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00094	83 c4 20	 add	 esp, 32			; 00000020H
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi

; 327  : }

  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@SetLoopMot:

; 303  : 			dwMotion, fBlendTime, fSpeedRatio, m_wcurMotionMode, dwMotion);
; 304  : 		return;
; 305  : 	}
; 306  : 
; 307  : 	__ClearMotion();

  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?__ClearMotion@CActorInstance@@IAEXXZ ; CActorInstance::__ClearMotion

; 308  : 
; 309  : 	SSetMotionData kSetMotData;
; 310  : 	kSetMotData.dwMotKey=dwMotionKey;

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _dwMotionKey$[ebp]

; 313  : 
; 314  : 	DWORD dwRealMotionKey = __SetMotion(kSetMotData);

  000a9	8b ce		 mov	 ecx, esi
  000ab	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  000b0	89 45 e8	 mov	 DWORD PTR _kSetMotData$[ebp], eax
  000b3	8d 45 e8	 lea	 eax, DWORD PTR _kSetMotData$[ebp]
  000b6	f3 0f 11 45 f0	 movss	 DWORD PTR _kSetMotData$[ebp+8], xmm0
  000bb	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]
  000c0	6a 00		 push	 0
  000c2	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstance.h

; 630  : 				iLoopCount=0;

  000c3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _kSetMotData$[ebp+12], 0

; 631  : 				dwMotKey=0;
; 632  : 				fSpeedRatio=1.0f;
; 633  : 				fBlendTime=0.0f;
; 634  : 				uSkill=0;

  000ca	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _kSetMotData$[ebp+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp

; 312  : 	kSetMotData.fSpeedRatio=fSpeedRatio;

  000d1	f3 0f 11 45 ec	 movss	 DWORD PTR _kSetMotData$[ebp+4], xmm0

; 313  : 
; 314  : 	DWORD dwRealMotionKey = __SetMotion(kSetMotData);

  000d6	e8 00 00 00 00	 call	 ?__SetMotion@CActorInstance@@IAEKABUSSetMotionData@1@K@Z ; CActorInstance::__SetMotion
  000db	8b f8		 mov	 edi, eax

; 315  : 
; 316  : 	if (0 == dwRealMotionKey)

  000dd	85 ff		 test	 edi, edi
  000df	74 7b		 je	 SHORT $LN8@SetLoopMot

; 317  : 		return;
; 318  : 
; 319  : 	m_kCurMotNode.iMotionType = MOTION_TYPE_LOOP;
; 320  : 	m_kCurMotNode.fStartTime = GetLocalTime();

  000e1	8b ce		 mov	 ecx, esi
  000e3	c7 86 10 03 00
	00 02 00 00 00	 mov	 DWORD PTR [esi+784], 2
  000ed	e8 00 00 00 00	 call	 ?GetLocalTime@CGraphicThingInstance@@QAEMXZ ; CGraphicThingInstance::GetLocalTime

; 321  : 	m_kCurMotNode.dwMotionKey = dwRealMotionKey;
; 322  : 	m_kCurMotNode.fEndTime = 0.0f;
; 323  : 	m_kCurMotNode.fSpeedRatio = fSpeedRatio;

  000f2	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fSpeedRatio$[ebp]

; 324  : 	m_kCurMotNode.dwcurFrame = 0;
; 325  : 	m_kCurMotNode.dwFrameCount = GetMotionDuration(dwRealMotionKey) / (1.0f / g_fGameFPS);

  000f7	8b ce		 mov	 ecx, esi
  000f9	d9 9e 20 03 00
	00		 fstp	 DWORD PTR [esi+800]
  000ff	57		 push	 edi
  00100	89 be 14 03 00
	00		 mov	 DWORD PTR [esi+788], edi
  00106	c7 86 24 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+804], 0
  00110	f3 0f 11 86 28
	03 00 00	 movss	 DWORD PTR [esi+808], xmm0
  00118	c7 86 18 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+792], 0
  00122	e8 00 00 00 00	 call	 ?GetMotionDuration@CActorInstance@@IAEMK@Z ; CActorInstance::GetMotionDuration
  00127	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0012f	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?g_fGameFPS@@3MA
  00137	f3 0f 11 45 10	 movss	 DWORD PTR tv219[ebp], xmm0
  0013c	d8 75 10	 fdiv	 DWORD PTR tv219[ebp]
  0013f	d9 5d 10	 fstp	 DWORD PTR tv217[ebp]
  00142	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR tv217[ebp]
  00147	e8 00 00 00 00	 call	 __ftoui3
  0014c	89 86 1c 03 00
	00		 mov	 DWORD PTR [esi+796], eax

; 326  : 	m_kCurMotNode.uSkill = 0;

  00152	c7 86 30 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+816], 0
$LN8@SetLoopMot:
  0015c	5f		 pop	 edi
  0015d	5e		 pop	 esi

; 327  : }

  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c2 0c 00	 ret	 12			; 0000000cH
?SetLoopMotion@CActorInstance@@QAEXKMM@Z ENDP		; CActorInstance::SetLoopMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?GetMotionMode@CActorInstance@@QAEHXZ
_TEXT	SEGMENT
?GetMotionMode@CActorInstance@@QAEHXZ PROC		; CActorInstance::GetMotionMode, COMDAT
; _this$ = ecx

; 251  : 	return m_wcurMotionMode;

  00000	0f b7 81 34 03
	00 00		 movzx	 eax, WORD PTR [ecx+820]

; 252  : }

  00007	c3		 ret	 0
?GetMotionMode@CActorInstance@@QAEHXZ ENDP		; CActorInstance::GetMotionMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?SetMotionMode@CActorInstance@@QAEXH@Z
_TEXT	SEGMENT
_iMotionMode$ = 8					; size = 4
?SetMotionMode@CActorInstance@@QAEXH@Z PROC		; CActorInstance::SetMotionMode, COMDAT
; _this$ = ecx

; 242  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 243  : 	if (IsPoly())

  00006	e8 00 00 00 00	 call	 ?IsPoly@CActorInstance@@QAE_NXZ ; CActorInstance::IsPoly
  0000b	8b 55 08	 mov	 edx, DWORD PTR _iMotionMode$[ebp]
  0000e	84 c0		 test	 al, al
  00010	b9 01 00 00 00	 mov	 ecx, 1
  00015	0f 45 d1	 cmovne	 edx, ecx

; 244  : 		iMotionMode=CRaceMotionData::MODE_GENERAL;
; 245  : 
; 246  : 	m_wcurMotionMode = iMotionMode;

  00018	66 89 96 34 03
	00 00		 mov	 WORD PTR [esi+820], dx
  0001f	5e		 pop	 esi

; 247  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SetMotionMode@CActorInstance@@QAEXH@Z ENDP		; CActorInstance::SetMotionMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ActorInstanceMotion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
