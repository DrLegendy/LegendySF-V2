; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCItemData@@@@6B@		; CDynamicPool<CItemData>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCItemData@@@@UAEPAXI@Z	; CDynamicPool<CItemData>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCItemData@@@@6B@		; CDynamicPool<CItemData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCItemData@@@@@8		; CDynamicPool<CItemData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCItemData@@@@8		; CDynamicPool<CItemData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCItemData@@@@8		; CDynamicPool<CItemData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCItemData@@@@8	; CDynamicPool<CItemData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@VCItemData@@@@UAEPAXI@Z:PROC	; CDynamicPool<CItemData>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCItemData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCItemData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCItemData@@@@@8 ; CDynamicPool<CItemData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCItemData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCItemData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCItemData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCItemData@@@@8 ; CDynamicPool<CItemData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCItemData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCItemData@@@@8 DD 00H		; CDynamicPool<CItemData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCItemData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCItemData@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCItemData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CItemData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCItemData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCItemData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCItemData@@@@6B@ DD 00H		; CDynamicPool<CItemData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCItemData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCItemData@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCItemData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCItemData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCItemData@@@@6B@ ; CDynamicPool<CItemData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCItemData@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0CItemData@@QAE@XZ				; CItemData::CItemData
PUBLIC	??1CItemData@@UAE@XZ				; CItemData::~CItemData
PUBLIC	?Clear@CItemData@@QAEXXZ			; CItemData::Clear
PUBLIC	?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CItemData::SetSummary
PUBLIC	?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CItemData::SetDescription
PUBLIC	?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetModelThing
PUBLIC	?GetSubModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetSubModelThing
PUBLIC	?GetDropModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetDropModelThing
PUBLIC	?GetIconImage@CItemData@@QAEPAVCGraphicSubImage@@XZ ; CItemData::GetIconImage
PUBLIC	?GetLODModelThingCount@CItemData@@QAEKXZ	; CItemData::GetLODModelThingCount
PUBLIC	?GetLODModelThingPointer@CItemData@@QAEHKPAPAVCGraphicThing@@@Z ; CItemData::GetLODModelThingPointer
PUBLIC	?GetAttachingDataCount@CItemData@@QAEKXZ	; CItemData::GetAttachingDataCount
PUBLIC	?GetCollisionDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z ; CItemData::GetCollisionDataPointer
PUBLIC	?GetAttachingDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z ; CItemData::GetAttachingDataPointer
PUBLIC	?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ	; CItemData::GetTable
PUBLIC	?GetIndex@CItemData@@QBEKXZ			; CItemData::GetIndex
PUBLIC	?GetName@CItemData@@QBEPBDXZ			; CItemData::GetName
PUBLIC	?GetDescription@CItemData@@QBEPBDXZ		; CItemData::GetDescription
PUBLIC	?GetSummary@CItemData@@QBEPBDXZ			; CItemData::GetSummary
PUBLIC	?GetType@CItemData@@QBEEXZ			; CItemData::GetType
PUBLIC	?GetSubType@CItemData@@QBEEXZ			; CItemData::GetSubType
PUBLIC	?GetRefine@CItemData@@QBEIXZ			; CItemData::GetRefine
PUBLIC	?GetUseTypeString@CItemData@@QBEPBDXZ		; CItemData::GetUseTypeString
PUBLIC	?GetWeaponType@CItemData@@QBEKXZ		; CItemData::GetWeaponType
PUBLIC	?GetSize@CItemData@@QBEEXZ			; CItemData::GetSize
PUBLIC	?IsAntiFlag@CItemData@@QBEHK@Z			; CItemData::IsAntiFlag
PUBLIC	?IsFlag@CItemData@@QBEHK@Z			; CItemData::IsFlag
PUBLIC	?IsWearableFlag@CItemData@@QBEHK@Z		; CItemData::IsWearableFlag
PUBLIC	?HasNextGrade@CItemData@@QBEHXZ			; CItemData::HasNextGrade
PUBLIC	?GetWearFlags@CItemData@@QBEKXZ			; CItemData::GetWearFlags
PUBLIC	?GetIBuyItemPrice@CItemData@@QBEKXZ		; CItemData::GetIBuyItemPrice
PUBLIC	?GetISellItemPrice@CItemData@@QBEKXZ		; CItemData::GetISellItemPrice
PUBLIC	?GetLimit@CItemData@@QBEHEPAUSItemLimit@1@@Z	; CItemData::GetLimit
PUBLIC	?GetApply@CItemData@@QBEHEPAUSItemApply@1@@Z	; CItemData::GetApply
PUBLIC	?GetValue@CItemData@@QBEJE@Z			; CItemData::GetValue
PUBLIC	?GetSocket@CItemData@@QBEJE@Z			; CItemData::GetSocket
PUBLIC	?SetSocket@CItemData@@QAEJEK@Z			; CItemData::SetSocket
PUBLIC	?GetSocketCount@CItemData@@QBEHXZ		; CItemData::GetSocketCount
PUBLIC	?GetIconNumber@CItemData@@QBEKXZ		; CItemData::GetIconNumber
PUBLIC	?GetSpecularPoweru@CItemData@@QBEIXZ		; CItemData::GetSpecularPoweru
PUBLIC	?GetSpecularPowerf@CItemData@@QBEMXZ		; CItemData::GetSpecularPowerf
PUBLIC	?IsEquipment@CItemData@@QBEHXZ			; CItemData::IsEquipment
PUBLIC	?SetDefaultItemData@CItemData@@QAEXPBD0@Z	; CItemData::SetDefaultItemData
PUBLIC	?SetItemTableData@CItemData@@QAEXPAUSItemTable_r156@1@@Z ; CItemData::SetItemTableData
PUBLIC	?SetItemScale@CItemData@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000000@Z ; CItemData::SetItemScale
PUBLIC	?GetItemScale@CItemData@@QAE_NKAAM00000@Z	; CItemData::GetItemScale
PUBLIC	?__LoadFiles@CItemData@@IAEXXZ			; CItemData::__LoadFiles
PUBLIC	?__SetIconImage@CItemData@@IAEXPBD@Z		; CItemData::__SetIconImage
PUBLIC	??1?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::~vector<CGraphicThing *,std::allocator<CGraphicThing *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@CAXXZ ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Xlength
PUBLIC	??1?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@QAE@XZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::~vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >
PUBLIC	?DestroySystem@CItemData@@SAXXZ			; CItemData::DestroySystem
PUBLIC	?New@CItemData@@SAPAV1@XZ			; CItemData::New
PUBLIC	?Delete@CItemData@@SAXPAV1@@Z			; CItemData::Delete
PUBLIC	??_GCItemData@@UAEPAXI@Z			; CItemData::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCItemData@@@@UAE@XZ		; CDynamicPool<CItemData>::~CDynamicPool<CItemData>
PUBLIC	?Delete@?$CDynamicPool@VCItemData@@@@KAXPAVCItemData@@@Z ; CDynamicPool<CItemData>::Delete
PUBLIC	?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAXPAPAVCGraphicThing@@QAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThing *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Destroy_range<std::allocator<CItemData *> >
PUBLIC	??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@PAPAV1@IAAV?$allocator@PAVCGraphicThing@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThing *> >
PUBLIC	??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ; std::_Copy_memmove<CItemData * *,CItemData * *>
PUBLIC	??$_Zero_range@PAPAVCGraphicThing@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0@Z ; std::_Zero_range<CGraphicThing * *>
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z ; std::_Uninitialized_move<CGraphicThing * *,std::allocator<CGraphicThing *> >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicThing@@PAPAV1@@std@@YAPAPAVCGraphicThing@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThing * *,CGraphicThing * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A ; CItemData::ms_kPool
PUBLIC	??_7CItemData@@6B@				; CItemData::`vftable'
PUBLIC	??_C@_0CD@GGDHOLJD@d?3?1ymir?5work?1item?1etc?1item_bag?4@ ; `string'
PUBLIC	??_C@_0BE@FMGIELLL@icon?1item?127995?4tga@	; `string'
PUBLIC	??_C@_0CI@CPFNJMPO@?$CFs?5not?5found?4?5CItemData?3?3__SetI@ ; `string'
PUBLIC	??_C@_0M@IHDHIBML@JOB_WARRIOR@			; `string'
PUBLIC	??_C@_0N@IAFGBDIL@JOB_ASSASSIN@			; `string'
PUBLIC	??_C@_08IJIBKCOK@JOB_SURA@			; `string'
PUBLIC	??_C@_0L@FBDFJGPA@JOB_SHAMAN@			; `string'
PUBLIC	??_C@_01BIAFAFID@F@				; `string'
PUBLIC	??_C@_0N@OHMMNDLH@NOT_USE_TYPE@			; `string'
PUBLIC	??_C@_0L@JIILHJGL@USE_TUNING@			; `string'
PUBLIC	??_C@_0P@MKAMDACK@USE_DETACHMENT@		; `string'
PUBLIC	??_C@_0BB@IPDHFONJ@USE_CLEAN_SOCKET@		; `string'
PUBLIC	??_C@_0BF@OFJOINJA@USE_CHANGE_ATTRIBUTE@	; `string'
PUBLIC	??_C@_0BC@CNMGHFMD@USE_ADD_ATTRIBUTE@		; `string'
PUBLIC	??_C@_0BD@OPDAABAO@USE_ADD_ATTRIBUTE2@		; `string'
PUBLIC	??_C@_0BJ@NMHGAPML@USE_ADD_ACCESSORY_SOCKET@	; `string'
PUBLIC	??_C@_0BO@CNHACOAA@USE_PUT_INTO_ACCESSORY_SOCKET@ ; `string'
PUBLIC	??_C@_0BJ@FLCFGEDJ@USE_PUT_INTO_BELT_SOCKET@	; `string'
PUBLIC	??_C@_0BJ@MMJPLFIL@USE_PUT_INTO_RING_SOCKET@	; `string'
PUBLIC	??_C@_0BI@JBGADBGG@USE_CHANGE_COSTUME_ATTR@	; `string'
PUBLIC	??_C@_0BH@GEFCODLD@USE_RESET_COSTUME_ATTR@	; `string'
PUBLIC	??_C@_0BB@HEDGKPKE@USE_UNKNOWN_TYPE@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CItemData@@6B@				; CItemData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCItemData@@@8				; CItemData `RTTI Type Descriptor'
PUBLIC	??_R3CItemData@@8				; CItemData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItemData@@8				; CItemData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItemData@@8			; CItemData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@4059000000000000
PUBLIC	__real@42c80000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	??_ECItemData@@UAEPAXI@Z:PROC			; CItemData::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CItemData@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CItemData@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CItemData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CItemData@@8 DD FLAT:??_R0?AVCItemData@@@8 ; CItemData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItemData@@8
rdata$r	ENDS
;	COMDAT ??_R2CItemData@@8
rdata$r	SEGMENT
??_R2CItemData@@8 DD FLAT:??_R1A@?0A@EA@CItemData@@8	; CItemData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CItemData@@8
rdata$r	SEGMENT
??_R3CItemData@@8 DD 00H				; CItemData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CItemData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItemData@@@8
data$r	SEGMENT
??_R0?AVCItemData@@@8 DD FLAT:??_7type_info@@6B@	; CItemData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItemData@@', 00H
data$r	ENDS
;	COMDAT ??_R4CItemData@@6B@
rdata$r	SEGMENT
??_R4CItemData@@6B@ DD 00H				; CItemData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCItemData@@@8
	DD	FLAT:??_R3CItemData@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HEDGKPKE@USE_UNKNOWN_TYPE@
CONST	SEGMENT
??_C@_0BB@HEDGKPKE@USE_UNKNOWN_TYPE@ DB 'USE_UNKNOWN_TYPE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GEFCODLD@USE_RESET_COSTUME_ATTR@
CONST	SEGMENT
??_C@_0BH@GEFCODLD@USE_RESET_COSTUME_ATTR@ DB 'USE_RESET_COSTUME_ATTR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JBGADBGG@USE_CHANGE_COSTUME_ATTR@
CONST	SEGMENT
??_C@_0BI@JBGADBGG@USE_CHANGE_COSTUME_ATTR@ DB 'USE_CHANGE_COSTUME_ATTR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MMJPLFIL@USE_PUT_INTO_RING_SOCKET@
CONST	SEGMENT
??_C@_0BJ@MMJPLFIL@USE_PUT_INTO_RING_SOCKET@ DB 'USE_PUT_INTO_RING_SOCKET'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FLCFGEDJ@USE_PUT_INTO_BELT_SOCKET@
CONST	SEGMENT
??_C@_0BJ@FLCFGEDJ@USE_PUT_INTO_BELT_SOCKET@ DB 'USE_PUT_INTO_BELT_SOCKET'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CNHACOAA@USE_PUT_INTO_ACCESSORY_SOCKET@
CONST	SEGMENT
??_C@_0BO@CNHACOAA@USE_PUT_INTO_ACCESSORY_SOCKET@ DB 'USE_PUT_INTO_ACCESS'
	DB	'ORY_SOCKET', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NMHGAPML@USE_ADD_ACCESSORY_SOCKET@
CONST	SEGMENT
??_C@_0BJ@NMHGAPML@USE_ADD_ACCESSORY_SOCKET@ DB 'USE_ADD_ACCESSORY_SOCKET'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OPDAABAO@USE_ADD_ATTRIBUTE2@
CONST	SEGMENT
??_C@_0BD@OPDAABAO@USE_ADD_ATTRIBUTE2@ DB 'USE_ADD_ATTRIBUTE2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNMGHFMD@USE_ADD_ATTRIBUTE@
CONST	SEGMENT
??_C@_0BC@CNMGHFMD@USE_ADD_ATTRIBUTE@ DB 'USE_ADD_ATTRIBUTE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OFJOINJA@USE_CHANGE_ATTRIBUTE@
CONST	SEGMENT
??_C@_0BF@OFJOINJA@USE_CHANGE_ATTRIBUTE@ DB 'USE_CHANGE_ATTRIBUTE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IPDHFONJ@USE_CLEAN_SOCKET@
CONST	SEGMENT
??_C@_0BB@IPDHFONJ@USE_CLEAN_SOCKET@ DB 'USE_CLEAN_SOCKET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MKAMDACK@USE_DETACHMENT@
CONST	SEGMENT
??_C@_0P@MKAMDACK@USE_DETACHMENT@ DB 'USE_DETACHMENT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JIILHJGL@USE_TUNING@
CONST	SEGMENT
??_C@_0L@JIILHJGL@USE_TUNING@ DB 'USE_TUNING', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OHMMNDLH@NOT_USE_TYPE@
CONST	SEGMENT
??_C@_0N@OHMMNDLH@NOT_USE_TYPE@ DB 'NOT_USE_TYPE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01BIAFAFID@F@
CONST	SEGMENT
??_C@_01BIAFAFID@F@ DB 'F', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBDFJGPA@JOB_SHAMAN@
CONST	SEGMENT
??_C@_0L@FBDFJGPA@JOB_SHAMAN@ DB 'JOB_SHAMAN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IJIBKCOK@JOB_SURA@
CONST	SEGMENT
??_C@_08IJIBKCOK@JOB_SURA@ DB 'JOB_SURA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IAFGBDIL@JOB_ASSASSIN@
CONST	SEGMENT
??_C@_0N@IAFGBDIL@JOB_ASSASSIN@ DB 'JOB_ASSASSIN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHDHIBML@JOB_WARRIOR@
CONST	SEGMENT
??_C@_0M@IHDHIBML@JOB_WARRIOR@ DB 'JOB_WARRIOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CPFNJMPO@?$CFs?5not?5found?4?5CItemData?3?3__SetI@
CONST	SEGMENT
??_C@_0CI@CPFNJMPO@?$CFs?5not?5found?4?5CItemData?3?3__SetI@ DB '%s not f'
	DB	'ound. CItemData::__SetIconImage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FMGIELLL@icon?1item?127995?4tga@
CONST	SEGMENT
??_C@_0BE@FMGIELLL@icon?1item?127995?4tga@ DB 'icon/item/27995.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ?c_szAlterIconImage@?4??__SetIconImage@CItemData@@IAEXPBD@Z@4PBDB
_DATA	SEGMENT
?c_szAlterIconImage@?4??__SetIconImage@CItemData@@IAEXPBD@Z@4PBDB DD FLAT:??_C@_0BE@FMGIELLL@icon?1item?127995?4tga@ ; `CItemData::__SetIconImage'::`5'::c_szAlterIconImage
_DATA	ENDS
;	COMDAT ??_C@_0CD@GGDHOLJD@d?3?1ymir?5work?1item?1etc?1item_bag?4@
CONST	SEGMENT
??_C@_0CD@GGDHOLJD@d?3?1ymir?5work?1item?1etc?1item_bag?4@ DB 'd:/ymir wo'
	DB	'rk/item/etc/item_bag.gr2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CItemData@@6B@
CONST	SEGMENT
??_7CItemData@@6B@ DD FLAT:??_R4CItemData@@6B@		; CItemData::`vftable'
	DD	FLAT:??_ECItemData@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A DD FLAT:??_7?$CDynamicPool@VCItemData@@@@6B@ ; CItemData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCItemData@@@@QAEPAVCItemData@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCItemData@@@@QAEPAVCItemData@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCItemData@@@@QAEPAVCItemData@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCItemData@@@@QAEPAVCItemData@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CItemData@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CItemData@@SAPAV1@XZ$0
__ehfuncinfo$?New@CItemData@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CItemData@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CItemData@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??0CItemData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CItemData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CItemData@@QAE@XZ$8
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicThing@@PAPAV1@@std@@YAPAPAVCGraphicThing@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicThing@@PAPAV1@@std@@YAPAPAVCGraphicThing@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicThing * *,CGraphicThing * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicThing@@PAPAV1@@std@@YAPAPAVCGraphicThing@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicThing * *,CGraphicThing * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicThing * *,std::allocator<CGraphicThing *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicThing@@PAPAV1@@std@@YAPAPAVCGraphicThing@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThing * *,CGraphicThing * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicThing * *,std::allocator<CGraphicThing *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAVCGraphicThing@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAVCGraphicThing@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0@Z PROC ; std::_Zero_range<CGraphicThing * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAVCGraphicThing@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0@Z ENDP ; std::_Zero_range<CGraphicThing * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CItemData * *,CItemData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CItemData * *,CItemData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@PAPAV1@IAAV?$allocator@PAVCGraphicThing@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@PAPAV1@IAAV?$allocator@PAVCGraphicThing@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThing *> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000d	56		 push	 esi
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCGraphicThing@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0@Z ; std::_Zero_range<CGraphicThing * *>
  00014	83 c4 08	 add	 esp, 8

; 1830 :         return _First + _Count;

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi

; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {
; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@PAPAV1@IAAV?$allocator@PAVCGraphicThing@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThing *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ; std::_Copy_memmove<CItemData * *,CItemData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv346 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 92 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6a		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv346[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00055	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005a	2b cb		 sub	 ecx, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005c	56		 push	 esi
  0005d	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0005e	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@PAPAV1@IAAV?$allocator@PAVCGraphicThing@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThing *> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00067	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006a	56		 push	 esi
  0006b	53		 push	 ebx
  0006c	ff 76 04	 push	 DWORD PTR [esi+4]
  0006f	ff 36		 push	 DWORD PTR [esi]
  00071	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z ; std::_Uninitialized_move<CGraphicThing * *,std::allocator<CGraphicThing *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00078	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	85 c9		 test	 ecx, ecx
  0007d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00082	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00091	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00094	89 1e		 mov	 DWORD PTR [esi], ebx
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv346[ebp]
  0009c	03 c3		 add	 eax, ebx
  0009e	5f		 pop	 edi
  0009f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 1208 :     }

  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000aa	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@CAXXZ ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000af	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 32		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 20	 add	 esi, 32			; 00000020H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 0d		 jb	 SHORT $LN18@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00019	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	50		 push	 eax
  0001b	ff 76 ec	 push	 DWORD PTR [esi-20]
  0001e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00023	83 c4 08	 add	 esp, 8
$LN18@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00026	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002d	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00037	83 c6 30	 add	 esi, 48			; 00000030H
  0003a	8d 46 e0	 lea	 eax, DWORD PTR [esi-32]
  0003d	3b c7		 cmp	 eax, edi
  0003f	75 d1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00041	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CItemData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 2d		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00010	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00013	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00016	72 0c		 jb	 SHORT $LN15@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00018	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	50		 push	 eax
  0001a	ff 36		 push	 DWORD PTR [esi]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN15@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00035	83 c6 18	 add	 esi, 24			; 00000018H
  00038	3b f7		 cmp	 esi, edi
  0003a	75 d4		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0003c	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAXPAPAVCGraphicThing@@QAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAXPAPAVCGraphicThing@@QAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicThing *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAXPAPAVCGraphicThing@@QAPAV1@AAV?$allocator@PAVCGraphicThing@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicThing *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4480 : _NODISCARD bool operator==(const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]

; 4480 : _NODISCARD bool operator==(const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00007	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00008	8b fe		 mov	 edi, esi
  0000a	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  0000d	0f 1f 00	 npad	 3
$LL18@operator:
  00010	8a 07		 mov	 al, BYTE PTR [edi]
  00012	47		 inc	 edi
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL18@operator

; 2144 :         const value_type* _Result = _Bx._Buf;

  00017	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001a	2b f9		 sub	 edi, ecx

; 2144 :         const value_type* _Result = _Bx._Buf;

  0001c	8b ca		 mov	 ecx, edx

; 2153 :         return _BUF_SIZE <= _Myres;

  0001e	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00022	72 02		 jb	 SHORT $LN8@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00024	8b 0a		 mov	 ecx, DWORD PTR [edx]
$LN8@operator:

; 4096 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00026	8b 52 10	 mov	 edx, DWORD PTR [edx+16]

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00029	3b d7		 cmp	 edx, edi
  0002b	75 5b		 jne	 SHORT $LN14@operator

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0002d	83 ea 04	 sub	 edx, 4
  00030	72 11		 jb	 SHORT $LN21@operator
$LL22@operator:
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	3b 06		 cmp	 eax, DWORD PTR [esi]
  00036	75 10		 jne	 SHORT $LN20@operator
  00038	83 c1 04	 add	 ecx, 4
  0003b	83 c6 04	 add	 esi, 4
  0003e	83 ea 04	 sub	 edx, 4
  00041	73 ef		 jae	 SHORT $LL22@operator
$LN21@operator:
  00043	83 fa fc	 cmp	 edx, -4			; fffffffcH
  00046	74 34		 je	 SHORT $LN19@operator
$LN20@operator:
  00048	8a 01		 mov	 al, BYTE PTR [ecx]
  0004a	3a 06		 cmp	 al, BYTE PTR [esi]
  0004c	75 27		 jne	 SHORT $LN23@operator
  0004e	83 fa fd	 cmp	 edx, -3			; fffffffdH
  00051	74 29		 je	 SHORT $LN19@operator
  00053	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00056	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00059	75 1a		 jne	 SHORT $LN23@operator
  0005b	83 fa fe	 cmp	 edx, -2			; fffffffeH
  0005e	74 1c		 je	 SHORT $LN19@operator
  00060	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00063	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00066	75 0d		 jne	 SHORT $LN23@operator
  00068	83 fa ff	 cmp	 edx, -1
  0006b	74 0f		 je	 SHORT $LN19@operator
  0006d	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  00070	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00073	74 07		 je	 SHORT $LN19@operator
$LN23@operator:
  00075	1b c0		 sbb	 eax, eax
  00077	83 c8 01	 or	 eax, 1
  0007a	eb 02		 jmp	 SHORT $LN24@operator
$LN19@operator:
  0007c	33 c0		 xor	 eax, eax
$LN24@operator:

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0007e	85 c0		 test	 eax, eax
  00080	75 06		 jne	 SHORT $LN14@operator
  00082	5f		 pop	 edi
  00083	b0 01		 mov	 al, 1

; 4481 :     return _Left._Equal(_Right);
; 4482 : }

  00085	5e		 pop	 esi
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN14@operator:
  00088	5f		 pop	 edi

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00089	32 c0		 xor	 al, al

; 4481 :     return _Left._Equal(_Right);
; 4482 : }

  0008b	5e		 pop	 esi
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CItemData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A ; CItemData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCItemData@@@@UAE@XZ ; CDynamicPool<CItemData>::~CDynamicPool<CItemData>
??__F?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CItemData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ??__E?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CItemData::ms_kPool'', COMDAT

; 6    : CDynamicPool<CItemData>		CItemData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CItemData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CItemData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCItemData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCItemData@@@@UAEPAXI@Z PROC		; CDynamicPool<CItemData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCItemData@@@@UAE@XZ ; CDynamicPool<CItemData>::~CDynamicPool<CItemData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCItemData@@@@UAEPAXI@Z ENDP		; CDynamicPool<CItemData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ PROC ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ENDP ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCItemData@@@@KAXPAVCItemData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCItemData@@@@KAXPAVCItemData@@@Z PROC ; CDynamicPool<CItemData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCItemData@@@@KAXPAVCItemData@@@Z ENDP ; CDynamicPool<CItemData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCItemData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCItemData@@@@UAE@XZ PROC		; CDynamicPool<CItemData>::~CDynamicPool<CItemData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCItemData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCItemData@@@@UAE@XZ ENDP		; CDynamicPool<CItemData>::~CDynamicPool<CItemData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCItemData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCItemData@@UAEPAXI@Z PROC				; CItemData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CItemData@@UAE@XZ	; CItemData::~CItemData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 58 02 00 00	 push	 600			; 00000258H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCItemData@@UAEPAXI@Z ENDP				; CItemData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?Delete@CItemData@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkItemData$ = 8					; size = 4
?Delete@CItemData@@SAXPAV1@@Z PROC			; CItemData::Delete, COMDAT

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 17   : 	pkItemData->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkItemData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CItemData@@QAEXXZ ; CItemData::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 18   : 	ms_kPool.Free(pkItemData);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 19   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 19   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CItemData@@SAXPAV1@@Z ENDP			; CItemData::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?New@CItemData@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CItemData@@SAPAV1@XZ PROC				; CItemData::New, COMDAT

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CItemData@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+16, ecx
  00030	0f 85 87 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	68 58 02 00 00	 push	 600			; 00000258H
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 c0		 test	 eax, eax
  0004f	74 0b		 je	 SHORT $LN6@New
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??0CItemData@@QAE@XZ	; CItemData::CItemData
  00058	8b f0		 mov	 esi, eax
  0005a	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  0005c	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006d	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+12
  00073	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00075	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 12   : 	return ms_kPool.Alloc();

  00077	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00079	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00080	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 13   : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5e		 pop	 esi
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00096	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00099	51		 push	 ecx
  0009a	50		 push	 eax
  0009b	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+4
  000a0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a5	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 12   : 	return ms_kPool.Alloc();

  000ab	8b c6		 mov	 eax, esi

; 13   : }

  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5e		 pop	 esi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000bd	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000c0	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c3	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 13   : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5e		 pop	 esi
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CItemData@@SAPAV1@XZ$0:
  00000	68 58 02 00 00	 push	 600			; 00000258H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CItemData@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CItemData@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CItemData@@SAPAV1@XZ ENDP				; CItemData::New
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?DestroySystem@CItemData@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CItemData@@SAXXZ PROC			; CItemData::DestroySystem, COMDAT

; 22   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 22   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 24   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+16
  00041	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 24   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CItemData@@2V?$CDynamicPool@VCItemData@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CItemData@@SAXXZ ENDP			; CItemData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@QAE@XZ PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::~vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 03	 sar	 edx, 3
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 04	 shl	 eax, 4
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@QAE@XZ ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::~vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::~vector<CGraphicThing *,std::allocator<CGraphicThing *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::~vector<CGraphicThing *,std::allocator<CGraphicThing *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?__SetIconImage@CItemData@@IAEXPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?__SetIconImage@CItemData@@IAEXPBD@Z PROC		; CItemData::__SetIconImage, COMDAT
; _this$ = ecx

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 153  : 	if (!CResourceManager::Instance().IsFileExist(c_szFileName))

  00005	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00010	57		 push	 edi
  00011	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  00016	84 c0		 test	 al, al
  00018	75 35		 jne	 SHORT $LN2@SetIconIma

; 154  : 	{
; 155  : 		TraceError("%s not found. CItemData::__SetIconImage",c_szFileName);

  0001a	57		 push	 edi
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CPFNJMPO@?$CFs?5not?5found?4?5CItemData?3?3__SetI@
  00020	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00025	83 c4 08	 add	 esp, 8

; 156  : 		m_pIconImage = NULL;

  00028	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0

; 157  : #ifdef ENABLE_LOAD_ALTER_ITEMICON
; 158  : 		static const char* c_szAlterIconImage = "icon/item/27995.tga";
; 159  : 		if (CResourceManager::Instance().IsFileExist(c_szAlterIconImage))

  00032	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00038	ff 35 00 00 00
	00		 push	 DWORD PTR ?c_szAlterIconImage@?4??__SetIconImage@CItemData@@IAEXPBD@Z@4PBDB
  0003e	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  00043	84 c0		 test	 al, al
  00045	74 23		 je	 SHORT $LN5@SetIconIma

; 160  : 			m_pIconImage = (CGraphicSubImage *)CResourceManager::Instance().GetResourcePointer(c_szAlterIconImage);

  00047	ff 35 00 00 00
	00		 push	 DWORD PTR ?c_szAlterIconImage@?4??__SetIconImage@CItemData@@IAEXPBD@Z@4PBDB

; 161  : #endif
; 162  : 	}

  0004d	eb 0a		 jmp	 SHORT $LN7@SetIconIma
$LN2@SetIconIma:

; 163  : 	else if (m_pIconImage == NULL)

  0004f	83 be ac 00 00
	00 00		 cmp	 DWORD PTR [esi+172], 0
  00056	75 12		 jne	 SHORT $LN5@SetIconIma

; 164  : 		m_pIconImage = (CGraphicSubImage *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00058	57		 push	 edi
$LN7@SetIconIma:

; 165  : }

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0005f	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00064	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
$LN5@SetIconIma:
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
?__SetIconImage@CItemData@@IAEXPBD@Z ENDP		; CItemData::__SetIconImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?__LoadFiles@CItemData@@IAEXXZ
_TEXT	SEGMENT
_i$1$ = -8						; size = 4
$T1 = -1						; size = 1
?__LoadFiles@CItemData@@IAEXXZ PROC			; CItemData::__LoadFiles, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  00009	83 7f 14 00	 cmp	 DWORD PTR [edi+20], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 127  : 	if (!m_strModelFileName.empty())

  0000d	74 1d		 je	 SHORT $LN5@LoadFiles
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000f	83 7f 18 10	 cmp	 DWORD PTR [edi+24], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00013	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 2145 :         if (_Large_string_engaged()) {

  00016	72 02		 jb	 SHORT $LN15@LoadFiles

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00018	8b 00		 mov	 eax, DWORD PTR [eax]
$LN15@LoadFiles:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 128  : 		m_pModelThing = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(m_strModelFileName.c_str());

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00026	89 87 a0 00 00
	00		 mov	 DWORD PTR [edi+160], eax
$LN5@LoadFiles:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  0002c	83 7f 2c 00	 cmp	 DWORD PTR [edi+44], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 130  : 	if (!m_strSubModelFileName.empty())

  00030	74 1d		 je	 SHORT $LN6@LoadFiles
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00032	83 7f 30 10	 cmp	 DWORD PTR [edi+48], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00036	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]

; 2145 :         if (_Large_string_engaged()) {

  00039	72 02		 jb	 SHORT $LN24@LoadFiles

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@LoadFiles:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 131  : 		m_pSubModelThing = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(m_strSubModelFileName.c_str());

  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00049	89 87 a4 00 00
	00		 mov	 DWORD PTR [edi+164], eax
$LN6@LoadFiles:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  0004f	83 7f 44 00	 cmp	 DWORD PTR [edi+68], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 133  : 	if (!m_strDropModelFileName.empty())

  00053	74 1d		 je	 SHORT $LN7@LoadFiles
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00055	83 7f 48 10	 cmp	 DWORD PTR [edi+72], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00059	8d 47 34	 lea	 eax, DWORD PTR [edi+52]

; 2145 :         if (_Large_string_engaged()) {

  0005c	72 02		 jb	 SHORT $LN33@LoadFiles

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN33@LoadFiles:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 134  : 		m_pDropModelThing = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(m_strDropModelFileName.c_str());

  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0006c	89 87 a8 00 00
	00		 mov	 DWORD PTR [edi+168], eax
$LN7@LoadFiles:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00072	8b 87 94 00 00
	00		 mov	 eax, DWORD PTR [edi+148]
  00078	3b 87 98 00 00
	00		 cmp	 eax, DWORD PTR [edi+152]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 137  : 	if (!m_strLODModelFileNameVector.empty())

  0007e	0f 84 d1 00 00
	00		 je	 $LN3@LoadFiles

; 139  : 		m_pLODModelThingVector.clear();

  00084	53		 push	 ebx
  00085	8d 9f b0 00 00
	00		 lea	 ebx, DWORD PTR [edi+176]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0008b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 139  : 		m_pLODModelThingVector.clear();

  00090	56		 push	 esi
  00091	8b 33		 mov	 esi, DWORD PTR [ebx]
  00093	89 73 04	 mov	 DWORD PTR [ebx+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00096	8b 8f 98 00 00
	00		 mov	 ecx, DWORD PTR [edi+152]
  0009c	2b 8f 94 00 00
	00		 sub	 ecx, DWORD PTR [edi+148]
  000a2	f7 e9		 imul	 ecx
  000a4	c1 fa 02	 sar	 edx, 2
  000a7	8b ca		 mov	 ecx, edx
  000a9	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000ac	03 ca		 add	 ecx, edx

; 1224 :         if (_Newsize > _Oldsize) { // append

  000ae	74 28		 je	 SHORT $LN45@LoadFiles

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000b0	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000b3	2b c6		 sub	 eax, esi
  000b5	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  000b8	3b c8		 cmp	 ecx, eax
  000ba	76 0e		 jbe	 SHORT $LN46@LoadFiles

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  000bc	8d 45 ff	 lea	 eax, DWORD PTR $T1[ebp]
  000bf	50		 push	 eax
  000c0	51		 push	 ecx
  000c1	8b cb		 mov	 ecx, ebx
  000c3	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  000c8	eb 0e		 jmp	 SHORT $LN45@LoadFiles
$LN46@LoadFiles:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000ca	53		 push	 ebx
  000cb	51		 push	 ecx
  000cc	56		 push	 esi
  000cd	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAVCGraphicThing@@@std@@@std@@YAPAPAVCGraphicThing@@PAPAV1@IAAV?$allocator@PAVCGraphicThing@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThing *> >
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000d5	89 43 04	 mov	 DWORD PTR [ebx+4], eax
$LN45@LoadFiles:

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000d8	8b 8f 98 00 00
	00		 mov	 ecx, DWORD PTR [edi+152]
  000de	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000e3	8b b7 94 00 00
	00		 mov	 esi, DWORD PTR [edi+148]
  000e9	2b ce		 sub	 ecx, esi
  000eb	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 142  : 		for (DWORD i = 0; i < m_strLODModelFileNameVector.size(); ++i)

  000ed	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000f4	c1 fa 02	 sar	 edx, 2
  000f7	8b c2		 mov	 eax, edx
  000f9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000fc	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 142  : 		for (DWORD i = 0; i < m_strLODModelFileNameVector.size(); ++i)

  000fe	74 53		 je	 SHORT $LN67@LoadFiles
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00100	33 db		 xor	 ebx, ebx
  00102	33 d2		 xor	 edx, edx
$LL4@LoadFiles:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00104	83 7c 33 14 10	 cmp	 DWORD PTR [ebx+esi+20], 16 ; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00109	8d 0c 33	 lea	 ecx, DWORD PTR [ebx+esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0010c	72 02		 jb	 SHORT $LN57@LoadFiles

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0010e	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN57@LoadFiles:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00110	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 145  : 			m_pLODModelThingVector[i] = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(c_rstrLODModelFileName.c_str());

  00116	51		 push	 ecx
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0011d	8d 34 90	 lea	 esi, DWORD PTR [eax+edx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 145  : 			m_pLODModelThingVector[i] = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(c_rstrLODModelFileName.c_str());

  00120	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00125	ff 45 f8	 inc	 DWORD PTR _i$1$[ebp]
  00128	83 c3 18	 add	 ebx, 24			; 00000018H
  0012b	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0012d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00132	8b 8f 98 00 00
	00		 mov	 ecx, DWORD PTR [edi+152]
  00138	8b b7 94 00 00
	00		 mov	 esi, DWORD PTR [edi+148]
  0013e	2b ce		 sub	 ecx, esi
  00140	f7 e9		 imul	 ecx
  00142	c1 fa 02	 sar	 edx, 2
  00145	8b c2		 mov	 eax, edx
  00147	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0014a	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 142  : 		for (DWORD i = 0; i < m_strLODModelFileNameVector.size(); ++i)

  0014c	8b 55 f8	 mov	 edx, DWORD PTR _i$1$[ebp]
  0014f	3b d0		 cmp	 edx, eax
  00151	72 b1		 jb	 SHORT $LL4@LoadFiles
$LN67@LoadFiles:
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
$LN3@LoadFiles:
  00155	5f		 pop	 edi

; 146  : 		}
; 147  : 	}
; 148  : }

  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c3		 ret	 0
?__LoadFiles@CItemData@@IAEXXZ ENDP			; CItemData::__LoadFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetItemScale@CItemData@@QAE_NKAAM00000@Z
_TEXT	SEGMENT
_dwPos$ = 8						; size = 4
_fScaleX$ = 12						; size = 4
_fScaleY$ = 16						; size = 4
_fScaleZ$ = 20						; size = 4
_fPositionX$ = 24					; size = 4
_fPositionY$ = 28					; size = 4
_fPositionZ$ = 32					; size = 4
?GetItemScale@CItemData@@QAE_NKAAM00000@Z PROC		; CItemData::GetItemScale, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 203  : 	fScaleX = m_ScaleTable.tInfo[dwPos].fScaleX;

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwPos$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  0000d	8b 94 c7 68 01
	00 00		 mov	 edx, DWORD PTR [edi+eax*8+360]
  00014	8b 45 0c	 mov	 eax, DWORD PTR _fScaleX$[ebp]
  00017	89 10		 mov	 DWORD PTR [eax], edx

; 204  : 	fScaleY = m_ScaleTable.tInfo[dwPos].fScaleY;

  00019	8d 14 76	 lea	 edx, DWORD PTR [esi+esi*2]
  0001c	8b 8c d7 6c 01
	00 00		 mov	 ecx, DWORD PTR [edi+edx*8+364]
  00023	8b 45 10	 mov	 eax, DWORD PTR _fScaleY$[ebp]
  00026	89 08		 mov	 DWORD PTR [eax], ecx

; 205  : 	fScaleZ = m_ScaleTable.tInfo[dwPos].fScaleZ;

  00028	8b 8c d7 70 01
	00 00		 mov	 ecx, DWORD PTR [edi+edx*8+368]
  0002f	8b 45 14	 mov	 eax, DWORD PTR _fScaleZ$[ebp]
  00032	89 08		 mov	 DWORD PTR [eax], ecx

; 206  : 	fPositionX = m_ScaleTable.tInfo[dwPos].fPositionX;

  00034	8b 45 18	 mov	 eax, DWORD PTR _fPositionX$[ebp]
  00037	8b 8c d7 74 01
	00 00		 mov	 ecx, DWORD PTR [edi+edx*8+372]
  0003e	89 08		 mov	 DWORD PTR [eax], ecx

; 207  : 	fPositionY = m_ScaleTable.tInfo[dwPos].fPositionY;

  00040	8b 45 1c	 mov	 eax, DWORD PTR _fPositionY$[ebp]
  00043	8b 8c d7 78 01
	00 00		 mov	 ecx, DWORD PTR [edi+edx*8+376]
  0004a	89 08		 mov	 DWORD PTR [eax], ecx

; 208  : 	fPositionZ = m_ScaleTable.tInfo[dwPos].fPositionZ;

  0004c	8b 45 20	 mov	 eax, DWORD PTR _fPositionZ$[ebp]
  0004f	8b 8c d7 7c 01
	00 00		 mov	 ecx, DWORD PTR [edi+edx*8+380]

; 209  : 	return true;

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	89 08		 mov	 DWORD PTR [eax], ecx
  0005a	b0 01		 mov	 al, 1

; 210  : }

  0005c	5d		 pop	 ebp
  0005d	c2 1c 00	 ret	 28			; 0000001cH
?GetItemScale@CItemData@@QAE_NKAAM00000@Z ENDP		; CItemData::GetItemScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?SetItemScale@CItemData@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000000@Z
_TEXT	SEGMENT
tv1010 = -4						; size = 4
_strJob$ = 8						; size = 24
_strSex$ = 32						; size = 24
_strScaleX$ = 56					; size = 24
_strScaleY$ = 80					; size = 24
_strScaleZ$ = 104					; size = 24
_strPositionX$ = 128					; size = 24
_strPositionY$ = 152					; size = 24
_strPositionZ$ = 176					; size = 24
?SetItemScale@CItemData@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000000@Z PROC ; CItemData::SetItemScale, COMDAT
; _this$ = ecx

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 175  : 	DWORD dwPos=0;
; 176  : 	if (strJob == "JOB_WARRIOR")

  00007	8d 45 08	 lea	 eax, DWORD PTR _strJob$[ebp]
  0000a	8b d9		 mov	 ebx, ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IHDHIBML@JOB_WARRIOR@
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00017	83 c4 08	 add	 esp, 8
  0001a	84 c0		 test	 al, al
  0001c	74 07		 je	 SHORT $LN2@SetItemSca

; 177  : 		dwPos = NRaceData::JOB_WARRIOR;

  0001e	bf 01 00 00 00	 mov	 edi, 1
  00023	eb 53		 jmp	 SHORT $LN8@SetItemSca
$LN2@SetItemSca:

; 178  : 	else if (strJob == "JOB_ASSASSIN")

  00025	8d 45 08	 lea	 eax, DWORD PTR _strJob$[ebp]
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IAFGBDIL@JOB_ASSASSIN@
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00033	83 c4 08	 add	 esp, 8
  00036	84 c0		 test	 al, al
  00038	74 07		 je	 SHORT $LN4@SetItemSca

; 179  : 		dwPos = NRaceData::JOB_ASSASSIN;

  0003a	bf 02 00 00 00	 mov	 edi, 2
  0003f	eb 37		 jmp	 SHORT $LN8@SetItemSca
$LN4@SetItemSca:

; 180  : 	else if (strJob == "JOB_SURA")

  00041	8d 45 08	 lea	 eax, DWORD PTR _strJob$[ebp]
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_08IJIBKCOK@JOB_SURA@
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0004f	83 c4 08	 add	 esp, 8
  00052	84 c0		 test	 al, al
  00054	74 07		 je	 SHORT $LN6@SetItemSca

; 181  : 		dwPos = NRaceData::JOB_SURA;

  00056	bf 03 00 00 00	 mov	 edi, 3
  0005b	eb 1b		 jmp	 SHORT $LN8@SetItemSca
$LN6@SetItemSca:

; 182  : 	else if (strJob == "JOB_SHAMAN")

  0005d	8d 45 08	 lea	 eax, DWORD PTR _strJob$[ebp]
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FBDFJGPA@JOB_SHAMAN@
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0006b	83 c4 08	 add	 esp, 8
  0006e	0f b6 f8	 movzx	 edi, al
  00071	f7 df		 neg	 edi
  00073	1b ff		 sbb	 edi, edi
  00075	83 c7 05	 add	 edi, 5
$LN8@SetItemSca:

; 183  : 		dwPos = NRaceData::JOB_SHAMAN;
; 184  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 185  : 	else
; 186  : 		dwPos = NRaceData::JOB_WOLFMAN;
; 187  : #endif
; 188  : 
; 189  : 	dwPos += 1;
; 190  : 	if (strSex == "F")

  00078	8d 45 20	 lea	 eax, DWORD PTR _strSex$[ebp]
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_01BIAFAFID@F@
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00086	84 c0		 test	 al, al
  00088	8d 77 05	 lea	 esi, DWORD PTR [edi+5]

; 2144 :         const value_type* _Result = _Bx._Buf;

  0008b	8d 45 38	 lea	 eax, DWORD PTR _strScaleX$[ebp]

; 3668 :         return _Mypair._Myval2._Myptr();

  0008e	0f 44 f7	 cmove	 esi, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00091	83 7d 4c 10	 cmp	 DWORD PTR _strScaleX$[ebp+20], 16 ; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00095	0f 43 45 38	 cmovae	 eax, DWORD PTR _strScaleX$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 193  : 	m_ScaleTable.tInfo[dwPos].fScaleX = float(atof(strScaleX.c_str()) / 100.0f);

  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _atof
  0009f	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  000a5	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000a8	83 7d 64 10	 cmp	 DWORD PTR _strScaleY$[ebp+20], 16 ; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 194  : 	m_ScaleTable.tInfo[dwPos].fScaleY = float(atof(strScaleY.c_str()) / 100.0f);

  000ac	8d 34 76	 lea	 esi, DWORD PTR [esi+esi*2]
  000af	d9 5d fc	 fstp	 DWORD PTR tv1010[ebp]
  000b2	d9 45 fc	 fld	 DWORD PTR tv1010[ebp]
  000b5	d9 9c c3 68 01
	00 00		 fstp	 DWORD PTR [ebx+eax*8+360]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  000bc	8d 45 50	 lea	 eax, DWORD PTR _strScaleY$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  000bf	0f 43 45 50	 cmovae	 eax, DWORD PTR _strScaleY$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 194  : 	m_ScaleTable.tInfo[dwPos].fScaleY = float(atof(strScaleY.c_str()) / 100.0f);

  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 _atof
  000c9	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  000cf	8d 45 68	 lea	 eax, DWORD PTR _strScaleZ$[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  000d2	83 7d 7c 10	 cmp	 DWORD PTR _strScaleZ$[ebp+20], 16 ; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000d6	0f 43 45 68	 cmovae	 eax, DWORD PTR _strScaleZ$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 195  : 	m_ScaleTable.tInfo[dwPos].fScaleZ = float(atof(strScaleZ.c_str()) / 100.0f);

  000da	50		 push	 eax
  000db	d9 9c f3 6c 01
	00 00		 fstp	 DWORD PTR [ebx+esi*8+364]
  000e2	e8 00 00 00 00	 call	 _atof
  000e7	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  000ed	8d 85 80 00 00
	00		 lea	 eax, DWORD PTR _strPositionX$[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  000f3	83 bd 94 00 00
	00 10		 cmp	 DWORD PTR _strPositionX$[ebp+20], 16 ; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000fa	0f 43 85 80 00
	00 00		 cmovae	 eax, DWORD PTR _strPositionX$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 196  : 	m_ScaleTable.tInfo[dwPos].fPositionX = float(atof(strPositionX.c_str()) * 100.0f);

  00101	50		 push	 eax
  00102	d9 9c f3 70 01
	00 00		 fstp	 DWORD PTR [ebx+esi*8+368]
  00109	e8 00 00 00 00	 call	 _atof
  0010e	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4059000000000000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00114	8d 85 98 00 00
	00		 lea	 eax, DWORD PTR _strPositionY$[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  0011a	83 bd ac 00 00
	00 10		 cmp	 DWORD PTR _strPositionY$[ebp+20], 16 ; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00121	0f 43 85 98 00
	00 00		 cmovae	 eax, DWORD PTR _strPositionY$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 197  : 	m_ScaleTable.tInfo[dwPos].fPositionY = float(atof(strPositionY.c_str()) * 100.0f);

  00128	50		 push	 eax
  00129	d9 9c f3 74 01
	00 00		 fstp	 DWORD PTR [ebx+esi*8+372]
  00130	e8 00 00 00 00	 call	 _atof
  00135	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4059000000000000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  0013b	8d 85 b0 00 00
	00		 lea	 eax, DWORD PTR _strPositionZ$[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  00141	83 bd c4 00 00
	00 10		 cmp	 DWORD PTR _strPositionZ$[ebp+20], 16 ; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00148	0f 43 85 b0 00
	00 00		 cmovae	 eax, DWORD PTR _strPositionZ$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 198  : 	m_ScaleTable.tInfo[dwPos].fPositionZ = float(atof(strPositionZ.c_str()) * 100.0f);

  0014f	50		 push	 eax
  00150	d9 9c f3 78 01
	00 00		 fstp	 DWORD PTR [ebx+esi*8+376]
  00157	e8 00 00 00 00	 call	 _atof
  0015c	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4059000000000000
  00162	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00165	8b 45 1c	 mov	 eax, DWORD PTR _strJob$[ebp+20]
  00168	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 198  : 	m_ScaleTable.tInfo[dwPos].fPositionZ = float(atof(strPositionZ.c_str()) * 100.0f);

  00169	d9 9c f3 7c 01
	00 00		 fstp	 DWORD PTR [ebx+esi*8+380]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00170	5e		 pop	 esi
  00171	5b		 pop	 ebx
  00172	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00175	72 0d		 jb	 SHORT $LN66@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00177	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00178	50		 push	 eax
  00179	ff 75 08	 push	 DWORD PTR _strJob$[ebp]
  0017c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00181	83 c4 08	 add	 esp, 8
$LN66@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00184	8b 45 34	 mov	 eax, DWORD PTR _strSex$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00187	c7 45 18 00 00
	00 00		 mov	 DWORD PTR _strJob$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0018e	c7 45 1c 0f 00
	00 00		 mov	 DWORD PTR _strJob$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00195	c6 45 08 00	 mov	 BYTE PTR _strJob$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00199	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019c	72 0d		 jb	 SHORT $LN76@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0019e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0019f	50		 push	 eax
  001a0	ff 75 20	 push	 DWORD PTR _strSex$[ebp]
  001a3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001a8	83 c4 08	 add	 esp, 8
$LN76@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001ab	8b 45 4c	 mov	 eax, DWORD PTR _strScaleX$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  001ae	c7 45 30 00 00
	00 00		 mov	 DWORD PTR _strSex$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001b5	c7 45 34 0f 00
	00 00		 mov	 DWORD PTR _strSex$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001bc	c6 45 20 00	 mov	 BYTE PTR _strSex$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  001c0	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c3	72 0d		 jb	 SHORT $LN86@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001c5	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c6	50		 push	 eax
  001c7	ff 75 38	 push	 DWORD PTR _strScaleX$[ebp]
  001ca	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001cf	83 c4 08	 add	 esp, 8
$LN86@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001d2	8b 45 64	 mov	 eax, DWORD PTR _strScaleY$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  001d5	c7 45 48 00 00
	00 00		 mov	 DWORD PTR _strScaleX$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001dc	c7 45 4c 0f 00
	00 00		 mov	 DWORD PTR _strScaleX$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001e3	c6 45 38 00	 mov	 BYTE PTR _strScaleX$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  001e7	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001ea	72 0d		 jb	 SHORT $LN96@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001ec	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ed	50		 push	 eax
  001ee	ff 75 50	 push	 DWORD PTR _strScaleY$[ebp]
  001f1	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001f6	83 c4 08	 add	 esp, 8
$LN96@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001f9	8b 45 7c	 mov	 eax, DWORD PTR _strScaleZ$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  001fc	c7 45 60 00 00
	00 00		 mov	 DWORD PTR _strScaleY$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00203	c7 45 64 0f 00
	00 00		 mov	 DWORD PTR _strScaleY$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0020a	c6 45 50 00	 mov	 BYTE PTR _strScaleY$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0020e	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00211	72 0d		 jb	 SHORT $LN106@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00213	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00214	50		 push	 eax
  00215	ff 75 68	 push	 DWORD PTR _strScaleZ$[ebp]
  00218	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0021d	83 c4 08	 add	 esp, 8
$LN106@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00220	8b 85 94 00 00
	00		 mov	 eax, DWORD PTR _strPositionX$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00226	c7 45 78 00 00
	00 00		 mov	 DWORD PTR _strScaleZ$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0022d	c7 45 7c 0f 00
	00 00		 mov	 DWORD PTR _strScaleZ$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00234	c6 45 68 00	 mov	 BYTE PTR _strScaleZ$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00238	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0023b	72 10		 jb	 SHORT $LN116@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0023d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0023e	50		 push	 eax
  0023f	ff b5 80 00 00
	00		 push	 DWORD PTR _strPositionX$[ebp]
  00245	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0024a	83 c4 08	 add	 esp, 8
$LN116@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0024d	8b 85 ac 00 00
	00		 mov	 eax, DWORD PTR _strPositionY$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00253	c7 85 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR _strPositionX$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0025d	c7 85 94 00 00
	00 0f 00 00 00	 mov	 DWORD PTR _strPositionX$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00267	c6 85 80 00 00
	00 00		 mov	 BYTE PTR _strPositionX$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0026e	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00271	72 10		 jb	 SHORT $LN126@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00273	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00274	50		 push	 eax
  00275	ff b5 98 00 00
	00		 push	 DWORD PTR _strPositionY$[ebp]
  0027b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00280	83 c4 08	 add	 esp, 8
$LN126@SetItemSca:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00283	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR _strPositionZ$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00289	c7 85 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR _strPositionY$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00293	c7 85 ac 00 00
	00 0f 00 00 00	 mov	 DWORD PTR _strPositionY$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0029d	c6 85 98 00 00
	00 00		 mov	 BYTE PTR _strPositionY$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  002a4	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002a7	72 10		 jb	 SHORT $LN136@SetItemSca

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002a9	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002aa	50		 push	 eax
  002ab	ff b5 b0 00 00
	00		 push	 DWORD PTR _strPositionZ$[ebp]
  002b1	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002b6	83 c4 08	 add	 esp, 8
$LN136@SetItemSca:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 199  : }

  002b9	8b e5		 mov	 esp, ebp
  002bb	5d		 pop	 ebp
  002bc	c2 c0 00	 ret	 192			; 000000c0H
?SetItemScale@CItemData@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000000@Z ENDP ; CItemData::SetItemScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?SetItemTableData@CItemData@@QAEXPAUSItemTable_r156@1@@Z
_TEXT	SEGMENT
_pItemTable$ = 8					; size = 4
?SetItemTableData@CItemData@@QAEXPAUSItemTable_r156@1@@Z PROC ; CItemData::SetItemTableData, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 169  : 	memcpy(&m_ItemTable, pItemTable, sizeof(TItemTable));

  00004	8b 75 08	 mov	 esi, DWORD PTR _pItemTable$[ebp]
  00007	57		 push	 edi
  00008	8d b9 cc 00 00
	00		 lea	 edi, DWORD PTR [ecx+204]
  0000e	b9 27 00 00 00	 mov	 ecx, 39			; 00000027H
  00013	f3 a5		 rep movsd
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi

; 170  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?SetItemTableData@CItemData@@QAEXPAUSItemTable_r156@1@@Z ENDP ; CItemData::SetItemTableData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?SetDefaultItemData@CItemData@@QAEXPBD0@Z
_TEXT	SEGMENT
_c_szIconFileName$ = 8					; size = 4
tv170 = 12						; size = 4
_c_szModelFileName$ = 12				; size = 4
?SetDefaultItemData@CItemData@@QAEXPBD0@Z PROC		; CItemData::SetDefaultItemData, COMDAT
; _this$ = ecx

; 103  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 104  : 	if(c_szModelFileName)

  00005	8b 75 0c	 mov	 esi, DWORD PTR _c_szModelFileName$[ebp]
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0000e	85 f6		 test	 esi, esi
  00010	74 31		 je	 SHORT $LN2@SetDefault
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00012	8b d6		 mov	 edx, esi
  00014	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00017	89 45 0c	 mov	 DWORD PTR tv170[ebp], eax
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL53@SetDefault:
  00020	8a 02		 mov	 al, BYTE PTR [edx]
  00022	42		 inc	 edx
  00023	84 c0		 test	 al, al
  00025	75 f9		 jne	 SHORT $LL53@SetDefault
  00027	2b 55 0c	 sub	 edx, DWORD PTR tv170[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0002a	52		 push	 edx
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00031	8b c6		 mov	 eax, esi
  00033	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
$LL54@SetDefault:
  00036	8a 10		 mov	 dl, BYTE PTR [eax]
  00038	40		 inc	 eax
  00039	84 d2		 test	 dl, dl
  0003b	75 f9		 jne	 SHORT $LL54@SetDefault
  0003d	2b c1		 sub	 eax, ecx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003f	50		 push	 eax
  00040	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 108  : 	}

  00041	eb 13		 jmp	 SHORT $LN56@SetDefault
$LN2@SetDefault:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00043	6a 00		 push	 0
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0004a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004f	6a 22		 push	 34			; 00000022H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@GGDHOLJD@d?3?1ymir?5work?1item?1etc?1item_bag?4@
$LN56@SetDefault:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00056	8d 4f 34	 lea	 ecx, DWORD PTR [edi+52]
  00059	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0005e	8b 55 08	 mov	 edx, DWORD PTR _c_szIconFileName$[ebp]
  00061	8b ca		 mov	 ecx, edx
  00063	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL55@SetDefault:
  00066	8a 01		 mov	 al, BYTE PTR [ecx]
  00068	41		 inc	 ecx
  00069	84 c0		 test	 al, al
  0006b	75 f9		 jne	 SHORT $LL55@SetDefault
  0006d	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0006f	51		 push	 ecx
  00070	52		 push	 edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 114  : 	m_strIconFileName = c_szIconFileName;

  00071	8d 4f 4c	 lea	 ecx, DWORD PTR [edi+76]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00074	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00079	6a 00		 push	 0
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 116  : 	m_strSubModelFileName = "";

  00080	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00083	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00088	6a 00		 push	 0
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 117  : 	m_strDescription = "";

  0008f	8d 4f 64	 lea	 ecx, DWORD PTR [edi+100]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00092	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00097	6a 00		 push	 0
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 118  : 	m_strSummary = "";

  0009e	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000a6	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 121  : 	__LoadFiles();

  000a9	8b cf		 mov	 ecx, edi
  000ab	66 0f d6 87 53
	01 00 00	 movq	 QWORD PTR [edi+339], xmm0
  000b3	c7 87 5b 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+347], 0
  000bd	e8 00 00 00 00	 call	 ?__LoadFiles@CItemData@@IAEXXZ ; CItemData::__LoadFiles
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx

; 122  : }

  000c5	5d		 pop	 ebp
  000c6	c2 08 00	 ret	 8
?SetDefaultItemData@CItemData@@QAEXPBD0@Z ENDP		; CItemData::SetDefaultItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?IsEquipment@CItemData@@QBEHXZ
_TEXT	SEGMENT
?IsEquipment@CItemData@@QBEHXZ PROC			; CItemData::IsEquipment, COMDAT
; _this$ = ecx

; 428  : 	switch (GetType())

  00000	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  00005	fe c8		 dec	 al
  00007	b1 01		 mov	 cl, 1
  00009	3a c8		 cmp	 cl, al
  0000b	1b c0		 sbb	 eax, eax
  0000d	40		 inc	 eax

; 429  : 	{
; 430  : 		case ITEM_TYPE_WEAPON:
; 431  : 		case ITEM_TYPE_ARMOR:
; 432  : 			return TRUE;
; 433  : 			break;
; 434  : 	}
; 435  : 
; 436  : 	return FALSE;
; 437  : }

  0000e	c3		 ret	 0
?IsEquipment@CItemData@@QBEHXZ ENDP			; CItemData::IsEquipment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSpecularPowerf@CItemData@@QBEMXZ
_TEXT	SEGMENT
tv78 = -4						; size = 4
?GetSpecularPowerf@CItemData@@QBEMXZ PROC		; CItemData::GetSpecularPowerf, COMDAT
; _this$ = ecx

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 416  : 	UINT uSpecularPower=GetSpecularPoweru();

  00004	e8 00 00 00 00	 call	 ?GetSpecularPoweru@CItemData@@QBEIXZ ; CItemData::GetSpecularPoweru
  00009	66 0f 6e c0	 movd	 xmm0, eax

; 417  : 
; 418  : 	return float(uSpecularPower) / 100.0f;

  0000d	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00011	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00014	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0001d	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00021	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42c80000
  00029	f3 0f 11 45 fc	 movss	 DWORD PTR tv78[ebp], xmm0
  0002e	d9 45 fc	 fld	 DWORD PTR tv78[ebp]

; 419  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?GetSpecularPowerf@CItemData@@QBEMXZ ENDP		; CItemData::GetSpecularPowerf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSpecularPoweru@CItemData@@QBEIXZ
_TEXT	SEGMENT
?GetSpecularPoweru@CItemData@@QBEIXZ PROC		; CItemData::GetSpecularPoweru, COMDAT
; _this$ = ecx

; 411  : 	return m_ItemTable.bSpecular;

  00000	0f b6 81 66 01
	00 00		 movzx	 eax, BYTE PTR [ecx+358]

; 412  : }

  00007	c3		 ret	 0
?GetSpecularPoweru@CItemData@@QBEIXZ ENDP		; CItemData::GetSpecularPoweru
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetIconNumber@CItemData@@QBEKXZ
_TEXT	SEGMENT
?GetIconNumber@CItemData@@QBEKXZ PROC			; CItemData::GetIconNumber, COMDAT
; _this$ = ecx

; 404  : 	return m_ItemTable.dwVnum;

  00000	8b 81 cc 00 00
	00		 mov	 eax, DWORD PTR [ecx+204]

; 405  : //!@#
; 406  : //	return m_ItemTable.dwIconNumber;
; 407  : }

  00006	c3		 ret	 0
?GetIconNumber@CItemData@@QBEKXZ ENDP			; CItemData::GetIconNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSocketCount@CItemData@@QBEHXZ
_TEXT	SEGMENT
?GetSocketCount@CItemData@@QBEHXZ PROC			; CItemData::GetSocketCount, COMDAT
; _this$ = ecx

; 399  : 	return m_ItemTable.bGainSocketPct;

  00000	0f b6 81 67 01
	00 00		 movzx	 eax, BYTE PTR [ecx+359]

; 400  : }

  00007	c3		 ret	 0
?GetSocketCount@CItemData@@QBEHXZ ENDP			; CItemData::GetSocketCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?SetSocket@CItemData@@QAEJEK@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_value$ = 12						; size = 4
?SetSocket@CItemData@@QAEJEK@Z PROC			; CItemData::SetSocket, COMDAT
; _this$ = ecx

; 376  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 377  : 	if (byIndex >= ITEM_SOCKET_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _byIndex$[ebp]
  00006	8b d1		 mov	 edx, ecx
  00008	3c 03		 cmp	 al, 3
  0000a	72 09		 jb	 SHORT $LN2@SetSocket

; 378  : 	{
; 379  : 		assert(byIndex < ITEM_SOCKET_MAX_NUM);
; 380  : 		return -1;

  0000c	b8 ff ff ff ff	 mov	 eax, -1

; 384  : }

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
$LN2@SetSocket:

; 381  : 	}
; 382  : 
; 383  : 	return m_ItemTable.alSockets[byIndex] = value;

  00015	0f b6 c8	 movzx	 ecx, al
  00018	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  0001b	89 84 8a 53 01
	00 00		 mov	 DWORD PTR [edx+ecx*4+339], eax

; 384  : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetSocket@CItemData@@QAEJEK@Z ENDP			; CItemData::SetSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSocket@CItemData@@QBEJE@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
?GetSocket@CItemData@@QBEJE@Z PROC			; CItemData::GetSocket, COMDAT
; _this$ = ecx

; 387  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 388  : 	if (byIndex >= ITEM_SOCKET_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _byIndex$[ebp]
  00006	3c 03		 cmp	 al, 3
  00008	72 09		 jb	 SHORT $LN2@GetSocket

; 389  : 	{
; 390  : 		assert(byIndex < ITEM_SOCKET_MAX_NUM);
; 391  : 		return -1;

  0000a	b8 ff ff ff ff	 mov	 eax, -1

; 395  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
$LN2@GetSocket:

; 392  : 	}
; 393  : 
; 394  : 	return m_ItemTable.alSockets[byIndex];

  00013	0f b6 c0	 movzx	 eax, al
  00016	8b 84 81 53 01
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+339]

; 395  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?GetSocket@CItemData@@QBEJE@Z ENDP			; CItemData::GetSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetValue@CItemData@@QBEJE@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
?GetValue@CItemData@@QBEJE@Z PROC			; CItemData::GetValue, COMDAT
; _this$ = ecx

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 366  : 	if (byIndex >= ITEM_VALUES_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _byIndex$[ebp]
  00006	3c 06		 cmp	 al, 6
  00008	72 06		 jb	 SHORT $LN2@GetValue

; 367  : 	{
; 368  : 		assert(byIndex < ITEM_VALUES_MAX_NUM);
; 369  : 		return 0;

  0000a	33 c0		 xor	 eax, eax

; 373  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
$LN2@GetValue:

; 370  : 	}
; 371  : 
; 372  : 	return m_ItemTable.alValues[byIndex];

  00010	0f b6 c0	 movzx	 eax, al
  00013	8b 84 81 3b 01
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+315]

; 373  : }

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetValue@CItemData@@QBEJE@Z ENDP			; CItemData::GetValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetApply@CItemData@@QBEHEPAUSItemApply@1@@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_pItemApply$ = 12					; size = 4
?GetApply@CItemData@@QBEHEPAUSItemApply@1@@Z PROC	; CItemData::GetApply, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 354  : 	if (byIndex >= ITEM_APPLY_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _byIndex$[ebp]
  00006	3c 03		 cmp	 al, 3
  00008	72 06		 jb	 SHORT $LN2@GetApply

; 355  : 	{
; 356  : 		assert(byIndex < ITEM_APPLY_MAX_NUM);
; 357  : 		return FALSE;

  0000a	33 c0		 xor	 eax, eax

; 362  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@GetApply:

; 358  : 	}
; 359  : 
; 360  : 	*pItemApply = m_ItemTable.aApplies[byIndex];

  00010	0f b6 c0	 movzx	 eax, al
  00013	83 c0 3c	 add	 eax, 60			; 0000003cH
  00016	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _pItemApply$[ebp]
  0001c	03 d0		 add	 edx, eax
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	89 01		 mov	 DWORD PTR [ecx], eax
  00022	8a 42 04	 mov	 al, BYTE PTR [edx+4]
  00025	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 361  : 	return TRUE;

  00028	b8 01 00 00 00	 mov	 eax, 1

; 362  : }

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?GetApply@CItemData@@QBEHEPAUSItemApply@1@@Z ENDP	; CItemData::GetApply
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetLimit@CItemData@@QBEHEPAUSItemLimit@1@@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_pItemLimit$ = 12					; size = 4
?GetLimit@CItemData@@QBEHEPAUSItemLimit@1@@Z PROC	; CItemData::GetLimit, COMDAT
; _this$ = ecx

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 341  : 	if (byIndex >= ITEM_LIMIT_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _byIndex$[ebp]
  00006	3c 02		 cmp	 al, 2
  00008	72 06		 jb	 SHORT $LN2@GetLimit

; 342  : 	{
; 343  : 		assert(byIndex < ITEM_LIMIT_MAX_NUM);
; 344  : 		return FALSE;

  0000a	33 c0		 xor	 eax, eax

; 350  : }

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
$LN2@GetLimit:

; 345  : 	}
; 346  : 
; 347  : 	*pItemLimit = m_ItemTable.aLimits[byIndex];

  00010	0f b6 c0	 movzx	 eax, al
  00013	83 c0 3a	 add	 eax, 58			; 0000003aH
  00016	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _pItemLimit$[ebp]
  0001c	03 d0		 add	 edx, eax
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	89 01		 mov	 DWORD PTR [ecx], eax
  00022	8a 42 04	 mov	 al, BYTE PTR [edx+4]
  00025	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 348  : 
; 349  : 	return TRUE;

  00028	b8 01 00 00 00	 mov	 eax, 1

; 350  : }

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?GetLimit@CItemData@@QBEHEPAUSItemLimit@1@@Z ENDP	; CItemData::GetLimit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetISellItemPrice@CItemData@@QBEKXZ
_TEXT	SEGMENT
?GetISellItemPrice@CItemData@@QBEKXZ PROC		; CItemData::GetISellItemPrice, COMDAT
; _this$ = ecx

; 335  : 	return m_ItemTable.dwISellItemPrice;

  00000	8b 81 1e 01 00
	00		 mov	 eax, DWORD PTR [ecx+286]

; 336  : }

  00006	c3		 ret	 0
?GetISellItemPrice@CItemData@@QBEKXZ ENDP		; CItemData::GetISellItemPrice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetIBuyItemPrice@CItemData@@QBEKXZ
_TEXT	SEGMENT
?GetIBuyItemPrice@CItemData@@QBEKXZ PROC		; CItemData::GetIBuyItemPrice, COMDAT
; _this$ = ecx

; 330  : 	return m_ItemTable.dwIBuyItemPrice;

  00000	8b 81 1a 01 00
	00		 mov	 eax, DWORD PTR [ecx+282]

; 331  : }

  00006	c3		 ret	 0
?GetIBuyItemPrice@CItemData@@QBEKXZ ENDP		; CItemData::GetIBuyItemPrice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetWearFlags@CItemData@@QBEKXZ
_TEXT	SEGMENT
?GetWearFlags@CItemData@@QBEKXZ PROC			; CItemData::GetWearFlags, COMDAT
; _this$ = ecx

; 325  : 	return m_ItemTable.dwWearFlags;

  00000	8b 81 12 01 00
	00		 mov	 eax, DWORD PTR [ecx+274]

; 326  : }

  00006	c3		 ret	 0
?GetWearFlags@CItemData@@QBEKXZ ENDP			; CItemData::GetWearFlags
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?HasNextGrade@CItemData@@QBEHXZ
_TEXT	SEGMENT
?HasNextGrade@CItemData@@QBEHXZ PROC			; CItemData::HasNextGrade, COMDAT
; _this$ = ecx

; 320  : 	return 0 != m_ItemTable.dwRefinedVnum;

  00000	33 c0		 xor	 eax, eax
  00002	39 81 5f 01 00
	00		 cmp	 DWORD PTR [ecx+351], eax
  00008	0f 95 c0	 setne	 al

; 321  : }

  0000b	c3		 ret	 0
?HasNextGrade@CItemData@@QBEHXZ ENDP			; CItemData::HasNextGrade
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?IsWearableFlag@CItemData@@QBEHK@Z
_TEXT	SEGMENT
_dwFlag$ = 8						; size = 4
?IsWearableFlag@CItemData@@QBEHK@Z PROC			; CItemData::IsWearableFlag, COMDAT
; _this$ = ecx

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 315  : 	return (dwFlag & m_ItemTable.dwWearFlags) != 0;

  00003	8b 81 12 01 00
	00		 mov	 eax, DWORD PTR [ecx+274]
  00009	23 45 08	 and	 eax, DWORD PTR _dwFlag$[ebp]
  0000c	f7 d8		 neg	 eax
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 316  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?IsWearableFlag@CItemData@@QBEHK@Z ENDP			; CItemData::IsWearableFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?IsFlag@CItemData@@QBEHK@Z
_TEXT	SEGMENT
_dwFlag$ = 8						; size = 4
?IsFlag@CItemData@@QBEHK@Z PROC				; CItemData::IsFlag, COMDAT
; _this$ = ecx

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 310  : 	return (dwFlag & m_ItemTable.dwFlags) != 0;

  00003	8b 81 0e 01 00
	00		 mov	 eax, DWORD PTR [ecx+270]
  00009	23 45 08	 and	 eax, DWORD PTR _dwFlag$[ebp]
  0000c	f7 d8		 neg	 eax
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 311  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?IsFlag@CItemData@@QBEHK@Z ENDP				; CItemData::IsFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?IsAntiFlag@CItemData@@QBEHK@Z
_TEXT	SEGMENT
_dwFlag$ = 8						; size = 4
?IsAntiFlag@CItemData@@QBEHK@Z PROC			; CItemData::IsAntiFlag, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 305  : 	return (dwFlag & m_ItemTable.dwAntiFlags) != 0;

  00003	8b 81 0a 01 00
	00		 mov	 eax, DWORD PTR [ecx+266]
  00009	23 45 08	 and	 eax, DWORD PTR _dwFlag$[ebp]
  0000c	f7 d8		 neg	 eax
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 306  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?IsAntiFlag@CItemData@@QBEHK@Z ENDP			; CItemData::IsAntiFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSize@CItemData@@QBEEXZ
_TEXT	SEGMENT
?GetSize@CItemData@@QBEEXZ PROC				; CItemData::GetSize, COMDAT
; _this$ = ecx

; 300  : 	return m_ItemTable.bSize;

  00000	8a 81 09 01 00
	00		 mov	 al, BYTE PTR [ecx+265]

; 301  : }

  00006	c3		 ret	 0
?GetSize@CItemData@@QBEEXZ ENDP				; CItemData::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetWeaponType@CItemData@@QBEKXZ
_TEXT	SEGMENT
?GetWeaponType@CItemData@@QBEKXZ PROC			; CItemData::GetWeaponType, COMDAT
; _this$ = ecx

; 290  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 291  : #ifdef ENABLE_WEAPON_COSTUME_SYSTEM
; 292  : 	if (GetType()==CItemData::ITEM_TYPE_COSTUME && GetSubType()==CItemData::COSTUME_WEAPON)

  00003	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  00008	3c 1c		 cmp	 al, 28			; 0000001cH
  0000a	75 16		 jne	 SHORT $LN2@GetWeaponT
  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?GetSubType@CItemData@@QBEEXZ ; CItemData::GetSubType
  00013	3c 04		 cmp	 al, 4
  00015	75 0b		 jne	 SHORT $LN2@GetWeaponT

; 293  : 		return GetValue(3);

  00017	6a 03		 push	 3
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?GetValue@CItemData@@QBEJE@Z ; CItemData::GetValue
  00020	5e		 pop	 esi

; 296  : }

  00021	c3		 ret	 0
$LN2@GetWeaponT:

; 294  : #endif
; 295  : 	return m_ItemTable.bSubType;

  00022	0f b6 86 07 01
	00 00		 movzx	 eax, BYTE PTR [esi+263]
  00029	5e		 pop	 esi

; 296  : }

  0002a	c3		 ret	 0
?GetWeaponType@CItemData@@QBEKXZ ENDP			; CItemData::GetWeaponType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetUseTypeString@CItemData@@QBEPBDXZ
_TEXT	SEGMENT
?GetUseTypeString@CItemData@@QBEPBDXZ PROC		; CItemData::GetUseTypeString, COMDAT
; _this$ = ecx

; 252  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 253  : 	if (GetType() != CItemData::ITEM_TYPE_USE)

  00003	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  00008	3c 03		 cmp	 al, 3
  0000a	74 07		 je	 SHORT $LN4@GetUseType

; 254  : 		return "NOT_USE_TYPE";

  0000c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0N@OHMMNDLH@NOT_USE_TYPE@
  00011	5e		 pop	 esi

; 286  : }

  00012	c3		 ret	 0
$LN4@GetUseType:

; 255  : 
; 256  : 	switch (GetSubType())

  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?GetSubType@CItemData@@QBEEXZ ; CItemData::GetSubType
  0001a	0f b6 c0	 movzx	 eax, al
  0001d	83 c0 fe	 add	 eax, -2			; fffffffeH
  00020	83 f8 1e	 cmp	 eax, 30			; 0000001eH
  00023	77 62		 ja	 SHORT $LN2@GetUseType
  00025	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN18@GetUseType[eax]
  0002c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN19@GetUseType[eax*4]
$LN5@GetUseType:

; 257  : 	{
; 258  : 		case USE_TUNING:
; 259  : 			return DEF_STR(USE_TUNING);

  00033	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@JIILHJGL@USE_TUNING@
  00038	5e		 pop	 esi

; 286  : }

  00039	c3		 ret	 0
$LN6@GetUseType:

; 260  : 		case USE_DETACHMENT:
; 261  : 			return DEF_STR(USE_DETACHMENT);

  0003a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@MKAMDACK@USE_DETACHMENT@
  0003f	5e		 pop	 esi

; 286  : }

  00040	c3		 ret	 0
$LN7@GetUseType:

; 262  : 		case USE_CLEAN_SOCKET:
; 263  : 			return DEF_STR(USE_CLEAN_SOCKET);

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BB@IPDHFONJ@USE_CLEAN_SOCKET@
  00046	5e		 pop	 esi

; 286  : }

  00047	c3		 ret	 0
$LN8@GetUseType:

; 264  : 		case USE_CHANGE_ATTRIBUTE:
; 265  : 			return DEF_STR(USE_CHANGE_ATTRIBUTE);

  00048	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BF@OFJOINJA@USE_CHANGE_ATTRIBUTE@
  0004d	5e		 pop	 esi

; 286  : }

  0004e	c3		 ret	 0
$LN9@GetUseType:

; 266  : 		case USE_ADD_ATTRIBUTE:
; 267  : 			return DEF_STR(USE_ADD_ATTRIBUTE);

  0004f	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@CNMGHFMD@USE_ADD_ATTRIBUTE@
  00054	5e		 pop	 esi

; 286  : }

  00055	c3		 ret	 0
$LN10@GetUseType:

; 268  : 		case USE_ADD_ATTRIBUTE2:
; 269  : 			return DEF_STR(USE_ADD_ATTRIBUTE2);

  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BD@OPDAABAO@USE_ADD_ATTRIBUTE2@
  0005b	5e		 pop	 esi

; 286  : }

  0005c	c3		 ret	 0
$LN11@GetUseType:

; 270  : 		case USE_ADD_ACCESSORY_SOCKET:
; 271  : 			return DEF_STR(USE_ADD_ACCESSORY_SOCKET);

  0005d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BJ@NMHGAPML@USE_ADD_ACCESSORY_SOCKET@
  00062	5e		 pop	 esi

; 286  : }

  00063	c3		 ret	 0
$LN12@GetUseType:

; 272  : 		case USE_PUT_INTO_ACCESSORY_SOCKET:
; 273  : 			return DEF_STR(USE_PUT_INTO_ACCESSORY_SOCKET);

  00064	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BO@CNHACOAA@USE_PUT_INTO_ACCESSORY_SOCKET@
  00069	5e		 pop	 esi

; 286  : }

  0006a	c3		 ret	 0
$LN13@GetUseType:

; 274  : 		case USE_PUT_INTO_BELT_SOCKET:
; 275  : 			return DEF_STR(USE_PUT_INTO_BELT_SOCKET);

  0006b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BJ@FLCFGEDJ@USE_PUT_INTO_BELT_SOCKET@
  00070	5e		 pop	 esi

; 286  : }

  00071	c3		 ret	 0
$LN14@GetUseType:

; 276  : 		case USE_PUT_INTO_RING_SOCKET:
; 277  : 			return DEF_STR(USE_PUT_INTO_RING_SOCKET);

  00072	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BJ@MMJPLFIL@USE_PUT_INTO_RING_SOCKET@
  00077	5e		 pop	 esi

; 286  : }

  00078	c3		 ret	 0
$LN15@GetUseType:

; 278  : #ifdef ENABLE_USE_COSTUME_ATTR
; 279  : 		case USE_CHANGE_COSTUME_ATTR:
; 280  : 			return DEF_STR(USE_CHANGE_COSTUME_ATTR);

  00079	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BI@JBGADBGG@USE_CHANGE_COSTUME_ATTR@
  0007e	5e		 pop	 esi

; 286  : }

  0007f	c3		 ret	 0
$LN16@GetUseType:

; 281  : 		case USE_RESET_COSTUME_ATTR:
; 282  : 			return DEF_STR(USE_RESET_COSTUME_ATTR);

  00080	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BH@GEFCODLD@USE_RESET_COSTUME_ATTR@
  00085	5e		 pop	 esi

; 286  : }

  00086	c3		 ret	 0
$LN2@GetUseType:

; 283  : #endif
; 284  : 	}
; 285  : 	return "USE_UNKNOWN_TYPE";

  00087	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BB@HEDGKPKE@USE_UNKNOWN_TYPE@
  0008c	5e		 pop	 esi

; 286  : }

  0008d	c3		 ret	 0
  0008e	66 90		 npad	 2
$LN19@GetUseType:
  00090	00 00 00 00	 DD	 $LN5@GetUseType
  00094	00 00 00 00	 DD	 $LN6@GetUseType
  00098	00 00 00 00	 DD	 $LN7@GetUseType
  0009c	00 00 00 00	 DD	 $LN8@GetUseType
  000a0	00 00 00 00	 DD	 $LN9@GetUseType
  000a4	00 00 00 00	 DD	 $LN11@GetUseType
  000a8	00 00 00 00	 DD	 $LN12@GetUseType
  000ac	00 00 00 00	 DD	 $LN10@GetUseType
  000b0	00 00 00 00	 DD	 $LN13@GetUseType
  000b4	00 00 00 00	 DD	 $LN14@GetUseType
  000b8	00 00 00 00	 DD	 $LN15@GetUseType
  000bc	00 00 00 00	 DD	 $LN16@GetUseType
  000c0	00 00 00 00	 DD	 $LN2@GetUseType
$LN18@GetUseType:
  000c4	00		 DB	 0
  000c5	0c		 DB	 12			; 0000000cH
  000c6	0c		 DB	 12			; 0000000cH
  000c7	0c		 DB	 12			; 0000000cH
  000c8	0c		 DB	 12			; 0000000cH
  000c9	0c		 DB	 12			; 0000000cH
  000ca	0c		 DB	 12			; 0000000cH
  000cb	0c		 DB	 12			; 0000000cH
  000cc	0c		 DB	 12			; 0000000cH
  000cd	0c		 DB	 12			; 0000000cH
  000ce	0c		 DB	 12			; 0000000cH
  000cf	0c		 DB	 12			; 0000000cH
  000d0	01		 DB	 1
  000d1	0c		 DB	 12			; 0000000cH
  000d2	0c		 DB	 12			; 0000000cH
  000d3	02		 DB	 2
  000d4	03		 DB	 3
  000d5	04		 DB	 4
  000d6	05		 DB	 5
  000d7	06		 DB	 6
  000d8	07		 DB	 7
  000d9	0c		 DB	 12			; 0000000cH
  000da	0c		 DB	 12			; 0000000cH
  000db	0c		 DB	 12			; 0000000cH
  000dc	0c		 DB	 12			; 0000000cH
  000dd	0c		 DB	 12			; 0000000cH
  000de	0c		 DB	 12			; 0000000cH
  000df	08		 DB	 8
  000e0	09		 DB	 9
  000e1	0a		 DB	 10			; 0000000aH
  000e2	0b		 DB	 11			; 0000000bH
?GetUseTypeString@CItemData@@QBEPBDXZ ENDP		; CItemData::GetUseTypeString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetRefine@CItemData@@QBEIXZ
_TEXT	SEGMENT
?GetRefine@CItemData@@QBEIXZ PROC			; CItemData::GetRefine, COMDAT
; _this$ = ecx

; 423  : 	return GetIndex()%10;

  00000	e8 00 00 00 00	 call	 ?GetIndex@CItemData@@QBEKXZ ; CItemData::GetIndex
  00005	33 d2		 xor	 edx, edx
  00007	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0000c	f7 f1		 div	 ecx
  0000e	8b c2		 mov	 eax, edx

; 424  : }

  00010	c3		 ret	 0
?GetRefine@CItemData@@QBEIXZ ENDP			; CItemData::GetRefine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSubType@CItemData@@QBEEXZ
_TEXT	SEGMENT
?GetSubType@CItemData@@QBEEXZ PROC			; CItemData::GetSubType, COMDAT
; _this$ = ecx

; 246  : 	return m_ItemTable.bSubType;

  00000	8a 81 07 01 00
	00		 mov	 al, BYTE PTR [ecx+263]

; 247  : }

  00006	c3		 ret	 0
?GetSubType@CItemData@@QBEEXZ ENDP			; CItemData::GetSubType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetType@CItemData@@QBEEXZ
_TEXT	SEGMENT
?GetType@CItemData@@QBEEXZ PROC				; CItemData::GetType, COMDAT
; _this$ = ecx

; 241  : 	return m_ItemTable.bType;

  00000	8a 81 06 01 00
	00		 mov	 al, BYTE PTR [ecx+262]

; 242  : }

  00006	c3		 ret	 0
?GetType@CItemData@@QBEEXZ ENDP				; CItemData::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSummary@CItemData@@QBEPBDXZ
_TEXT	SEGMENT
?GetSummary@CItemData@@QBEPBDXZ PROC			; CItemData::GetSummary, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 b9 90 00 00
	00 10		 cmp	 DWORD PTR [ecx+144], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00007	8d 41 7c	 lea	 eax, DWORD PTR [ecx+124]

; 2145 :         if (_Large_string_engaged()) {

  0000a	72 02		 jb	 SHORT $LN6@GetSummary
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 235  : 	return m_strSummary.c_str();

  0000c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetSummary:

; 236  : }

  0000e	c3		 ret	 0
?GetSummary@CItemData@@QBEPBDXZ ENDP			; CItemData::GetSummary
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetDescription@CItemData@@QBEPBDXZ
_TEXT	SEGMENT
?GetDescription@CItemData@@QBEPBDXZ PROC		; CItemData::GetDescription, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 79 78 10	 cmp	 DWORD PTR [ecx+120], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 64	 lea	 eax, DWORD PTR [ecx+100]

; 2145 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetDescrip
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 230  : 	return m_strDescription.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetDescrip:

; 231  : }

  0000b	c3		 ret	 0
?GetDescription@CItemData@@QBEPBDXZ ENDP		; CItemData::GetDescription
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetName@CItemData@@QBEPBDXZ
_TEXT	SEGMENT
?GetName@CItemData@@QBEPBDXZ PROC			; CItemData::GetName, COMDAT
; _this$ = ecx

; 225  : 	return m_ItemTable.szLocaleName;

  00000	8d 81 ed 00 00
	00		 lea	 eax, DWORD PTR [ecx+237]

; 226  : }

  00006	c3		 ret	 0
?GetName@CItemData@@QBEPBDXZ ENDP			; CItemData::GetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetIndex@CItemData@@QBEKXZ
_TEXT	SEGMENT
?GetIndex@CItemData@@QBEKXZ PROC			; CItemData::GetIndex, COMDAT
; _this$ = ecx

; 220  : 	return m_ItemTable.dwVnum;

  00000	8b 81 cc 00 00
	00		 mov	 eax, DWORD PTR [ecx+204]

; 221  : }

  00006	c3		 ret	 0
?GetIndex@CItemData@@QBEKXZ ENDP			; CItemData::GetIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ
_TEXT	SEGMENT
?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ PROC	; CItemData::GetTable, COMDAT
; _this$ = ecx

; 215  : 	return &m_ItemTable;

  00000	8d 81 cc 00 00
	00		 lea	 eax, DWORD PTR [ecx+204]

; 216  : }

  00006	c3		 ret	 0
?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ ENDP	; CItemData::GetTable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetAttachingDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_c_ppAttachingData$ = 12				; size = 4
?GetAttachingDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z PROC ; CItemData::GetAttachingDataPointer, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 85   : 	if (dwIndex >= GetAttachingDataCount())

  00006	e8 00 00 00 00	 call	 ?GetAttachingDataCount@CItemData@@QAEKXZ ; CItemData::GetAttachingDataCount
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwIndex$[ebp]
  0000e	3b d0		 cmp	 edx, eax
  00010	72 07		 jb	 SHORT $LN2@GetAttachi

; 86   : 		return FALSE;

  00012	33 c0		 xor	 eax, eax
  00014	5e		 pop	 esi

; 90   : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
$LN2@GetAttachi:

; 88   : 	*c_ppAttachingData = &m_AttachingDataVector[dwIndex];

  00019	8b 45 0c	 mov	 eax, DWORD PTR _c_ppAttachingData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001c	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  0001f	c1 e1 04	 shl	 ecx, 4
  00022	03 8e bc 00 00
	00		 add	 ecx, DWORD PTR [esi+188]
  00028	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 88   : 	*c_ppAttachingData = &m_AttachingDataVector[dwIndex];

  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 89   : 	return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1

; 90   : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?GetAttachingDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z ENDP ; CItemData::GetAttachingDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetCollisionDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_c_ppAttachingData$ = 12				; size = 4
?GetCollisionDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z PROC ; CItemData::GetCollisionDataPointer, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 73   : 	if (dwIndex >= GetAttachingDataCount())

  00006	e8 00 00 00 00	 call	 ?GetAttachingDataCount@CItemData@@QAEKXZ ; CItemData::GetAttachingDataCount
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwIndex$[ebp]
  0000e	3b d0		 cmp	 edx, eax
  00010	73 22		 jae	 SHORT $LN9@GetCollisi

; 76   : 	if (NRaceData::ATTACHING_DATA_TYPE_COLLISION_DATA != m_AttachingDataVector[dwIndex].dwType)

  00012	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00018	8d 14 52	 lea	 edx, DWORD PTR [edx+edx*2]
  0001b	c1 e2 04	 shl	 edx, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 76   : 	if (NRaceData::ATTACHING_DATA_TYPE_COLLISION_DATA != m_AttachingDataVector[dwIndex].dwType)

  0001e	03 ca		 add	 ecx, edx
  00020	83 39 01	 cmp	 DWORD PTR [ecx], 1
  00023	75 0f		 jne	 SHORT $LN9@GetCollisi

; 78   : 
; 79   : 	*c_ppAttachingData = &m_AttachingDataVector[dwIndex];

  00025	8b 45 0c	 mov	 eax, DWORD PTR _c_ppAttachingData$[ebp]
  00028	5e		 pop	 esi
  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 80   : 	return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1

; 81   : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN9@GetCollisi:

; 77   : 		return FALSE;

  00034	33 c0		 xor	 eax, eax
  00036	5e		 pop	 esi

; 81   : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetCollisionDataPointer@CItemData@@QAEHKPAPBUSAttachingData@NRaceData@@@Z ENDP ; CItemData::GetCollisionDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetAttachingDataCount@CItemData@@QAEKXZ
_TEXT	SEGMENT
?GetAttachingDataCount@CItemData@@QAEKXZ PROC		; CItemData::GetAttachingDataCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 91 c0 00 00
	00		 mov	 edx, DWORD PTR [ecx+192]
  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	2b 91 bc 00 00
	00		 sub	 edx, DWORD PTR [ecx+188]
  00011	f7 ea		 imul	 edx
  00013	c1 fa 03	 sar	 edx, 3
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 69   : }

  0001d	c3		 ret	 0
?GetAttachingDataCount@CItemData@@QAEKXZ ENDP		; CItemData::GetAttachingDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetLODModelThingPointer@CItemData@@QAEHKPAPAVCGraphicThing@@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_ppModelThing$ = 12					; size = 4
?GetLODModelThingPointer@CItemData@@QAEHKPAPAVCGraphicThing@@@Z PROC ; CItemData::GetLODModelThingPointer, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  00009	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0000f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 58   : 	if (dwIndex >= m_pLODModelThingVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 58   : 	if (dwIndex >= m_pLODModelThingVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetLODMode

; 59   : 		return FALSE;

  0001b	33 c0		 xor	 eax, eax

; 64   : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
$LN2@GetLODMode:

; 60   : 
; 61   : 	*ppModelThing = m_pLODModelThingVector[dwIndex];

  00021	8b 45 0c	 mov	 eax, DWORD PTR _ppModelThing$[ebp]
  00024	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00027	89 08		 mov	 DWORD PTR [eax], ecx

; 62   : 
; 63   : 	return TRUE;

  00029	b8 01 00 00 00	 mov	 eax, 1

; 64   : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?GetLODModelThingPointer@CItemData@@QAEHKPAPAVCGraphicThing@@@Z ENDP ; CItemData::GetLODModelThingPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetLODModelThingCount@CItemData@@QAEKXZ
_TEXT	SEGMENT
?GetLODModelThingCount@CItemData@@QAEKXZ PROC		; CItemData::GetLODModelThingCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  00006	2b 81 b0 00 00
	00		 sub	 eax, DWORD PTR [ecx+176]
  0000c	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 54   : }

  0000f	c3		 ret	 0
?GetLODModelThingCount@CItemData@@QAEKXZ ENDP		; CItemData::GetLODModelThingCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetIconImage@CItemData@@QAEPAVCGraphicSubImage@@XZ
_TEXT	SEGMENT
?GetIconImage@CItemData@@QAEPAVCGraphicSubImage@@XZ PROC ; CItemData::GetIconImage, COMDAT
; _this$ = ecx

; 45   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 46   : 	if(m_pIconImage == NULL && m_strIconFileName.empty() == false)

  00003	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00009	85 c0		 test	 eax, eax
  0000b	75 20		 jne	 SHORT $LN2@GetIconIma
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  0000d	39 46 5c	 cmp	 DWORD PTR [esi+92], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 46   : 	if(m_pIconImage == NULL && m_strIconFileName.empty() == false)

  00010	74 19		 je	 SHORT $LN14@GetIconIma
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	83 7e 60 10	 cmp	 DWORD PTR [esi+96], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00016	8d 46 4c	 lea	 eax, DWORD PTR [esi+76]

; 2145 :         if (_Large_string_engaged()) {

  00019	72 02		 jb	 SHORT $LN9@GetIconIma

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN9@GetIconIma:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 47   : 		__SetIconImage(m_strIconFileName.c_str());

  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?__SetIconImage@CItemData@@IAEXPBD@Z ; CItemData::__SetIconImage

; 48   : 	return m_pIconImage;

  00023	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00029	5e		 pop	 esi

; 49   : }

  0002a	c3		 ret	 0
$LN14@GetIconIma:

; 48   : 	return m_pIconImage;

  0002b	33 c0		 xor	 eax, eax
$LN2@GetIconIma:
  0002d	5e		 pop	 esi

; 49   : }

  0002e	c3		 ret	 0
?GetIconImage@CItemData@@QAEPAVCGraphicSubImage@@XZ ENDP ; CItemData::GetIconImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetDropModelThing@CItemData@@QAEPAVCGraphicThing@@XZ
_TEXT	SEGMENT
?GetDropModelThing@CItemData@@QAEPAVCGraphicThing@@XZ PROC ; CItemData::GetDropModelThing, COMDAT
; _this$ = ecx

; 41   : 	return m_pDropModelThing;

  00000	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]

; 42   : }

  00006	c3		 ret	 0
?GetDropModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ENDP ; CItemData::GetDropModelThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetSubModelThing@CItemData@@QAEPAVCGraphicThing@@XZ
_TEXT	SEGMENT
?GetSubModelThing@CItemData@@QAEPAVCGraphicThing@@XZ PROC ; CItemData::GetSubModelThing, COMDAT
; _this$ = ecx

; 33   : 	if (m_pSubModelThing)

  00000	8b 81 a4 00 00
	00		 mov	 eax, DWORD PTR [ecx+164]
  00006	85 c0		 test	 eax, eax
  00008	75 06		 jne	 SHORT $LN3@GetSubMode

; 34   : 		return m_pSubModelThing;
; 35   : 	else
; 36   : 		return m_pModelThing;

  0000a	8b 81 a0 00 00
	00		 mov	 eax, DWORD PTR [ecx+160]
$LN3@GetSubMode:

; 37   : }

  00010	c3		 ret	 0
?GetSubModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ENDP ; CItemData::GetSubModelThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ
_TEXT	SEGMENT
?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ PROC	; CItemData::GetModelThing, COMDAT
; _this$ = ecx

; 28   : 	return m_pModelThing;

  00000	8b 81 a0 00 00
	00		 mov	 eax, DWORD PTR [ecx+160]

; 29   : }

  00006	c3		 ret	 0
?GetModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ENDP	; CItemData::GetModelThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_c_rstDesc$ = 8						; size = 4
?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CItemData::SetDescription, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rstDesc$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 99   : 	m_strDescription=c_rstDesc;

  00006	83 c1 64	 add	 ecx, 100		; 00000064H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	74 13		 je	 SHORT $LN4@SetDescrip

; 2153 :         return _BUF_SIZE <= _Myres;

  0000d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00011	8b d0		 mov	 edx, eax

; 2145 :         if (_Large_string_engaged()) {

  00013	72 02		 jb	 SHORT $LN9@SetDescrip

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00015	8b 10		 mov	 edx, DWORD PTR [eax]
$LN9@SetDescrip:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00017	ff 70 10	 push	 DWORD PTR [eax+16]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN4@SetDescrip:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 100  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CItemData::SetDescription
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_c_rstSumm$ = 8						; size = 4
?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CItemData::SetSummary, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rstSumm$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 94   : 	m_strSummary=c_rstSumm;

  00006	83 c1 7c	 add	 ecx, 124		; 0000007cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	74 13		 je	 SHORT $LN4@SetSummary

; 2153 :         return _BUF_SIZE <= _Myres;

  0000d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00011	8b d0		 mov	 edx, eax

; 2145 :         if (_Large_string_engaged()) {

  00013	72 02		 jb	 SHORT $LN9@SetSummary

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00015	8b 10		 mov	 edx, DWORD PTR [eax]
$LN9@SetSummary:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00017	ff 70 10	 push	 DWORD PTR [eax+16]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN4@SetSummary:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 95   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CItemData::SetSummary
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ?Clear@CItemData@@QAEXXZ
_TEXT	SEGMENT
?Clear@CItemData@@QAEXXZ PROC				; CItemData::Clear, COMDAT
; _this$ = ecx

; 440  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00004	6a 00		 push	 0
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 441  : 	m_strSummary = "";

  0000b	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0000e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00013	6a 00		 push	 0
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 442  : 	m_strModelFileName = "";

  0001a	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00022	6a 00		 push	 0
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 443  : 	m_strSubModelFileName = "";

  00029	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0002c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00031	6a 00		 push	 0
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 444  : 	m_strDropModelFileName = "";

  00038	8d 4f 34	 lea	 ecx, DWORD PTR [edi+52]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00040	6a 00		 push	 0
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 445  : 	m_strIconFileName = "";

  00047	8d 4f 4c	 lea	 ecx, DWORD PTR [edi+76]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0004a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 446  : 	m_strLODModelFileNameVector.clear();

  0004f	8d b7 94 00 00
	00		 lea	 esi, DWORD PTR [edi+148]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00055	56		 push	 esi
  00056	ff 76 04	 push	 DWORD PTR [esi+4]
  00059	ff 36		 push	 DWORD PTR [esi]
  0005b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1390 :         _Mylast = _Myfirst;

  00060	8b 06		 mov	 eax, DWORD PTR [esi]
  00062	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 452  : 	m_pLODModelThingVector.clear();

  00065	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]

; 453  : 
; 454  : 	memset(&m_ItemTable, 0, sizeof(m_ItemTable));
; 455  : #ifdef ENABLE_ACCE_SYSTEM
; 456  : 	memset(&m_ScaleTable, 0, sizeof(m_ScaleTable));

  0006b	68 8c 01 00 00	 push	 396			; 0000018cH
  00070	89 87 b4 00 00
	00		 mov	 DWORD PTR [edi+180], eax
  00076	8d 87 cc 00 00
	00		 lea	 eax, DWORD PTR [edi+204]
  0007c	6a 00		 push	 0
  0007e	50		 push	 eax
  0007f	c7 87 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+160], 0
  00089	c7 87 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+164], 0
  00093	c7 87 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+168], 0
  0009d	c7 87 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+172], 0
  000a7	e8 00 00 00 00	 call	 _memset
  000ac	83 c4 18	 add	 esp, 24			; 00000018H
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi

; 457  : #endif
; 458  : }

  000b1	c3		 ret	 0
?Clear@CItemData@@QAEXXZ ENDP				; CItemData::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ??1CItemData@@UAE@XZ
_TEXT	SEGMENT
??1CItemData@@UAE@XZ PROC				; CItemData::~CItemData, COMDAT
; _this$ = ecx

; 466  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 467  : }

  00005	8d 9f bc 00 00
	00		 lea	 ebx, DWORD PTR [edi+188]
  0000b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CItemData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00011	8b 03		 mov	 eax, DWORD PTR [ebx]
  00013	85 c0		 test	 eax, eax
  00015	74 46		 je	 SHORT $LN6@CItemData

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00017	53		 push	 ebx
  00018	ff 73 04	 push	 DWORD PTR [ebx+4]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00021	8b 33		 mov	 esi, DWORD PTR [ebx]
  00023	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00028	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0002b	2b ce		 sub	 ecx, esi
  0002d	f7 e9		 imul	 ecx
  0002f	c1 fa 03	 sar	 edx, 3
  00032	8b c2		 mov	 eax, edx
  00034	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00037	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0003c	c1 e0 04	 shl	 eax, 4
  0003f	50		 push	 eax
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00046	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  00056	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN6@CItemData:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 8f b0 00 00
	00		 mov	 ecx, DWORD PTR [edi+176]
  00063	85 c9		 test	 ecx, ecx
  00065	74 33		 je	 SHORT $LN15@CItemData

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00067	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  0006d	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006f	83 e0 fc	 and	 eax, -4			; fffffffcH
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00079	c7 87 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+176], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00086	c7 87 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+180], 0

; 1699 :             _Myend   = pointer();

  00090	c7 87 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+184], 0
$LN15@CItemData:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0009a	8b 8f 94 00 00
	00		 mov	 ecx, DWORD PTR [edi+148]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 467  : }

  000a0	8d 9f 94 00 00
	00		 lea	 ebx, DWORD PTR [edi+148]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  000a6	85 c9		 test	 ecx, ecx
  000a8	74 46		 je	 SHORT $LN22@CItemData

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000aa	53		 push	 ebx
  000ab	ff 73 04	 push	 DWORD PTR [ebx+4]
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b4	8b 33		 mov	 esi, DWORD PTR [ebx]
  000b6	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000bb	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000be	2b ce		 sub	 ecx, esi
  000c0	f7 e9		 imul	 ecx
  000c2	c1 fa 02	 sar	 edx, 2
  000c5	8b c2		 mov	 eax, edx
  000c7	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ca	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000cc	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000cf	c1 e0 03	 shl	 eax, 3
  000d2	50		 push	 eax
  000d3	56		 push	 esi
  000d4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  000d9	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000df	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  000e2	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  000e9	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN22@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000f0	8b 87 90 00 00
	00		 mov	 eax, DWORD PTR [edi+144]
  000f6	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f9	72 0d		 jb	 SHORT $LN32@CItemData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000fb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000fc	50		 push	 eax
  000fd	ff 77 7c	 push	 DWORD PTR [edi+124]
  00100	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00105	83 c4 08	 add	 esp, 8
$LN32@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00108	c7 87 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+140], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00112	c7 87 90 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [edi+144], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0011c	c6 47 7c 00	 mov	 BYTE PTR [edi+124], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00120	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00123	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00126	72 0d		 jb	 SHORT $LN42@CItemData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00128	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00129	50		 push	 eax
  0012a	ff 77 64	 push	 DWORD PTR [edi+100]
  0012d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00132	83 c4 08	 add	 esp, 8
$LN42@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00135	c7 47 74 00 00
	00 00		 mov	 DWORD PTR [edi+116], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0013c	c7 47 78 0f 00
	00 00		 mov	 DWORD PTR [edi+120], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00143	c6 47 64 00	 mov	 BYTE PTR [edi+100], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00147	8b 47 60	 mov	 eax, DWORD PTR [edi+96]
  0014a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0014d	72 0d		 jb	 SHORT $LN52@CItemData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0014f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00150	50		 push	 eax
  00151	ff 77 4c	 push	 DWORD PTR [edi+76]
  00154	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00159	83 c4 08	 add	 esp, 8
$LN52@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0015c	c7 47 5c 00 00
	00 00		 mov	 DWORD PTR [edi+92], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00163	c7 47 60 0f 00
	00 00		 mov	 DWORD PTR [edi+96], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0016a	c6 47 4c 00	 mov	 BYTE PTR [edi+76], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0016e	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
  00171	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00174	72 0d		 jb	 SHORT $LN62@CItemData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00176	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00177	50		 push	 eax
  00178	ff 77 34	 push	 DWORD PTR [edi+52]
  0017b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00180	83 c4 08	 add	 esp, 8
$LN62@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00183	c7 47 44 00 00
	00 00		 mov	 DWORD PTR [edi+68], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0018a	c7 47 48 0f 00
	00 00		 mov	 DWORD PTR [edi+72], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00191	c6 47 34 00	 mov	 BYTE PTR [edi+52], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00195	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  00198	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019b	72 0d		 jb	 SHORT $LN72@CItemData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0019d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0019e	50		 push	 eax
  0019f	ff 77 1c	 push	 DWORD PTR [edi+28]
  001a2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001a7	83 c4 08	 add	 esp, 8
$LN72@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  001aa	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001b1	c7 47 30 0f 00
	00 00		 mov	 DWORD PTR [edi+48], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001b8	c6 47 1c 00	 mov	 BYTE PTR [edi+28], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  001bc	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  001bf	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c2	72 0d		 jb	 SHORT $LN82@CItemData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001c4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c5	50		 push	 eax
  001c6	ff 77 04	 push	 DWORD PTR [edi+4]
  001c9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001ce	83 c4 08	 add	 esp, 8
$LN82@CItemData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  001d1	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001d8	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001df	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  001e3	5f		 pop	 edi
  001e4	5e		 pop	 esi
  001e5	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 467  : }

  001e6	c3		 ret	 0
??1CItemData@@UAE@XZ ENDP				; CItemData::~CItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp
;	COMDAT ??0CItemData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CItemData@@QAE@XZ PROC				; CItemData::CItemData, COMDAT
; _this$ = ecx

; 461  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CItemData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CItemData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00036	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003d	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 461  : {

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00048	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004f	c7 46 30 0f 00
	00 00		 mov	 DWORD PTR [esi+48], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00056	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0005a	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00061	c7 46 48 0f 00
	00 00		 mov	 DWORD PTR [esi+72], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00068	c6 46 34 00	 mov	 BYTE PTR [esi+52], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0006c	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00073	c7 46 60 0f 00
	00 00		 mov	 DWORD PTR [esi+96], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0007a	c6 46 4c 00	 mov	 BYTE PTR [esi+76], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0007e	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00085	c7 46 78 0f 00
	00 00		 mov	 DWORD PTR [esi+120], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0008c	c6 46 64 00	 mov	 BYTE PTR [esi+100], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00090	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009a	c7 86 90 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+144], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 46 7c 00	 mov	 BYTE PTR [esi+124], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000a8	c7 86 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+148], 0
  000b2	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0
  000bc	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
  000c6	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  000d0	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
  000da	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0
  000e4	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  000ee	c7 86 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+192], 0
  000f8	c7 86 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+196], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.cpp

; 461  : {

  00102	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8

; 462  : 	Clear();

  00106	e8 00 00 00 00	 call	 ?Clear@CItemData@@QAEXXZ ; CItemData::Clear

; 463  : }

  0010b	8b c6		 mov	 eax, esi
  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00117	59		 pop	 ecx
  00118	5e		 pop	 esi
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CItemData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CItemData@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CItemData@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 34	 add	 ecx, 52			; 00000034H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CItemData@@QAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CItemData@@QAE@XZ$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 64	 add	 ecx, 100		; 00000064H
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CItemData@@QAE@XZ$5:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0003d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CItemData@@QAE@XZ$6:
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0004b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0CItemData@@QAE@XZ$7:
  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 b0 00 00
	00		 add	 ecx, 176		; 000000b0H
  00059	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicThing@@V?$allocator@PAVCGraphicThing@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThing *,std::allocator<CGraphicThing *> >::~vector<CGraphicThing *,std::allocator<CGraphicThing *> >
__unwindfunclet$??0CItemData@@QAE@XZ$8:
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 bc 00 00
	00		 add	 ecx, 188		; 000000bcH
  00067	e9 00 00 00 00	 jmp	 ??1?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@QAE@XZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::~vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
  00070	cc		 int	 3
__ehhandler$??0CItemData@@QAE@XZ:
  00071	90		 npad	 1
  00072	90		 npad	 1
  00073	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00077	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0007a	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0007d	33 c8		 xor	 ecx, eax
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CItemData@@QAE@XZ
  00089	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CItemData@@QAE@XZ ENDP				; CItemData::CItemData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 02	 sar	 edx, 2
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 03	 shl	 eax, 3
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
