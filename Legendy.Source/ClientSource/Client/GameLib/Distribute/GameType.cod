; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z ; CDynamicPool<NRaceData::SAttachingEffectData>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z ; CDynamicPool<NRaceData::SAttachingObjectData>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SCollisionData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	?g_fGameFPS@@3MA				; g_fGameFPS
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SCollisionData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z ; CDynamicPool<NRaceData::SCollisionData>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z:PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z:PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z:PROC ; CDynamicPool<NRaceData::SCollisionData>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SCollisionData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?g_fGameFPS@@3MA DD 042700000r			; 60	; g_fGameFPS
_DATA	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 DD 00H ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ DD 00H ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 DD 00H ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ DD 00H ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8 DD 00H ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<NRaceData::SCollisionData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USCollisionData@NRaceData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ DD 00H ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	ENDS
CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node
PUBLIC	?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ; NRaceData::SHitData::Load
PUBLIC	??0SHitData@NRaceData@@QAE@XZ			; NRaceData::SHitData::SHitData
PUBLIC	??1SHitData@NRaceData@@QAE@XZ			; NRaceData::SHitData::~SHitData
PUBLIC	??0SHitData@NRaceData@@QAE@ABU01@@Z		; NRaceData::SHitData::SHitData
PUBLIC	?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z ; std::allocator<NRaceData::SHitData>::deallocate
PUBLIC	?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy
PUBLIC	?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength
PUBLIC	?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength
PUBLIC	??1SCollisionData@NRaceData@@UAE@XZ		; NRaceData::SCollisionData::~SCollisionData
PUBLIC	??_GSCollisionData@NRaceData@@UAEPAXI@Z		; NRaceData::SCollisionData::`scalar deleting destructor'
PUBLIC	??1SAttachingEffectData@NRaceData@@UAE@XZ	; NRaceData::SAttachingEffectData::~SAttachingEffectData
PUBLIC	??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z	; NRaceData::SAttachingEffectData::`scalar deleting destructor'
PUBLIC	??1SAttachingObjectData@NRaceData@@UAE@XZ	; NRaceData::SAttachingObjectData::~SAttachingObjectData
PUBLIC	??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z	; NRaceData::SAttachingObjectData::`scalar deleting destructor'
PUBLIC	?DestroySystem@NRaceData@@YAXXZ			; NRaceData::DestroySystem
PUBLIC	?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ; NRaceData::SaveAttackData
PUBLIC	?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z ; NRaceData::SaveMotionAttackData
PUBLIC	?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ; NRaceData::SaveCollisionData
PUBLIC	?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z ; NRaceData::SaveEffectData
PUBLIC	?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z ; NRaceData::SaveObjectData
PUBLIC	?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ; NRaceData::LoadAttackData
PUBLIC	?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z ; NRaceData::LoadMotionAttackData
PUBLIC	?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ; NRaceData::LoadCollisionData
PUBLIC	?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData
PUBLIC	?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
PUBLIC	?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::SaveAttachingData
PUBLIC	?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::LoadAttachingData
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CSphereCollisionInstance> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
PUBLIC	?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z ; CDynamicPool<NRaceData::SCollisionData>::Delete
PUBLIC	?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength
PUBLIC	??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
PUBLIC	?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z ; CDynamicPool<NRaceData::SAttachingEffectData>::Delete
PUBLIC	?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength
PUBLIC	??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
PUBLIC	?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z ; CDynamicPool<NRaceData::SAttachingObjectData>::Delete
PUBLIC	?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength
PUBLIC	?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength
PUBLIC	?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange
PUBLIC	??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
PUBLIC	??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
PUBLIC	??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>
PUBLIC	??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>
PUBLIC	??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>
PUBLIC	??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingObjectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingObjectData *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingEffectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingEffectData *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAXPAPAUSCollisionData@NRaceData@@QAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SCollisionData *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@PAU12@IAAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<NRaceData::SAttachingData> >
PUBLIC	??$_Uninitialized_move@PAPAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingObjectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingObjectData * *,std::allocator<NRaceData::SAttachingObjectData *> >
PUBLIC	??$_Uninitialized_move@PAPAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingEffectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingEffectData * *,std::allocator<NRaceData::SAttachingEffectData *> >
PUBLIC	??$_Uninitialized_move@PAPAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAPAPAUSCollisionData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SCollisionData * *,std::allocator<NRaceData::SCollisionData *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@PAV1@IAAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CSphereCollisionInstance> >
PUBLIC	??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >
PUBLIC	??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Uninitialized_copy<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>
PUBLIC	??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>
PUBLIC	??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>
PUBLIC	??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
PUBLIC	??$_Uninitialized_move@PAUSAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingData *,std::allocator<NRaceData::SAttachingData> >
PUBLIC	??$_Uninitialized_move@PAVCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@QAV1@0PAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Uninitialized_move<CSphereCollisionInstance *,std::allocator<CSphereCollisionInstance> >
PUBLIC	??$?0ABM$$Z$$V@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABM@1@V?$tuple@$$V@1@@Z ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><float const &>
PUBLIC	??$?0V?$tuple@ABM@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@AAV?$tuple@ABM@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><std::tuple<float const &>,std::tuple<>,0>
PUBLIC	??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >
PUBLIC	??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
PUBLIC	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CBaseCollisionInstance@@6B@			; CBaseCollisionInstance::`vftable'
PUBLIC	??_7CSphereCollisionInstance@@6B@		; CSphereCollisionInstance::`vftable'
PUBLIC	??_7SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`vftable'
PUBLIC	??_7SAttachingEffectData@NRaceData@@6B@		; NRaceData::SAttachingEffectData::`vftable'
PUBLIC	??_7SAttachingObjectData@NRaceData@@6B@		; NRaceData::SAttachingObjectData::`vftable'
PUBLIC	?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A ; NRaceData::g_CollisionDataPool
PUBLIC	?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A ; NRaceData::g_EffectDataPool
PUBLIC	?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A ; NRaceData::g_ObjectDataPool
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSCollisionData@NRaceData@@@8		; NRaceData::SCollisionData `RTTI Type Descriptor'
PUBLIC	??_R3SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SCollisionData@NRaceData@@8	; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SAttachingEffectData@NRaceData@@6B@	; NRaceData::SAttachingEffectData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSAttachingEffectData@NRaceData@@@8	; NRaceData::SAttachingEffectData `RTTI Type Descriptor'
PUBLIC	??_R3SAttachingEffectData@NRaceData@@8		; NRaceData::SAttachingEffectData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SAttachingEffectData@NRaceData@@8		; NRaceData::SAttachingEffectData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8	; NRaceData::SAttachingEffectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SAttachingObjectData@NRaceData@@6B@	; NRaceData::SAttachingObjectData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSAttachingObjectData@NRaceData@@@8	; NRaceData::SAttachingObjectData `RTTI Type Descriptor'
PUBLIC	??_R3SAttachingObjectData@NRaceData@@8		; NRaceData::SAttachingObjectData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SAttachingObjectData@NRaceData@@8		; NRaceData::SAttachingObjectData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8	; NRaceData::SAttachingObjectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	??_C@_0L@MFPNOHLP@attacktype@			; `string'
PUBLIC	??_C@_0M@IEMCNBIB@hittingtype@			; `string'
PUBLIC	??_C@_0M@HEIDABDC@stiffentime@			; `string'
PUBLIC	??_C@_0O@GBJCIDNL@invisibletime@		; `string'
PUBLIC	??_C@_0O@KAKKEPBE@externalforce@		; `string'
PUBLIC	??_C@_0O@PCIAOIBK@hitlimitcount@		; `string'
PUBLIC	??_C@_0BD@CPENFGPA@attackingstarttime@		; `string'
PUBLIC	??_C@_0BB@KAKEFPLI@attackingendtime@		; `string'
PUBLIC	??_C@_0O@MMIDKEHG@attackingbone@		; `string'
PUBLIC	??_C@_0N@MMFFHHOI@weaponlength@			; `string'
PUBLIC	??_C@_0M@IHNFHPGN@hitposition@			; `string'
PUBLIC	??_C@_0L@FECBOPBF@motiontype@			; `string'
PUBLIC	??_C@_0O@EAOJEAGN@attackingtype@		; `string'
PUBLIC	??_C@_0N@JENLJGO@hitdatacount@			; `string'
PUBLIC	??_C@_0O@LCILGBGA@collisiontype@		; `string'
PUBLIC	??_C@_0BA@PACKMKGG@spheredatacount@		; `string'
PUBLIC	??_C@_0L@JJLJPGHA@spheredata@			; `string'
PUBLIC	??_C@_06KGHINEPG@radius@			; `string'
PUBLIC	??_C@_08OAGMDKAF@position@			; `string'
PUBLIC	??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BB@OKGDPHII@effectscriptname@		; `string'
PUBLIC	??_C@_0P@PMGDNJPL@effectposition@		; `string'
PUBLIC	??_C@_0P@PLGBENJO@effectrotation@		; `string'
PUBLIC	??_C@_0BB@EJILMNLC@objectscriptname@		; `string'
PUBLIC	??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@	; `string'
PUBLIC	??_C@_02KCPFEJNG@?$HL?6@			; `string'
PUBLIC	??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BC@FOOKPLLP@List?5HitPosition?6@		; `string'
PUBLIC	??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_02KGHIDFGE@?$HN?6@			; `string'
PUBLIC	??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@	; `string'
PUBLIC	??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@ ; `string'
PUBLIC	??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BD@FANHLGEG@attachingdatacount@		; `string'
PUBLIC	??_C@_0O@OPEMPJIC@attachingdata@		; `string'
PUBLIC	??_C@_0BC@MHCCJHKE@attachingdatatype@		; `string'
PUBLIC	??_C@_0M@MJFJJMOM@isattaching@			; `string'
PUBLIC	??_C@_0BE@HAHPJOBE@attachingmodelindex@		; `string'
PUBLIC	??_C@_0BC@FCIOLNPK@attachingbonename@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CBaseCollisionInstance@@6B@		; CBaseCollisionInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseCollisionInstance@@@8		; CBaseCollisionInstance `RTTI Type Descriptor'
PUBLIC	??_R3CBaseCollisionInstance@@8			; CBaseCollisionInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseCollisionInstance@@8			; CBaseCollisionInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseCollisionInstance@@8		; CBaseCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSphereCollisionInstance@@6B@		; CSphereCollisionInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSphereCollisionInstance@@@8		; CSphereCollisionInstance `RTTI Type Descriptor'
PUBLIC	??_R3CSphereCollisionInstance@@8		; CSphereCollisionInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSphereCollisionInstance@@8		; CSphereCollisionInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSphereCollisionInstance@@8	; CSphereCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ:PROC		; PrintfTabs
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHK@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenPosition
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?GetAttribute@CSphereCollisionInstance@@QAEAAUSSphereData@@XZ:PROC ; CSphereCollisionInstance::GetAttribute
EXTRN	?GetAttribute@CSphereCollisionInstance@@QBEABUSSphereData@@XZ:PROC ; CSphereCollisionInstance::GetAttribute
EXTRN	?Render@CSphereCollisionInstance@@UAEXW4_D3DFILLMODE@@@Z:PROC ; CSphereCollisionInstance::Render
EXTRN	?OnDestroy@CSphereCollisionInstance@@MAEXXZ:PROC ; CSphereCollisionInstance::OnDestroy
EXTRN	?OnMovementCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z:PROC ; CSphereCollisionInstance::OnMovementCollisionDynamicSphere
EXTRN	?OnCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z:PROC ; CSphereCollisionInstance::OnCollisionDynamicSphere
EXTRN	?OnGetCollisionMovementAdjust@CSphereCollisionInstance@@MBE?AUD3DXVECTOR3@@ABUCDynamicSphereInstance@@@Z:PROC ; CSphereCollisionInstance::OnGetCollisionMovementAdjust
EXTRN	??_ESCollisionData@NRaceData@@UAEPAXI@Z:PROC	; NRaceData::SCollisionData::`vector deleting destructor'
EXTRN	??_ESAttachingEffectData@NRaceData@@UAEPAXI@Z:PROC ; NRaceData::SAttachingEffectData::`vector deleting destructor'
EXTRN	??_ESAttachingObjectData@NRaceData@@UAEPAXI@Z:PROC ; NRaceData::SAttachingObjectData::`vector deleting destructor'
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
?g_CollisionDataPool$initializer$@NRaceData@@3P6AXXZA DD FLAT:??__Eg_CollisionDataPool@NRaceData@@YAXXZ ; NRaceData::g_CollisionDataPool$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CSphereCollisionInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSphereCollisionInstance@@8 DD FLAT:??_R0?AVCSphereCollisionInstance@@@8 ; CSphereCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSphereCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CSphereCollisionInstance@@8
rdata$r	SEGMENT
??_R2CSphereCollisionInstance@@8 DD FLAT:??_R1A@?0A@EA@CSphereCollisionInstance@@8 ; CSphereCollisionInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CSphereCollisionInstance@@8
rdata$r	SEGMENT
??_R3CSphereCollisionInstance@@8 DD 00H			; CSphereCollisionInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSphereCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSphereCollisionInstance@@@8
data$r	SEGMENT
??_R0?AVCSphereCollisionInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CSphereCollisionInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSphereCollisionInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSphereCollisionInstance@@6B@
rdata$r	SEGMENT
??_R4CSphereCollisionInstance@@6B@ DD 00H		; CSphereCollisionInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSphereCollisionInstance@@@8
	DD	FLAT:??_R3CSphereCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseCollisionInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseCollisionInstance@@8 DD FLAT:??_R0?AVCBaseCollisionInstance@@@8 ; CBaseCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseCollisionInstance@@8
rdata$r	SEGMENT
??_R2CBaseCollisionInstance@@8 DD FLAT:??_R1A@?0A@EA@CBaseCollisionInstance@@8 ; CBaseCollisionInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseCollisionInstance@@8
rdata$r	SEGMENT
??_R3CBaseCollisionInstance@@8 DD 00H			; CBaseCollisionInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseCollisionInstance@@@8
data$r	SEGMENT
??_R0?AVCBaseCollisionInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CBaseCollisionInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseCollisionInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBaseCollisionInstance@@6B@
rdata$r	SEGMENT
??_R4CBaseCollisionInstance@@6B@ DD 00H			; CBaseCollisionInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseCollisionInstance@@@8
	DD	FLAT:??_R3CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCIOLNPK@attachingbonename@
CONST	SEGMENT
??_C@_0BC@FCIOLNPK@attachingbonename@ DB 'attachingbonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAHPJOBE@attachingmodelindex@
CONST	SEGMENT
??_C@_0BE@HAHPJOBE@attachingmodelindex@ DB 'attachingmodelindex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MJFJJMOM@isattaching@
CONST	SEGMENT
??_C@_0M@MJFJJMOM@isattaching@ DB 'isattaching', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MHCCJHKE@attachingdatatype@
CONST	SEGMENT
??_C@_0BC@MHCCJHKE@attachingdatatype@ DB 'attachingdatatype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPEMPJIC@attachingdata@
CONST	SEGMENT
??_C@_0O@OPEMPJIC@attachingdata@ DB 'attachingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FANHLGEG@attachingdatacount@
CONST	SEGMENT
??_C@_0BD@FANHLGEG@attachingdatacount@ DB 'attachingdatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Attachin'
	DB	'gBoneName    "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@ DB 'AttachingModelInde'
	DB	'x  %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'isAttachin'
	DB	'g          %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@ DB 'AttachingDataTyp'
	DB	'e    %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@
CONST	SEGMENT
??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@ DB 'Group AttachingData'
	DB	'%02d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@ DB 'Attaching'
	DB	'DataCount       %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'P'
	DB	'osition         %f %f %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Radius       '
	DB	'    %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@
CONST	SEGMENT
??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@ DB 'Group SphereData%02d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@ DB 'SphereDataCoun'
	DB	't      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@ DB 'CollisionTyp'
	DB	'e        %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KGHIDFGE@?$HN?6@
CONST	SEGMENT
??_C@_02KGHIDFGE@?$HN?6@ DB '}', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@ DB '%'
	DB	'f %f %f %f %f %f %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FOOKPLLP@List?5HitPosition?6@
CONST	SEGMENT
??_C@_0BC@FOOKPLLP@List?5HitPosition?6@ DB 'List HitPosition', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'WeaponLengt'
	DB	'h         %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Atta'
	DB	'ckingBone        "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@ DB 'AttackingEndTim'
	DB	'e     %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@ DB 'AttackingStartTim'
	DB	'e   %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02KCPFEJNG@?$HL?6@
CONST	SEGMENT
??_C@_02KCPFEJNG@?$HL?6@ DB '{', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@
CONST	SEGMENT
??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@ DB 'Group HitData%02d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HitDataCoun'
	DB	't         %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'MotionTyp'
	DB	'e           %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HitLimitCoun'
	DB	't        %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@ DB 'ExternalForc'
	DB	'e        %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@ DB 'InvisibleTim'
	DB	'e        %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'StiffenTim'
	DB	'e          %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HittingTyp'
	DB	'e          %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'AttackTyp'
	DB	'e           %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EJILMNLC@objectscriptname@
CONST	SEGMENT
??_C@_0BB@EJILMNLC@objectscriptname@ DB 'objectscriptname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLGBENJO@effectrotation@
CONST	SEGMENT
??_C@_0P@PLGBENJO@effectrotation@ DB 'effectrotation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMGDNJPL@effectposition@
CONST	SEGMENT
??_C@_0P@PMGDNJPL@effectposition@ DB 'effectposition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OKGDPHII@effectscriptname@
CONST	SEGMENT
??_C@_0BB@OKGDPHII@effectscriptname@ DB 'effectscriptname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'ObjectS'
	DB	'criptName     "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'E'
	DB	'ffectRotation       %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'E'
	DB	'ffectPosition       %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'EffectS'
	DB	'criptName     "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAGMDKAF@position@
CONST	SEGMENT
??_C@_08OAGMDKAF@position@ DB 'position', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KGHINEPG@radius@
CONST	SEGMENT
??_C@_06KGHINEPG@radius@ DB 'radius', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JJLJPGHA@spheredata@
CONST	SEGMENT
??_C@_0L@JJLJPGHA@spheredata@ DB 'spheredata', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PACKMKGG@spheredatacount@
CONST	SEGMENT
??_C@_0BA@PACKMKGG@spheredatacount@ DB 'spheredatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCILGBGA@collisiontype@
CONST	SEGMENT
??_C@_0O@LCILGBGA@collisiontype@ DB 'collisiontype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JENLJGO@hitdatacount@
CONST	SEGMENT
??_C@_0N@JENLJGO@hitdatacount@ DB 'hitdatacount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EAOJEAGN@attackingtype@
CONST	SEGMENT
??_C@_0O@EAOJEAGN@attackingtype@ DB 'attackingtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FECBOPBF@motiontype@
CONST	SEGMENT
??_C@_0L@FECBOPBF@motiontype@ DB 'motiontype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHNFHPGN@hitposition@
CONST	SEGMENT
??_C@_0M@IHNFHPGN@hitposition@ DB 'hitposition', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MMFFHHOI@weaponlength@
CONST	SEGMENT
??_C@_0N@MMFFHHOI@weaponlength@ DB 'weaponlength', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MMIDKEHG@attackingbone@
CONST	SEGMENT
??_C@_0O@MMIDKEHG@attackingbone@ DB 'attackingbone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KAKEFPLI@attackingendtime@
CONST	SEGMENT
??_C@_0BB@KAKEFPLI@attackingendtime@ DB 'attackingendtime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CPENFGPA@attackingstarttime@
CONST	SEGMENT
??_C@_0BD@CPENFGPA@attackingstarttime@ DB 'attackingstarttime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PCIAOIBK@hitlimitcount@
CONST	SEGMENT
??_C@_0O@PCIAOIBK@hitlimitcount@ DB 'hitlimitcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KAKKEPBE@externalforce@
CONST	SEGMENT
??_C@_0O@KAKKEPBE@externalforce@ DB 'externalforce', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GBJCIDNL@invisibletime@
CONST	SEGMENT
??_C@_0O@GBJCIDNL@invisibletime@ DB 'invisibletime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HEIDABDC@stiffentime@
CONST	SEGMENT
??_C@_0M@HEIDABDC@stiffentime@ DB 'stiffentime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEMCNBIB@hittingtype@
CONST	SEGMENT
??_C@_0M@IEMCNBIB@hittingtype@ DB 'hittingtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFPNOHLP@attacktype@
CONST	SEGMENT
??_C@_0L@MFPNOHLP@attacktype@ DB 'attacktype', 00H	; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8 DD FLAT:??_R0?AUSAttachingObjectData@NRaceData@@@8 ; NRaceData::SAttachingObjectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SAttachingObjectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SAttachingObjectData@NRaceData@@8
rdata$r	SEGMENT
??_R2SAttachingObjectData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8 ; NRaceData::SAttachingObjectData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SAttachingObjectData@NRaceData@@8
rdata$r	SEGMENT
??_R3SAttachingObjectData@NRaceData@@8 DD 00H		; NRaceData::SAttachingObjectData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SAttachingObjectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSAttachingObjectData@NRaceData@@@8
data$r	SEGMENT
??_R0?AUSAttachingObjectData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SAttachingObjectData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSAttachingObjectData@NRaceData@@', 00H
data$r	ENDS
;	COMDAT ??_R4SAttachingObjectData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SAttachingObjectData@NRaceData@@6B@ DD 00H		; NRaceData::SAttachingObjectData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSAttachingObjectData@NRaceData@@@8
	DD	FLAT:??_R3SAttachingObjectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8 DD FLAT:??_R0?AUSAttachingEffectData@NRaceData@@@8 ; NRaceData::SAttachingEffectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SAttachingEffectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SAttachingEffectData@NRaceData@@8
rdata$r	SEGMENT
??_R2SAttachingEffectData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8 ; NRaceData::SAttachingEffectData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SAttachingEffectData@NRaceData@@8
rdata$r	SEGMENT
??_R3SAttachingEffectData@NRaceData@@8 DD 00H		; NRaceData::SAttachingEffectData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SAttachingEffectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSAttachingEffectData@NRaceData@@@8
data$r	SEGMENT
??_R0?AUSAttachingEffectData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SAttachingEffectData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSAttachingEffectData@NRaceData@@', 00H
data$r	ENDS
;	COMDAT ??_R4SAttachingEffectData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SAttachingEffectData@NRaceData@@6B@ DD 00H		; NRaceData::SAttachingEffectData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSAttachingEffectData@NRaceData@@@8
	DD	FLAT:??_R3SAttachingEffectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SCollisionData@NRaceData@@8 DD FLAT:??_R0?AUSCollisionData@NRaceData@@@8 ; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R2SCollisionData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SCollisionData@NRaceData@@8 ; NRaceData::SCollisionData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R3SCollisionData@NRaceData@@8 DD 00H			; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSCollisionData@NRaceData@@@8
data$r	SEGMENT
??_R0?AUSCollisionData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SCollisionData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSCollisionData@NRaceData@@', 00H
data$r	ENDS
;	COMDAT ??_R4SCollisionData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SCollisionData@NRaceData@@6B@ DD 00H		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSCollisionData@NRaceData@@@8
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
_DATA	SEGMENT
?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A DD FLAT:??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; NRaceData::g_CollisionDataPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A DD FLAT:??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; NRaceData::g_EffectDataPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A DD FLAT:??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; NRaceData::g_ObjectDataPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SAttachingObjectData@NRaceData@@6B@
CONST	SEGMENT
??_7SAttachingObjectData@NRaceData@@6B@ DD FLAT:??_R4SAttachingObjectData@NRaceData@@6B@ ; NRaceData::SAttachingObjectData::`vftable'
	DD	FLAT:??_ESAttachingObjectData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SAttachingEffectData@NRaceData@@6B@
CONST	SEGMENT
??_7SAttachingEffectData@NRaceData@@6B@ DD FLAT:??_R4SAttachingEffectData@NRaceData@@6B@ ; NRaceData::SAttachingEffectData::`vftable'
	DD	FLAT:??_ESAttachingEffectData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SCollisionData@NRaceData@@6B@
CONST	SEGMENT
??_7SCollisionData@NRaceData@@6B@ DD FLAT:??_R4SCollisionData@NRaceData@@6B@ ; NRaceData::SCollisionData::`vftable'
	DD	FLAT:??_ESCollisionData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CSphereCollisionInstance@@6B@
CONST	SEGMENT
??_7CSphereCollisionInstance@@6B@ DD FLAT:??_R4CSphereCollisionInstance@@6B@ ; CSphereCollisionInstance::`vftable'
	DD	FLAT:?Render@CSphereCollisionInstance@@UAEXW4_D3DFILLMODE@@@Z
	DD	FLAT:?OnGetCollisionMovementAdjust@CSphereCollisionInstance@@MBE?AUD3DXVECTOR3@@ABUCDynamicSphereInstance@@@Z
	DD	FLAT:?OnMovementCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z
	DD	FLAT:?OnCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z
	DD	FLAT:?OnDestroy@CSphereCollisionInstance@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CBaseCollisionInstance@@6B@
CONST	SEGMENT
??_7CBaseCollisionInstance@@6B@ DD FLAT:??_R4CBaseCollisionInstance@@6B@ ; CBaseCollisionInstance::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z$0
__ehfuncinfo$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z$0
__ehfuncinfo$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z$0
__ehfuncinfo$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$0
__tryblocktable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$3
__unwindtable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$2
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z$2
__ehfuncinfo$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$0
__unwindtable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z$0
__ehfuncinfo$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z$0
__ehfuncinfo$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$2
__ehfuncinfo$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SHitData@NRaceData@@QAE@$$QAU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@$$QAU01@@Z$0
__ehfuncinfo$??0SHitData@NRaceData@@QAE@$$QAU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SHitData@NRaceData@@QAE@$$QAU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SHitData@NRaceData@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$3
__ehfuncinfo$??0SHitData@NRaceData@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SHitData@NRaceData@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SHitData@NRaceData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@XZ$0
__ehfuncinfo$??0SHitData@NRaceData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SHitData@NRaceData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$12
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z$2
__ehfuncinfo$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?g_EffectDataPool$initializer$@NRaceData@@3P6AXXZA DD FLAT:??__Eg_EffectDataPool@NRaceData@@YAXXZ ; NRaceData::g_EffectDataPool$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?g_ObjectDataPool$initializer$@NRaceData@@3P6AXXZA DD FLAT:??__Eg_ObjectDataPool@NRaceData@@YAXXZ ; NRaceData::g_ObjectDataPool$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 732  :     void _Erase_tree_and_orphan(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 733  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 734  :             _Erase_tree_and_orphan(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 30		 push	 48			; 00000030H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 733  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 735  :             auto _To_delete = _STD exchange(_Rootnode, _Rootnode->_Left);
; 736  :             _Orphan_ptr(_To_delete);
; 737  :             _Alnode::value_type::_Freenode(_Al, _To_delete);
; 738  :         }
; 739  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
__Newnode$2 = -36					; size = 8
tv342 = -32						; size = 4
__Newroot$1$ = -28					; size = 4
__Newnode$1$ = -24					; size = 4
__Myhead$3 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Newroot$ = 8						; size = 4
__Rootnode$ = 8						; size = 4
__Wherenode$ = 12					; size = 4
__Movefl$ = 16						; size = 1
??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z PROC ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>, COMDAT
; _this$ = ecx

; 1755 :     _Nodeptr _Copy_nodes(_Nodeptr _Rootnode, _Nodeptr _Wherenode, _Moveit _Movefl) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d d8	 mov	 DWORD PTR _this$[ebp], edi

; 1756 :         // copy entire subtree, recursively
; 1757 :         const auto _Scary = _Get_scary();
; 1758 :         _Nodeptr _Newroot = _Scary->_Myhead; // point at nil node
; 1759 : 
; 1760 :         if (!_Rootnode->_Isnil) { // copy or move a node, then any subtrees

  00030	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00033	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00035	89 4d e4	 mov	 DWORD PTR __Newroot$1$[ebp], ecx
  00038	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003c	0f 85 b8 00 00
	00		 jne	 $LN8@Copy_nodes

; 2027 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

  00042	89 4d ec	 mov	 DWORD PTR __Myhead$3[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00045	89 7d dc	 mov	 DWORD PTR __Newnode$2[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00048	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 356  :         _Alloc_construct_ptr<_Alloc> _Newnode(_Al);

  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00051	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR __Newnode$2[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00058	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  0005d	8b f0		 mov	 esi, eax

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0005f	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]

; 1048 :         _Ptr = _Al.allocate(1);

  00062	89 75 e8	 mov	 DWORD PTR __Newnode$1$[ebp], esi

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00065	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]
  00069	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  0006d	0f 10 40 20	 movups	 xmm0, XMMWORD PTR [eax+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 359  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

  00071	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$3[ebp]
  00074	50		 push	 eax
  00075	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00076	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 359  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

  0007a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>

; 360  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

  0007f	8d 45 ec	 lea	 eax, DWORD PTR __Myhead$3[ebp]
  00082	83 c6 04	 add	 esi, 4
  00085	50		 push	 eax
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>

; 361  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

  0008c	8b 45 e8	 mov	 eax, DWORD PTR __Newnode$1$[ebp]
  0008f	8d 4d ec	 lea	 ecx, DWORD PTR __Myhead$3[ebp]
  00092	83 c0 08	 add	 eax, 8
  00095	51		 push	 ecx
  00096	50		 push	 eax
  00097	89 45 e0	 mov	 DWORD PTR tv342[ebp], eax
  0009a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>

; 362  :         _Newnode._Ptr->_Color = _Red;

  0009f	8b 4d e8	 mov	 ecx, DWORD PTR __Newnode$1$[ebp]
  000a2	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1761 :             typename is_same<key_type, value_type>::type _Is_set;
; 1762 :             _Nodeptr _Pnode = _Copy_or_move(_Rootnode->_Myval, _Movefl, _Is_set);
; 1763 :             _Pnode->_Parent = _Wherenode;

  000a5	8b 45 0c	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 1766 :                 _Newroot = _Pnode; // memorize new root
; 1767 :             }
; 1768 : 
; 1769 :             _TRY_BEGIN

  000a8	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1

; 362  :         _Newnode._Ptr->_Color = _Red;

  000af	66 c7 41 0c 00
	00		 mov	 WORD PTR [ecx+12], 0

; 1761 :             typename is_same<key_type, value_type>::type _Is_set;
; 1762 :             _Nodeptr _Pnode = _Copy_or_move(_Rootnode->_Myval, _Movefl, _Is_set);
; 1763 :             _Pnode->_Parent = _Wherenode;

  000b5	89 06		 mov	 DWORD PTR [esi], eax

; 1764 :             _Pnode->_Color  = _Rootnode->_Color;

  000b7	8b 75 08	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  000ba	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  000bd	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 1765 :             if (_Newroot->_Isnil) {

  000c0	8b 45 e4	 mov	 eax, DWORD PTR __Newroot$1$[ebp]

; 1770 :             _Pnode->_Left  = _Copy_nodes(_Rootnode->_Left, _Pnode, _Movefl);

  000c3	ff 75 10	 push	 DWORD PTR __Movefl$[ebp]
  000c6	51		 push	 ecx
  000c7	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000cb	ff 36		 push	 DWORD PTR [esi]
  000cd	0f 45 c1	 cmovne	 eax, ecx
  000d0	8b cf		 mov	 ecx, edi
  000d2	89 45 e4	 mov	 DWORD PTR __Newroot$1$[ebp], eax
  000d5	89 45 08	 mov	 DWORD PTR __Newroot$[ebp], eax
  000d8	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
  000dd	8b c8		 mov	 ecx, eax
  000df	8b 45 e8	 mov	 eax, DWORD PTR __Newnode$1$[ebp]
  000e2	89 08		 mov	 DWORD PTR [eax], ecx

; 1771 :             _Pnode->_Right = _Copy_nodes(_Rootnode->_Right, _Pnode, _Movefl);

  000e4	8b cf		 mov	 ecx, edi
  000e6	ff 75 10	 push	 DWORD PTR __Movefl$[ebp]
  000e9	50		 push	 eax
  000ea	ff 76 08	 push	 DWORD PTR [esi+8]
  000ed	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
  000f2	8b 4d e0	 mov	 ecx, DWORD PTR tv342[ebp]
  000f5	89 01		 mov	 DWORD PTR [ecx], eax
  000f7	8b 4d e4	 mov	 ecx, DWORD PTR __Newroot$1$[ebp]
$LN8@Copy_nodes:

; 1775 :             _CATCH_END
; 1776 :         }
; 1777 : 
; 1778 :         return _Newroot; // return newly constructed tree

  000fa	8b c1		 mov	 eax, ecx

; 1779 :     }

  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00106	59		 pop	 ecx
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 0c 00	 ret	 12			; 0000000cH
__catch$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$0:

; 1772 :             _CATCH_ALL
; 1773 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out

  00110	ff 75 08	 push	 DWORD PTR __Newroot$[ebp]
  00113	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal
  0011b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >

; 1774 :             _RERAISE;

  00124	6a 00		 push	 0
  00126	6a 00		 push	 0
  00128	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN44@Copy_nodes:
  0012d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$2:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR __Newnode$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ENDP ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >, COMDAT
; _this$ = ecx

; 775  :         if (_Mycont) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 09		 je	 SHORT $LN2@Tree_head_

; 776  :             _Mycont->_Erase_head(_Al);

  00007	ff 31		 push	 DWORD PTR [ecx]
  00009	8b c8		 mov	 ecx, eax
  0000b	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
$LN2@Tree_head_:

; 777  :         }
; 778  :     }

  00010	c3		 ret	 0
??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@ABM@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@AAV?$tuple@ABM@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABM@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@AAV?$tuple@ABM@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><std::tuple<float const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	8b 00		 mov	 eax, DWORD PTR [eax]
  0000d	89 01		 mov	 DWORD PTR [ecx], eax
  0000f	8b c1		 mov	 eax, ecx
  00011	0f 11 41 04	 movups	 XMMWORD PTR [ecx+4], xmm0
  00015	66 0f d6 41 14	 movq	 QWORD PTR [ecx+20], xmm0
  0001a	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00021	5d		 pop	 ebp
  00022	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@ABM@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@AAV?$tuple@ABM@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><std::tuple<float const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0ABM$$Z$$V@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABM@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABM$$Z$$V@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABM@1@V?$tuple@$$V@1@@Z PROC ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><float const &>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  0000b	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000e	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00011	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  00015	8b f1		 mov	 esi, ecx
  00017	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$?0V?$tuple@ABM@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@AAV?$tuple@ABM@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><std::tuple<float const &>,std::tuple<>,0>
  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 0c 00	 ret	 12			; 0000000cH
??$?0ABM$$Z$$V@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABM@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><float const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAVCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@QAV1@0PAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@QAV1@0PAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z PROC ; std::_Uninitialized_move<CSphereCollisionInstance *,std::allocator<CSphereCollisionInstance> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00003	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00006	56		 push	 esi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00012	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  00015	2b f0		 sub	 esi, eax
  00017	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@Uninitiali:
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSphereCollisionInstance@@6B@

; 1509 :         ++_Last;

  00026	8d 52 14	 lea	 edx, DWORD PTR [edx+20]
  00029	0f 10 44 32 ec	 movups	 xmm0, XMMWORD PTR [edx+esi-20]
  0002e	83 c0 14	 add	 eax, 20			; 00000014H
  00031	0f 11 42 ec	 movups	 XMMWORD PTR [edx-20], xmm0

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00035	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  00038	3b cf		 cmp	 ecx, edi
  0003a	75 e4		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  0003c	5f		 pop	 edi

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Uninitialized_move@PAVCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@QAV1@0PAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CSphereCollisionInstance *,std::allocator<CSphereCollisionInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_move<NRaceData::SAttachingData *,std::allocator<NRaceData::SAttachingData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  0000a	57		 push	 edi

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	3b c7		 cmp	 eax, edi
  00010	74 71		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00012	8b d6		 mov	 edx, esi
  00014	8d 48 20	 lea	 ecx, DWORD PTR [eax+32]
  00017	2b d0		 sub	 edx, eax
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@Uninitiali:
  00020	8b 41 e0	 mov	 eax, DWORD PTR [ecx-32]

; 1509 :         ++_Last;

  00023	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  00026	89 06		 mov	 DWORD PTR [esi], eax
  00028	8b 41 b4	 mov	 eax, DWORD PTR [ecx-76]
  0002b	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0002e	8b 41 b8	 mov	 eax, DWORD PTR [ecx-72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00031	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  00038	c7 44 0a d0 00
	00 00 00	 mov	 DWORD PTR [edx+ecx-48], 0
  00040	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00043	0f 10 41 bc	 movups	 xmm0, XMMWORD PTR [ecx-68]
  00047	0f 11 46 0c	 movups	 XMMWORD PTR [esi+12], xmm0
  0004b	f3 0f 7e 41 cc	 movq	 xmm0, QWORD PTR [ecx-52]
  00050	66 0f d6 46 1c	 movq	 QWORD PTR [esi+28], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00055	c7 41 cc 00 00
	00 00		 mov	 DWORD PTR [ecx-52], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0005c	c7 41 d0 0f 00
	00 00		 mov	 DWORD PTR [ecx-48], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00063	c6 41 bc 00	 mov	 BYTE PTR [ecx-68], 0
  00067	8b 41 d4	 mov	 eax, DWORD PTR [ecx-44]
  0006a	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0006d	8b 41 d8	 mov	 eax, DWORD PTR [ecx-40]
  00070	89 46 28	 mov	 DWORD PTR [esi+40], eax
  00073	8b 41 dc	 mov	 eax, DWORD PTR [ecx-36]
  00076	89 46 2c	 mov	 DWORD PTR [esi+44], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00079	8d 41 e0	 lea	 eax, DWORD PTR [ecx-32]

; 1509 :         ++_Last;

  0007c	83 c6 30	 add	 esi, 48			; 00000030H

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0007f	3b c7		 cmp	 eax, edi
  00081	75 9d		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00083	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00086	56		 push	 esi
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  00090	8b c6		 mov	 eax, esi
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi

; 1664 :     }
; 1665 : }

  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
??$_Uninitialized_move@PAUSAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_move<NRaceData::SAttachingData *,std::allocator<NRaceData::SAttachingData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >, COMDAT
; _this$ = ecx

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1504 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_copy<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >, COMDAT

; 1527 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]

; 1528 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1529 :     // note: only called internally from elsewhere in the STL
; 1530 :     using _Ptrval = typename _Alloc::value_type*;
; 1531 : 
; 1532 :     auto _UFirst      = _Get_unwrapped(_First);

  0002e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00031	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00034	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00037	89 45 f0	 mov	 DWORD PTR __Backout$2[ebp+8], eax

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0003a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	3b f3		 cmp	 esi, ebx
  00046	74 18		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00048	56		 push	 esi
  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ??0SHitData@NRaceData@@QAE@ABU01@@Z

; 1509 :         ++_Last;

  00050	83 c7 2c	 add	 edi, 44			; 0000002cH

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00053	83 c6 2c	 add	 esi, 44			; 0000002cH

; 1509 :         ++_Last;

  00056	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00059	3b f3		 cmp	 esi, ebx
  0005b	75 eb		 jne	 SHORT $LL4@Uninitiali
  0005d	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00060	50		 push	 eax
  00061	57		 push	 edi
  00062	57		 push	 edi
  00063	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1542 :             _Backout._Emplace_back(*_UFirst);
; 1543 :         }
; 1544 : 
; 1545 :         _Dest = _Backout._Release();
; 1546 :     }
; 1547 : 
; 1548 :     return _Dest;

  0006b	8b c7		 mov	 eax, edi

; 1549 : }

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_copy<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_move<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 5d 14	 mov	 ebx, DWORD PTR __Al$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);

  0002e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00031	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00034	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00037	89 5d f0	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00041	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00044	74 19		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 1508 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00046	56		 push	 esi
  00047	57		 push	 edi
  00048	53		 push	 ebx
  00049	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>

; 1509 :         ++_Last;

  0004e	83 c7 2c	 add	 edi, 44			; 0000002cH

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00051	83 c6 2c	 add	 esi, 44			; 0000002cH

; 1508 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00054	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1509 :         ++_Last;

  00057	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0005a	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0005d	75 e7		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0005f	53		 push	 ebx
  00060	57		 push	 edi
  00061	57		 push	 edi
  00062	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  0006a	8b c7		 mov	 eax, edi

; 1664 :     }
; 1665 : }

  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_move<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@PAV1@IAAV?$allocator@VCSphereCollisionInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@PAV1@IAAV?$allocator@VCSphereCollisionInstance@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CSphereCollisionInstance> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00009	85 c9		 test	 ecx, ecx
  0000b	74 2d		 je	 SHORT $LN3@Uninitiali
  0000d	0f 1f 00	 npad	 3
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00010	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00017	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0001e	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00025	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0002c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSphereCollisionInstance@@6B@

; 1509 :         ++_Last;

  00032	83 c0 14	 add	 eax, 20			; 00000014H

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00035	83 e9 01	 sub	 ecx, 1
  00038	75 d6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@PAV1@IAAV?$allocator@VCSphereCollisionInstance@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CSphereCollisionInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAPAPAUSCollisionData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAPAPAUSCollisionData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_move<NRaceData::SCollisionData * *,std::allocator<NRaceData::SCollisionData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAPAPAUSCollisionData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_move<NRaceData::SCollisionData * *,std::allocator<NRaceData::SCollisionData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingEffectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingEffectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_move<NRaceData::SAttachingEffectData * *,std::allocator<NRaceData::SAttachingEffectData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingEffectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_move<NRaceData::SAttachingEffectData * *,std::allocator<NRaceData::SAttachingEffectData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingObjectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingObjectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_move<NRaceData::SAttachingObjectData * *,std::allocator<NRaceData::SAttachingObjectData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingObjectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_move<NRaceData::SAttachingObjectData * *,std::allocator<NRaceData::SAttachingObjectData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@PAU12@IAAV?$allocator@USAttachingData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@PAU12@IAAV?$allocator@USAttachingData@NRaceData@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<NRaceData::SAttachingData> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1833 :         for (; 0 < _Count; --_Count) {

  0000a	85 c9		 test	 ecx, ecx
  0000c	74 49		 je	 SHORT $LN3@Uninitiali
  0000e	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
$LL4@Uninitiali:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 173  : 			: dwType(0)

  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00017	8d 40 30	 lea	 eax, DWORD PTR [eax+48]
  0001a	83 c6 30	 add	 esi, 48			; 00000030H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 174  : 			, isAttaching(false)

  0001d	c7 40 b4 00 00
	00 00		 mov	 DWORD PTR [eax-76], 0

; 175  : 			, dwAttachingModelIndex(0)

  00024	c7 40 b8 00 00
	00 00		 mov	 DWORD PTR [eax-72], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002b	c7 40 cc 00 00
	00 00		 mov	 DWORD PTR [eax-52], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00032	c7 40 d0 0f 00
	00 00		 mov	 DWORD PTR [eax-48], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00039	c6 40 bc 00	 mov	 BYTE PTR [eax-68], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 176  : 			, pCollisionData(NULL)

  0003d	c7 40 d4 00 00
	00 00		 mov	 DWORD PTR [eax-44], 0

; 177  : 			, pEffectData(NULL)

  00044	c7 40 d8 00 00
	00 00		 mov	 DWORD PTR [eax-40], 0

; 178  : 			, pObjectData(NULL)

  0004b	c7 40 dc 00 00
	00 00		 mov	 DWORD PTR [eax-36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1833 :         for (; 0 < _Count; --_Count) {

  00052	83 e9 01	 sub	 ecx, 1
  00055	75 ba		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00057	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  0005a	56		 push	 esi
  0005b	56		 push	 esi
  0005c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00064	8b c6		 mov	 eax, esi
  00066	5e		 pop	 esi

; 1838 :     }
; 1839 : }

  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@PAU12@IAAV?$allocator@USAttachingData@NRaceData@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<NRaceData::SAttachingData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 30		 push	 48			; 00000030H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv299 = -4						; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b d9		 mov	 ebx, ecx
  0000c	81 ff cc cc cc
	0c		 cmp	 edi, 214748364		; 0cccccccH
  00012	0f 87 d2 00 00
	00		 ja	 $LN36@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0001b	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00022	f7 e9		 imul	 ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00024	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00027	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00029	c1 fa 03	 sar	 edx, 3
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	89 45 08	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0003b	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0003d	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00042	c1 fa 03	 sar	 edx, 3
  00045	8b ca		 mov	 ecx, edx
  00047	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004a	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0004c	8b d1		 mov	 edx, ecx
  0004e	d1 ea		 shr	 edx, 1
  00050	2b c2		 sub	 eax, edx
  00052	3b c8		 cmp	 ecx, eax
  00054	77 14		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00056	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00059	3b c7		 cmp	 eax, edi
  0005b	72 0d		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	3d cc cc cc 0c	 cmp	 eax, 214748364		; 0cccccccH
  00062	0f 87 87 00 00
	00		 ja	 $LN37@Resize_rea
  00068	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0006a	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  0006c	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0006f	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00072	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00073	89 45 fc	 mov	 DWORD PTR tv299[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00076	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0007b	8b 4d 08	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007e	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00080	8b c7		 mov	 eax, edi
  00082	2b c1		 sub	 eax, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00084	53		 push	 ebx
  00085	50		 push	 eax

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00086	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  00089	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@PAV1@IAAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CSphereCollisionInstance> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00092	53		 push	 ebx
  00093	56		 push	 esi
  00094	ff 73 04	 push	 DWORD PTR [ebx+4]
  00097	ff 33		 push	 DWORD PTR [ebx]
  00099	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@QAV1@0PAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Uninitialized_move<CSphereCollisionInstance *,std::allocator<CSphereCollisionInstance> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0009e	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a0	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	85 c0		 test	 eax, eax
  000a5	74 27		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000a7	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000aa	2b c8		 sub	 ecx, eax
  000ac	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000b1	f7 e9		 imul	 ecx
  000b3	c1 fa 03	 sar	 edx, 3
  000b6	8b c2		 mov	 eax, edx
  000b8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000bb	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bd	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000c0	c1 e0 02	 shl	 eax, 2
  000c3	50		 push	 eax
  000c4	ff 33		 push	 DWORD PTR [ebx]
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000ce	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  000d1	89 33		 mov	 DWORD PTR [ebx], esi
  000d3	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  000d6	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d9	8b 45 fc	 mov	 eax, DWORD PTR tv299[ebp]
  000dc	5f		 pop	 edi
  000dd	03 c6		 add	 eax, esi
  000df	5e		 pop	 esi
  000e0	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  000e3	5b		 pop	 ebx

; 1208 :     }

  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000ea	e8 00 00 00 00	 call	 ?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ef	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000f4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv302 = -8						; size = 4
__Newvec$1$ = -4					; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	81 fb 55 55 55
	05		 cmp	 ebx, 89478485		; 05555555H
  00014	0f 87 e7 00 00
	00		 ja	 $LN38@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0001a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00022	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00024	f7 e9		 imul	 ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00026	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00029	2b 0f		 sub	 ecx, DWORD PTR [edi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002b	c1 fa 03	 sar	 edx, 3
  0002e	8b c2		 mov	 eax, edx
  00030	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00033	03 c2		 add	 eax, edx
  00035	89 45 08	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00038	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0003d	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0003f	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00044	c1 fa 03	 sar	 edx, 3
  00047	8b ca		 mov	 ecx, edx
  00049	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004c	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0004e	8b d1		 mov	 edx, ecx
  00050	d1 ea		 shr	 edx, 1
  00052	2b c2		 sub	 eax, edx
  00054	3b c8		 cmp	 ecx, eax
  00056	77 14		 ja	 SHORT $LN36@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00058	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0005b	3b c3		 cmp	 eax, ebx
  0005d	72 0d		 jb	 SHORT $LN36@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005f	3d 55 55 55 05	 cmp	 eax, 89478485		; 05555555H
  00064	0f 87 9c 00 00
	00		 ja	 $LN39@Resize_rea
  0006a	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN36@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0006c	8b c3		 mov	 eax, ebx
$LN18@Resize_rea:
  0006e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00071	c1 e0 04	 shl	 eax, 4

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00074	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00075	89 45 f8	 mov	 DWORD PTR tv302[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00078	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00080	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00082	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00084	89 75 fc	 mov	 DWORD PTR __Newvec$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00087	2b c1		 sub	 eax, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00089	57		 push	 edi
  0008a	50		 push	 eax

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0008b	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0008e	c1 e0 04	 shl	 eax, 4
  00091	03 c6		 add	 eax, esi

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@PAU12@IAAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<NRaceData::SAttachingData> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00099	57		 push	 edi
  0009a	56		 push	 esi
  0009b	ff 77 04	 push	 DWORD PTR [edi+4]
  0009e	ff 37		 push	 DWORD PTR [edi]
  000a0	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingData *,std::allocator<NRaceData::SAttachingData> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000a5	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a7	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000aa	85 c9		 test	 ecx, ecx
  000ac	74 35		 je	 SHORT $LN29@Resize_rea

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000ae	57		 push	 edi
  000af	ff 77 04	 push	 DWORD PTR [edi+4]
  000b2	51		 push	 ecx
  000b3	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b8	8b 37		 mov	 esi, DWORD PTR [edi]
  000ba	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000bf	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000c2	2b ce		 sub	 ecx, esi
  000c4	f7 e9		 imul	 ecx
  000c6	c1 fa 03	 sar	 edx, 3
  000c9	8b c2		 mov	 eax, edx
  000cb	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ce	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d0	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000d3	c1 e0 04	 shl	 eax, 4
  000d6	50		 push	 eax
  000d7	56		 push	 esi
  000d8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000dd	8b 75 fc	 mov	 esi, DWORD PTR __Newvec$1$[ebp]
  000e0	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000e3	8d 04 5b	 lea	 eax, DWORD PTR [ebx+ebx*2]
  000e6	89 37		 mov	 DWORD PTR [edi], esi
  000e8	c1 e0 04	 shl	 eax, 4
  000eb	03 c6		 add	 eax, esi
  000ed	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000f0	8b 45 f8	 mov	 eax, DWORD PTR tv302[ebp]
  000f3	03 c6		 add	 eax, esi
  000f5	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx

; 1208 :     }

  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 08 00	 ret	 8
$LN38@Resize_rea:

; 1184 :             _Xlength();

  00101	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength
$LN39@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00106	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN35@Resize_rea:
  0010b	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAXPAPAUSCollisionData@NRaceData@@QAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAXPAPAUSCollisionData@NRaceData@@QAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SCollisionData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAXPAPAUSCollisionData@NRaceData@@QAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SCollisionData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingEffectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingEffectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SAttachingEffectData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingEffectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SAttachingEffectData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingObjectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingObjectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SAttachingObjectData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAXPAPAUSAttachingObjectData@NRaceData@@QAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SAttachingObjectData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 3b		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 20	 add	 esi, 32			; 00000020H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1191 :         _Scary->_Erase_head(_Getal());

  00012	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0001b	8b 06		 mov	 eax, DWORD PTR [esi]
  0001d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00020	72 0d		 jb	 SHORT $LN23@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00022	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00023	50		 push	 eax
  00024	ff 76 ec	 push	 DWORD PTR [esi-20]
  00027	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002c	83 c4 08	 add	 esp, 8
$LN23@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0002f	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00036	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003c	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00040	83 c6 2c	 add	 esi, 44			; 0000002cH
  00043	8d 46 e0	 lea	 eax, DWORD PTR [esi-32]
  00046	3b c7		 cmp	 eax, edi
  00048	75 c8		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0004a	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0004b	5e		 pop	 esi
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z PROC ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAPAPAUSCollisionData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SCollisionData * *,std::allocator<NRaceData::SCollisionData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@YAPAPAUSCollisionData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSCollisionData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SCollisionData * *,std::allocator<NRaceData::SCollisionData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z PROC ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingEffectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingEffectData * *,std::allocator<NRaceData::SAttachingEffectData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingEffectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingEffectData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingEffectData * *,std::allocator<NRaceData::SAttachingEffectData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z PROC ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingObjectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingObjectData * *,std::allocator<NRaceData::SAttachingObjectData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@YAPAPAUSAttachingObjectData@NRaceData@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSAttachingObjectData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SAttachingObjectData * *,std::allocator<NRaceData::SAttachingObjectData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 32		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 20	 add	 esi, 32			; 00000020H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 0d		 jb	 SHORT $LN18@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00019	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	50		 push	 eax
  0001b	ff 76 ec	 push	 DWORD PTR [esi-20]
  0001e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00023	83 c4 08	 add	 esp, 8
$LN18@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00026	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002d	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00037	83 c6 30	 add	 esi, 48			; 00000030H
  0003a	8d 46 e0	 lea	 eax, DWORD PTR [esi-32]
  0003d	3b c7		 cmp	 eax, edi
  0003f	75 d1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00041	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 750  :     void _Erase_head(_Alnode& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 751  :         this->_Orphan_all();
; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00007	8b 07		 mov	 eax, DWORD PTR [edi]
  00009	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0000c	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00010	75 27		 jne	 SHORT $LN5@Erase_head
  00012	53		 push	 ebx
  00013	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
$LL4@Erase_head:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00016	ff 76 08	 push	 DWORD PTR [esi+8]
  00019	8b cf		 mov	 ecx, edi
  0001b	53		 push	 ebx
  0001c	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00021	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00023	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00025	6a 30		 push	 48			; 00000030H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00030	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00034	74 e0		 je	 SHORT $LL4@Erase_head
  00036	8b 07		 mov	 eax, DWORD PTR [edi]
  00038	5b		 pop	 ebx
$LN5@Erase_head:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00039	6a 30		 push	 48			; 00000030H
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00041	83 c4 08	 add	 esp, 8
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 754  :     }

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 30		 push	 48			; 00000030H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
_TEXT	SEGMENT
__Newvec$ = -48						; size = 4
_this$ = -44						; size = 4
__Constructed_last$ = -40				; size = 4
tv384 = -36						; size = 4
__Oldsize$1$ = -32					; size = 4
tv382 = -28						; size = 4
__Newcapacity$ = -24					; size = 4
__Constructed_first$ = -20				; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d d4	 mov	 DWORD PTR _this$[ebp], edi

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00033	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00038	2b 17		 sub	 edx, DWORD PTR [edi]

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0003a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003d	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0003f	f7 ea		 imul	 edx
  00041	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00046	c1 fa 03	 sar	 edx, 3
  00049	8b f2		 mov	 esi, edx
  0004b	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0004e	03 f2		 add	 esi, edx
  00050	f7 e9		 imul	 ecx
  00052	c1 fa 03	 sar	 edx, 3
  00055	8b c2		 mov	 eax, edx
  00057	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005a	03 c2		 add	 eax, edx
  0005c	89 45 e0	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0005f	3d 5d 74 d1 05	 cmp	 eax, 97612893		; 05d1745dH
  00064	0f 84 3e 01 00
	00		 je	 $LN43@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0006a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0006d	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00070	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00072	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00077	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00079	b8 5d 74 d1 05	 mov	 eax, 97612893		; 05d1745dH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0007e	c1 fa 03	 sar	 edx, 3
  00081	8b ca		 mov	 ecx, edx
  00083	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00086	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00088	8b d1		 mov	 edx, ecx
  0008a	d1 ea		 shr	 edx, 1
  0008c	2b c2		 sub	 eax, edx
  0008e	3b c8		 cmp	 ecx, eax
  00090	76 07		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00092	8b c3		 mov	 eax, ebx
  00094	89 5d e8	 mov	 DWORD PTR __Newcapacity$[ebp], ebx
  00097	eb 0b		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00099	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0009c	3b c3		 cmp	 eax, ebx
  0009e	0f 42 c3	 cmovb	 eax, ebx
  000a1	89 45 e8	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000a4	3d 5d 74 d1 05	 cmp	 eax, 97612893		; 05d1745dH
  000a9	0f 87 fe 00 00
	00		 ja	 $LN44@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000af	6b c0 2c	 imul	 eax, eax, 44

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b2	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  000b3	89 45 dc	 mov	 DWORD PTR tv384[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b6	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000bb	ff 75 0c	 push	 DWORD PTR _<_Val_0>$[ebp]
  000be	6b f6 2c	 imul	 esi, esi, 44
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c1	8b d8		 mov	 ebx, eax
  000c3	89 5d d0	 mov	 DWORD PTR __Newvec$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 748  :         _TRY_BEGIN

  000c6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000cd	03 f3		 add	 esi, ebx

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000cf	56		 push	 esi
  000d0	57		 push	 edi
  000d1	89 75 e4	 mov	 DWORD PTR tv382[ebp], esi
  000d4	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  000d7	89 45 d8	 mov	 DWORD PTR __Constructed_last$[ebp], eax
  000da	89 45 ec	 mov	 DWORD PTR __Constructed_first$[ebp], eax
  000dd	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>

; 750  :         _Constructed_first = _Newvec + _Whereoff;
; 751  : 
; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000e2	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000e5	83 c4 10	 add	 esp, 16			; 00000010H
  000e8	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  000eb	8b 07		 mov	 eax, DWORD PTR [edi]
  000ed	89 75 ec	 mov	 DWORD PTR __Constructed_first$[ebp], esi
  000f0	57		 push	 edi
  000f1	53		 push	 ebx
  000f2	3b d1		 cmp	 edx, ecx
  000f4	75 09		 jne	 SHORT $LN4@Emplace_re

; 1602 :         _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000f6	51		 push	 ecx
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Uninitialized_copy<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000fd	eb 1d		 jmp	 SHORT $LN41@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000ff	52		 push	 edx
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >
  00106	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;

  00109	89 5d ec	 mov	 DWORD PTR __Constructed_first$[ebp], ebx

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0010c	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  0010f	57		 push	 edi
  00110	50		 push	 eax
  00111	ff 77 04	 push	 DWORD PTR [edi+4]
  00114	ff 75 08	 push	 DWORD PTR __Whereptr$[ebp]
  00117	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Uninitialized_move<NRaceData::SHitData *,std::allocator<NRaceData::SHitData> >
$LN41@Emplace_re:

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0011c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0011e	83 c4 10	 add	 esp, 16			; 00000010H
  00121	85 c9		 test	 ecx, ecx
  00123	74 32		 je	 SHORT $LN33@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00125	57		 push	 edi
  00126	ff 77 04	 push	 DWORD PTR [edi+4]
  00129	51		 push	 ecx
  0012a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0012f	8b 37		 mov	 esi, DWORD PTR [edi]
  00131	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00136	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00139	2b ce		 sub	 ecx, esi
  0013b	f7 e9		 imul	 ecx
  0013d	c1 fa 03	 sar	 edx, 3
  00140	8b c2		 mov	 eax, edx
  00142	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00145	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00147	6b c0 2c	 imul	 eax, eax, 44
  0014a	50		 push	 eax
  0014b	56		 push	 esi
  0014c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00151	8b 75 e4	 mov	 esi, DWORD PTR tv382[ebp]
  00154	83 c4 14	 add	 esp, 20			; 00000014H
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00157	8b 45 e0	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  0015a	40		 inc	 eax
  0015b	89 1f		 mov	 DWORD PTR [edi], ebx
  0015d	6b c8 2c	 imul	 ecx, eax, 44

; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  00160	8b c6		 mov	 eax, esi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00162	03 cb		 add	 ecx, ebx
  00164	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00167	8b 4d dc	 mov	 ecx, DWORD PTR tv384[ebp]
  0016a	03 cb		 add	 ecx, ebx
  0016c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 767  :     }

  0016f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00172	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00179	59		 pop	 ecx
  0017a	5f		 pop	 edi
  0017b	5e		 pop	 esi
  0017c	5b		 pop	 ebx
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 08 00	 ret	 8
__catch$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$0:

; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);

  00183	ff 75 d8	 push	 DWORD PTR __Constructed_last$[ebp]
  00186	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00189	ff 75 ec	 push	 DWORD PTR __Constructed_first$[ebp]
  0018c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy

; 761  :         _Al.deallocate(_Newvec, _Newcapacity);

  00191	ff 75 e8	 push	 DWORD PTR __Newcapacity$[ebp]
  00194	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	ff 75 d0	 push	 DWORD PTR __Newvec$[ebp]
  0019a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z ; std::allocator<NRaceData::SHitData>::deallocate

; 762  :         _RERAISE;

  0019f	6a 00		 push	 0
  001a1	6a 00		 push	 0
  001a3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@Emplace_re:

; 738  :             _Xlength();

  001a8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength
$LN44@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN40@Emplace_re:
  001b2	cc		 int	 3
  001b3	cc		 int	 3
  001b4	cc		 int	 3
  001b5	cc		 int	 3
  001b6	cc		 int	 3
  001b7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
__Pnode$2 = 12						; size = 4
$T3 = 12						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>, COMDAT

; 693  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b 55 10	 mov	 edx, DWORD PTR _<_Args_0>$[ebp]

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002b	89 4d 0c	 mov	 DWORD PTR $T3[ebp], ecx
  0002e	8b 02		 mov	 eax, DWORD PTR [edx]
  00030	89 01		 mov	 DWORD PTR [ecx], eax
  00032	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00035	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00038	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003b	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0003e	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00045	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0004c	0f 10 42 0c	 movups	 xmm0, XMMWORD PTR [edx+12]
  00050	0f 11 41 0c	 movups	 XMMWORD PTR [ecx+12], xmm0
  00054	f3 0f 7e 42 1c	 movq	 xmm0, QWORD PTR [edx+28]
  00059	66 0f d6 41 1c	 movq	 QWORD PTR [ecx+28], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0005e	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00065	c7 42 20 0f 00
	00 00		 mov	 DWORD PTR [edx+32], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0006c	c6 42 0c 00	 mov	 BYTE PTR [edx+12], 0
  00070	8d 79 24	 lea	 edi, DWORD PTR [ecx+36]
  00073	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007a	6a 30		 push	 48			; 00000030H
  0007c	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0007f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00085	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00091	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00093	8d 45 0c	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00096	50		 push	 eax
  00097	56		 push	 esi
  00098	89 75 0c	 mov	 DWORD PTR __Pnode$2[ebp], esi
  0009b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000a0	8d 45 0c	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  000a3	50		 push	 eax
  000a4	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000ad	8d 45 0c	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  000b0	50		 push	 eax
  000b1	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  000ba	8b 55 10	 mov	 edx, DWORD PTR _<_Args_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000bd	83 c4 1c	 add	 esp, 28			; 0000001cH

; 347  :         _Pnode->_Color = _Black;

  000c0	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000c6	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 107  :     _Left    = _STD move(_Right);

  000c8	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000cb	89 07		 mov	 DWORD PTR [edi], eax
  000cd	8b 42 28	 mov	 eax, DWORD PTR [edx+40]

; 108  :     _Right   = _STD move(_Tmp);

  000d0	89 72 24	 mov	 DWORD PTR [edx+36], esi

; 106  :     _Ty _Tmp = _STD move(_Left);

  000d3	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 107  :     _Left    = _STD move(_Right);

  000d6	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 108  :     _Right   = _STD move(_Tmp);

  000d9	89 4a 28	 mov	 DWORD PTR [edx+40], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 695  :     }

  000dc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000df	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e6	59		 pop	 ecx
  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z$0:
  00000	8b 4d 0c	 mov	 ecx, DWORD PTR $T3[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z PROC ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 282  : auto _Const_cast(_Ty* _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 283  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 284  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ENDP ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange, COMDAT

; 1708 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_ObjectDataPool@NRaceData@@YAXXZ
text$yd	SEGMENT
??__Fg_ObjectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic atexit destructor for 'g_ObjectDataPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A ; NRaceData::g_ObjectDataPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
??__Fg_ObjectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic atexit destructor for 'g_ObjectDataPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ??__Eg_ObjectDataPool@NRaceData@@YAXXZ
text$di	SEGMENT
??__Eg_ObjectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic initializer for 'g_ObjectDataPool'', COMDAT

; 9    : CDynamicPool<NRaceData::TAttachingObjectData>	NRaceData::g_ObjectDataPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fg_ObjectDataPool@NRaceData@@YAXXZ ; NRaceData::`dynamic atexit destructor for 'g_ObjectDataPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Eg_ObjectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic initializer for 'g_ObjectDataPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z ENDP ; CDynamicPool<NRaceData::SAttachingObjectData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z ENDP ; CDynamicPool<NRaceData::SAttachingObjectData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ENDP ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_EffectDataPool@NRaceData@@YAXXZ
text$yd	SEGMENT
??__Fg_EffectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic atexit destructor for 'g_EffectDataPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A ; NRaceData::g_EffectDataPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
??__Fg_EffectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic atexit destructor for 'g_EffectDataPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ??__Eg_EffectDataPool@NRaceData@@YAXXZ
text$di	SEGMENT
??__Eg_EffectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic initializer for 'g_EffectDataPool'', COMDAT

; 8    : CDynamicPool<NRaceData::TAttachingEffectData>	NRaceData::g_EffectDataPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fg_EffectDataPool@NRaceData@@YAXXZ ; NRaceData::`dynamic atexit destructor for 'g_EffectDataPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Eg_EffectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic initializer for 'g_EffectDataPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z ENDP ; CDynamicPool<NRaceData::SAttachingEffectData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z ENDP ; CDynamicPool<NRaceData::SAttachingEffectData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ENDP ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_CollisionDataPool@NRaceData@@YAXXZ
text$yd	SEGMENT
??__Fg_CollisionDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic atexit destructor for 'g_CollisionDataPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A ; NRaceData::g_CollisionDataPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
??__Fg_CollisionDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic atexit destructor for 'g_CollisionDataPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ??__Eg_CollisionDataPool@NRaceData@@YAXXZ
text$di	SEGMENT
??__Eg_CollisionDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic initializer for 'g_CollisionDataPool'', COMDAT

; 7    : CDynamicPool<NRaceData::TCollisionData>			NRaceData::g_CollisionDataPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fg_CollisionDataPool@NRaceData@@YAXXZ ; NRaceData::`dynamic atexit destructor for 'g_CollisionDataPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Eg_CollisionDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic initializer for 'g_CollisionDataPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z PROC ; CDynamicPool<NRaceData::SCollisionData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z ENDP ; CDynamicPool<NRaceData::SCollisionData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z PROC ; CDynamicPool<NRaceData::SCollisionData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z ENDP ; CDynamicPool<NRaceData::SCollisionData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ PROC ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ENDP ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CSphereCollisionInstance> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CSphereCollisionInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
_TEXT	SEGMENT
_i$1$ = -68						; size = 4
tv1823 = -64						; size = 4
$T2 = -57						; size = 1
_dwDataCount$ = -56					; size = 4
_rTextFileLoader$GSCopy$1$ = -52			; size = 4
_rAttachingData$1$ = -52				; size = 4
_pAttachingDataVector$GSCopy$1$ = -48			; size = 4
$T3 = -44						; size = 4
_pkNewData$4 = -44					; size = 4
$T5 = -44						; size = 4
_pkNewData$6 = -44					; size = 4
$T7 = -44						; size = 4
_pkNewData$8 = -44					; size = 4
$T9 = -40						; size = 24
$T10 = -40						; size = 24
$T11 = -40						; size = 24
$T12 = -40						; size = 24
$T13 = -40						; size = 24
$T14 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pAttachingDataVector$ = 12				; size = 4
?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z PROC ; NRaceData::LoadAttachingData, COMDAT

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 75 08	 mov	 esi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 314  : {

  00031	8b 7d 0c	 mov	 edi, DWORD PTR _pAttachingDataVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FANHLGEG@attachingdatacount@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 314  : {

  00039	89 75 cc	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], esi
  0003c	89 7d d0	 mov	 DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T14[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T14[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 45 d8 00	 mov	 BYTE PTR $T14[ebp], 0

; 2339 :         assign(_Ptr);

  00051	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 316  : 	if (!rTextFileLoader.GetTokenDoubleWord("attachingdatacount", &dwDataCount))

  00056	8d 45 c8	 lea	 eax, DWORD PTR _dwDataCount$[ebp]
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00060	50		 push	 eax
  00061	8d 45 d8	 lea	 eax, DWORD PTR $T14[ebp]
  00064	8b ce		 mov	 ecx, esi
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  0006c	85 c0		 test	 eax, eax
  0006e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00075	8b 45 ec	 mov	 eax, DWORD PTR $T14[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 316  : 	if (!rTextFileLoader.GetTokenDoubleWord("attachingdatacount", &dwDataCount))

  00078	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007b	83 f8 10	 cmp	 eax, 16			; 00000010H
  0007e	72 0d		 jb	 SHORT $LN38@LoadAttach

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00080	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00081	50		 push	 eax
  00082	ff 75 d8	 push	 DWORD PTR $T14[ebp]
  00085	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008a	83 c4 08	 add	 esp, 8
$LN38@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 316  : 	if (!rTextFileLoader.GetTokenDoubleWord("attachingdatacount", &dwDataCount))

  0008d	84 db		 test	 bl, bl
  0008f	0f 85 a5 04 00
	00		 jne	 $LN249@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00095	57		 push	 edi
  00096	ff 77 04	 push	 DWORD PTR [edi+4]
  00099	ff 37		 push	 DWORD PTR [edi]
  0009b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >

; 1390 :         _Mylast = _Myfirst;

  000a0	8b 45 d0	 mov	 eax, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1224 :         if (_Newsize > _Oldsize) { // append

  000a6	8b 75 c8	 mov	 esi, DWORD PTR _dwDataCount$[ebp]

; 1390 :         _Mylast = _Myfirst;

  000a9	8b 38		 mov	 edi, DWORD PTR [eax]
  000ab	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1224 :         if (_Newsize > _Oldsize) { // append

  000ae	85 f6		 test	 esi, esi
  000b0	74 42		 je	 SHORT $LN52@LoadAttach

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000b2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b5	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000ba	2b cf		 sub	 ecx, edi
  000bc	f7 e9		 imul	 ecx
  000be	c1 fa 03	 sar	 edx, 3
  000c1	8b c2		 mov	 eax, edx
  000c3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000c6	03 c2		 add	 eax, edx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  000c8	3b f0		 cmp	 esi, eax
  000ca	76 12		 jbe	 SHORT $LN53@LoadAttach

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  000cc	8b 4d d0	 mov	 ecx, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  000cf	8d 45 c7	 lea	 eax, DWORD PTR $T2[ebp]
  000d2	50		 push	 eax
  000d3	56		 push	 esi
  000d4	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  000d9	8b 45 d0	 mov	 eax, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  000dc	eb 13		 jmp	 SHORT $LN255@LoadAttach
$LN53@LoadAttach:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000de	8b 5d d0	 mov	 ebx, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  000e1	53		 push	 ebx
  000e2	56		 push	 esi
  000e3	57		 push	 edi
  000e4	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAPAUSAttachingData@NRaceData@@PAU12@IAAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<NRaceData::SAttachingData> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000e9	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000ec	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ef	8b c3		 mov	 eax, ebx
$LN255@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 322  : 	for (DWORD i = 0; i < dwDataCount; ++i)

  000f1	8b 75 c8	 mov	 esi, DWORD PTR _dwDataCount$[ebp]
$LN52@LoadAttach:
  000f4	33 db		 xor	 ebx, ebx
  000f6	89 5d bc	 mov	 DWORD PTR _i$1$[ebp], ebx
  000f9	85 f6		 test	 esi, esi
  000fb	0f 84 32 04 00
	00		 je	 $LN3@LoadAttach
  00101	8b 7d cc	 mov	 edi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00104	89 5d c0	 mov	 DWORD PTR tv1823[ebp], ebx
$LL4@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00107	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010a	8b 30		 mov	 esi, DWORD PTR [eax]
  0010c	2b ce		 sub	 ecx, esi
  0010e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00113	f7 e9		 imul	 ecx
  00115	c1 fa 03	 sar	 edx, 3
  00118	8b c2		 mov	 eax, edx
  0011a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0011d	03 c2		 add	 eax, edx
  0011f	3b c3		 cmp	 eax, ebx
  00121	0f 86 31 04 00
	00		 jbe	 $LN241@LoadAttach

; 1523 :         return _My_data._Myfirst[_Pos];

  00127	03 75 c0	 add	 esi, DWORD PTR tv1823[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0012a	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OPEMPJIC@attachingdata@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00132	89 75 cc	 mov	 DWORD PTR _rAttachingData$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00135	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T13[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0013c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T13[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00143	c6 45 d8 00	 mov	 BYTE PTR $T13[ebp], 0

; 2339 :         assign(_Ptr);

  00147	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 325  : 		if (!rTextFileLoader.SetChildNode("attachingdata", i))

  0014c	53		 push	 ebx
  0014d	8d 45 d8	 lea	 eax, DWORD PTR $T13[ebp]
  00150	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00157	50		 push	 eax
  00158	8b cf		 mov	 ecx, edi
  0015a	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
  0015f	85 c0		 test	 eax, eax
  00161	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00168	8b 45 ec	 mov	 eax, DWORD PTR $T13[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 325  : 		if (!rTextFileLoader.SetChildNode("attachingdata", i))

  0016b	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0016e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00171	72 0d		 jb	 SHORT $LN75@LoadAttach

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00173	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00174	50		 push	 eax
  00175	ff 75 d8	 push	 DWORD PTR $T13[ebp]
  00178	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0017d	83 c4 08	 add	 esp, 8
$LN75@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 325  : 		if (!rTextFileLoader.SetChildNode("attachingdata", i))

  00180	84 db		 test	 bl, bl
  00182	0f 85 b2 03 00
	00		 jne	 $LN249@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MHCCJHKE@attachingdatatype@
  0018d	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00190	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00197	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T12[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0019e	88 5d d8	 mov	 BYTE PTR $T12[ebp], bl

; 2339 :         assign(_Ptr);

  001a1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 328  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingdatatype", &rAttachingData.dwType))

  001a6	56		 push	 esi
  001a7	8d 45 d8	 lea	 eax, DWORD PTR $T12[ebp]
  001aa	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001b1	50		 push	 eax
  001b2	8b cf		 mov	 ecx, edi
  001b4	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  001b9	85 c0		 test	 eax, eax
  001bb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c2	8b 45 ec	 mov	 eax, DWORD PTR $T12[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 328  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingdatatype", &rAttachingData.dwType))

  001c5	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c8	83 f8 10	 cmp	 eax, 16			; 00000010H
  001cb	72 0d		 jb	 SHORT $LN93@LoadAttach

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001cd	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ce	50		 push	 eax
  001cf	ff 75 d8	 push	 DWORD PTR $T12[ebp]
  001d2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001d7	83 c4 08	 add	 esp, 8
$LN93@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 328  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingdatatype", &rAttachingData.dwType))

  001da	84 db		 test	 bl, bl
  001dc	0f 85 58 03 00
	00		 jne	 $LN249@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MJFJJMOM@isattaching@
  001e7	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001ea	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001f1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001f8	88 5d d8	 mov	 BYTE PTR $T11[ebp], bl

; 2339 :         assign(_Ptr);

  001fb	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 331  : 		if (!rTextFileLoader.GetTokenInteger("isattaching", &rAttachingData.isAttaching))

  00200	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00203	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  0020a	50		 push	 eax
  0020b	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  0020e	8b cf		 mov	 ecx, edi
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00216	85 c0		 test	 eax, eax
  00218	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0021f	8b 45 ec	 mov	 eax, DWORD PTR $T11[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 331  : 		if (!rTextFileLoader.GetTokenInteger("isattaching", &rAttachingData.isAttaching))

  00222	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00225	83 f8 10	 cmp	 eax, 16			; 00000010H
  00228	72 0d		 jb	 SHORT $LN111@LoadAttach

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0022a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0022b	50		 push	 eax
  0022c	ff 75 d8	 push	 DWORD PTR $T11[ebp]
  0022f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00234	83 c4 08	 add	 esp, 8
$LN111@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 331  : 		if (!rTextFileLoader.GetTokenInteger("isattaching", &rAttachingData.isAttaching))

  00237	84 db		 test	 bl, bl
  00239	0f 85 fb 02 00
	00		 jne	 $LN249@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0023f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HAHPJOBE@attachingmodelindex@
  00244	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00247	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0024e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00255	88 5d d8	 mov	 BYTE PTR $T10[ebp], bl

; 2339 :         assign(_Ptr);

  00258	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 333  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingmodelindex", &rAttachingData.dwAttachingModelIndex))

  0025d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00260	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00267	50		 push	 eax
  00268	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  0026b	8b cf		 mov	 ecx, edi
  0026d	50		 push	 eax
  0026e	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  00273	85 c0		 test	 eax, eax
  00275	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0027c	8b 45 ec	 mov	 eax, DWORD PTR $T10[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 333  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingmodelindex", &rAttachingData.dwAttachingModelIndex))

  0027f	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00282	83 f8 10	 cmp	 eax, 16			; 00000010H
  00285	72 0d		 jb	 SHORT $LN129@LoadAttach

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00287	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00288	50		 push	 eax
  00289	ff 75 d8	 push	 DWORD PTR $T10[ebp]
  0028c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00291	83 c4 08	 add	 esp, 8
$LN129@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 333  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingmodelindex", &rAttachingData.dwAttachingModelIndex))

  00294	84 db		 test	 bl, bl
  00296	0f 85 9e 02 00
	00		 jne	 $LN249@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0029c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FCIOLNPK@attachingbonename@
  002a1	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  002a4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002ab	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002b2	88 5d d8	 mov	 BYTE PTR $T9[ebp], bl

; 2339 :         assign(_Ptr);

  002b5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 335  : 		if (!rTextFileLoader.GetTokenString("attachingbonename", &rAttachingData.strAttachingBoneName))

  002ba	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  002bd	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  002c4	50		 push	 eax
  002c5	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  002c8	8b cf		 mov	 ecx, edi
  002ca	50		 push	 eax
  002cb	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  002d0	85 c0		 test	 eax, eax
  002d2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  002d9	8b 45 ec	 mov	 eax, DWORD PTR $T9[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 335  : 		if (!rTextFileLoader.GetTokenString("attachingbonename", &rAttachingData.strAttachingBoneName))

  002dc	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  002df	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002e2	72 0d		 jb	 SHORT $LN147@LoadAttach

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002e4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002e5	50		 push	 eax
  002e6	ff 75 d8	 push	 DWORD PTR $T9[ebp]
  002e9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002ee	83 c4 08	 add	 esp, 8
$LN147@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 335  : 		if (!rTextFileLoader.GetTokenString("attachingbonename", &rAttachingData.strAttachingBoneName))

  002f1	84 db		 test	 bl, bl
  002f3	0f 85 41 02 00
	00		 jne	 $LN249@LoadAttach

; 336  : 			return false;
; 337  : 
; 338  : 		switch (rAttachingData.dwType)

  002f9	8b 06		 mov	 eax, DWORD PTR [esi]
  002fb	83 e8 01	 sub	 eax, 1
  002fe	0f 84 7b 01 00
	00		 je	 $LN13@LoadAttach
  00304	83 e8 01	 sub	 eax, 1
  00307	0f 84 bd 00 00
	00		 je	 $LN15@LoadAttach
  0030d	83 e8 01	 sub	 eax, 1
  00310	0f 85 ff 01 00
	00		 jne	 $LN14@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00316	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20
  0031b	39 05 10 00 00
	00		 cmp	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+16, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00321	0f 85 86 00 00
	00		 jne	 $LN211@LoadAttach

; 65   : 				T* pkNewData=new T;

  00327	6a 1c		 push	 28			; 0000001cH
  00329	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0032e	8b f0		 mov	 esi, eax
  00330	83 c4 04	 add	 esp, 4
  00333	89 75 d4	 mov	 DWORD PTR $T3[ebp], esi
  00336	85 f6		 test	 esi, esi
  00338	74 19		 je	 SHORT $LN213@LoadAttach
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 137  : 		SAttachingObjectData() {}

  0033a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingObjectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00340	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00347	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0034e	88 5e 04	 mov	 BYTE PTR [esi+4], bl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00351	eb 02		 jmp	 SHORT $LN214@LoadAttach
$LN213@LoadAttach:
  00353	33 f6		 xor	 esi, esi
$LN214@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00355	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  0035a	89 75 d4	 mov	 DWORD PTR _pkNewData$4[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0035d	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+12
  00363	74 21		 je	 SHORT $LN232@LoadAttach

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00365	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 351  : 				rAttachingData.pObjectData = g_ObjectDataPool.Alloc();

  00367	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  0036a	83 05 08 00 00
	00 04		 add	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00371	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 352  : 				if (!NRaceData::LoadObjectData(rTextFileLoader, rAttachingData.pObjectData))

  00377	56		 push	 esi
  00378	57		 push	 edi
  00379	89 70 2c	 mov	 DWORD PTR [eax+44], esi
  0037c	e8 00 00 00 00	 call	 ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
  00381	e9 88 01 00 00	 jmp	 $LN257@LoadAttach
$LN232@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00386	8d 4d d4	 lea	 ecx, DWORD PTR _pkNewData$4[ebp]
  00389	51		 push	 ecx
  0038a	50		 push	 eax
  0038b	b9 04 00 00 00	 mov	 ecx, OFFSET ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+4
  00390	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 351  : 				rAttachingData.pObjectData = g_ObjectDataPool.Alloc();

  00395	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00398	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 352  : 				if (!NRaceData::LoadObjectData(rTextFileLoader, rAttachingData.pObjectData))

  0039e	56		 push	 esi
  0039f	57		 push	 edi
  003a0	89 70 2c	 mov	 DWORD PTR [eax+44], esi
  003a3	e8 00 00 00 00	 call	 ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
  003a8	e9 61 01 00 00	 jmp	 $LN257@LoadAttach
$LN211@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  003ad	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  003b0	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  003b3	a3 14 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 351  : 				rAttachingData.pObjectData = g_ObjectDataPool.Alloc();

  003b8	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]

; 352  : 				if (!NRaceData::LoadObjectData(rTextFileLoader, rAttachingData.pObjectData))

  003bb	56		 push	 esi
  003bc	57		 push	 edi
  003bd	89 70 2c	 mov	 DWORD PTR [eax+44], esi
  003c0	e8 00 00 00 00	 call	 ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
  003c5	e9 44 01 00 00	 jmp	 $LN257@LoadAttach
$LN15@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  003ca	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+20
  003cf	39 05 10 00 00
	00		 cmp	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+16, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  003d5	0f 85 87 00 00
	00		 jne	 $LN181@LoadAttach

; 65   : 				T* pkNewData=new T;

  003db	6a 34		 push	 52			; 00000034H
  003dd	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003e2	8b f0		 mov	 esi, eax
  003e4	83 c4 04	 add	 esp, 4
  003e7	89 75 d4	 mov	 DWORD PTR $T5[ebp], esi
  003ea	85 f6		 test	 esi, esi
  003ec	74 1a		 je	 SHORT $LN183@LoadAttach
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 129  : 		SAttachingEffectData() {}

  003ee	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingEffectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  003f4	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003fb	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00402	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00406	eb 02		 jmp	 SHORT $LN184@LoadAttach
$LN183@LoadAttach:
  00408	33 f6		 xor	 esi, esi
$LN184@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0040a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  0040f	89 75 d4	 mov	 DWORD PTR _pkNewData$6[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00412	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+12
  00418	74 21		 je	 SHORT $LN202@LoadAttach

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0041a	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 346  : 				rAttachingData.pEffectData = g_EffectDataPool.Alloc();

  0041c	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  0041f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00426	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 347  : 				if (!NRaceData::LoadEffectData(rTextFileLoader, rAttachingData.pEffectData))

  0042c	56		 push	 esi
  0042d	57		 push	 edi
  0042e	89 70 28	 mov	 DWORD PTR [eax+40], esi
  00431	e8 00 00 00 00	 call	 ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData

; 348  : 					return false;
; 349  : 				break;

  00436	e9 d3 00 00 00	 jmp	 $LN257@LoadAttach
$LN202@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0043b	8d 4d d4	 lea	 ecx, DWORD PTR _pkNewData$6[ebp]
  0043e	51		 push	 ecx
  0043f	50		 push	 eax
  00440	b9 04 00 00 00	 mov	 ecx, OFFSET ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+4
  00445	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 346  : 				rAttachingData.pEffectData = g_EffectDataPool.Alloc();

  0044a	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0044d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 347  : 				if (!NRaceData::LoadEffectData(rTextFileLoader, rAttachingData.pEffectData))

  00453	56		 push	 esi
  00454	57		 push	 edi
  00455	89 70 28	 mov	 DWORD PTR [eax+40], esi
  00458	e8 00 00 00 00	 call	 ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData

; 348  : 					return false;
; 349  : 				break;

  0045d	e9 ac 00 00 00	 jmp	 $LN257@LoadAttach
$LN181@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00462	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00465	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  00468	a3 14 00 00 00	 mov	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+20, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 346  : 				rAttachingData.pEffectData = g_EffectDataPool.Alloc();

  0046d	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]

; 347  : 				if (!NRaceData::LoadEffectData(rTextFileLoader, rAttachingData.pEffectData))

  00470	56		 push	 esi
  00471	57		 push	 edi
  00472	89 70 28	 mov	 DWORD PTR [eax+40], esi
  00475	e8 00 00 00 00	 call	 ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData

; 348  : 					return false;
; 349  : 				break;

  0047a	e9 8f 00 00 00	 jmp	 $LN257@LoadAttach
$LN13@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  0047f	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+20
  00484	39 05 10 00 00
	00		 cmp	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+16, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  0048a	75 6a		 jne	 SHORT $LN154@LoadAttach

; 65   : 				T* pkNewData=new T;

  0048c	6a 14		 push	 20			; 00000014H
  0048e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00493	8b f0		 mov	 esi, eax
  00495	83 c4 04	 add	 esp, 4
  00498	89 75 d4	 mov	 DWORD PTR $T7[ebp], esi
  0049b	85 f6		 test	 esi, esi
  0049d	74 1d		 je	 SHORT $LN156@LoadAttach
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 119  : 		SCollisionData() {}

  0049f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  004a5	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  004ac	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  004b3	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  004ba	eb 02		 jmp	 SHORT $LN157@LoadAttach
$LN156@LoadAttach:
  004bc	33 f6		 xor	 esi, esi
$LN157@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  004be	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  004c3	89 75 d4	 mov	 DWORD PTR _pkNewData$8[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  004c6	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+12
  004cc	74 11		 je	 SHORT $LN172@LoadAttach

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  004ce	89 30		 mov	 DWORD PTR [eax], esi

; 690  :         ++_Mylast;

  004d0	83 05 08 00 00
	00 04		 add	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  004d7	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+32

; 68   : 				return pkNewData;

  004dd	eb 22		 jmp	 SHORT $LN153@LoadAttach
$LN172@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  004df	8d 4d d4	 lea	 ecx, DWORD PTR _pkNewData$8[ebp]
  004e2	51		 push	 ecx
  004e3	50		 push	 eax
  004e4	b9 04 00 00 00	 mov	 ecx, OFFSET ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+4
  004e9	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  004ee	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+32

; 68   : 				return pkNewData;

  004f4	eb 0b		 jmp	 SHORT $LN153@LoadAttach
$LN154@LoadAttach:

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  004f6	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  004f9	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  004fc	a3 14 00 00 00	 mov	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+20, eax
$LN153@LoadAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 341  : 				rAttachingData.pCollisionData = g_CollisionDataPool.Alloc();

  00501	8b 45 cc	 mov	 eax, DWORD PTR _rAttachingData$1$[ebp]

; 342  : 				if (!NRaceData::LoadCollisionData(rTextFileLoader, rAttachingData.pCollisionData))

  00504	56		 push	 esi
  00505	57		 push	 edi
  00506	89 70 24	 mov	 DWORD PTR [eax+36], esi
  00509	e8 00 00 00 00	 call	 ?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ; NRaceData::LoadCollisionData
$LN257@LoadAttach:

; 353  : 					return false;
; 354  : 				break;
; 355  : 		}
; 356  : 
; 357  : 		rTextFileLoader.SetParentNode();

  0050e	83 c4 08	 add	 esp, 8
  00511	85 c0		 test	 eax, eax
  00513	74 25		 je	 SHORT $LN249@LoadAttach
$LN14@LoadAttach:
  00515	8b cf		 mov	 ecx, edi
  00517	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  0051c	8b 5d bc	 mov	 ebx, DWORD PTR _i$1$[ebp]
  0051f	83 45 c0 30	 add	 DWORD PTR tv1823[ebp], 48 ; 00000030H
  00523	43		 inc	 ebx
  00524	8b 45 d0	 mov	 eax, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  00527	89 5d bc	 mov	 DWORD PTR _i$1$[ebp], ebx
  0052a	3b 5d c8	 cmp	 ebx, DWORD PTR _dwDataCount$[ebp]
  0052d	0f 82 d4 fb ff
	ff		 jb	 $LL4@LoadAttach
$LN3@LoadAttach:

; 358  : 	}
; 359  : 	return TRUE;

  00533	b8 01 00 00 00	 mov	 eax, 1
  00538	eb 02		 jmp	 SHORT $LN1@LoadAttach
$LN249@LoadAttach:

; 343  : 					return false;

  0053a	33 c0		 xor	 eax, eax
$LN1@LoadAttach:

; 360  : }

  0053c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0053f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00546	59		 pop	 ecx
  00547	5f		 pop	 edi
  00548	5e		 pop	 esi
  00549	5b		 pop	 ebx
  0054a	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0054d	33 cd		 xor	 ecx, ebp
  0054f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00554	8b e5		 mov	 esp, ebp
  00556	5d		 pop	 ebp
  00557	c3		 ret	 0
$LN241@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00558	e8 00 00 00 00	 call	 ?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange
$LN254@LoadAttach:
  0055d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$5:
  00028	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ENDP ; NRaceData::LoadAttachingData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
_TEXT	SEGMENT
_dwAttachingDataCount$1$ = -16				; size = 4
tv288 = -12						; size = 4
tv286 = -8						; size = 4
_i$1$ = -4						; size = 4
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rAttachingDataVector$ = 16				; size = 4
?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z PROC ; NRaceData::SaveAttachingData, COMDAT

; 272  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 45 10	 mov	 eax, DWORD PTR _c_rAttachingDataVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 272  : {

  00009	53		 push	 ebx

; 275  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR _iTabCount$[ebp]
  0000d	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00011	2b 08		 sub	 ecx, DWORD PTR [eax]
  00013	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 275  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  00018	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001b	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 272  : {

  0001d	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001e	c1 fa 03	 sar	 edx, 3
  00021	8b fa		 mov	 edi, edx
  00023	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00026	03 fa		 add	 edi, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 275  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  00028	57		 push	 edi
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@
  0002e	53		 push	 ebx
  0002f	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00030	89 7d f0	 mov	 DWORD PTR _dwAttachingDataCount$1$[ebp], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 275  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  00033	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 276  : 	PrintfTabs(File, iTabCount, "\n");

  00038	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0003d	53		 push	 ebx
  0003e	56		 push	 esi
  0003f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 277  : 
; 278  : 	for (DWORD i = 0; i < dwAttachingDataCount; ++i)

  00044	33 c0		 xor	 eax, eax
  00046	83 c4 1c	 add	 esp, 28			; 0000001cH
  00049	89 45 fc	 mov	 DWORD PTR _i$1$[ebp], eax
  0004c	85 ff		 test	 edi, edi
  0004e	0f 84 17 01 00
	00		 je	 $LN3@SaveAttach
  00054	8d 57 ff	 lea	 edx, DWORD PTR [edi-1]
  00057	8b cb		 mov	 ecx, ebx
  00059	89 55 f4	 mov	 DWORD PTR tv288[ebp], edx
  0005c	33 d2		 xor	 edx, edx
  0005e	89 55 f8	 mov	 DWORD PTR tv286[ebp], edx
  00061	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
$LL4@SaveAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00064	8b 7d 10	 mov	 edi, DWORD PTR _c_rAttachingDataVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 282  : 		PrintfTabs(File, iTabCount, "Group AttachingData%02d\n", i);

  00067	50		 push	 eax
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@
  0006d	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  0006e	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 282  : 		PrintfTabs(File, iTabCount, "Group AttachingData%02d\n", i);

  00070	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00071	03 fa		 add	 edi, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 282  : 		PrintfTabs(File, iTabCount, "Group AttachingData%02d\n", i);

  00073	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 283  : 		PrintfTabs(File, iTabCount, "{\n", i);

  00078	ff 75 fc	 push	 DWORD PTR _i$1$[ebp]
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  00080	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 284  : 
; 285  : 		PrintfTabs(File, iTabCount+1, "AttachingDataType    %d\n", c_rAttachingData.dwType);

  00089	ff 37		 push	 DWORD PTR [edi]
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@
  00090	53		 push	 ebx
  00091	56		 push	 esi
  00092	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 286  : 		PrintfTabs(File, iTabCount+1, "\n", i);

  00097	ff 75 fc	 push	 DWORD PTR _i$1$[ebp]
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0009f	53		 push	 ebx
  000a0	56		 push	 esi
  000a1	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000a6	83 c4 40	 add	 esp, 64			; 00000040H

; 287  : 
; 288  : 		PrintfTabs(File, iTabCount+1, "isAttaching          %d\n", c_rAttachingData.isAttaching);

  000a9	ff 77 04	 push	 DWORD PTR [edi+4]
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  000b1	53		 push	 ebx
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 289  : 		PrintfTabs(File, iTabCount+1, "AttachingModelIndex  %d\n", c_rAttachingData.dwAttachingModelIndex);

  000b8	ff 77 08	 push	 DWORD PTR [edi+8]
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@
  000c0	53		 push	 ebx
  000c1	56		 push	 esi
  000c2	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  000c7	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 289  : 		PrintfTabs(File, iTabCount+1, "AttachingModelIndex  %d\n", c_rAttachingData.dwAttachingModelIndex);

  000ca	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000cd	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000d1	72 02		 jb	 SHORT $LN19@SaveAttach

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000d3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN19@SaveAttach:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 290  : 		PrintfTabs(File, iTabCount+1, "AttachingBoneName    \"%s\"\n", c_rAttachingData.strAttachingBoneName.c_str());

  000d5	50		 push	 eax
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
  000db	53		 push	 ebx
  000dc	56		 push	 esi
  000dd	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 291  : 		PrintfTabs(File, iTabCount+1, "\n");

  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000e7	53		 push	 ebx
  000e8	56		 push	 esi
  000e9	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 292  : 
; 293  : 		switch (c_rAttachingData.dwType)

  000ee	8b 07		 mov	 eax, DWORD PTR [edi]
  000f0	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f3	83 e8 01	 sub	 eax, 1
  000f6	74 22		 je	 SHORT $LN7@SaveAttach
  000f8	83 e8 01	 sub	 eax, 1
  000fb	74 11		 je	 SHORT $LN8@SaveAttach
  000fd	83 e8 01	 sub	 eax, 1
  00100	75 25		 jne	 SHORT $LN5@SaveAttach

; 301  : 			case NRaceData::ATTACHING_DATA_TYPE_OBJECT:
; 302  : 				NRaceData::SaveObjectData(File, iTabCount+1, *c_rAttachingData.pObjectData);

  00102	ff 77 2c	 push	 DWORD PTR [edi+44]
  00105	53		 push	 ebx
  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z ; NRaceData::SaveObjectData
  0010c	eb 16		 jmp	 SHORT $LN27@SaveAttach
$LN8@SaveAttach:

; 297  : 				break;
; 298  : 			case NRaceData::ATTACHING_DATA_TYPE_EFFECT:
; 299  : 				NRaceData::SaveEffectData(File, iTabCount+1, *c_rAttachingData.pEffectData);

  0010e	ff 77 28	 push	 DWORD PTR [edi+40]
  00111	53		 push	 ebx
  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 ?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z ; NRaceData::SaveEffectData

; 300  : 				break;

  00118	eb 0a		 jmp	 SHORT $LN27@SaveAttach
$LN7@SaveAttach:

; 294  : 		{
; 295  : 			case NRaceData::ATTACHING_DATA_TYPE_COLLISION_DATA:
; 296  : 				NRaceData::SaveCollisionData(File, iTabCount+1, *c_rAttachingData.pCollisionData);

  0011a	ff 77 24	 push	 DWORD PTR [edi+36]
  0011d	53		 push	 ebx
  0011e	56		 push	 esi
  0011f	e8 00 00 00 00	 call	 ?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ; NRaceData::SaveCollisionData
$LN27@SaveAttach:

; 303  : 				break;
; 304  : 		}
; 305  : 
; 306  : 		PrintfTabs(File, iTabCount, "}\n");

  00124	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@SaveAttach:
  00127	8b 7d 0c	 mov	 edi, DWORD PTR _iTabCount$[ebp]
  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  0012f	57		 push	 edi
  00130	56		 push	 esi
  00131	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 307  : 
; 308  : 		if (i != dwAttachingDataCount-1)

  00136	8b 45 fc	 mov	 eax, DWORD PTR _i$1$[ebp]
  00139	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013c	3b 45 f4	 cmp	 eax, DWORD PTR tv288[ebp]
  0013f	74 12		 je	 SHORT $LN2@SaveAttach

; 309  : 			PrintfTabs(File, iTabCount, "\n");

  00141	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00146	57		 push	 edi
  00147	56		 push	 esi
  00148	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0014d	8b 45 fc	 mov	 eax, DWORD PTR _i$1$[ebp]
  00150	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SaveAttach:

; 277  : 
; 278  : 	for (DWORD i = 0; i < dwAttachingDataCount; ++i)

  00153	8b 55 f8	 mov	 edx, DWORD PTR tv286[ebp]
  00156	40		 inc	 eax
  00157	83 c2 30	 add	 edx, 48			; 00000030H
  0015a	89 45 fc	 mov	 DWORD PTR _i$1$[ebp], eax
  0015d	8b cf		 mov	 ecx, edi
  0015f	89 55 f8	 mov	 DWORD PTR tv286[ebp], edx
  00162	3b 45 f0	 cmp	 eax, DWORD PTR _dwAttachingDataCount$1$[ebp]
  00165	0f 82 f9 fe ff
	ff		 jb	 $LL4@SaveAttach
$LN3@SaveAttach:
  0016b	5f		 pop	 edi

; 310  : 	}
; 311  : }

  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c3		 ret	 0
?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ENDP ; NRaceData::SaveAttachingData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pObjectData$ = 12					; size = 4
?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z PROC ; NRaceData::LoadObjectData, COMDAT

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 187  : {

  00031	8b 75 0c	 mov	 esi, DWORD PTR _pObjectData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EJILMNLC@objectscriptname@

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00039	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0

; 2339 :         assign(_Ptr);

  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 188  : 	if (!rTextFileLoader.GetTokenString("objectscriptname",&pObjectData->strFileName))

  00050	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00053	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005a	50		 push	 eax
  0005b	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  0005e	8b cf		 mov	 ecx, edi
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00066	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00068	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 188  : 	if (!rTextFileLoader.GetTokenString("objectscriptname",&pObjectData->strFileName))

  0006b	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006e	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00071	72 0d		 jb	 SHORT $LN17@LoadObject

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00073	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00074	50		 push	 eax
  00075	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  00078	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0007d	83 c4 08	 add	 esp, 8
$LN17@LoadObject:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 188  : 	if (!rTextFileLoader.GetTokenString("objectscriptname",&pObjectData->strFileName))

  00080	33 c0		 xor	 eax, eax
  00082	84 db		 test	 bl, bl
  00084	0f 94 c0	 sete	 al

; 189  : 		return false;
; 190  : 
; 191  : 	return true;
; 192  : }

  00087	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00091	59		 pop	 ecx
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00098	33 cd		 xor	 ecx, ebp
  0009a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ENDP ; NRaceData::LoadObjectData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
_TEXT	SEGMENT
$T2 = -116						; size = 12
$T3 = -116						; size = 12
_rTextFileLoader$GSCopy$1$ = -104			; size = 4
tv628 = -100						; size = 4
_pEffectData$GSCopy$1$ = -96				; size = 4
tv629 = -89						; size = 1
tv627 = -89						; size = 1
tv625 = -89						; size = 1
$T4 = -88						; size = 24
tv631 = -64						; size = 16
$T5 = -64						; size = 24
$T6 = -64						; size = 24
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pEffectData$ = 12					; size = 4
?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z PROC ; NRaceData::LoadEffectData, COMDAT

; 163  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	83 ec 68	 sub	 esp, 104		; 00000068H
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002d	33 c5		 xor	 eax, ebp
  0002f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00032	56		 push	 esi
  00033	57		 push	 edi
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	8b 7b 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00041	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 163  : {

  00044	8b 73 0c	 mov	 esi, DWORD PTR _pEffectData$[ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OKGDPHII@effectscriptname@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 163  : {

  0004c	89 7d 98	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], edi
  0004f	89 75 a0	 mov	 DWORD PTR _pEffectData$GSCopy$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00052	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00059	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00060	c6 45 c0 00	 mov	 BYTE PTR $T6[ebp], 0

; 2339 :         assign(_Ptr);

  00064	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 164  : 	if (!rTextFileLoader.GetTokenString("effectscriptname",&pEffectData->strFileName))

  00069	83 c6 04	 add	 esi, 4
  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00073	56		 push	 esi
  00074	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  00077	8b cf		 mov	 ecx, edi
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0007f	85 c0		 test	 eax, eax
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00088	8b 45 d4	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 164  : 	if (!rTextFileLoader.GetTokenString("effectscriptname",&pEffectData->strFileName))

  0008b	0f 94 45 a7	 sete	 BYTE PTR tv629[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0008f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00092	72 0d		 jb	 SHORT $LN21@LoadEffect

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00094	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00095	50		 push	 eax
  00096	ff 75 c0	 push	 DWORD PTR $T6[ebp]
  00099	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0009e	83 c4 08	 add	 esp, 8
$LN21@LoadEffect:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 164  : 	if (!rTextFileLoader.GetTokenString("effectscriptname",&pEffectData->strFileName))

  000a1	80 7d a7 00	 cmp	 BYTE PTR tv629[ebp], 0
  000a5	74 07		 je	 SHORT $LN2@LoadEffect

; 165  : 		return false;

  000a7	33 c0		 xor	 eax, eax
  000a9	e9 2c 01 00 00	 jmp	 $LN1@LoadEffect
$LN2@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PMGDNJPL@effectposition@
  000b3	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000b6	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000bd	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000c4	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0

; 2339 :         assign(_Ptr);

  000c8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 167  : 	if (!rTextFileLoader.GetTokenPosition("effectposition",&pEffectData->v3Position))

  000cd	8b 45 a0	 mov	 eax, DWORD PTR _pEffectData$GSCopy$1$[ebp]
  000d0	8b cf		 mov	 ecx, edi
  000d2	83 c0 1c	 add	 eax, 28			; 0000001cH
  000d5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000dc	50		 push	 eax
  000dd	89 45 9c	 mov	 DWORD PTR tv628[ebp], eax
  000e0	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  000e9	85 c0		 test	 eax, eax
  000eb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f2	8b 45 d4	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 167  : 	if (!rTextFileLoader.GetTokenPosition("effectposition",&pEffectData->v3Position))

  000f5	0f 94 45 a7	 sete	 BYTE PTR tv627[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f9	83 f8 10	 cmp	 eax, 16			; 00000010H
  000fc	72 0d		 jb	 SHORT $LN39@LoadEffect

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000fe	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ff	50		 push	 eax
  00100	ff 75 c0	 push	 DWORD PTR $T5[ebp]
  00103	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00108	83 c4 08	 add	 esp, 8
$LN39@LoadEffect:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 167  : 	if (!rTextFileLoader.GetTokenPosition("effectposition",&pEffectData->v3Position))

  0010b	80 7d a7 00	 cmp	 BYTE PTR tv627[ebp], 0
  0010f	0f 57 c9	 xorps	 xmm1, xmm1
  00112	0f 29 4d c0	 movaps	 XMMWORD PTR tv631[ebp], xmm1
  00116	74 1a		 je	 SHORT $LN3@LoadEffect

; 169  : 		pEffectData->v3Position = D3DXVECTOR3(0.0f,0.0f,0.0f);

  00118	8b 4d 9c	 mov	 ecx, DWORD PTR tv628[ebp]
  0011b	0f 57 c0	 xorps	 xmm0, xmm0
  0011e	0f 14 c1	 unpcklps xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00121	c7 45 94 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 169  : 		pEffectData->v3Position = D3DXVECTOR3(0.0f,0.0f,0.0f);

  00128	8b 45 94	 mov	 eax, DWORD PTR $T3[ebp+8]
  0012b	66 0f d6 01	 movq	 QWORD PTR [ecx], xmm0
  0012f	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN3@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLGBENJO@effectrotation@
  00137	8d 4d a8	 lea	 ecx, DWORD PTR $T4[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0013a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00141	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00148	c6 45 a8 00	 mov	 BYTE PTR $T4[ebp], 0

; 2339 :         assign(_Ptr);

  0014c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 172  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  00151	8b 7d a0	 mov	 edi, DWORD PTR _pEffectData$GSCopy$1$[ebp]
  00154	8d 45 a8	 lea	 eax, DWORD PTR $T4[ebp]
  00157	8b 4d 98	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0015a	83 c7 28	 add	 edi, 40			; 00000028H
  0015d	57		 push	 edi
  0015e	50		 push	 eax
  0015f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00166	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  0016b	85 c0		 test	 eax, eax
  0016d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00174	8b 45 bc	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 172  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  00177	0f 94 45 a7	 sete	 BYTE PTR tv625[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0017b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0017e	72 0d		 jb	 SHORT $LN59@LoadEffect

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00180	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00181	50		 push	 eax
  00182	ff 75 a8	 push	 DWORD PTR $T4[ebp]
  00185	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0018a	83 c4 08	 add	 esp, 8
$LN59@LoadEffect:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 172  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  0018d	80 7d a7 00	 cmp	 BYTE PTR tv625[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00191	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00198	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0019f	c6 45 a8 00	 mov	 BYTE PTR $T4[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 172  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  001a3	74 18		 je	 SHORT $LN4@LoadEffect

; 175  : 		pEffectData->v3Rotation = D3DXVECTOR3(0.0f,0.0f,0.0f);

  001a5	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR tv631[ebp]
  001a9	0f 14 c0	 unpcklps xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001ac	c7 45 94 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 175  : 		pEffectData->v3Rotation = D3DXVECTOR3(0.0f,0.0f,0.0f);

  001b3	8b 45 94	 mov	 eax, DWORD PTR $T2[ebp+8]
  001b6	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  001ba	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN4@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001bd	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  001c1	72 02		 jb	 SHORT $LN70@LoadEffect

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  001c3	8b 36		 mov	 esi, DWORD PTR [esi]
$LN70@LoadEffect:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 180  : 	CEffectManager::Instance().RegisterEffect(pEffectData->strFileName.c_str());

  001c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  001cb	6a 00		 push	 0
  001cd	6a 00		 push	 0
  001cf	56		 push	 esi
  001d0	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect

; 181  : 	/*) return false;*/
; 182  : 
; 183  : 	return true;

  001d5	b8 01 00 00 00	 mov	 eax, 1
$LN1@LoadEffect:

; 184  : }

  001da	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001dd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e4	59		 pop	 ecx
  001e5	5f		 pop	 edi
  001e6	5e		 pop	 esi
  001e7	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ea	33 cd		 xor	 ecx, ebp
  001ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	8b e3		 mov	 esp, ebx
  001f6	5b		 pop	 ebx
  001f7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$2:
  00010	8d 4d a8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ENDP ; NRaceData::LoadEffectData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
_TEXT	SEGMENT
_r$1$ = -80						; size = 4
_dwSphereDataCount$ = -76				; size = 4
__My_data$1$ = -72					; size = 4
tv982 = -65						; size = 1
tv981 = -65						; size = 1
tv980 = -65						; size = 1
$T2 = -65						; size = 1
$T3 = -64						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pCollisionData$ = 12					; size = 4
?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z PROC ; NRaceData::LoadCollisionData, COMDAT

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 121  : {

  00031	8b 75 0c	 mov	 esi, DWORD PTR _pCollisionData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LCILGBGA@collisiontype@

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00039	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 45 d8 00	 mov	 BYTE PTR $T7[ebp], 0

; 2339 :         assign(_Ptr);

  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 122  : 	if (!rTextFileLoader.GetTokenInteger("collisiontype", &pCollisionData->iCollisionType))

  00050	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00053	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005a	50		 push	 eax
  0005b	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  0005e	8b cf		 mov	 ecx, edi
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00066	85 c0		 test	 eax, eax
  00068	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006f	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 122  : 	if (!rTextFileLoader.GetTokenInteger("collisiontype", &pCollisionData->iCollisionType))

  00072	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00075	83 f8 10	 cmp	 eax, 16			; 00000010H
  00078	72 0d		 jb	 SHORT $LN28@LoadCollis

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007b	50		 push	 eax
  0007c	ff 75 d8	 push	 DWORD PTR $T7[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00084	83 c4 08	 add	 esp, 8
$LN28@LoadCollis:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 122  : 	if (!rTextFileLoader.GetTokenInteger("collisiontype", &pCollisionData->iCollisionType))

  00087	84 db		 test	 bl, bl
  00089	0f 85 1b 02 00
	00		 jne	 $LN120@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PACKMKGG@spheredatacount@
  00094	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00097	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a5	88 5d d8	 mov	 BYTE PTR $T6[ebp], bl

; 2339 :         assign(_Ptr);

  000a8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 126  : 	if (!rTextFileLoader.GetTokenDoubleWord("spheredatacount", &dwSphereDataCount))

  000ad	8d 45 b4	 lea	 eax, DWORD PTR _dwSphereDataCount$[ebp]
  000b0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000b7	50		 push	 eax
  000b8	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  000bb	8b cf		 mov	 ecx, edi
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  000c3	85 c0		 test	 eax, eax
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cc	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 126  : 	if (!rTextFileLoader.GetTokenDoubleWord("spheredatacount", &dwSphereDataCount))

  000cf	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000d2	83 f8 10	 cmp	 eax, 16			; 00000010H
  000d5	72 0d		 jb	 SHORT $LN46@LoadCollis

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000d7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d8	50		 push	 eax
  000d9	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  000dc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e1	83 c4 08	 add	 esp, 8
$LN46@LoadCollis:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 126  : 	if (!rTextFileLoader.GetTokenDoubleWord("spheredatacount", &dwSphereDataCount))

  000e4	84 db		 test	 bl, bl
  000e6	0f 85 be 01 00
	00		 jne	 $LN120@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  000ec	8b 5d b4	 mov	 ebx, DWORD PTR _dwSphereDataCount$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 129  : 	pCollisionData->SphereDataVector.clear();

  000ef	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000f2	8b 10		 mov	 edx, DWORD PTR [eax]
  000f4	89 45 b8	 mov	 DWORD PTR __My_data$1$[ebp], eax
  000f7	89 50 04	 mov	 DWORD PTR [eax+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  000fa	85 db		 test	 ebx, ebx
  000fc	74 43		 je	 SHORT $LN56@LoadCollis

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000fe	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00101	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00106	2b ca		 sub	 ecx, edx
  00108	f7 e9		 imul	 ecx
  0010a	c1 fa 03	 sar	 edx, 3
  0010d	8b c2		 mov	 eax, edx
  0010f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00112	03 c2		 add	 eax, edx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00114	3b d8		 cmp	 ebx, eax
  00116	76 12		 jbe	 SHORT $LN57@LoadCollis

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00118	8b 4d b8	 mov	 ecx, DWORD PTR __My_data$1$[ebp]
  0011b	8d 45 bf	 lea	 eax, DWORD PTR $T2[ebp]
  0011e	50		 push	 eax
  0011f	53		 push	 ebx
  00120	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  00125	8b 45 b8	 mov	 eax, DWORD PTR __My_data$1$[ebp]
  00128	eb 14		 jmp	 SHORT $LN125@LoadCollis
$LN57@LoadCollis:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0012a	8b 75 b8	 mov	 esi, DWORD PTR __My_data$1$[ebp]
  0012d	56		 push	 esi
  0012e	53		 push	 ebx
  0012f	ff 36		 push	 DWORD PTR [esi]
  00131	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAPAVCSphereCollisionInstance@@PAV1@IAAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CSphereCollisionInstance> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00136	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00139	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013c	8b c6		 mov	 eax, esi
$LN125@LoadCollis:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 131  : 	for (DWORD i = 0; i < dwSphereDataCount; ++i)

  0013e	8b 5d b4	 mov	 ebx, DWORD PTR _dwSphereDataCount$[ebp]
$LN56@LoadCollis:
  00141	33 f6		 xor	 esi, esi
  00143	85 db		 test	 ebx, ebx
  00145	0f 84 58 01 00
	00		 je	 $LN3@LoadCollis
  0014b	33 db		 xor	 ebx, ebx
  0014d	0f 1f 00	 npad	 3
$LL4@LoadCollis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00150	8b 08		 mov	 ecx, DWORD PTR [eax]
  00152	03 cb		 add	 ecx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 133  : 		TSphereData & r = pCollisionData->SphereDataVector[i].GetAttribute();

  00154	e8 00 00 00 00	 call	 ?GetAttribute@CSphereCollisionInstance@@QAEAAUSSphereData@@XZ ; CSphereCollisionInstance::GetAttribute
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JJLJPGHA@spheredata@
  0015e	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 133  : 		TSphereData & r = pCollisionData->SphereDataVector[i].GetAttribute();

  00161	89 45 b0	 mov	 DWORD PTR _r$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00164	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0016b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00172	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2339 :         assign(_Ptr);

  00176	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 135  : 		if (!rTextFileLoader.SetChildNode("spheredata", i))

  0017b	56		 push	 esi
  0017c	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  0017f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00186	50		 push	 eax
  00187	8b cf		 mov	 ecx, edi
  00189	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
  0018e	85 c0		 test	 eax, eax
  00190	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00197	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 135  : 		if (!rTextFileLoader.SetChildNode("spheredata", i))

  0019a	0f 94 45 bf	 sete	 BYTE PTR tv982[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019e	83 f8 10	 cmp	 eax, 16			; 00000010H
  001a1	72 0d		 jb	 SHORT $LN75@LoadCollis

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001a3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a4	50		 push	 eax
  001a5	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  001a8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001ad	83 c4 08	 add	 esp, 8
$LN75@LoadCollis:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 135  : 		if (!rTextFileLoader.SetChildNode("spheredata", i))

  001b0	80 7d bf 00	 cmp	 BYTE PTR tv982[ebp], 0
  001b4	0f 85 f0 00 00
	00		 jne	 $LN120@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_06KGHINEPG@radius@
  001bf	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001c2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001c9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001d0	c6 45 d8 00	 mov	 BYTE PTR $T4[ebp], 0

; 2339 :         assign(_Ptr);

  001d4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 138  : 		if (!rTextFileLoader.GetTokenFloat("radius", &r.fRadius))

  001d9	8b 45 b0	 mov	 eax, DWORD PTR _r$1$[ebp]
  001dc	8b cf		 mov	 ecx, edi
  001de	83 c0 0c	 add	 eax, 12			; 0000000cH
  001e1	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001e8	50		 push	 eax
  001e9	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  001f2	85 c0		 test	 eax, eax
  001f4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001fb	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 138  : 		if (!rTextFileLoader.GetTokenFloat("radius", &r.fRadius))

  001fe	0f 94 45 bf	 sete	 BYTE PTR tv981[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00202	83 f8 10	 cmp	 eax, 16			; 00000010H
  00205	72 0d		 jb	 SHORT $LN93@LoadCollis

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00207	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00208	50		 push	 eax
  00209	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  0020c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00211	83 c4 08	 add	 esp, 8
$LN93@LoadCollis:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 138  : 		if (!rTextFileLoader.GetTokenFloat("radius", &r.fRadius))

  00214	80 7d bf 00	 cmp	 BYTE PTR tv981[ebp], 0
  00218	0f 85 8c 00 00
	00		 jne	 $LN120@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_08OAGMDKAF@position@
  00223	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00226	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0022d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00234	c6 45 c0 00	 mov	 BYTE PTR $T3[ebp], 0

; 2339 :         assign(_Ptr);

  00238	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  0023d	ff 75 b0	 push	 DWORD PTR _r$1$[ebp]
  00240	8d 45 c0	 lea	 eax, DWORD PTR $T3[ebp]
  00243	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0024a	50		 push	 eax
  0024b	8b cf		 mov	 ecx, edi
  0024d	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  00252	85 c0		 test	 eax, eax
  00254	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0025b	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  0025e	0f 94 45 bf	 sete	 BYTE PTR tv980[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00262	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00265	72 0d		 jb	 SHORT $LN111@LoadCollis

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00267	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00268	50		 push	 eax
  00269	ff 75 c0	 push	 DWORD PTR $T3[ebp]
  0026c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00271	83 c4 08	 add	 esp, 8
$LN111@LoadCollis:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  00274	80 7d bf 00	 cmp	 BYTE PTR tv980[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00278	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0027f	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00286	c6 45 c0 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  0028a	75 1e		 jne	 SHORT $LN120@LoadCollis

; 142  : 
; 143  : 		rTextFileLoader.SetParentNode();

  0028c	8b cf		 mov	 ecx, edi
  0028e	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00293	8b 45 b8	 mov	 eax, DWORD PTR __My_data$1$[ebp]
  00296	46		 inc	 esi
  00297	83 c3 14	 add	 ebx, 20			; 00000014H
  0029a	3b 75 b4	 cmp	 esi, DWORD PTR _dwSphereDataCount$[ebp]
  0029d	0f 82 ad fe ff
	ff		 jb	 $LL4@LoadCollis
$LN3@LoadCollis:

; 144  : 	}
; 145  : 
; 146  : 	return true;

  002a3	b8 01 00 00 00	 mov	 eax, 1
  002a8	eb 02		 jmp	 SHORT $LN1@LoadCollis
$LN120@LoadCollis:

; 141  : 			return false;

  002aa	33 c0		 xor	 eax, eax
$LN1@LoadCollis:

; 147  : }

  002ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002b6	59		 pop	 ecx
  002b7	5f		 pop	 edi
  002b8	5e		 pop	 esi
  002b9	5b		 pop	 ebx
  002ba	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bd	33 cd		 xor	 ecx, ebp
  002bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$4:
  00020	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00028	cc		 int	 3
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
__ehhandler$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z:
  0002d	90		 npad	 1
  0002e	90		 npad	 1
  0002f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00033	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00036	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ENDP ; NRaceData::LoadCollisionData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
_TEXT	SEGMENT
_pData$GSCopy$1$ = -72					; size = 4
_dwHitDataCount$ = -68					; size = 4
tv1058 = -61						; size = 1
tv1057 = -61						; size = 1
tv1055 = -61						; size = 1
$T2 = -60						; size = 44
$T3 = -60						; size = 44
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pData$ = 12						; size = 4
?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z PROC ; NRaceData::LoadMotionAttackData, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 0c	 mov	 edi, DWORD PTR _pData$[ebp]
  0002e	8b 5d 08	 mov	 ebx, DWORD PTR _rTextFileLoader$[ebp]

; 82   : 	if (!LoadAttackData(rTextFileLoader, pData))

  00031	57		 push	 edi
  00032	53		 push	 ebx
  00033	89 7d b8	 mov	 DWORD PTR _pData$GSCopy$1$[ebp], edi
  00036	e8 00 00 00 00	 call	 ?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ; NRaceData::LoadAttackData
  0003b	83 c4 08	 add	 esp, 8
  0003e	85 c0		 test	 eax, eax
  00040	0f 84 ac 01 00
	00		 je	 $LN161@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FECBOPBF@motiontype@
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0004e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00055	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0005c	c6 45 d8 00	 mov	 BYTE PTR $T6[ebp], 0

; 2339 :         assign(_Ptr);

  00060	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 85   : 	if (!rTextFileLoader.GetTokenInteger("motiontype", &pData->iMotionType))

  00065	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  00068	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006f	56		 push	 esi
  00070	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  00073	8b cb		 mov	 ecx, ebx
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  0007b	85 c0		 test	 eax, eax
  0007d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 85   : 	if (!rTextFileLoader.GetTokenInteger("motiontype", &pData->iMotionType))

  00087	0f 94 45 c3	 sete	 BYTE PTR tv1058[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0008b	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008e	72 0d		 jb	 SHORT $LN31@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00090	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00091	50		 push	 eax
  00092	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  00095	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0009a	83 c4 08	 add	 esp, 8
$LN31@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 85   : 	if (!rTextFileLoader.GetTokenInteger("motiontype", &pData->iMotionType))

  0009d	80 7d c3 00	 cmp	 BYTE PTR tv1058[ebp], 0
  000a1	74 5e		 je	 SHORT $LN7@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EAOJEAGN@attackingtype@
  000a8	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000ab	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b2	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000b9	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2339 :         assign(_Ptr);

  000bd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 87   : 		if (!rTextFileLoader.GetTokenInteger("attackingtype", &pData->iMotionType))

  000c2	56		 push	 esi
  000c3	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  000c6	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000cd	50		 push	 eax
  000ce	8b cb		 mov	 ecx, ebx
  000d0	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  000d5	85 c0		 test	 eax, eax
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000de	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 87   : 		if (!rTextFileLoader.GetTokenInteger("attackingtype", &pData->iMotionType))

  000e1	0f 94 45 c3	 sete	 BYTE PTR tv1057[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000e5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e8	72 0d		 jb	 SHORT $LN49@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ea	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	50		 push	 eax
  000ec	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  000ef	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000f4	83 c4 08	 add	 esp, 8
$LN49@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 87   : 		if (!rTextFileLoader.GetTokenInteger("attackingtype", &pData->iMotionType))

  000f7	80 7d c3 00	 cmp	 BYTE PTR tv1057[ebp], 0
  000fb	0f 85 f1 00 00
	00		 jne	 $LN161@LoadMotion
$LN7@LoadMotion:

; 88   : 			return FALSE;
; 89   : 	}
; 90   : 
; 91   : 	pData->HitDataContainer.clear();

  00101	8d 77 1c	 lea	 esi, DWORD PTR [edi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00104	56		 push	 esi
  00105	ff 76 04	 push	 DWORD PTR [esi+4]
  00108	ff 36		 push	 DWORD PTR [esi]
  0010a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >

; 1390 :         _Mylast = _Myfirst;

  0010f	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00111	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00114	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00117	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0011a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00121	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00128	c6 45 d8 00	 mov	 BYTE PTR $T4[ebp], 0

; 2339 :         assign(_Ptr);

  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JENLJGO@hitdatacount@
  00131	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 94   : 	if (!rTextFileLoader.GetTokenDoubleWord("hitdatacount", &dwHitDataCount))

  00136	8d 45 bc	 lea	 eax, DWORD PTR _dwHitDataCount$[ebp]
  00139	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00140	50		 push	 eax
  00141	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00144	8b cb		 mov	 ecx, ebx
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  0014c	85 c0		 test	 eax, eax
  0014e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00155	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 94   : 	if (!rTextFileLoader.GetTokenDoubleWord("hitdatacount", &dwHitDataCount))

  00158	0f 94 45 c3	 sete	 BYTE PTR tv1055[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0015c	83 f8 10	 cmp	 eax, 16			; 00000010H
  0015f	72 0d		 jb	 SHORT $LN71@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00161	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00162	50		 push	 eax
  00163	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00166	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0016b	83 c4 08	 add	 esp, 8
$LN71@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 94   : 	if (!rTextFileLoader.GetTokenDoubleWord("hitdatacount", &dwHitDataCount))

  0016e	80 7d c3 00	 cmp	 BYTE PTR tv1055[ebp], 0
  00172	0f 84 98 00 00
	00		 je	 $LN8@LoadMotion

; 96   : 		pData->HitDataContainer.push_back(SHitData());

  00178	6a 2c		 push	 44			; 0000002cH
  0017a	8d 45 c4	 lea	 eax, DWORD PTR $T3[ebp]
  0017d	6a 00		 push	 0
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 _memset
  00185	83 c4 0c	 add	 esp, 12			; 0000000cH
  00188	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0018b	e8 00 00 00 00	 call	 ??0SHitData@NRaceData@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00190	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00193	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 96   : 		pData->HitDataContainer.push_back(SHitData());

  00194	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0019b	51		 push	 ecx
  0019c	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0019f	74 0f		 je	 SHORT $LN80@LoadMotion

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  001a1	56		 push	 esi
  001a2	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
  001a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  001aa	83 46 04 2c	 add	 DWORD PTR [esi+4], 44	; 0000002cH

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  001ae	eb 07		 jmp	 SHORT $LN79@LoadMotion
$LN80@LoadMotion:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  001b0	8b ce		 mov	 ecx, esi
  001b2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
$LN79@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1191 :         _Scary->_Erase_head(_Getal());

  001b7	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp+36]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 96   : 		pData->HitDataContainer.push_back(SHitData());

  001ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1191 :         _Scary->_Erase_head(_Getal());

  001c1	50		 push	 eax
  001c2	8b c8		 mov	 ecx, eax
  001c4	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001c9	8b 45 e4	 mov	 eax, DWORD PTR $T3[ebp+32]
  001cc	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001cf	72 0d		 jb	 SHORT $LN96@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001d1	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d2	50		 push	 eax
  001d3	ff 75 d0	 push	 DWORD PTR $T3[ebp+12]
  001d6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001db	83 c4 08	 add	 esp, 8
$LN96@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 98   : 		if (!rHitData.Load(rTextFileLoader))

  001de	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  001e1	53		 push	 ebx
  001e2	83 e9 2c	 sub	 ecx, 44			; 0000002cH
  001e5	e8 00 00 00 00	 call	 ?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ; NRaceData::SHitData::Load
  001ea	84 c0		 test	 al, al
  001ec	0f 85 da 00 00
	00		 jne	 $LN3@LoadMotion
$LN161@LoadMotion:

; 111  : 				return FALSE;

  001f2	33 c0		 xor	 eax, eax
$LN1@LoadMotion:

; 118  : }

  001f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fe	59		 pop	 ecx
  001ff	5f		 pop	 edi
  00200	5e		 pop	 esi
  00201	5b		 pop	 ebx
  00202	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00205	33 cd		 xor	 ecx, ebp
  00207	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020c	8b e5		 mov	 esp, ebp
  0020e	5d		 pop	 ebp
  0020f	c3		 ret	 0
$LN8@LoadMotion:

; 99   : 			return FALSE;
; 100  : 	}
; 101  : 	else
; 102  : 	{
; 103  : 		for (DWORD i = 0; i < dwHitDataCount; ++i)

  00210	33 ff		 xor	 edi, edi
  00212	39 7d bc	 cmp	 DWORD PTR _dwHitDataCount$[ebp], edi
  00215	0f 86 b1 00 00
	00		 jbe	 $LN3@LoadMotion
  0021b	0f 1f 44 00 00	 npad	 5
$LL4@LoadMotion:

; 104  : 		{
; 105  : 			if (!rTextFileLoader.SetChildNode(i))

  00220	57		 push	 edi
  00221	8b cb		 mov	 ecx, ebx
  00223	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHK@Z ; CTextFileLoader::SetChildNode
  00228	85 c0		 test	 eax, eax
  0022a	74 c6		 je	 SHORT $LN161@LoadMotion

; 108  : 			pData->HitDataContainer.push_back(SHitData());

  0022c	6a 2c		 push	 44			; 0000002cH
  0022e	8d 45 c4	 lea	 eax, DWORD PTR $T2[ebp]
  00231	6a 00		 push	 0
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 _memset
  00239	83 c4 0c	 add	 esp, 12			; 0000000cH
  0023c	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  0023f	e8 00 00 00 00	 call	 ??0SHitData@NRaceData@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00244	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00247	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 108  : 			pData->HitDataContainer.push_back(SHitData());

  00248	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0024f	51		 push	 ecx
  00250	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00253	74 0f		 je	 SHORT $LN121@LoadMotion

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00255	56		 push	 esi
  00256	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
  0025b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0025e	83 46 04 2c	 add	 DWORD PTR [esi+4], 44	; 0000002cH

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00262	eb 07		 jmp	 SHORT $LN120@LoadMotion
$LN121@LoadMotion:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00264	8b ce		 mov	 ecx, esi
  00266	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
$LN120@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1191 :         _Scary->_Erase_head(_Getal());

  0026b	8d 45 e8	 lea	 eax, DWORD PTR $T2[ebp+36]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 108  : 			pData->HitDataContainer.push_back(SHitData());

  0026e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1191 :         _Scary->_Erase_head(_Getal());

  00275	50		 push	 eax
  00276	8b c8		 mov	 ecx, eax
  00278	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0027d	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp+32]
  00280	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00283	72 0d		 jb	 SHORT $LN137@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00285	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00286	50		 push	 eax
  00287	ff 75 d0	 push	 DWORD PTR $T2[ebp+12]
  0028a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0028f	83 c4 08	 add	 esp, 8
$LN137@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 110  : 			if (!rHitData.Load(rTextFileLoader))

  00292	8b 45 b8	 mov	 eax, DWORD PTR _pData$GSCopy$1$[ebp]
  00295	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00296	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+28], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0029d	c7 45 e4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+32], 15 ; 0000000fH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 110  : 			if (!rHitData.Load(rTextFileLoader))

  002a4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  002a7	83 e9 2c	 sub	 ecx, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002aa	c6 45 d0 00	 mov	 BYTE PTR $T2[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 110  : 			if (!rHitData.Load(rTextFileLoader))

  002ae	e8 00 00 00 00	 call	 ?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ; NRaceData::SHitData::Load
  002b3	84 c0		 test	 al, al
  002b5	0f 84 37 ff ff
	ff		 je	 $LN161@LoadMotion

; 112  : 
; 113  : 			rTextFileLoader.SetParentNode();

  002bb	8b cb		 mov	 ecx, ebx
  002bd	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  002c2	47		 inc	 edi
  002c3	3b 7d bc	 cmp	 edi, DWORD PTR _dwHitDataCount$[ebp]
  002c6	0f 82 54 ff ff
	ff		 jb	 $LL4@LoadMotion
$LN3@LoadMotion:

; 114  : 		}
; 115  : 	}
; 116  : 
; 117  : 	return TRUE;

  002cc	b8 01 00 00 00	 mov	 eax, 1
  002d1	e9 1e ff ff ff	 jmp	 $LN1@LoadMotion
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$3:
  00018	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1SHitData@NRaceData@@QAE@XZ
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$4:
  00020	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1SHitData@NRaceData@@QAE@XZ
  00028	cc		 int	 3
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
__ehhandler$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z:
  0002d	90		 npad	 1
  0002e	90		 npad	 1
  0002f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00033	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00036	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z ENDP ; NRaceData::LoadMotionAttackData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
_TEXT	SEGMENT
$T2 = -64						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pData$ = 12						; size = 4
?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z PROC ; NRaceData::LoadAttackData, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 21   : {

  00031	8b 75 0c	 mov	 esi, DWORD PTR _pData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MFPNOHLP@attacktype@

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00039	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 45 d8 00	 mov	 BYTE PTR $T7[ebp], 0

; 2339 :         assign(_Ptr);

  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 22   : 	if (!rTextFileLoader.GetTokenInteger("attacktype", &pData->iAttackType))

  00050	56		 push	 esi
  00051	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00063	85 c0		 test	 eax, eax
  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006c	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 22   : 	if (!rTextFileLoader.GetTokenInteger("attacktype", &pData->iAttackType))

  0006f	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00072	83 f8 10	 cmp	 eax, 16			; 00000010H
  00075	72 0d		 jb	 SHORT $LN27@LoadAttack

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00077	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00078	50		 push	 eax
  00079	ff 75 d8	 push	 DWORD PTR $T7[ebp]
  0007c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00081	83 c4 08	 add	 esp, 8
$LN27@LoadAttack:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 22   : 	if (!rTextFileLoader.GetTokenInteger("attacktype", &pData->iAttackType))

  00084	84 db		 test	 bl, bl
  00086	74 06		 je	 SHORT $LN2@LoadAttack

; 23   : 	{
; 24   : 		pData->iAttackType = ATTACK_TYPE_SPLASH;

  00088	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@LoadAttack:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IEMCNBIB@hittingtype@
  00093	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00096	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 45 d8 00	 mov	 BYTE PTR $T6[ebp], 0

; 2339 :         assign(_Ptr);

  000a8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 26   : 	if (!rTextFileLoader.GetTokenInteger("hittingtype", &pData->iHittingType))

  000ad	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000b7	50		 push	 eax
  000b8	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  000bb	8b cf		 mov	 ecx, edi
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  000c3	85 c0		 test	 eax, eax
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cc	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 26   : 	if (!rTextFileLoader.GetTokenInteger("hittingtype", &pData->iHittingType))

  000cf	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000d2	83 f8 10	 cmp	 eax, 16			; 00000010H
  000d5	72 0d		 jb	 SHORT $LN45@LoadAttack

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000d7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d8	50		 push	 eax
  000d9	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  000dc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e1	83 c4 08	 add	 esp, 8
$LN45@LoadAttack:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 26   : 	if (!rTextFileLoader.GetTokenInteger("hittingtype", &pData->iHittingType))

  000e4	84 db		 test	 bl, bl
  000e6	0f 85 72 01 00
	00		 jne	 $LN123@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HEIDABDC@stiffentime@
  000f1	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000f4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000fb	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00102	88 5d d8	 mov	 BYTE PTR $T5[ebp], bl

; 2339 :         assign(_Ptr);

  00105	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 28   : 	if (!rTextFileLoader.GetTokenFloat("stiffentime", &pData->fStiffenTime))

  0010a	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0010d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00114	50		 push	 eax
  00115	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00118	8b cf		 mov	 ecx, edi
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00120	85 c0		 test	 eax, eax
  00122	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00129	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 28   : 	if (!rTextFileLoader.GetTokenFloat("stiffentime", &pData->fStiffenTime))

  0012c	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0012f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00132	72 0d		 jb	 SHORT $LN63@LoadAttack

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00134	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00135	50		 push	 eax
  00136	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  00139	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0013e	83 c4 08	 add	 esp, 8
$LN63@LoadAttack:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 28   : 	if (!rTextFileLoader.GetTokenFloat("stiffentime", &pData->fStiffenTime))

  00141	84 db		 test	 bl, bl
  00143	0f 85 15 01 00
	00		 jne	 $LN123@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00149	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GBJCIDNL@invisibletime@
  0014e	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00151	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00158	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0015f	88 5d d8	 mov	 BYTE PTR $T4[ebp], bl

; 2339 :         assign(_Ptr);

  00162	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 30   : 	if (!rTextFileLoader.GetTokenFloat("invisibletime", &pData->fInvisibleTime))

  00167	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0016a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00171	50		 push	 eax
  00172	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00175	8b cf		 mov	 ecx, edi
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0017d	85 c0		 test	 eax, eax
  0017f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00186	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 30   : 	if (!rTextFileLoader.GetTokenFloat("invisibletime", &pData->fInvisibleTime))

  00189	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0018c	83 f8 10	 cmp	 eax, 16			; 00000010H
  0018f	72 0d		 jb	 SHORT $LN81@LoadAttack

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00191	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00192	50		 push	 eax
  00193	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00196	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0019b	83 c4 08	 add	 esp, 8
$LN81@LoadAttack:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 30   : 	if (!rTextFileLoader.GetTokenFloat("invisibletime", &pData->fInvisibleTime))

  0019e	84 db		 test	 bl, bl
  001a0	0f 85 b8 00 00
	00		 jne	 $LN123@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KAKKEPBE@externalforce@
  001ab	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001ae	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001b5	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001bc	88 5d d8	 mov	 BYTE PTR $T3[ebp], bl

; 2339 :         assign(_Ptr);

  001bf	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 32   : 	if (!rTextFileLoader.GetTokenFloat("externalforce", &pData->fExternalForce))

  001c4	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  001c7	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  001ce	50		 push	 eax
  001cf	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  001d2	8b cf		 mov	 ecx, edi
  001d4	50		 push	 eax
  001d5	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  001da	85 c0		 test	 eax, eax
  001dc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001e3	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 32   : 	if (!rTextFileLoader.GetTokenFloat("externalforce", &pData->fExternalForce))

  001e6	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001e9	83 f8 10	 cmp	 eax, 16			; 00000010H
  001ec	72 0d		 jb	 SHORT $LN99@LoadAttack

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001ee	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ef	50		 push	 eax
  001f0	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  001f3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001f8	83 c4 08	 add	 esp, 8
$LN99@LoadAttack:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 32   : 	if (!rTextFileLoader.GetTokenFloat("externalforce", &pData->fExternalForce))

  001fb	84 db		 test	 bl, bl
  001fd	75 5f		 jne	 SHORT $LN123@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PCIAOIBK@hitlimitcount@
  00204	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00207	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0020e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00215	88 5d c0	 mov	 BYTE PTR $T2[ebp], bl

; 2339 :         assign(_Ptr);

  00218	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 34   : 	if (!rTextFileLoader.GetTokenInteger("hitlimitcount", &pData->iHitLimitCount))

  0021d	83 c6 14	 add	 esi, 20			; 00000014H
  00220	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  00227	56		 push	 esi
  00228	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0022b	8b cf		 mov	 ecx, edi
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00233	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00235	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 34   : 	if (!rTextFileLoader.GetTokenInteger("hitlimitcount", &pData->iHitLimitCount))

  00238	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0023b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0023e	72 0d		 jb	 SHORT $LN117@LoadAttack

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00240	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00241	50		 push	 eax
  00242	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  00245	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0024a	83 c4 08	 add	 esp, 8
$LN117@LoadAttack:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 34   : 	if (!rTextFileLoader.GetTokenInteger("hitlimitcount", &pData->iHitLimitCount))

  0024d	84 db		 test	 bl, bl
  0024f	74 06		 je	 SHORT $LN7@LoadAttack

; 35   : 	{
; 36   : 		pData->iHitLimitCount = 0;

  00251	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN7@LoadAttack:

; 37   : 	}
; 38   : 
; 39   : 	return true;

  00257	b8 01 00 00 00	 mov	 eax, 1
  0025c	eb 02		 jmp	 SHORT $LN1@LoadAttack
$LN123@LoadAttack:

; 33   : 		return false;

  0025e	33 c0		 xor	 eax, eax
$LN1@LoadAttack:

; 40   : }

  00260	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00263	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0026a	59		 pop	 ecx
  0026b	5f		 pop	 edi
  0026c	5e		 pop	 esi
  0026d	5b		 pop	 ebx
  0026e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00271	33 cd		 xor	 ecx, ebp
  00273	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00278	8b e5		 mov	 esp, ebp
  0027a	5d		 pop	 ebp
  0027b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$5:
  00028	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ENDP ; NRaceData::LoadAttackData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rObjectData$ = 16					; size = 4
?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z PROC ; NRaceData::SaveObjectData, COMDAT

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00003	8b 45 10	 mov	 eax, DWORD PTR _c_rObjectData$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000d	72 02		 jb	 SHORT $LN6@SaveObject

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@SaveObject:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 159  : 	PrintfTabs(File, iTabCount, "ObjectScriptName     \"%s\"\n", c_rObjectData.strFileName.c_str());

  00011	50		 push	 eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
  00017	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  0001a	ff 75 08	 push	 DWORD PTR _File$[ebp]
  0001d	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00022	83 c4 10	 add	 esp, 16			; 00000010H

; 160  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z ENDP ; NRaceData::SaveObjectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rEffectData$ = 16					; size = 4
?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z PROC ; NRaceData::SaveEffectData, COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _c_rEffectData$[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  00007	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  0000b	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 150  : {

  0000e	56		 push	 esi
  0000f	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00010	72 02		 jb	 SHORT $LN6@SaveEffect

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00012	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@SaveEffect:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 151  : 	PrintfTabs(File, iTabCount, "EffectScriptName     \"%s\"\n", c_rEffectData.strFileName.c_str());

  00014	8b 7d 0c	 mov	 edi, DWORD PTR _iTabCount$[ebp]
  00017	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
  00020	57		 push	 edi
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00027	f3 0f 10 43 24	 movss	 xmm0, DWORD PTR [ebx+36]

; 152  : 
; 153  : 	PrintfTabs(File, iTabCount, "EffectPosition       %f %f %f\n", c_rEffectData.v3Position.x, c_rEffectData.v3Position.y, c_rEffectData.v3Position.z);

  0002c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002f	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00035	f3 0f 10 43 20	 movss	 xmm0, DWORD PTR [ebx+32]
  0003a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00042	83 ec 08	 sub	 esp, 8
  00045	f3 0f 10 43 1c	 movss	 xmm0, DWORD PTR [ebx+28]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  00057	57		 push	 edi
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0005e	f3 0f 10 43 30	 movss	 xmm0, DWORD PTR [ebx+48]

; 154  : 	PrintfTabs(File, iTabCount, "EffectRotation       %f %f %f\n", c_rEffectData.v3Rotation.x, c_rEffectData.v3Rotation.y, c_rEffectData.v3Rotation.z);

  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	0f 5a c0	 cvtps2pd xmm0, xmm0
  00069	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  0006f	f3 0f 10 43 2c	 movss	 xmm0, DWORD PTR [ebx+44]
  00074	0f 5a c0	 cvtps2pd xmm0, xmm0
  00077	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0007d	f3 0f 10 43 28	 movss	 xmm0, DWORD PTR [ebx+40]
  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  0008f	57		 push	 edi
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00096	83 c4 24	 add	 esp, 36			; 00000024H
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx

; 155  : }

  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z ENDP ; NRaceData::SaveEffectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z
_TEXT	SEGMENT
tv250 = -8						; size = 4
_i$1$ = -4						; size = 4
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rCollisionData$ = 16					; size = 4
?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z PROC ; NRaceData::SaveCollisionData, COMDAT

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 242  : 	PrintfTabs(File, iTabCount, "CollisionType        %d\n", c_rCollisionData.iCollisionType);

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _iTabCount$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 10	 mov	 esi, DWORD PTR _c_rCollisionData$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _File$[ebp]
  00012	ff 76 04	 push	 DWORD PTR [esi+4]
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@
  0001a	53		 push	 ebx
  0001b	57		 push	 edi
  0001c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 243  : 	PrintfTabs(File, iTabCount, "\n");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00026	53		 push	 ebx
  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00030	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00035	2b 4e 08	 sub	 ecx, DWORD PTR [esi+8]
  00038	f7 e9		 imul	 ecx
  0003a	c1 fa 03	 sar	 edx, 3
  0003d	8b c2		 mov	 eax, edx
  0003f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00042	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 247  : 	PrintfTabs(File, iTabCount, "SphereDataCount      %d\n", c_rSphereDataVector.size());

  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@
  0004a	53		 push	 ebx
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00051	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00054	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00059	2b 4e 08	 sub	 ecx, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 247  : 	PrintfTabs(File, iTabCount, "SphereDataCount      %d\n", c_rSphereDataVector.size());

  0005c	83 c4 2c	 add	 esp, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005f	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 249  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00068	c1 fa 03	 sar	 edx, 3
  0006b	8b c2		 mov	 eax, edx
  0006d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00070	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 249  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  00072	0f 84 c2 00 00
	00		 je	 $LN3@SaveCollis
  00078	33 c0		 xor	 eax, eax
  0007a	89 45 f8	 mov	 DWORD PTR tv250[ebp], eax
  0007d	0f 1f 00	 npad	 3
$LL4@SaveCollis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1514 :         return _My_data._Myfirst[_Pos];

  00080	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00083	03 c8		 add	 ecx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 251  : 		const TSphereData & c_rAttr = c_rSphereDataVector[i].GetAttribute();

  00085	e8 00 00 00 00	 call	 ?GetAttribute@CSphereCollisionInstance@@QBEABUSSphereData@@XZ ; CSphereCollisionInstance::GetAttribute

; 252  : 
; 253  : 		PrintfTabs(File, iTabCount, "Group SphereData%02d\n", i);

  0008a	ff 75 fc	 push	 DWORD PTR _i$1$[ebp]
  0008d	8b f0		 mov	 esi, eax
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@
  00094	53		 push	 ebx
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 254  : 
; 255  : 		PrintfTabs(File, iTabCount, "{\n");

  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  000a0	53		 push	 ebx
  000a1	57		 push	 edi
  000a2	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000a7	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]

; 256  : 
; 257  : 		PrintfTabs(File, iTabCount+1, "Radius           %f\n",

  000ac	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  000af	0f 5a c0	 cvtps2pd xmm0, xmm0
  000b2	83 c4 14	 add	 esp, 20			; 00000014H
  000b5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  000bf	50		 push	 eax
  000c0	57		 push	 edi
  000c1	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000c6	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]

; 258  : 						c_rAttr.fRadius);
; 259  : 
; 260  : 		PrintfTabs(File, iTabCount+1, "Position         %f %f %f\n",

  000cb	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  000ce	0f 5a c0	 cvtps2pd xmm0, xmm0
  000d1	51		 push	 ecx
  000d2	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  000d8	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  000dd	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e0	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  000e6	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000ea	0f 5a c0	 cvtps2pd xmm0, xmm0
  000ed	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  000f7	50		 push	 eax
  000f8	57		 push	 edi
  000f9	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 261  : 						c_rAttr.v3Position.x,
; 262  : 						c_rAttr.v3Position.y,
; 263  : 						c_rAttr.v3Position.z);
; 264  : 
; 265  : 		PrintfTabs(File, iTabCount, "}\n");

  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  00103	53		 push	 ebx
  00104	57		 push	 edi
  00105	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0010a	8b 75 10	 mov	 esi, DWORD PTR _c_rCollisionData$[ebp]
  0010d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 249  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  00112	ff 45 fc	 inc	 DWORD PTR _i$1$[ebp]

; 261  : 						c_rAttr.v3Position.x,
; 262  : 						c_rAttr.v3Position.y,
; 263  : 						c_rAttr.v3Position.z);
; 264  : 
; 265  : 		PrintfTabs(File, iTabCount, "}\n");

  00115	83 c4 30	 add	 esp, 48			; 00000030H
  00118	83 45 f8 14	 add	 DWORD PTR tv250[ebp], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0011c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0011f	2b 4e 08	 sub	 ecx, DWORD PTR [esi+8]
  00122	f7 e9		 imul	 ecx
  00124	c1 fa 03	 sar	 edx, 3
  00127	8b c2		 mov	 eax, edx
  00129	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012c	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 249  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  0012e	39 45 fc	 cmp	 DWORD PTR _i$1$[ebp], eax
  00131	8b 45 f8	 mov	 eax, DWORD PTR tv250[ebp]
  00134	0f 82 46 ff ff
	ff		 jb	 $LL4@SaveCollis
$LN3@SaveCollis:
  0013a	5f		 pop	 edi

; 266  : 	}
; 267  : }

  0013b	5e		 pop	 esi
  0013c	5b		 pop	 ebx
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ENDP ; NRaceData::SaveCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z
_TEXT	SEGMENT
tv943 = -8						; size = 4
_dwHitDataNumber$1$ = -4				; size = 4
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rData$ = 16						; size = 4
?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z PROC ; NRaceData::SaveMotionAttackData, COMDAT

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 206  : 	SaveAttackData(File, iTabCount, c_rData);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR _iTabCount$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 10	 mov	 edi, DWORD PTR _c_rData$[ebp]
  00012	57		 push	 edi
  00013	56		 push	 esi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ; NRaceData::SaveAttackData

; 207  : 
; 208  : 	PrintfTabs(File, iTabCount, "\n");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0001f	56		 push	 esi
  00020	53		 push	 ebx
  00021	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 209  : 	PrintfTabs(File, iTabCount, "MotionType           %d\n", c_rData.iMotionType);

  00026	ff 77 18	 push	 DWORD PTR [edi+24]
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  0002e	56		 push	 esi
  0002f	53		 push	 ebx
  00030	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00035	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00038	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  0003d	2b 4f 1c	 sub	 ecx, DWORD PTR [edi+28]
  00040	f7 e9		 imul	 ecx
  00042	c1 fa 03	 sar	 edx, 3
  00045	8b c2		 mov	 eax, edx
  00047	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004a	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 210  : 	PrintfTabs(File, iTabCount, "HitDataCount         %d\n", c_rData.HitDataContainer.size());

  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@
  00052	56		 push	 esi
  00053	53		 push	 ebx
  00054	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00059	8b 45 10	 mov	 eax, DWORD PTR _c_rData$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 212  : 	DWORD dwHitDataNumber = 0;

  0005c	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0005e	8b 7f 1c	 mov	 edi, DWORD PTR [edi+28]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 210  : 	PrintfTabs(File, iTabCount, "HitDataCount         %d\n", c_rData.HitDataContainer.size());

  00061	83 c4 38	 add	 esp, 56			; 00000038H

; 212  : 	DWORD dwHitDataNumber = 0;

  00064	89 4d fc	 mov	 DWORD PTR _dwHitDataNumber$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00067	3b 78 20	 cmp	 edi, DWORD PTR [eax+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 214  : 	for (; itor != c_rData.HitDataContainer.end(); ++itor, ++dwHitDataNumber)

  0006a	0f 84 b5 01 00
	00		 je	 $LN3@SaveMotion
  00070	8b c6		 mov	 eax, esi
  00072	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL4@SaveMotion:

; 215  : 	{
; 216  : 		const THitData & c_rHitData = *itor;
; 217  : 
; 218  : 		PrintfTabs(File, iTabCount, "Group HitData%02d\n", dwHitDataNumber);

  00075	51		 push	 ecx
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@
  0007b	50		 push	 eax
  0007c	53		 push	 ebx
  0007d	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 219  : 		PrintfTabs(File, iTabCount, "{\n");

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  00087	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  0008a	53		 push	 ebx
  0008b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00090	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]

; 220  : 		PrintfTabs(File, iTabCount+1, "AttackingStartTime   %f\n", c_rHitData.fAttackStartTime);

  00094	83 c4 14	 add	 esp, 20			; 00000014H
  00097	0f 5a c0	 cvtps2pd xmm0, xmm0
  0009a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@
  000a4	56		 push	 esi
  000a5	53		 push	 ebx
  000a6	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000ab	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]

; 221  : 		PrintfTabs(File, iTabCount+1, "AttackingEndTime     %f\n", c_rHitData.fAttackEndTime);

  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000b6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@
  000c0	56		 push	 esi
  000c1	53		 push	 ebx
  000c2	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000c7	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  000ca	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]

; 2153 :         return _BUF_SIZE <= _Myres;

  000cd	83 7f 20 10	 cmp	 DWORD PTR [edi+32], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000d1	72 02		 jb	 SHORT $LN28@SaveMotion

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000d3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN28@SaveMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 223  : 		PrintfTabs(File, iTabCount+1, "AttackingBone        \"%s\"\n", c_rHitData.strBoneName.c_str());

  000d5	50		 push	 eax
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  000db	56		 push	 esi
  000dc	53		 push	 ebx
  000dd	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000e2	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]

; 224  : 		PrintfTabs(File, iTabCount+1, "WeaponLength         %f\n", c_rHitData.fWeaponLength);

  000e7	83 c4 08	 add	 esp, 8
  000ea	0f 5a c0	 cvtps2pd xmm0, xmm0
  000ed	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@
  000f7	56		 push	 esi
  000f8	53		 push	 ebx
  000f9	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 225  : 		PrintfTabs(File, iTabCount+1, "List HitPosition\n");

  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FOOKPLLP@List?5HitPosition?6@
  00103	56		 push	 esi
  00104	53		 push	 ebx
  00105	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 226  : 		PrintfTabs(File, iTabCount+1, "{\n");

  0010a	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  0010f	56		 push	 esi
  00110	53		 push	 ebx
  00111	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1245 :         return const_iterator(_Scary->_Myhead->_Left, _Scary);

  00116	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 226  : 		PrintfTabs(File, iTabCount+1, "{\n");

  00119	83 c4 2c	 add	 esp, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0011c	8b 30		 mov	 esi, DWORD PTR [eax]

; 232  :         return this->_Ptr == _Right._Ptr;

  0011e	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 229  : 		for(it = c_rHitData.mapHitPosition.begin(); it!= c_rHitData.mapHitPosition.end();++it)

  00120	0f 84 c5 00 00
	00		 je	 $LN109@SaveMotion
  00126	8b 45 0c	 mov	 eax, DWORD PTR _iTabCount$[ebp]
  00129	83 c0 02	 add	 eax, 2
  0012c	89 45 f8	 mov	 DWORD PTR tv943[ebp], eax
  0012f	90		 npad	 1
$LL48@SaveMotion:
  00130	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]

; 231  : 			PrintfTabs(File, iTabCount+2, "%f %f %f %f %f %f %f\n", it->first,

  00135	83 ec 38	 sub	 esp, 56			; 00000038H
  00138	0f 5a c0	 cvtps2pd xmm0, xmm0
  0013b	f2 0f 11 44 24
	30		 movsd	 QWORD PTR [esp+48], xmm0
  00141	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00146	0f 5a c0	 cvtps2pd xmm0, xmm0
  00149	f2 0f 11 44 24
	28		 movsd	 QWORD PTR [esp+40], xmm0
  0014f	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00154	0f 5a c0	 cvtps2pd xmm0, xmm0
  00157	f2 0f 11 44 24
	20		 movsd	 QWORD PTR [esp+32], xmm0
  0015d	f3 0f 10 46 28	 movss	 xmm0, DWORD PTR [esi+40]
  00162	0f 5a c0	 cvtps2pd xmm0, xmm0
  00165	f2 0f 11 44 24
	18		 movsd	 QWORD PTR [esp+24], xmm0
  0016b	f3 0f 10 46 24	 movss	 xmm0, DWORD PTR [esi+36]
  00170	0f 5a c0	 cvtps2pd xmm0, xmm0
  00173	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  00179	f3 0f 10 46 20	 movss	 xmm0, DWORD PTR [esi+32]
  0017e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00181	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00187	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  0018c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0018f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@
  00199	50		 push	 eax
  0019a	53		 push	 ebx
  0019b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  001a0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 231  : 			PrintfTabs(File, iTabCount+2, "%f %f %f %f %f %f %f\n", it->first,

  001a3	83 c4 44	 add	 esp, 68			; 00000044H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  001a6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001aa	74 1d		 je	 SHORT $LN47@SaveMotion

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  001ac	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001af	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b3	75 10		 jne	 SHORT $LN110@SaveMotion
$LL45@SaveMotion:
  001b5	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001b8	75 0b		 jne	 SHORT $LN110@SaveMotion

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  001ba	8b f0		 mov	 esi, eax
  001bc	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001bf	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001c3	74 f0		 je	 SHORT $LL45@SaveMotion
$LN110@SaveMotion:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  001c5	8b f0		 mov	 esi, eax

; 59   :         } else {

  001c7	eb 16		 jmp	 SHORT $LN52@SaveMotion
$LN47@SaveMotion:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  001c9	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  001cb	8b 0e		 mov	 ecx, DWORD PTR [esi]
  001cd	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001d1	75 0c		 jne	 SHORT $LN52@SaveMotion
$LL51@SaveMotion:
  001d3	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  001d5	8b f1		 mov	 esi, ecx
  001d7	8b c8		 mov	 ecx, eax
  001d9	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001dd	74 f4		 je	 SHORT $LL51@SaveMotion
$LN52@SaveMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 229  : 		for(it = c_rHitData.mapHitPosition.begin(); it!= c_rHitData.mapHitPosition.end();++it)

  001df	8b 45 f8	 mov	 eax, DWORD PTR tv943[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  001e2	3b 77 24	 cmp	 esi, DWORD PTR [edi+36]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 229  : 		for(it = c_rHitData.mapHitPosition.begin(); it!= c_rHitData.mapHitPosition.end();++it)

  001e5	0f 85 45 ff ff
	ff		 jne	 $LL48@SaveMotion
$LN109@SaveMotion:

; 232  : 				it->second.v3LastPosition.x, it->second.v3LastPosition.y, it->second.v3LastPosition.z,
; 233  : 				it->second.v3Position.x,     it->second.v3Position.y,     it->second.v3Position.z);
; 234  : 		}
; 235  : 		PrintfTabs(File, iTabCount+1, "}\n");

  001eb	8b 75 0c	 mov	 esi, DWORD PTR _iTabCount$[ebp]
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  001f3	46		 inc	 esi
  001f4	56		 push	 esi
  001f5	53		 push	 ebx
  001f6	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 236  : 		PrintfTabs(File, iTabCount, "}\n");

  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  00200	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  00203	53		 push	 ebx
  00204	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00209	8b 45 10	 mov	 eax, DWORD PTR _c_rData$[ebp]

; 75   :         ++_Ptr;

  0020c	83 c7 2c	 add	 edi, 44			; 0000002cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 214  : 	for (; itor != c_rData.HitDataContainer.end(); ++itor, ++dwHitDataNumber)

  0020f	8b 4d fc	 mov	 ecx, DWORD PTR _dwHitDataNumber$1$[ebp]

; 236  : 		PrintfTabs(File, iTabCount, "}\n");

  00212	83 c4 18	 add	 esp, 24			; 00000018H
  00215	41		 inc	 ecx
  00216	89 4d fc	 mov	 DWORD PTR _dwHitDataNumber$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00219	3b 78 20	 cmp	 edi, DWORD PTR [eax+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 214  : 	for (; itor != c_rData.HitDataContainer.end(); ++itor, ++dwHitDataNumber)

  0021c	8b 45 0c	 mov	 eax, DWORD PTR _iTabCount$[ebp]
  0021f	0f 85 50 fe ff
	ff		 jne	 $LL4@SaveMotion
$LN3@SaveMotion:
  00225	5f		 pop	 edi

; 237  : 	}
; 238  : }

  00226	5e		 pop	 esi
  00227	5b		 pop	 ebx
  00228	8b e5		 mov	 esp, ebp
  0022a	5d		 pop	 ebp
  0022b	c3		 ret	 0
?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z ENDP ; NRaceData::SaveMotionAttackData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rData$ = 16						; size = 4
?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z PROC ; NRaceData::SaveAttackData, COMDAT

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 196  : 	PrintfTabs(File, iTabCount, "AttackType           %d\n", c_rData.iAttackType);

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _c_rData$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0000b	57		 push	 edi
  0000c	ff 33		 push	 DWORD PTR [ebx]
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _iTabCount$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00016	57		 push	 edi
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 197  : 	PrintfTabs(File, iTabCount, "HittingType          %d\n", c_rData.iHittingType);

  0001d	ff 73 04	 push	 DWORD PTR [ebx+4]
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00025	57		 push	 edi
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0002c	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR [ebx+16]

; 198  : 	PrintfTabs(File, iTabCount, "StiffenTime          %f\n", c_rData.fStiffenTime);

  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	0f 5a c0	 cvtps2pd xmm0, xmm0
  00037	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  00041	57		 push	 edi
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00048	f3 0f 10 43 08	 movss	 xmm0, DWORD PTR [ebx+8]

; 199  : 	PrintfTabs(File, iTabCount, "InvisibleTime        %f\n", c_rData.fInvisibleTime);

  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	0f 5a c0	 cvtps2pd xmm0, xmm0
  00053	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@
  0005d	57		 push	 edi
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00064	f3 0f 10 43 0c	 movss	 xmm0, DWORD PTR [ebx+12]

; 200  : 	PrintfTabs(File, iTabCount, "ExternalForce        %f\n", c_rData.fExternalForce);

  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0006f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@
  00079	57		 push	 edi
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 201  : 	PrintfTabs(File, iTabCount, "HitLimitCount        %d\n", c_rData.iHitLimitCount);

  00080	ff 73 14	 push	 DWORD PTR [ebx+20]
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@
  00088	57		 push	 edi
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0008f	83 c4 24	 add	 esp, 36			; 00000024H
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx

; 202  : }

  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ENDP ; NRaceData::SaveAttackData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?DestroySystem@NRaceData@@YAXXZ
_TEXT	SEGMENT
?DestroySystem@NRaceData@@YAXXZ PROC			; NRaceData::DestroySystem, COMDAT

; 12   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 12   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 19		 je	 SHORT $LN19@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+4
$LN19@DestroySys:

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  0002b	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00031	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+16
  00036	89 35 08 00 00
	00		 mov	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003c	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00042	a3 14 00 00 00	 mov	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	3b f7		 cmp	 esi, edi
  00049	74 1e		 je	 SHORT $LN42@DestroySys
  0004b	0f 1f 44 00 00	 npad	 5
$LL43@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00050	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00052	85 c9		 test	 ecx, ecx
  00054	74 06		 je	 SHORT $LN41@DestroySys
  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 10		 call	 DWORD PTR [eax]
$LN41@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005c	83 c6 04	 add	 esi, 4
  0005f	3b f7		 cmp	 esi, edi
  00061	75 ed		 jne	 SHORT $LL43@DestroySys
  00063	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+4
$LN42@DestroySys:

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00069	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  0006f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+16
  00074	89 35 08 00 00
	00		 mov	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007a	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00080	a3 14 00 00 00	 mov	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00085	3b f7		 cmp	 esi, edi
  00087	74 31		 je	 SHORT $LN84@DestroySys
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL66@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00090	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00092	85 c9		 test	 ecx, ecx
  00094	74 06		 je	 SHORT $LN64@DestroySys
  00096	8b 01		 mov	 eax, DWORD PTR [ecx]
  00098	6a 01		 push	 1
  0009a	ff 10		 call	 DWORD PTR [eax]
$LN64@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009c	83 c6 04	 add	 esi, 4
  0009f	3b f7		 cmp	 esi, edi
  000a1	75 ed		 jne	 SHORT $LL66@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  000a3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+4
  000a8	a3 08 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 16   : }

  000ad	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+16
  000b2	5f		 pop	 edi
  000b3	a3 14 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20, eax
  000b8	5e		 pop	 esi
  000b9	c3		 ret	 0
$LN84@DestroySys:
  000ba	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+16
  000bf	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  000c0	89 35 08 00 00
	00		 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 16   : }

  000c6	a3 14 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20, eax
  000cb	5e		 pop	 esi
  000cc	c3		 ret	 0
?DestroySystem@NRaceData@@YAXXZ ENDP			; NRaceData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z PROC	; NRaceData::SAttachingObjectData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 138  : 		virtual ~SAttachingObjectData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingObjectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN11@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 04	 push	 DWORD PTR [esi+4]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN11@scalar:
  00021	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00025	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002c	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00037	74 0b		 je	 SHORT $LN17@scalar
  00039	6a 1c		 push	 28			; 0000001cH
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
$LN17@scalar:
  00044	8b c6		 mov	 eax, esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z ENDP	; NRaceData::SAttachingObjectData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
;	COMDAT ??1SAttachingObjectData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SAttachingObjectData@NRaceData@@UAE@XZ PROC		; NRaceData::SAttachingObjectData::~SAttachingObjectData, COMDAT
; _this$ = ecx

; 138  : 		virtual ~SAttachingObjectData() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingObjectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@SAttaching

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 04	 push	 DWORD PTR [esi+4]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0001e	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00025	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002c	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00030	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 138  : 		virtual ~SAttachingObjectData() {}

  00031	c3		 ret	 0
??1SAttachingObjectData@NRaceData@@UAE@XZ ENDP		; NRaceData::SAttachingObjectData::~SAttachingObjectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z PROC	; NRaceData::SAttachingEffectData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 130  : 		virtual ~SAttachingEffectData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingEffectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN11@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 04	 push	 DWORD PTR [esi+4]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN11@scalar:
  00021	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00025	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002c	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00037	74 0b		 je	 SHORT $LN17@scalar
  00039	6a 34		 push	 52			; 00000034H
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
$LN17@scalar:
  00044	8b c6		 mov	 eax, esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z ENDP	; NRaceData::SAttachingEffectData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
;	COMDAT ??1SAttachingEffectData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SAttachingEffectData@NRaceData@@UAE@XZ PROC		; NRaceData::SAttachingEffectData::~SAttachingEffectData, COMDAT
; _this$ = ecx

; 130  : 		virtual ~SAttachingEffectData() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingEffectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@SAttaching

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 04	 push	 DWORD PTR [esi+4]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0001e	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00025	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002c	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00030	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 130  : 		virtual ~SAttachingEffectData() {}

  00031	c3		 ret	 0
??1SAttachingEffectData@NRaceData@@UAE@XZ ENDP		; NRaceData::SAttachingEffectData::~SAttachingEffectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??_GSCollisionData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z PROC		; NRaceData::SCollisionData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000d	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00010	85 ff		 test	 edi, edi
  00012	74 3b		 je	 SHORT $LN10@scalar

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00014	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00017	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0001c	2b cf		 sub	 ecx, edi
  0001e	f7 e9		 imul	 ecx
  00020	c1 fa 03	 sar	 edx, 3
  00023	8b c2		 mov	 eax, edx
  00025	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00028	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002a	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0002d	c1 e0 02	 shl	 eax, 2
  00030	50		 push	 eax
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00041	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 1699 :             _Myend   = pointer();

  00048	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN10@scalar:
  0004f	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00053	74 0b		 je	 SHORT $LN14@scalar
  00055	6a 14		 push	 20			; 00000014H
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005d	83 c4 08	 add	 esp, 8
$LN14@scalar:
  00060	5f		 pop	 edi
  00061	8b c6		 mov	 eax, esi
  00063	5e		 pop	 esi
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z ENDP		; NRaceData::SCollisionData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
;	COMDAT ??1SCollisionData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SCollisionData@NRaceData@@UAE@XZ PROC		; NRaceData::SCollisionData::~SCollisionData, COMDAT
; _this$ = ecx

; 120  : 		virtual ~SCollisionData() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000a	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0000d	85 ff		 test	 edi, edi
  0000f	74 3b		 je	 SHORT $LN6@SCollision

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00014	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00019	2b cf		 sub	 ecx, edi
  0001b	f7 e9		 imul	 ecx
  0001d	c1 fa 03	 sar	 edx, 3
  00020	8b c2		 mov	 eax, edx
  00022	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00025	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00027	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0002a	c1 e0 02	 shl	 eax, 2
  0002d	50		 push	 eax
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00034	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0003e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 1699 :             _Myend   = pointer();

  00045	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN6@SCollision:
  0004c	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
??1SCollisionData@NRaceData@@UAE@XZ ENDP		; NRaceData::SCollisionData::~SCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z PROC ; std::allocator<NRaceData::SHitData>::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	6b 45 0c 2c	 imul	 eax, DWORD PTR __Count$[ebp], 44
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0000b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00010	83 c4 08	 add	 esp, 8

; 804  :     }

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z ENDP ; std::allocator<NRaceData::SHitData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??0SHitData@NRaceData@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
__Sentinel$2 = -32					; size = 8
$T3 = -28						; size = 4
_this$ = -28						; size = 4
__New_array$4 = -24					; size = 4
__Right_size$1$ = -20					; size = 4
__Result$1$ = -16					; size = 4
__Pnode$5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv724 = 8						; size = 4
$T6 = 8							; size = 1
___that$ = 8						; size = 4
??0SHitData@NRaceData@@QAE@ABU01@@Z PROC		; NRaceData::SHitData::SHitData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SHitData@NRaceData@@QAE@ABU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d dc	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0002c	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  0002f	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00032	8b 02		 mov	 eax, DWORD PTR [edx]
  00034	89 07		 mov	 DWORD PTR [edi], eax
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0003c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003f	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 2655 :         auto& _Right_data             = _Right._Mypair._Myval2;

  00042	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00045	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0004c	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2145 :         if (_Large_string_engaged()) {

  00053	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00057	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0005a	89 45 f0	 mov	 DWORD PTR __Result$1$[ebp], eax
  0005d	89 55 ec	 mov	 DWORD PTR __Right_size$1$[ebp], edx

; 2145 :         if (_Large_string_engaged()) {

  00060	72 05		 jb	 SHORT $LN15@SHitData

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00062	8b 00		 mov	 eax, DWORD PTR [eax]
  00064	89 45 f0	 mov	 DWORD PTR __Result$1$[ebp], eax
$LN15@SHitData:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00067	83 fa 10	 cmp	 edx, 16			; 00000010H
  0006a	73 0d		 jae	 SHORT $LN12@SHitData

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0006c	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  0006f	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00074	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 2663 :             return;

  00077	eb 45		 jmp	 SHORT $LN11@SHitData
$LN12@SHitData:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00079	8b c2		 mov	 eax, edx
  0007b	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00080	83 c8 0f	 or	 eax, 15			; 0000000fH
  00083	3b c1		 cmp	 eax, ecx
  00085	0f 47 c1	 cmova	 eax, ecx
  00088	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0008b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00092	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00094	8d 45 e8	 lea	 eax, DWORD PTR __New_array$4[ebp]
  00097	50		 push	 eax
  00098	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0009b	89 75 e8	 mov	 DWORD PTR __New_array$4[ebp], esi
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  000a4	8b 4d ec	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  000a7	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a8	51		 push	 ecx
  000a9	ff 75 f0	 push	 DWORD PTR __Result$1$[ebp]
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 _memcpy
  000b2	8b 45 e4	 mov	 eax, DWORD PTR $T3[ebp]

; 2672 :         _My_data._Myres  = _New_capacity;

  000b5	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  000b8	8b 55 ec	 mov	 edx, DWORD PTR __Right_size$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000bb	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@SHitData:
  000be	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1341 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  000c5	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  000c8	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  000cb	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  000ce	89 45 e4	 mov	 DWORD PTR _this$[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000d1	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  000d3	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  000d9	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 766  :     _Tree_head_scoped_ptr(_Alnode& _Al_, _Scary_val& _Mycont_) : _Al(_Al_), _Mycont(_STD addressof(_Mycont_)) {

  000e0	89 45 e0	 mov	 DWORD PTR __Sentinel$2[ebp], eax
  000e3	89 45 e4	 mov	 DWORD PTR __Sentinel$2[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000e6	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  000eb	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  000ed	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$5[ebp]
  000f0	50		 push	 eax
  000f1	56		 push	 esi
  000f2	89 75 f0	 mov	 DWORD PTR __Pnode$5[ebp], esi
  000f5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000fa	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$5[ebp]
  000fd	50		 push	 eax
  000fe	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00107	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$5[ebp]
  0010a	50		 push	 eax
  0010b	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00114	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  0011a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 767  :         _Mycont->_Myhead = _Alnode::value_type::_Buyheadnode(_Al);

  0011d	89 77 24	 mov	 DWORD PTR [edi+36], esi

; 1728 :         _Scary->_Myhead->_Parent = _Copy_nodes(_Right_scary->_Myhead->_Parent, _Scary->_Myhead, _Movefl);

  00120	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00123	8d 4f 24	 lea	 ecx, DWORD PTR [edi+36]
  00126	ff 75 08	 push	 DWORD PTR $T6[ebp]

; 901  :         _Tree_head_scoped_ptr<_Alnode, _Scary_val> _Sentinel(_Getal(), *_Scary);

  00129	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1728 :         _Scary->_Myhead->_Parent = _Copy_nodes(_Right_scary->_Myhead->_Parent, _Scary->_Myhead, _Movefl);

  0012d	56		 push	 esi
  0012e	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00131	ff 70 04	 push	 DWORD PTR [eax+4]
  00134	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
  00139	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0013c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1729 :         _Scary->_Mysize          = _Right_scary->_Mysize;

  0013f	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00142	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00145	89 47 28	 mov	 DWORD PTR [edi+40], eax

; 1730 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

  00148	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  0014b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014e	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00152	75 3c		 jne	 SHORT $LN53@SHitData

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00154	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00156	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0015a	75 13		 jne	 SHORT $LN58@SHitData
  0015c	0f 1f 40 00	 npad	 4
$LL57@SHitData:
  00160	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00162	8b d1		 mov	 edx, ecx
  00164	8b c8		 mov	 ecx, eax
  00166	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0016a	74 f4		 je	 SHORT $LL57@SHitData
  0016c	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
$LN58@SHitData:

; 1731 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

  0016f	89 10		 mov	 DWORD PTR [eax], edx

; 1732 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

  00171	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  00174	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 443  :         while (!_Pnode->_Right->_Isnil) {

  00177	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0017a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0017e	75 0b		 jne	 SHORT $LN62@SHitData
$LL61@SHitData:

; 444  :             _Pnode = _Pnode->_Right;

  00180	8b c8		 mov	 ecx, eax
  00182	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00185	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00189	74 f5		 je	 SHORT $LL61@SHitData
$LN62@SHitData:

; 1732 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

  0018b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1733 :         } else { // empty tree, just tidy head pointers

  0018e	eb 08		 jmp	 SHORT $LN78@SHitData
$LN53@SHitData:

; 1734 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

  00190	89 00		 mov	 DWORD PTR [eax], eax

; 1735 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

  00192	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  00195	89 40 08	 mov	 DWORD PTR [eax+8], eax
$LN78@SHitData:
  00198	8b c7		 mov	 eax, edi
  0019a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0019d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a4	59		 pop	 ecx
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$0:
  00000	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$3:
  0000b	8d 4d e0	 lea	 ecx, DWORD PTR __Sentinel$2[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0SHitData@NRaceData@@QAE@ABU01@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SHitData@NRaceData@@QAE@ABU01@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SHitData@NRaceData@@QAE@ABU01@@Z ENDP		; NRaceData::SHitData::SHitData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1SHitData@NRaceData@@QAE@XZ
_TEXT	SEGMENT
??1SHitData@NRaceData@@QAE@XZ PROC			; NRaceData::SHitData::~SHitData, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1191 :         _Scary->_Erase_head(_Getal());

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00006	51		 push	 ecx
  00007	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN12@SHitData

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 0c	 push	 DWORD PTR [esi+12]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN12@SHitData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 20 0f 00
	00 00		 mov	 DWORD PTR [esi+32], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0
  00033	5e		 pop	 esi
  00034	c3		 ret	 0
??1SHitData@NRaceData@@QAE@XZ ENDP			; NRaceData::SHitData::~SHitData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??0SHitData@NRaceData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0SHitData@NRaceData@@QAE@XZ PROC			; NRaceData::SHitData::SHitData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SHitData@NRaceData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002d	c7 43 1c 00 00
	00 00		 mov	 DWORD PTR [ebx+28], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00034	c7 43 20 0f 00
	00 00		 mov	 DWORD PTR [ebx+32], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003b	c6 43 0c 00	 mov	 BYTE PTR [ebx+12], 0
  0003f	8d 7b 24	 lea	 edi, DWORD PTR [ebx+36]
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00049	6a 30		 push	 48			; 00000030H
  0004b	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0004e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00054	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005b	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00060	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00062	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00065	50		 push	 eax
  00066	56		 push	 esi
  00067	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  0006a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006f	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00072	50		 push	 eax
  00073	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0007c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0007f	50		 push	 eax
  00080	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00089	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  0008f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00092	89 37		 mov	 DWORD PTR [edi], esi
  00094	8b c3		 mov	 eax, ebx
  00096	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00099	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a0	59		 pop	 ecx
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SHitData@NRaceData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??0SHitData@NRaceData@@QAE@XZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SHitData@NRaceData@@QAE@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SHitData@NRaceData@@QAE@XZ ENDP			; NRaceData::SHitData::SHitData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T4 = -80						; size = 8
_this$GSCopy$1$ = -72					; size = 4
_tv$ = -68						; size = 4
_time$5 = -64						; size = 4
__Loc$1$ = -60						; size = 4
__Head$1$ = -60						; size = 4
__Loc$2$ = -56						; size = 4
_rTextFileLoader$GSCopy$1$ = -56			; size = 4
_it$1$ = -52						; size = 4
__Myhead$6 = -52					; size = 4
tv2096 = -45						; size = 1
tv2095 = -45						; size = 1
tv2093 = -45						; size = 1
tv2091 = -45						; size = 1
_hp$7 = -44						; size = 28
$T8 = -40						; size = 24
$T9 = -40						; size = 24
$T10 = -40						; size = 24
$T11 = -40						; size = 24
$T12 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z PROC ; NRaceData::SHitData::Load, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	89 75 b8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  0002f	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00032	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CPENFGPA@attackingstarttime@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 43   : {

  0003a	89 7d c8	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0003d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00044	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T12[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004b	c6 45 d8 00	 mov	 BYTE PTR $T12[ebp], 0

; 2339 :         assign(_Ptr);

  0004f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 44   : 	if (!rTextFileLoader.GetTokenFloat("attackingstarttime", &fAttackStartTime))

  00054	56		 push	 esi
  00055	8d 45 d8	 lea	 eax, DWORD PTR $T12[ebp]
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005f	50		 push	 eax
  00060	8b cf		 mov	 ecx, edi
  00062	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00067	85 c0		 test	 eax, eax
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00070	8b 45 ec	 mov	 eax, DWORD PTR $T12[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 44   : 	if (!rTextFileLoader.GetTokenFloat("attackingstarttime", &fAttackStartTime))

  00073	0f 94 45 d3	 sete	 BYTE PTR tv2096[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00077	83 f8 10	 cmp	 eax, 16			; 00000010H
  0007a	72 0d		 jb	 SHORT $LN27@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007d	50		 push	 eax
  0007e	ff 75 d8	 push	 DWORD PTR $T12[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00086	83 c4 08	 add	 esp, 8
$LN27@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 44   : 	if (!rTextFileLoader.GetTokenFloat("attackingstarttime", &fAttackStartTime))

  00089	80 7d d3 00	 cmp	 BYTE PTR tv2096[ebp], 0
  0008d	0f 85 c5 03 00
	00		 jne	 $LN318@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KAKEFPLI@attackingendtime@
  00098	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0009b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a2	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a9	c6 45 d8 00	 mov	 BYTE PTR $T11[ebp], 0

; 2339 :         assign(_Ptr);

  000ad	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 46   : 	if (!rTextFileLoader.GetTokenFloat("attackingendtime", &fAttackEndTime))

  000b2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000bc	50		 push	 eax
  000bd	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  000c0	8b cf		 mov	 ecx, edi
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  000c8	85 c0		 test	 eax, eax
  000ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000d1	8b 45 ec	 mov	 eax, DWORD PTR $T11[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 46   : 	if (!rTextFileLoader.GetTokenFloat("attackingendtime", &fAttackEndTime))

  000d4	0f 94 45 d3	 sete	 BYTE PTR tv2095[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000d8	83 f8 10	 cmp	 eax, 16			; 00000010H
  000db	72 0d		 jb	 SHORT $LN45@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000dd	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000de	50		 push	 eax
  000df	ff 75 d8	 push	 DWORD PTR $T11[ebp]
  000e2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e7	83 c4 08	 add	 esp, 8
$LN45@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 46   : 	if (!rTextFileLoader.GetTokenFloat("attackingendtime", &fAttackEndTime))

  000ea	80 7d d3 00	 cmp	 BYTE PTR tv2095[ebp], 0
  000ee	0f 85 64 03 00
	00		 jne	 $LN318@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MMIDKEHG@attackingbone@
  000f9	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000fc	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00103	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0010a	c6 45 d8 00	 mov	 BYTE PTR $T10[ebp], 0

; 2339 :         assign(_Ptr);

  0010e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 49   : 	if (!rTextFileLoader.GetTokenString("attackingbone", &strBoneName))

  00113	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00116	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0011d	50		 push	 eax
  0011e	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  00121	8b cf		 mov	 ecx, edi
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00129	85 c0		 test	 eax, eax
  0012b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00132	8b 45 ec	 mov	 eax, DWORD PTR $T10[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 49   : 	if (!rTextFileLoader.GetTokenString("attackingbone", &strBoneName))

  00135	0f 94 45 d3	 sete	 BYTE PTR tv2093[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00139	83 f8 10	 cmp	 eax, 16			; 00000010H
  0013c	72 0d		 jb	 SHORT $LN63@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0013e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013f	50		 push	 eax
  00140	ff 75 d8	 push	 DWORD PTR $T10[ebp]
  00143	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00148	83 c4 08	 add	 esp, 8
$LN63@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 49   : 	if (!rTextFileLoader.GetTokenString("attackingbone", &strBoneName))

  0014b	80 7d d3 00	 cmp	 BYTE PTR tv2093[ebp], 0
  0014f	74 0d		 je	 SHORT $LN6@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00151	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00156	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00159	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN6@Load:

; 2339 :         assign(_Ptr);

  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MMFFHHOI@weaponlength@
  00163	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00166	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0016d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00174	c6 45 d8 00	 mov	 BYTE PTR $T9[ebp], 0

; 2339 :         assign(_Ptr);

  00178	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 51   : 	if (!rTextFileLoader.GetTokenFloat("weaponlength",&fWeaponLength))

  0017d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00180	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00187	50		 push	 eax
  00188	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  0018b	8b cf		 mov	 ecx, edi
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00193	85 c0		 test	 eax, eax
  00195	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019c	8b 45 ec	 mov	 eax, DWORD PTR $T9[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 51   : 	if (!rTextFileLoader.GetTokenFloat("weaponlength",&fWeaponLength))

  0019f	0f 94 45 d3	 sete	 BYTE PTR tv2091[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001a3	83 f8 10	 cmp	 eax, 16			; 00000010H
  001a6	72 0d		 jb	 SHORT $LN83@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001a8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a9	50		 push	 eax
  001aa	ff 75 d8	 push	 DWORD PTR $T9[ebp]
  001ad	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001b2	83 c4 08	 add	 esp, 8
$LN83@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 51   : 	if (!rTextFileLoader.GetTokenFloat("weaponlength",&fWeaponLength))

  001b5	80 7d d3 00	 cmp	 BYTE PTR tv2091[ebp], 0
  001b9	74 07		 je	 SHORT $LN7@Load

; 52   : 		fWeaponLength = 0.0f;

  001bb	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN7@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  001c2	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 54   : 	mapHitPosition.clear();

  001c5	8d 7e 24	 lea	 edi, DWORD PTR [esi+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  001c8	89 45 c4	 mov	 DWORD PTR __Head$1$[ebp], eax

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  001cb	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  001ce	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  001d2	75 23		 jne	 SHORT $LN93@Load
$LL92@Load:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  001d4	ff 76 08	 push	 DWORD PTR [esi+8]
  001d7	8b cf		 mov	 ecx, edi
  001d9	57		 push	 edi
  001da	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  001df	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  001e1	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  001e3	6a 30		 push	 48			; 00000030H
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001eb	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  001ee	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  001f2	74 e0		 je	 SHORT $LL92@Load
  001f4	8b 45 c4	 mov	 eax, DWORD PTR __Head$1$[ebp]
$LN93@Load:

; 1449 :         _Head->_Parent  = _Head;

  001f7	89 40 04	 mov	 DWORD PTR [eax+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  001fa	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1450 :         _Head->_Left    = _Head;

  001fd	89 00		 mov	 DWORD PTR [eax], eax

; 1451 :         _Head->_Right   = _Head;

  001ff	89 40 08	 mov	 DWORD PTR [eax+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00202	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IHNFHPGN@hitposition@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1452 :         _Scary->_Mysize = 0;

  00207	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0020e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00215	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0021c	c6 45 d8 00	 mov	 BYTE PTR $T8[ebp], 0

; 2339 :         assign(_Ptr);

  00220	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 57   : 	if (rTextFileLoader.GetTokenVector("hitposition",&tv))

  00225	8b 4d c8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00228	8d 45 bc	 lea	 eax, DWORD PTR _tv$[ebp]
  0022b	50		 push	 eax
  0022c	8d 45 d8	 lea	 eax, DWORD PTR $T8[ebp]
  0022f	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0023c	8b 4d ec	 mov	 ecx, DWORD PTR $T8[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 57   : 	if (rTextFileLoader.GetTokenVector("hitposition",&tv))

  0023f	8b f0		 mov	 esi, eax
  00241	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00248	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0024b	72 0d		 jb	 SHORT $LN115@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0024d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0024e	51		 push	 ecx
  0024f	ff 75 d8	 push	 DWORD PTR $T8[ebp]
  00252	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00257	83 c4 08	 add	 esp, 8
$LN115@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 57   : 	if (rTextFileLoader.GetTokenVector("hitposition",&tv))

  0025a	85 f6		 test	 esi, esi
  0025c	0f 84 f2 01 00
	00		 je	 $LN3@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00262	8b 45 bc	 mov	 eax, DWORD PTR _tv$[ebp]
  00265	8b 30		 mov	 esi, DWORD PTR [eax]
  00267	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 61   : 		while(it!=tv->end())

  0026a	0f 84 e4 01 00
	00		 je	 $LN3@Load
$LL2@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  00270	56		 push	 esi

; 75   :         ++_Ptr;

  00271	83 c6 18	 add	 esi, 24			; 00000018H

; 256  :         return _Const_cast(_Mybase::operator->());

  00274	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  00279	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0027c	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00280	72 02		 jb	 SHORT $LN146@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00282	8b 00		 mov	 eax, DWORD PTR [eax]
$LN146@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 65   : 			time = atof(it++->c_str());

  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  0028a	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 65   : 			time = atof(it++->c_str());

  0028b	d9 5d c0	 fstp	 DWORD PTR _time$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0028e	83 c6 18	 add	 esi, 24			; 00000018H

; 256  :         return _Const_cast(_Mybase::operator->());

  00291	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  00296	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00299	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0029d	72 02		 jb	 SHORT $LN159@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0029f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN159@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 66   : 			hp.v3LastPosition.x = atof(it++->c_str());

  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  002a7	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 66   : 			hp.v3LastPosition.x = atof(it++->c_str());

  002a8	d9 5d e0	 fstp	 DWORD PTR _hp$7[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  002ab	83 c6 18	 add	 esi, 24			; 00000018H

; 256  :         return _Const_cast(_Mybase::operator->());

  002ae	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  002b3	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  002b6	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  002ba	72 02		 jb	 SHORT $LN172@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  002bc	8b 00		 mov	 eax, DWORD PTR [eax]
$LN172@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 67   : 			hp.v3LastPosition.y = atof(it++->c_str());

  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  002c4	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 67   : 			hp.v3LastPosition.y = atof(it++->c_str());

  002c5	d9 5d e4	 fstp	 DWORD PTR _hp$7[ebp+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  002c8	83 c6 18	 add	 esi, 24			; 00000018H

; 256  :         return _Const_cast(_Mybase::operator->());

  002cb	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  002d0	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  002d3	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  002d7	72 02		 jb	 SHORT $LN185@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  002d9	8b 00		 mov	 eax, DWORD PTR [eax]
$LN185@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 68   : 			hp.v3LastPosition.z = atof(it++->c_str());

  002db	50		 push	 eax
  002dc	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  002e1	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 68   : 			hp.v3LastPosition.z = atof(it++->c_str());

  002e2	d9 5d e8	 fstp	 DWORD PTR _hp$7[ebp+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  002e5	83 c6 18	 add	 esi, 24			; 00000018H

; 256  :         return _Const_cast(_Mybase::operator->());

  002e8	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  002ed	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  002f0	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  002f4	72 02		 jb	 SHORT $LN198@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  002f6	8b 00		 mov	 eax, DWORD PTR [eax]
$LN198@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 69   : 			hp.v3Position.x = atof(it++->c_str());

  002f8	50		 push	 eax
  002f9	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  002fe	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 69   : 			hp.v3Position.x = atof(it++->c_str());

  002ff	d9 5d d4	 fstp	 DWORD PTR _hp$7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00302	83 c6 18	 add	 esi, 24			; 00000018H

; 256  :         return _Const_cast(_Mybase::operator->());

  00305	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  0030a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0030d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00311	72 02		 jb	 SHORT $LN211@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00313	8b 00		 mov	 eax, DWORD PTR [eax]
$LN211@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 70   : 			hp.v3Position.y = atof(it++->c_str());

  00315	50		 push	 eax
  00316	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  0031b	56		 push	 esi

; 75   :         ++_Ptr;

  0031c	83 c6 18	 add	 esi, 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 70   : 			hp.v3Position.y = atof(it++->c_str());

  0031f	d9 5d d8	 fstp	 DWORD PTR _hp$7[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00322	89 75 cc	 mov	 DWORD PTR _it$1$[ebp], esi

; 256  :         return _Const_cast(_Mybase::operator->());

  00325	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@@Z ; std::_Const_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  0032a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0032d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00331	72 02		 jb	 SHORT $LN224@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00333	8b 00		 mov	 eax, DWORD PTR [eax]
$LN224@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 71   : 			hp.v3Position.z = atof(it++->c_str());

  00335	50		 push	 eax
  00336	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  0033b	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 71   : 			hp.v3Position.z = atof(it++->c_str());

  0033d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1703 :         while (!_Trynode->_Isnil) {

  00340	f3 0f 10 4d c0	 movss	 xmm1, DWORD PTR _time$5[ebp]
  00345	8b d1		 mov	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 71   : 			hp.v3Position.z = atof(it++->c_str());

  00347	d9 5d dc	 fstp	 DWORD PTR _hp$7[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  0034a	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR __Loc$2$[ebp], 0
  00351	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00354	89 45 c4	 mov	 DWORD PTR __Loc$1$[ebp], eax

; 1703 :         while (!_Trynode->_Isnil) {

  00357	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0035b	75 2c		 jne	 SHORT $LN236@Load
  0035d	0f 1f 00	 npad	 3
$LL235@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00360	0f 2f 48 10	 comiss	 xmm1, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00364	89 45 c4	 mov	 DWORD PTR __Loc$1$[ebp], eax

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00367	76 0c		 jbe	 SHORT $LN237@Load

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  00369	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0036c	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR __Loc$2$[ebp], 0

; 1708 :             } else {

  00373	eb 0b		 jmp	 SHORT $LN238@Load
$LN237@Load:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00375	8b d0		 mov	 edx, eax
  00377	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR __Loc$2$[ebp], 1

; 1711 :                 _Trynode                 = _Trynode->_Left;

  0037e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN238@Load:

; 1703 :         while (!_Trynode->_Isnil) {

  00380	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00384	74 da		 je	 SHORT $LL235@Load
  00386	8b 75 cc	 mov	 esi, DWORD PTR _it$1$[ebp]
$LN236@Load:

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00389	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0038d	75 0e		 jne	 SHORT $LN231@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0038f	f3 0f 10 42 10	 movss	 xmm0, DWORD PTR [edx+16]
  00394	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00397	0f 86 93 00 00
	00		 jbe	 $LN230@Load
$LN231@Load:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0039d	81 7f 04 55 55
	55 05		 cmp	 DWORD PTR [edi+4], 89478485 ; 05555555H
  003a4	0f 84 cd 00 00
	00		 je	 $LN308@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  003aa	89 4d cc	 mov	 DWORD PTR __Myhead$6[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  003ad	89 7d b0	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  003b0	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  003b2	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  003b9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  003c0	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  003c5	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  003c7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

  003ce	8d 45 c0	 lea	 eax, DWORD PTR _time$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  003d1	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  003d4	51		 push	 ecx
  003d5	8b d4		 mov	 edx, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

  003d7	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  003d9	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ??$?0ABM$$Z$$V@?$pair@$$CBMUCDynamicSphereInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABM@1@V?$tuple@$$V@1@@Z ; std::pair<float const ,CDynamicSphereInstance>::pair<float const ,CDynamicSphereInstance><float const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  003e6	8d 45 cc	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  003e9	50		 push	 eax
  003ea	57		 push	 edi
  003eb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  003f0	8d 45 cc	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  003f3	50		 push	 eax
  003f4	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  003fd	8d 45 cc	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  00400	50		 push	 eax
  00401	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00404	50		 push	 eax
  00405	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *,std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> * &>
  0040a	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  0040d	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00413	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0041a	57		 push	 edi
  0041b	ff 75 c8	 push	 DWORD PTR __Loc$2$[ebp]
  0041e	8b 7d b8	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00421	ff 75 c4	 push	 DWORD PTR __Loc$1$[ebp]
  00424	83 c7 24	 add	 edi, 36			; 00000024H
  00427	8b cf		 mov	 ecx, edi
  00429	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node
  0042e	8b d0		 mov	 edx, eax
$LN230@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 73   : 			mapHitPosition[time] = hp;

  00430	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _hp$7[ebp]
  00434	8b 4d ec	 mov	 ecx, DWORD PTR _hp$7[ebp+24]
  00437	0f 11 42 14	 movups	 XMMWORD PTR [edx+20], xmm0
  0043b	f3 0f 7e 45 e4	 movq	 xmm0, QWORD PTR _hp$7[ebp+16]
  00440	66 0f d6 42 24	 movq	 QWORD PTR [edx+36], xmm0
  00445	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00448	8b 45 bc	 mov	 eax, DWORD PTR _tv$[ebp]

; 149  :         return _Ptr == _Right._Ptr;

  0044b	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp

; 61   : 		while(it!=tv->end())

  0044e	0f 85 1c fe ff
	ff		 jne	 $LL2@Load
$LN3@Load:

; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	return true;

  00454	b0 01		 mov	 al, 1
  00456	eb 02		 jmp	 SHORT $LN1@Load
$LN318@Load:

; 47   : 		return false;

  00458	32 c0		 xor	 al, al
$LN1@Load:

; 78   : }

  0045a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0045d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00464	59		 pop	 ecx
  00465	5f		 pop	 edi
  00466	5e		 pop	 esi
  00467	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0046a	33 cd		 xor	 ecx, ebp
  0046c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00471	8b e5		 mov	 esp, ebp
  00473	5d		 pop	 ebp
  00474	c2 04 00	 ret	 4
$LN308@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  00477	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN320@Load:
  0047c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$12:
  00028	8d 4d b0	 lea	 ecx, DWORD PTR $T4[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ENDP ; NRaceData::SHitData::Load
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 2039 :         return _Mypair._Myval2._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 2040 :     }

  00002	c3		 ret	 0
?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
__New_ptr$1 = -4					; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00010	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL38@assign:
  00013	8a 06		 mov	 al, BYTE PTR [esi]
  00015	46		 inc	 esi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL38@assign
  0001a	2b f1		 sub	 esi, ecx

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001c	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0001f	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00022	3b f1		 cmp	 esi, ecx
  00024	77 26		 ja	 SHORT $LN6@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00026	8b df		 mov	 ebx, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00028	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0002b	72 02		 jb	 SHORT $LN9@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0002d	8b 1f		 mov	 ebx, DWORD PTR [edi]
$LN9@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002f	56		 push	 esi
  00030	52		 push	 edx
  00031	53		 push	 ebx

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00032	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00035	e8 00 00 00 00	 call	 _memmove
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00041	8b c7		 mov	 eax, edi
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx

; 2985 :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN6@assign:

; 4221 :         if (_New_size > max_size()) {

  0004c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00052	0f 87 91 00 00
	00		 ja	 $LN42@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00058	8b de		 mov	 ebx, esi
  0005a	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0005d	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 07		 jbe	 SHORT $LN23@assign

; 4203 :             return _Max;

  00065	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0006a	eb 1e		 jmp	 SHORT $LN22@assign
$LN23@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 07		 jbe	 SHORT $LN24@assign

; 4207 :             return _Max;

  0007b	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00080	eb 08		 jmp	 SHORT $LN22@assign
$LN24@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00082	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00085	3b d8		 cmp	 ebx, eax
  00087	0f 42 d8	 cmovb	 ebx, eax
$LN22@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008a	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	56		 push	 esi
  00094	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00097	89 45 fc	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009a	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0009e	89 5f 14	 mov	 DWORD PTR [edi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a1	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a6	8b 5d fc	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a9	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000ac	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000af	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000b3	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b6	72 19		 jb	 SHORT $LN17@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000b8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b9	50		 push	 eax
  000ba	ff 37		 push	 DWORD PTR [edi]
  000bc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c1	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000c4	89 1f		 mov	 DWORD PTR [edi], ebx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c6	8b c7		 mov	 eax, edi
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx

; 2985 :     }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 04 00	 ret	 4
$LN17@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000d1	8d 45 fc	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000d4	50		 push	 eax
  000d5	57		 push	 edi
  000d6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000db	83 c4 08	 add	 esp, 8
  000de	8b c7		 mov	 eax, edi
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx

; 2985 :     }

  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
$LN42@assign:

; 4222 :             _Xlen_string(); // result too long

  000e9	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN39@assign:
  000ee	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
